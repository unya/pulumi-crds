// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Sysctl defines a kernel parameter to be set
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatch struct {
	// Name of a property to set
	Name *string `pulumi:"name"`
	// Value of a property to set
	Value *string `pulumi:"value"`
}

// IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArgs and IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput
	ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput
}

// Sysctl defines a kernel parameter to be set
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArgs struct {
	// Name of a property to set
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of a property to set
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArgs) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArgs) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArray and IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArray{ IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArray []IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchInput

func (IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArray) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArray) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput)
}

// Sysctl defines a kernel parameter to be set
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput {
	return o
}

// Name of a property to set
func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Value of a property to set
func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatch) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerations struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects.
	// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect *string `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys.
	// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key *string `pulumi:"key"`
	// Operator represents a key's relationship to the value.
	// Valid operators are Exists and Equal. Defaults to Equal.
	// Exists is equivalent to wildcard for value, so that a pod can
	// tolerate all taints of a particular category.
	Operator *string `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be
	// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
	// it is not set, which means tolerate the taint forever (do not evict). Zero and
	// negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds *int `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to.
	// If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value *string `pulumi:"value"`
}

// IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsInput is an input type that accepts IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArgs and IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsInput` via:
//
//	IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArgs{...}
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput
	ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArgs struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects.
	// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys.
	// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Operator represents a key's relationship to the value.
	// Valid operators are Exists and Equal. Defaults to Equal.
	// Exists is equivalent to wildcard for value, so that a pod can
	// tolerate all taints of a particular category.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be
	// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
	// it is not set, which means tolerate the taint forever (do not evict). Zero and
	// negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds pulumi.IntPtrInput `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to.
	// If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerations)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArgs) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArgs) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput)
}

// IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArray and IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArray{ IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArgs{...} }
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput
	ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput
}

type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArray []IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsInput

func (IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerations)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArray) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArray) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerations)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput {
	return o
}

// Effect indicates the taint effect to match. Empty means match all taint effects.
// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerations) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key is the taint key that the toleration applies to. Empty means match all taint keys.
// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerations) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Operator represents a key's relationship to the value.
// Valid operators are Exists and Equal. Defaults to Equal.
// Exists is equivalent to wildcard for value, so that a pod can
// tolerate all taints of a particular category.
func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerations) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// TolerationSeconds represents the period of time the toleration (which must be
// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
// it is not set, which means tolerate the taint forever (do not evict). Zero and
// negative values will be treated as 0 (evict immediately) by the system.
func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerations) *int {
		return v.TolerationSeconds
	}).(pulumi.IntPtrOutput)
}

// Value is the taint value the toleration matches to.
// If the operator is Exists, the value should be empty, otherwise just a regular string.
func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerations) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerations)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerations {
		return vs[0].([]IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerations)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatch struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects.
	// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect *string `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys.
	// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key *string `pulumi:"key"`
	// Operator represents a key's relationship to the value.
	// Valid operators are Exists and Equal. Defaults to Equal.
	// Exists is equivalent to wildcard for value, so that a pod can
	// tolerate all taints of a particular category.
	Operator *string `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be
	// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
	// it is not set, which means tolerate the taint forever (do not evict). Zero and
	// negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds *int `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to.
	// If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value *string `pulumi:"value"`
}

// IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArgs and IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput
	ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArgs struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects.
	// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys.
	// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Operator represents a key's relationship to the value.
	// Valid operators are Exists and Equal. Defaults to Equal.
	// Exists is equivalent to wildcard for value, so that a pod can
	// tolerate all taints of a particular category.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be
	// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
	// it is not set, which means tolerate the taint forever (do not evict). Zero and
	// negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds pulumi.IntPtrInput `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to.
	// If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArgs) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArgs) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArray and IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArray{ IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArray []IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchInput

func (IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArray) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArray) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput {
	return o
}

// Effect indicates the taint effect to match. Empty means match all taint effects.
// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatch) *string {
		return v.Effect
	}).(pulumi.StringPtrOutput)
}

// Key is the taint key that the toleration applies to. Empty means match all taint keys.
// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Operator represents a key's relationship to the value.
// Valid operators are Exists and Equal. Defaults to Equal.
// Exists is equivalent to wildcard for value, so that a pod can
// tolerate all taints of a particular category.
func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// TolerationSeconds represents the period of time the toleration (which must be
// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
// it is not set, which means tolerate the taint forever (do not evict). Zero and
// negative values will be treated as 0 (evict immediately) by the system.
func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatch) *int {
		return v.TolerationSeconds
	}).(pulumi.IntPtrOutput)
}

// Value is the taint value the toleration matches to.
// If the operator is Exists, the value should be empty, otherwise just a regular string.
func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatch) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by
// creating or modifying Ingress resources in order to route requests for
// '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
// provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01Ingress struct {
	// This field configures the annotation `kubernetes.io/ingress.class` when
	// creating Ingress resources to solve ACME challenges that use this
	// challenge solver. Only one of `class`, `name` or `ingressClassName` may
	// be specified.
	Class *string `pulumi:"class"`
	// This field configures the field `ingressClassName` on the created Ingress
	// resources used to solve ACME challenges that use this challenge solver.
	// This is the recommended way of configuring the ingress class. Only one of
	// `class`, `name` or `ingressClassName` may be specified.
	IngressClassName *string                                            `pulumi:"ingressClassName"`
	IngressTemplate  *IssuerSpecAcmeSolversHttp01IngressIngressTemplate `pulumi:"ingressTemplate"`
	// The name of the ingress resource that should have ACME challenge solving
	// routes inserted into it in order to solve HTTP01 challenges.
	// This is typically used in conjunction with ingress controllers like
	// ingress-gce, which maintains a 1:1 mapping between external IPs and
	// ingress resources. Only one of `class`, `name` or `ingressClassName` may
	// be specified.
	Name        *string                                        `pulumi:"name"`
	PodTemplate *IssuerSpecAcmeSolversHttp01IngressPodTemplate `pulumi:"podTemplate"`
	// Optional service type for Kubernetes solver service. Supported values
	// are NodePort or ClusterIP. If unset, defaults to NodePort.
	ServiceType *string `pulumi:"serviceType"`
}

// IssuerSpecAcmeSolversHttp01IngressInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressArgs and IssuerSpecAcmeSolversHttp01IngressOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressArgs{...}
type IssuerSpecAcmeSolversHttp01IngressInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressOutput() IssuerSpecAcmeSolversHttp01IngressOutput
	ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressOutput
}

// The ingress based HTTP01 challenge solver will solve challenges by
// creating or modifying Ingress resources in order to route requests for
// '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
// provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01IngressArgs struct {
	// This field configures the annotation `kubernetes.io/ingress.class` when
	// creating Ingress resources to solve ACME challenges that use this
	// challenge solver. Only one of `class`, `name` or `ingressClassName` may
	// be specified.
	Class pulumi.StringPtrInput `pulumi:"class"`
	// This field configures the field `ingressClassName` on the created Ingress
	// resources used to solve ACME challenges that use this challenge solver.
	// This is the recommended way of configuring the ingress class. Only one of
	// `class`, `name` or `ingressClassName` may be specified.
	IngressClassName pulumi.StringPtrInput                                     `pulumi:"ingressClassName"`
	IngressTemplate  IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput `pulumi:"ingressTemplate"`
	// The name of the ingress resource that should have ACME challenge solving
	// routes inserted into it in order to solve HTTP01 challenges.
	// This is typically used in conjunction with ingress controllers like
	// ingress-gce, which maintains a 1:1 mapping between external IPs and
	// ingress resources. Only one of `class`, `name` or `ingressClassName` may
	// be specified.
	Name        pulumi.StringPtrInput                                 `pulumi:"name"`
	PodTemplate IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput `pulumi:"podTemplate"`
	// Optional service type for Kubernetes solver service. Supported values
	// are NodePort or ClusterIP. If unset, defaults to NodePort.
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
}

func (IssuerSpecAcmeSolversHttp01IngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressOutput() IssuerSpecAcmeSolversHttp01IngressOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressOutput).ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressArgs, IssuerSpecAcmeSolversHttp01IngressPtr and IssuerSpecAcmeSolversHttp01IngressPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPtrType IssuerSpecAcmeSolversHttp01IngressArgs

func IssuerSpecAcmeSolversHttp01IngressPtr(v *IssuerSpecAcmeSolversHttp01IngressArgs) IssuerSpecAcmeSolversHttp01IngressPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPtrType) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPtrType) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by
// creating or modifying Ingress resources in order to route requests for
// '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
// provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01IngressOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressOutput() IssuerSpecAcmeSolversHttp01IngressOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01Ingress {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// This field configures the annotation `kubernetes.io/ingress.class` when
// creating Ingress resources to solve ACME challenges that use this
// challenge solver. Only one of `class`, `name` or `ingressClassName` may
// be specified.
func (o IssuerSpecAcmeSolversHttp01IngressOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *string { return v.Class }).(pulumi.StringPtrOutput)
}

// This field configures the field `ingressClassName` on the created Ingress
// resources used to solve ACME challenges that use this challenge solver.
// This is the recommended way of configuring the ingress class. Only one of
// `class`, `name` or `ingressClassName` may be specified.
func (o IssuerSpecAcmeSolversHttp01IngressOutput) IngressClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *string { return v.IngressClassName }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) IngressTemplate() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		return v.IngressTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// The name of the ingress resource that should have ACME challenge solving
// routes inserted into it in order to solve HTTP01 challenges.
// This is typically used in conjunction with ingress controllers like
// ingress-gce, which maintains a 1:1 mapping between external IPs and
// ingress resources. Only one of `class`, `name` or `ingressClassName` may
// be specified.
func (o IssuerSpecAcmeSolversHttp01IngressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) PodTemplate() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressPodTemplate {
		return v.PodTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional service type for Kubernetes solver service. Supported values
// are NodePort or ClusterIP. If unset, defaults to NodePort.
func (o IssuerSpecAcmeSolversHttp01IngressOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) IssuerSpecAcmeSolversHttp01Ingress {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01Ingress
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressOutput)
}

// This field configures the annotation `kubernetes.io/ingress.class` when
// creating Ingress resources to solve ACME challenges that use this
// challenge solver. Only one of `class`, `name` or `ingressClassName` may
// be specified.
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.Class
	}).(pulumi.StringPtrOutput)
}

// This field configures the field `ingressClassName` on the created Ingress
// resources used to solve ACME challenges that use this challenge solver.
// This is the recommended way of configuring the ingress class. Only one of
// `class`, `name` or `ingressClassName` may be specified.
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) IngressClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.IngressClassName
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) IngressTemplate() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		if v == nil {
			return nil
		}
		return v.IngressTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// The name of the ingress resource that should have ACME challenge solving
// routes inserted into it in order to solve HTTP01 challenges.
// This is typically used in conjunction with ingress controllers like
// ingress-gce, which maintains a 1:1 mapping between external IPs and
// ingress resources. Only one of `class`, `name` or `ingressClassName` may
// be specified.
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) PodTemplate() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressPodTemplate {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional service type for Kubernetes solver service. Supported values
// are NodePort or ClusterIP. If unset, defaults to NodePort.
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.ServiceType
	}).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver
// ingress used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplate struct {
	Metadata *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata `pulumi:"metadata"`
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs and IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{...}
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput
}

// Optional ingress template used to configure the ACME challenge solver
// ingress used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs struct {
	Metadata IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput `pulumi:"metadata"`
}

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput).ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs, IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtr and IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput
}

type issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs

func IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtr(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver
// ingress used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressIngressTemplate) *IssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplate) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplate) IssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressIngressTemplate
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplate) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata struct {
	// Annotations that should be added to the created ACME HTTP01 solver ingress.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver ingress.
	Labels map[string]string `pulumi:"labels"`
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs and IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{...}
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs struct {
	// Annotations that should be added to the created ACME HTTP01 solver ingress.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver ingress.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput).ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs, IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtr and IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs

func IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtr(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch struct {
	// Annotations that should be added to the created ACME HTTP01 solver ingress.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver ingress.
	Labels map[string]string `pulumi:"labels"`
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchArgs and IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchArgs struct {
	// Annotations that should be added to the created ACME HTTP01 solver ingress.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver ingress.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchArgs, IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtr and IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrType IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchArgs

func IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchArgs) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch) map[string]string {
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch) map[string]string {
		return v.Labels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Optional ingress template used to configure the ACME challenge solver
// ingress used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch struct {
	Metadata *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch `pulumi:"metadata"`
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchArgs and IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput
}

// Optional ingress template used to configure the ACME challenge solver
// ingress used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchArgs struct {
	Metadata IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrInput `pulumi:"metadata"`
}

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput).ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchArgs, IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtr and IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrType IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchArgs

func IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtr(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchArgs) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver
// ingress used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch) *IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch {
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by
// creating or modifying Ingress resources in order to route requests for
// '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
// provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01IngressPatch struct {
	// This field configures the annotation `kubernetes.io/ingress.class` when
	// creating Ingress resources to solve ACME challenges that use this
	// challenge solver. Only one of `class`, `name` or `ingressClassName` may
	// be specified.
	Class *string `pulumi:"class"`
	// This field configures the field `ingressClassName` on the created Ingress
	// resources used to solve ACME challenges that use this challenge solver.
	// This is the recommended way of configuring the ingress class. Only one of
	// `class`, `name` or `ingressClassName` may be specified.
	IngressClassName *string                                                 `pulumi:"ingressClassName"`
	IngressTemplate  *IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch `pulumi:"ingressTemplate"`
	// The name of the ingress resource that should have ACME challenge solving
	// routes inserted into it in order to solve HTTP01 challenges.
	// This is typically used in conjunction with ingress controllers like
	// ingress-gce, which maintains a 1:1 mapping between external IPs and
	// ingress resources. Only one of `class`, `name` or `ingressClassName` may
	// be specified.
	Name        *string                                             `pulumi:"name"`
	PodTemplate *IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch `pulumi:"podTemplate"`
	// Optional service type for Kubernetes solver service. Supported values
	// are NodePort or ClusterIP. If unset, defaults to NodePort.
	ServiceType *string `pulumi:"serviceType"`
}

// IssuerSpecAcmeSolversHttp01IngressPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPatchArgs and IssuerSpecAcmeSolversHttp01IngressPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPatchOutput() IssuerSpecAcmeSolversHttp01IngressPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPatchOutput
}

// The ingress based HTTP01 challenge solver will solve challenges by
// creating or modifying Ingress resources in order to route requests for
// '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
// provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01IngressPatchArgs struct {
	// This field configures the annotation `kubernetes.io/ingress.class` when
	// creating Ingress resources to solve ACME challenges that use this
	// challenge solver. Only one of `class`, `name` or `ingressClassName` may
	// be specified.
	Class pulumi.StringPtrInput `pulumi:"class"`
	// This field configures the field `ingressClassName` on the created Ingress
	// resources used to solve ACME challenges that use this challenge solver.
	// This is the recommended way of configuring the ingress class. Only one of
	// `class`, `name` or `ingressClassName` may be specified.
	IngressClassName pulumi.StringPtrInput                                          `pulumi:"ingressClassName"`
	IngressTemplate  IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrInput `pulumi:"ingressTemplate"`
	// The name of the ingress resource that should have ACME challenge solving
	// routes inserted into it in order to solve HTTP01 challenges.
	// This is typically used in conjunction with ingress controllers like
	// ingress-gce, which maintains a 1:1 mapping between external IPs and
	// ingress resources. Only one of `class`, `name` or `ingressClassName` may
	// be specified.
	Name        pulumi.StringPtrInput                                      `pulumi:"name"`
	PodTemplate IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrInput `pulumi:"podTemplate"`
	// Optional service type for Kubernetes solver service. Supported values
	// are NodePort or ClusterIP. If unset, defaults to NodePort.
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
}

func (IssuerSpecAcmeSolversHttp01IngressPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPatchOutput() IssuerSpecAcmeSolversHttp01IngressPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPatchArgs, IssuerSpecAcmeSolversHttp01IngressPatchPtr and IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPatchPtrType IssuerSpecAcmeSolversHttp01IngressPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPatchArgs) IssuerSpecAcmeSolversHttp01IngressPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by
// creating or modifying Ingress resources in order to route requests for
// '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
// provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01IngressPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPatchOutput() IssuerSpecAcmeSolversHttp01IngressPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPatch) *IssuerSpecAcmeSolversHttp01IngressPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput)
}

// This field configures the annotation `kubernetes.io/ingress.class` when
// creating Ingress resources to solve ACME challenges that use this
// challenge solver. Only one of `class`, `name` or `ingressClassName` may
// be specified.
func (o IssuerSpecAcmeSolversHttp01IngressPatchOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPatch) *string { return v.Class }).(pulumi.StringPtrOutput)
}

// This field configures the field `ingressClassName` on the created Ingress
// resources used to solve ACME challenges that use this challenge solver.
// This is the recommended way of configuring the ingress class. Only one of
// `class`, `name` or `ingressClassName` may be specified.
func (o IssuerSpecAcmeSolversHttp01IngressPatchOutput) IngressClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPatch) *string { return v.IngressClassName }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPatchOutput) IngressTemplate() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPatch) *IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch {
		return v.IngressTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput)
}

// The name of the ingress resource that should have ACME challenge solving
// routes inserted into it in order to solve HTTP01 challenges.
// This is typically used in conjunction with ingress controllers like
// ingress-gce, which maintains a 1:1 mapping between external IPs and
// ingress resources. Only one of `class`, `name` or `ingressClassName` may
// be specified.
func (o IssuerSpecAcmeSolversHttp01IngressPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPatchOutput) PodTemplate() IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch {
		return v.PodTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput)
}

// Optional service type for Kubernetes solver service. Supported values
// are NodePort or ClusterIP. If unset, defaults to NodePort.
func (o IssuerSpecAcmeSolversHttp01IngressPatchOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPatch) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPatch) IssuerSpecAcmeSolversHttp01IngressPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPatchOutput)
}

// This field configures the annotation `kubernetes.io/ingress.class` when
// creating Ingress resources to solve ACME challenges that use this
// challenge solver. Only one of `class`, `name` or `ingressClassName` may
// be specified.
func (o IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPatch) *string {
		if v == nil {
			return nil
		}
		return v.Class
	}).(pulumi.StringPtrOutput)
}

// This field configures the field `ingressClassName` on the created Ingress
// resources used to solve ACME challenges that use this challenge solver.
// This is the recommended way of configuring the ingress class. Only one of
// `class`, `name` or `ingressClassName` may be specified.
func (o IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput) IngressClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPatch) *string {
		if v == nil {
			return nil
		}
		return v.IngressClassName
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput) IngressTemplate() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPatch) *IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatch {
		if v == nil {
			return nil
		}
		return v.IngressTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput)
}

// The name of the ingress resource that should have ACME challenge solving
// routes inserted into it in order to solve HTTP01 challenges.
// This is typically used in conjunction with ingress controllers like
// ingress-gce, which maintains a 1:1 mapping between external IPs and
// ingress resources. Only one of `class`, `name` or `ingressClassName` may
// be specified.
func (o IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput) PodTemplate() IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput)
}

// Optional service type for Kubernetes solver service. Supported values
// are NodePort or ClusterIP. If unset, defaults to NodePort.
func (o IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServiceType
	}).(pulumi.StringPtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods
// used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressPodTemplate struct {
	Metadata *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata `pulumi:"metadata"`
	Spec     *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec     `pulumi:"spec"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput
}

// Optional pod template used to configure the ACME challenge solver pods
// used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs struct {
	Metadata IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput `pulumi:"metadata"`
	Spec     IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput     `pulumi:"spec"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplatePtr and IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplatePtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods
// used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplate {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) Spec() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		return v.Spec
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplate) IssuerSpecAcmeSolversHttp01IngressPodTemplate {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplate
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Spec() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata struct {
	// Annotations that should be added to the created ACME HTTP01 solver pods.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver pods.
	Labels map[string]string `pulumi:"labels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs struct {
	// Annotations that should be added to the created ACME HTTP01 solver pods.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver pods.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch struct {
	// Annotations that should be added to the created ACME HTTP01 solver pods.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver pods.
	Labels map[string]string `pulumi:"labels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchArgs struct {
	// Annotations that should be added to the created ACME HTTP01 solver pods.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver pods.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges.
// Only the 'labels' and 'annotations' fields may be set.
// If labels or annotations overlap with in-built values, the values here
// will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch) map[string]string {
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Optional pod template used to configure the ACME challenge solver pods
// used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch struct {
	Metadata *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch `pulumi:"metadata"`
	Spec     *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch     `pulumi:"spec"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput
}

// Optional pod template used to configure the ACME challenge solver pods
// used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchArgs struct {
	Metadata IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrInput `pulumi:"metadata"`
	Spec     IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrInput     `pulumi:"spec"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods
// used for HTTP01 challenges.
type IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch {
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput) Spec() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch {
		return v.Spec
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch) IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput) Spec() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplatePatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod.
// Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
// All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec struct {
	Affinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity `pulumi:"affinity"`
	// If specified, the pod's imagePullSecrets
	ImagePullSecrets []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets `pulumi:"imagePullSecrets"`
	// NodeSelector is a selector which must be true for the pod to fit on a node.
	// Selector which must match a node's labels for the pod to be scheduled on that node.
	// More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector map[string]string `pulumi:"nodeSelector"`
	// If specified, the pod's priorityClassName.
	PriorityClassName *string                                                           `pulumi:"priorityClassName"`
	SecurityContext   *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext `pulumi:"securityContext"`
	// If specified, the pod's service account
	ServiceAccountName *string `pulumi:"serviceAccountName"`
	// If specified, the pod's tolerations.
	Tolerations []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations `pulumi:"tolerations"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput
}

// PodSpec defines overrides for the HTTP01 challenge solver pod.
// Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
// All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs struct {
	Affinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput `pulumi:"affinity"`
	// If specified, the pod's imagePullSecrets
	ImagePullSecrets IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayInput `pulumi:"imagePullSecrets"`
	// NodeSelector is a selector which must be true for the pod to fit on a node.
	// Selector which must match a node's labels for the pod to be scheduled on that node.
	// More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector pulumi.StringMapInput `pulumi:"nodeSelector"`
	// If specified, the pod's priorityClassName.
	PriorityClassName pulumi.StringPtrInput                                                    `pulumi:"priorityClassName"`
	SecurityContext   IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrInput `pulumi:"securityContext"`
	// If specified, the pod's service account
	ServiceAccountName pulumi.StringPtrInput `pulumi:"serviceAccountName"`
	// If specified, the pod's tolerations.
	Tolerations IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput `pulumi:"tolerations"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod.
// Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
// All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) Affinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		return v.Affinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// If specified, the pod's imagePullSecrets
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ImagePullSecrets() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets {
		return v.ImagePullSecrets
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node.
// Selector which must match a node's labels for the pod to be scheduled on that node.
// More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) map[string]string { return v.NodeSelector }).(pulumi.StringMapOutput)
}

// If specified, the pod's priorityClassName.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) PriorityClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string { return v.PriorityClassName }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) SecurityContext() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext {
		return v.SecurityContext
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput)
}

// If specified, the pod's service account
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string { return v.ServiceAccountName }).(pulumi.StringPtrOutput)
}

// If specified, the pod's tolerations.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) Tolerations() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		return v.Tolerations
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Affinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// If specified, the pod's imagePullSecrets
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ImagePullSecrets() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets {
		if v == nil {
			return nil
		}
		return v.ImagePullSecrets
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node.
// Selector which must match a node's labels for the pod to be scheduled on that node.
// More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodeSelector
	}).(pulumi.StringMapOutput)
}

// If specified, the pod's priorityClassName.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) PriorityClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.PriorityClassName
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) SecurityContext() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext {
		if v == nil {
			return nil
		}
		return v.SecurityContext
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput)
}

// If specified, the pod's service account
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountName
	}).(pulumi.StringPtrOutput)
}

// If specified, the pod's tolerations.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Tolerations() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		if v == nil {
			return nil
		}
		return v.Tolerations
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity struct {
	NodeAffinity    *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity    `pulumi:"nodeAffinity"`
	PodAffinity     *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity     `pulumi:"podAffinity"`
	PodAntiAffinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity `pulumi:"podAntiAffinity"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs struct {
	NodeAffinity    IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput    `pulumi:"nodeAffinity"`
	PodAffinity     IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput     `pulumi:"podAffinity"`
	PodAntiAffinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput `pulumi:"podAntiAffinity"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) NodeAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		return v.NodeAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) PodAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		return v.PodAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) PodAntiAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		return v.PodAntiAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) NodeAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		if v == nil {
			return nil
		}
		return v.NodeAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) PodAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		if v == nil {
			return nil
		}
		return v.PodAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) PodAntiAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		if v == nil {
			return nil
		}
		return v.PodAntiAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node matches the corresponding matchExpressions; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution   `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node matches the corresponding matchExpressions; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput    `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node matches the corresponding matchExpressions; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node matches the corresponding matchExpressions; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node matches the corresponding matchExpressions; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch   `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node matches the corresponding matchExpressions; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrInput    `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node matches the corresponding matchExpressions; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node matches the corresponding matchExpressions; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0
// (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	Preference *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight *int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// An empty preferred scheduling term matches all objects with implicit weight 0
// (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	Preference IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrInput `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0
// (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Preference() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
		return v.Preference
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput)
}

// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) *int {
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0
// (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch struct {
	Preference *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight *int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput
}

// An empty preferred scheduling term matches all objects with implicit weight 0
// (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs struct {
	Preference IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrInput `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0
// (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) Preference() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch {
		return v.Preference
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput)
}

// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch) *int {
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `pulumi:"matchFields"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput)
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput)
}

// A list of node selector requirements by node's labels.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchFields() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return v.MatchFields
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// A list of node selector requirements by node's labels.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput) MatchFields() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		if v == nil {
			return nil
		}
		return v.MatchFields
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// The label key that the selector applies to.
	Key *string `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator *string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// An array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. If the operator is Gt or Lt, the values
// array must have a single element, which will be interpreted as an integer.
// This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch struct {
	// The label key that the selector applies to.
	Key *string `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator *string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// An array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. If the operator is Gt or Lt, the values
// array must have a single element, which will be interpreted as an integer.
// This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// The label key that the selector applies to.
	Key *string `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator *string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// An array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. If the operator is Gt or Lt, the values
// array must have a single element, which will be interpreted as an integer.
// This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch struct {
	// The label key that the selector applies to.
	Key *string `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator *string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// An array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. If the operator is Gt or Lt, the values
// array must have a single element, which will be interpreted as an integer.
// This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput)
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch `pulumi:"matchFields"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayInput `pulumi:"matchFields"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput)
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput)
}

// A list of node selector requirements by node's labels.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput) MatchFields() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch {
		return v.MatchFields
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput)
}

// A list of node selector requirements by node's labels.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput) MatchFields() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch {
		if v == nil {
			return nil
		}
		return v.MatchFields
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput)
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to an update), the system
// may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `pulumi:"nodeSelectorTerms"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to an update), the system
// may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput `pulumi:"nodeSelectorTerms"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to an update), the system
// may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NodeSelectorTerms() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return v.NodeSelectorTerms
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) NodeSelectorTerms() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		if v == nil {
			return nil
		}
		return v.NodeSelectorTerms
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of
// them are ANDed.
// The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `pulumi:"matchFields"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
}

// A null or empty node selector term matches no objects. The requirements of
// them are ANDed.
// The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of
// them are ANDed.
// The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchFields() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return v.MatchFields
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// The label key that the selector applies to.
	Key *string `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator *string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// An array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. If the operator is Gt or Lt, the values
// array must have a single element, which will be interpreted as an integer.
// This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch struct {
	// The label key that the selector applies to.
	Key *string `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator *string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// An array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. If the operator is Gt or Lt, the values
// array must have a single element, which will be interpreted as an integer.
// This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// The label key that the selector applies to.
	Key *string `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator *string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// An array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. If the operator is Gt or Lt, the values
// array must have a single element, which will be interpreted as an integer.
// This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch struct {
	// The label key that the selector applies to.
	Key *string `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator *string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. If the operator is Gt or Lt, the values
	// array must have a single element, which will be interpreted as an integer.
	// This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator
// that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// An array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. If the operator is Gt or Lt, the values
// array must have a single element, which will be interpreted as an integer.
// This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput)
}

// A null or empty node selector term matches no objects. The requirements of
// them are ANDed.
// The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch `pulumi:"matchFields"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput
}

// A null or empty node selector term matches no objects. The requirements of
// them are ANDed.
// The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayInput `pulumi:"matchFields"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of
// them are ANDed.
// The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput) MatchFields() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch {
		return v.MatchFields
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput)
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to an update), the system
// may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch `pulumi:"nodeSelectorTerms"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to an update), the system
// may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayInput `pulumi:"nodeSelectorTerms"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput)
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to an update), the system
// may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) NodeSelectorTerms() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch {
		return v.NodeSelectorTerms
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput) NodeSelectorTerms() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch {
		if v == nil {
			return nil
		}
		return v.NodeSelectorTerms
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput)
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch struct {
	NodeAffinity    *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch    `pulumi:"nodeAffinity"`
	PodAffinity     *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch     `pulumi:"podAffinity"`
	PodAntiAffinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch `pulumi:"podAntiAffinity"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchArgs struct {
	NodeAffinity    IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrInput    `pulumi:"nodeAffinity"`
	PodAffinity     IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrInput     `pulumi:"podAffinity"`
	PodAntiAffinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrInput `pulumi:"podAntiAffinity"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput)
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput) NodeAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch {
		return v.NodeAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput) PodAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch {
		return v.PodAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput) PodAntiAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch {
		return v.PodAntiAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput) NodeAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatch {
		if v == nil {
			return nil
		}
		return v.NodeAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput) PodAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch {
		if v == nil {
			return nil
		}
		return v.PodAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput) PodAntiAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch {
		if v == nil {
			return nil
		}
		return v.PodAntiAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at
	// scheduling time, the pod will not be scheduled onto the node.
	// If the affinity requirements specified by this field cease to be met
	// at some point during pod execution (e.g. due to a pod label update), the
	// system may or may not try to eventually evict the pod from its node.
	// When there are multiple elements, the lists of nodes corresponding to each
	// podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at
	// scheduling time, the pod will not be scheduled onto the node.
	// If the affinity requirements specified by this field cease to be met
	// at some point during pod execution (e.g. due to a pod label update), the
	// system may or may not try to eventually evict the pod from its node.
	// When there are multiple elements, the lists of nodes corresponding to each
	// podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to a pod label update), the
// system may or may not try to eventually evict the pod from its node.
// When there are multiple elements, the lists of nodes corresponding to each
// podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to a pod label update), the
// system may or may not try to eventually evict the pod from its node.
// When there are multiple elements, the lists of nodes corresponding to each
// podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at
	// scheduling time, the pod will not be scheduled onto the node.
	// If the affinity requirements specified by this field cease to be met
	// at some point during pod execution (e.g. due to a pod label update), the
	// system may or may not try to eventually evict the pod from its node.
	// When there are multiple elements, the lists of nodes corresponding to each
	// podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at
	// scheduling time, the pod will not be scheduled onto the node.
	// If the affinity requirements specified by this field cease to be met
	// at some point during pod execution (e.g. due to a pod label update), the
	// system may or may not try to eventually evict the pod from its node.
	// When there are multiple elements, the lists of nodes corresponding to each
	// podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to a pod label update), the
// system may or may not try to eventually evict the pod from its node.
// When there are multiple elements, the lists of nodes corresponding to each
// podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

// If the affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to a pod label update), the
// system may or may not try to eventually evict the pod from its node.
// When there are multiple elements, the lists of nodes corresponding to each
// podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	PodAffinityTerm *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm,
	// in the range 1-100.
	Weight *int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm,
	// in the range 1-100.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput)
}

// weight associated with matching the corresponding podAffinityTerm,
// in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) *int {
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch struct {
	PodAffinityTerm *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm,
	// in the range 1-100.
	Weight *int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs struct {
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm,
	// in the range 1-100.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) PodAffinityTerm() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch {
		return v.PodAffinityTerm
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput)
}

// weight associated with matching the corresponding podAffinityTerm,
// in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch) *int {
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys []string `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys []string                                                                                                                                             `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey *string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys pulumi.StringArrayInput `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                                                     `pulumi:"mismatchLabelKeys"`
	NamespaceSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey pulumi.StringPtrInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		if v == nil {
			return nil
		}
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		if v == nil {
			return nil
		}
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		if v == nil {
			return nil
		}
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		if v == nil {
			return nil
		}
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *string {
		if v == nil {
			return nil
		}
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch struct {
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys []string `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys []string                                                                                                                                                  `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey *string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs struct {
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys pulumi.StringArrayInput `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                                                          `pulumi:"mismatchLabelKeys"`
	NamespaceSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey pulumi.StringPtrInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		if v == nil {
			return nil
		}
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		if v == nil {
			return nil
		}
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		if v == nil {
			return nil
		}
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		if v == nil {
			return nil
		}
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *string {
		if v == nil {
			return nil
		}
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys []string `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys []string                                                                                                                             `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey *string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys pulumi.StringArrayInput `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                                     `pulumi:"mismatchLabelKeys"`
	NamespaceSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey pulumi.StringPtrInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch struct {
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys []string `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys []string                                                                                                                                  `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey *string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs struct {
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys pulumi.StringArrayInput `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                                          `pulumi:"mismatchLabelKeys"`
	NamespaceSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey pulumi.StringPtrInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch {
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the anti-affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling anti-affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at
	// scheduling time, the pod will not be scheduled onto the node.
	// If the anti-affinity requirements specified by this field cease to be met
	// at some point during pod execution (e.g. due to a pod label update), the
	// system may or may not try to eventually evict the pod from its node.
	// When there are multiple elements, the lists of nodes corresponding to each
	// podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the anti-affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling anti-affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at
	// scheduling time, the pod will not be scheduled onto the node.
	// If the anti-affinity requirements specified by this field cease to be met
	// at some point during pod execution (e.g. due to a pod label update), the
	// system may or may not try to eventually evict the pod from its node.
	// When there are multiple elements, the lists of nodes corresponding to each
	// podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the anti-affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling anti-affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the anti-affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to a pod label update), the
// system may or may not try to eventually evict the pod from its node.
// When there are multiple elements, the lists of nodes corresponding to each
// podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the anti-affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling anti-affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the anti-affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to a pod label update), the
// system may or may not try to eventually evict the pod from its node.
// When there are multiple elements, the lists of nodes corresponding to each
// podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the anti-affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling anti-affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at
	// scheduling time, the pod will not be scheduled onto the node.
	// If the anti-affinity requirements specified by this field cease to be met
	// at some point during pod execution (e.g. due to a pod label update), the
	// system may or may not try to eventually evict the pod from its node.
	// When there are multiple elements, the lists of nodes corresponding to each
	// podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy
	// the anti-affinity expressions specified by this field, but it may choose
	// a node that violates one or more of the expressions. The node that is
	// most preferred is the one with the greatest sum of weights, i.e.
	// for each node that meets all of the scheduling requirements (resource
	// request, requiredDuringScheduling anti-affinity expressions, etc.),
	// compute a sum by iterating through the elements of this field and adding
	// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
	// node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at
	// scheduling time, the pod will not be scheduled onto the node.
	// If the anti-affinity requirements specified by this field cease to be met
	// at some point during pod execution (e.g. due to a pod label update), the
	// system may or may not try to eventually evict the pod from its node.
	// When there are multiple elements, the lists of nodes corresponding to each
	// podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the anti-affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling anti-affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the anti-affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to a pod label update), the
// system may or may not try to eventually evict the pod from its node.
// When there are multiple elements, the lists of nodes corresponding to each
// podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy
// the anti-affinity expressions specified by this field, but it may choose
// a node that violates one or more of the expressions. The node that is
// most preferred is the one with the greatest sum of weights, i.e.
// for each node that meets all of the scheduling requirements (resource
// request, requiredDuringScheduling anti-affinity expressions, etc.),
// compute a sum by iterating through the elements of this field and adding
// "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
// node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at
// scheduling time, the pod will not be scheduled onto the node.
// If the anti-affinity requirements specified by this field cease to be met
// at some point during pod execution (e.g. due to a pod label update), the
// system may or may not try to eventually evict the pod from its node.
// When there are multiple elements, the lists of nodes corresponding to each
// podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	PodAffinityTerm *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm,
	// in the range 1-100.
	Weight *int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm,
	// in the range 1-100.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput)
}

// weight associated with matching the corresponding podAffinityTerm,
// in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) *int {
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch struct {
	PodAffinityTerm *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm,
	// in the range 1-100.
	Weight *int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs struct {
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm,
	// in the range 1-100.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) PodAffinityTerm() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch {
		return v.PodAffinityTerm
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput)
}

// weight associated with matching the corresponding podAffinityTerm,
// in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch) *int {
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys []string `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys []string                                                                                                                                                 `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey *string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys pulumi.StringArrayInput `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                                                         `pulumi:"mismatchLabelKeys"`
	NamespaceSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey pulumi.StringPtrInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		if v == nil {
			return nil
		}
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		if v == nil {
			return nil
		}
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		if v == nil {
			return nil
		}
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		if v == nil {
			return nil
		}
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *string {
		if v == nil {
			return nil
		}
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch struct {
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys []string `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys []string                                                                                                                                                      `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey *string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs struct {
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys pulumi.StringArrayInput `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                                                              `pulumi:"mismatchLabelKeys"`
	NamespaceSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey pulumi.StringPtrInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		if v == nil {
			return nil
		}
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		if v == nil {
			return nil
		}
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		if v == nil {
			return nil
		}
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		if v == nil {
			return nil
		}
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *string {
		if v == nil {
			return nil
		}
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys []string `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys []string                                                                                                                                 `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey *string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys pulumi.StringArrayInput `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                                         `pulumi:"mismatchLabelKeys"`
	NamespaceSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey pulumi.StringPtrInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput)
}

// A label query over a set of resources, in this case pods.
// If it's null, this PodAffinityTerm matches with no Pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput)
}

// A label query over the set of namespaces that the term applies to.
// The term is applied to the union of the namespaces selected by this field
// and the ones listed in the namespaces field.
// null selector and null or empty namespaces list means "this pod's namespace".
// An empty selector ({}) matches all namespaces.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch struct {
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys []string `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys []string                                                                                                                                      `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey *string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs struct {
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
	// Also, matchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MatchLabelKeys pulumi.StringArrayInput `pulumi:"matchLabelKeys"`
	// MismatchLabelKeys is a set of pod label keys to select which pods will
	// be taken into consideration. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
	// to select the group of existing pods which pods will be taken into consideration
	// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
	// pod labels will be ignored. The default value is empty.
	// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
	// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
	// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                                              `pulumi:"mismatchLabelKeys"`
	NamespaceSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput `pulumi:"namespaceSelector"`
	// namespaces specifies a static list of namespace names that the term applies to.
	// The term is applied to the union of the namespaces listed in this field
	// and the ones selected by namespaceSelector.
	// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
	// the labelSelector in the specified namespaces, where co-located is defined as running on a node
	// whose value of the label with key topologyKey matches that of any node on which any of the
	// selected pods is running.
	// Empty topologyKey is not allowed.
	TopologyKey pulumi.StringPtrInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector
// relative to the given namespace(s)) that this pod should be
// co-located (affinity) or not co-located (anti-affinity) with,
// where co-located is defined as running on a node whose value of
// the label with key <topologyKey> matches that of any node on which
// a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both matchLabelKeys and labelSelector.
// Also, matchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

// MismatchLabelKeys is a set of pod label keys to select which pods will
// be taken into consideration. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
// to select the group of existing pods which pods will be taken into consideration
// for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
// pod labels will be ignored. The default value is empty.
// The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
// Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
// This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) NamespaceSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch {
		return v.NamespaceSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput)
}

// namespaces specifies a static list of namespace names that the term applies to.
// The term is applied to the union of the namespaces listed in this field
// and the ones selected by namespaceSelector.
// null or empty namespaces list and null namespaceSelector means "this pod's namespace".
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
// the labelSelector in the specified namespaces, where co-located is defined as running on a node
// whose value of the label with key topologyKey matches that of any node on which any of the
// selected pods is running.
// Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// LocalObjectReference contains enough information to let you locate the
// referenced object inside the same namespace.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput
}

// LocalObjectReference contains enough information to let you locate the
// referenced object inside the same namespace.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput)
}

// LocalObjectReference contains enough information to let you locate the
// referenced object inside the same namespace.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput {
	return o
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecrets)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput)
}

// LocalObjectReference contains enough information to let you locate the
// referenced object inside the same namespace.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatch struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput
}

// LocalObjectReference contains enough information to let you locate the
// referenced object inside the same namespace.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput)
}

// LocalObjectReference contains enough information to let you locate the
// referenced object inside the same namespace.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput {
	return o
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod.
// Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
// All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch struct {
	Affinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch `pulumi:"affinity"`
	// If specified, the pod's imagePullSecrets
	ImagePullSecrets []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatch `pulumi:"imagePullSecrets"`
	// NodeSelector is a selector which must be true for the pod to fit on a node.
	// Selector which must match a node's labels for the pod to be scheduled on that node.
	// More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector map[string]string `pulumi:"nodeSelector"`
	// If specified, the pod's priorityClassName.
	PriorityClassName *string                                                                `pulumi:"priorityClassName"`
	SecurityContext   *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch `pulumi:"securityContext"`
	// If specified, the pod's service account
	ServiceAccountName *string `pulumi:"serviceAccountName"`
	// If specified, the pod's tolerations.
	Tolerations []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch `pulumi:"tolerations"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput
}

// PodSpec defines overrides for the HTTP01 challenge solver pod.
// Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
// All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchArgs struct {
	Affinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrInput `pulumi:"affinity"`
	// If specified, the pod's imagePullSecrets
	ImagePullSecrets IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayInput `pulumi:"imagePullSecrets"`
	// NodeSelector is a selector which must be true for the pod to fit on a node.
	// Selector which must match a node's labels for the pod to be scheduled on that node.
	// More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector pulumi.StringMapInput `pulumi:"nodeSelector"`
	// If specified, the pod's priorityClassName.
	PriorityClassName pulumi.StringPtrInput                                                         `pulumi:"priorityClassName"`
	SecurityContext   IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrInput `pulumi:"securityContext"`
	// If specified, the pod's service account
	ServiceAccountName pulumi.StringPtrInput `pulumi:"serviceAccountName"`
	// If specified, the pod's tolerations.
	Tolerations IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayInput `pulumi:"tolerations"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod.
// Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
// All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput) Affinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch {
		return v.Affinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput)
}

// If specified, the pod's imagePullSecrets
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput) ImagePullSecrets() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatch {
		return v.ImagePullSecrets
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node.
// Selector which must match a node's labels for the pod to be scheduled on that node.
// More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) map[string]string {
		return v.NodeSelector
	}).(pulumi.StringMapOutput)
}

// If specified, the pod's priorityClassName.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput) PriorityClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) *string { return v.PriorityClassName }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput) SecurityContext() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch {
		return v.SecurityContext
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput)
}

// If specified, the pod's service account
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) *string { return v.ServiceAccountName }).(pulumi.StringPtrOutput)
}

// If specified, the pod's tolerations.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput) Tolerations() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch {
		return v.Tolerations
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput) Affinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatch {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput)
}

// If specified, the pod's imagePullSecrets
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput) ImagePullSecrets() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatch {
		if v == nil {
			return nil
		}
		return v.ImagePullSecrets
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node.
// Selector which must match a node's labels for the pod to be scheduled on that node.
// More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodeSelector
	}).(pulumi.StringMapOutput)
}

// If specified, the pod's priorityClassName.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput) PriorityClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.PriorityClassName
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput) SecurityContext() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch {
		if v == nil {
			return nil
		}
		return v.SecurityContext
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput)
}

// If specified, the pod's service account
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountName
	}).(pulumi.StringPtrOutput)
}

// If specified, the pod's tolerations.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput) Tolerations() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch {
		if v == nil {
			return nil
		}
		return v.Tolerations
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput)
}

// If specified, the pod's security context
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext struct {
	// A special supplemental group that applies to all containers in a pod.
	// Some volume types allow the Kubelet to change the ownership of that volume
	// to be owned by the pod:
	//
	// 1. The owning GID will be the FSGroup
	// 2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
	// 3. The permission bits are OR'd with rw-rw----
	//
	// If unset, the Kubelet will not modify the ownership and permissions of any volume.
	// Note that this field cannot be set when spec.os.name is windows.
	FsGroup *int `pulumi:"fsGroup"`
	// fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
	// before being exposed inside Pod. This field will only apply to
	// volume types which support fsGroup based ownership(and permissions).
	// It will have no effect on ephemeral volume types such as: secret, configmaps
	// and emptydir.
	// Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
	// Note that this field cannot be set when spec.os.name is windows.
	FsGroupChangePolicy *string `pulumi:"fsGroupChangePolicy"`
	// The GID to run the entrypoint of the container process.
	// Uses runtime default if unset.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence
	// for that container.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsGroup *int `pulumi:"runAsGroup"`
	// Indicates that the container must run as a non-root user.
	// If true, the Kubelet will validate the image at runtime to ensure that it
	// does not run as UID 0 (root) and fail to start the container if it does.
	// If unset or false, no such validation will be performed.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsNonRoot *bool `pulumi:"runAsNonRoot"`
	// The UID to run the entrypoint of the container process.
	// Defaults to user specified in image metadata if unspecified.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence
	// for that container.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsUser      *int                                                                            `pulumi:"runAsUser"`
	SeLinuxOptions *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions `pulumi:"seLinuxOptions"`
	SeccompProfile *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile `pulumi:"seccompProfile"`
	// A list of groups applied to the first process run in each container, in addition
	// to the container's primary GID, the fsGroup (if specified), and group memberships
	// defined in the container image for the uid of the container process. If unspecified,
	// no additional groups are added to any container. Note that group memberships
	// defined in the container image for the uid of the container process are still effective,
	// even if they are not included in this list.
	// Note that this field cannot be set when spec.os.name is windows.
	SupplementalGroups []int `pulumi:"supplementalGroups"`
	// Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
	// sysctls (by the container runtime) might fail to launch.
	// Note that this field cannot be set when spec.os.name is windows.
	Sysctls []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctls `pulumi:"sysctls"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput
}

// If specified, the pod's security context
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextArgs struct {
	// A special supplemental group that applies to all containers in a pod.
	// Some volume types allow the Kubelet to change the ownership of that volume
	// to be owned by the pod:
	//
	// 1. The owning GID will be the FSGroup
	// 2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
	// 3. The permission bits are OR'd with rw-rw----
	//
	// If unset, the Kubelet will not modify the ownership and permissions of any volume.
	// Note that this field cannot be set when spec.os.name is windows.
	FsGroup pulumi.IntPtrInput `pulumi:"fsGroup"`
	// fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
	// before being exposed inside Pod. This field will only apply to
	// volume types which support fsGroup based ownership(and permissions).
	// It will have no effect on ephemeral volume types such as: secret, configmaps
	// and emptydir.
	// Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
	// Note that this field cannot be set when spec.os.name is windows.
	FsGroupChangePolicy pulumi.StringPtrInput `pulumi:"fsGroupChangePolicy"`
	// The GID to run the entrypoint of the container process.
	// Uses runtime default if unset.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence
	// for that container.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsGroup pulumi.IntPtrInput `pulumi:"runAsGroup"`
	// Indicates that the container must run as a non-root user.
	// If true, the Kubelet will validate the image at runtime to ensure that it
	// does not run as UID 0 (root) and fail to start the container if it does.
	// If unset or false, no such validation will be performed.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsNonRoot pulumi.BoolPtrInput `pulumi:"runAsNonRoot"`
	// The UID to run the entrypoint of the container process.
	// Defaults to user specified in image metadata if unspecified.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence
	// for that container.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsUser      pulumi.IntPtrInput                                                                     `pulumi:"runAsUser"`
	SeLinuxOptions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrInput `pulumi:"seLinuxOptions"`
	SeccompProfile IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrInput `pulumi:"seccompProfile"`
	// A list of groups applied to the first process run in each container, in addition
	// to the container's primary GID, the fsGroup (if specified), and group memberships
	// defined in the container image for the uid of the container process. If unspecified,
	// no additional groups are added to any container. Note that group memberships
	// defined in the container image for the uid of the container process are still effective,
	// even if they are not included in this list.
	// Note that this field cannot be set when spec.os.name is windows.
	SupplementalGroups pulumi.IntArrayInput `pulumi:"supplementalGroups"`
	// Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
	// sysctls (by the container runtime) might fail to launch.
	// Note that this field cannot be set when spec.os.name is windows.
	Sysctls IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayInput `pulumi:"sysctls"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput)
}

// If specified, the pod's security context
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput)
}

// A special supplemental group that applies to all containers in a pod.
// Some volume types allow the Kubelet to change the ownership of that volume
// to be owned by the pod:
//
// 1. The owning GID will be the FSGroup
// 2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
// 3. The permission bits are OR'd with rw-rw----
//
// If unset, the Kubelet will not modify the ownership and permissions of any volume.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput) FsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *int { return v.FsGroup }).(pulumi.IntPtrOutput)
}

// fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
// before being exposed inside Pod. This field will only apply to
// volume types which support fsGroup based ownership(and permissions).
// It will have no effect on ephemeral volume types such as: secret, configmaps
// and emptydir.
// Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput) FsGroupChangePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *string {
		return v.FsGroupChangePolicy
	}).(pulumi.StringPtrOutput)
}

// The GID to run the entrypoint of the container process.
// Uses runtime default if unset.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence
// for that container.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *int { return v.RunAsGroup }).(pulumi.IntPtrOutput)
}

// Indicates that the container must run as a non-root user.
// If true, the Kubelet will validate the image at runtime to ensure that it
// does not run as UID 0 (root) and fail to start the container if it does.
// If unset or false, no such validation will be performed.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *bool { return v.RunAsNonRoot }).(pulumi.BoolPtrOutput)
}

// The UID to run the entrypoint of the container process.
// Defaults to user specified in image metadata if unspecified.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence
// for that container.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *int { return v.RunAsUser }).(pulumi.IntPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput) SeLinuxOptions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions {
		return v.SeLinuxOptions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput) SeccompProfile() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile {
		return v.SeccompProfile
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput)
}

// A list of groups applied to the first process run in each container, in addition
// to the container's primary GID, the fsGroup (if specified), and group memberships
// defined in the container image for the uid of the container process. If unspecified,
// no additional groups are added to any container. Note that group memberships
// defined in the container image for the uid of the container process are still effective,
// even if they are not included in this list.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput) SupplementalGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) []int {
		return v.SupplementalGroups
	}).(pulumi.IntArrayOutput)
}

// Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
// sysctls (by the container runtime) might fail to launch.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput) Sysctls() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctls {
		return v.Sysctls
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput)
}

// A special supplemental group that applies to all containers in a pod.
// Some volume types allow the Kubelet to change the ownership of that volume
// to be owned by the pod:
//
// 1. The owning GID will be the FSGroup
// 2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
// 3. The permission bits are OR'd with rw-rw----
//
// If unset, the Kubelet will not modify the ownership and permissions of any volume.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput) FsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.FsGroup
	}).(pulumi.IntPtrOutput)
}

// fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
// before being exposed inside Pod. This field will only apply to
// volume types which support fsGroup based ownership(and permissions).
// It will have no effect on ephemeral volume types such as: secret, configmaps
// and emptydir.
// Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput) FsGroupChangePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *string {
		if v == nil {
			return nil
		}
		return v.FsGroupChangePolicy
	}).(pulumi.StringPtrOutput)
}

// The GID to run the entrypoint of the container process.
// Uses runtime default if unset.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence
// for that container.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsGroup
	}).(pulumi.IntPtrOutput)
}

// Indicates that the container must run as a non-root user.
// If true, the Kubelet will validate the image at runtime to ensure that it
// does not run as UID 0 (root) and fail to start the container if it does.
// If unset or false, no such validation will be performed.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.RunAsNonRoot
	}).(pulumi.BoolPtrOutput)
}

// The UID to run the entrypoint of the container process.
// Defaults to user specified in image metadata if unspecified.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence
// for that container.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsUser
	}).(pulumi.IntPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput) SeLinuxOptions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions {
		if v == nil {
			return nil
		}
		return v.SeLinuxOptions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput) SeccompProfile() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile {
		if v == nil {
			return nil
		}
		return v.SeccompProfile
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput)
}

// A list of groups applied to the first process run in each container, in addition
// to the container's primary GID, the fsGroup (if specified), and group memberships
// defined in the container image for the uid of the container process. If unspecified,
// no additional groups are added to any container. Note that group memberships
// defined in the container image for the uid of the container process are still effective,
// even if they are not included in this list.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput) SupplementalGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) []int {
		if v == nil {
			return nil
		}
		return v.SupplementalGroups
	}).(pulumi.IntArrayOutput)
}

// Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
// sysctls (by the container runtime) might fail to launch.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput) Sysctls() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContext) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctls {
		if v == nil {
			return nil
		}
		return v.Sysctls
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput)
}

// If specified, the pod's security context
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch struct {
	// A special supplemental group that applies to all containers in a pod.
	// Some volume types allow the Kubelet to change the ownership of that volume
	// to be owned by the pod:
	//
	// 1. The owning GID will be the FSGroup
	// 2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
	// 3. The permission bits are OR'd with rw-rw----
	//
	// If unset, the Kubelet will not modify the ownership and permissions of any volume.
	// Note that this field cannot be set when spec.os.name is windows.
	FsGroup *int `pulumi:"fsGroup"`
	// fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
	// before being exposed inside Pod. This field will only apply to
	// volume types which support fsGroup based ownership(and permissions).
	// It will have no effect on ephemeral volume types such as: secret, configmaps
	// and emptydir.
	// Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
	// Note that this field cannot be set when spec.os.name is windows.
	FsGroupChangePolicy *string `pulumi:"fsGroupChangePolicy"`
	// The GID to run the entrypoint of the container process.
	// Uses runtime default if unset.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence
	// for that container.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsGroup *int `pulumi:"runAsGroup"`
	// Indicates that the container must run as a non-root user.
	// If true, the Kubelet will validate the image at runtime to ensure that it
	// does not run as UID 0 (root) and fail to start the container if it does.
	// If unset or false, no such validation will be performed.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsNonRoot *bool `pulumi:"runAsNonRoot"`
	// The UID to run the entrypoint of the container process.
	// Defaults to user specified in image metadata if unspecified.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence
	// for that container.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsUser      *int                                                                                 `pulumi:"runAsUser"`
	SeLinuxOptions *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch `pulumi:"seLinuxOptions"`
	SeccompProfile *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch `pulumi:"seccompProfile"`
	// A list of groups applied to the first process run in each container, in addition
	// to the container's primary GID, the fsGroup (if specified), and group memberships
	// defined in the container image for the uid of the container process. If unspecified,
	// no additional groups are added to any container. Note that group memberships
	// defined in the container image for the uid of the container process are still effective,
	// even if they are not included in this list.
	// Note that this field cannot be set when spec.os.name is windows.
	SupplementalGroups []int `pulumi:"supplementalGroups"`
	// Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
	// sysctls (by the container runtime) might fail to launch.
	// Note that this field cannot be set when spec.os.name is windows.
	Sysctls []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatch `pulumi:"sysctls"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput
}

// If specified, the pod's security context
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchArgs struct {
	// A special supplemental group that applies to all containers in a pod.
	// Some volume types allow the Kubelet to change the ownership of that volume
	// to be owned by the pod:
	//
	// 1. The owning GID will be the FSGroup
	// 2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
	// 3. The permission bits are OR'd with rw-rw----
	//
	// If unset, the Kubelet will not modify the ownership and permissions of any volume.
	// Note that this field cannot be set when spec.os.name is windows.
	FsGroup pulumi.IntPtrInput `pulumi:"fsGroup"`
	// fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
	// before being exposed inside Pod. This field will only apply to
	// volume types which support fsGroup based ownership(and permissions).
	// It will have no effect on ephemeral volume types such as: secret, configmaps
	// and emptydir.
	// Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
	// Note that this field cannot be set when spec.os.name is windows.
	FsGroupChangePolicy pulumi.StringPtrInput `pulumi:"fsGroupChangePolicy"`
	// The GID to run the entrypoint of the container process.
	// Uses runtime default if unset.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence
	// for that container.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsGroup pulumi.IntPtrInput `pulumi:"runAsGroup"`
	// Indicates that the container must run as a non-root user.
	// If true, the Kubelet will validate the image at runtime to ensure that it
	// does not run as UID 0 (root) and fail to start the container if it does.
	// If unset or false, no such validation will be performed.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsNonRoot pulumi.BoolPtrInput `pulumi:"runAsNonRoot"`
	// The UID to run the entrypoint of the container process.
	// Defaults to user specified in image metadata if unspecified.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence
	// for that container.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsUser      pulumi.IntPtrInput                                                                          `pulumi:"runAsUser"`
	SeLinuxOptions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrInput `pulumi:"seLinuxOptions"`
	SeccompProfile IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrInput `pulumi:"seccompProfile"`
	// A list of groups applied to the first process run in each container, in addition
	// to the container's primary GID, the fsGroup (if specified), and group memberships
	// defined in the container image for the uid of the container process. If unspecified,
	// no additional groups are added to any container. Note that group memberships
	// defined in the container image for the uid of the container process are still effective,
	// even if they are not included in this list.
	// Note that this field cannot be set when spec.os.name is windows.
	SupplementalGroups pulumi.IntArrayInput `pulumi:"supplementalGroups"`
	// Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
	// sysctls (by the container runtime) might fail to launch.
	// Note that this field cannot be set when spec.os.name is windows.
	Sysctls IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayInput `pulumi:"sysctls"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput)
}

// If specified, the pod's security context
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput)
}

// A special supplemental group that applies to all containers in a pod.
// Some volume types allow the Kubelet to change the ownership of that volume
// to be owned by the pod:
//
// 1. The owning GID will be the FSGroup
// 2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
// 3. The permission bits are OR'd with rw-rw----
//
// If unset, the Kubelet will not modify the ownership and permissions of any volume.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput) FsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *int { return v.FsGroup }).(pulumi.IntPtrOutput)
}

// fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
// before being exposed inside Pod. This field will only apply to
// volume types which support fsGroup based ownership(and permissions).
// It will have no effect on ephemeral volume types such as: secret, configmaps
// and emptydir.
// Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput) FsGroupChangePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *string {
		return v.FsGroupChangePolicy
	}).(pulumi.StringPtrOutput)
}

// The GID to run the entrypoint of the container process.
// Uses runtime default if unset.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence
// for that container.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *int {
		return v.RunAsGroup
	}).(pulumi.IntPtrOutput)
}

// Indicates that the container must run as a non-root user.
// If true, the Kubelet will validate the image at runtime to ensure that it
// does not run as UID 0 (root) and fail to start the container if it does.
// If unset or false, no such validation will be performed.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *bool {
		return v.RunAsNonRoot
	}).(pulumi.BoolPtrOutput)
}

// The UID to run the entrypoint of the container process.
// Defaults to user specified in image metadata if unspecified.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence
// for that container.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *int { return v.RunAsUser }).(pulumi.IntPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput) SeLinuxOptions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch {
		return v.SeLinuxOptions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput) SeccompProfile() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch {
		return v.SeccompProfile
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput)
}

// A list of groups applied to the first process run in each container, in addition
// to the container's primary GID, the fsGroup (if specified), and group memberships
// defined in the container image for the uid of the container process. If unspecified,
// no additional groups are added to any container. Note that group memberships
// defined in the container image for the uid of the container process are still effective,
// even if they are not included in this list.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput) SupplementalGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) []int {
		return v.SupplementalGroups
	}).(pulumi.IntArrayOutput)
}

// Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
// sysctls (by the container runtime) might fail to launch.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput) Sysctls() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatch {
		return v.Sysctls
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput)
}

// A special supplemental group that applies to all containers in a pod.
// Some volume types allow the Kubelet to change the ownership of that volume
// to be owned by the pod:
//
// 1. The owning GID will be the FSGroup
// 2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
// 3. The permission bits are OR'd with rw-rw----
//
// If unset, the Kubelet will not modify the ownership and permissions of any volume.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput) FsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *int {
		if v == nil {
			return nil
		}
		return v.FsGroup
	}).(pulumi.IntPtrOutput)
}

// fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
// before being exposed inside Pod. This field will only apply to
// volume types which support fsGroup based ownership(and permissions).
// It will have no effect on ephemeral volume types such as: secret, configmaps
// and emptydir.
// Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput) FsGroupChangePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *string {
		if v == nil {
			return nil
		}
		return v.FsGroupChangePolicy
	}).(pulumi.StringPtrOutput)
}

// The GID to run the entrypoint of the container process.
// Uses runtime default if unset.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence
// for that container.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *int {
		if v == nil {
			return nil
		}
		return v.RunAsGroup
	}).(pulumi.IntPtrOutput)
}

// Indicates that the container must run as a non-root user.
// If true, the Kubelet will validate the image at runtime to ensure that it
// does not run as UID 0 (root) and fail to start the container if it does.
// If unset or false, no such validation will be performed.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *bool {
		if v == nil {
			return nil
		}
		return v.RunAsNonRoot
	}).(pulumi.BoolPtrOutput)
}

// The UID to run the entrypoint of the container process.
// Defaults to user specified in image metadata if unspecified.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence
// for that container.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *int {
		if v == nil {
			return nil
		}
		return v.RunAsUser
	}).(pulumi.IntPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput) SeLinuxOptions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch {
		if v == nil {
			return nil
		}
		return v.SeLinuxOptions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput) SeccompProfile() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch {
		if v == nil {
			return nil
		}
		return v.SeccompProfile
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput)
}

// A list of groups applied to the first process run in each container, in addition
// to the container's primary GID, the fsGroup (if specified), and group memberships
// defined in the container image for the uid of the container process. If unspecified,
// no additional groups are added to any container. Note that group memberships
// defined in the container image for the uid of the container process are still effective,
// even if they are not included in this list.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput) SupplementalGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) []int {
		if v == nil {
			return nil
		}
		return v.SupplementalGroups
	}).(pulumi.IntArrayOutput)
}

// Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
// sysctls (by the container runtime) might fail to launch.
// Note that this field cannot be set when spec.os.name is windows.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput) Sysctls() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatch) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatch {
		if v == nil {
			return nil
		}
		return v.Sysctls
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput)
}

// The SELinux context to be applied to all containers.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in SecurityContext.  If set in
// both SecurityContext and PodSecurityContext, the value specified in SecurityContext
// takes precedence for that container.
// Note that this field cannot be set when spec.os.name is windows.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions struct {
	// Level is SELinux level label that applies to the container.
	Level *string `pulumi:"level"`
	// Role is a SELinux role label that applies to the container.
	Role *string `pulumi:"role"`
	// Type is a SELinux type label that applies to the container.
	Type *string `pulumi:"type"`
	// User is a SELinux user label that applies to the container.
	User *string `pulumi:"user"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput
}

// The SELinux context to be applied to all containers.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in SecurityContext.  If set in
// both SecurityContext and PodSecurityContext, the value specified in SecurityContext
// takes precedence for that container.
// Note that this field cannot be set when spec.os.name is windows.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsArgs struct {
	// Level is SELinux level label that applies to the container.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Role is a SELinux role label that applies to the container.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Type is a SELinux type label that applies to the container.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User is a SELinux user label that applies to the container.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput)
}

// The SELinux context to be applied to all containers.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in SecurityContext.  If set in
// both SecurityContext and PodSecurityContext, the value specified in SecurityContext
// takes precedence for that container.
// Note that this field cannot be set when spec.os.name is windows.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput)
}

// Level is SELinux level label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions) *string {
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Role is a SELinux role label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions) *string {
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Type is a SELinux type label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions) *string {
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User is a SELinux user label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions) *string {
		return v.User
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput)
}

// Level is SELinux level label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Role is a SELinux role label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Type is a SELinux type label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User is a SELinux user label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// The SELinux context to be applied to all containers.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in SecurityContext.  If set in
// both SecurityContext and PodSecurityContext, the value specified in SecurityContext
// takes precedence for that container.
// Note that this field cannot be set when spec.os.name is windows.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch struct {
	// Level is SELinux level label that applies to the container.
	Level *string `pulumi:"level"`
	// Role is a SELinux role label that applies to the container.
	Role *string `pulumi:"role"`
	// Type is a SELinux type label that applies to the container.
	Type *string `pulumi:"type"`
	// User is a SELinux user label that applies to the container.
	User *string `pulumi:"user"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput
}

// The SELinux context to be applied to all containers.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in SecurityContext.  If set in
// both SecurityContext and PodSecurityContext, the value specified in SecurityContext
// takes precedence for that container.
// Note that this field cannot be set when spec.os.name is windows.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchArgs struct {
	// Level is SELinux level label that applies to the container.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Role is a SELinux role label that applies to the container.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Type is a SELinux type label that applies to the container.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User is a SELinux user label that applies to the container.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput)
}

// The SELinux context to be applied to all containers.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in SecurityContext.  If set in
// both SecurityContext and PodSecurityContext, the value specified in SecurityContext
// takes precedence for that container.
// Note that this field cannot be set when spec.os.name is windows.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput)
}

// Level is SELinux level label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch) *string {
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Role is a SELinux role label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch) *string {
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Type is a SELinux type label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch) *string {
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User is a SELinux user label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch) *string {
		return v.User
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput)
}

// Level is SELinux level label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Role is a SELinux role label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Type is a SELinux type label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User is a SELinux user label that applies to the container.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// The seccomp options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile struct {
	// localhostProfile indicates a profile defined in a file on the node should be used.
	// The profile must be preconfigured on the node to work.
	// Must be a descending path, relative to the kubelet's configured seccomp profile location.
	// Must be set if type is "Localhost". Must NOT be set for any other type.
	LocalhostProfile *string `pulumi:"localhostProfile"`
	// type indicates which kind of seccomp profile will be applied.
	// Valid options are:
	//
	// Localhost - a profile defined in a file on the node should be used.
	// RuntimeDefault - the container runtime default profile should be used.
	// Unconfined - no profile should be applied.
	Type *string `pulumi:"type"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput
}

// The seccomp options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileArgs struct {
	// localhostProfile indicates a profile defined in a file on the node should be used.
	// The profile must be preconfigured on the node to work.
	// Must be a descending path, relative to the kubelet's configured seccomp profile location.
	// Must be set if type is "Localhost". Must NOT be set for any other type.
	LocalhostProfile pulumi.StringPtrInput `pulumi:"localhostProfile"`
	// type indicates which kind of seccomp profile will be applied.
	// Valid options are:
	//
	// Localhost - a profile defined in a file on the node should be used.
	// RuntimeDefault - the container runtime default profile should be used.
	// Unconfined - no profile should be applied.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput)
}

// The seccomp options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput)
}

// localhostProfile indicates a profile defined in a file on the node should be used.
// The profile must be preconfigured on the node to work.
// Must be a descending path, relative to the kubelet's configured seccomp profile location.
// Must be set if type is "Localhost". Must NOT be set for any other type.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile) *string {
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

// type indicates which kind of seccomp profile will be applied.
// Valid options are:
//
// Localhost - a profile defined in a file on the node should be used.
// RuntimeDefault - the container runtime default profile should be used.
// Unconfined - no profile should be applied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile) *string {
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput)
}

// localhostProfile indicates a profile defined in a file on the node should be used.
// The profile must be preconfigured on the node to work.
// Must be a descending path, relative to the kubelet's configured seccomp profile location.
// Must be set if type is "Localhost". Must NOT be set for any other type.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile) *string {
		if v == nil {
			return nil
		}
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

// type indicates which kind of seccomp profile will be applied.
// Valid options are:
//
// Localhost - a profile defined in a file on the node should be used.
// RuntimeDefault - the container runtime default profile should be used.
// Unconfined - no profile should be applied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfile) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The seccomp options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch struct {
	// localhostProfile indicates a profile defined in a file on the node should be used.
	// The profile must be preconfigured on the node to work.
	// Must be a descending path, relative to the kubelet's configured seccomp profile location.
	// Must be set if type is "Localhost". Must NOT be set for any other type.
	LocalhostProfile *string `pulumi:"localhostProfile"`
	// type indicates which kind of seccomp profile will be applied.
	// Valid options are:
	//
	// Localhost - a profile defined in a file on the node should be used.
	// RuntimeDefault - the container runtime default profile should be used.
	// Unconfined - no profile should be applied.
	Type *string `pulumi:"type"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput
}

// The seccomp options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchArgs struct {
	// localhostProfile indicates a profile defined in a file on the node should be used.
	// The profile must be preconfigured on the node to work.
	// Must be a descending path, relative to the kubelet's configured seccomp profile location.
	// Must be set if type is "Localhost". Must NOT be set for any other type.
	LocalhostProfile pulumi.StringPtrInput `pulumi:"localhostProfile"`
	// type indicates which kind of seccomp profile will be applied.
	// Valid options are:
	//
	// Localhost - a profile defined in a file on the node should be used.
	// RuntimeDefault - the container runtime default profile should be used.
	// Unconfined - no profile should be applied.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput)
}

// The seccomp options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput)
}

// localhostProfile indicates a profile defined in a file on the node should be used.
// The profile must be preconfigured on the node to work.
// Must be a descending path, relative to the kubelet's configured seccomp profile location.
// Must be set if type is "Localhost". Must NOT be set for any other type.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch) *string {
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

// type indicates which kind of seccomp profile will be applied.
// Valid options are:
//
// Localhost - a profile defined in a file on the node should be used.
// RuntimeDefault - the container runtime default profile should be used.
// Unconfined - no profile should be applied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch) *string {
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch
		return ret
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput)
}

// localhostProfile indicates a profile defined in a file on the node should be used.
// The profile must be preconfigured on the node to work.
// Must be a descending path, relative to the kubelet's configured seccomp profile location.
// Must be set if type is "Localhost". Must NOT be set for any other type.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch) *string {
		if v == nil {
			return nil
		}
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

// type indicates which kind of seccomp profile will be applied.
// Valid options are:
//
// Localhost - a profile defined in a file on the node should be used.
// RuntimeDefault - the container runtime default profile should be used.
// Unconfined - no profile should be applied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Sysctl defines a kernel parameter to be set
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctls struct {
	// Name of a property to set
	Name *string `pulumi:"name"`
	// Value of a property to set
	Value *string `pulumi:"value"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput
}

// Sysctl defines a kernel parameter to be set
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArgs struct {
	// Name of a property to set
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of a property to set
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctls)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctls)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput)
}

// Sysctl defines a kernel parameter to be set
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctls)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput {
	return o
}

// Name of a property to set
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctls) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of a property to set
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctls) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctls)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctls {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctls)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput)
}

// Sysctl defines a kernel parameter to be set
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatch struct {
	// Name of a property to set
	Name *string `pulumi:"name"`
	// Value of a property to set
	Value *string `pulumi:"value"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput
}

// Sysctl defines a kernel parameter to be set
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArgs struct {
	// Name of a property to set
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of a property to set
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput)
}

// Sysctl defines a kernel parameter to be set
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput {
	return o
}

// Name of a property to set
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Value of a property to set
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatch) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects.
	// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect *string `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys.
	// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key *string `pulumi:"key"`
	// Operator represents a key's relationship to the value.
	// Valid operators are Exists and Equal. Defaults to Equal.
	// Exists is equivalent to wildcard for value, so that a pod can
	// tolerate all taints of a particular category.
	Operator *string `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be
	// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
	// it is not set, which means tolerate the taint forever (do not evict). Zero and
	// negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds *int `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to.
	// If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value *string `pulumi:"value"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects.
	// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys.
	// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Operator represents a key's relationship to the value.
	// Valid operators are Exists and Equal. Defaults to Equal.
	// Exists is equivalent to wildcard for value, so that a pod can
	// tolerate all taints of a particular category.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be
	// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
	// it is not set, which means tolerate the taint forever (do not evict). Zero and
	// negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds pulumi.IntPtrInput `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to.
	// If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return o
}

// Effect indicates the taint effect to match. Empty means match all taint effects.
// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key is the taint key that the toleration applies to. Empty means match all taint keys.
// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Operator represents a key's relationship to the value.
// Valid operators are Exists and Equal. Defaults to Equal.
// Exists is equivalent to wildcard for value, so that a pod can
// tolerate all taints of a particular category.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// TolerationSeconds represents the period of time the toleration (which must be
// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
// it is not set, which means tolerate the taint forever (do not evict). Zero and
// negative values will be treated as 0 (evict immediately) by the system.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *int { return v.TolerationSeconds }).(pulumi.IntPtrOutput)
}

// Value is the taint value the toleration matches to.
// If the operator is Exists, the value should be empty, otherwise just a regular string.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects.
	// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect *string `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys.
	// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key *string `pulumi:"key"`
	// Operator represents a key's relationship to the value.
	// Valid operators are Exists and Equal. Defaults to Equal.
	// Exists is equivalent to wildcard for value, so that a pod can
	// tolerate all taints of a particular category.
	Operator *string `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be
	// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
	// it is not set, which means tolerate the taint forever (do not evict). Zero and
	// negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds *int `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to.
	// If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value *string `pulumi:"value"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArgs struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects.
	// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys.
	// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Operator represents a key's relationship to the value.
	// Valid operators are Exists and Equal. Defaults to Equal.
	// Exists is equivalent to wildcard for value, so that a pod can
	// tolerate all taints of a particular category.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be
	// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
	// it is not set, which means tolerate the taint forever (do not evict). Zero and
	// negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds pulumi.IntPtrInput `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to.
	// If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput {
	return o
}

// Effect indicates the taint effect to match. Empty means match all taint effects.
// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key is the taint key that the toleration applies to. Empty means match all taint keys.
// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Operator represents a key's relationship to the value.
// Valid operators are Exists and Equal. Defaults to Equal.
// Exists is equivalent to wildcard for value, so that a pod can
// tolerate all taints of a particular category.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// TolerationSeconds represents the period of time the toleration (which must be
// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
// it is not set, which means tolerate the taint forever (do not evict). Zero and
// negative values will be treated as 0 (evict immediately) by the system.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch) *int {
		return v.TolerationSeconds
	}).(pulumi.IntPtrOutput)
}

// Value is the taint value the toleration matches to.
// If the operator is Exists, the value should be empty, otherwise just a regular string.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput)
}

// Configures cert-manager to attempt to complete authorizations by
// performing the HTTP01 challenge flow.
// It is not possible to obtain certificates for wildcard domain names
// (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type IssuerSpecAcmeSolversHttp01Patch struct {
	GatewayHTTPRoute *IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePatch `pulumi:"gatewayHTTPRoute"`
	Ingress          *IssuerSpecAcmeSolversHttp01IngressPatch          `pulumi:"ingress"`
}

// IssuerSpecAcmeSolversHttp01PatchInput is an input type that accepts IssuerSpecAcmeSolversHttp01PatchArgs and IssuerSpecAcmeSolversHttp01PatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01PatchInput` via:
//
//	IssuerSpecAcmeSolversHttp01PatchArgs{...}
type IssuerSpecAcmeSolversHttp01PatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01PatchOutput() IssuerSpecAcmeSolversHttp01PatchOutput
	ToIssuerSpecAcmeSolversHttp01PatchOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01PatchOutput
}

// Configures cert-manager to attempt to complete authorizations by
// performing the HTTP01 challenge flow.
// It is not possible to obtain certificates for wildcard domain names
// (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type IssuerSpecAcmeSolversHttp01PatchArgs struct {
	GatewayHTTPRoute IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePatchPtrInput `pulumi:"gatewayHTTPRoute"`
	Ingress          IssuerSpecAcmeSolversHttp01IngressPatchPtrInput          `pulumi:"ingress"`
}

func (IssuerSpecAcmeSolversHttp01PatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01Patch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01PatchArgs) ToIssuerSpecAcmeSolversHttp01PatchOutput() IssuerSpecAcmeSolversHttp01PatchOutput {
	return i.ToIssuerSpecAcmeSolversHttp01PatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01PatchArgs) ToIssuerSpecAcmeSolversHttp01PatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01PatchOutput)
}

func (i IssuerSpecAcmeSolversHttp01PatchArgs) ToIssuerSpecAcmeSolversHttp01PatchPtrOutput() IssuerSpecAcmeSolversHttp01PatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01PatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01PatchArgs) ToIssuerSpecAcmeSolversHttp01PatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01PatchOutput).ToIssuerSpecAcmeSolversHttp01PatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01PatchPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01PatchArgs, IssuerSpecAcmeSolversHttp01PatchPtr and IssuerSpecAcmeSolversHttp01PatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01PatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversHttp01PatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversHttp01PatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01PatchPtrOutput() IssuerSpecAcmeSolversHttp01PatchPtrOutput
	ToIssuerSpecAcmeSolversHttp01PatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01PatchPtrOutput
}

type issuerSpecAcmeSolversHttp01PatchPtrType IssuerSpecAcmeSolversHttp01PatchArgs

func IssuerSpecAcmeSolversHttp01PatchPtr(v *IssuerSpecAcmeSolversHttp01PatchArgs) IssuerSpecAcmeSolversHttp01PatchPtrInput {
	return (*issuerSpecAcmeSolversHttp01PatchPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01PatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01Patch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01PatchPtrType) ToIssuerSpecAcmeSolversHttp01PatchPtrOutput() IssuerSpecAcmeSolversHttp01PatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01PatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01PatchPtrType) ToIssuerSpecAcmeSolversHttp01PatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01PatchPtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by
// performing the HTTP01 challenge flow.
// It is not possible to obtain certificates for wildcard domain names
// (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type IssuerSpecAcmeSolversHttp01PatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01PatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01Patch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01PatchOutput) ToIssuerSpecAcmeSolversHttp01PatchOutput() IssuerSpecAcmeSolversHttp01PatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01PatchOutput) ToIssuerSpecAcmeSolversHttp01PatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01PatchOutput) ToIssuerSpecAcmeSolversHttp01PatchPtrOutput() IssuerSpecAcmeSolversHttp01PatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01PatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01PatchOutput) ToIssuerSpecAcmeSolversHttp01PatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversHttp01Patch) *IssuerSpecAcmeSolversHttp01Patch {
		return &v
	}).(IssuerSpecAcmeSolversHttp01PatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01PatchOutput) GatewayHTTPRoute() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Patch) *IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePatch {
		return v.GatewayHTTPRoute
	}).(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01PatchOutput) Ingress() IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Patch) *IssuerSpecAcmeSolversHttp01IngressPatch { return v.Ingress }).(IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput)
}

type IssuerSpecAcmeSolversHttp01PatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01PatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01Patch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01PatchPtrOutput) ToIssuerSpecAcmeSolversHttp01PatchPtrOutput() IssuerSpecAcmeSolversHttp01PatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01PatchPtrOutput) ToIssuerSpecAcmeSolversHttp01PatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01PatchPtrOutput) Elem() IssuerSpecAcmeSolversHttp01PatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Patch) IssuerSpecAcmeSolversHttp01Patch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversHttp01Patch
		return ret
	}).(IssuerSpecAcmeSolversHttp01PatchOutput)
}

func (o IssuerSpecAcmeSolversHttp01PatchPtrOutput) GatewayHTTPRoute() IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Patch) *IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePatch {
		if v == nil {
			return nil
		}
		return v.GatewayHTTPRoute
	}).(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePatchPtrOutput)
}

func (o IssuerSpecAcmeSolversHttp01PatchPtrOutput) Ingress() IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Patch) *IssuerSpecAcmeSolversHttp01IngressPatch {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput)
}

// An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of.
// A selector may be provided to use different solving strategies for different DNS names.
// Only one of HTTP01 or DNS01 must be provided.
type IssuerSpecAcmeSolversPatch struct {
	Dns01    *IssuerSpecAcmeSolversDns01Patch    `pulumi:"dns01"`
	Http01   *IssuerSpecAcmeSolversHttp01Patch   `pulumi:"http01"`
	Selector *IssuerSpecAcmeSolversSelectorPatch `pulumi:"selector"`
}

// IssuerSpecAcmeSolversPatchInput is an input type that accepts IssuerSpecAcmeSolversPatchArgs and IssuerSpecAcmeSolversPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversPatchInput` via:
//
//	IssuerSpecAcmeSolversPatchArgs{...}
type IssuerSpecAcmeSolversPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversPatchOutput() IssuerSpecAcmeSolversPatchOutput
	ToIssuerSpecAcmeSolversPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversPatchOutput
}

// An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of.
// A selector may be provided to use different solving strategies for different DNS names.
// Only one of HTTP01 or DNS01 must be provided.
type IssuerSpecAcmeSolversPatchArgs struct {
	Dns01    IssuerSpecAcmeSolversDns01PatchPtrInput    `pulumi:"dns01"`
	Http01   IssuerSpecAcmeSolversHttp01PatchPtrInput   `pulumi:"http01"`
	Selector IssuerSpecAcmeSolversSelectorPatchPtrInput `pulumi:"selector"`
}

func (IssuerSpecAcmeSolversPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversPatchArgs) ToIssuerSpecAcmeSolversPatchOutput() IssuerSpecAcmeSolversPatchOutput {
	return i.ToIssuerSpecAcmeSolversPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversPatchArgs) ToIssuerSpecAcmeSolversPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversPatchOutput)
}

// IssuerSpecAcmeSolversPatchArrayInput is an input type that accepts IssuerSpecAcmeSolversPatchArray and IssuerSpecAcmeSolversPatchArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversPatchArrayInput` via:
//
//	IssuerSpecAcmeSolversPatchArray{ IssuerSpecAcmeSolversPatchArgs{...} }
type IssuerSpecAcmeSolversPatchArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversPatchArrayOutput() IssuerSpecAcmeSolversPatchArrayOutput
	ToIssuerSpecAcmeSolversPatchArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversPatchArrayOutput
}

type IssuerSpecAcmeSolversPatchArray []IssuerSpecAcmeSolversPatchInput

func (IssuerSpecAcmeSolversPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversPatchArray) ToIssuerSpecAcmeSolversPatchArrayOutput() IssuerSpecAcmeSolversPatchArrayOutput {
	return i.ToIssuerSpecAcmeSolversPatchArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversPatchArray) ToIssuerSpecAcmeSolversPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversPatchArrayOutput)
}

// An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of.
// A selector may be provided to use different solving strategies for different DNS names.
// Only one of HTTP01 or DNS01 must be provided.
type IssuerSpecAcmeSolversPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversPatchOutput) ToIssuerSpecAcmeSolversPatchOutput() IssuerSpecAcmeSolversPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversPatchOutput) ToIssuerSpecAcmeSolversPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversPatchOutput) Dns01() IssuerSpecAcmeSolversDns01PatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversPatch) *IssuerSpecAcmeSolversDns01Patch { return v.Dns01 }).(IssuerSpecAcmeSolversDns01PatchPtrOutput)
}

func (o IssuerSpecAcmeSolversPatchOutput) Http01() IssuerSpecAcmeSolversHttp01PatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversPatch) *IssuerSpecAcmeSolversHttp01Patch { return v.Http01 }).(IssuerSpecAcmeSolversHttp01PatchPtrOutput)
}

func (o IssuerSpecAcmeSolversPatchOutput) Selector() IssuerSpecAcmeSolversSelectorPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversPatch) *IssuerSpecAcmeSolversSelectorPatch { return v.Selector }).(IssuerSpecAcmeSolversSelectorPatchPtrOutput)
}

type IssuerSpecAcmeSolversPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversPatchArrayOutput) ToIssuerSpecAcmeSolversPatchArrayOutput() IssuerSpecAcmeSolversPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversPatchArrayOutput) ToIssuerSpecAcmeSolversPatchArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversPatchArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversPatchArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversPatch {
		return vs[0].([]IssuerSpecAcmeSolversPatch)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversPatchOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that
// should be solved using this challenge solver.
// If not specified, the solver will be treated as the 'default' solver
// with the lowest priority, i.e. if any other solver has a more specific
// match, it will be used instead.
type IssuerSpecAcmeSolversSelector struct {
	// List of DNSNames that this solver will be used to solve.
	// If specified and a match is found, a dnsNames selector will take
	// precedence over a dnsZones selector.
	// If multiple solvers match with the same dnsNames value, the solver
	// with the most matching labels in matchLabels will be selected.
	// If neither has more matches, the solver defined earlier in the list
	// will be selected.
	DnsNames []string `pulumi:"dnsNames"`
	// List of DNSZones that this solver will be used to solve.
	// The most specific DNS zone match specified here will take precedence
	// over other DNS zone matches, so a solver specifying sys.example.com
	// will be selected over one specifying example.com for the domain
	// www.sys.example.com.
	// If multiple solvers match with the same dnsZones value, the solver
	// with the most matching labels in matchLabels will be selected.
	// If neither has more matches, the solver defined earlier in the list
	// will be selected.
	DnsZones []string `pulumi:"dnsZones"`
	// A label selector that is used to refine the set of certificate's that
	// this challenge solver will apply to.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversSelectorInput is an input type that accepts IssuerSpecAcmeSolversSelectorArgs and IssuerSpecAcmeSolversSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversSelectorInput` via:
//
//	IssuerSpecAcmeSolversSelectorArgs{...}
type IssuerSpecAcmeSolversSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversSelectorOutput() IssuerSpecAcmeSolversSelectorOutput
	ToIssuerSpecAcmeSolversSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversSelectorOutput
}

// Selector selects a set of DNSNames on the Certificate resource that
// should be solved using this challenge solver.
// If not specified, the solver will be treated as the 'default' solver
// with the lowest priority, i.e. if any other solver has a more specific
// match, it will be used instead.
type IssuerSpecAcmeSolversSelectorArgs struct {
	// List of DNSNames that this solver will be used to solve.
	// If specified and a match is found, a dnsNames selector will take
	// precedence over a dnsZones selector.
	// If multiple solvers match with the same dnsNames value, the solver
	// with the most matching labels in matchLabels will be selected.
	// If neither has more matches, the solver defined earlier in the list
	// will be selected.
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// List of DNSZones that this solver will be used to solve.
	// The most specific DNS zone match specified here will take precedence
	// over other DNS zone matches, so a solver specifying sys.example.com
	// will be selected over one specifying example.com for the domain
	// www.sys.example.com.
	// If multiple solvers match with the same dnsZones value, the solver
	// with the most matching labels in matchLabels will be selected.
	// If neither has more matches, the solver defined earlier in the list
	// will be selected.
	DnsZones pulumi.StringArrayInput `pulumi:"dnsZones"`
	// A label selector that is used to refine the set of certificate's that
	// this challenge solver will apply to.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorOutput() IssuerSpecAcmeSolversSelectorOutput {
	return i.ToIssuerSpecAcmeSolversSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorOutput)
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorOutput).ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversSelectorArgs, IssuerSpecAcmeSolversSelectorPtr and IssuerSpecAcmeSolversSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversSelectorPtrInput` via:
//
//	        IssuerSpecAcmeSolversSelectorArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput
	ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversSelectorPtrOutput
}

type issuerSpecAcmeSolversSelectorPtrType IssuerSpecAcmeSolversSelectorArgs

func IssuerSpecAcmeSolversSelectorPtr(v *IssuerSpecAcmeSolversSelectorArgs) IssuerSpecAcmeSolversSelectorPtrInput {
	return (*issuerSpecAcmeSolversSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversSelectorPtrType) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversSelectorPtrType) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorPtrOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that
// should be solved using this challenge solver.
// If not specified, the solver will be treated as the 'default' solver
// with the lowest priority, i.e. if any other solver has a more specific
// match, it will be used instead.
type IssuerSpecAcmeSolversSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorOutput() IssuerSpecAcmeSolversSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversSelector) *IssuerSpecAcmeSolversSelector {
		return &v
	}).(IssuerSpecAcmeSolversSelectorPtrOutput)
}

// List of DNSNames that this solver will be used to solve.
// If specified and a match is found, a dnsNames selector will take
// precedence over a dnsZones selector.
// If multiple solvers match with the same dnsNames value, the solver
// with the most matching labels in matchLabels will be selected.
// If neither has more matches, the solver defined earlier in the list
// will be selected.
func (o IssuerSpecAcmeSolversSelectorOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversSelector) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// List of DNSZones that this solver will be used to solve.
// The most specific DNS zone match specified here will take precedence
// over other DNS zone matches, so a solver specifying sys.example.com
// will be selected over one specifying example.com for the domain
// www.sys.example.com.
// If multiple solvers match with the same dnsZones value, the solver
// with the most matching labels in matchLabels will be selected.
// If neither has more matches, the solver defined earlier in the list
// will be selected.
func (o IssuerSpecAcmeSolversSelectorOutput) DnsZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversSelector) []string { return v.DnsZones }).(pulumi.StringArrayOutput)
}

// A label selector that is used to refine the set of certificate's that
// this challenge solver will apply to.
func (o IssuerSpecAcmeSolversSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversSelectorPtrOutput) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorPtrOutput) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorPtrOutput) Elem() IssuerSpecAcmeSolversSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelector) IssuerSpecAcmeSolversSelector {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversSelector
		return ret
	}).(IssuerSpecAcmeSolversSelectorOutput)
}

// List of DNSNames that this solver will be used to solve.
// If specified and a match is found, a dnsNames selector will take
// precedence over a dnsZones selector.
// If multiple solvers match with the same dnsNames value, the solver
// with the most matching labels in matchLabels will be selected.
// If neither has more matches, the solver defined earlier in the list
// will be selected.
func (o IssuerSpecAcmeSolversSelectorPtrOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelector) []string {
		if v == nil {
			return nil
		}
		return v.DnsNames
	}).(pulumi.StringArrayOutput)
}

// List of DNSZones that this solver will be used to solve.
// The most specific DNS zone match specified here will take precedence
// over other DNS zone matches, so a solver specifying sys.example.com
// will be selected over one specifying example.com for the domain
// www.sys.example.com.
// If multiple solvers match with the same dnsZones value, the solver
// with the most matching labels in matchLabels will be selected.
// If neither has more matches, the solver defined earlier in the list
// will be selected.
func (o IssuerSpecAcmeSolversSelectorPtrOutput) DnsZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelector) []string {
		if v == nil {
			return nil
		}
		return v.DnsZones
	}).(pulumi.StringArrayOutput)
}

// A label selector that is used to refine the set of certificate's that
// this challenge solver will apply to.
func (o IssuerSpecAcmeSolversSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that
// should be solved using this challenge solver.
// If not specified, the solver will be treated as the 'default' solver
// with the lowest priority, i.e. if any other solver has a more specific
// match, it will be used instead.
type IssuerSpecAcmeSolversSelectorPatch struct {
	// List of DNSNames that this solver will be used to solve.
	// If specified and a match is found, a dnsNames selector will take
	// precedence over a dnsZones selector.
	// If multiple solvers match with the same dnsNames value, the solver
	// with the most matching labels in matchLabels will be selected.
	// If neither has more matches, the solver defined earlier in the list
	// will be selected.
	DnsNames []string `pulumi:"dnsNames"`
	// List of DNSZones that this solver will be used to solve.
	// The most specific DNS zone match specified here will take precedence
	// over other DNS zone matches, so a solver specifying sys.example.com
	// will be selected over one specifying example.com for the domain
	// www.sys.example.com.
	// If multiple solvers match with the same dnsZones value, the solver
	// with the most matching labels in matchLabels will be selected.
	// If neither has more matches, the solver defined earlier in the list
	// will be selected.
	DnsZones []string `pulumi:"dnsZones"`
	// A label selector that is used to refine the set of certificate's that
	// this challenge solver will apply to.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversSelectorPatchInput is an input type that accepts IssuerSpecAcmeSolversSelectorPatchArgs and IssuerSpecAcmeSolversSelectorPatchOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversSelectorPatchInput` via:
//
//	IssuerSpecAcmeSolversSelectorPatchArgs{...}
type IssuerSpecAcmeSolversSelectorPatchInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversSelectorPatchOutput() IssuerSpecAcmeSolversSelectorPatchOutput
	ToIssuerSpecAcmeSolversSelectorPatchOutputWithContext(context.Context) IssuerSpecAcmeSolversSelectorPatchOutput
}

// Selector selects a set of DNSNames on the Certificate resource that
// should be solved using this challenge solver.
// If not specified, the solver will be treated as the 'default' solver
// with the lowest priority, i.e. if any other solver has a more specific
// match, it will be used instead.
type IssuerSpecAcmeSolversSelectorPatchArgs struct {
	// List of DNSNames that this solver will be used to solve.
	// If specified and a match is found, a dnsNames selector will take
	// precedence over a dnsZones selector.
	// If multiple solvers match with the same dnsNames value, the solver
	// with the most matching labels in matchLabels will be selected.
	// If neither has more matches, the solver defined earlier in the list
	// will be selected.
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// List of DNSZones that this solver will be used to solve.
	// The most specific DNS zone match specified here will take precedence
	// over other DNS zone matches, so a solver specifying sys.example.com
	// will be selected over one specifying example.com for the domain
	// www.sys.example.com.
	// If multiple solvers match with the same dnsZones value, the solver
	// with the most matching labels in matchLabels will be selected.
	// If neither has more matches, the solver defined earlier in the list
	// will be selected.
	DnsZones pulumi.StringArrayInput `pulumi:"dnsZones"`
	// A label selector that is used to refine the set of certificate's that
	// this challenge solver will apply to.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversSelectorPatch)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversSelectorPatchArgs) ToIssuerSpecAcmeSolversSelectorPatchOutput() IssuerSpecAcmeSolversSelectorPatchOutput {
	return i.ToIssuerSpecAcmeSolversSelectorPatchOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversSelectorPatchArgs) ToIssuerSpecAcmeSolversSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorPatchOutput)
}

func (i IssuerSpecAcmeSolversSelectorPatchArgs) ToIssuerSpecAcmeSolversSelectorPatchPtrOutput() IssuerSpecAcmeSolversSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversSelectorPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversSelectorPatchArgs) ToIssuerSpecAcmeSolversSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorPatchOutput).ToIssuerSpecAcmeSolversSelectorPatchPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversSelectorPatchPtrInput is an input type that accepts IssuerSpecAcmeSolversSelectorPatchArgs, IssuerSpecAcmeSolversSelectorPatchPtr and IssuerSpecAcmeSolversSelectorPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversSelectorPatchPtrInput` via:
//
//	        IssuerSpecAcmeSolversSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecAcmeSolversSelectorPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversSelectorPatchPtrOutput() IssuerSpecAcmeSolversSelectorPatchPtrOutput
	ToIssuerSpecAcmeSolversSelectorPatchPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversSelectorPatchPtrOutput
}

type issuerSpecAcmeSolversSelectorPatchPtrType IssuerSpecAcmeSolversSelectorPatchArgs

func IssuerSpecAcmeSolversSelectorPatchPtr(v *IssuerSpecAcmeSolversSelectorPatchArgs) IssuerSpecAcmeSolversSelectorPatchPtrInput {
	return (*issuerSpecAcmeSolversSelectorPatchPtrType)(v)
}

func (*issuerSpecAcmeSolversSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversSelectorPatch)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversSelectorPatchPtrType) ToIssuerSpecAcmeSolversSelectorPatchPtrOutput() IssuerSpecAcmeSolversSelectorPatchPtrOutput {
	return i.ToIssuerSpecAcmeSolversSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversSelectorPatchPtrType) ToIssuerSpecAcmeSolversSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorPatchPtrOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that
// should be solved using this challenge solver.
// If not specified, the solver will be treated as the 'default' solver
// with the lowest priority, i.e. if any other solver has a more specific
// match, it will be used instead.
type IssuerSpecAcmeSolversSelectorPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversSelectorPatchOutput) ToIssuerSpecAcmeSolversSelectorPatchOutput() IssuerSpecAcmeSolversSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorPatchOutput) ToIssuerSpecAcmeSolversSelectorPatchOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPatchOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorPatchOutput) ToIssuerSpecAcmeSolversSelectorPatchPtrOutput() IssuerSpecAcmeSolversSelectorPatchPtrOutput {
	return o.ToIssuerSpecAcmeSolversSelectorPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversSelectorPatchOutput) ToIssuerSpecAcmeSolversSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecAcmeSolversSelectorPatch) *IssuerSpecAcmeSolversSelectorPatch {
		return &v
	}).(IssuerSpecAcmeSolversSelectorPatchPtrOutput)
}

// List of DNSNames that this solver will be used to solve.
// If specified and a match is found, a dnsNames selector will take
// precedence over a dnsZones selector.
// If multiple solvers match with the same dnsNames value, the solver
// with the most matching labels in matchLabels will be selected.
// If neither has more matches, the solver defined earlier in the list
// will be selected.
func (o IssuerSpecAcmeSolversSelectorPatchOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversSelectorPatch) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// List of DNSZones that this solver will be used to solve.
// The most specific DNS zone match specified here will take precedence
// over other DNS zone matches, so a solver specifying sys.example.com
// will be selected over one specifying example.com for the domain
// www.sys.example.com.
// If multiple solvers match with the same dnsZones value, the solver
// with the most matching labels in matchLabels will be selected.
// If neither has more matches, the solver defined earlier in the list
// will be selected.
func (o IssuerSpecAcmeSolversSelectorPatchOutput) DnsZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversSelectorPatch) []string { return v.DnsZones }).(pulumi.StringArrayOutput)
}

// A label selector that is used to refine the set of certificate's that
// this challenge solver will apply to.
func (o IssuerSpecAcmeSolversSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversSelectorPatch) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversSelectorPatch)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversSelectorPatchPtrOutput() IssuerSpecAcmeSolversSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorPatchPtrOutput) ToIssuerSpecAcmeSolversSelectorPatchPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPatchPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorPatchPtrOutput) Elem() IssuerSpecAcmeSolversSelectorPatchOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelectorPatch) IssuerSpecAcmeSolversSelectorPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecAcmeSolversSelectorPatch
		return ret
	}).(IssuerSpecAcmeSolversSelectorPatchOutput)
}

// List of DNSNames that this solver will be used to solve.
// If specified and a match is found, a dnsNames selector will take
// precedence over a dnsZones selector.
// If multiple solvers match with the same dnsNames value, the solver
// with the most matching labels in matchLabels will be selected.
// If neither has more matches, the solver defined earlier in the list
// will be selected.
func (o IssuerSpecAcmeSolversSelectorPatchPtrOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelectorPatch) []string {
		if v == nil {
			return nil
		}
		return v.DnsNames
	}).(pulumi.StringArrayOutput)
}

// List of DNSZones that this solver will be used to solve.
// The most specific DNS zone match specified here will take precedence
// over other DNS zone matches, so a solver specifying sys.example.com
// will be selected over one specifying example.com for the domain
// www.sys.example.com.
// If multiple solvers match with the same dnsZones value, the solver
// with the most matching labels in matchLabels will be selected.
// If neither has more matches, the solver defined earlier in the list
// will be selected.
func (o IssuerSpecAcmeSolversSelectorPatchPtrOutput) DnsZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelectorPatch) []string {
		if v == nil {
			return nil
		}
		return v.DnsZones
	}).(pulumi.StringArrayOutput)
}

// A label selector that is used to refine the set of certificate's that
// this challenge solver will apply to.
func (o IssuerSpecAcmeSolversSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair
// stored in a Secret resource.
// This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCa struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies
	// the location of the CRL from which the revocation of this certificate can be checked.
	// If not set, certificates will be issued without distribution points set.
	CrlDistributionPoints []string `pulumi:"crlDistributionPoints"`
	// IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates
	// it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details.
	// As an example, such a URL might be "http://ca.domain.com/ca.crt".
	IssuingCertificateURLs []string `pulumi:"issuingCertificateURLs"`
	// The OCSP server list is an X.509 v3 extension that defines a list of
	// URLs of OCSP responders. The OCSP responders can be queried for the
	// revocation status of an issued certificate. If not set, the
	// certificate will be issued with no OCSP servers set. For example, an
	// OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
	OcspServers []string `pulumi:"ocspServers"`
	// SecretName is the name of the secret used to sign Certificates issued
	// by this Issuer.
	SecretName *string `pulumi:"secretName"`
}

// IssuerSpecCaInput is an input type that accepts IssuerSpecCaArgs and IssuerSpecCaOutput values.
// You can construct a concrete instance of `IssuerSpecCaInput` via:
//
//	IssuerSpecCaArgs{...}
type IssuerSpecCaInput interface {
	pulumi.Input

	ToIssuerSpecCaOutput() IssuerSpecCaOutput
	ToIssuerSpecCaOutputWithContext(context.Context) IssuerSpecCaOutput
}

// CA configures this issuer to sign certificates using a signing CA keypair
// stored in a Secret resource.
// This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCaArgs struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies
	// the location of the CRL from which the revocation of this certificate can be checked.
	// If not set, certificates will be issued without distribution points set.
	CrlDistributionPoints pulumi.StringArrayInput `pulumi:"crlDistributionPoints"`
	// IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates
	// it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details.
	// As an example, such a URL might be "http://ca.domain.com/ca.crt".
	IssuingCertificateURLs pulumi.StringArrayInput `pulumi:"issuingCertificateURLs"`
	// The OCSP server list is an X.509 v3 extension that defines a list of
	// URLs of OCSP responders. The OCSP responders can be queried for the
	// revocation status of an issued certificate. If not set, the
	// certificate will be issued with no OCSP servers set. For example, an
	// OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
	OcspServers pulumi.StringArrayInput `pulumi:"ocspServers"`
	// SecretName is the name of the secret used to sign Certificates issued
	// by this Issuer.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (IssuerSpecCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecCa)(nil)).Elem()
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaOutput() IssuerSpecCaOutput {
	return i.ToIssuerSpecCaOutputWithContext(context.Background())
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaOutputWithContext(ctx context.Context) IssuerSpecCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaOutput)
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return i.ToIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaOutput).ToIssuerSpecCaPtrOutputWithContext(ctx)
}

// IssuerSpecCaPtrInput is an input type that accepts IssuerSpecCaArgs, IssuerSpecCaPtr and IssuerSpecCaPtrOutput values.
// You can construct a concrete instance of `IssuerSpecCaPtrInput` via:
//
//	        IssuerSpecCaArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecCaPtrInput interface {
	pulumi.Input

	ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput
	ToIssuerSpecCaPtrOutputWithContext(context.Context) IssuerSpecCaPtrOutput
}

type issuerSpecCaPtrType IssuerSpecCaArgs

func IssuerSpecCaPtr(v *IssuerSpecCaArgs) IssuerSpecCaPtrInput {
	return (*issuerSpecCaPtrType)(v)
}

func (*issuerSpecCaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecCa)(nil)).Elem()
}

func (i *issuerSpecCaPtrType) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return i.ToIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (i *issuerSpecCaPtrType) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaPtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair
// stored in a Secret resource.
// This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCaOutput struct{ *pulumi.OutputState }

func (IssuerSpecCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecCa)(nil)).Elem()
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaOutput() IssuerSpecCaOutput {
	return o
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaOutputWithContext(ctx context.Context) IssuerSpecCaOutput {
	return o
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return o.ToIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecCa) *IssuerSpecCa {
		return &v
	}).(IssuerSpecCaPtrOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies
// the location of the CRL from which the revocation of this certificate can be checked.
// If not set, certificates will be issued without distribution points set.
func (o IssuerSpecCaOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecCa) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

// IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates
// it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details.
// As an example, such a URL might be "http://ca.domain.com/ca.crt".
func (o IssuerSpecCaOutput) IssuingCertificateURLs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecCa) []string { return v.IssuingCertificateURLs }).(pulumi.StringArrayOutput)
}

// The OCSP server list is an X.509 v3 extension that defines a list of
// URLs of OCSP responders. The OCSP responders can be queried for the
// revocation status of an issued certificate. If not set, the
// certificate will be issued with no OCSP servers set. For example, an
// OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
func (o IssuerSpecCaOutput) OcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecCa) []string { return v.OcspServers }).(pulumi.StringArrayOutput)
}

// SecretName is the name of the secret used to sign Certificates issued
// by this Issuer.
func (o IssuerSpecCaOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecCa) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type IssuerSpecCaPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecCaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecCa)(nil)).Elem()
}

func (o IssuerSpecCaPtrOutput) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return o
}

func (o IssuerSpecCaPtrOutput) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return o
}

func (o IssuerSpecCaPtrOutput) Elem() IssuerSpecCaOutput {
	return o.ApplyT(func(v *IssuerSpecCa) IssuerSpecCa {
		if v != nil {
			return *v
		}
		var ret IssuerSpecCa
		return ret
	}).(IssuerSpecCaOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies
// the location of the CRL from which the revocation of this certificate can be checked.
// If not set, certificates will be issued without distribution points set.
func (o IssuerSpecCaPtrOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecCa) []string {
		if v == nil {
			return nil
		}
		return v.CrlDistributionPoints
	}).(pulumi.StringArrayOutput)
}

// IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates
// it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details.
// As an example, such a URL might be "http://ca.domain.com/ca.crt".
func (o IssuerSpecCaPtrOutput) IssuingCertificateURLs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecCa) []string {
		if v == nil {
			return nil
		}
		return v.IssuingCertificateURLs
	}).(pulumi.StringArrayOutput)
}

// The OCSP server list is an X.509 v3 extension that defines a list of
// URLs of OCSP responders. The OCSP responders can be queried for the
// revocation status of an issued certificate. If not set, the
// certificate will be issued with no OCSP servers set. For example, an
// OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
func (o IssuerSpecCaPtrOutput) OcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecCa) []string {
		if v == nil {
			return nil
		}
		return v.OcspServers
	}).(pulumi.StringArrayOutput)
}

// SecretName is the name of the secret used to sign Certificates issued
// by this Issuer.
func (o IssuerSpecCaPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecCa) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair
// stored in a Secret resource.
// This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCaPatch struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies
	// the location of the CRL from which the revocation of this certificate can be checked.
	// If not set, certificates will be issued without distribution points set.
	CrlDistributionPoints []string `pulumi:"crlDistributionPoints"`
	// IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates
	// it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details.
	// As an example, such a URL might be "http://ca.domain.com/ca.crt".
	IssuingCertificateURLs []string `pulumi:"issuingCertificateURLs"`
	// The OCSP server list is an X.509 v3 extension that defines a list of
	// URLs of OCSP responders. The OCSP responders can be queried for the
	// revocation status of an issued certificate. If not set, the
	// certificate will be issued with no OCSP servers set. For example, an
	// OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
	OcspServers []string `pulumi:"ocspServers"`
	// SecretName is the name of the secret used to sign Certificates issued
	// by this Issuer.
	SecretName *string `pulumi:"secretName"`
}

// IssuerSpecCaPatchInput is an input type that accepts IssuerSpecCaPatchArgs and IssuerSpecCaPatchOutput values.
// You can construct a concrete instance of `IssuerSpecCaPatchInput` via:
//
//	IssuerSpecCaPatchArgs{...}
type IssuerSpecCaPatchInput interface {
	pulumi.Input

	ToIssuerSpecCaPatchOutput() IssuerSpecCaPatchOutput
	ToIssuerSpecCaPatchOutputWithContext(context.Context) IssuerSpecCaPatchOutput
}

// CA configures this issuer to sign certificates using a signing CA keypair
// stored in a Secret resource.
// This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCaPatchArgs struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies
	// the location of the CRL from which the revocation of this certificate can be checked.
	// If not set, certificates will be issued without distribution points set.
	CrlDistributionPoints pulumi.StringArrayInput `pulumi:"crlDistributionPoints"`
	// IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates
	// it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details.
	// As an example, such a URL might be "http://ca.domain.com/ca.crt".
	IssuingCertificateURLs pulumi.StringArrayInput `pulumi:"issuingCertificateURLs"`
	// The OCSP server list is an X.509 v3 extension that defines a list of
	// URLs of OCSP responders. The OCSP responders can be queried for the
	// revocation status of an issued certificate. If not set, the
	// certificate will be issued with no OCSP servers set. For example, an
	// OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
	OcspServers pulumi.StringArrayInput `pulumi:"ocspServers"`
	// SecretName is the name of the secret used to sign Certificates issued
	// by this Issuer.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (IssuerSpecCaPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecCaPatch)(nil)).Elem()
}

func (i IssuerSpecCaPatchArgs) ToIssuerSpecCaPatchOutput() IssuerSpecCaPatchOutput {
	return i.ToIssuerSpecCaPatchOutputWithContext(context.Background())
}

func (i IssuerSpecCaPatchArgs) ToIssuerSpecCaPatchOutputWithContext(ctx context.Context) IssuerSpecCaPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaPatchOutput)
}

func (i IssuerSpecCaPatchArgs) ToIssuerSpecCaPatchPtrOutput() IssuerSpecCaPatchPtrOutput {
	return i.ToIssuerSpecCaPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecCaPatchArgs) ToIssuerSpecCaPatchPtrOutputWithContext(ctx context.Context) IssuerSpecCaPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaPatchOutput).ToIssuerSpecCaPatchPtrOutputWithContext(ctx)
}

// IssuerSpecCaPatchPtrInput is an input type that accepts IssuerSpecCaPatchArgs, IssuerSpecCaPatchPtr and IssuerSpecCaPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecCaPatchPtrInput` via:
//
//	        IssuerSpecCaPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecCaPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecCaPatchPtrOutput() IssuerSpecCaPatchPtrOutput
	ToIssuerSpecCaPatchPtrOutputWithContext(context.Context) IssuerSpecCaPatchPtrOutput
}

type issuerSpecCaPatchPtrType IssuerSpecCaPatchArgs

func IssuerSpecCaPatchPtr(v *IssuerSpecCaPatchArgs) IssuerSpecCaPatchPtrInput {
	return (*issuerSpecCaPatchPtrType)(v)
}

func (*issuerSpecCaPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecCaPatch)(nil)).Elem()
}

func (i *issuerSpecCaPatchPtrType) ToIssuerSpecCaPatchPtrOutput() IssuerSpecCaPatchPtrOutput {
	return i.ToIssuerSpecCaPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecCaPatchPtrType) ToIssuerSpecCaPatchPtrOutputWithContext(ctx context.Context) IssuerSpecCaPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaPatchPtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair
// stored in a Secret resource.
// This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCaPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecCaPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecCaPatch)(nil)).Elem()
}

func (o IssuerSpecCaPatchOutput) ToIssuerSpecCaPatchOutput() IssuerSpecCaPatchOutput {
	return o
}

func (o IssuerSpecCaPatchOutput) ToIssuerSpecCaPatchOutputWithContext(ctx context.Context) IssuerSpecCaPatchOutput {
	return o
}

func (o IssuerSpecCaPatchOutput) ToIssuerSpecCaPatchPtrOutput() IssuerSpecCaPatchPtrOutput {
	return o.ToIssuerSpecCaPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecCaPatchOutput) ToIssuerSpecCaPatchPtrOutputWithContext(ctx context.Context) IssuerSpecCaPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecCaPatch) *IssuerSpecCaPatch {
		return &v
	}).(IssuerSpecCaPatchPtrOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies
// the location of the CRL from which the revocation of this certificate can be checked.
// If not set, certificates will be issued without distribution points set.
func (o IssuerSpecCaPatchOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecCaPatch) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

// IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates
// it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details.
// As an example, such a URL might be "http://ca.domain.com/ca.crt".
func (o IssuerSpecCaPatchOutput) IssuingCertificateURLs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecCaPatch) []string { return v.IssuingCertificateURLs }).(pulumi.StringArrayOutput)
}

// The OCSP server list is an X.509 v3 extension that defines a list of
// URLs of OCSP responders. The OCSP responders can be queried for the
// revocation status of an issued certificate. If not set, the
// certificate will be issued with no OCSP servers set. For example, an
// OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
func (o IssuerSpecCaPatchOutput) OcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecCaPatch) []string { return v.OcspServers }).(pulumi.StringArrayOutput)
}

// SecretName is the name of the secret used to sign Certificates issued
// by this Issuer.
func (o IssuerSpecCaPatchOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecCaPatch) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type IssuerSpecCaPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecCaPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecCaPatch)(nil)).Elem()
}

func (o IssuerSpecCaPatchPtrOutput) ToIssuerSpecCaPatchPtrOutput() IssuerSpecCaPatchPtrOutput {
	return o
}

func (o IssuerSpecCaPatchPtrOutput) ToIssuerSpecCaPatchPtrOutputWithContext(ctx context.Context) IssuerSpecCaPatchPtrOutput {
	return o
}

func (o IssuerSpecCaPatchPtrOutput) Elem() IssuerSpecCaPatchOutput {
	return o.ApplyT(func(v *IssuerSpecCaPatch) IssuerSpecCaPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecCaPatch
		return ret
	}).(IssuerSpecCaPatchOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies
// the location of the CRL from which the revocation of this certificate can be checked.
// If not set, certificates will be issued without distribution points set.
func (o IssuerSpecCaPatchPtrOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecCaPatch) []string {
		if v == nil {
			return nil
		}
		return v.CrlDistributionPoints
	}).(pulumi.StringArrayOutput)
}

// IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates
// it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details.
// As an example, such a URL might be "http://ca.domain.com/ca.crt".
func (o IssuerSpecCaPatchPtrOutput) IssuingCertificateURLs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecCaPatch) []string {
		if v == nil {
			return nil
		}
		return v.IssuingCertificateURLs
	}).(pulumi.StringArrayOutput)
}

// The OCSP server list is an X.509 v3 extension that defines a list of
// URLs of OCSP responders. The OCSP responders can be queried for the
// revocation status of an issued certificate. If not set, the
// certificate will be issued with no OCSP servers set. For example, an
// OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
func (o IssuerSpecCaPatchPtrOutput) OcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecCaPatch) []string {
		if v == nil {
			return nil
		}
		return v.OcspServers
	}).(pulumi.StringArrayOutput)
}

// SecretName is the name of the secret used to sign Certificates issued
// by this Issuer.
func (o IssuerSpecCaPatchPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecCaPatch) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Desired state of the Issuer resource.
type IssuerSpecPatch struct {
	Acme       *IssuerSpecAcmePatch       `pulumi:"acme"`
	Ca         *IssuerSpecCaPatch         `pulumi:"ca"`
	SelfSigned *IssuerSpecSelfSignedPatch `pulumi:"selfSigned"`
	Vault      *IssuerSpecVaultPatch      `pulumi:"vault"`
	Venafi     *IssuerSpecVenafiPatch     `pulumi:"venafi"`
}

// IssuerSpecPatchInput is an input type that accepts IssuerSpecPatchArgs and IssuerSpecPatchOutput values.
// You can construct a concrete instance of `IssuerSpecPatchInput` via:
//
//	IssuerSpecPatchArgs{...}
type IssuerSpecPatchInput interface {
	pulumi.Input

	ToIssuerSpecPatchOutput() IssuerSpecPatchOutput
	ToIssuerSpecPatchOutputWithContext(context.Context) IssuerSpecPatchOutput
}

// Desired state of the Issuer resource.
type IssuerSpecPatchArgs struct {
	Acme       IssuerSpecAcmePatchPtrInput       `pulumi:"acme"`
	Ca         IssuerSpecCaPatchPtrInput         `pulumi:"ca"`
	SelfSigned IssuerSpecSelfSignedPatchPtrInput `pulumi:"selfSigned"`
	Vault      IssuerSpecVaultPatchPtrInput      `pulumi:"vault"`
	Venafi     IssuerSpecVenafiPatchPtrInput     `pulumi:"venafi"`
}

func (IssuerSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecPatch)(nil)).Elem()
}

func (i IssuerSpecPatchArgs) ToIssuerSpecPatchOutput() IssuerSpecPatchOutput {
	return i.ToIssuerSpecPatchOutputWithContext(context.Background())
}

func (i IssuerSpecPatchArgs) ToIssuerSpecPatchOutputWithContext(ctx context.Context) IssuerSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecPatchOutput)
}

func (i IssuerSpecPatchArgs) ToIssuerSpecPatchPtrOutput() IssuerSpecPatchPtrOutput {
	return i.ToIssuerSpecPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecPatchArgs) ToIssuerSpecPatchPtrOutputWithContext(ctx context.Context) IssuerSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecPatchOutput).ToIssuerSpecPatchPtrOutputWithContext(ctx)
}

// IssuerSpecPatchPtrInput is an input type that accepts IssuerSpecPatchArgs, IssuerSpecPatchPtr and IssuerSpecPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecPatchPtrInput` via:
//
//	        IssuerSpecPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecPatchPtrOutput() IssuerSpecPatchPtrOutput
	ToIssuerSpecPatchPtrOutputWithContext(context.Context) IssuerSpecPatchPtrOutput
}

type issuerSpecPatchPtrType IssuerSpecPatchArgs

func IssuerSpecPatchPtr(v *IssuerSpecPatchArgs) IssuerSpecPatchPtrInput {
	return (*issuerSpecPatchPtrType)(v)
}

func (*issuerSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecPatch)(nil)).Elem()
}

func (i *issuerSpecPatchPtrType) ToIssuerSpecPatchPtrOutput() IssuerSpecPatchPtrOutput {
	return i.ToIssuerSpecPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecPatchPtrType) ToIssuerSpecPatchPtrOutputWithContext(ctx context.Context) IssuerSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecPatchPtrOutput)
}

// Desired state of the Issuer resource.
type IssuerSpecPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecPatch)(nil)).Elem()
}

func (o IssuerSpecPatchOutput) ToIssuerSpecPatchOutput() IssuerSpecPatchOutput {
	return o
}

func (o IssuerSpecPatchOutput) ToIssuerSpecPatchOutputWithContext(ctx context.Context) IssuerSpecPatchOutput {
	return o
}

func (o IssuerSpecPatchOutput) ToIssuerSpecPatchPtrOutput() IssuerSpecPatchPtrOutput {
	return o.ToIssuerSpecPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecPatchOutput) ToIssuerSpecPatchPtrOutputWithContext(ctx context.Context) IssuerSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecPatch) *IssuerSpecPatch {
		return &v
	}).(IssuerSpecPatchPtrOutput)
}

func (o IssuerSpecPatchOutput) Acme() IssuerSpecAcmePatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecPatch) *IssuerSpecAcmePatch { return v.Acme }).(IssuerSpecAcmePatchPtrOutput)
}

func (o IssuerSpecPatchOutput) Ca() IssuerSpecCaPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecPatch) *IssuerSpecCaPatch { return v.Ca }).(IssuerSpecCaPatchPtrOutput)
}

func (o IssuerSpecPatchOutput) SelfSigned() IssuerSpecSelfSignedPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecPatch) *IssuerSpecSelfSignedPatch { return v.SelfSigned }).(IssuerSpecSelfSignedPatchPtrOutput)
}

func (o IssuerSpecPatchOutput) Vault() IssuerSpecVaultPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecPatch) *IssuerSpecVaultPatch { return v.Vault }).(IssuerSpecVaultPatchPtrOutput)
}

func (o IssuerSpecPatchOutput) Venafi() IssuerSpecVenafiPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecPatch) *IssuerSpecVenafiPatch { return v.Venafi }).(IssuerSpecVenafiPatchPtrOutput)
}

type IssuerSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecPatch)(nil)).Elem()
}

func (o IssuerSpecPatchPtrOutput) ToIssuerSpecPatchPtrOutput() IssuerSpecPatchPtrOutput {
	return o
}

func (o IssuerSpecPatchPtrOutput) ToIssuerSpecPatchPtrOutputWithContext(ctx context.Context) IssuerSpecPatchPtrOutput {
	return o
}

func (o IssuerSpecPatchPtrOutput) Elem() IssuerSpecPatchOutput {
	return o.ApplyT(func(v *IssuerSpecPatch) IssuerSpecPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecPatch
		return ret
	}).(IssuerSpecPatchOutput)
}

func (o IssuerSpecPatchPtrOutput) Acme() IssuerSpecAcmePatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecPatch) *IssuerSpecAcmePatch {
		if v == nil {
			return nil
		}
		return v.Acme
	}).(IssuerSpecAcmePatchPtrOutput)
}

func (o IssuerSpecPatchPtrOutput) Ca() IssuerSpecCaPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecPatch) *IssuerSpecCaPatch {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(IssuerSpecCaPatchPtrOutput)
}

func (o IssuerSpecPatchPtrOutput) SelfSigned() IssuerSpecSelfSignedPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecPatch) *IssuerSpecSelfSignedPatch {
		if v == nil {
			return nil
		}
		return v.SelfSigned
	}).(IssuerSpecSelfSignedPatchPtrOutput)
}

func (o IssuerSpecPatchPtrOutput) Vault() IssuerSpecVaultPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecPatch) *IssuerSpecVaultPatch {
		if v == nil {
			return nil
		}
		return v.Vault
	}).(IssuerSpecVaultPatchPtrOutput)
}

func (o IssuerSpecPatchPtrOutput) Venafi() IssuerSpecVenafiPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecPatch) *IssuerSpecVenafiPatch {
		if v == nil {
			return nil
		}
		return v.Venafi
	}).(IssuerSpecVenafiPatchPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the
// private key used to create the CertificateRequest object.
type IssuerSpecSelfSigned struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies
	// the location of the CRL from which the revocation of this certificate can be checked.
	// If not set certificate will be issued without CDP. Values are strings.
	CrlDistributionPoints []string `pulumi:"crlDistributionPoints"`
}

// IssuerSpecSelfSignedInput is an input type that accepts IssuerSpecSelfSignedArgs and IssuerSpecSelfSignedOutput values.
// You can construct a concrete instance of `IssuerSpecSelfSignedInput` via:
//
//	IssuerSpecSelfSignedArgs{...}
type IssuerSpecSelfSignedInput interface {
	pulumi.Input

	ToIssuerSpecSelfSignedOutput() IssuerSpecSelfSignedOutput
	ToIssuerSpecSelfSignedOutputWithContext(context.Context) IssuerSpecSelfSignedOutput
}

// SelfSigned configures this issuer to 'self sign' certificates using the
// private key used to create the CertificateRequest object.
type IssuerSpecSelfSignedArgs struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies
	// the location of the CRL from which the revocation of this certificate can be checked.
	// If not set certificate will be issued without CDP. Values are strings.
	CrlDistributionPoints pulumi.StringArrayInput `pulumi:"crlDistributionPoints"`
}

func (IssuerSpecSelfSignedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecSelfSigned)(nil)).Elem()
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedOutput() IssuerSpecSelfSignedOutput {
	return i.ToIssuerSpecSelfSignedOutputWithContext(context.Background())
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedOutputWithContext(ctx context.Context) IssuerSpecSelfSignedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedOutput)
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return i.ToIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedOutput).ToIssuerSpecSelfSignedPtrOutputWithContext(ctx)
}

// IssuerSpecSelfSignedPtrInput is an input type that accepts IssuerSpecSelfSignedArgs, IssuerSpecSelfSignedPtr and IssuerSpecSelfSignedPtrOutput values.
// You can construct a concrete instance of `IssuerSpecSelfSignedPtrInput` via:
//
//	        IssuerSpecSelfSignedArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecSelfSignedPtrInput interface {
	pulumi.Input

	ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput
	ToIssuerSpecSelfSignedPtrOutputWithContext(context.Context) IssuerSpecSelfSignedPtrOutput
}

type issuerSpecSelfSignedPtrType IssuerSpecSelfSignedArgs

func IssuerSpecSelfSignedPtr(v *IssuerSpecSelfSignedArgs) IssuerSpecSelfSignedPtrInput {
	return (*issuerSpecSelfSignedPtrType)(v)
}

func (*issuerSpecSelfSignedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecSelfSigned)(nil)).Elem()
}

func (i *issuerSpecSelfSignedPtrType) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return i.ToIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (i *issuerSpecSelfSignedPtrType) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the
// private key used to create the CertificateRequest object.
type IssuerSpecSelfSignedOutput struct{ *pulumi.OutputState }

func (IssuerSpecSelfSignedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecSelfSigned)(nil)).Elem()
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedOutput() IssuerSpecSelfSignedOutput {
	return o
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedOutputWithContext(ctx context.Context) IssuerSpecSelfSignedOutput {
	return o
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return o.ToIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecSelfSigned) *IssuerSpecSelfSigned {
		return &v
	}).(IssuerSpecSelfSignedPtrOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies
// the location of the CRL from which the revocation of this certificate can be checked.
// If not set certificate will be issued without CDP. Values are strings.
func (o IssuerSpecSelfSignedOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecSelfSigned) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

type IssuerSpecSelfSignedPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecSelfSignedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecSelfSigned)(nil)).Elem()
}

func (o IssuerSpecSelfSignedPtrOutput) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return o
}

func (o IssuerSpecSelfSignedPtrOutput) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return o
}

func (o IssuerSpecSelfSignedPtrOutput) Elem() IssuerSpecSelfSignedOutput {
	return o.ApplyT(func(v *IssuerSpecSelfSigned) IssuerSpecSelfSigned {
		if v != nil {
			return *v
		}
		var ret IssuerSpecSelfSigned
		return ret
	}).(IssuerSpecSelfSignedOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies
// the location of the CRL from which the revocation of this certificate can be checked.
// If not set certificate will be issued without CDP. Values are strings.
func (o IssuerSpecSelfSignedPtrOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecSelfSigned) []string {
		if v == nil {
			return nil
		}
		return v.CrlDistributionPoints
	}).(pulumi.StringArrayOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the
// private key used to create the CertificateRequest object.
type IssuerSpecSelfSignedPatch struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies
	// the location of the CRL from which the revocation of this certificate can be checked.
	// If not set certificate will be issued without CDP. Values are strings.
	CrlDistributionPoints []string `pulumi:"crlDistributionPoints"`
}

// IssuerSpecSelfSignedPatchInput is an input type that accepts IssuerSpecSelfSignedPatchArgs and IssuerSpecSelfSignedPatchOutput values.
// You can construct a concrete instance of `IssuerSpecSelfSignedPatchInput` via:
//
//	IssuerSpecSelfSignedPatchArgs{...}
type IssuerSpecSelfSignedPatchInput interface {
	pulumi.Input

	ToIssuerSpecSelfSignedPatchOutput() IssuerSpecSelfSignedPatchOutput
	ToIssuerSpecSelfSignedPatchOutputWithContext(context.Context) IssuerSpecSelfSignedPatchOutput
}

// SelfSigned configures this issuer to 'self sign' certificates using the
// private key used to create the CertificateRequest object.
type IssuerSpecSelfSignedPatchArgs struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies
	// the location of the CRL from which the revocation of this certificate can be checked.
	// If not set certificate will be issued without CDP. Values are strings.
	CrlDistributionPoints pulumi.StringArrayInput `pulumi:"crlDistributionPoints"`
}

func (IssuerSpecSelfSignedPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecSelfSignedPatch)(nil)).Elem()
}

func (i IssuerSpecSelfSignedPatchArgs) ToIssuerSpecSelfSignedPatchOutput() IssuerSpecSelfSignedPatchOutput {
	return i.ToIssuerSpecSelfSignedPatchOutputWithContext(context.Background())
}

func (i IssuerSpecSelfSignedPatchArgs) ToIssuerSpecSelfSignedPatchOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedPatchOutput)
}

func (i IssuerSpecSelfSignedPatchArgs) ToIssuerSpecSelfSignedPatchPtrOutput() IssuerSpecSelfSignedPatchPtrOutput {
	return i.ToIssuerSpecSelfSignedPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecSelfSignedPatchArgs) ToIssuerSpecSelfSignedPatchPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedPatchOutput).ToIssuerSpecSelfSignedPatchPtrOutputWithContext(ctx)
}

// IssuerSpecSelfSignedPatchPtrInput is an input type that accepts IssuerSpecSelfSignedPatchArgs, IssuerSpecSelfSignedPatchPtr and IssuerSpecSelfSignedPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecSelfSignedPatchPtrInput` via:
//
//	        IssuerSpecSelfSignedPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecSelfSignedPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecSelfSignedPatchPtrOutput() IssuerSpecSelfSignedPatchPtrOutput
	ToIssuerSpecSelfSignedPatchPtrOutputWithContext(context.Context) IssuerSpecSelfSignedPatchPtrOutput
}

type issuerSpecSelfSignedPatchPtrType IssuerSpecSelfSignedPatchArgs

func IssuerSpecSelfSignedPatchPtr(v *IssuerSpecSelfSignedPatchArgs) IssuerSpecSelfSignedPatchPtrInput {
	return (*issuerSpecSelfSignedPatchPtrType)(v)
}

func (*issuerSpecSelfSignedPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecSelfSignedPatch)(nil)).Elem()
}

func (i *issuerSpecSelfSignedPatchPtrType) ToIssuerSpecSelfSignedPatchPtrOutput() IssuerSpecSelfSignedPatchPtrOutput {
	return i.ToIssuerSpecSelfSignedPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecSelfSignedPatchPtrType) ToIssuerSpecSelfSignedPatchPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedPatchPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the
// private key used to create the CertificateRequest object.
type IssuerSpecSelfSignedPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecSelfSignedPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecSelfSignedPatch)(nil)).Elem()
}

func (o IssuerSpecSelfSignedPatchOutput) ToIssuerSpecSelfSignedPatchOutput() IssuerSpecSelfSignedPatchOutput {
	return o
}

func (o IssuerSpecSelfSignedPatchOutput) ToIssuerSpecSelfSignedPatchOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPatchOutput {
	return o
}

func (o IssuerSpecSelfSignedPatchOutput) ToIssuerSpecSelfSignedPatchPtrOutput() IssuerSpecSelfSignedPatchPtrOutput {
	return o.ToIssuerSpecSelfSignedPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecSelfSignedPatchOutput) ToIssuerSpecSelfSignedPatchPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecSelfSignedPatch) *IssuerSpecSelfSignedPatch {
		return &v
	}).(IssuerSpecSelfSignedPatchPtrOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies
// the location of the CRL from which the revocation of this certificate can be checked.
// If not set certificate will be issued without CDP. Values are strings.
func (o IssuerSpecSelfSignedPatchOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecSelfSignedPatch) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

type IssuerSpecSelfSignedPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecSelfSignedPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecSelfSignedPatch)(nil)).Elem()
}

func (o IssuerSpecSelfSignedPatchPtrOutput) ToIssuerSpecSelfSignedPatchPtrOutput() IssuerSpecSelfSignedPatchPtrOutput {
	return o
}

func (o IssuerSpecSelfSignedPatchPtrOutput) ToIssuerSpecSelfSignedPatchPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPatchPtrOutput {
	return o
}

func (o IssuerSpecSelfSignedPatchPtrOutput) Elem() IssuerSpecSelfSignedPatchOutput {
	return o.ApplyT(func(v *IssuerSpecSelfSignedPatch) IssuerSpecSelfSignedPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecSelfSignedPatch
		return ret
	}).(IssuerSpecSelfSignedPatchOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies
// the location of the CRL from which the revocation of this certificate can be checked.
// If not set certificate will be issued without CDP. Values are strings.
func (o IssuerSpecSelfSignedPatchPtrOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecSelfSignedPatch) []string {
		if v == nil {
			return nil
		}
		return v.CrlDistributionPoints
	}).(pulumi.StringArrayOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault
// PKI backend.
type IssuerSpecVault struct {
	Auth *IssuerSpecVaultAuth `pulumi:"auth"`
	// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
	// chain presented by Vault. Only used if using HTTPS to connect to Vault and
	// ignored for HTTP connections.
	// Mutually exclusive with CABundleSecretRef.
	// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
	// the cert-manager controller container is used to validate the TLS connection.
	CaBundle            *string                             `pulumi:"caBundle"`
	CaBundleSecretRef   *IssuerSpecVaultCaBundleSecretRef   `pulumi:"caBundleSecretRef"`
	ClientCertSecretRef *IssuerSpecVaultClientCertSecretRef `pulumi:"clientCertSecretRef"`
	ClientKeySecretRef  *IssuerSpecVaultClientKeySecretRef  `pulumi:"clientKeySecretRef"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace *string `pulumi:"namespace"`
	// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
	// "my_pki_mount/sign/my-role-name".
	Path *string `pulumi:"path"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server *string `pulumi:"server"`
}

// IssuerSpecVaultInput is an input type that accepts IssuerSpecVaultArgs and IssuerSpecVaultOutput values.
// You can construct a concrete instance of `IssuerSpecVaultInput` via:
//
//	IssuerSpecVaultArgs{...}
type IssuerSpecVaultInput interface {
	pulumi.Input

	ToIssuerSpecVaultOutput() IssuerSpecVaultOutput
	ToIssuerSpecVaultOutputWithContext(context.Context) IssuerSpecVaultOutput
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault
// PKI backend.
type IssuerSpecVaultArgs struct {
	Auth IssuerSpecVaultAuthPtrInput `pulumi:"auth"`
	// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
	// chain presented by Vault. Only used if using HTTPS to connect to Vault and
	// ignored for HTTP connections.
	// Mutually exclusive with CABundleSecretRef.
	// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
	// the cert-manager controller container is used to validate the TLS connection.
	CaBundle            pulumi.StringPtrInput                      `pulumi:"caBundle"`
	CaBundleSecretRef   IssuerSpecVaultCaBundleSecretRefPtrInput   `pulumi:"caBundleSecretRef"`
	ClientCertSecretRef IssuerSpecVaultClientCertSecretRefPtrInput `pulumi:"clientCertSecretRef"`
	ClientKeySecretRef  IssuerSpecVaultClientKeySecretRefPtrInput  `pulumi:"clientKeySecretRef"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
	// "my_pki_mount/sign/my-role-name".
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server pulumi.StringPtrInput `pulumi:"server"`
}

func (IssuerSpecVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVault)(nil)).Elem()
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultOutput() IssuerSpecVaultOutput {
	return i.ToIssuerSpecVaultOutputWithContext(context.Background())
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultOutputWithContext(ctx context.Context) IssuerSpecVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultOutput)
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return i.ToIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultOutput).ToIssuerSpecVaultPtrOutputWithContext(ctx)
}

// IssuerSpecVaultPtrInput is an input type that accepts IssuerSpecVaultArgs, IssuerSpecVaultPtr and IssuerSpecVaultPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultPtrInput` via:
//
//	        IssuerSpecVaultArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput
	ToIssuerSpecVaultPtrOutputWithContext(context.Context) IssuerSpecVaultPtrOutput
}

type issuerSpecVaultPtrType IssuerSpecVaultArgs

func IssuerSpecVaultPtr(v *IssuerSpecVaultArgs) IssuerSpecVaultPtrInput {
	return (*issuerSpecVaultPtrType)(v)
}

func (*issuerSpecVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVault)(nil)).Elem()
}

func (i *issuerSpecVaultPtrType) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return i.ToIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultPtrType) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault
// PKI backend.
type IssuerSpecVaultOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVault)(nil)).Elem()
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultOutput() IssuerSpecVaultOutput {
	return o
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultOutputWithContext(ctx context.Context) IssuerSpecVaultOutput {
	return o
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return o.ToIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVault) *IssuerSpecVault {
		return &v
	}).(IssuerSpecVaultPtrOutput)
}

func (o IssuerSpecVaultOutput) Auth() IssuerSpecVaultAuthPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *IssuerSpecVaultAuth { return v.Auth }).(IssuerSpecVaultAuthPtrOutput)
}

// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
// chain presented by Vault. Only used if using HTTPS to connect to Vault and
// ignored for HTTP connections.
// Mutually exclusive with CABundleSecretRef.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
func (o IssuerSpecVaultOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVaultOutput) CaBundleSecretRef() IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *IssuerSpecVaultCaBundleSecretRef { return v.CaBundleSecretRef }).(IssuerSpecVaultCaBundleSecretRefPtrOutput)
}

func (o IssuerSpecVaultOutput) ClientCertSecretRef() IssuerSpecVaultClientCertSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *IssuerSpecVaultClientCertSecretRef { return v.ClientCertSecretRef }).(IssuerSpecVaultClientCertSecretRefPtrOutput)
}

func (o IssuerSpecVaultOutput) ClientKeySecretRef() IssuerSpecVaultClientKeySecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *IssuerSpecVaultClientKeySecretRef { return v.ClientKeySecretRef }).(IssuerSpecVaultClientKeySecretRefPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o IssuerSpecVaultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
// "my_pki_mount/sign/my-role-name".
func (o IssuerSpecVaultOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o IssuerSpecVaultOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVault)(nil)).Elem()
}

func (o IssuerSpecVaultPtrOutput) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return o
}

func (o IssuerSpecVaultPtrOutput) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return o
}

func (o IssuerSpecVaultPtrOutput) Elem() IssuerSpecVaultOutput {
	return o.ApplyT(func(v *IssuerSpecVault) IssuerSpecVault {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVault
		return ret
	}).(IssuerSpecVaultOutput)
}

func (o IssuerSpecVaultPtrOutput) Auth() IssuerSpecVaultAuthPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *IssuerSpecVaultAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(IssuerSpecVaultAuthPtrOutput)
}

// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
// chain presented by Vault. Only used if using HTTPS to connect to Vault and
// ignored for HTTP connections.
// Mutually exclusive with CABundleSecretRef.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
func (o IssuerSpecVaultPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVaultPtrOutput) CaBundleSecretRef() IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *IssuerSpecVaultCaBundleSecretRef {
		if v == nil {
			return nil
		}
		return v.CaBundleSecretRef
	}).(IssuerSpecVaultCaBundleSecretRefPtrOutput)
}

func (o IssuerSpecVaultPtrOutput) ClientCertSecretRef() IssuerSpecVaultClientCertSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *IssuerSpecVaultClientCertSecretRef {
		if v == nil {
			return nil
		}
		return v.ClientCertSecretRef
	}).(IssuerSpecVaultClientCertSecretRefPtrOutput)
}

func (o IssuerSpecVaultPtrOutput) ClientKeySecretRef() IssuerSpecVaultClientKeySecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *IssuerSpecVaultClientKeySecretRef {
		if v == nil {
			return nil
		}
		return v.ClientKeySecretRef
	}).(IssuerSpecVaultClientKeySecretRefPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o IssuerSpecVaultPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
// "my_pki_mount/sign/my-role-name".
func (o IssuerSpecVaultPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o IssuerSpecVaultPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuth struct {
	AppRole           *IssuerSpecVaultAuthAppRole           `pulumi:"appRole"`
	ClientCertificate *IssuerSpecVaultAuthClientCertificate `pulumi:"clientCertificate"`
	Kubernetes        *IssuerSpecVaultAuthKubernetes        `pulumi:"kubernetes"`
	TokenSecretRef    *IssuerSpecVaultAuthTokenSecretRef    `pulumi:"tokenSecretRef"`
}

// IssuerSpecVaultAuthInput is an input type that accepts IssuerSpecVaultAuthArgs and IssuerSpecVaultAuthOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthInput` via:
//
//	IssuerSpecVaultAuthArgs{...}
type IssuerSpecVaultAuthInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthOutput() IssuerSpecVaultAuthOutput
	ToIssuerSpecVaultAuthOutputWithContext(context.Context) IssuerSpecVaultAuthOutput
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuthArgs struct {
	AppRole           IssuerSpecVaultAuthAppRolePtrInput           `pulumi:"appRole"`
	ClientCertificate IssuerSpecVaultAuthClientCertificatePtrInput `pulumi:"clientCertificate"`
	Kubernetes        IssuerSpecVaultAuthKubernetesPtrInput        `pulumi:"kubernetes"`
	TokenSecretRef    IssuerSpecVaultAuthTokenSecretRefPtrInput    `pulumi:"tokenSecretRef"`
}

func (IssuerSpecVaultAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuth)(nil)).Elem()
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthOutput() IssuerSpecVaultAuthOutput {
	return i.ToIssuerSpecVaultAuthOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthOutputWithContext(ctx context.Context) IssuerSpecVaultAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthOutput)
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return i.ToIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthOutput).ToIssuerSpecVaultAuthPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthPtrInput is an input type that accepts IssuerSpecVaultAuthArgs, IssuerSpecVaultAuthPtr and IssuerSpecVaultAuthPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthPtrInput` via:
//
//	        IssuerSpecVaultAuthArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput
	ToIssuerSpecVaultAuthPtrOutputWithContext(context.Context) IssuerSpecVaultAuthPtrOutput
}

type issuerSpecVaultAuthPtrType IssuerSpecVaultAuthArgs

func IssuerSpecVaultAuthPtr(v *IssuerSpecVaultAuthArgs) IssuerSpecVaultAuthPtrInput {
	return (*issuerSpecVaultAuthPtrType)(v)
}

func (*issuerSpecVaultAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuth)(nil)).Elem()
}

func (i *issuerSpecVaultAuthPtrType) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return i.ToIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthPtrType) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuthOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuth)(nil)).Elem()
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthOutput() IssuerSpecVaultAuthOutput {
	return o
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthOutputWithContext(ctx context.Context) IssuerSpecVaultAuthOutput {
	return o
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return o.ToIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuth) *IssuerSpecVaultAuth {
		return &v
	}).(IssuerSpecVaultAuthPtrOutput)
}

func (o IssuerSpecVaultAuthOutput) AppRole() IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuth) *IssuerSpecVaultAuthAppRole { return v.AppRole }).(IssuerSpecVaultAuthAppRolePtrOutput)
}

func (o IssuerSpecVaultAuthOutput) ClientCertificate() IssuerSpecVaultAuthClientCertificatePtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuth) *IssuerSpecVaultAuthClientCertificate { return v.ClientCertificate }).(IssuerSpecVaultAuthClientCertificatePtrOutput)
}

func (o IssuerSpecVaultAuthOutput) Kubernetes() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuth) *IssuerSpecVaultAuthKubernetes { return v.Kubernetes }).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

func (o IssuerSpecVaultAuthOutput) TokenSecretRef() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuth) *IssuerSpecVaultAuthTokenSecretRef { return v.TokenSecretRef }).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

type IssuerSpecVaultAuthPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuth)(nil)).Elem()
}

func (o IssuerSpecVaultAuthPtrOutput) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthPtrOutput) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthPtrOutput) Elem() IssuerSpecVaultAuthOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuth) IssuerSpecVaultAuth {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuth
		return ret
	}).(IssuerSpecVaultAuthOutput)
}

func (o IssuerSpecVaultAuthPtrOutput) AppRole() IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuth) *IssuerSpecVaultAuthAppRole {
		if v == nil {
			return nil
		}
		return v.AppRole
	}).(IssuerSpecVaultAuthAppRolePtrOutput)
}

func (o IssuerSpecVaultAuthPtrOutput) ClientCertificate() IssuerSpecVaultAuthClientCertificatePtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuth) *IssuerSpecVaultAuthClientCertificate {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(IssuerSpecVaultAuthClientCertificatePtrOutput)
}

func (o IssuerSpecVaultAuthPtrOutput) Kubernetes() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuth) *IssuerSpecVaultAuthKubernetes {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

func (o IssuerSpecVaultAuthPtrOutput) TokenSecretRef() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuth) *IssuerSpecVaultAuthTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.TokenSecretRef
	}).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRole struct {
	// Path where the App Role authentication backend is mounted in Vault, e.g:
	// "approle"
	Path *string `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting
	// up the authentication backend in Vault.
	RoleId    *string                              `pulumi:"roleId"`
	SecretRef *IssuerSpecVaultAuthAppRoleSecretRef `pulumi:"secretRef"`
}

// IssuerSpecVaultAuthAppRoleInput is an input type that accepts IssuerSpecVaultAuthAppRoleArgs and IssuerSpecVaultAuthAppRoleOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRoleInput` via:
//
//	IssuerSpecVaultAuthAppRoleArgs{...}
type IssuerSpecVaultAuthAppRoleInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRoleOutput() IssuerSpecVaultAuthAppRoleOutput
	ToIssuerSpecVaultAuthAppRoleOutputWithContext(context.Context) IssuerSpecVaultAuthAppRoleOutput
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRoleArgs struct {
	// Path where the App Role authentication backend is mounted in Vault, e.g:
	// "approle"
	Path pulumi.StringPtrInput `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting
	// up the authentication backend in Vault.
	RoleId    pulumi.StringPtrInput                       `pulumi:"roleId"`
	SecretRef IssuerSpecVaultAuthAppRoleSecretRefPtrInput `pulumi:"secretRef"`
}

func (IssuerSpecVaultAuthAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRoleOutput() IssuerSpecVaultAuthAppRoleOutput {
	return i.ToIssuerSpecVaultAuthAppRoleOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRoleOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleOutput)
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return i.ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleOutput).ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthAppRolePtrInput is an input type that accepts IssuerSpecVaultAuthAppRoleArgs, IssuerSpecVaultAuthAppRolePtr and IssuerSpecVaultAuthAppRolePtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRolePtrInput` via:
//
//	        IssuerSpecVaultAuthAppRoleArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthAppRolePtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput
	ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Context) IssuerSpecVaultAuthAppRolePtrOutput
}

type issuerSpecVaultAuthAppRolePtrType IssuerSpecVaultAuthAppRoleArgs

func IssuerSpecVaultAuthAppRolePtr(v *IssuerSpecVaultAuthAppRoleArgs) IssuerSpecVaultAuthAppRolePtrInput {
	return (*issuerSpecVaultAuthAppRolePtrType)(v)
}

func (*issuerSpecVaultAuthAppRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (i *issuerSpecVaultAuthAppRolePtrType) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return i.ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthAppRolePtrType) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRolePtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRoleOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRoleOutput() IssuerSpecVaultAuthAppRoleOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRoleOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthAppRole) *IssuerSpecVaultAuthAppRole {
		return &v
	}).(IssuerSpecVaultAuthAppRolePtrOutput)
}

// Path where the App Role authentication backend is mounted in Vault, e.g:
// "approle"
func (o IssuerSpecVaultAuthAppRoleOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRole) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting
// up the authentication backend in Vault.
func (o IssuerSpecVaultAuthAppRoleOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRole) *string { return v.RoleId }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVaultAuthAppRoleOutput) SecretRef() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRole) *IssuerSpecVaultAuthAppRoleSecretRef { return v.SecretRef }).(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

type IssuerSpecVaultAuthAppRolePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRolePtrOutput) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRolePtrOutput) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRolePtrOutput) Elem() IssuerSpecVaultAuthAppRoleOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRole) IssuerSpecVaultAuthAppRole {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthAppRole
		return ret
	}).(IssuerSpecVaultAuthAppRoleOutput)
}

// Path where the App Role authentication backend is mounted in Vault, e.g:
// "approle"
func (o IssuerSpecVaultAuthAppRolePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting
// up the authentication backend in Vault.
func (o IssuerSpecVaultAuthAppRolePtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return v.RoleId
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVaultAuthAppRolePtrOutput) SecretRef() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRole) *IssuerSpecVaultAuthAppRoleSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRolePatch struct {
	// Path where the App Role authentication backend is mounted in Vault, e.g:
	// "approle"
	Path *string `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting
	// up the authentication backend in Vault.
	RoleId    *string                                   `pulumi:"roleId"`
	SecretRef *IssuerSpecVaultAuthAppRoleSecretRefPatch `pulumi:"secretRef"`
}

// IssuerSpecVaultAuthAppRolePatchInput is an input type that accepts IssuerSpecVaultAuthAppRolePatchArgs and IssuerSpecVaultAuthAppRolePatchOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRolePatchInput` via:
//
//	IssuerSpecVaultAuthAppRolePatchArgs{...}
type IssuerSpecVaultAuthAppRolePatchInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRolePatchOutput() IssuerSpecVaultAuthAppRolePatchOutput
	ToIssuerSpecVaultAuthAppRolePatchOutputWithContext(context.Context) IssuerSpecVaultAuthAppRolePatchOutput
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRolePatchArgs struct {
	// Path where the App Role authentication backend is mounted in Vault, e.g:
	// "approle"
	Path pulumi.StringPtrInput `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting
	// up the authentication backend in Vault.
	RoleId    pulumi.StringPtrInput                            `pulumi:"roleId"`
	SecretRef IssuerSpecVaultAuthAppRoleSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (IssuerSpecVaultAuthAppRolePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRolePatch)(nil)).Elem()
}

func (i IssuerSpecVaultAuthAppRolePatchArgs) ToIssuerSpecVaultAuthAppRolePatchOutput() IssuerSpecVaultAuthAppRolePatchOutput {
	return i.ToIssuerSpecVaultAuthAppRolePatchOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRolePatchArgs) ToIssuerSpecVaultAuthAppRolePatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRolePatchOutput)
}

func (i IssuerSpecVaultAuthAppRolePatchArgs) ToIssuerSpecVaultAuthAppRolePatchPtrOutput() IssuerSpecVaultAuthAppRolePatchPtrOutput {
	return i.ToIssuerSpecVaultAuthAppRolePatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRolePatchArgs) ToIssuerSpecVaultAuthAppRolePatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRolePatchOutput).ToIssuerSpecVaultAuthAppRolePatchPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthAppRolePatchPtrInput is an input type that accepts IssuerSpecVaultAuthAppRolePatchArgs, IssuerSpecVaultAuthAppRolePatchPtr and IssuerSpecVaultAuthAppRolePatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRolePatchPtrInput` via:
//
//	        IssuerSpecVaultAuthAppRolePatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthAppRolePatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRolePatchPtrOutput() IssuerSpecVaultAuthAppRolePatchPtrOutput
	ToIssuerSpecVaultAuthAppRolePatchPtrOutputWithContext(context.Context) IssuerSpecVaultAuthAppRolePatchPtrOutput
}

type issuerSpecVaultAuthAppRolePatchPtrType IssuerSpecVaultAuthAppRolePatchArgs

func IssuerSpecVaultAuthAppRolePatchPtr(v *IssuerSpecVaultAuthAppRolePatchArgs) IssuerSpecVaultAuthAppRolePatchPtrInput {
	return (*issuerSpecVaultAuthAppRolePatchPtrType)(v)
}

func (*issuerSpecVaultAuthAppRolePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRolePatch)(nil)).Elem()
}

func (i *issuerSpecVaultAuthAppRolePatchPtrType) ToIssuerSpecVaultAuthAppRolePatchPtrOutput() IssuerSpecVaultAuthAppRolePatchPtrOutput {
	return i.ToIssuerSpecVaultAuthAppRolePatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthAppRolePatchPtrType) ToIssuerSpecVaultAuthAppRolePatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRolePatchPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRolePatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRolePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRolePatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRolePatchOutput) ToIssuerSpecVaultAuthAppRolePatchOutput() IssuerSpecVaultAuthAppRolePatchOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRolePatchOutput) ToIssuerSpecVaultAuthAppRolePatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePatchOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRolePatchOutput) ToIssuerSpecVaultAuthAppRolePatchPtrOutput() IssuerSpecVaultAuthAppRolePatchPtrOutput {
	return o.ToIssuerSpecVaultAuthAppRolePatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthAppRolePatchOutput) ToIssuerSpecVaultAuthAppRolePatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthAppRolePatch) *IssuerSpecVaultAuthAppRolePatch {
		return &v
	}).(IssuerSpecVaultAuthAppRolePatchPtrOutput)
}

// Path where the App Role authentication backend is mounted in Vault, e.g:
// "approle"
func (o IssuerSpecVaultAuthAppRolePatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRolePatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting
// up the authentication backend in Vault.
func (o IssuerSpecVaultAuthAppRolePatchOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRolePatch) *string { return v.RoleId }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVaultAuthAppRolePatchOutput) SecretRef() IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRolePatch) *IssuerSpecVaultAuthAppRoleSecretRefPatch { return v.SecretRef }).(IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput)
}

type IssuerSpecVaultAuthAppRolePatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRolePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRolePatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRolePatchPtrOutput) ToIssuerSpecVaultAuthAppRolePatchPtrOutput() IssuerSpecVaultAuthAppRolePatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRolePatchPtrOutput) ToIssuerSpecVaultAuthAppRolePatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRolePatchPtrOutput) Elem() IssuerSpecVaultAuthAppRolePatchOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRolePatch) IssuerSpecVaultAuthAppRolePatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthAppRolePatch
		return ret
	}).(IssuerSpecVaultAuthAppRolePatchOutput)
}

// Path where the App Role authentication backend is mounted in Vault, e.g:
// "approle"
func (o IssuerSpecVaultAuthAppRolePatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRolePatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting
// up the authentication backend in Vault.
func (o IssuerSpecVaultAuthAppRolePatchPtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRolePatch) *string {
		if v == nil {
			return nil
		}
		return v.RoleId
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVaultAuthAppRolePatchPtrOutput) SecretRef() IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRolePatch) *IssuerSpecVaultAuthAppRoleSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVaultAuthAppRoleSecretRefInput is an input type that accepts IssuerSpecVaultAuthAppRoleSecretRefArgs and IssuerSpecVaultAuthAppRoleSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRoleSecretRefInput` via:
//
//	IssuerSpecVaultAuthAppRoleSecretRefArgs{...}
type IssuerSpecVaultAuthAppRoleSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRoleSecretRefOutput() IssuerSpecVaultAuthAppRoleSecretRefOutput
	ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(context.Context) IssuerSpecVaultAuthAppRoleSecretRefOutput
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthAppRoleSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefOutput() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefOutput)
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefOutput).ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthAppRoleSecretRefPtrInput is an input type that accepts IssuerSpecVaultAuthAppRoleSecretRefArgs, IssuerSpecVaultAuthAppRoleSecretRefPtr and IssuerSpecVaultAuthAppRoleSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRoleSecretRefPtrInput` via:
//
//	        IssuerSpecVaultAuthAppRoleSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthAppRoleSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput
	ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput
}

type issuerSpecVaultAuthAppRoleSecretRefPtrType IssuerSpecVaultAuthAppRoleSecretRefArgs

func IssuerSpecVaultAuthAppRoleSecretRefPtr(v *IssuerSpecVaultAuthAppRoleSecretRefArgs) IssuerSpecVaultAuthAppRoleSecretRefPtrInput {
	return (*issuerSpecVaultAuthAppRoleSecretRefPtrType)(v)
}

func (*issuerSpecVaultAuthAppRoleSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultAuthAppRoleSecretRefPtrType) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthAppRoleSecretRefPtrType) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRoleSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefOutput() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthAppRoleSecretRef) *IssuerSpecVaultAuthAppRoleSecretRef {
		return &v
	}).(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRoleSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRoleSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultAuthAppRoleSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Elem() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRoleSecretRef) IssuerSpecVaultAuthAppRoleSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthAppRoleSecretRef
		return ret
	}).(IssuerSpecVaultAuthAppRoleSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVaultAuthAppRoleSecretRefPatchInput is an input type that accepts IssuerSpecVaultAuthAppRoleSecretRefPatchArgs and IssuerSpecVaultAuthAppRoleSecretRefPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRoleSecretRefPatchInput` via:
//
//	IssuerSpecVaultAuthAppRoleSecretRefPatchArgs{...}
type IssuerSpecVaultAuthAppRoleSecretRefPatchInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRoleSecretRefPatchOutput() IssuerSpecVaultAuthAppRoleSecretRefPatchOutput
	ToIssuerSpecVaultAuthAppRoleSecretRefPatchOutputWithContext(context.Context) IssuerSpecVaultAuthAppRoleSecretRefPatchOutput
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthAppRoleSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRefPatch)(nil)).Elem()
}

func (i IssuerSpecVaultAuthAppRoleSecretRefPatchArgs) ToIssuerSpecVaultAuthAppRoleSecretRefPatchOutput() IssuerSpecVaultAuthAppRoleSecretRefPatchOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleSecretRefPatchArgs) ToIssuerSpecVaultAuthAppRoleSecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefPatchOutput)
}

func (i IssuerSpecVaultAuthAppRoleSecretRefPatchArgs) ToIssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleSecretRefPatchArgs) ToIssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefPatchOutput).ToIssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthAppRoleSecretRefPatchPtrInput is an input type that accepts IssuerSpecVaultAuthAppRoleSecretRefPatchArgs, IssuerSpecVaultAuthAppRoleSecretRefPatchPtr and IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRoleSecretRefPatchPtrInput` via:
//
//	        IssuerSpecVaultAuthAppRoleSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthAppRoleSecretRefPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput
	ToIssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(context.Context) IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput
}

type issuerSpecVaultAuthAppRoleSecretRefPatchPtrType IssuerSpecVaultAuthAppRoleSecretRefPatchArgs

func IssuerSpecVaultAuthAppRoleSecretRefPatchPtr(v *IssuerSpecVaultAuthAppRoleSecretRefPatchArgs) IssuerSpecVaultAuthAppRoleSecretRefPatchPtrInput {
	return (*issuerSpecVaultAuthAppRoleSecretRefPatchPtrType)(v)
}

func (*issuerSpecVaultAuthAppRoleSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRoleSecretRefPatch)(nil)).Elem()
}

func (i *issuerSpecVaultAuthAppRoleSecretRefPatchPtrType) ToIssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthAppRoleSecretRefPatchPtrType) ToIssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRefPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRoleSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPatchOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPatchOutput() IssuerSpecVaultAuthAppRoleSecretRefPatchOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPatchOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPatchOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPatchOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput {
	return o.ToIssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPatchOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthAppRoleSecretRefPatch) *IssuerSpecVaultAuthAppRoleSecretRefPatch {
		return &v
	}).(IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthAppRoleSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRoleSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthAppRoleSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRoleSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRoleSecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput) Elem() IssuerSpecVaultAuthAppRoleSecretRefPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRoleSecretRefPatch) IssuerSpecVaultAuthAppRoleSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthAppRoleSecretRefPatch
		return ret
	}).(IssuerSpecVaultAuthAppRoleSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRoleSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRoleSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ClientCertificate authenticates with Vault by presenting a client
// certificate during the request's TLS handshake.
// Works only when using HTTPS protocol.
type IssuerSpecVaultAuthClientCertificate struct {
	// The Vault mountPath here is the mount path to use when authenticating with
	// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
	// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
	// default value "/v1/auth/cert" will be used.
	MountPath *string `pulumi:"mountPath"`
	// Name of the certificate role to authenticate against.
	// If not set, matching any certificate role, if available.
	Name *string `pulumi:"name"`
	// Reference to Kubernetes Secret of type "kubernetes.io/tls" (hence containing
	// tls.crt and tls.key) used to authenticate to Vault using TLS client
	// authentication.
	SecretName *string `pulumi:"secretName"`
}

// IssuerSpecVaultAuthClientCertificateInput is an input type that accepts IssuerSpecVaultAuthClientCertificateArgs and IssuerSpecVaultAuthClientCertificateOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthClientCertificateInput` via:
//
//	IssuerSpecVaultAuthClientCertificateArgs{...}
type IssuerSpecVaultAuthClientCertificateInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthClientCertificateOutput() IssuerSpecVaultAuthClientCertificateOutput
	ToIssuerSpecVaultAuthClientCertificateOutputWithContext(context.Context) IssuerSpecVaultAuthClientCertificateOutput
}

// ClientCertificate authenticates with Vault by presenting a client
// certificate during the request's TLS handshake.
// Works only when using HTTPS protocol.
type IssuerSpecVaultAuthClientCertificateArgs struct {
	// The Vault mountPath here is the mount path to use when authenticating with
	// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
	// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
	// default value "/v1/auth/cert" will be used.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// Name of the certificate role to authenticate against.
	// If not set, matching any certificate role, if available.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to Kubernetes Secret of type "kubernetes.io/tls" (hence containing
	// tls.crt and tls.key) used to authenticate to Vault using TLS client
	// authentication.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (IssuerSpecVaultAuthClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthClientCertificate)(nil)).Elem()
}

func (i IssuerSpecVaultAuthClientCertificateArgs) ToIssuerSpecVaultAuthClientCertificateOutput() IssuerSpecVaultAuthClientCertificateOutput {
	return i.ToIssuerSpecVaultAuthClientCertificateOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthClientCertificateArgs) ToIssuerSpecVaultAuthClientCertificateOutputWithContext(ctx context.Context) IssuerSpecVaultAuthClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthClientCertificateOutput)
}

func (i IssuerSpecVaultAuthClientCertificateArgs) ToIssuerSpecVaultAuthClientCertificatePtrOutput() IssuerSpecVaultAuthClientCertificatePtrOutput {
	return i.ToIssuerSpecVaultAuthClientCertificatePtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthClientCertificateArgs) ToIssuerSpecVaultAuthClientCertificatePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthClientCertificateOutput).ToIssuerSpecVaultAuthClientCertificatePtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthClientCertificatePtrInput is an input type that accepts IssuerSpecVaultAuthClientCertificateArgs, IssuerSpecVaultAuthClientCertificatePtr and IssuerSpecVaultAuthClientCertificatePtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthClientCertificatePtrInput` via:
//
//	        IssuerSpecVaultAuthClientCertificateArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthClientCertificatePtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthClientCertificatePtrOutput() IssuerSpecVaultAuthClientCertificatePtrOutput
	ToIssuerSpecVaultAuthClientCertificatePtrOutputWithContext(context.Context) IssuerSpecVaultAuthClientCertificatePtrOutput
}

type issuerSpecVaultAuthClientCertificatePtrType IssuerSpecVaultAuthClientCertificateArgs

func IssuerSpecVaultAuthClientCertificatePtr(v *IssuerSpecVaultAuthClientCertificateArgs) IssuerSpecVaultAuthClientCertificatePtrInput {
	return (*issuerSpecVaultAuthClientCertificatePtrType)(v)
}

func (*issuerSpecVaultAuthClientCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthClientCertificate)(nil)).Elem()
}

func (i *issuerSpecVaultAuthClientCertificatePtrType) ToIssuerSpecVaultAuthClientCertificatePtrOutput() IssuerSpecVaultAuthClientCertificatePtrOutput {
	return i.ToIssuerSpecVaultAuthClientCertificatePtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthClientCertificatePtrType) ToIssuerSpecVaultAuthClientCertificatePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthClientCertificatePtrOutput)
}

// ClientCertificate authenticates with Vault by presenting a client
// certificate during the request's TLS handshake.
// Works only when using HTTPS protocol.
type IssuerSpecVaultAuthClientCertificateOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthClientCertificate)(nil)).Elem()
}

func (o IssuerSpecVaultAuthClientCertificateOutput) ToIssuerSpecVaultAuthClientCertificateOutput() IssuerSpecVaultAuthClientCertificateOutput {
	return o
}

func (o IssuerSpecVaultAuthClientCertificateOutput) ToIssuerSpecVaultAuthClientCertificateOutputWithContext(ctx context.Context) IssuerSpecVaultAuthClientCertificateOutput {
	return o
}

func (o IssuerSpecVaultAuthClientCertificateOutput) ToIssuerSpecVaultAuthClientCertificatePtrOutput() IssuerSpecVaultAuthClientCertificatePtrOutput {
	return o.ToIssuerSpecVaultAuthClientCertificatePtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthClientCertificateOutput) ToIssuerSpecVaultAuthClientCertificatePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthClientCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthClientCertificate) *IssuerSpecVaultAuthClientCertificate {
		return &v
	}).(IssuerSpecVaultAuthClientCertificatePtrOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with
// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
// default value "/v1/auth/cert" will be used.
func (o IssuerSpecVaultAuthClientCertificateOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthClientCertificate) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// Name of the certificate role to authenticate against.
// If not set, matching any certificate role, if available.
func (o IssuerSpecVaultAuthClientCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthClientCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to Kubernetes Secret of type "kubernetes.io/tls" (hence containing
// tls.crt and tls.key) used to authenticate to Vault using TLS client
// authentication.
func (o IssuerSpecVaultAuthClientCertificateOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthClientCertificate) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultAuthClientCertificatePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthClientCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthClientCertificate)(nil)).Elem()
}

func (o IssuerSpecVaultAuthClientCertificatePtrOutput) ToIssuerSpecVaultAuthClientCertificatePtrOutput() IssuerSpecVaultAuthClientCertificatePtrOutput {
	return o
}

func (o IssuerSpecVaultAuthClientCertificatePtrOutput) ToIssuerSpecVaultAuthClientCertificatePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthClientCertificatePtrOutput {
	return o
}

func (o IssuerSpecVaultAuthClientCertificatePtrOutput) Elem() IssuerSpecVaultAuthClientCertificateOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthClientCertificate) IssuerSpecVaultAuthClientCertificate {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthClientCertificate
		return ret
	}).(IssuerSpecVaultAuthClientCertificateOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with
// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
// default value "/v1/auth/cert" will be used.
func (o IssuerSpecVaultAuthClientCertificatePtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthClientCertificate) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// Name of the certificate role to authenticate against.
// If not set, matching any certificate role, if available.
func (o IssuerSpecVaultAuthClientCertificatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthClientCertificate) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to Kubernetes Secret of type "kubernetes.io/tls" (hence containing
// tls.crt and tls.key) used to authenticate to Vault using TLS client
// authentication.
func (o IssuerSpecVaultAuthClientCertificatePtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthClientCertificate) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// ClientCertificate authenticates with Vault by presenting a client
// certificate during the request's TLS handshake.
// Works only when using HTTPS protocol.
type IssuerSpecVaultAuthClientCertificatePatch struct {
	// The Vault mountPath here is the mount path to use when authenticating with
	// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
	// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
	// default value "/v1/auth/cert" will be used.
	MountPath *string `pulumi:"mountPath"`
	// Name of the certificate role to authenticate against.
	// If not set, matching any certificate role, if available.
	Name *string `pulumi:"name"`
	// Reference to Kubernetes Secret of type "kubernetes.io/tls" (hence containing
	// tls.crt and tls.key) used to authenticate to Vault using TLS client
	// authentication.
	SecretName *string `pulumi:"secretName"`
}

// IssuerSpecVaultAuthClientCertificatePatchInput is an input type that accepts IssuerSpecVaultAuthClientCertificatePatchArgs and IssuerSpecVaultAuthClientCertificatePatchOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthClientCertificatePatchInput` via:
//
//	IssuerSpecVaultAuthClientCertificatePatchArgs{...}
type IssuerSpecVaultAuthClientCertificatePatchInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthClientCertificatePatchOutput() IssuerSpecVaultAuthClientCertificatePatchOutput
	ToIssuerSpecVaultAuthClientCertificatePatchOutputWithContext(context.Context) IssuerSpecVaultAuthClientCertificatePatchOutput
}

// ClientCertificate authenticates with Vault by presenting a client
// certificate during the request's TLS handshake.
// Works only when using HTTPS protocol.
type IssuerSpecVaultAuthClientCertificatePatchArgs struct {
	// The Vault mountPath here is the mount path to use when authenticating with
	// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
	// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
	// default value "/v1/auth/cert" will be used.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// Name of the certificate role to authenticate against.
	// If not set, matching any certificate role, if available.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to Kubernetes Secret of type "kubernetes.io/tls" (hence containing
	// tls.crt and tls.key) used to authenticate to Vault using TLS client
	// authentication.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (IssuerSpecVaultAuthClientCertificatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthClientCertificatePatch)(nil)).Elem()
}

func (i IssuerSpecVaultAuthClientCertificatePatchArgs) ToIssuerSpecVaultAuthClientCertificatePatchOutput() IssuerSpecVaultAuthClientCertificatePatchOutput {
	return i.ToIssuerSpecVaultAuthClientCertificatePatchOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthClientCertificatePatchArgs) ToIssuerSpecVaultAuthClientCertificatePatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthClientCertificatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthClientCertificatePatchOutput)
}

func (i IssuerSpecVaultAuthClientCertificatePatchArgs) ToIssuerSpecVaultAuthClientCertificatePatchPtrOutput() IssuerSpecVaultAuthClientCertificatePatchPtrOutput {
	return i.ToIssuerSpecVaultAuthClientCertificatePatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthClientCertificatePatchArgs) ToIssuerSpecVaultAuthClientCertificatePatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthClientCertificatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthClientCertificatePatchOutput).ToIssuerSpecVaultAuthClientCertificatePatchPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthClientCertificatePatchPtrInput is an input type that accepts IssuerSpecVaultAuthClientCertificatePatchArgs, IssuerSpecVaultAuthClientCertificatePatchPtr and IssuerSpecVaultAuthClientCertificatePatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthClientCertificatePatchPtrInput` via:
//
//	        IssuerSpecVaultAuthClientCertificatePatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthClientCertificatePatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthClientCertificatePatchPtrOutput() IssuerSpecVaultAuthClientCertificatePatchPtrOutput
	ToIssuerSpecVaultAuthClientCertificatePatchPtrOutputWithContext(context.Context) IssuerSpecVaultAuthClientCertificatePatchPtrOutput
}

type issuerSpecVaultAuthClientCertificatePatchPtrType IssuerSpecVaultAuthClientCertificatePatchArgs

func IssuerSpecVaultAuthClientCertificatePatchPtr(v *IssuerSpecVaultAuthClientCertificatePatchArgs) IssuerSpecVaultAuthClientCertificatePatchPtrInput {
	return (*issuerSpecVaultAuthClientCertificatePatchPtrType)(v)
}

func (*issuerSpecVaultAuthClientCertificatePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthClientCertificatePatch)(nil)).Elem()
}

func (i *issuerSpecVaultAuthClientCertificatePatchPtrType) ToIssuerSpecVaultAuthClientCertificatePatchPtrOutput() IssuerSpecVaultAuthClientCertificatePatchPtrOutput {
	return i.ToIssuerSpecVaultAuthClientCertificatePatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthClientCertificatePatchPtrType) ToIssuerSpecVaultAuthClientCertificatePatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthClientCertificatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthClientCertificatePatchPtrOutput)
}

// ClientCertificate authenticates with Vault by presenting a client
// certificate during the request's TLS handshake.
// Works only when using HTTPS protocol.
type IssuerSpecVaultAuthClientCertificatePatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthClientCertificatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthClientCertificatePatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthClientCertificatePatchOutput) ToIssuerSpecVaultAuthClientCertificatePatchOutput() IssuerSpecVaultAuthClientCertificatePatchOutput {
	return o
}

func (o IssuerSpecVaultAuthClientCertificatePatchOutput) ToIssuerSpecVaultAuthClientCertificatePatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthClientCertificatePatchOutput {
	return o
}

func (o IssuerSpecVaultAuthClientCertificatePatchOutput) ToIssuerSpecVaultAuthClientCertificatePatchPtrOutput() IssuerSpecVaultAuthClientCertificatePatchPtrOutput {
	return o.ToIssuerSpecVaultAuthClientCertificatePatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthClientCertificatePatchOutput) ToIssuerSpecVaultAuthClientCertificatePatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthClientCertificatePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthClientCertificatePatch) *IssuerSpecVaultAuthClientCertificatePatch {
		return &v
	}).(IssuerSpecVaultAuthClientCertificatePatchPtrOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with
// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
// default value "/v1/auth/cert" will be used.
func (o IssuerSpecVaultAuthClientCertificatePatchOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthClientCertificatePatch) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// Name of the certificate role to authenticate against.
// If not set, matching any certificate role, if available.
func (o IssuerSpecVaultAuthClientCertificatePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthClientCertificatePatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to Kubernetes Secret of type "kubernetes.io/tls" (hence containing
// tls.crt and tls.key) used to authenticate to Vault using TLS client
// authentication.
func (o IssuerSpecVaultAuthClientCertificatePatchOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthClientCertificatePatch) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultAuthClientCertificatePatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthClientCertificatePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthClientCertificatePatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthClientCertificatePatchPtrOutput) ToIssuerSpecVaultAuthClientCertificatePatchPtrOutput() IssuerSpecVaultAuthClientCertificatePatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthClientCertificatePatchPtrOutput) ToIssuerSpecVaultAuthClientCertificatePatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthClientCertificatePatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthClientCertificatePatchPtrOutput) Elem() IssuerSpecVaultAuthClientCertificatePatchOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthClientCertificatePatch) IssuerSpecVaultAuthClientCertificatePatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthClientCertificatePatch
		return ret
	}).(IssuerSpecVaultAuthClientCertificatePatchOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with
// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
// default value "/v1/auth/cert" will be used.
func (o IssuerSpecVaultAuthClientCertificatePatchPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthClientCertificatePatch) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// Name of the certificate role to authenticate against.
// If not set, matching any certificate role, if available.
func (o IssuerSpecVaultAuthClientCertificatePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthClientCertificatePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to Kubernetes Secret of type "kubernetes.io/tls" (hence containing
// tls.crt and tls.key) used to authenticate to Vault using TLS client
// authentication.
func (o IssuerSpecVaultAuthClientCertificatePatchPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthClientCertificatePatch) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetes struct {
	// The Vault mountPath here is the mount path to use when authenticating with
	// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
	// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
	// default value "/v1/auth/kubernetes" will be used.
	MountPath *string `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a
	// Kubernetes ServiceAccount with a set of Vault policies.
	Role              *string                                         `pulumi:"role"`
	SecretRef         *IssuerSpecVaultAuthKubernetesSecretRef         `pulumi:"secretRef"`
	ServiceAccountRef *IssuerSpecVaultAuthKubernetesServiceAccountRef `pulumi:"serviceAccountRef"`
}

// IssuerSpecVaultAuthKubernetesInput is an input type that accepts IssuerSpecVaultAuthKubernetesArgs and IssuerSpecVaultAuthKubernetesOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesInput` via:
//
//	IssuerSpecVaultAuthKubernetesArgs{...}
type IssuerSpecVaultAuthKubernetesInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesOutput() IssuerSpecVaultAuthKubernetesOutput
	ToIssuerSpecVaultAuthKubernetesOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesOutput
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetesArgs struct {
	// The Vault mountPath here is the mount path to use when authenticating with
	// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
	// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
	// default value "/v1/auth/kubernetes" will be used.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a
	// Kubernetes ServiceAccount with a set of Vault policies.
	Role              pulumi.StringPtrInput                                  `pulumi:"role"`
	SecretRef         IssuerSpecVaultAuthKubernetesSecretRefPtrInput         `pulumi:"secretRef"`
	ServiceAccountRef IssuerSpecVaultAuthKubernetesServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
}

func (IssuerSpecVaultAuthKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesOutput() IssuerSpecVaultAuthKubernetesOutput {
	return i.ToIssuerSpecVaultAuthKubernetesOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesOutput)
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesOutput).ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthKubernetesPtrInput is an input type that accepts IssuerSpecVaultAuthKubernetesArgs, IssuerSpecVaultAuthKubernetesPtr and IssuerSpecVaultAuthKubernetesPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesPtrInput` via:
//
//	        IssuerSpecVaultAuthKubernetesArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthKubernetesPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput
	ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesPtrOutput
}

type issuerSpecVaultAuthKubernetesPtrType IssuerSpecVaultAuthKubernetesArgs

func IssuerSpecVaultAuthKubernetesPtr(v *IssuerSpecVaultAuthKubernetesArgs) IssuerSpecVaultAuthKubernetesPtrInput {
	return (*issuerSpecVaultAuthKubernetesPtrType)(v)
}

func (*issuerSpecVaultAuthKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (i *issuerSpecVaultAuthKubernetesPtrType) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthKubernetesPtrType) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetesOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesOutput() IssuerSpecVaultAuthKubernetesOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthKubernetes) *IssuerSpecVaultAuthKubernetes {
		return &v
	}).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with
// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
// default value "/v1/auth/kubernetes" will be used.
func (o IssuerSpecVaultAuthKubernetesOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetes) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a
// Kubernetes ServiceAccount with a set of Vault policies.
func (o IssuerSpecVaultAuthKubernetesOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetes) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVaultAuthKubernetesOutput) SecretRef() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetes) *IssuerSpecVaultAuthKubernetesSecretRef { return v.SecretRef }).(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

func (o IssuerSpecVaultAuthKubernetesOutput) ServiceAccountRef() IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetes) *IssuerSpecVaultAuthKubernetesServiceAccountRef {
		return v.ServiceAccountRef
	}).(IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput)
}

type IssuerSpecVaultAuthKubernetesPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesPtrOutput) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesPtrOutput) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesPtrOutput) Elem() IssuerSpecVaultAuthKubernetesOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetes) IssuerSpecVaultAuthKubernetes {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthKubernetes
		return ret
	}).(IssuerSpecVaultAuthKubernetesOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with
// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
// default value "/v1/auth/kubernetes" will be used.
func (o IssuerSpecVaultAuthKubernetesPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a
// Kubernetes ServiceAccount with a set of Vault policies.
func (o IssuerSpecVaultAuthKubernetesPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVaultAuthKubernetesPtrOutput) SecretRef() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetes) *IssuerSpecVaultAuthKubernetesSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

func (o IssuerSpecVaultAuthKubernetesPtrOutput) ServiceAccountRef() IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetes) *IssuerSpecVaultAuthKubernetesServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetesPatch struct {
	// The Vault mountPath here is the mount path to use when authenticating with
	// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
	// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
	// default value "/v1/auth/kubernetes" will be used.
	MountPath *string `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a
	// Kubernetes ServiceAccount with a set of Vault policies.
	Role              *string                                              `pulumi:"role"`
	SecretRef         *IssuerSpecVaultAuthKubernetesSecretRefPatch         `pulumi:"secretRef"`
	ServiceAccountRef *IssuerSpecVaultAuthKubernetesServiceAccountRefPatch `pulumi:"serviceAccountRef"`
}

// IssuerSpecVaultAuthKubernetesPatchInput is an input type that accepts IssuerSpecVaultAuthKubernetesPatchArgs and IssuerSpecVaultAuthKubernetesPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesPatchInput` via:
//
//	IssuerSpecVaultAuthKubernetesPatchArgs{...}
type IssuerSpecVaultAuthKubernetesPatchInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesPatchOutput() IssuerSpecVaultAuthKubernetesPatchOutput
	ToIssuerSpecVaultAuthKubernetesPatchOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesPatchOutput
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetesPatchArgs struct {
	// The Vault mountPath here is the mount path to use when authenticating with
	// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
	// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
	// default value "/v1/auth/kubernetes" will be used.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a
	// Kubernetes ServiceAccount with a set of Vault policies.
	Role              pulumi.StringPtrInput                                       `pulumi:"role"`
	SecretRef         IssuerSpecVaultAuthKubernetesSecretRefPatchPtrInput         `pulumi:"secretRef"`
	ServiceAccountRef IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrInput `pulumi:"serviceAccountRef"`
}

func (IssuerSpecVaultAuthKubernetesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesPatch)(nil)).Elem()
}

func (i IssuerSpecVaultAuthKubernetesPatchArgs) ToIssuerSpecVaultAuthKubernetesPatchOutput() IssuerSpecVaultAuthKubernetesPatchOutput {
	return i.ToIssuerSpecVaultAuthKubernetesPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesPatchArgs) ToIssuerSpecVaultAuthKubernetesPatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesPatchOutput)
}

func (i IssuerSpecVaultAuthKubernetesPatchArgs) ToIssuerSpecVaultAuthKubernetesPatchPtrOutput() IssuerSpecVaultAuthKubernetesPatchPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesPatchArgs) ToIssuerSpecVaultAuthKubernetesPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesPatchOutput).ToIssuerSpecVaultAuthKubernetesPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthKubernetesPatchPtrInput is an input type that accepts IssuerSpecVaultAuthKubernetesPatchArgs, IssuerSpecVaultAuthKubernetesPatchPtr and IssuerSpecVaultAuthKubernetesPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesPatchPtrInput` via:
//
//	        IssuerSpecVaultAuthKubernetesPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthKubernetesPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesPatchPtrOutput() IssuerSpecVaultAuthKubernetesPatchPtrOutput
	ToIssuerSpecVaultAuthKubernetesPatchPtrOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesPatchPtrOutput
}

type issuerSpecVaultAuthKubernetesPatchPtrType IssuerSpecVaultAuthKubernetesPatchArgs

func IssuerSpecVaultAuthKubernetesPatchPtr(v *IssuerSpecVaultAuthKubernetesPatchArgs) IssuerSpecVaultAuthKubernetesPatchPtrInput {
	return (*issuerSpecVaultAuthKubernetesPatchPtrType)(v)
}

func (*issuerSpecVaultAuthKubernetesPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesPatch)(nil)).Elem()
}

func (i *issuerSpecVaultAuthKubernetesPatchPtrType) ToIssuerSpecVaultAuthKubernetesPatchPtrOutput() IssuerSpecVaultAuthKubernetesPatchPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthKubernetesPatchPtrType) ToIssuerSpecVaultAuthKubernetesPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesPatchPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetesPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesPatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesPatchOutput) ToIssuerSpecVaultAuthKubernetesPatchOutput() IssuerSpecVaultAuthKubernetesPatchOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesPatchOutput) ToIssuerSpecVaultAuthKubernetesPatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPatchOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesPatchOutput) ToIssuerSpecVaultAuthKubernetesPatchPtrOutput() IssuerSpecVaultAuthKubernetesPatchPtrOutput {
	return o.ToIssuerSpecVaultAuthKubernetesPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthKubernetesPatchOutput) ToIssuerSpecVaultAuthKubernetesPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthKubernetesPatch) *IssuerSpecVaultAuthKubernetesPatch {
		return &v
	}).(IssuerSpecVaultAuthKubernetesPatchPtrOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with
// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
// default value "/v1/auth/kubernetes" will be used.
func (o IssuerSpecVaultAuthKubernetesPatchOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesPatch) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a
// Kubernetes ServiceAccount with a set of Vault policies.
func (o IssuerSpecVaultAuthKubernetesPatchOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesPatch) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVaultAuthKubernetesPatchOutput) SecretRef() IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesPatch) *IssuerSpecVaultAuthKubernetesSecretRefPatch {
		return v.SecretRef
	}).(IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput)
}

func (o IssuerSpecVaultAuthKubernetesPatchOutput) ServiceAccountRef() IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesPatch) *IssuerSpecVaultAuthKubernetesServiceAccountRefPatch {
		return v.ServiceAccountRef
	}).(IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput)
}

type IssuerSpecVaultAuthKubernetesPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesPatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesPatchPtrOutput) ToIssuerSpecVaultAuthKubernetesPatchPtrOutput() IssuerSpecVaultAuthKubernetesPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesPatchPtrOutput) ToIssuerSpecVaultAuthKubernetesPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesPatchPtrOutput) Elem() IssuerSpecVaultAuthKubernetesPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesPatch) IssuerSpecVaultAuthKubernetesPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthKubernetesPatch
		return ret
	}).(IssuerSpecVaultAuthKubernetesPatchOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with
// Vault. For example, setting a value to `/v1/auth/foo`, will use the path
// `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
// default value "/v1/auth/kubernetes" will be used.
func (o IssuerSpecVaultAuthKubernetesPatchPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesPatch) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a
// Kubernetes ServiceAccount with a set of Vault policies.
func (o IssuerSpecVaultAuthKubernetesPatchPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesPatch) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVaultAuthKubernetesPatchPtrOutput) SecretRef() IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesPatch) *IssuerSpecVaultAuthKubernetesSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput)
}

func (o IssuerSpecVaultAuthKubernetesPatchPtrOutput) ServiceAccountRef() IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesPatch) *IssuerSpecVaultAuthKubernetesServiceAccountRefPatch {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. Use of 'ambient credentials' is not
// supported.
type IssuerSpecVaultAuthKubernetesSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVaultAuthKubernetesSecretRefInput is an input type that accepts IssuerSpecVaultAuthKubernetesSecretRefArgs and IssuerSpecVaultAuthKubernetesSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesSecretRefInput` via:
//
//	IssuerSpecVaultAuthKubernetesSecretRefArgs{...}
type IssuerSpecVaultAuthKubernetesSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesSecretRefOutput() IssuerSpecVaultAuthKubernetesSecretRefOutput
	ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesSecretRefOutput
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. Use of 'ambient credentials' is not
// supported.
type IssuerSpecVaultAuthKubernetesSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthKubernetesSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefOutput() IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefOutput)
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefOutput).ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthKubernetesSecretRefPtrInput is an input type that accepts IssuerSpecVaultAuthKubernetesSecretRefArgs, IssuerSpecVaultAuthKubernetesSecretRefPtr and IssuerSpecVaultAuthKubernetesSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesSecretRefPtrInput` via:
//
//	        IssuerSpecVaultAuthKubernetesSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthKubernetesSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput
	ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput
}

type issuerSpecVaultAuthKubernetesSecretRefPtrType IssuerSpecVaultAuthKubernetesSecretRefArgs

func IssuerSpecVaultAuthKubernetesSecretRefPtr(v *IssuerSpecVaultAuthKubernetesSecretRefArgs) IssuerSpecVaultAuthKubernetesSecretRefPtrInput {
	return (*issuerSpecVaultAuthKubernetesSecretRefPtrType)(v)
}

func (*issuerSpecVaultAuthKubernetesSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultAuthKubernetesSecretRefPtrType) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthKubernetesSecretRefPtrType) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. Use of 'ambient credentials' is not
// supported.
type IssuerSpecVaultAuthKubernetesSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefOutput() IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthKubernetesSecretRef) *IssuerSpecVaultAuthKubernetesSecretRef {
		return &v
	}).(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultAuthKubernetesSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Elem() IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesSecretRef) IssuerSpecVaultAuthKubernetesSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthKubernetesSecretRef
		return ret
	}).(IssuerSpecVaultAuthKubernetesSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. Use of 'ambient credentials' is not
// supported.
type IssuerSpecVaultAuthKubernetesSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVaultAuthKubernetesSecretRefPatchInput is an input type that accepts IssuerSpecVaultAuthKubernetesSecretRefPatchArgs and IssuerSpecVaultAuthKubernetesSecretRefPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesSecretRefPatchInput` via:
//
//	IssuerSpecVaultAuthKubernetesSecretRefPatchArgs{...}
type IssuerSpecVaultAuthKubernetesSecretRefPatchInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesSecretRefPatchOutput() IssuerSpecVaultAuthKubernetesSecretRefPatchOutput
	ToIssuerSpecVaultAuthKubernetesSecretRefPatchOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesSecretRefPatchOutput
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. Use of 'ambient credentials' is not
// supported.
type IssuerSpecVaultAuthKubernetesSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthKubernetesSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRefPatch)(nil)).Elem()
}

func (i IssuerSpecVaultAuthKubernetesSecretRefPatchArgs) ToIssuerSpecVaultAuthKubernetesSecretRefPatchOutput() IssuerSpecVaultAuthKubernetesSecretRefPatchOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesSecretRefPatchArgs) ToIssuerSpecVaultAuthKubernetesSecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefPatchOutput)
}

func (i IssuerSpecVaultAuthKubernetesSecretRefPatchArgs) ToIssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesSecretRefPatchArgs) ToIssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefPatchOutput).ToIssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthKubernetesSecretRefPatchPtrInput is an input type that accepts IssuerSpecVaultAuthKubernetesSecretRefPatchArgs, IssuerSpecVaultAuthKubernetesSecretRefPatchPtr and IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesSecretRefPatchPtrInput` via:
//
//	        IssuerSpecVaultAuthKubernetesSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthKubernetesSecretRefPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput
	ToIssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput
}

type issuerSpecVaultAuthKubernetesSecretRefPatchPtrType IssuerSpecVaultAuthKubernetesSecretRefPatchArgs

func IssuerSpecVaultAuthKubernetesSecretRefPatchPtr(v *IssuerSpecVaultAuthKubernetesSecretRefPatchArgs) IssuerSpecVaultAuthKubernetesSecretRefPatchPtrInput {
	return (*issuerSpecVaultAuthKubernetesSecretRefPatchPtrType)(v)
}

func (*issuerSpecVaultAuthKubernetesSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesSecretRefPatch)(nil)).Elem()
}

func (i *issuerSpecVaultAuthKubernetesSecretRefPatchPtrType) ToIssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthKubernetesSecretRefPatchPtrType) ToIssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. Use of 'ambient credentials' is not
// supported.
type IssuerSpecVaultAuthKubernetesSecretRefPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPatchOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPatchOutput() IssuerSpecVaultAuthKubernetesSecretRefPatchOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPatchOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPatchOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPatchOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput {
	return o.ToIssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPatchOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthKubernetesSecretRefPatch) *IssuerSpecVaultAuthKubernetesSecretRefPatch {
		return &v
	}).(IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthKubernetesSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthKubernetesSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesSecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput) Elem() IssuerSpecVaultAuthKubernetesSecretRefPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesSecretRefPatch) IssuerSpecVaultAuthKubernetesSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthKubernetesSecretRefPatch
		return ret
	}).(IssuerSpecVaultAuthKubernetesSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). Compared to using "secretRef",
// using this field means that you don't rely on statically bound tokens. To
// use this field, you must configure an RBAC rule to let cert-manager
// request a token.
type IssuerSpecVaultAuthKubernetesServiceAccountRef struct {
	// TokenAudiences is an optional list of extra audiences to include in the token passed to Vault. The default token
	// consisting of the issuer's namespace and name is always included.
	Audiences []string `pulumi:"audiences"`
	// Name of the ServiceAccount used to request a token.
	Name *string `pulumi:"name"`
}

// IssuerSpecVaultAuthKubernetesServiceAccountRefInput is an input type that accepts IssuerSpecVaultAuthKubernetesServiceAccountRefArgs and IssuerSpecVaultAuthKubernetesServiceAccountRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesServiceAccountRefInput` via:
//
//	IssuerSpecVaultAuthKubernetesServiceAccountRefArgs{...}
type IssuerSpecVaultAuthKubernetesServiceAccountRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesServiceAccountRefOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefOutput
	ToIssuerSpecVaultAuthKubernetesServiceAccountRefOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefOutput
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). Compared to using "secretRef",
// using this field means that you don't rely on statically bound tokens. To
// use this field, you must configure an RBAC rule to let cert-manager
// request a token.
type IssuerSpecVaultAuthKubernetesServiceAccountRefArgs struct {
	// TokenAudiences is an optional list of extra audiences to include in the token passed to Vault. The default token
	// consisting of the issuer's namespace and name is always included.
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// Name of the ServiceAccount used to request a token.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthKubernetesServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (i IssuerSpecVaultAuthKubernetesServiceAccountRefArgs) ToIssuerSpecVaultAuthKubernetesServiceAccountRefOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefOutput {
	return i.ToIssuerSpecVaultAuthKubernetesServiceAccountRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesServiceAccountRefArgs) ToIssuerSpecVaultAuthKubernetesServiceAccountRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesServiceAccountRefOutput)
}

func (i IssuerSpecVaultAuthKubernetesServiceAccountRefArgs) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesServiceAccountRefArgs) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesServiceAccountRefOutput).ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthKubernetesServiceAccountRefPtrInput is an input type that accepts IssuerSpecVaultAuthKubernetesServiceAccountRefArgs, IssuerSpecVaultAuthKubernetesServiceAccountRefPtr and IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesServiceAccountRefPtrInput` via:
//
//	        IssuerSpecVaultAuthKubernetesServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthKubernetesServiceAccountRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput
	ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput
}

type issuerSpecVaultAuthKubernetesServiceAccountRefPtrType IssuerSpecVaultAuthKubernetesServiceAccountRefArgs

func IssuerSpecVaultAuthKubernetesServiceAccountRefPtr(v *IssuerSpecVaultAuthKubernetesServiceAccountRefArgs) IssuerSpecVaultAuthKubernetesServiceAccountRefPtrInput {
	return (*issuerSpecVaultAuthKubernetesServiceAccountRefPtrType)(v)
}

func (*issuerSpecVaultAuthKubernetesServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (i *issuerSpecVaultAuthKubernetesServiceAccountRefPtrType) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthKubernetesServiceAccountRefPtrType) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). Compared to using "secretRef",
// using this field means that you don't rely on statically bound tokens. To
// use this field, you must configure an RBAC rule to let cert-manager
// request a token.
type IssuerSpecVaultAuthKubernetesServiceAccountRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthKubernetesServiceAccountRef) *IssuerSpecVaultAuthKubernetesServiceAccountRef {
		return &v
	}).(IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// TokenAudiences is an optional list of extra audiences to include in the token passed to Vault. The default token
// consisting of the issuer's namespace and name is always included.
func (o IssuerSpecVaultAuthKubernetesServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// Name of the ServiceAccount used to request a token.
func (o IssuerSpecVaultAuthKubernetesServiceAccountRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesServiceAccountRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput) Elem() IssuerSpecVaultAuthKubernetesServiceAccountRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesServiceAccountRef) IssuerSpecVaultAuthKubernetesServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthKubernetesServiceAccountRef
		return ret
	}).(IssuerSpecVaultAuthKubernetesServiceAccountRefOutput)
}

// TokenAudiences is an optional list of extra audiences to include in the token passed to Vault. The default token
// consisting of the issuer's namespace and name is always included.
func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// Name of the ServiceAccount used to request a token.
func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). Compared to using "secretRef",
// using this field means that you don't rely on statically bound tokens. To
// use this field, you must configure an RBAC rule to let cert-manager
// request a token.
type IssuerSpecVaultAuthKubernetesServiceAccountRefPatch struct {
	// TokenAudiences is an optional list of extra audiences to include in the token passed to Vault. The default token
	// consisting of the issuer's namespace and name is always included.
	Audiences []string `pulumi:"audiences"`
	// Name of the ServiceAccount used to request a token.
	Name *string `pulumi:"name"`
}

// IssuerSpecVaultAuthKubernetesServiceAccountRefPatchInput is an input type that accepts IssuerSpecVaultAuthKubernetesServiceAccountRefPatchArgs and IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesServiceAccountRefPatchInput` via:
//
//	IssuerSpecVaultAuthKubernetesServiceAccountRefPatchArgs{...}
type IssuerSpecVaultAuthKubernetesServiceAccountRefPatchInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput
	ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). Compared to using "secretRef",
// using this field means that you don't rely on statically bound tokens. To
// use this field, you must configure an RBAC rule to let cert-manager
// request a token.
type IssuerSpecVaultAuthKubernetesServiceAccountRefPatchArgs struct {
	// TokenAudiences is an optional list of extra audiences to include in the token passed to Vault. The default token
	// consisting of the issuer's namespace and name is always included.
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// Name of the ServiceAccount used to request a token.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthKubernetesServiceAccountRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesServiceAccountRefPatch)(nil)).Elem()
}

func (i IssuerSpecVaultAuthKubernetesServiceAccountRefPatchArgs) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput {
	return i.ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesServiceAccountRefPatchArgs) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput)
}

func (i IssuerSpecVaultAuthKubernetesServiceAccountRefPatchArgs) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesServiceAccountRefPatchArgs) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput).ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrInput is an input type that accepts IssuerSpecVaultAuthKubernetesServiceAccountRefPatchArgs, IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtr and IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrInput` via:
//
//	        IssuerSpecVaultAuthKubernetesServiceAccountRefPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput
	ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput
}

type issuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrType IssuerSpecVaultAuthKubernetesServiceAccountRefPatchArgs

func IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtr(v *IssuerSpecVaultAuthKubernetesServiceAccountRefPatchArgs) IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrInput {
	return (*issuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrType)(v)
}

func (*issuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesServiceAccountRefPatch)(nil)).Elem()
}

func (i *issuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrType) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrType) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput)
}

// A reference to a service account that will be used to request a bound
// token (also known as "projected token"). Compared to using "secretRef",
// using this field means that you don't rely on statically bound tokens. To
// use this field, you must configure an RBAC rule to let cert-manager
// request a token.
type IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesServiceAccountRefPatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return o.ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthKubernetesServiceAccountRefPatch) *IssuerSpecVaultAuthKubernetesServiceAccountRefPatch {
		return &v
	}).(IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput)
}

// TokenAudiences is an optional list of extra audiences to include in the token passed to Vault. The default token
// consisting of the issuer's namespace and name is always included.
func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesServiceAccountRefPatch) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// Name of the ServiceAccount used to request a token.
func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesServiceAccountRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesServiceAccountRefPatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput() IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput) ToIssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput) Elem() IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesServiceAccountRefPatch) IssuerSpecVaultAuthKubernetesServiceAccountRefPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthKubernetesServiceAccountRefPatch
		return ret
	}).(IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput)
}

// TokenAudiences is an optional list of extra audiences to include in the token passed to Vault. The default token
// consisting of the issuer's namespace and name is always included.
func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesServiceAccountRefPatch) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// Name of the ServiceAccount used to request a token.
func (o IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuthPatch struct {
	AppRole           *IssuerSpecVaultAuthAppRolePatch           `pulumi:"appRole"`
	ClientCertificate *IssuerSpecVaultAuthClientCertificatePatch `pulumi:"clientCertificate"`
	Kubernetes        *IssuerSpecVaultAuthKubernetesPatch        `pulumi:"kubernetes"`
	TokenSecretRef    *IssuerSpecVaultAuthTokenSecretRefPatch    `pulumi:"tokenSecretRef"`
}

// IssuerSpecVaultAuthPatchInput is an input type that accepts IssuerSpecVaultAuthPatchArgs and IssuerSpecVaultAuthPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthPatchInput` via:
//
//	IssuerSpecVaultAuthPatchArgs{...}
type IssuerSpecVaultAuthPatchInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthPatchOutput() IssuerSpecVaultAuthPatchOutput
	ToIssuerSpecVaultAuthPatchOutputWithContext(context.Context) IssuerSpecVaultAuthPatchOutput
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuthPatchArgs struct {
	AppRole           IssuerSpecVaultAuthAppRolePatchPtrInput           `pulumi:"appRole"`
	ClientCertificate IssuerSpecVaultAuthClientCertificatePatchPtrInput `pulumi:"clientCertificate"`
	Kubernetes        IssuerSpecVaultAuthKubernetesPatchPtrInput        `pulumi:"kubernetes"`
	TokenSecretRef    IssuerSpecVaultAuthTokenSecretRefPatchPtrInput    `pulumi:"tokenSecretRef"`
}

func (IssuerSpecVaultAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthPatch)(nil)).Elem()
}

func (i IssuerSpecVaultAuthPatchArgs) ToIssuerSpecVaultAuthPatchOutput() IssuerSpecVaultAuthPatchOutput {
	return i.ToIssuerSpecVaultAuthPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthPatchArgs) ToIssuerSpecVaultAuthPatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthPatchOutput)
}

func (i IssuerSpecVaultAuthPatchArgs) ToIssuerSpecVaultAuthPatchPtrOutput() IssuerSpecVaultAuthPatchPtrOutput {
	return i.ToIssuerSpecVaultAuthPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthPatchArgs) ToIssuerSpecVaultAuthPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthPatchOutput).ToIssuerSpecVaultAuthPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthPatchPtrInput is an input type that accepts IssuerSpecVaultAuthPatchArgs, IssuerSpecVaultAuthPatchPtr and IssuerSpecVaultAuthPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthPatchPtrInput` via:
//
//	        IssuerSpecVaultAuthPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthPatchPtrOutput() IssuerSpecVaultAuthPatchPtrOutput
	ToIssuerSpecVaultAuthPatchPtrOutputWithContext(context.Context) IssuerSpecVaultAuthPatchPtrOutput
}

type issuerSpecVaultAuthPatchPtrType IssuerSpecVaultAuthPatchArgs

func IssuerSpecVaultAuthPatchPtr(v *IssuerSpecVaultAuthPatchArgs) IssuerSpecVaultAuthPatchPtrInput {
	return (*issuerSpecVaultAuthPatchPtrType)(v)
}

func (*issuerSpecVaultAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthPatch)(nil)).Elem()
}

func (i *issuerSpecVaultAuthPatchPtrType) ToIssuerSpecVaultAuthPatchPtrOutput() IssuerSpecVaultAuthPatchPtrOutput {
	return i.ToIssuerSpecVaultAuthPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthPatchPtrType) ToIssuerSpecVaultAuthPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthPatchPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuthPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthPatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthPatchOutput) ToIssuerSpecVaultAuthPatchOutput() IssuerSpecVaultAuthPatchOutput {
	return o
}

func (o IssuerSpecVaultAuthPatchOutput) ToIssuerSpecVaultAuthPatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPatchOutput {
	return o
}

func (o IssuerSpecVaultAuthPatchOutput) ToIssuerSpecVaultAuthPatchPtrOutput() IssuerSpecVaultAuthPatchPtrOutput {
	return o.ToIssuerSpecVaultAuthPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthPatchOutput) ToIssuerSpecVaultAuthPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthPatch) *IssuerSpecVaultAuthPatch {
		return &v
	}).(IssuerSpecVaultAuthPatchPtrOutput)
}

func (o IssuerSpecVaultAuthPatchOutput) AppRole() IssuerSpecVaultAuthAppRolePatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthPatch) *IssuerSpecVaultAuthAppRolePatch { return v.AppRole }).(IssuerSpecVaultAuthAppRolePatchPtrOutput)
}

func (o IssuerSpecVaultAuthPatchOutput) ClientCertificate() IssuerSpecVaultAuthClientCertificatePatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthPatch) *IssuerSpecVaultAuthClientCertificatePatch {
		return v.ClientCertificate
	}).(IssuerSpecVaultAuthClientCertificatePatchPtrOutput)
}

func (o IssuerSpecVaultAuthPatchOutput) Kubernetes() IssuerSpecVaultAuthKubernetesPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthPatch) *IssuerSpecVaultAuthKubernetesPatch { return v.Kubernetes }).(IssuerSpecVaultAuthKubernetesPatchPtrOutput)
}

func (o IssuerSpecVaultAuthPatchOutput) TokenSecretRef() IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthPatch) *IssuerSpecVaultAuthTokenSecretRefPatch { return v.TokenSecretRef }).(IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput)
}

type IssuerSpecVaultAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthPatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthPatchPtrOutput) ToIssuerSpecVaultAuthPatchPtrOutput() IssuerSpecVaultAuthPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthPatchPtrOutput) ToIssuerSpecVaultAuthPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthPatchPtrOutput) Elem() IssuerSpecVaultAuthPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthPatch) IssuerSpecVaultAuthPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthPatch
		return ret
	}).(IssuerSpecVaultAuthPatchOutput)
}

func (o IssuerSpecVaultAuthPatchPtrOutput) AppRole() IssuerSpecVaultAuthAppRolePatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthPatch) *IssuerSpecVaultAuthAppRolePatch {
		if v == nil {
			return nil
		}
		return v.AppRole
	}).(IssuerSpecVaultAuthAppRolePatchPtrOutput)
}

func (o IssuerSpecVaultAuthPatchPtrOutput) ClientCertificate() IssuerSpecVaultAuthClientCertificatePatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthPatch) *IssuerSpecVaultAuthClientCertificatePatch {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(IssuerSpecVaultAuthClientCertificatePatchPtrOutput)
}

func (o IssuerSpecVaultAuthPatchPtrOutput) Kubernetes() IssuerSpecVaultAuthKubernetesPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthPatch) *IssuerSpecVaultAuthKubernetesPatch {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(IssuerSpecVaultAuthKubernetesPatchPtrOutput)
}

func (o IssuerSpecVaultAuthPatchPtrOutput) TokenSecretRef() IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthPatch) *IssuerSpecVaultAuthTokenSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.TokenSecretRef
	}).(IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVaultAuthTokenSecretRefInput is an input type that accepts IssuerSpecVaultAuthTokenSecretRefArgs and IssuerSpecVaultAuthTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthTokenSecretRefInput` via:
//
//	IssuerSpecVaultAuthTokenSecretRefArgs{...}
type IssuerSpecVaultAuthTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthTokenSecretRefOutput() IssuerSpecVaultAuthTokenSecretRefOutput
	ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(context.Context) IssuerSpecVaultAuthTokenSecretRefOutput
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefOutput() IssuerSpecVaultAuthTokenSecretRefOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefOutput)
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefOutput).ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthTokenSecretRefPtrInput is an input type that accepts IssuerSpecVaultAuthTokenSecretRefArgs, IssuerSpecVaultAuthTokenSecretRefPtr and IssuerSpecVaultAuthTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthTokenSecretRefPtrInput` via:
//
//	        IssuerSpecVaultAuthTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput
	ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput
}

type issuerSpecVaultAuthTokenSecretRefPtrType IssuerSpecVaultAuthTokenSecretRefArgs

func IssuerSpecVaultAuthTokenSecretRefPtr(v *IssuerSpecVaultAuthTokenSecretRefArgs) IssuerSpecVaultAuthTokenSecretRefPtrInput {
	return (*issuerSpecVaultAuthTokenSecretRefPtrType)(v)
}

func (*issuerSpecVaultAuthTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultAuthTokenSecretRefPtrType) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthTokenSecretRefPtrType) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefOutput() IssuerSpecVaultAuthTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthTokenSecretRef) *IssuerSpecVaultAuthTokenSecretRef {
		return &v
	}).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthTokenSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthTokenSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultAuthTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) Elem() IssuerSpecVaultAuthTokenSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthTokenSecretRef) IssuerSpecVaultAuthTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthTokenSecretRef
		return ret
	}).(IssuerSpecVaultAuthTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVaultAuthTokenSecretRefPatchInput is an input type that accepts IssuerSpecVaultAuthTokenSecretRefPatchArgs and IssuerSpecVaultAuthTokenSecretRefPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthTokenSecretRefPatchInput` via:
//
//	IssuerSpecVaultAuthTokenSecretRefPatchArgs{...}
type IssuerSpecVaultAuthTokenSecretRefPatchInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthTokenSecretRefPatchOutput() IssuerSpecVaultAuthTokenSecretRefPatchOutput
	ToIssuerSpecVaultAuthTokenSecretRefPatchOutputWithContext(context.Context) IssuerSpecVaultAuthTokenSecretRefPatchOutput
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthTokenSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRefPatch)(nil)).Elem()
}

func (i IssuerSpecVaultAuthTokenSecretRefPatchArgs) ToIssuerSpecVaultAuthTokenSecretRefPatchOutput() IssuerSpecVaultAuthTokenSecretRefPatchOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthTokenSecretRefPatchArgs) ToIssuerSpecVaultAuthTokenSecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefPatchOutput)
}

func (i IssuerSpecVaultAuthTokenSecretRefPatchArgs) ToIssuerSpecVaultAuthTokenSecretRefPatchPtrOutput() IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthTokenSecretRefPatchArgs) ToIssuerSpecVaultAuthTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefPatchOutput).ToIssuerSpecVaultAuthTokenSecretRefPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthTokenSecretRefPatchPtrInput is an input type that accepts IssuerSpecVaultAuthTokenSecretRefPatchArgs, IssuerSpecVaultAuthTokenSecretRefPatchPtr and IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthTokenSecretRefPatchPtrInput` via:
//
//	        IssuerSpecVaultAuthTokenSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultAuthTokenSecretRefPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthTokenSecretRefPatchPtrOutput() IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput
	ToIssuerSpecVaultAuthTokenSecretRefPatchPtrOutputWithContext(context.Context) IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput
}

type issuerSpecVaultAuthTokenSecretRefPatchPtrType IssuerSpecVaultAuthTokenSecretRefPatchArgs

func IssuerSpecVaultAuthTokenSecretRefPatchPtr(v *IssuerSpecVaultAuthTokenSecretRefPatchArgs) IssuerSpecVaultAuthTokenSecretRefPatchPtrInput {
	return (*issuerSpecVaultAuthTokenSecretRefPatchPtrType)(v)
}

func (*issuerSpecVaultAuthTokenSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthTokenSecretRefPatch)(nil)).Elem()
}

func (i *issuerSpecVaultAuthTokenSecretRefPatchPtrType) ToIssuerSpecVaultAuthTokenSecretRefPatchPtrOutput() IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthTokenSecretRefPatchPtrType) ToIssuerSpecVaultAuthTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRefPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthTokenSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthTokenSecretRefPatchOutput) ToIssuerSpecVaultAuthTokenSecretRefPatchOutput() IssuerSpecVaultAuthTokenSecretRefPatchOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefPatchOutput) ToIssuerSpecVaultAuthTokenSecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPatchOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefPatchOutput) ToIssuerSpecVaultAuthTokenSecretRefPatchPtrOutput() IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput {
	return o.ToIssuerSpecVaultAuthTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthTokenSecretRefPatchOutput) ToIssuerSpecVaultAuthTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultAuthTokenSecretRefPatch) *IssuerSpecVaultAuthTokenSecretRefPatch {
		return &v
	}).(IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthTokenSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthTokenSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthTokenSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthTokenSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthTokenSecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput) ToIssuerSpecVaultAuthTokenSecretRefPatchPtrOutput() IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput) ToIssuerSpecVaultAuthTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput) Elem() IssuerSpecVaultAuthTokenSecretRefPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthTokenSecretRefPatch) IssuerSpecVaultAuthTokenSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultAuthTokenSecretRefPatch
		return ret
	}).(IssuerSpecVaultAuthTokenSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret containing a bundle of PEM-encoded CAs to use when
// verifying the certificate chain presented by Vault when using HTTPS.
// Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
// If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
type IssuerSpecVaultCaBundleSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVaultCaBundleSecretRefInput is an input type that accepts IssuerSpecVaultCaBundleSecretRefArgs and IssuerSpecVaultCaBundleSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultCaBundleSecretRefInput` via:
//
//	IssuerSpecVaultCaBundleSecretRefArgs{...}
type IssuerSpecVaultCaBundleSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultCaBundleSecretRefOutput() IssuerSpecVaultCaBundleSecretRefOutput
	ToIssuerSpecVaultCaBundleSecretRefOutputWithContext(context.Context) IssuerSpecVaultCaBundleSecretRefOutput
}

// Reference to a Secret containing a bundle of PEM-encoded CAs to use when
// verifying the certificate chain presented by Vault when using HTTPS.
// Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
// If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
type IssuerSpecVaultCaBundleSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVaultCaBundleSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultCaBundleSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultCaBundleSecretRefArgs) ToIssuerSpecVaultCaBundleSecretRefOutput() IssuerSpecVaultCaBundleSecretRefOutput {
	return i.ToIssuerSpecVaultCaBundleSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultCaBundleSecretRefArgs) ToIssuerSpecVaultCaBundleSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultCaBundleSecretRefOutput)
}

func (i IssuerSpecVaultCaBundleSecretRefArgs) ToIssuerSpecVaultCaBundleSecretRefPtrOutput() IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return i.ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultCaBundleSecretRefArgs) ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultCaBundleSecretRefOutput).ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultCaBundleSecretRefPtrInput is an input type that accepts IssuerSpecVaultCaBundleSecretRefArgs, IssuerSpecVaultCaBundleSecretRefPtr and IssuerSpecVaultCaBundleSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultCaBundleSecretRefPtrInput` via:
//
//	        IssuerSpecVaultCaBundleSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultCaBundleSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultCaBundleSecretRefPtrOutput() IssuerSpecVaultCaBundleSecretRefPtrOutput
	ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultCaBundleSecretRefPtrOutput
}

type issuerSpecVaultCaBundleSecretRefPtrType IssuerSpecVaultCaBundleSecretRefArgs

func IssuerSpecVaultCaBundleSecretRefPtr(v *IssuerSpecVaultCaBundleSecretRefArgs) IssuerSpecVaultCaBundleSecretRefPtrInput {
	return (*issuerSpecVaultCaBundleSecretRefPtrType)(v)
}

func (*issuerSpecVaultCaBundleSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultCaBundleSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultCaBundleSecretRefPtrType) ToIssuerSpecVaultCaBundleSecretRefPtrOutput() IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return i.ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultCaBundleSecretRefPtrType) ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultCaBundleSecretRefPtrOutput)
}

// Reference to a Secret containing a bundle of PEM-encoded CAs to use when
// verifying the certificate chain presented by Vault when using HTTPS.
// Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
// If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
type IssuerSpecVaultCaBundleSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultCaBundleSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultCaBundleSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultCaBundleSecretRefOutput) ToIssuerSpecVaultCaBundleSecretRefOutput() IssuerSpecVaultCaBundleSecretRefOutput {
	return o
}

func (o IssuerSpecVaultCaBundleSecretRefOutput) ToIssuerSpecVaultCaBundleSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefOutput {
	return o
}

func (o IssuerSpecVaultCaBundleSecretRefOutput) ToIssuerSpecVaultCaBundleSecretRefPtrOutput() IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return o.ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultCaBundleSecretRefOutput) ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultCaBundleSecretRef) *IssuerSpecVaultCaBundleSecretRef {
		return &v
	}).(IssuerSpecVaultCaBundleSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultCaBundleSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultCaBundleSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultCaBundleSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultCaBundleSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultCaBundleSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultCaBundleSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultCaBundleSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultCaBundleSecretRefPtrOutput) ToIssuerSpecVaultCaBundleSecretRefPtrOutput() IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultCaBundleSecretRefPtrOutput) ToIssuerSpecVaultCaBundleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultCaBundleSecretRefPtrOutput) Elem() IssuerSpecVaultCaBundleSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultCaBundleSecretRef) IssuerSpecVaultCaBundleSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultCaBundleSecretRef
		return ret
	}).(IssuerSpecVaultCaBundleSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultCaBundleSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultCaBundleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultCaBundleSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultCaBundleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret containing a bundle of PEM-encoded CAs to use when
// verifying the certificate chain presented by Vault when using HTTPS.
// Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
// If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
type IssuerSpecVaultCaBundleSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVaultCaBundleSecretRefPatchInput is an input type that accepts IssuerSpecVaultCaBundleSecretRefPatchArgs and IssuerSpecVaultCaBundleSecretRefPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVaultCaBundleSecretRefPatchInput` via:
//
//	IssuerSpecVaultCaBundleSecretRefPatchArgs{...}
type IssuerSpecVaultCaBundleSecretRefPatchInput interface {
	pulumi.Input

	ToIssuerSpecVaultCaBundleSecretRefPatchOutput() IssuerSpecVaultCaBundleSecretRefPatchOutput
	ToIssuerSpecVaultCaBundleSecretRefPatchOutputWithContext(context.Context) IssuerSpecVaultCaBundleSecretRefPatchOutput
}

// Reference to a Secret containing a bundle of PEM-encoded CAs to use when
// verifying the certificate chain presented by Vault when using HTTPS.
// Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
// If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
type IssuerSpecVaultCaBundleSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVaultCaBundleSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultCaBundleSecretRefPatch)(nil)).Elem()
}

func (i IssuerSpecVaultCaBundleSecretRefPatchArgs) ToIssuerSpecVaultCaBundleSecretRefPatchOutput() IssuerSpecVaultCaBundleSecretRefPatchOutput {
	return i.ToIssuerSpecVaultCaBundleSecretRefPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVaultCaBundleSecretRefPatchArgs) ToIssuerSpecVaultCaBundleSecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultCaBundleSecretRefPatchOutput)
}

func (i IssuerSpecVaultCaBundleSecretRefPatchArgs) ToIssuerSpecVaultCaBundleSecretRefPatchPtrOutput() IssuerSpecVaultCaBundleSecretRefPatchPtrOutput {
	return i.ToIssuerSpecVaultCaBundleSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultCaBundleSecretRefPatchArgs) ToIssuerSpecVaultCaBundleSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultCaBundleSecretRefPatchOutput).ToIssuerSpecVaultCaBundleSecretRefPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVaultCaBundleSecretRefPatchPtrInput is an input type that accepts IssuerSpecVaultCaBundleSecretRefPatchArgs, IssuerSpecVaultCaBundleSecretRefPatchPtr and IssuerSpecVaultCaBundleSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultCaBundleSecretRefPatchPtrInput` via:
//
//	        IssuerSpecVaultCaBundleSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultCaBundleSecretRefPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultCaBundleSecretRefPatchPtrOutput() IssuerSpecVaultCaBundleSecretRefPatchPtrOutput
	ToIssuerSpecVaultCaBundleSecretRefPatchPtrOutputWithContext(context.Context) IssuerSpecVaultCaBundleSecretRefPatchPtrOutput
}

type issuerSpecVaultCaBundleSecretRefPatchPtrType IssuerSpecVaultCaBundleSecretRefPatchArgs

func IssuerSpecVaultCaBundleSecretRefPatchPtr(v *IssuerSpecVaultCaBundleSecretRefPatchArgs) IssuerSpecVaultCaBundleSecretRefPatchPtrInput {
	return (*issuerSpecVaultCaBundleSecretRefPatchPtrType)(v)
}

func (*issuerSpecVaultCaBundleSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultCaBundleSecretRefPatch)(nil)).Elem()
}

func (i *issuerSpecVaultCaBundleSecretRefPatchPtrType) ToIssuerSpecVaultCaBundleSecretRefPatchPtrOutput() IssuerSpecVaultCaBundleSecretRefPatchPtrOutput {
	return i.ToIssuerSpecVaultCaBundleSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultCaBundleSecretRefPatchPtrType) ToIssuerSpecVaultCaBundleSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultCaBundleSecretRefPatchPtrOutput)
}

// Reference to a Secret containing a bundle of PEM-encoded CAs to use when
// verifying the certificate chain presented by Vault when using HTTPS.
// Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
// If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
type IssuerSpecVaultCaBundleSecretRefPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultCaBundleSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultCaBundleSecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVaultCaBundleSecretRefPatchOutput) ToIssuerSpecVaultCaBundleSecretRefPatchOutput() IssuerSpecVaultCaBundleSecretRefPatchOutput {
	return o
}

func (o IssuerSpecVaultCaBundleSecretRefPatchOutput) ToIssuerSpecVaultCaBundleSecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefPatchOutput {
	return o
}

func (o IssuerSpecVaultCaBundleSecretRefPatchOutput) ToIssuerSpecVaultCaBundleSecretRefPatchPtrOutput() IssuerSpecVaultCaBundleSecretRefPatchPtrOutput {
	return o.ToIssuerSpecVaultCaBundleSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultCaBundleSecretRefPatchOutput) ToIssuerSpecVaultCaBundleSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultCaBundleSecretRefPatch) *IssuerSpecVaultCaBundleSecretRefPatch {
		return &v
	}).(IssuerSpecVaultCaBundleSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultCaBundleSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultCaBundleSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultCaBundleSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultCaBundleSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultCaBundleSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultCaBundleSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultCaBundleSecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVaultCaBundleSecretRefPatchPtrOutput) ToIssuerSpecVaultCaBundleSecretRefPatchPtrOutput() IssuerSpecVaultCaBundleSecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultCaBundleSecretRefPatchPtrOutput) ToIssuerSpecVaultCaBundleSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultCaBundleSecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultCaBundleSecretRefPatchPtrOutput) Elem() IssuerSpecVaultCaBundleSecretRefPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVaultCaBundleSecretRefPatch) IssuerSpecVaultCaBundleSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultCaBundleSecretRefPatch
		return ret
	}).(IssuerSpecVaultCaBundleSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultCaBundleSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultCaBundleSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultCaBundleSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultCaBundleSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Certificate to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientCertSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVaultClientCertSecretRefInput is an input type that accepts IssuerSpecVaultClientCertSecretRefArgs and IssuerSpecVaultClientCertSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultClientCertSecretRefInput` via:
//
//	IssuerSpecVaultClientCertSecretRefArgs{...}
type IssuerSpecVaultClientCertSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultClientCertSecretRefOutput() IssuerSpecVaultClientCertSecretRefOutput
	ToIssuerSpecVaultClientCertSecretRefOutputWithContext(context.Context) IssuerSpecVaultClientCertSecretRefOutput
}

// Reference to a Secret containing a PEM-encoded Client Certificate to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientCertSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVaultClientCertSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultClientCertSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultClientCertSecretRefArgs) ToIssuerSpecVaultClientCertSecretRefOutput() IssuerSpecVaultClientCertSecretRefOutput {
	return i.ToIssuerSpecVaultClientCertSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultClientCertSecretRefArgs) ToIssuerSpecVaultClientCertSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientCertSecretRefOutput)
}

func (i IssuerSpecVaultClientCertSecretRefArgs) ToIssuerSpecVaultClientCertSecretRefPtrOutput() IssuerSpecVaultClientCertSecretRefPtrOutput {
	return i.ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultClientCertSecretRefArgs) ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientCertSecretRefOutput).ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultClientCertSecretRefPtrInput is an input type that accepts IssuerSpecVaultClientCertSecretRefArgs, IssuerSpecVaultClientCertSecretRefPtr and IssuerSpecVaultClientCertSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultClientCertSecretRefPtrInput` via:
//
//	        IssuerSpecVaultClientCertSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultClientCertSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultClientCertSecretRefPtrOutput() IssuerSpecVaultClientCertSecretRefPtrOutput
	ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultClientCertSecretRefPtrOutput
}

type issuerSpecVaultClientCertSecretRefPtrType IssuerSpecVaultClientCertSecretRefArgs

func IssuerSpecVaultClientCertSecretRefPtr(v *IssuerSpecVaultClientCertSecretRefArgs) IssuerSpecVaultClientCertSecretRefPtrInput {
	return (*issuerSpecVaultClientCertSecretRefPtrType)(v)
}

func (*issuerSpecVaultClientCertSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultClientCertSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultClientCertSecretRefPtrType) ToIssuerSpecVaultClientCertSecretRefPtrOutput() IssuerSpecVaultClientCertSecretRefPtrOutput {
	return i.ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultClientCertSecretRefPtrType) ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientCertSecretRefPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Certificate to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientCertSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultClientCertSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultClientCertSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultClientCertSecretRefOutput) ToIssuerSpecVaultClientCertSecretRefOutput() IssuerSpecVaultClientCertSecretRefOutput {
	return o
}

func (o IssuerSpecVaultClientCertSecretRefOutput) ToIssuerSpecVaultClientCertSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefOutput {
	return o
}

func (o IssuerSpecVaultClientCertSecretRefOutput) ToIssuerSpecVaultClientCertSecretRefPtrOutput() IssuerSpecVaultClientCertSecretRefPtrOutput {
	return o.ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultClientCertSecretRefOutput) ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultClientCertSecretRef) *IssuerSpecVaultClientCertSecretRef {
		return &v
	}).(IssuerSpecVaultClientCertSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultClientCertSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultClientCertSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultClientCertSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultClientCertSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultClientCertSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultClientCertSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultClientCertSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultClientCertSecretRefPtrOutput) ToIssuerSpecVaultClientCertSecretRefPtrOutput() IssuerSpecVaultClientCertSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultClientCertSecretRefPtrOutput) ToIssuerSpecVaultClientCertSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultClientCertSecretRefPtrOutput) Elem() IssuerSpecVaultClientCertSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientCertSecretRef) IssuerSpecVaultClientCertSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultClientCertSecretRef
		return ret
	}).(IssuerSpecVaultClientCertSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultClientCertSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultClientCertSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Certificate to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientCertSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVaultClientCertSecretRefPatchInput is an input type that accepts IssuerSpecVaultClientCertSecretRefPatchArgs and IssuerSpecVaultClientCertSecretRefPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVaultClientCertSecretRefPatchInput` via:
//
//	IssuerSpecVaultClientCertSecretRefPatchArgs{...}
type IssuerSpecVaultClientCertSecretRefPatchInput interface {
	pulumi.Input

	ToIssuerSpecVaultClientCertSecretRefPatchOutput() IssuerSpecVaultClientCertSecretRefPatchOutput
	ToIssuerSpecVaultClientCertSecretRefPatchOutputWithContext(context.Context) IssuerSpecVaultClientCertSecretRefPatchOutput
}

// Reference to a Secret containing a PEM-encoded Client Certificate to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientCertSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVaultClientCertSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultClientCertSecretRefPatch)(nil)).Elem()
}

func (i IssuerSpecVaultClientCertSecretRefPatchArgs) ToIssuerSpecVaultClientCertSecretRefPatchOutput() IssuerSpecVaultClientCertSecretRefPatchOutput {
	return i.ToIssuerSpecVaultClientCertSecretRefPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVaultClientCertSecretRefPatchArgs) ToIssuerSpecVaultClientCertSecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientCertSecretRefPatchOutput)
}

func (i IssuerSpecVaultClientCertSecretRefPatchArgs) ToIssuerSpecVaultClientCertSecretRefPatchPtrOutput() IssuerSpecVaultClientCertSecretRefPatchPtrOutput {
	return i.ToIssuerSpecVaultClientCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultClientCertSecretRefPatchArgs) ToIssuerSpecVaultClientCertSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientCertSecretRefPatchOutput).ToIssuerSpecVaultClientCertSecretRefPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVaultClientCertSecretRefPatchPtrInput is an input type that accepts IssuerSpecVaultClientCertSecretRefPatchArgs, IssuerSpecVaultClientCertSecretRefPatchPtr and IssuerSpecVaultClientCertSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultClientCertSecretRefPatchPtrInput` via:
//
//	        IssuerSpecVaultClientCertSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultClientCertSecretRefPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultClientCertSecretRefPatchPtrOutput() IssuerSpecVaultClientCertSecretRefPatchPtrOutput
	ToIssuerSpecVaultClientCertSecretRefPatchPtrOutputWithContext(context.Context) IssuerSpecVaultClientCertSecretRefPatchPtrOutput
}

type issuerSpecVaultClientCertSecretRefPatchPtrType IssuerSpecVaultClientCertSecretRefPatchArgs

func IssuerSpecVaultClientCertSecretRefPatchPtr(v *IssuerSpecVaultClientCertSecretRefPatchArgs) IssuerSpecVaultClientCertSecretRefPatchPtrInput {
	return (*issuerSpecVaultClientCertSecretRefPatchPtrType)(v)
}

func (*issuerSpecVaultClientCertSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultClientCertSecretRefPatch)(nil)).Elem()
}

func (i *issuerSpecVaultClientCertSecretRefPatchPtrType) ToIssuerSpecVaultClientCertSecretRefPatchPtrOutput() IssuerSpecVaultClientCertSecretRefPatchPtrOutput {
	return i.ToIssuerSpecVaultClientCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultClientCertSecretRefPatchPtrType) ToIssuerSpecVaultClientCertSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientCertSecretRefPatchPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Certificate to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientCertSecretRefPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultClientCertSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultClientCertSecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVaultClientCertSecretRefPatchOutput) ToIssuerSpecVaultClientCertSecretRefPatchOutput() IssuerSpecVaultClientCertSecretRefPatchOutput {
	return o
}

func (o IssuerSpecVaultClientCertSecretRefPatchOutput) ToIssuerSpecVaultClientCertSecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefPatchOutput {
	return o
}

func (o IssuerSpecVaultClientCertSecretRefPatchOutput) ToIssuerSpecVaultClientCertSecretRefPatchPtrOutput() IssuerSpecVaultClientCertSecretRefPatchPtrOutput {
	return o.ToIssuerSpecVaultClientCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultClientCertSecretRefPatchOutput) ToIssuerSpecVaultClientCertSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultClientCertSecretRefPatch) *IssuerSpecVaultClientCertSecretRefPatch {
		return &v
	}).(IssuerSpecVaultClientCertSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultClientCertSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultClientCertSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultClientCertSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultClientCertSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultClientCertSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultClientCertSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultClientCertSecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVaultClientCertSecretRefPatchPtrOutput) ToIssuerSpecVaultClientCertSecretRefPatchPtrOutput() IssuerSpecVaultClientCertSecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultClientCertSecretRefPatchPtrOutput) ToIssuerSpecVaultClientCertSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientCertSecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultClientCertSecretRefPatchPtrOutput) Elem() IssuerSpecVaultClientCertSecretRefPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientCertSecretRefPatch) IssuerSpecVaultClientCertSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultClientCertSecretRefPatch
		return ret
	}).(IssuerSpecVaultClientCertSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultClientCertSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultClientCertSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Private Key to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVaultClientKeySecretRefInput is an input type that accepts IssuerSpecVaultClientKeySecretRefArgs and IssuerSpecVaultClientKeySecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultClientKeySecretRefInput` via:
//
//	IssuerSpecVaultClientKeySecretRefArgs{...}
type IssuerSpecVaultClientKeySecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultClientKeySecretRefOutput() IssuerSpecVaultClientKeySecretRefOutput
	ToIssuerSpecVaultClientKeySecretRefOutputWithContext(context.Context) IssuerSpecVaultClientKeySecretRefOutput
}

// Reference to a Secret containing a PEM-encoded Client Private Key to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVaultClientKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultClientKeySecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultClientKeySecretRefArgs) ToIssuerSpecVaultClientKeySecretRefOutput() IssuerSpecVaultClientKeySecretRefOutput {
	return i.ToIssuerSpecVaultClientKeySecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultClientKeySecretRefArgs) ToIssuerSpecVaultClientKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientKeySecretRefOutput)
}

func (i IssuerSpecVaultClientKeySecretRefArgs) ToIssuerSpecVaultClientKeySecretRefPtrOutput() IssuerSpecVaultClientKeySecretRefPtrOutput {
	return i.ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultClientKeySecretRefArgs) ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientKeySecretRefOutput).ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultClientKeySecretRefPtrInput is an input type that accepts IssuerSpecVaultClientKeySecretRefArgs, IssuerSpecVaultClientKeySecretRefPtr and IssuerSpecVaultClientKeySecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultClientKeySecretRefPtrInput` via:
//
//	        IssuerSpecVaultClientKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultClientKeySecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultClientKeySecretRefPtrOutput() IssuerSpecVaultClientKeySecretRefPtrOutput
	ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultClientKeySecretRefPtrOutput
}

type issuerSpecVaultClientKeySecretRefPtrType IssuerSpecVaultClientKeySecretRefArgs

func IssuerSpecVaultClientKeySecretRefPtr(v *IssuerSpecVaultClientKeySecretRefArgs) IssuerSpecVaultClientKeySecretRefPtrInput {
	return (*issuerSpecVaultClientKeySecretRefPtrType)(v)
}

func (*issuerSpecVaultClientKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultClientKeySecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultClientKeySecretRefPtrType) ToIssuerSpecVaultClientKeySecretRefPtrOutput() IssuerSpecVaultClientKeySecretRefPtrOutput {
	return i.ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultClientKeySecretRefPtrType) ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientKeySecretRefPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Private Key to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientKeySecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultClientKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultClientKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultClientKeySecretRefOutput) ToIssuerSpecVaultClientKeySecretRefOutput() IssuerSpecVaultClientKeySecretRefOutput {
	return o
}

func (o IssuerSpecVaultClientKeySecretRefOutput) ToIssuerSpecVaultClientKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefOutput {
	return o
}

func (o IssuerSpecVaultClientKeySecretRefOutput) ToIssuerSpecVaultClientKeySecretRefPtrOutput() IssuerSpecVaultClientKeySecretRefPtrOutput {
	return o.ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultClientKeySecretRefOutput) ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultClientKeySecretRef) *IssuerSpecVaultClientKeySecretRef {
		return &v
	}).(IssuerSpecVaultClientKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultClientKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultClientKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultClientKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultClientKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultClientKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultClientKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultClientKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultClientKeySecretRefPtrOutput) ToIssuerSpecVaultClientKeySecretRefPtrOutput() IssuerSpecVaultClientKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultClientKeySecretRefPtrOutput) ToIssuerSpecVaultClientKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultClientKeySecretRefPtrOutput) Elem() IssuerSpecVaultClientKeySecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientKeySecretRef) IssuerSpecVaultClientKeySecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultClientKeySecretRef
		return ret
	}).(IssuerSpecVaultClientKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultClientKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultClientKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Private Key to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientKeySecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVaultClientKeySecretRefPatchInput is an input type that accepts IssuerSpecVaultClientKeySecretRefPatchArgs and IssuerSpecVaultClientKeySecretRefPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVaultClientKeySecretRefPatchInput` via:
//
//	IssuerSpecVaultClientKeySecretRefPatchArgs{...}
type IssuerSpecVaultClientKeySecretRefPatchInput interface {
	pulumi.Input

	ToIssuerSpecVaultClientKeySecretRefPatchOutput() IssuerSpecVaultClientKeySecretRefPatchOutput
	ToIssuerSpecVaultClientKeySecretRefPatchOutputWithContext(context.Context) IssuerSpecVaultClientKeySecretRefPatchOutput
}

// Reference to a Secret containing a PEM-encoded Client Private Key to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientKeySecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVaultClientKeySecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultClientKeySecretRefPatch)(nil)).Elem()
}

func (i IssuerSpecVaultClientKeySecretRefPatchArgs) ToIssuerSpecVaultClientKeySecretRefPatchOutput() IssuerSpecVaultClientKeySecretRefPatchOutput {
	return i.ToIssuerSpecVaultClientKeySecretRefPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVaultClientKeySecretRefPatchArgs) ToIssuerSpecVaultClientKeySecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientKeySecretRefPatchOutput)
}

func (i IssuerSpecVaultClientKeySecretRefPatchArgs) ToIssuerSpecVaultClientKeySecretRefPatchPtrOutput() IssuerSpecVaultClientKeySecretRefPatchPtrOutput {
	return i.ToIssuerSpecVaultClientKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultClientKeySecretRefPatchArgs) ToIssuerSpecVaultClientKeySecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientKeySecretRefPatchOutput).ToIssuerSpecVaultClientKeySecretRefPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVaultClientKeySecretRefPatchPtrInput is an input type that accepts IssuerSpecVaultClientKeySecretRefPatchArgs, IssuerSpecVaultClientKeySecretRefPatchPtr and IssuerSpecVaultClientKeySecretRefPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultClientKeySecretRefPatchPtrInput` via:
//
//	        IssuerSpecVaultClientKeySecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultClientKeySecretRefPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultClientKeySecretRefPatchPtrOutput() IssuerSpecVaultClientKeySecretRefPatchPtrOutput
	ToIssuerSpecVaultClientKeySecretRefPatchPtrOutputWithContext(context.Context) IssuerSpecVaultClientKeySecretRefPatchPtrOutput
}

type issuerSpecVaultClientKeySecretRefPatchPtrType IssuerSpecVaultClientKeySecretRefPatchArgs

func IssuerSpecVaultClientKeySecretRefPatchPtr(v *IssuerSpecVaultClientKeySecretRefPatchArgs) IssuerSpecVaultClientKeySecretRefPatchPtrInput {
	return (*issuerSpecVaultClientKeySecretRefPatchPtrType)(v)
}

func (*issuerSpecVaultClientKeySecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultClientKeySecretRefPatch)(nil)).Elem()
}

func (i *issuerSpecVaultClientKeySecretRefPatchPtrType) ToIssuerSpecVaultClientKeySecretRefPatchPtrOutput() IssuerSpecVaultClientKeySecretRefPatchPtrOutput {
	return i.ToIssuerSpecVaultClientKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultClientKeySecretRefPatchPtrType) ToIssuerSpecVaultClientKeySecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultClientKeySecretRefPatchPtrOutput)
}

// Reference to a Secret containing a PEM-encoded Client Private Key to use when the
// Vault server requires mTLS.
type IssuerSpecVaultClientKeySecretRefPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultClientKeySecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultClientKeySecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVaultClientKeySecretRefPatchOutput) ToIssuerSpecVaultClientKeySecretRefPatchOutput() IssuerSpecVaultClientKeySecretRefPatchOutput {
	return o
}

func (o IssuerSpecVaultClientKeySecretRefPatchOutput) ToIssuerSpecVaultClientKeySecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefPatchOutput {
	return o
}

func (o IssuerSpecVaultClientKeySecretRefPatchOutput) ToIssuerSpecVaultClientKeySecretRefPatchPtrOutput() IssuerSpecVaultClientKeySecretRefPatchPtrOutput {
	return o.ToIssuerSpecVaultClientKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultClientKeySecretRefPatchOutput) ToIssuerSpecVaultClientKeySecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultClientKeySecretRefPatch) *IssuerSpecVaultClientKeySecretRefPatch {
		return &v
	}).(IssuerSpecVaultClientKeySecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultClientKeySecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultClientKeySecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultClientKeySecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultClientKeySecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultClientKeySecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultClientKeySecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultClientKeySecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVaultClientKeySecretRefPatchPtrOutput) ToIssuerSpecVaultClientKeySecretRefPatchPtrOutput() IssuerSpecVaultClientKeySecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultClientKeySecretRefPatchPtrOutput) ToIssuerSpecVaultClientKeySecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultClientKeySecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultClientKeySecretRefPatchPtrOutput) Elem() IssuerSpecVaultClientKeySecretRefPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientKeySecretRefPatch) IssuerSpecVaultClientKeySecretRefPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultClientKeySecretRefPatch
		return ret
	}).(IssuerSpecVaultClientKeySecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVaultClientKeySecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultClientKeySecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultClientKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault
// PKI backend.
type IssuerSpecVaultPatch struct {
	Auth *IssuerSpecVaultAuthPatch `pulumi:"auth"`
	// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
	// chain presented by Vault. Only used if using HTTPS to connect to Vault and
	// ignored for HTTP connections.
	// Mutually exclusive with CABundleSecretRef.
	// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
	// the cert-manager controller container is used to validate the TLS connection.
	CaBundle            *string                                  `pulumi:"caBundle"`
	CaBundleSecretRef   *IssuerSpecVaultCaBundleSecretRefPatch   `pulumi:"caBundleSecretRef"`
	ClientCertSecretRef *IssuerSpecVaultClientCertSecretRefPatch `pulumi:"clientCertSecretRef"`
	ClientKeySecretRef  *IssuerSpecVaultClientKeySecretRefPatch  `pulumi:"clientKeySecretRef"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace *string `pulumi:"namespace"`
	// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
	// "my_pki_mount/sign/my-role-name".
	Path *string `pulumi:"path"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server *string `pulumi:"server"`
}

// IssuerSpecVaultPatchInput is an input type that accepts IssuerSpecVaultPatchArgs and IssuerSpecVaultPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVaultPatchInput` via:
//
//	IssuerSpecVaultPatchArgs{...}
type IssuerSpecVaultPatchInput interface {
	pulumi.Input

	ToIssuerSpecVaultPatchOutput() IssuerSpecVaultPatchOutput
	ToIssuerSpecVaultPatchOutputWithContext(context.Context) IssuerSpecVaultPatchOutput
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault
// PKI backend.
type IssuerSpecVaultPatchArgs struct {
	Auth IssuerSpecVaultAuthPatchPtrInput `pulumi:"auth"`
	// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
	// chain presented by Vault. Only used if using HTTPS to connect to Vault and
	// ignored for HTTP connections.
	// Mutually exclusive with CABundleSecretRef.
	// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
	// the cert-manager controller container is used to validate the TLS connection.
	CaBundle            pulumi.StringPtrInput                           `pulumi:"caBundle"`
	CaBundleSecretRef   IssuerSpecVaultCaBundleSecretRefPatchPtrInput   `pulumi:"caBundleSecretRef"`
	ClientCertSecretRef IssuerSpecVaultClientCertSecretRefPatchPtrInput `pulumi:"clientCertSecretRef"`
	ClientKeySecretRef  IssuerSpecVaultClientKeySecretRefPatchPtrInput  `pulumi:"clientKeySecretRef"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
	// "my_pki_mount/sign/my-role-name".
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server pulumi.StringPtrInput `pulumi:"server"`
}

func (IssuerSpecVaultPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultPatch)(nil)).Elem()
}

func (i IssuerSpecVaultPatchArgs) ToIssuerSpecVaultPatchOutput() IssuerSpecVaultPatchOutput {
	return i.ToIssuerSpecVaultPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVaultPatchArgs) ToIssuerSpecVaultPatchOutputWithContext(ctx context.Context) IssuerSpecVaultPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultPatchOutput)
}

func (i IssuerSpecVaultPatchArgs) ToIssuerSpecVaultPatchPtrOutput() IssuerSpecVaultPatchPtrOutput {
	return i.ToIssuerSpecVaultPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultPatchArgs) ToIssuerSpecVaultPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultPatchOutput).ToIssuerSpecVaultPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVaultPatchPtrInput is an input type that accepts IssuerSpecVaultPatchArgs, IssuerSpecVaultPatchPtr and IssuerSpecVaultPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultPatchPtrInput` via:
//
//	        IssuerSpecVaultPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVaultPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultPatchPtrOutput() IssuerSpecVaultPatchPtrOutput
	ToIssuerSpecVaultPatchPtrOutputWithContext(context.Context) IssuerSpecVaultPatchPtrOutput
}

type issuerSpecVaultPatchPtrType IssuerSpecVaultPatchArgs

func IssuerSpecVaultPatchPtr(v *IssuerSpecVaultPatchArgs) IssuerSpecVaultPatchPtrInput {
	return (*issuerSpecVaultPatchPtrType)(v)
}

func (*issuerSpecVaultPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultPatch)(nil)).Elem()
}

func (i *issuerSpecVaultPatchPtrType) ToIssuerSpecVaultPatchPtrOutput() IssuerSpecVaultPatchPtrOutput {
	return i.ToIssuerSpecVaultPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultPatchPtrType) ToIssuerSpecVaultPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultPatchPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault
// PKI backend.
type IssuerSpecVaultPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultPatch)(nil)).Elem()
}

func (o IssuerSpecVaultPatchOutput) ToIssuerSpecVaultPatchOutput() IssuerSpecVaultPatchOutput {
	return o
}

func (o IssuerSpecVaultPatchOutput) ToIssuerSpecVaultPatchOutputWithContext(ctx context.Context) IssuerSpecVaultPatchOutput {
	return o
}

func (o IssuerSpecVaultPatchOutput) ToIssuerSpecVaultPatchPtrOutput() IssuerSpecVaultPatchPtrOutput {
	return o.ToIssuerSpecVaultPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultPatchOutput) ToIssuerSpecVaultPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVaultPatch) *IssuerSpecVaultPatch {
		return &v
	}).(IssuerSpecVaultPatchPtrOutput)
}

func (o IssuerSpecVaultPatchOutput) Auth() IssuerSpecVaultAuthPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultPatch) *IssuerSpecVaultAuthPatch { return v.Auth }).(IssuerSpecVaultAuthPatchPtrOutput)
}

// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
// chain presented by Vault. Only used if using HTTPS to connect to Vault and
// ignored for HTTP connections.
// Mutually exclusive with CABundleSecretRef.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
func (o IssuerSpecVaultPatchOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultPatch) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVaultPatchOutput) CaBundleSecretRef() IssuerSpecVaultCaBundleSecretRefPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultPatch) *IssuerSpecVaultCaBundleSecretRefPatch { return v.CaBundleSecretRef }).(IssuerSpecVaultCaBundleSecretRefPatchPtrOutput)
}

func (o IssuerSpecVaultPatchOutput) ClientCertSecretRef() IssuerSpecVaultClientCertSecretRefPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultPatch) *IssuerSpecVaultClientCertSecretRefPatch { return v.ClientCertSecretRef }).(IssuerSpecVaultClientCertSecretRefPatchPtrOutput)
}

func (o IssuerSpecVaultPatchOutput) ClientKeySecretRef() IssuerSpecVaultClientKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultPatch) *IssuerSpecVaultClientKeySecretRefPatch { return v.ClientKeySecretRef }).(IssuerSpecVaultClientKeySecretRefPatchPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o IssuerSpecVaultPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
// "my_pki_mount/sign/my-role-name".
func (o IssuerSpecVaultPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o IssuerSpecVaultPatchOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultPatch) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type IssuerSpecVaultPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultPatch)(nil)).Elem()
}

func (o IssuerSpecVaultPatchPtrOutput) ToIssuerSpecVaultPatchPtrOutput() IssuerSpecVaultPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultPatchPtrOutput) ToIssuerSpecVaultPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPatchPtrOutput {
	return o
}

func (o IssuerSpecVaultPatchPtrOutput) Elem() IssuerSpecVaultPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVaultPatch) IssuerSpecVaultPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVaultPatch
		return ret
	}).(IssuerSpecVaultPatchOutput)
}

func (o IssuerSpecVaultPatchPtrOutput) Auth() IssuerSpecVaultAuthPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultPatch) *IssuerSpecVaultAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(IssuerSpecVaultAuthPatchPtrOutput)
}

// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
// chain presented by Vault. Only used if using HTTPS to connect to Vault and
// ignored for HTTP connections.
// Mutually exclusive with CABundleSecretRef.
// If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
func (o IssuerSpecVaultPatchPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVaultPatchPtrOutput) CaBundleSecretRef() IssuerSpecVaultCaBundleSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultPatch) *IssuerSpecVaultCaBundleSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.CaBundleSecretRef
	}).(IssuerSpecVaultCaBundleSecretRefPatchPtrOutput)
}

func (o IssuerSpecVaultPatchPtrOutput) ClientCertSecretRef() IssuerSpecVaultClientCertSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultPatch) *IssuerSpecVaultClientCertSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.ClientCertSecretRef
	}).(IssuerSpecVaultClientCertSecretRefPatchPtrOutput)
}

func (o IssuerSpecVaultPatchPtrOutput) ClientKeySecretRef() IssuerSpecVaultClientKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultPatch) *IssuerSpecVaultClientKeySecretRefPatch {
		if v == nil {
			return nil
		}
		return v.ClientKeySecretRef
	}).(IssuerSpecVaultClientKeySecretRefPatchPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o IssuerSpecVaultPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
// "my_pki_mount/sign/my-role-name".
func (o IssuerSpecVaultPatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultPatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o IssuerSpecVaultPatchPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultPatch) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP
// or Venafi Cloud policy zone.
type IssuerSpecVenafi struct {
	Cloud *IssuerSpecVenafiCloud `pulumi:"cloud"`
	Tpp   *IssuerSpecVenafiTpp   `pulumi:"tpp"`
	// Zone is the Venafi Policy Zone to use for this issuer.
	// All requests made to the Venafi platform will be restricted by the named
	// zone policy.
	// This field is required.
	Zone *string `pulumi:"zone"`
}

// IssuerSpecVenafiInput is an input type that accepts IssuerSpecVenafiArgs and IssuerSpecVenafiOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiInput` via:
//
//	IssuerSpecVenafiArgs{...}
type IssuerSpecVenafiInput interface {
	pulumi.Input

	ToIssuerSpecVenafiOutput() IssuerSpecVenafiOutput
	ToIssuerSpecVenafiOutputWithContext(context.Context) IssuerSpecVenafiOutput
}

// Venafi configures this issuer to sign certificates using a Venafi TPP
// or Venafi Cloud policy zone.
type IssuerSpecVenafiArgs struct {
	Cloud IssuerSpecVenafiCloudPtrInput `pulumi:"cloud"`
	Tpp   IssuerSpecVenafiTppPtrInput   `pulumi:"tpp"`
	// Zone is the Venafi Policy Zone to use for this issuer.
	// All requests made to the Venafi platform will be restricted by the named
	// zone policy.
	// This field is required.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (IssuerSpecVenafiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafi)(nil)).Elem()
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiOutput() IssuerSpecVenafiOutput {
	return i.ToIssuerSpecVenafiOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiOutputWithContext(ctx context.Context) IssuerSpecVenafiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiOutput)
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return i.ToIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiOutput).ToIssuerSpecVenafiPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiPtrInput is an input type that accepts IssuerSpecVenafiArgs, IssuerSpecVenafiPtr and IssuerSpecVenafiPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiPtrInput` via:
//
//	        IssuerSpecVenafiArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput
	ToIssuerSpecVenafiPtrOutputWithContext(context.Context) IssuerSpecVenafiPtrOutput
}

type issuerSpecVenafiPtrType IssuerSpecVenafiArgs

func IssuerSpecVenafiPtr(v *IssuerSpecVenafiArgs) IssuerSpecVenafiPtrInput {
	return (*issuerSpecVenafiPtrType)(v)
}

func (*issuerSpecVenafiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafi)(nil)).Elem()
}

func (i *issuerSpecVenafiPtrType) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return i.ToIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiPtrType) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP
// or Venafi Cloud policy zone.
type IssuerSpecVenafiOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafi)(nil)).Elem()
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiOutput() IssuerSpecVenafiOutput {
	return o
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiOutputWithContext(ctx context.Context) IssuerSpecVenafiOutput {
	return o
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return o.ToIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafi) *IssuerSpecVenafi {
		return &v
	}).(IssuerSpecVenafiPtrOutput)
}

func (o IssuerSpecVenafiOutput) Cloud() IssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafi) *IssuerSpecVenafiCloud { return v.Cloud }).(IssuerSpecVenafiCloudPtrOutput)
}

func (o IssuerSpecVenafiOutput) Tpp() IssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafi) *IssuerSpecVenafiTpp { return v.Tpp }).(IssuerSpecVenafiTppPtrOutput)
}

// Zone is the Venafi Policy Zone to use for this issuer.
// All requests made to the Venafi platform will be restricted by the named
// zone policy.
// This field is required.
func (o IssuerSpecVenafiOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafi) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafi)(nil)).Elem()
}

func (o IssuerSpecVenafiPtrOutput) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return o
}

func (o IssuerSpecVenafiPtrOutput) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return o
}

func (o IssuerSpecVenafiPtrOutput) Elem() IssuerSpecVenafiOutput {
	return o.ApplyT(func(v *IssuerSpecVenafi) IssuerSpecVenafi {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafi
		return ret
	}).(IssuerSpecVenafiOutput)
}

func (o IssuerSpecVenafiPtrOutput) Cloud() IssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafi) *IssuerSpecVenafiCloud {
		if v == nil {
			return nil
		}
		return v.Cloud
	}).(IssuerSpecVenafiCloudPtrOutput)
}

func (o IssuerSpecVenafiPtrOutput) Tpp() IssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafi) *IssuerSpecVenafiTpp {
		if v == nil {
			return nil
		}
		return v.Tpp
	}).(IssuerSpecVenafiTppPtrOutput)
}

// Zone is the Venafi Policy Zone to use for this issuer.
// All requests made to the Venafi platform will be restricted by the named
// zone policy.
// This field is required.
func (o IssuerSpecVenafiPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafi) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloud struct {
	ApiTokenSecretRef *IssuerSpecVenafiCloudApiTokenSecretRef `pulumi:"apiTokenSecretRef"`
	// URL is the base URL for Venafi Cloud.
	// Defaults to "https://api.venafi.cloud/v1".
	Url *string `pulumi:"url"`
}

// IssuerSpecVenafiCloudInput is an input type that accepts IssuerSpecVenafiCloudArgs and IssuerSpecVenafiCloudOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudInput` via:
//
//	IssuerSpecVenafiCloudArgs{...}
type IssuerSpecVenafiCloudInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudOutput() IssuerSpecVenafiCloudOutput
	ToIssuerSpecVenafiCloudOutputWithContext(context.Context) IssuerSpecVenafiCloudOutput
}

// Cloud specifies the Venafi cloud configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloudArgs struct {
	ApiTokenSecretRef IssuerSpecVenafiCloudApiTokenSecretRefPtrInput `pulumi:"apiTokenSecretRef"`
	// URL is the base URL for Venafi Cloud.
	// Defaults to "https://api.venafi.cloud/v1".
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (IssuerSpecVenafiCloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloud)(nil)).Elem()
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudOutput() IssuerSpecVenafiCloudOutput {
	return i.ToIssuerSpecVenafiCloudOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudOutput)
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return i.ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudOutput).ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiCloudPtrInput is an input type that accepts IssuerSpecVenafiCloudArgs, IssuerSpecVenafiCloudPtr and IssuerSpecVenafiCloudPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudPtrInput` via:
//
//	        IssuerSpecVenafiCloudArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiCloudPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput
	ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Context) IssuerSpecVenafiCloudPtrOutput
}

type issuerSpecVenafiCloudPtrType IssuerSpecVenafiCloudArgs

func IssuerSpecVenafiCloudPtr(v *IssuerSpecVenafiCloudArgs) IssuerSpecVenafiCloudPtrInput {
	return (*issuerSpecVenafiCloudPtrType)(v)
}

func (*issuerSpecVenafiCloudPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloud)(nil)).Elem()
}

func (i *issuerSpecVenafiCloudPtrType) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return i.ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiCloudPtrType) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloudOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloud)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudOutput() IssuerSpecVenafiCloudOutput {
	return o
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudOutput {
	return o
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return o.ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiCloud) *IssuerSpecVenafiCloud {
		return &v
	}).(IssuerSpecVenafiCloudPtrOutput)
}

func (o IssuerSpecVenafiCloudOutput) ApiTokenSecretRef() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloud) *IssuerSpecVenafiCloudApiTokenSecretRef { return v.ApiTokenSecretRef }).(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// URL is the base URL for Venafi Cloud.
// Defaults to "https://api.venafi.cloud/v1".
func (o IssuerSpecVenafiCloudOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloud) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiCloudPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloud)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudPtrOutput) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudPtrOutput) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudPtrOutput) Elem() IssuerSpecVenafiCloudOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloud) IssuerSpecVenafiCloud {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiCloud
		return ret
	}).(IssuerSpecVenafiCloudOutput)
}

func (o IssuerSpecVenafiCloudPtrOutput) ApiTokenSecretRef() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloud) *IssuerSpecVenafiCloudApiTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.ApiTokenSecretRef
	}).(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// URL is the base URL for Venafi Cloud.
// Defaults to "https://api.venafi.cloud/v1".
func (o IssuerSpecVenafiCloudPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloud) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVenafiCloudApiTokenSecretRefInput is an input type that accepts IssuerSpecVenafiCloudApiTokenSecretRefArgs and IssuerSpecVenafiCloudApiTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudApiTokenSecretRefInput` via:
//
//	IssuerSpecVenafiCloudApiTokenSecretRefArgs{...}
type IssuerSpecVenafiCloudApiTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudApiTokenSecretRefOutput() IssuerSpecVenafiCloudApiTokenSecretRefOutput
	ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(context.Context) IssuerSpecVenafiCloudApiTokenSecretRefOutput
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVenafiCloudApiTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefOutput() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefOutput).ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiCloudApiTokenSecretRefPtrInput is an input type that accepts IssuerSpecVenafiCloudApiTokenSecretRefArgs, IssuerSpecVenafiCloudApiTokenSecretRefPtr and IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudApiTokenSecretRefPtrInput` via:
//
//	        IssuerSpecVenafiCloudApiTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiCloudApiTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput
	ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput
}

type issuerSpecVenafiCloudApiTokenSecretRefPtrType IssuerSpecVenafiCloudApiTokenSecretRefArgs

func IssuerSpecVenafiCloudApiTokenSecretRefPtr(v *IssuerSpecVenafiCloudApiTokenSecretRefArgs) IssuerSpecVenafiCloudApiTokenSecretRefPtrInput {
	return (*issuerSpecVenafiCloudApiTokenSecretRefPtrType)(v)
}

func (*issuerSpecVenafiCloudApiTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecVenafiCloudApiTokenSecretRefPtrType) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiCloudApiTokenSecretRefPtrType) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudApiTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefOutput() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiCloudApiTokenSecretRef) *IssuerSpecVenafiCloudApiTokenSecretRef {
		return &v
	}).(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloudApiTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloudApiTokenSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Elem() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudApiTokenSecretRef) IssuerSpecVenafiCloudApiTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiCloudApiTokenSecretRef
		return ret
	}).(IssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVenafiCloudApiTokenSecretRefPatchInput is an input type that accepts IssuerSpecVenafiCloudApiTokenSecretRefPatchArgs and IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudApiTokenSecretRefPatchInput` via:
//
//	IssuerSpecVenafiCloudApiTokenSecretRefPatchArgs{...}
type IssuerSpecVenafiCloudApiTokenSecretRefPatchInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudApiTokenSecretRefPatchOutput() IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput
	ToIssuerSpecVenafiCloudApiTokenSecretRefPatchOutputWithContext(context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVenafiCloudApiTokenSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRefPatch)(nil)).Elem()
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefPatchArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefPatchOutput() IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefPatchArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput)
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefPatchArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefPatchArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput).ToIssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrInput is an input type that accepts IssuerSpecVenafiCloudApiTokenSecretRefPatchArgs, IssuerSpecVenafiCloudApiTokenSecretRefPatchPtr and IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrInput` via:
//
//	        IssuerSpecVenafiCloudApiTokenSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput
	ToIssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutputWithContext(context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput
}

type issuerSpecVenafiCloudApiTokenSecretRefPatchPtrType IssuerSpecVenafiCloudApiTokenSecretRefPatchArgs

func IssuerSpecVenafiCloudApiTokenSecretRefPatchPtr(v *IssuerSpecVenafiCloudApiTokenSecretRefPatchArgs) IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrInput {
	return (*issuerSpecVenafiCloudApiTokenSecretRefPatchPtrType)(v)
}

func (*issuerSpecVenafiCloudApiTokenSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloudApiTokenSecretRefPatch)(nil)).Elem()
}

func (i *issuerSpecVenafiCloudApiTokenSecretRefPatchPtrType) ToIssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiCloudApiTokenSecretRefPatchPtrType) ToIssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPatchOutput() IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput {
	return o.ToIssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiCloudApiTokenSecretRefPatch) *IssuerSpecVenafiCloudApiTokenSecretRefPatch {
		return &v
	}).(IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloudApiTokenSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloudApiTokenSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloudApiTokenSecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput) Elem() IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudApiTokenSecretRefPatch) IssuerSpecVenafiCloudApiTokenSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiCloudApiTokenSecretRefPatch
		return ret
	}).(IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudApiTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudApiTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloudPatch struct {
	ApiTokenSecretRef *IssuerSpecVenafiCloudApiTokenSecretRefPatch `pulumi:"apiTokenSecretRef"`
	// URL is the base URL for Venafi Cloud.
	// Defaults to "https://api.venafi.cloud/v1".
	Url *string `pulumi:"url"`
}

// IssuerSpecVenafiCloudPatchInput is an input type that accepts IssuerSpecVenafiCloudPatchArgs and IssuerSpecVenafiCloudPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudPatchInput` via:
//
//	IssuerSpecVenafiCloudPatchArgs{...}
type IssuerSpecVenafiCloudPatchInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudPatchOutput() IssuerSpecVenafiCloudPatchOutput
	ToIssuerSpecVenafiCloudPatchOutputWithContext(context.Context) IssuerSpecVenafiCloudPatchOutput
}

// Cloud specifies the Venafi cloud configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloudPatchArgs struct {
	ApiTokenSecretRef IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrInput `pulumi:"apiTokenSecretRef"`
	// URL is the base URL for Venafi Cloud.
	// Defaults to "https://api.venafi.cloud/v1".
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (IssuerSpecVenafiCloudPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloudPatch)(nil)).Elem()
}

func (i IssuerSpecVenafiCloudPatchArgs) ToIssuerSpecVenafiCloudPatchOutput() IssuerSpecVenafiCloudPatchOutput {
	return i.ToIssuerSpecVenafiCloudPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudPatchArgs) ToIssuerSpecVenafiCloudPatchOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudPatchOutput)
}

func (i IssuerSpecVenafiCloudPatchArgs) ToIssuerSpecVenafiCloudPatchPtrOutput() IssuerSpecVenafiCloudPatchPtrOutput {
	return i.ToIssuerSpecVenafiCloudPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudPatchArgs) ToIssuerSpecVenafiCloudPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudPatchOutput).ToIssuerSpecVenafiCloudPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiCloudPatchPtrInput is an input type that accepts IssuerSpecVenafiCloudPatchArgs, IssuerSpecVenafiCloudPatchPtr and IssuerSpecVenafiCloudPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudPatchPtrInput` via:
//
//	        IssuerSpecVenafiCloudPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiCloudPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudPatchPtrOutput() IssuerSpecVenafiCloudPatchPtrOutput
	ToIssuerSpecVenafiCloudPatchPtrOutputWithContext(context.Context) IssuerSpecVenafiCloudPatchPtrOutput
}

type issuerSpecVenafiCloudPatchPtrType IssuerSpecVenafiCloudPatchArgs

func IssuerSpecVenafiCloudPatchPtr(v *IssuerSpecVenafiCloudPatchArgs) IssuerSpecVenafiCloudPatchPtrInput {
	return (*issuerSpecVenafiCloudPatchPtrType)(v)
}

func (*issuerSpecVenafiCloudPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloudPatch)(nil)).Elem()
}

func (i *issuerSpecVenafiCloudPatchPtrType) ToIssuerSpecVenafiCloudPatchPtrOutput() IssuerSpecVenafiCloudPatchPtrOutput {
	return i.ToIssuerSpecVenafiCloudPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiCloudPatchPtrType) ToIssuerSpecVenafiCloudPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudPatchPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloudPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloudPatch)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudPatchOutput) ToIssuerSpecVenafiCloudPatchOutput() IssuerSpecVenafiCloudPatchOutput {
	return o
}

func (o IssuerSpecVenafiCloudPatchOutput) ToIssuerSpecVenafiCloudPatchOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPatchOutput {
	return o
}

func (o IssuerSpecVenafiCloudPatchOutput) ToIssuerSpecVenafiCloudPatchPtrOutput() IssuerSpecVenafiCloudPatchPtrOutput {
	return o.ToIssuerSpecVenafiCloudPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiCloudPatchOutput) ToIssuerSpecVenafiCloudPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiCloudPatch) *IssuerSpecVenafiCloudPatch {
		return &v
	}).(IssuerSpecVenafiCloudPatchPtrOutput)
}

func (o IssuerSpecVenafiCloudPatchOutput) ApiTokenSecretRef() IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloudPatch) *IssuerSpecVenafiCloudApiTokenSecretRefPatch {
		return v.ApiTokenSecretRef
	}).(IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput)
}

// URL is the base URL for Venafi Cloud.
// Defaults to "https://api.venafi.cloud/v1".
func (o IssuerSpecVenafiCloudPatchOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloudPatch) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiCloudPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloudPatch)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudPatchPtrOutput) ToIssuerSpecVenafiCloudPatchPtrOutput() IssuerSpecVenafiCloudPatchPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudPatchPtrOutput) ToIssuerSpecVenafiCloudPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPatchPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudPatchPtrOutput) Elem() IssuerSpecVenafiCloudPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudPatch) IssuerSpecVenafiCloudPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiCloudPatch
		return ret
	}).(IssuerSpecVenafiCloudPatchOutput)
}

func (o IssuerSpecVenafiCloudPatchPtrOutput) ApiTokenSecretRef() IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudPatch) *IssuerSpecVenafiCloudApiTokenSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.ApiTokenSecretRef
	}).(IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput)
}

// URL is the base URL for Venafi Cloud.
// Defaults to "https://api.venafi.cloud/v1".
func (o IssuerSpecVenafiCloudPatchPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudPatch) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP
// or Venafi Cloud policy zone.
type IssuerSpecVenafiPatch struct {
	Cloud *IssuerSpecVenafiCloudPatch `pulumi:"cloud"`
	Tpp   *IssuerSpecVenafiTppPatch   `pulumi:"tpp"`
	// Zone is the Venafi Policy Zone to use for this issuer.
	// All requests made to the Venafi platform will be restricted by the named
	// zone policy.
	// This field is required.
	Zone *string `pulumi:"zone"`
}

// IssuerSpecVenafiPatchInput is an input type that accepts IssuerSpecVenafiPatchArgs and IssuerSpecVenafiPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiPatchInput` via:
//
//	IssuerSpecVenafiPatchArgs{...}
type IssuerSpecVenafiPatchInput interface {
	pulumi.Input

	ToIssuerSpecVenafiPatchOutput() IssuerSpecVenafiPatchOutput
	ToIssuerSpecVenafiPatchOutputWithContext(context.Context) IssuerSpecVenafiPatchOutput
}

// Venafi configures this issuer to sign certificates using a Venafi TPP
// or Venafi Cloud policy zone.
type IssuerSpecVenafiPatchArgs struct {
	Cloud IssuerSpecVenafiCloudPatchPtrInput `pulumi:"cloud"`
	Tpp   IssuerSpecVenafiTppPatchPtrInput   `pulumi:"tpp"`
	// Zone is the Venafi Policy Zone to use for this issuer.
	// All requests made to the Venafi platform will be restricted by the named
	// zone policy.
	// This field is required.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (IssuerSpecVenafiPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiPatch)(nil)).Elem()
}

func (i IssuerSpecVenafiPatchArgs) ToIssuerSpecVenafiPatchOutput() IssuerSpecVenafiPatchOutput {
	return i.ToIssuerSpecVenafiPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiPatchArgs) ToIssuerSpecVenafiPatchOutputWithContext(ctx context.Context) IssuerSpecVenafiPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiPatchOutput)
}

func (i IssuerSpecVenafiPatchArgs) ToIssuerSpecVenafiPatchPtrOutput() IssuerSpecVenafiPatchPtrOutput {
	return i.ToIssuerSpecVenafiPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiPatchArgs) ToIssuerSpecVenafiPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiPatchOutput).ToIssuerSpecVenafiPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiPatchPtrInput is an input type that accepts IssuerSpecVenafiPatchArgs, IssuerSpecVenafiPatchPtr and IssuerSpecVenafiPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiPatchPtrInput` via:
//
//	        IssuerSpecVenafiPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiPatchPtrOutput() IssuerSpecVenafiPatchPtrOutput
	ToIssuerSpecVenafiPatchPtrOutputWithContext(context.Context) IssuerSpecVenafiPatchPtrOutput
}

type issuerSpecVenafiPatchPtrType IssuerSpecVenafiPatchArgs

func IssuerSpecVenafiPatchPtr(v *IssuerSpecVenafiPatchArgs) IssuerSpecVenafiPatchPtrInput {
	return (*issuerSpecVenafiPatchPtrType)(v)
}

func (*issuerSpecVenafiPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiPatch)(nil)).Elem()
}

func (i *issuerSpecVenafiPatchPtrType) ToIssuerSpecVenafiPatchPtrOutput() IssuerSpecVenafiPatchPtrOutput {
	return i.ToIssuerSpecVenafiPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiPatchPtrType) ToIssuerSpecVenafiPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiPatchPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP
// or Venafi Cloud policy zone.
type IssuerSpecVenafiPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiPatch)(nil)).Elem()
}

func (o IssuerSpecVenafiPatchOutput) ToIssuerSpecVenafiPatchOutput() IssuerSpecVenafiPatchOutput {
	return o
}

func (o IssuerSpecVenafiPatchOutput) ToIssuerSpecVenafiPatchOutputWithContext(ctx context.Context) IssuerSpecVenafiPatchOutput {
	return o
}

func (o IssuerSpecVenafiPatchOutput) ToIssuerSpecVenafiPatchPtrOutput() IssuerSpecVenafiPatchPtrOutput {
	return o.ToIssuerSpecVenafiPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiPatchOutput) ToIssuerSpecVenafiPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiPatch) *IssuerSpecVenafiPatch {
		return &v
	}).(IssuerSpecVenafiPatchPtrOutput)
}

func (o IssuerSpecVenafiPatchOutput) Cloud() IssuerSpecVenafiCloudPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiPatch) *IssuerSpecVenafiCloudPatch { return v.Cloud }).(IssuerSpecVenafiCloudPatchPtrOutput)
}

func (o IssuerSpecVenafiPatchOutput) Tpp() IssuerSpecVenafiTppPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiPatch) *IssuerSpecVenafiTppPatch { return v.Tpp }).(IssuerSpecVenafiTppPatchPtrOutput)
}

// Zone is the Venafi Policy Zone to use for this issuer.
// All requests made to the Venafi platform will be restricted by the named
// zone policy.
// This field is required.
func (o IssuerSpecVenafiPatchOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiPatch) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiPatch)(nil)).Elem()
}

func (o IssuerSpecVenafiPatchPtrOutput) ToIssuerSpecVenafiPatchPtrOutput() IssuerSpecVenafiPatchPtrOutput {
	return o
}

func (o IssuerSpecVenafiPatchPtrOutput) ToIssuerSpecVenafiPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPatchPtrOutput {
	return o
}

func (o IssuerSpecVenafiPatchPtrOutput) Elem() IssuerSpecVenafiPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiPatch) IssuerSpecVenafiPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiPatch
		return ret
	}).(IssuerSpecVenafiPatchOutput)
}

func (o IssuerSpecVenafiPatchPtrOutput) Cloud() IssuerSpecVenafiCloudPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiPatch) *IssuerSpecVenafiCloudPatch {
		if v == nil {
			return nil
		}
		return v.Cloud
	}).(IssuerSpecVenafiCloudPatchPtrOutput)
}

func (o IssuerSpecVenafiPatchPtrOutput) Tpp() IssuerSpecVenafiTppPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiPatch) *IssuerSpecVenafiTppPatch {
		if v == nil {
			return nil
		}
		return v.Tpp
	}).(IssuerSpecVenafiTppPatchPtrOutput)
}

// Zone is the Venafi Policy Zone to use for this issuer.
// All requests made to the Venafi platform will be restricted by the named
// zone policy.
// This field is required.
func (o IssuerSpecVenafiPatchPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiPatch) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTpp struct {
	// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
	// chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP.
	// If undefined, the certificate bundle in the cert-manager controller container
	// is used to validate the chain.
	CaBundle          *string                               `pulumi:"caBundle"`
	CaBundleSecretRef *IssuerSpecVenafiTppCaBundleSecretRef `pulumi:"caBundleSecretRef"`
	CredentialsRef    *IssuerSpecVenafiTppCredentialsRef    `pulumi:"credentialsRef"`
	// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance,
	// for example: "https://tpp.example.com/vedsdk".
	Url *string `pulumi:"url"`
}

// IssuerSpecVenafiTppInput is an input type that accepts IssuerSpecVenafiTppArgs and IssuerSpecVenafiTppOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppInput` via:
//
//	IssuerSpecVenafiTppArgs{...}
type IssuerSpecVenafiTppInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppOutput() IssuerSpecVenafiTppOutput
	ToIssuerSpecVenafiTppOutputWithContext(context.Context) IssuerSpecVenafiTppOutput
}

// TPP specifies Trust Protection Platform configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTppArgs struct {
	// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
	// chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP.
	// If undefined, the certificate bundle in the cert-manager controller container
	// is used to validate the chain.
	CaBundle          pulumi.StringPtrInput                        `pulumi:"caBundle"`
	CaBundleSecretRef IssuerSpecVenafiTppCaBundleSecretRefPtrInput `pulumi:"caBundleSecretRef"`
	CredentialsRef    IssuerSpecVenafiTppCredentialsRefPtrInput    `pulumi:"credentialsRef"`
	// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance,
	// for example: "https://tpp.example.com/vedsdk".
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (IssuerSpecVenafiTppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTpp)(nil)).Elem()
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppOutput() IssuerSpecVenafiTppOutput {
	return i.ToIssuerSpecVenafiTppOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppOutputWithContext(ctx context.Context) IssuerSpecVenafiTppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppOutput)
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return i.ToIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppOutput).ToIssuerSpecVenafiTppPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiTppPtrInput is an input type that accepts IssuerSpecVenafiTppArgs, IssuerSpecVenafiTppPtr and IssuerSpecVenafiTppPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppPtrInput` via:
//
//	        IssuerSpecVenafiTppArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiTppPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput
	ToIssuerSpecVenafiTppPtrOutputWithContext(context.Context) IssuerSpecVenafiTppPtrOutput
}

type issuerSpecVenafiTppPtrType IssuerSpecVenafiTppArgs

func IssuerSpecVenafiTppPtr(v *IssuerSpecVenafiTppArgs) IssuerSpecVenafiTppPtrInput {
	return (*issuerSpecVenafiTppPtrType)(v)
}

func (*issuerSpecVenafiTppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTpp)(nil)).Elem()
}

func (i *issuerSpecVenafiTppPtrType) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return i.ToIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiTppPtrType) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTppOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTpp)(nil)).Elem()
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppOutput() IssuerSpecVenafiTppOutput {
	return o
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppOutputWithContext(ctx context.Context) IssuerSpecVenafiTppOutput {
	return o
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return o.ToIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiTpp) *IssuerSpecVenafiTpp {
		return &v
	}).(IssuerSpecVenafiTppPtrOutput)
}

// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
// chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP.
// If undefined, the certificate bundle in the cert-manager controller container
// is used to validate the chain.
func (o IssuerSpecVenafiTppOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTpp) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVenafiTppOutput) CaBundleSecretRef() IssuerSpecVenafiTppCaBundleSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTpp) *IssuerSpecVenafiTppCaBundleSecretRef { return v.CaBundleSecretRef }).(IssuerSpecVenafiTppCaBundleSecretRefPtrOutput)
}

func (o IssuerSpecVenafiTppOutput) CredentialsRef() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTpp) *IssuerSpecVenafiTppCredentialsRef { return v.CredentialsRef }).(IssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance,
// for example: "https://tpp.example.com/vedsdk".
func (o IssuerSpecVenafiTppOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTpp) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiTppPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTpp)(nil)).Elem()
}

func (o IssuerSpecVenafiTppPtrOutput) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppPtrOutput) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppPtrOutput) Elem() IssuerSpecVenafiTppOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTpp) IssuerSpecVenafiTpp {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiTpp
		return ret
	}).(IssuerSpecVenafiTppOutput)
}

// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
// chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP.
// If undefined, the certificate bundle in the cert-manager controller container
// is used to validate the chain.
func (o IssuerSpecVenafiTppPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTpp) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVenafiTppPtrOutput) CaBundleSecretRef() IssuerSpecVenafiTppCaBundleSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTpp) *IssuerSpecVenafiTppCaBundleSecretRef {
		if v == nil {
			return nil
		}
		return v.CaBundleSecretRef
	}).(IssuerSpecVenafiTppCaBundleSecretRefPtrOutput)
}

func (o IssuerSpecVenafiTppPtrOutput) CredentialsRef() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTpp) *IssuerSpecVenafiTppCredentialsRef {
		if v == nil {
			return nil
		}
		return v.CredentialsRef
	}).(IssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance,
// for example: "https://tpp.example.com/vedsdk".
func (o IssuerSpecVenafiTppPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTpp) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret containing a base64-encoded bundle of PEM CAs
// which will be used to validate the certificate chain presented by the TPP server.
// Only used if using HTTPS; ignored for HTTP. Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef is defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
type IssuerSpecVenafiTppCaBundleSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVenafiTppCaBundleSecretRefInput is an input type that accepts IssuerSpecVenafiTppCaBundleSecretRefArgs and IssuerSpecVenafiTppCaBundleSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppCaBundleSecretRefInput` via:
//
//	IssuerSpecVenafiTppCaBundleSecretRefArgs{...}
type IssuerSpecVenafiTppCaBundleSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppCaBundleSecretRefOutput() IssuerSpecVenafiTppCaBundleSecretRefOutput
	ToIssuerSpecVenafiTppCaBundleSecretRefOutputWithContext(context.Context) IssuerSpecVenafiTppCaBundleSecretRefOutput
}

// Reference to a Secret containing a base64-encoded bundle of PEM CAs
// which will be used to validate the certificate chain presented by the TPP server.
// Only used if using HTTPS; ignored for HTTP. Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef is defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
type IssuerSpecVenafiTppCaBundleSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVenafiTppCaBundleSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppCaBundleSecretRef)(nil)).Elem()
}

func (i IssuerSpecVenafiTppCaBundleSecretRefArgs) ToIssuerSpecVenafiTppCaBundleSecretRefOutput() IssuerSpecVenafiTppCaBundleSecretRefOutput {
	return i.ToIssuerSpecVenafiTppCaBundleSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppCaBundleSecretRefArgs) ToIssuerSpecVenafiTppCaBundleSecretRefOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCaBundleSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCaBundleSecretRefOutput)
}

func (i IssuerSpecVenafiTppCaBundleSecretRefArgs) ToIssuerSpecVenafiTppCaBundleSecretRefPtrOutput() IssuerSpecVenafiTppCaBundleSecretRefPtrOutput {
	return i.ToIssuerSpecVenafiTppCaBundleSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppCaBundleSecretRefArgs) ToIssuerSpecVenafiTppCaBundleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCaBundleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCaBundleSecretRefOutput).ToIssuerSpecVenafiTppCaBundleSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiTppCaBundleSecretRefPtrInput is an input type that accepts IssuerSpecVenafiTppCaBundleSecretRefArgs, IssuerSpecVenafiTppCaBundleSecretRefPtr and IssuerSpecVenafiTppCaBundleSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppCaBundleSecretRefPtrInput` via:
//
//	        IssuerSpecVenafiTppCaBundleSecretRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiTppCaBundleSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppCaBundleSecretRefPtrOutput() IssuerSpecVenafiTppCaBundleSecretRefPtrOutput
	ToIssuerSpecVenafiTppCaBundleSecretRefPtrOutputWithContext(context.Context) IssuerSpecVenafiTppCaBundleSecretRefPtrOutput
}

type issuerSpecVenafiTppCaBundleSecretRefPtrType IssuerSpecVenafiTppCaBundleSecretRefArgs

func IssuerSpecVenafiTppCaBundleSecretRefPtr(v *IssuerSpecVenafiTppCaBundleSecretRefArgs) IssuerSpecVenafiTppCaBundleSecretRefPtrInput {
	return (*issuerSpecVenafiTppCaBundleSecretRefPtrType)(v)
}

func (*issuerSpecVenafiTppCaBundleSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppCaBundleSecretRef)(nil)).Elem()
}

func (i *issuerSpecVenafiTppCaBundleSecretRefPtrType) ToIssuerSpecVenafiTppCaBundleSecretRefPtrOutput() IssuerSpecVenafiTppCaBundleSecretRefPtrOutput {
	return i.ToIssuerSpecVenafiTppCaBundleSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiTppCaBundleSecretRefPtrType) ToIssuerSpecVenafiTppCaBundleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCaBundleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCaBundleSecretRefPtrOutput)
}

// Reference to a Secret containing a base64-encoded bundle of PEM CAs
// which will be used to validate the certificate chain presented by the TPP server.
// Only used if using HTTPS; ignored for HTTP. Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef is defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
type IssuerSpecVenafiTppCaBundleSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppCaBundleSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppCaBundleSecretRef)(nil)).Elem()
}

func (o IssuerSpecVenafiTppCaBundleSecretRefOutput) ToIssuerSpecVenafiTppCaBundleSecretRefOutput() IssuerSpecVenafiTppCaBundleSecretRefOutput {
	return o
}

func (o IssuerSpecVenafiTppCaBundleSecretRefOutput) ToIssuerSpecVenafiTppCaBundleSecretRefOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCaBundleSecretRefOutput {
	return o
}

func (o IssuerSpecVenafiTppCaBundleSecretRefOutput) ToIssuerSpecVenafiTppCaBundleSecretRefPtrOutput() IssuerSpecVenafiTppCaBundleSecretRefPtrOutput {
	return o.ToIssuerSpecVenafiTppCaBundleSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiTppCaBundleSecretRefOutput) ToIssuerSpecVenafiTppCaBundleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCaBundleSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiTppCaBundleSecretRef) *IssuerSpecVenafiTppCaBundleSecretRef {
		return &v
	}).(IssuerSpecVenafiTppCaBundleSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVenafiTppCaBundleSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTppCaBundleSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiTppCaBundleSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTppCaBundleSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiTppCaBundleSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppCaBundleSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppCaBundleSecretRef)(nil)).Elem()
}

func (o IssuerSpecVenafiTppCaBundleSecretRefPtrOutput) ToIssuerSpecVenafiTppCaBundleSecretRefPtrOutput() IssuerSpecVenafiTppCaBundleSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppCaBundleSecretRefPtrOutput) ToIssuerSpecVenafiTppCaBundleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCaBundleSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppCaBundleSecretRefPtrOutput) Elem() IssuerSpecVenafiTppCaBundleSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppCaBundleSecretRef) IssuerSpecVenafiTppCaBundleSecretRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiTppCaBundleSecretRef
		return ret
	}).(IssuerSpecVenafiTppCaBundleSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVenafiTppCaBundleSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppCaBundleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiTppCaBundleSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppCaBundleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret containing a base64-encoded bundle of PEM CAs
// which will be used to validate the certificate chain presented by the TPP server.
// Only used if using HTTPS; ignored for HTTP. Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef is defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
type IssuerSpecVenafiTppCaBundleSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVenafiTppCaBundleSecretRefPatchInput is an input type that accepts IssuerSpecVenafiTppCaBundleSecretRefPatchArgs and IssuerSpecVenafiTppCaBundleSecretRefPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppCaBundleSecretRefPatchInput` via:
//
//	IssuerSpecVenafiTppCaBundleSecretRefPatchArgs{...}
type IssuerSpecVenafiTppCaBundleSecretRefPatchInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppCaBundleSecretRefPatchOutput() IssuerSpecVenafiTppCaBundleSecretRefPatchOutput
	ToIssuerSpecVenafiTppCaBundleSecretRefPatchOutputWithContext(context.Context) IssuerSpecVenafiTppCaBundleSecretRefPatchOutput
}

// Reference to a Secret containing a base64-encoded bundle of PEM CAs
// which will be used to validate the certificate chain presented by the TPP server.
// Only used if using HTTPS; ignored for HTTP. Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef is defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
type IssuerSpecVenafiTppCaBundleSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVenafiTppCaBundleSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppCaBundleSecretRefPatch)(nil)).Elem()
}

func (i IssuerSpecVenafiTppCaBundleSecretRefPatchArgs) ToIssuerSpecVenafiTppCaBundleSecretRefPatchOutput() IssuerSpecVenafiTppCaBundleSecretRefPatchOutput {
	return i.ToIssuerSpecVenafiTppCaBundleSecretRefPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppCaBundleSecretRefPatchArgs) ToIssuerSpecVenafiTppCaBundleSecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCaBundleSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCaBundleSecretRefPatchOutput)
}

func (i IssuerSpecVenafiTppCaBundleSecretRefPatchArgs) ToIssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput() IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput {
	return i.ToIssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppCaBundleSecretRefPatchArgs) ToIssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCaBundleSecretRefPatchOutput).ToIssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiTppCaBundleSecretRefPatchPtrInput is an input type that accepts IssuerSpecVenafiTppCaBundleSecretRefPatchArgs, IssuerSpecVenafiTppCaBundleSecretRefPatchPtr and IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppCaBundleSecretRefPatchPtrInput` via:
//
//	        IssuerSpecVenafiTppCaBundleSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiTppCaBundleSecretRefPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput() IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput
	ToIssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutputWithContext(context.Context) IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput
}

type issuerSpecVenafiTppCaBundleSecretRefPatchPtrType IssuerSpecVenafiTppCaBundleSecretRefPatchArgs

func IssuerSpecVenafiTppCaBundleSecretRefPatchPtr(v *IssuerSpecVenafiTppCaBundleSecretRefPatchArgs) IssuerSpecVenafiTppCaBundleSecretRefPatchPtrInput {
	return (*issuerSpecVenafiTppCaBundleSecretRefPatchPtrType)(v)
}

func (*issuerSpecVenafiTppCaBundleSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppCaBundleSecretRefPatch)(nil)).Elem()
}

func (i *issuerSpecVenafiTppCaBundleSecretRefPatchPtrType) ToIssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput() IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput {
	return i.ToIssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiTppCaBundleSecretRefPatchPtrType) ToIssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput)
}

// Reference to a Secret containing a base64-encoded bundle of PEM CAs
// which will be used to validate the certificate chain presented by the TPP server.
// Only used if using HTTPS; ignored for HTTP. Mutually exclusive with CABundle.
// If neither CABundle nor CABundleSecretRef is defined, the certificate bundle in
// the cert-manager controller container is used to validate the TLS connection.
type IssuerSpecVenafiTppCaBundleSecretRefPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppCaBundleSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppCaBundleSecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVenafiTppCaBundleSecretRefPatchOutput) ToIssuerSpecVenafiTppCaBundleSecretRefPatchOutput() IssuerSpecVenafiTppCaBundleSecretRefPatchOutput {
	return o
}

func (o IssuerSpecVenafiTppCaBundleSecretRefPatchOutput) ToIssuerSpecVenafiTppCaBundleSecretRefPatchOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCaBundleSecretRefPatchOutput {
	return o
}

func (o IssuerSpecVenafiTppCaBundleSecretRefPatchOutput) ToIssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput() IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput {
	return o.ToIssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiTppCaBundleSecretRefPatchOutput) ToIssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiTppCaBundleSecretRefPatch) *IssuerSpecVenafiTppCaBundleSecretRefPatch {
		return &v
	}).(IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVenafiTppCaBundleSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTppCaBundleSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiTppCaBundleSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTppCaBundleSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppCaBundleSecretRefPatch)(nil)).Elem()
}

func (o IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput) ToIssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput() IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput) ToIssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput) Elem() IssuerSpecVenafiTppCaBundleSecretRefPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppCaBundleSecretRefPatch) IssuerSpecVenafiTppCaBundleSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiTppCaBundleSecretRefPatch
		return ret
	}).(IssuerSpecVenafiTppCaBundleSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used.
// Some instances of this field may be defaulted, in others it may be
// required.
func (o IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppCaBundleSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppCaBundleSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the Venafi TPP API credentials.
// The secret must contain the key 'access-token' for the Access Token Authentication,
// or two keys, 'username' and 'password' for the API Keys Authentication.
type IssuerSpecVenafiTppCredentialsRef struct {
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVenafiTppCredentialsRefInput is an input type that accepts IssuerSpecVenafiTppCredentialsRefArgs and IssuerSpecVenafiTppCredentialsRefOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppCredentialsRefInput` via:
//
//	IssuerSpecVenafiTppCredentialsRefArgs{...}
type IssuerSpecVenafiTppCredentialsRefInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppCredentialsRefOutput() IssuerSpecVenafiTppCredentialsRefOutput
	ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(context.Context) IssuerSpecVenafiTppCredentialsRefOutput
}

// CredentialsRef is a reference to a Secret containing the Venafi TPP API credentials.
// The secret must contain the key 'access-token' for the Access Token Authentication,
// or two keys, 'username' and 'password' for the API Keys Authentication.
type IssuerSpecVenafiTppCredentialsRefArgs struct {
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVenafiTppCredentialsRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefOutput() IssuerSpecVenafiTppCredentialsRefOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefOutput)
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefOutput).ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiTppCredentialsRefPtrInput is an input type that accepts IssuerSpecVenafiTppCredentialsRefArgs, IssuerSpecVenafiTppCredentialsRefPtr and IssuerSpecVenafiTppCredentialsRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppCredentialsRefPtrInput` via:
//
//	        IssuerSpecVenafiTppCredentialsRefArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiTppCredentialsRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput
	ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput
}

type issuerSpecVenafiTppCredentialsRefPtrType IssuerSpecVenafiTppCredentialsRefArgs

func IssuerSpecVenafiTppCredentialsRefPtr(v *IssuerSpecVenafiTppCredentialsRefArgs) IssuerSpecVenafiTppCredentialsRefPtrInput {
	return (*issuerSpecVenafiTppCredentialsRefPtrType)(v)
}

func (*issuerSpecVenafiTppCredentialsRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (i *issuerSpecVenafiTppCredentialsRefPtrType) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiTppCredentialsRefPtrType) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the Venafi TPP API credentials.
// The secret must contain the key 'access-token' for the Access Token Authentication,
// or two keys, 'username' and 'password' for the API Keys Authentication.
type IssuerSpecVenafiTppCredentialsRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppCredentialsRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefOutput() IssuerSpecVenafiTppCredentialsRefOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiTppCredentialsRef) *IssuerSpecVenafiTppCredentialsRef {
		return &v
	}).(IssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiTppCredentialsRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTppCredentialsRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiTppCredentialsRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppCredentialsRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) Elem() IssuerSpecVenafiTppCredentialsRefOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppCredentialsRef) IssuerSpecVenafiTppCredentialsRef {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiTppCredentialsRef
		return ret
	}).(IssuerSpecVenafiTppCredentialsRefOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppCredentialsRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the Venafi TPP API credentials.
// The secret must contain the key 'access-token' for the Access Token Authentication,
// or two keys, 'username' and 'password' for the API Keys Authentication.
type IssuerSpecVenafiTppCredentialsRefPatch struct {
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// IssuerSpecVenafiTppCredentialsRefPatchInput is an input type that accepts IssuerSpecVenafiTppCredentialsRefPatchArgs and IssuerSpecVenafiTppCredentialsRefPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppCredentialsRefPatchInput` via:
//
//	IssuerSpecVenafiTppCredentialsRefPatchArgs{...}
type IssuerSpecVenafiTppCredentialsRefPatchInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppCredentialsRefPatchOutput() IssuerSpecVenafiTppCredentialsRefPatchOutput
	ToIssuerSpecVenafiTppCredentialsRefPatchOutputWithContext(context.Context) IssuerSpecVenafiTppCredentialsRefPatchOutput
}

// CredentialsRef is a reference to a Secret containing the Venafi TPP API credentials.
// The secret must contain the key 'access-token' for the Access Token Authentication,
// or two keys, 'username' and 'password' for the API Keys Authentication.
type IssuerSpecVenafiTppCredentialsRefPatchArgs struct {
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IssuerSpecVenafiTppCredentialsRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRefPatch)(nil)).Elem()
}

func (i IssuerSpecVenafiTppCredentialsRefPatchArgs) ToIssuerSpecVenafiTppCredentialsRefPatchOutput() IssuerSpecVenafiTppCredentialsRefPatchOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppCredentialsRefPatchArgs) ToIssuerSpecVenafiTppCredentialsRefPatchOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefPatchOutput)
}

func (i IssuerSpecVenafiTppCredentialsRefPatchArgs) ToIssuerSpecVenafiTppCredentialsRefPatchPtrOutput() IssuerSpecVenafiTppCredentialsRefPatchPtrOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppCredentialsRefPatchArgs) ToIssuerSpecVenafiTppCredentialsRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefPatchOutput).ToIssuerSpecVenafiTppCredentialsRefPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiTppCredentialsRefPatchPtrInput is an input type that accepts IssuerSpecVenafiTppCredentialsRefPatchArgs, IssuerSpecVenafiTppCredentialsRefPatchPtr and IssuerSpecVenafiTppCredentialsRefPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppCredentialsRefPatchPtrInput` via:
//
//	        IssuerSpecVenafiTppCredentialsRefPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiTppCredentialsRefPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppCredentialsRefPatchPtrOutput() IssuerSpecVenafiTppCredentialsRefPatchPtrOutput
	ToIssuerSpecVenafiTppCredentialsRefPatchPtrOutputWithContext(context.Context) IssuerSpecVenafiTppCredentialsRefPatchPtrOutput
}

type issuerSpecVenafiTppCredentialsRefPatchPtrType IssuerSpecVenafiTppCredentialsRefPatchArgs

func IssuerSpecVenafiTppCredentialsRefPatchPtr(v *IssuerSpecVenafiTppCredentialsRefPatchArgs) IssuerSpecVenafiTppCredentialsRefPatchPtrInput {
	return (*issuerSpecVenafiTppCredentialsRefPatchPtrType)(v)
}

func (*issuerSpecVenafiTppCredentialsRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppCredentialsRefPatch)(nil)).Elem()
}

func (i *issuerSpecVenafiTppCredentialsRefPatchPtrType) ToIssuerSpecVenafiTppCredentialsRefPatchPtrOutput() IssuerSpecVenafiTppCredentialsRefPatchPtrOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiTppCredentialsRefPatchPtrType) ToIssuerSpecVenafiTppCredentialsRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefPatchPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the Venafi TPP API credentials.
// The secret must contain the key 'access-token' for the Access Token Authentication,
// or two keys, 'username' and 'password' for the API Keys Authentication.
type IssuerSpecVenafiTppCredentialsRefPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppCredentialsRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRefPatch)(nil)).Elem()
}

func (o IssuerSpecVenafiTppCredentialsRefPatchOutput) ToIssuerSpecVenafiTppCredentialsRefPatchOutput() IssuerSpecVenafiTppCredentialsRefPatchOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefPatchOutput) ToIssuerSpecVenafiTppCredentialsRefPatchOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPatchOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefPatchOutput) ToIssuerSpecVenafiTppCredentialsRefPatchPtrOutput() IssuerSpecVenafiTppCredentialsRefPatchPtrOutput {
	return o.ToIssuerSpecVenafiTppCredentialsRefPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiTppCredentialsRefPatchOutput) ToIssuerSpecVenafiTppCredentialsRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiTppCredentialsRefPatch) *IssuerSpecVenafiTppCredentialsRefPatch {
		return &v
	}).(IssuerSpecVenafiTppCredentialsRefPatchPtrOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiTppCredentialsRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTppCredentialsRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiTppCredentialsRefPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppCredentialsRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppCredentialsRefPatch)(nil)).Elem()
}

func (o IssuerSpecVenafiTppCredentialsRefPatchPtrOutput) ToIssuerSpecVenafiTppCredentialsRefPatchPtrOutput() IssuerSpecVenafiTppCredentialsRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefPatchPtrOutput) ToIssuerSpecVenafiTppCredentialsRefPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPatchPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefPatchPtrOutput) Elem() IssuerSpecVenafiTppCredentialsRefPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppCredentialsRefPatch) IssuerSpecVenafiTppCredentialsRefPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiTppCredentialsRefPatch
		return ret
	}).(IssuerSpecVenafiTppCredentialsRefPatchOutput)
}

// Name of the resource being referred to.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiTppCredentialsRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppCredentialsRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTppPatch struct {
	// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
	// chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP.
	// If undefined, the certificate bundle in the cert-manager controller container
	// is used to validate the chain.
	CaBundle          *string                                    `pulumi:"caBundle"`
	CaBundleSecretRef *IssuerSpecVenafiTppCaBundleSecretRefPatch `pulumi:"caBundleSecretRef"`
	CredentialsRef    *IssuerSpecVenafiTppCredentialsRefPatch    `pulumi:"credentialsRef"`
	// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance,
	// for example: "https://tpp.example.com/vedsdk".
	Url *string `pulumi:"url"`
}

// IssuerSpecVenafiTppPatchInput is an input type that accepts IssuerSpecVenafiTppPatchArgs and IssuerSpecVenafiTppPatchOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppPatchInput` via:
//
//	IssuerSpecVenafiTppPatchArgs{...}
type IssuerSpecVenafiTppPatchInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppPatchOutput() IssuerSpecVenafiTppPatchOutput
	ToIssuerSpecVenafiTppPatchOutputWithContext(context.Context) IssuerSpecVenafiTppPatchOutput
}

// TPP specifies Trust Protection Platform configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTppPatchArgs struct {
	// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
	// chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP.
	// If undefined, the certificate bundle in the cert-manager controller container
	// is used to validate the chain.
	CaBundle          pulumi.StringPtrInput                             `pulumi:"caBundle"`
	CaBundleSecretRef IssuerSpecVenafiTppCaBundleSecretRefPatchPtrInput `pulumi:"caBundleSecretRef"`
	CredentialsRef    IssuerSpecVenafiTppCredentialsRefPatchPtrInput    `pulumi:"credentialsRef"`
	// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance,
	// for example: "https://tpp.example.com/vedsdk".
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (IssuerSpecVenafiTppPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppPatch)(nil)).Elem()
}

func (i IssuerSpecVenafiTppPatchArgs) ToIssuerSpecVenafiTppPatchOutput() IssuerSpecVenafiTppPatchOutput {
	return i.ToIssuerSpecVenafiTppPatchOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppPatchArgs) ToIssuerSpecVenafiTppPatchOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppPatchOutput)
}

func (i IssuerSpecVenafiTppPatchArgs) ToIssuerSpecVenafiTppPatchPtrOutput() IssuerSpecVenafiTppPatchPtrOutput {
	return i.ToIssuerSpecVenafiTppPatchPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppPatchArgs) ToIssuerSpecVenafiTppPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppPatchOutput).ToIssuerSpecVenafiTppPatchPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiTppPatchPtrInput is an input type that accepts IssuerSpecVenafiTppPatchArgs, IssuerSpecVenafiTppPatchPtr and IssuerSpecVenafiTppPatchPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppPatchPtrInput` via:
//
//	        IssuerSpecVenafiTppPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerSpecVenafiTppPatchPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppPatchPtrOutput() IssuerSpecVenafiTppPatchPtrOutput
	ToIssuerSpecVenafiTppPatchPtrOutputWithContext(context.Context) IssuerSpecVenafiTppPatchPtrOutput
}

type issuerSpecVenafiTppPatchPtrType IssuerSpecVenafiTppPatchArgs

func IssuerSpecVenafiTppPatchPtr(v *IssuerSpecVenafiTppPatchArgs) IssuerSpecVenafiTppPatchPtrInput {
	return (*issuerSpecVenafiTppPatchPtrType)(v)
}

func (*issuerSpecVenafiTppPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppPatch)(nil)).Elem()
}

func (i *issuerSpecVenafiTppPatchPtrType) ToIssuerSpecVenafiTppPatchPtrOutput() IssuerSpecVenafiTppPatchPtrOutput {
	return i.ToIssuerSpecVenafiTppPatchPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiTppPatchPtrType) ToIssuerSpecVenafiTppPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppPatchPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings.
// Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTppPatchOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppPatch)(nil)).Elem()
}

func (o IssuerSpecVenafiTppPatchOutput) ToIssuerSpecVenafiTppPatchOutput() IssuerSpecVenafiTppPatchOutput {
	return o
}

func (o IssuerSpecVenafiTppPatchOutput) ToIssuerSpecVenafiTppPatchOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPatchOutput {
	return o
}

func (o IssuerSpecVenafiTppPatchOutput) ToIssuerSpecVenafiTppPatchPtrOutput() IssuerSpecVenafiTppPatchPtrOutput {
	return o.ToIssuerSpecVenafiTppPatchPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiTppPatchOutput) ToIssuerSpecVenafiTppPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerSpecVenafiTppPatch) *IssuerSpecVenafiTppPatch {
		return &v
	}).(IssuerSpecVenafiTppPatchPtrOutput)
}

// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
// chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP.
// If undefined, the certificate bundle in the cert-manager controller container
// is used to validate the chain.
func (o IssuerSpecVenafiTppPatchOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTppPatch) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVenafiTppPatchOutput) CaBundleSecretRef() IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTppPatch) *IssuerSpecVenafiTppCaBundleSecretRefPatch {
		return v.CaBundleSecretRef
	}).(IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput)
}

func (o IssuerSpecVenafiTppPatchOutput) CredentialsRef() IssuerSpecVenafiTppCredentialsRefPatchPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTppPatch) *IssuerSpecVenafiTppCredentialsRefPatch { return v.CredentialsRef }).(IssuerSpecVenafiTppCredentialsRefPatchPtrOutput)
}

// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance,
// for example: "https://tpp.example.com/vedsdk".
func (o IssuerSpecVenafiTppPatchOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTppPatch) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiTppPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppPatch)(nil)).Elem()
}

func (o IssuerSpecVenafiTppPatchPtrOutput) ToIssuerSpecVenafiTppPatchPtrOutput() IssuerSpecVenafiTppPatchPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppPatchPtrOutput) ToIssuerSpecVenafiTppPatchPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPatchPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppPatchPtrOutput) Elem() IssuerSpecVenafiTppPatchOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppPatch) IssuerSpecVenafiTppPatch {
		if v != nil {
			return *v
		}
		var ret IssuerSpecVenafiTppPatch
		return ret
	}).(IssuerSpecVenafiTppPatchOutput)
}

// Base64-encoded bundle of PEM CAs which will be used to validate the certificate
// chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP.
// If undefined, the certificate bundle in the cert-manager controller container
// is used to validate the chain.
func (o IssuerSpecVenafiTppPatchPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecVenafiTppPatchPtrOutput) CaBundleSecretRef() IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppPatch) *IssuerSpecVenafiTppCaBundleSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.CaBundleSecretRef
	}).(IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput)
}

func (o IssuerSpecVenafiTppPatchPtrOutput) CredentialsRef() IssuerSpecVenafiTppCredentialsRefPatchPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppPatch) *IssuerSpecVenafiTppCredentialsRefPatch {
		if v == nil {
			return nil
		}
		return v.CredentialsRef
	}).(IssuerSpecVenafiTppCredentialsRefPatchPtrOutput)
}

// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance,
// for example: "https://tpp.example.com/vedsdk".
func (o IssuerSpecVenafiTppPatchPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppPatch) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatus struct {
	Acme *IssuerStatusAcme `pulumi:"acme"`
	// List of status conditions to indicate the status of a CertificateRequest.
	// Known condition types are `Ready`.
	Conditions []IssuerStatusConditions `pulumi:"conditions"`
}

// IssuerStatusInput is an input type that accepts IssuerStatusArgs and IssuerStatusOutput values.
// You can construct a concrete instance of `IssuerStatusInput` via:
//
//	IssuerStatusArgs{...}
type IssuerStatusInput interface {
	pulumi.Input

	ToIssuerStatusOutput() IssuerStatusOutput
	ToIssuerStatusOutputWithContext(context.Context) IssuerStatusOutput
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatusArgs struct {
	Acme IssuerStatusAcmePtrInput `pulumi:"acme"`
	// List of status conditions to indicate the status of a CertificateRequest.
	// Known condition types are `Ready`.
	Conditions IssuerStatusConditionsArrayInput `pulumi:"conditions"`
}

func (IssuerStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatus)(nil)).Elem()
}

func (i IssuerStatusArgs) ToIssuerStatusOutput() IssuerStatusOutput {
	return i.ToIssuerStatusOutputWithContext(context.Background())
}

func (i IssuerStatusArgs) ToIssuerStatusOutputWithContext(ctx context.Context) IssuerStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusOutput)
}

func (i IssuerStatusArgs) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return i.ToIssuerStatusPtrOutputWithContext(context.Background())
}

func (i IssuerStatusArgs) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusOutput).ToIssuerStatusPtrOutputWithContext(ctx)
}

// IssuerStatusPtrInput is an input type that accepts IssuerStatusArgs, IssuerStatusPtr and IssuerStatusPtrOutput values.
// You can construct a concrete instance of `IssuerStatusPtrInput` via:
//
//	        IssuerStatusArgs{...}
//
//	or:
//
//	        nil
type IssuerStatusPtrInput interface {
	pulumi.Input

	ToIssuerStatusPtrOutput() IssuerStatusPtrOutput
	ToIssuerStatusPtrOutputWithContext(context.Context) IssuerStatusPtrOutput
}

type issuerStatusPtrType IssuerStatusArgs

func IssuerStatusPtr(v *IssuerStatusArgs) IssuerStatusPtrInput {
	return (*issuerStatusPtrType)(v)
}

func (*issuerStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatus)(nil)).Elem()
}

func (i *issuerStatusPtrType) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return i.ToIssuerStatusPtrOutputWithContext(context.Background())
}

func (i *issuerStatusPtrType) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusPtrOutput)
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatusOutput struct{ *pulumi.OutputState }

func (IssuerStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatus)(nil)).Elem()
}

func (o IssuerStatusOutput) ToIssuerStatusOutput() IssuerStatusOutput {
	return o
}

func (o IssuerStatusOutput) ToIssuerStatusOutputWithContext(ctx context.Context) IssuerStatusOutput {
	return o
}

func (o IssuerStatusOutput) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return o.ToIssuerStatusPtrOutputWithContext(context.Background())
}

func (o IssuerStatusOutput) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerStatus) *IssuerStatus {
		return &v
	}).(IssuerStatusPtrOutput)
}

func (o IssuerStatusOutput) Acme() IssuerStatusAcmePtrOutput {
	return o.ApplyT(func(v IssuerStatus) *IssuerStatusAcme { return v.Acme }).(IssuerStatusAcmePtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest.
// Known condition types are `Ready`.
func (o IssuerStatusOutput) Conditions() IssuerStatusConditionsArrayOutput {
	return o.ApplyT(func(v IssuerStatus) []IssuerStatusConditions { return v.Conditions }).(IssuerStatusConditionsArrayOutput)
}

type IssuerStatusPtrOutput struct{ *pulumi.OutputState }

func (IssuerStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatus)(nil)).Elem()
}

func (o IssuerStatusPtrOutput) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return o
}

func (o IssuerStatusPtrOutput) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return o
}

func (o IssuerStatusPtrOutput) Elem() IssuerStatusOutput {
	return o.ApplyT(func(v *IssuerStatus) IssuerStatus {
		if v != nil {
			return *v
		}
		var ret IssuerStatus
		return ret
	}).(IssuerStatusOutput)
}

func (o IssuerStatusPtrOutput) Acme() IssuerStatusAcmePtrOutput {
	return o.ApplyT(func(v *IssuerStatus) *IssuerStatusAcme {
		if v == nil {
			return nil
		}
		return v.Acme
	}).(IssuerStatusAcmePtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest.
// Known condition types are `Ready`.
func (o IssuerStatusPtrOutput) Conditions() IssuerStatusConditionsArrayOutput {
	return o.ApplyT(func(v *IssuerStatus) []IssuerStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(IssuerStatusConditionsArrayOutput)
}

// ACME specific status options.
// This field should only be set if the Issuer is configured to use an ACME
// server to issue certificates.
type IssuerStatusAcme struct {
	// LastPrivateKeyHash is a hash of the private key associated with the latest
	// registered ACME account, in order to track changes made to registered account
	// associated with the Issuer
	LastPrivateKeyHash *string `pulumi:"lastPrivateKeyHash"`
	// LastRegisteredEmail is the email associated with the latest registered
	// ACME account, in order to track changes made to registered account
	// associated with the  Issuer
	LastRegisteredEmail *string `pulumi:"lastRegisteredEmail"`
	// URI is the unique account identifier, which can also be used to retrieve
	// account details from the CA
	Uri *string `pulumi:"uri"`
}

// IssuerStatusAcmeInput is an input type that accepts IssuerStatusAcmeArgs and IssuerStatusAcmeOutput values.
// You can construct a concrete instance of `IssuerStatusAcmeInput` via:
//
//	IssuerStatusAcmeArgs{...}
type IssuerStatusAcmeInput interface {
	pulumi.Input

	ToIssuerStatusAcmeOutput() IssuerStatusAcmeOutput
	ToIssuerStatusAcmeOutputWithContext(context.Context) IssuerStatusAcmeOutput
}

// ACME specific status options.
// This field should only be set if the Issuer is configured to use an ACME
// server to issue certificates.
type IssuerStatusAcmeArgs struct {
	// LastPrivateKeyHash is a hash of the private key associated with the latest
	// registered ACME account, in order to track changes made to registered account
	// associated with the Issuer
	LastPrivateKeyHash pulumi.StringPtrInput `pulumi:"lastPrivateKeyHash"`
	// LastRegisteredEmail is the email associated with the latest registered
	// ACME account, in order to track changes made to registered account
	// associated with the  Issuer
	LastRegisteredEmail pulumi.StringPtrInput `pulumi:"lastRegisteredEmail"`
	// URI is the unique account identifier, which can also be used to retrieve
	// account details from the CA
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (IssuerStatusAcmeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusAcme)(nil)).Elem()
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmeOutput() IssuerStatusAcmeOutput {
	return i.ToIssuerStatusAcmeOutputWithContext(context.Background())
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmeOutputWithContext(ctx context.Context) IssuerStatusAcmeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmeOutput)
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return i.ToIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmeOutput).ToIssuerStatusAcmePtrOutputWithContext(ctx)
}

// IssuerStatusAcmePtrInput is an input type that accepts IssuerStatusAcmeArgs, IssuerStatusAcmePtr and IssuerStatusAcmePtrOutput values.
// You can construct a concrete instance of `IssuerStatusAcmePtrInput` via:
//
//	        IssuerStatusAcmeArgs{...}
//
//	or:
//
//	        nil
type IssuerStatusAcmePtrInput interface {
	pulumi.Input

	ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput
	ToIssuerStatusAcmePtrOutputWithContext(context.Context) IssuerStatusAcmePtrOutput
}

type issuerStatusAcmePtrType IssuerStatusAcmeArgs

func IssuerStatusAcmePtr(v *IssuerStatusAcmeArgs) IssuerStatusAcmePtrInput {
	return (*issuerStatusAcmePtrType)(v)
}

func (*issuerStatusAcmePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatusAcme)(nil)).Elem()
}

func (i *issuerStatusAcmePtrType) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return i.ToIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (i *issuerStatusAcmePtrType) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmePtrOutput)
}

// ACME specific status options.
// This field should only be set if the Issuer is configured to use an ACME
// server to issue certificates.
type IssuerStatusAcmeOutput struct{ *pulumi.OutputState }

func (IssuerStatusAcmeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusAcme)(nil)).Elem()
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmeOutput() IssuerStatusAcmeOutput {
	return o
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmeOutputWithContext(ctx context.Context) IssuerStatusAcmeOutput {
	return o
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return o.ToIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerStatusAcme) *IssuerStatusAcme {
		return &v
	}).(IssuerStatusAcmePtrOutput)
}

// LastPrivateKeyHash is a hash of the private key associated with the latest
// registered ACME account, in order to track changes made to registered account
// associated with the Issuer
func (o IssuerStatusAcmeOutput) LastPrivateKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusAcme) *string { return v.LastPrivateKeyHash }).(pulumi.StringPtrOutput)
}

// LastRegisteredEmail is the email associated with the latest registered
// ACME account, in order to track changes made to registered account
// associated with the  Issuer
func (o IssuerStatusAcmeOutput) LastRegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusAcme) *string { return v.LastRegisteredEmail }).(pulumi.StringPtrOutput)
}

// URI is the unique account identifier, which can also be used to retrieve
// account details from the CA
func (o IssuerStatusAcmeOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusAcme) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type IssuerStatusAcmePtrOutput struct{ *pulumi.OutputState }

func (IssuerStatusAcmePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatusAcme)(nil)).Elem()
}

func (o IssuerStatusAcmePtrOutput) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return o
}

func (o IssuerStatusAcmePtrOutput) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return o
}

func (o IssuerStatusAcmePtrOutput) Elem() IssuerStatusAcmeOutput {
	return o.ApplyT(func(v *IssuerStatusAcme) IssuerStatusAcme {
		if v != nil {
			return *v
		}
		var ret IssuerStatusAcme
		return ret
	}).(IssuerStatusAcmeOutput)
}

// LastPrivateKeyHash is a hash of the private key associated with the latest
// registered ACME account, in order to track changes made to registered account
// associated with the Issuer
func (o IssuerStatusAcmePtrOutput) LastPrivateKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerStatusAcme) *string {
		if v == nil {
			return nil
		}
		return v.LastPrivateKeyHash
	}).(pulumi.StringPtrOutput)
}

// LastRegisteredEmail is the email associated with the latest registered
// ACME account, in order to track changes made to registered account
// associated with the  Issuer
func (o IssuerStatusAcmePtrOutput) LastRegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerStatusAcme) *string {
		if v == nil {
			return nil
		}
		return v.LastRegisteredEmail
	}).(pulumi.StringPtrOutput)
}

// URI is the unique account identifier, which can also be used to retrieve
// account details from the CA
func (o IssuerStatusAcmePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerStatusAcme) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// ACME specific status options.
// This field should only be set if the Issuer is configured to use an ACME
// server to issue certificates.
type IssuerStatusAcmePatch struct {
	// LastPrivateKeyHash is a hash of the private key associated with the latest
	// registered ACME account, in order to track changes made to registered account
	// associated with the Issuer
	LastPrivateKeyHash *string `pulumi:"lastPrivateKeyHash"`
	// LastRegisteredEmail is the email associated with the latest registered
	// ACME account, in order to track changes made to registered account
	// associated with the  Issuer
	LastRegisteredEmail *string `pulumi:"lastRegisteredEmail"`
	// URI is the unique account identifier, which can also be used to retrieve
	// account details from the CA
	Uri *string `pulumi:"uri"`
}

// IssuerStatusAcmePatchInput is an input type that accepts IssuerStatusAcmePatchArgs and IssuerStatusAcmePatchOutput values.
// You can construct a concrete instance of `IssuerStatusAcmePatchInput` via:
//
//	IssuerStatusAcmePatchArgs{...}
type IssuerStatusAcmePatchInput interface {
	pulumi.Input

	ToIssuerStatusAcmePatchOutput() IssuerStatusAcmePatchOutput
	ToIssuerStatusAcmePatchOutputWithContext(context.Context) IssuerStatusAcmePatchOutput
}

// ACME specific status options.
// This field should only be set if the Issuer is configured to use an ACME
// server to issue certificates.
type IssuerStatusAcmePatchArgs struct {
	// LastPrivateKeyHash is a hash of the private key associated with the latest
	// registered ACME account, in order to track changes made to registered account
	// associated with the Issuer
	LastPrivateKeyHash pulumi.StringPtrInput `pulumi:"lastPrivateKeyHash"`
	// LastRegisteredEmail is the email associated with the latest registered
	// ACME account, in order to track changes made to registered account
	// associated with the  Issuer
	LastRegisteredEmail pulumi.StringPtrInput `pulumi:"lastRegisteredEmail"`
	// URI is the unique account identifier, which can also be used to retrieve
	// account details from the CA
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (IssuerStatusAcmePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusAcmePatch)(nil)).Elem()
}

func (i IssuerStatusAcmePatchArgs) ToIssuerStatusAcmePatchOutput() IssuerStatusAcmePatchOutput {
	return i.ToIssuerStatusAcmePatchOutputWithContext(context.Background())
}

func (i IssuerStatusAcmePatchArgs) ToIssuerStatusAcmePatchOutputWithContext(ctx context.Context) IssuerStatusAcmePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmePatchOutput)
}

func (i IssuerStatusAcmePatchArgs) ToIssuerStatusAcmePatchPtrOutput() IssuerStatusAcmePatchPtrOutput {
	return i.ToIssuerStatusAcmePatchPtrOutputWithContext(context.Background())
}

func (i IssuerStatusAcmePatchArgs) ToIssuerStatusAcmePatchPtrOutputWithContext(ctx context.Context) IssuerStatusAcmePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmePatchOutput).ToIssuerStatusAcmePatchPtrOutputWithContext(ctx)
}

// IssuerStatusAcmePatchPtrInput is an input type that accepts IssuerStatusAcmePatchArgs, IssuerStatusAcmePatchPtr and IssuerStatusAcmePatchPtrOutput values.
// You can construct a concrete instance of `IssuerStatusAcmePatchPtrInput` via:
//
//	        IssuerStatusAcmePatchArgs{...}
//
//	or:
//
//	        nil
type IssuerStatusAcmePatchPtrInput interface {
	pulumi.Input

	ToIssuerStatusAcmePatchPtrOutput() IssuerStatusAcmePatchPtrOutput
	ToIssuerStatusAcmePatchPtrOutputWithContext(context.Context) IssuerStatusAcmePatchPtrOutput
}

type issuerStatusAcmePatchPtrType IssuerStatusAcmePatchArgs

func IssuerStatusAcmePatchPtr(v *IssuerStatusAcmePatchArgs) IssuerStatusAcmePatchPtrInput {
	return (*issuerStatusAcmePatchPtrType)(v)
}

func (*issuerStatusAcmePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatusAcmePatch)(nil)).Elem()
}

func (i *issuerStatusAcmePatchPtrType) ToIssuerStatusAcmePatchPtrOutput() IssuerStatusAcmePatchPtrOutput {
	return i.ToIssuerStatusAcmePatchPtrOutputWithContext(context.Background())
}

func (i *issuerStatusAcmePatchPtrType) ToIssuerStatusAcmePatchPtrOutputWithContext(ctx context.Context) IssuerStatusAcmePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmePatchPtrOutput)
}

// ACME specific status options.
// This field should only be set if the Issuer is configured to use an ACME
// server to issue certificates.
type IssuerStatusAcmePatchOutput struct{ *pulumi.OutputState }

func (IssuerStatusAcmePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusAcmePatch)(nil)).Elem()
}

func (o IssuerStatusAcmePatchOutput) ToIssuerStatusAcmePatchOutput() IssuerStatusAcmePatchOutput {
	return o
}

func (o IssuerStatusAcmePatchOutput) ToIssuerStatusAcmePatchOutputWithContext(ctx context.Context) IssuerStatusAcmePatchOutput {
	return o
}

func (o IssuerStatusAcmePatchOutput) ToIssuerStatusAcmePatchPtrOutput() IssuerStatusAcmePatchPtrOutput {
	return o.ToIssuerStatusAcmePatchPtrOutputWithContext(context.Background())
}

func (o IssuerStatusAcmePatchOutput) ToIssuerStatusAcmePatchPtrOutputWithContext(ctx context.Context) IssuerStatusAcmePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerStatusAcmePatch) *IssuerStatusAcmePatch {
		return &v
	}).(IssuerStatusAcmePatchPtrOutput)
}

// LastPrivateKeyHash is a hash of the private key associated with the latest
// registered ACME account, in order to track changes made to registered account
// associated with the Issuer
func (o IssuerStatusAcmePatchOutput) LastPrivateKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusAcmePatch) *string { return v.LastPrivateKeyHash }).(pulumi.StringPtrOutput)
}

// LastRegisteredEmail is the email associated with the latest registered
// ACME account, in order to track changes made to registered account
// associated with the  Issuer
func (o IssuerStatusAcmePatchOutput) LastRegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusAcmePatch) *string { return v.LastRegisteredEmail }).(pulumi.StringPtrOutput)
}

// URI is the unique account identifier, which can also be used to retrieve
// account details from the CA
func (o IssuerStatusAcmePatchOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusAcmePatch) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type IssuerStatusAcmePatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerStatusAcmePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatusAcmePatch)(nil)).Elem()
}

func (o IssuerStatusAcmePatchPtrOutput) ToIssuerStatusAcmePatchPtrOutput() IssuerStatusAcmePatchPtrOutput {
	return o
}

func (o IssuerStatusAcmePatchPtrOutput) ToIssuerStatusAcmePatchPtrOutputWithContext(ctx context.Context) IssuerStatusAcmePatchPtrOutput {
	return o
}

func (o IssuerStatusAcmePatchPtrOutput) Elem() IssuerStatusAcmePatchOutput {
	return o.ApplyT(func(v *IssuerStatusAcmePatch) IssuerStatusAcmePatch {
		if v != nil {
			return *v
		}
		var ret IssuerStatusAcmePatch
		return ret
	}).(IssuerStatusAcmePatchOutput)
}

// LastPrivateKeyHash is a hash of the private key associated with the latest
// registered ACME account, in order to track changes made to registered account
// associated with the Issuer
func (o IssuerStatusAcmePatchPtrOutput) LastPrivateKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerStatusAcmePatch) *string {
		if v == nil {
			return nil
		}
		return v.LastPrivateKeyHash
	}).(pulumi.StringPtrOutput)
}

// LastRegisteredEmail is the email associated with the latest registered
// ACME account, in order to track changes made to registered account
// associated with the  Issuer
func (o IssuerStatusAcmePatchPtrOutput) LastRegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerStatusAcmePatch) *string {
		if v == nil {
			return nil
		}
		return v.LastRegisteredEmail
	}).(pulumi.StringPtrOutput)
}

// URI is the unique account identifier, which can also be used to retrieve
// account details from the CA
func (o IssuerStatusAcmePatchPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerStatusAcmePatch) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditions struct {
	// LastTransitionTime is the timestamp corresponding to the last status
	// change of this condition.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last
	// transition, complementing reason.
	Message *string `pulumi:"message"`
	// If set, this represents the .metadata.generation that the condition was
	// set based upon.
	// For instance, if .metadata.generation is currently 12, but the
	// .status.condition[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the Issuer.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Reason is a brief machine readable explanation for the condition's last
	// transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of (`True`, `False`, `Unknown`).
	Status *string `pulumi:"status"`
	// Type of the condition, known values are (`Ready`).
	Type *string `pulumi:"type"`
}

// IssuerStatusConditionsInput is an input type that accepts IssuerStatusConditionsArgs and IssuerStatusConditionsOutput values.
// You can construct a concrete instance of `IssuerStatusConditionsInput` via:
//
//	IssuerStatusConditionsArgs{...}
type IssuerStatusConditionsInput interface {
	pulumi.Input

	ToIssuerStatusConditionsOutput() IssuerStatusConditionsOutput
	ToIssuerStatusConditionsOutputWithContext(context.Context) IssuerStatusConditionsOutput
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditionsArgs struct {
	// LastTransitionTime is the timestamp corresponding to the last status
	// change of this condition.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last
	// transition, complementing reason.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// If set, this represents the .metadata.generation that the condition was
	// set based upon.
	// For instance, if .metadata.generation is currently 12, but the
	// .status.condition[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the Issuer.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Reason is a brief machine readable explanation for the condition's last
	// transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of (`True`, `False`, `Unknown`).
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Type of the condition, known values are (`Ready`).
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IssuerStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusConditions)(nil)).Elem()
}

func (i IssuerStatusConditionsArgs) ToIssuerStatusConditionsOutput() IssuerStatusConditionsOutput {
	return i.ToIssuerStatusConditionsOutputWithContext(context.Background())
}

func (i IssuerStatusConditionsArgs) ToIssuerStatusConditionsOutputWithContext(ctx context.Context) IssuerStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusConditionsOutput)
}

// IssuerStatusConditionsArrayInput is an input type that accepts IssuerStatusConditionsArray and IssuerStatusConditionsArrayOutput values.
// You can construct a concrete instance of `IssuerStatusConditionsArrayInput` via:
//
//	IssuerStatusConditionsArray{ IssuerStatusConditionsArgs{...} }
type IssuerStatusConditionsArrayInput interface {
	pulumi.Input

	ToIssuerStatusConditionsArrayOutput() IssuerStatusConditionsArrayOutput
	ToIssuerStatusConditionsArrayOutputWithContext(context.Context) IssuerStatusConditionsArrayOutput
}

type IssuerStatusConditionsArray []IssuerStatusConditionsInput

func (IssuerStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerStatusConditions)(nil)).Elem()
}

func (i IssuerStatusConditionsArray) ToIssuerStatusConditionsArrayOutput() IssuerStatusConditionsArrayOutput {
	return i.ToIssuerStatusConditionsArrayOutputWithContext(context.Background())
}

func (i IssuerStatusConditionsArray) ToIssuerStatusConditionsArrayOutputWithContext(ctx context.Context) IssuerStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusConditionsArrayOutput)
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditionsOutput struct{ *pulumi.OutputState }

func (IssuerStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusConditions)(nil)).Elem()
}

func (o IssuerStatusConditionsOutput) ToIssuerStatusConditionsOutput() IssuerStatusConditionsOutput {
	return o
}

func (o IssuerStatusConditionsOutput) ToIssuerStatusConditionsOutputWithContext(ctx context.Context) IssuerStatusConditionsOutput {
	return o
}

// LastTransitionTime is the timestamp corresponding to the last status
// change of this condition.
func (o IssuerStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Message is a human readable description of the details of the last
// transition, complementing reason.
func (o IssuerStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// If set, this represents the .metadata.generation that the condition was
// set based upon.
// For instance, if .metadata.generation is currently 12, but the
// .status.condition[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the Issuer.
func (o IssuerStatusConditionsOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditions) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Reason is a brief machine readable explanation for the condition's last
// transition.
func (o IssuerStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of (`True`, `False`, `Unknown`).
func (o IssuerStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Type of the condition, known values are (`Ready`).
func (o IssuerStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IssuerStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerStatusConditions)(nil)).Elem()
}

func (o IssuerStatusConditionsArrayOutput) ToIssuerStatusConditionsArrayOutput() IssuerStatusConditionsArrayOutput {
	return o
}

func (o IssuerStatusConditionsArrayOutput) ToIssuerStatusConditionsArrayOutputWithContext(ctx context.Context) IssuerStatusConditionsArrayOutput {
	return o
}

func (o IssuerStatusConditionsArrayOutput) Index(i pulumi.IntInput) IssuerStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerStatusConditions {
		return vs[0].([]IssuerStatusConditions)[vs[1].(int)]
	}).(IssuerStatusConditionsOutput)
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditionsPatch struct {
	// LastTransitionTime is the timestamp corresponding to the last status
	// change of this condition.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last
	// transition, complementing reason.
	Message *string `pulumi:"message"`
	// If set, this represents the .metadata.generation that the condition was
	// set based upon.
	// For instance, if .metadata.generation is currently 12, but the
	// .status.condition[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the Issuer.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Reason is a brief machine readable explanation for the condition's last
	// transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of (`True`, `False`, `Unknown`).
	Status *string `pulumi:"status"`
	// Type of the condition, known values are (`Ready`).
	Type *string `pulumi:"type"`
}

// IssuerStatusConditionsPatchInput is an input type that accepts IssuerStatusConditionsPatchArgs and IssuerStatusConditionsPatchOutput values.
// You can construct a concrete instance of `IssuerStatusConditionsPatchInput` via:
//
//	IssuerStatusConditionsPatchArgs{...}
type IssuerStatusConditionsPatchInput interface {
	pulumi.Input

	ToIssuerStatusConditionsPatchOutput() IssuerStatusConditionsPatchOutput
	ToIssuerStatusConditionsPatchOutputWithContext(context.Context) IssuerStatusConditionsPatchOutput
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditionsPatchArgs struct {
	// LastTransitionTime is the timestamp corresponding to the last status
	// change of this condition.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last
	// transition, complementing reason.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// If set, this represents the .metadata.generation that the condition was
	// set based upon.
	// For instance, if .metadata.generation is currently 12, but the
	// .status.condition[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the Issuer.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Reason is a brief machine readable explanation for the condition's last
	// transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of (`True`, `False`, `Unknown`).
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Type of the condition, known values are (`Ready`).
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IssuerStatusConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusConditionsPatch)(nil)).Elem()
}

func (i IssuerStatusConditionsPatchArgs) ToIssuerStatusConditionsPatchOutput() IssuerStatusConditionsPatchOutput {
	return i.ToIssuerStatusConditionsPatchOutputWithContext(context.Background())
}

func (i IssuerStatusConditionsPatchArgs) ToIssuerStatusConditionsPatchOutputWithContext(ctx context.Context) IssuerStatusConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusConditionsPatchOutput)
}

// IssuerStatusConditionsPatchArrayInput is an input type that accepts IssuerStatusConditionsPatchArray and IssuerStatusConditionsPatchArrayOutput values.
// You can construct a concrete instance of `IssuerStatusConditionsPatchArrayInput` via:
//
//	IssuerStatusConditionsPatchArray{ IssuerStatusConditionsPatchArgs{...} }
type IssuerStatusConditionsPatchArrayInput interface {
	pulumi.Input

	ToIssuerStatusConditionsPatchArrayOutput() IssuerStatusConditionsPatchArrayOutput
	ToIssuerStatusConditionsPatchArrayOutputWithContext(context.Context) IssuerStatusConditionsPatchArrayOutput
}

type IssuerStatusConditionsPatchArray []IssuerStatusConditionsPatchInput

func (IssuerStatusConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerStatusConditionsPatch)(nil)).Elem()
}

func (i IssuerStatusConditionsPatchArray) ToIssuerStatusConditionsPatchArrayOutput() IssuerStatusConditionsPatchArrayOutput {
	return i.ToIssuerStatusConditionsPatchArrayOutputWithContext(context.Background())
}

func (i IssuerStatusConditionsPatchArray) ToIssuerStatusConditionsPatchArrayOutputWithContext(ctx context.Context) IssuerStatusConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusConditionsPatchArrayOutput)
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditionsPatchOutput struct{ *pulumi.OutputState }

func (IssuerStatusConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusConditionsPatch)(nil)).Elem()
}

func (o IssuerStatusConditionsPatchOutput) ToIssuerStatusConditionsPatchOutput() IssuerStatusConditionsPatchOutput {
	return o
}

func (o IssuerStatusConditionsPatchOutput) ToIssuerStatusConditionsPatchOutputWithContext(ctx context.Context) IssuerStatusConditionsPatchOutput {
	return o
}

// LastTransitionTime is the timestamp corresponding to the last status
// change of this condition.
func (o IssuerStatusConditionsPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditionsPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Message is a human readable description of the details of the last
// transition, complementing reason.
func (o IssuerStatusConditionsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditionsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// If set, this represents the .metadata.generation that the condition was
// set based upon.
// For instance, if .metadata.generation is currently 12, but the
// .status.condition[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the Issuer.
func (o IssuerStatusConditionsPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditionsPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Reason is a brief machine readable explanation for the condition's last
// transition.
func (o IssuerStatusConditionsPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditionsPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of (`True`, `False`, `Unknown`).
func (o IssuerStatusConditionsPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditionsPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Type of the condition, known values are (`Ready`).
func (o IssuerStatusConditionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IssuerStatusConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (IssuerStatusConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerStatusConditionsPatch)(nil)).Elem()
}

func (o IssuerStatusConditionsPatchArrayOutput) ToIssuerStatusConditionsPatchArrayOutput() IssuerStatusConditionsPatchArrayOutput {
	return o
}

func (o IssuerStatusConditionsPatchArrayOutput) ToIssuerStatusConditionsPatchArrayOutputWithContext(ctx context.Context) IssuerStatusConditionsPatchArrayOutput {
	return o
}

func (o IssuerStatusConditionsPatchArrayOutput) Index(i pulumi.IntInput) IssuerStatusConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerStatusConditionsPatch {
		return vs[0].([]IssuerStatusConditionsPatch)[vs[1].(int)]
	}).(IssuerStatusConditionsPatchOutput)
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatusPatch struct {
	Acme *IssuerStatusAcmePatch `pulumi:"acme"`
	// List of status conditions to indicate the status of a CertificateRequest.
	// Known condition types are `Ready`.
	Conditions []IssuerStatusConditionsPatch `pulumi:"conditions"`
}

// IssuerStatusPatchInput is an input type that accepts IssuerStatusPatchArgs and IssuerStatusPatchOutput values.
// You can construct a concrete instance of `IssuerStatusPatchInput` via:
//
//	IssuerStatusPatchArgs{...}
type IssuerStatusPatchInput interface {
	pulumi.Input

	ToIssuerStatusPatchOutput() IssuerStatusPatchOutput
	ToIssuerStatusPatchOutputWithContext(context.Context) IssuerStatusPatchOutput
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatusPatchArgs struct {
	Acme IssuerStatusAcmePatchPtrInput `pulumi:"acme"`
	// List of status conditions to indicate the status of a CertificateRequest.
	// Known condition types are `Ready`.
	Conditions IssuerStatusConditionsPatchArrayInput `pulumi:"conditions"`
}

func (IssuerStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusPatch)(nil)).Elem()
}

func (i IssuerStatusPatchArgs) ToIssuerStatusPatchOutput() IssuerStatusPatchOutput {
	return i.ToIssuerStatusPatchOutputWithContext(context.Background())
}

func (i IssuerStatusPatchArgs) ToIssuerStatusPatchOutputWithContext(ctx context.Context) IssuerStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusPatchOutput)
}

func (i IssuerStatusPatchArgs) ToIssuerStatusPatchPtrOutput() IssuerStatusPatchPtrOutput {
	return i.ToIssuerStatusPatchPtrOutputWithContext(context.Background())
}

func (i IssuerStatusPatchArgs) ToIssuerStatusPatchPtrOutputWithContext(ctx context.Context) IssuerStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusPatchOutput).ToIssuerStatusPatchPtrOutputWithContext(ctx)
}

// IssuerStatusPatchPtrInput is an input type that accepts IssuerStatusPatchArgs, IssuerStatusPatchPtr and IssuerStatusPatchPtrOutput values.
// You can construct a concrete instance of `IssuerStatusPatchPtrInput` via:
//
//	        IssuerStatusPatchArgs{...}
//
//	or:
//
//	        nil
type IssuerStatusPatchPtrInput interface {
	pulumi.Input

	ToIssuerStatusPatchPtrOutput() IssuerStatusPatchPtrOutput
	ToIssuerStatusPatchPtrOutputWithContext(context.Context) IssuerStatusPatchPtrOutput
}

type issuerStatusPatchPtrType IssuerStatusPatchArgs

func IssuerStatusPatchPtr(v *IssuerStatusPatchArgs) IssuerStatusPatchPtrInput {
	return (*issuerStatusPatchPtrType)(v)
}

func (*issuerStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatusPatch)(nil)).Elem()
}

func (i *issuerStatusPatchPtrType) ToIssuerStatusPatchPtrOutput() IssuerStatusPatchPtrOutput {
	return i.ToIssuerStatusPatchPtrOutputWithContext(context.Background())
}

func (i *issuerStatusPatchPtrType) ToIssuerStatusPatchPtrOutputWithContext(ctx context.Context) IssuerStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusPatchPtrOutput)
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatusPatchOutput struct{ *pulumi.OutputState }

func (IssuerStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusPatch)(nil)).Elem()
}

func (o IssuerStatusPatchOutput) ToIssuerStatusPatchOutput() IssuerStatusPatchOutput {
	return o
}

func (o IssuerStatusPatchOutput) ToIssuerStatusPatchOutputWithContext(ctx context.Context) IssuerStatusPatchOutput {
	return o
}

func (o IssuerStatusPatchOutput) ToIssuerStatusPatchPtrOutput() IssuerStatusPatchPtrOutput {
	return o.ToIssuerStatusPatchPtrOutputWithContext(context.Background())
}

func (o IssuerStatusPatchOutput) ToIssuerStatusPatchPtrOutputWithContext(ctx context.Context) IssuerStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IssuerStatusPatch) *IssuerStatusPatch {
		return &v
	}).(IssuerStatusPatchPtrOutput)
}

func (o IssuerStatusPatchOutput) Acme() IssuerStatusAcmePatchPtrOutput {
	return o.ApplyT(func(v IssuerStatusPatch) *IssuerStatusAcmePatch { return v.Acme }).(IssuerStatusAcmePatchPtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest.
// Known condition types are `Ready`.
func (o IssuerStatusPatchOutput) Conditions() IssuerStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v IssuerStatusPatch) []IssuerStatusConditionsPatch { return v.Conditions }).(IssuerStatusConditionsPatchArrayOutput)
}

type IssuerStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (IssuerStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatusPatch)(nil)).Elem()
}

func (o IssuerStatusPatchPtrOutput) ToIssuerStatusPatchPtrOutput() IssuerStatusPatchPtrOutput {
	return o
}

func (o IssuerStatusPatchPtrOutput) ToIssuerStatusPatchPtrOutputWithContext(ctx context.Context) IssuerStatusPatchPtrOutput {
	return o
}

func (o IssuerStatusPatchPtrOutput) Elem() IssuerStatusPatchOutput {
	return o.ApplyT(func(v *IssuerStatusPatch) IssuerStatusPatch {
		if v != nil {
			return *v
		}
		var ret IssuerStatusPatch
		return ret
	}).(IssuerStatusPatchOutput)
}

func (o IssuerStatusPatchPtrOutput) Acme() IssuerStatusAcmePatchPtrOutput {
	return o.ApplyT(func(v *IssuerStatusPatch) *IssuerStatusAcmePatch {
		if v == nil {
			return nil
		}
		return v.Acme
	}).(IssuerStatusAcmePatchPtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest.
// Known condition types are `Ready`.
func (o IssuerStatusPatchPtrOutput) Conditions() IssuerStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v *IssuerStatusPatch) []IssuerStatusConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(IssuerStatusConditionsPatchArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01PatchInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01PatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversHttp01PatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversHttp01PatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversPatchArrayInput)(nil)).Elem(), IssuerSpecAcmeSolversPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversSelectorInput)(nil)).Elem(), IssuerSpecAcmeSolversSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversSelectorPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversSelectorPatchInput)(nil)).Elem(), IssuerSpecAcmeSolversSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecAcmeSolversSelectorPatchPtrInput)(nil)).Elem(), IssuerSpecAcmeSolversSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecCaInput)(nil)).Elem(), IssuerSpecCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecCaPtrInput)(nil)).Elem(), IssuerSpecCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecCaPatchInput)(nil)).Elem(), IssuerSpecCaPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecCaPatchPtrInput)(nil)).Elem(), IssuerSpecCaPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecPatchInput)(nil)).Elem(), IssuerSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecPatchPtrInput)(nil)).Elem(), IssuerSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecSelfSignedInput)(nil)).Elem(), IssuerSpecSelfSignedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecSelfSignedPtrInput)(nil)).Elem(), IssuerSpecSelfSignedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecSelfSignedPatchInput)(nil)).Elem(), IssuerSpecSelfSignedPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecSelfSignedPatchPtrInput)(nil)).Elem(), IssuerSpecSelfSignedPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultInput)(nil)).Elem(), IssuerSpecVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultPtrInput)(nil)).Elem(), IssuerSpecVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthInput)(nil)).Elem(), IssuerSpecVaultAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthPtrInput)(nil)).Elem(), IssuerSpecVaultAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthAppRoleInput)(nil)).Elem(), IssuerSpecVaultAuthAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthAppRolePtrInput)(nil)).Elem(), IssuerSpecVaultAuthAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthAppRolePatchInput)(nil)).Elem(), IssuerSpecVaultAuthAppRolePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthAppRolePatchPtrInput)(nil)).Elem(), IssuerSpecVaultAuthAppRolePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRefInput)(nil)).Elem(), IssuerSpecVaultAuthAppRoleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRefPtrInput)(nil)).Elem(), IssuerSpecVaultAuthAppRoleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRefPatchInput)(nil)).Elem(), IssuerSpecVaultAuthAppRoleSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRefPatchPtrInput)(nil)).Elem(), IssuerSpecVaultAuthAppRoleSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthClientCertificateInput)(nil)).Elem(), IssuerSpecVaultAuthClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthClientCertificatePtrInput)(nil)).Elem(), IssuerSpecVaultAuthClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthClientCertificatePatchInput)(nil)).Elem(), IssuerSpecVaultAuthClientCertificatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthClientCertificatePatchPtrInput)(nil)).Elem(), IssuerSpecVaultAuthClientCertificatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesPtrInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesPatchInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesPatchPtrInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRefInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRefPtrInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRefPatchInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRefPatchPtrInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesServiceAccountRefInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesServiceAccountRefPtrInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesServiceAccountRefPatchInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrInput)(nil)).Elem(), IssuerSpecVaultAuthKubernetesServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthPatchInput)(nil)).Elem(), IssuerSpecVaultAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthPatchPtrInput)(nil)).Elem(), IssuerSpecVaultAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRefInput)(nil)).Elem(), IssuerSpecVaultAuthTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRefPtrInput)(nil)).Elem(), IssuerSpecVaultAuthTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRefPatchInput)(nil)).Elem(), IssuerSpecVaultAuthTokenSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRefPatchPtrInput)(nil)).Elem(), IssuerSpecVaultAuthTokenSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultCaBundleSecretRefInput)(nil)).Elem(), IssuerSpecVaultCaBundleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultCaBundleSecretRefPtrInput)(nil)).Elem(), IssuerSpecVaultCaBundleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultCaBundleSecretRefPatchInput)(nil)).Elem(), IssuerSpecVaultCaBundleSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultCaBundleSecretRefPatchPtrInput)(nil)).Elem(), IssuerSpecVaultCaBundleSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultClientCertSecretRefInput)(nil)).Elem(), IssuerSpecVaultClientCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultClientCertSecretRefPtrInput)(nil)).Elem(), IssuerSpecVaultClientCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultClientCertSecretRefPatchInput)(nil)).Elem(), IssuerSpecVaultClientCertSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultClientCertSecretRefPatchPtrInput)(nil)).Elem(), IssuerSpecVaultClientCertSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultClientKeySecretRefInput)(nil)).Elem(), IssuerSpecVaultClientKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultClientKeySecretRefPtrInput)(nil)).Elem(), IssuerSpecVaultClientKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultClientKeySecretRefPatchInput)(nil)).Elem(), IssuerSpecVaultClientKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultClientKeySecretRefPatchPtrInput)(nil)).Elem(), IssuerSpecVaultClientKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultPatchInput)(nil)).Elem(), IssuerSpecVaultPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVaultPatchPtrInput)(nil)).Elem(), IssuerSpecVaultPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiInput)(nil)).Elem(), IssuerSpecVenafiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiPtrInput)(nil)).Elem(), IssuerSpecVenafiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiCloudInput)(nil)).Elem(), IssuerSpecVenafiCloudArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiCloudPtrInput)(nil)).Elem(), IssuerSpecVenafiCloudArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRefInput)(nil)).Elem(), IssuerSpecVenafiCloudApiTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRefPtrInput)(nil)).Elem(), IssuerSpecVenafiCloudApiTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRefPatchInput)(nil)).Elem(), IssuerSpecVenafiCloudApiTokenSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrInput)(nil)).Elem(), IssuerSpecVenafiCloudApiTokenSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiCloudPatchInput)(nil)).Elem(), IssuerSpecVenafiCloudPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiCloudPatchPtrInput)(nil)).Elem(), IssuerSpecVenafiCloudPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiPatchInput)(nil)).Elem(), IssuerSpecVenafiPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiPatchPtrInput)(nil)).Elem(), IssuerSpecVenafiPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppInput)(nil)).Elem(), IssuerSpecVenafiTppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppPtrInput)(nil)).Elem(), IssuerSpecVenafiTppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppCaBundleSecretRefInput)(nil)).Elem(), IssuerSpecVenafiTppCaBundleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppCaBundleSecretRefPtrInput)(nil)).Elem(), IssuerSpecVenafiTppCaBundleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppCaBundleSecretRefPatchInput)(nil)).Elem(), IssuerSpecVenafiTppCaBundleSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppCaBundleSecretRefPatchPtrInput)(nil)).Elem(), IssuerSpecVenafiTppCaBundleSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRefInput)(nil)).Elem(), IssuerSpecVenafiTppCredentialsRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRefPtrInput)(nil)).Elem(), IssuerSpecVenafiTppCredentialsRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRefPatchInput)(nil)).Elem(), IssuerSpecVenafiTppCredentialsRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRefPatchPtrInput)(nil)).Elem(), IssuerSpecVenafiTppCredentialsRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppPatchInput)(nil)).Elem(), IssuerSpecVenafiTppPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerSpecVenafiTppPatchPtrInput)(nil)).Elem(), IssuerSpecVenafiTppPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusInput)(nil)).Elem(), IssuerStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusPtrInput)(nil)).Elem(), IssuerStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusAcmeInput)(nil)).Elem(), IssuerStatusAcmeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusAcmePtrInput)(nil)).Elem(), IssuerStatusAcmeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusAcmePatchInput)(nil)).Elem(), IssuerStatusAcmePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusAcmePatchPtrInput)(nil)).Elem(), IssuerStatusAcmePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusConditionsInput)(nil)).Elem(), IssuerStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusConditionsArrayInput)(nil)).Elem(), IssuerStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusConditionsPatchInput)(nil)).Elem(), IssuerStatusConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusConditionsPatchArrayInput)(nil)).Elem(), IssuerStatusConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusPatchInput)(nil)).Elem(), IssuerStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IssuerStatusPatchPtrInput)(nil)).Elem(), IssuerStatusPatchArgs{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecSecurityContextSysctlsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01GatewayHTTPRoutePodTemplateSpecTolerationsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplatePatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecImagePullSecretsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeLinuxOptionsPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfileOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSeccompProfilePatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecSecurityContextSysctlsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01PatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01PatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversSelectorPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecCaOutput{})
	pulumi.RegisterOutputType(IssuerSpecCaPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecCaPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecCaPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecSelfSignedOutput{})
	pulumi.RegisterOutputType(IssuerSpecSelfSignedPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecSelfSignedPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecSelfSignedPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRoleOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRolePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRolePatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRolePatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRoleSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRoleSecretRefPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRoleSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthClientCertificateOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthClientCertificatePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthClientCertificatePatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthClientCertificatePatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesSecretRefPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesServiceAccountRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesServiceAccountRefPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesServiceAccountRefPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthTokenSecretRefPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthTokenSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultCaBundleSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultCaBundleSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultCaBundleSecretRefPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultCaBundleSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultClientCertSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultClientCertSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultClientCertSecretRefPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultClientCertSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultClientKeySecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultClientKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultClientKeySecretRefPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultClientKeySecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudApiTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudApiTokenSecretRefPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudApiTokenSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppCaBundleSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppCaBundleSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppCaBundleSecretRefPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppCaBundleSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppCredentialsRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppCredentialsRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppCredentialsRefPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppCredentialsRefPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppPatchOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppPatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerStatusOutput{})
	pulumi.RegisterOutputType(IssuerStatusPtrOutput{})
	pulumi.RegisterOutputType(IssuerStatusAcmeOutput{})
	pulumi.RegisterOutputType(IssuerStatusAcmePtrOutput{})
	pulumi.RegisterOutputType(IssuerStatusAcmePatchOutput{})
	pulumi.RegisterOutputType(IssuerStatusAcmePatchPtrOutput{})
	pulumi.RegisterOutputType(IssuerStatusConditionsOutput{})
	pulumi.RegisterOutputType(IssuerStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerStatusConditionsPatchOutput{})
	pulumi.RegisterOutputType(IssuerStatusConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(IssuerStatusPatchOutput{})
	pulumi.RegisterOutputType(IssuerStatusPatchPtrOutput{})
}
