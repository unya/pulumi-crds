// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "kubernetes:rabbitmq.com/v1beta1:Binding":
		r = &Binding{}
	case "kubernetes:rabbitmq.com/v1beta1:BindingList":
		r = &BindingList{}
	case "kubernetes:rabbitmq.com/v1beta1:BindingPatch":
		r = &BindingPatch{}
	case "kubernetes:rabbitmq.com/v1beta1:Exchange":
		r = &Exchange{}
	case "kubernetes:rabbitmq.com/v1beta1:ExchangeList":
		r = &ExchangeList{}
	case "kubernetes:rabbitmq.com/v1beta1:ExchangePatch":
		r = &ExchangePatch{}
	case "kubernetes:rabbitmq.com/v1beta1:Federation":
		r = &Federation{}
	case "kubernetes:rabbitmq.com/v1beta1:FederationList":
		r = &FederationList{}
	case "kubernetes:rabbitmq.com/v1beta1:FederationPatch":
		r = &FederationPatch{}
	case "kubernetes:rabbitmq.com/v1beta1:OperatorPolicy":
		r = &OperatorPolicy{}
	case "kubernetes:rabbitmq.com/v1beta1:OperatorPolicyList":
		r = &OperatorPolicyList{}
	case "kubernetes:rabbitmq.com/v1beta1:OperatorPolicyPatch":
		r = &OperatorPolicyPatch{}
	case "kubernetes:rabbitmq.com/v1beta1:Permission":
		r = &Permission{}
	case "kubernetes:rabbitmq.com/v1beta1:PermissionList":
		r = &PermissionList{}
	case "kubernetes:rabbitmq.com/v1beta1:PermissionPatch":
		r = &PermissionPatch{}
	case "kubernetes:rabbitmq.com/v1beta1:Policy":
		r = &Policy{}
	case "kubernetes:rabbitmq.com/v1beta1:PolicyList":
		r = &PolicyList{}
	case "kubernetes:rabbitmq.com/v1beta1:PolicyPatch":
		r = &PolicyPatch{}
	case "kubernetes:rabbitmq.com/v1beta1:Queue":
		r = &Queue{}
	case "kubernetes:rabbitmq.com/v1beta1:QueueList":
		r = &QueueList{}
	case "kubernetes:rabbitmq.com/v1beta1:QueuePatch":
		r = &QueuePatch{}
	case "kubernetes:rabbitmq.com/v1beta1:RabbitmqCluster":
		r = &RabbitmqCluster{}
	case "kubernetes:rabbitmq.com/v1beta1:RabbitmqClusterList":
		r = &RabbitmqClusterList{}
	case "kubernetes:rabbitmq.com/v1beta1:RabbitmqClusterPatch":
		r = &RabbitmqClusterPatch{}
	case "kubernetes:rabbitmq.com/v1beta1:SchemaReplication":
		r = &SchemaReplication{}
	case "kubernetes:rabbitmq.com/v1beta1:SchemaReplicationList":
		r = &SchemaReplicationList{}
	case "kubernetes:rabbitmq.com/v1beta1:SchemaReplicationPatch":
		r = &SchemaReplicationPatch{}
	case "kubernetes:rabbitmq.com/v1beta1:Shovel":
		r = &Shovel{}
	case "kubernetes:rabbitmq.com/v1beta1:ShovelList":
		r = &ShovelList{}
	case "kubernetes:rabbitmq.com/v1beta1:ShovelPatch":
		r = &ShovelPatch{}
	case "kubernetes:rabbitmq.com/v1beta1:TopicPermission":
		r = &TopicPermission{}
	case "kubernetes:rabbitmq.com/v1beta1:TopicPermissionList":
		r = &TopicPermissionList{}
	case "kubernetes:rabbitmq.com/v1beta1:TopicPermissionPatch":
		r = &TopicPermissionPatch{}
	case "kubernetes:rabbitmq.com/v1beta1:User":
		r = &User{}
	case "kubernetes:rabbitmq.com/v1beta1:UserList":
		r = &UserList{}
	case "kubernetes:rabbitmq.com/v1beta1:UserPatch":
		r = &UserPatch{}
	case "kubernetes:rabbitmq.com/v1beta1:Vhost":
		r = &Vhost{}
	case "kubernetes:rabbitmq.com/v1beta1:VhostList":
		r = &VhostList{}
	case "kubernetes:rabbitmq.com/v1beta1:VhostPatch":
		r = &VhostPatch{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := utilities.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"rabbitmq",
		"rabbitmq.com/v1beta1",
		&module{version},
	)
}
