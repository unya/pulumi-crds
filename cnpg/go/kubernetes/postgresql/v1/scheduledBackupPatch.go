// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// ScheduledBackup is the Schema for the scheduledbackups API
type ScheduledBackupPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput     `pulumi:"metadata"`
	Spec     ScheduledBackupSpecPatchPtrOutput   `pulumi:"spec"`
	Status   ScheduledBackupStatusPatchPtrOutput `pulumi:"status"`
}

// NewScheduledBackupPatch registers a new resource with the given unique name, arguments, and options.
func NewScheduledBackupPatch(ctx *pulumi.Context,
	name string, args *ScheduledBackupPatchArgs, opts ...pulumi.ResourceOption) (*ScheduledBackupPatch, error) {
	if args == nil {
		args = &ScheduledBackupPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("postgresql.cnpg.io/v1")
	args.Kind = pulumi.StringPtr("ScheduledBackup")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ScheduledBackupPatch
	err := ctx.RegisterResource("kubernetes:postgresql.cnpg.io/v1:ScheduledBackupPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScheduledBackupPatch gets an existing ScheduledBackupPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScheduledBackupPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScheduledBackupPatchState, opts ...pulumi.ResourceOption) (*ScheduledBackupPatch, error) {
	var resource ScheduledBackupPatch
	err := ctx.ReadResource("kubernetes:postgresql.cnpg.io/v1:ScheduledBackupPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScheduledBackupPatch resources.
type scheduledBackupPatchState struct {
}

type ScheduledBackupPatchState struct {
}

func (ScheduledBackupPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledBackupPatchState)(nil)).Elem()
}

type scheduledBackupPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch   `pulumi:"metadata"`
	Spec     *ScheduledBackupSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a ScheduledBackupPatch resource.
type ScheduledBackupPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     ScheduledBackupSpecPatchPtrInput
}

func (ScheduledBackupPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledBackupPatchArgs)(nil)).Elem()
}

type ScheduledBackupPatchInput interface {
	pulumi.Input

	ToScheduledBackupPatchOutput() ScheduledBackupPatchOutput
	ToScheduledBackupPatchOutputWithContext(ctx context.Context) ScheduledBackupPatchOutput
}

func (*ScheduledBackupPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupPatch)(nil)).Elem()
}

func (i *ScheduledBackupPatch) ToScheduledBackupPatchOutput() ScheduledBackupPatchOutput {
	return i.ToScheduledBackupPatchOutputWithContext(context.Background())
}

func (i *ScheduledBackupPatch) ToScheduledBackupPatchOutputWithContext(ctx context.Context) ScheduledBackupPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupPatchOutput)
}

// ScheduledBackupPatchArrayInput is an input type that accepts ScheduledBackupPatchArray and ScheduledBackupPatchArrayOutput values.
// You can construct a concrete instance of `ScheduledBackupPatchArrayInput` via:
//
//	ScheduledBackupPatchArray{ ScheduledBackupPatchArgs{...} }
type ScheduledBackupPatchArrayInput interface {
	pulumi.Input

	ToScheduledBackupPatchArrayOutput() ScheduledBackupPatchArrayOutput
	ToScheduledBackupPatchArrayOutputWithContext(context.Context) ScheduledBackupPatchArrayOutput
}

type ScheduledBackupPatchArray []ScheduledBackupPatchInput

func (ScheduledBackupPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScheduledBackupPatch)(nil)).Elem()
}

func (i ScheduledBackupPatchArray) ToScheduledBackupPatchArrayOutput() ScheduledBackupPatchArrayOutput {
	return i.ToScheduledBackupPatchArrayOutputWithContext(context.Background())
}

func (i ScheduledBackupPatchArray) ToScheduledBackupPatchArrayOutputWithContext(ctx context.Context) ScheduledBackupPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupPatchArrayOutput)
}

// ScheduledBackupPatchMapInput is an input type that accepts ScheduledBackupPatchMap and ScheduledBackupPatchMapOutput values.
// You can construct a concrete instance of `ScheduledBackupPatchMapInput` via:
//
//	ScheduledBackupPatchMap{ "key": ScheduledBackupPatchArgs{...} }
type ScheduledBackupPatchMapInput interface {
	pulumi.Input

	ToScheduledBackupPatchMapOutput() ScheduledBackupPatchMapOutput
	ToScheduledBackupPatchMapOutputWithContext(context.Context) ScheduledBackupPatchMapOutput
}

type ScheduledBackupPatchMap map[string]ScheduledBackupPatchInput

func (ScheduledBackupPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScheduledBackupPatch)(nil)).Elem()
}

func (i ScheduledBackupPatchMap) ToScheduledBackupPatchMapOutput() ScheduledBackupPatchMapOutput {
	return i.ToScheduledBackupPatchMapOutputWithContext(context.Background())
}

func (i ScheduledBackupPatchMap) ToScheduledBackupPatchMapOutputWithContext(ctx context.Context) ScheduledBackupPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupPatchMapOutput)
}

type ScheduledBackupPatchOutput struct{ *pulumi.OutputState }

func (ScheduledBackupPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupPatch)(nil)).Elem()
}

func (o ScheduledBackupPatchOutput) ToScheduledBackupPatchOutput() ScheduledBackupPatchOutput {
	return o
}

func (o ScheduledBackupPatchOutput) ToScheduledBackupPatchOutputWithContext(ctx context.Context) ScheduledBackupPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ScheduledBackupPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ScheduledBackupPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ScheduledBackupPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ScheduledBackupPatchOutput) Spec() ScheduledBackupSpecPatchPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupPatch) ScheduledBackupSpecPatchPtrOutput { return v.Spec }).(ScheduledBackupSpecPatchPtrOutput)
}

func (o ScheduledBackupPatchOutput) Status() ScheduledBackupStatusPatchPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupPatch) ScheduledBackupStatusPatchPtrOutput { return v.Status }).(ScheduledBackupStatusPatchPtrOutput)
}

type ScheduledBackupPatchArrayOutput struct{ *pulumi.OutputState }

func (ScheduledBackupPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScheduledBackupPatch)(nil)).Elem()
}

func (o ScheduledBackupPatchArrayOutput) ToScheduledBackupPatchArrayOutput() ScheduledBackupPatchArrayOutput {
	return o
}

func (o ScheduledBackupPatchArrayOutput) ToScheduledBackupPatchArrayOutputWithContext(ctx context.Context) ScheduledBackupPatchArrayOutput {
	return o
}

func (o ScheduledBackupPatchArrayOutput) Index(i pulumi.IntInput) ScheduledBackupPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ScheduledBackupPatch {
		return vs[0].([]*ScheduledBackupPatch)[vs[1].(int)]
	}).(ScheduledBackupPatchOutput)
}

type ScheduledBackupPatchMapOutput struct{ *pulumi.OutputState }

func (ScheduledBackupPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScheduledBackupPatch)(nil)).Elem()
}

func (o ScheduledBackupPatchMapOutput) ToScheduledBackupPatchMapOutput() ScheduledBackupPatchMapOutput {
	return o
}

func (o ScheduledBackupPatchMapOutput) ToScheduledBackupPatchMapOutputWithContext(ctx context.Context) ScheduledBackupPatchMapOutput {
	return o
}

func (o ScheduledBackupPatchMapOutput) MapIndex(k pulumi.StringInput) ScheduledBackupPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ScheduledBackupPatch {
		return vs[0].(map[string]*ScheduledBackupPatch)[vs[1].(string)]
	}).(ScheduledBackupPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupPatchInput)(nil)).Elem(), &ScheduledBackupPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupPatchArrayInput)(nil)).Elem(), ScheduledBackupPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupPatchMapInput)(nil)).Elem(), ScheduledBackupPatchMap{})
	pulumi.RegisterOutputType(ScheduledBackupPatchOutput{})
	pulumi.RegisterOutputType(ScheduledBackupPatchArrayOutput{})
	pulumi.RegisterOutputType(ScheduledBackupPatchMapOutput{})
}
