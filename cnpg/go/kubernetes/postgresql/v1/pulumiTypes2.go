// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.
type PoolerSpecTemplateSpecVolumesCsiPatch struct {
	// driver is the name of the CSI driver that handles this volume.
	// Consult with your admin for the correct name as registered in the cluster.
	Driver *string `pulumi:"driver"`
	// fsType to mount. Ex. "ext4", "xfs", "ntfs".
	// If not provided, the empty value is passed to the associated CSI driver
	// which will determine the default filesystem to apply.
	FsType               *string                                                    `pulumi:"fsType"`
	NodePublishSecretRef *PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPatch `pulumi:"nodePublishSecretRef"`
	// readOnly specifies a read-only configuration for the volume.
	// Defaults to false (read/write).
	ReadOnly *bool `pulumi:"readOnly"`
	// volumeAttributes stores driver-specific properties that are passed to the CSI
	// driver. Consult your driver's documentation for supported values.
	VolumeAttributes map[string]string `pulumi:"volumeAttributes"`
}

// PoolerSpecTemplateSpecVolumesCsiPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesCsiPatchArgs and PoolerSpecTemplateSpecVolumesCsiPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesCsiPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesCsiPatchArgs{...}
type PoolerSpecTemplateSpecVolumesCsiPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesCsiPatchOutput() PoolerSpecTemplateSpecVolumesCsiPatchOutput
	ToPoolerSpecTemplateSpecVolumesCsiPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesCsiPatchOutput
}

// csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.
type PoolerSpecTemplateSpecVolumesCsiPatchArgs struct {
	// driver is the name of the CSI driver that handles this volume.
	// Consult with your admin for the correct name as registered in the cluster.
	Driver pulumi.StringPtrInput `pulumi:"driver"`
	// fsType to mount. Ex. "ext4", "xfs", "ntfs".
	// If not provided, the empty value is passed to the associated CSI driver
	// which will determine the default filesystem to apply.
	FsType               pulumi.StringPtrInput                                             `pulumi:"fsType"`
	NodePublishSecretRef PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPatchPtrInput `pulumi:"nodePublishSecretRef"`
	// readOnly specifies a read-only configuration for the volume.
	// Defaults to false (read/write).
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// volumeAttributes stores driver-specific properties that are passed to the CSI
	// driver. Consult your driver's documentation for supported values.
	VolumeAttributes pulumi.StringMapInput `pulumi:"volumeAttributes"`
}

func (PoolerSpecTemplateSpecVolumesCsiPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCsiPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesCsiPatchArgs) ToPoolerSpecTemplateSpecVolumesCsiPatchOutput() PoolerSpecTemplateSpecVolumesCsiPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCsiPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesCsiPatchArgs) ToPoolerSpecTemplateSpecVolumesCsiPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCsiPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesCsiPatchArgs) ToPoolerSpecTemplateSpecVolumesCsiPatchPtrOutput() PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCsiPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesCsiPatchArgs) ToPoolerSpecTemplateSpecVolumesCsiPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCsiPatchOutput).ToPoolerSpecTemplateSpecVolumesCsiPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesCsiPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesCsiPatchArgs, PoolerSpecTemplateSpecVolumesCsiPatchPtr and PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesCsiPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesCsiPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesCsiPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesCsiPatchPtrOutput() PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesCsiPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesCsiPatchPtrType PoolerSpecTemplateSpecVolumesCsiPatchArgs

func PoolerSpecTemplateSpecVolumesCsiPatchPtr(v *PoolerSpecTemplateSpecVolumesCsiPatchArgs) PoolerSpecTemplateSpecVolumesCsiPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesCsiPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesCsiPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesCsiPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesCsiPatchPtrType) ToPoolerSpecTemplateSpecVolumesCsiPatchPtrOutput() PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCsiPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesCsiPatchPtrType) ToPoolerSpecTemplateSpecVolumesCsiPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput)
}

// csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.
type PoolerSpecTemplateSpecVolumesCsiPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesCsiPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCsiPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesCsiPatchOutput) ToPoolerSpecTemplateSpecVolumesCsiPatchOutput() PoolerSpecTemplateSpecVolumesCsiPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCsiPatchOutput) ToPoolerSpecTemplateSpecVolumesCsiPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCsiPatchOutput) ToPoolerSpecTemplateSpecVolumesCsiPatchPtrOutput() PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesCsiPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesCsiPatchOutput) ToPoolerSpecTemplateSpecVolumesCsiPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesCsiPatch) *PoolerSpecTemplateSpecVolumesCsiPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput)
}

// driver is the name of the CSI driver that handles this volume.
// Consult with your admin for the correct name as registered in the cluster.
func (o PoolerSpecTemplateSpecVolumesCsiPatchOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCsiPatch) *string { return v.Driver }).(pulumi.StringPtrOutput)
}

// fsType to mount. Ex. "ext4", "xfs", "ntfs".
// If not provided, the empty value is passed to the associated CSI driver
// which will determine the default filesystem to apply.
func (o PoolerSpecTemplateSpecVolumesCsiPatchOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCsiPatch) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesCsiPatchOutput) NodePublishSecretRef() PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCsiPatch) *PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPatch {
		return v.NodePublishSecretRef
	}).(PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPatchPtrOutput)
}

// readOnly specifies a read-only configuration for the volume.
// Defaults to false (read/write).
func (o PoolerSpecTemplateSpecVolumesCsiPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCsiPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// volumeAttributes stores driver-specific properties that are passed to the CSI
// driver. Consult your driver's documentation for supported values.
func (o PoolerSpecTemplateSpecVolumesCsiPatchOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCsiPatch) map[string]string { return v.VolumeAttributes }).(pulumi.StringMapOutput)
}

type PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesCsiPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesCsiPatchPtrOutput() PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesCsiPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesCsiPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCsiPatch) PoolerSpecTemplateSpecVolumesCsiPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesCsiPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesCsiPatchOutput)
}

// driver is the name of the CSI driver that handles this volume.
// Consult with your admin for the correct name as registered in the cluster.
func (o PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCsiPatch) *string {
		if v == nil {
			return nil
		}
		return v.Driver
	}).(pulumi.StringPtrOutput)
}

// fsType to mount. Ex. "ext4", "xfs", "ntfs".
// If not provided, the empty value is passed to the associated CSI driver
// which will determine the default filesystem to apply.
func (o PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCsiPatch) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput) NodePublishSecretRef() PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCsiPatch) *PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.NodePublishSecretRef
	}).(PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPatchPtrOutput)
}

// readOnly specifies a read-only configuration for the volume.
// Defaults to false (read/write).
func (o PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCsiPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// volumeAttributes stores driver-specific properties that are passed to the CSI
// driver. Consult your driver's documentation for supported values.
func (o PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCsiPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.VolumeAttributes
	}).(pulumi.StringMapOutput)
}

// downwardAPI represents downward API about the pod that should populate this volume
type PoolerSpecTemplateSpecVolumesDownwardAPI struct {
	// Optional: mode bits to use on created files by default. Must be a
	// Optional: mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// Defaults to 0644.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// Items is a list of downward API volume file
	Items []PoolerSpecTemplateSpecVolumesDownwardAPIItems `pulumi:"items"`
}

// PoolerSpecTemplateSpecVolumesDownwardAPIInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIArgs and PoolerSpecTemplateSpecVolumesDownwardAPIOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardAPIArgs{...}
type PoolerSpecTemplateSpecVolumesDownwardAPIInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIOutput() PoolerSpecTemplateSpecVolumesDownwardAPIOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIOutput
}

// downwardAPI represents downward API about the pod that should populate this volume
type PoolerSpecTemplateSpecVolumesDownwardAPIArgs struct {
	// Optional: mode bits to use on created files by default. Must be a
	// Optional: mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// Defaults to 0644.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// Items is a list of downward API volume file
	Items PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayInput `pulumi:"items"`
}

func (PoolerSpecTemplateSpecVolumesDownwardAPIArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPI)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIOutput() PoolerSpecTemplateSpecVolumesDownwardAPIOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIOutput)
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIOutput).ToPoolerSpecTemplateSpecVolumesDownwardAPIPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesDownwardAPIPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIArgs, PoolerSpecTemplateSpecVolumesDownwardAPIPtr and PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesDownwardAPIArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesDownwardAPIPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput
}

type poolerSpecTemplateSpecVolumesDownwardAPIPtrType PoolerSpecTemplateSpecVolumesDownwardAPIArgs

func PoolerSpecTemplateSpecVolumesDownwardAPIPtr(v *PoolerSpecTemplateSpecVolumesDownwardAPIArgs) PoolerSpecTemplateSpecVolumesDownwardAPIPtrInput {
	return (*poolerSpecTemplateSpecVolumesDownwardAPIPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesDownwardAPIPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardAPI)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesDownwardAPIPtrType) ToPoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesDownwardAPIPtrType) ToPoolerSpecTemplateSpecVolumesDownwardAPIPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput)
}

// downwardAPI represents downward API about the pod that should populate this volume
type PoolerSpecTemplateSpecVolumesDownwardAPIOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPI)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIOutput() PoolerSpecTemplateSpecVolumesDownwardAPIOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesDownwardAPIPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesDownwardAPI) *PoolerSpecTemplateSpecVolumesDownwardAPI {
		return &v
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput)
}

// Optional: mode bits to use on created files by default. Must be a
// Optional: mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// Defaults to 0644.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesDownwardAPIOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPI) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// Items is a list of downward API volume file
func (o PoolerSpecTemplateSpecVolumesDownwardAPIOutput) Items() PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPI) []PoolerSpecTemplateSpecVolumesDownwardAPIItems {
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput)
}

type PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardAPI)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput) Elem() PoolerSpecTemplateSpecVolumesDownwardAPIOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPI) PoolerSpecTemplateSpecVolumesDownwardAPI {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesDownwardAPI
		return ret
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIOutput)
}

// Optional: mode bits to use on created files by default. Must be a
// Optional: mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// Defaults to 0644.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPI) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// Items is a list of downward API volume file
func (o PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput) Items() PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPI) []PoolerSpecTemplateSpecVolumesDownwardAPIItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesDownwardAPIItems struct {
	FieldRef *PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef `pulumi:"fieldRef"`
	// Optional: mode bits used to set permissions on this file, must be an octal value
	// between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path             *string                                                        `pulumi:"path"`
	ResourceFieldRef *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef `pulumi:"resourceFieldRef"`
}

// PoolerSpecTemplateSpecVolumesDownwardAPIItemsInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIItemsArgs and PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIItemsInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardAPIItemsArgs{...}
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsArgs struct {
	FieldRef PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrInput `pulumi:"fieldRef"`
	// Optional: mode bits used to set permissions on this file, must be an octal value
	// between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path             pulumi.StringPtrInput                                                 `pulumi:"path"`
	ResourceFieldRef PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
}

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput)
}

// PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIItemsArray and PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardAPIItemsArray{ PoolerSpecTemplateSpecVolumesDownwardAPIItemsArgs{...} }
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput
}

type PoolerSpecTemplateSpecVolumesDownwardAPIItemsArray []PoolerSpecTemplateSpecVolumesDownwardAPIItemsInput

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesDownwardAPIItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsArray) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsArray) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput) FieldRef() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItems) *PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef {
		return v.FieldRef
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput)
}

// Optional: mode bits used to set permissions on this file, must be an octal value
// between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItems) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput) ResourceFieldRef() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItems) *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef {
		return v.ResourceFieldRef
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput)
}

type PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesDownwardAPIItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesDownwardAPIItems {
		return vs[0].([]PoolerSpecTemplateSpecVolumesDownwardAPIItems)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion *string `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath *string `pulumi:"fieldPath"`
}

// PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefArgs and PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefArgs{...}
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefArgs struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
}

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput).ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefArgs, PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtr and PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput
}

type poolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrType PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefArgs

func PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtr(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefArgs) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef) *PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion *string `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath *string `pulumi:"fieldPath"`
}

// PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchArgs and PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchArgs{...}
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchArgs struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
}

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput).ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchArgs, PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtr and PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrType PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchArgs

func PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtr(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchArgs) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch) *PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch) PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatch struct {
	FieldRef *PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch `pulumi:"fieldRef"`
	// Optional: mode bits used to set permissions on this file, must be an octal value
	// between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path             *string                                                             `pulumi:"path"`
	ResourceFieldRef *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch `pulumi:"resourceFieldRef"`
}

// PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArgs and PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArgs{...}
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArgs struct {
	FieldRef PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrInput `pulumi:"fieldRef"`
	// Optional: mode bits used to set permissions on this file, must be an octal value
	// between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path             pulumi.StringPtrInput                                                      `pulumi:"path"`
	ResourceFieldRef PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrInput `pulumi:"resourceFieldRef"`
}

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput)
}

// PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArray and PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArray{ PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArgs{...} }
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput
}

type PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArray []PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchInput

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArray) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArray) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput) FieldRef() PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatch) *PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatch {
		return v.FieldRef
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput)
}

// Optional: mode bits used to set permissions on this file, must be an octal value
// between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatch) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput) ResourceFieldRef() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatch) *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch {
		return v.ResourceFieldRef
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput)
}

type PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatch {
		return vs[0].([]PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatch)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput)
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor interface{} `pulumi:"divisor"`
	// Required: resource to select
	Resource *string `pulumi:"resource"`
}

// PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefArgs and PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefArgs{...}
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefArgs struct {
	// Container name: required for volumes, optional for env vars
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor pulumi.Input `pulumi:"divisor"`
	// Required: resource to select
	Resource pulumi.StringPtrInput `pulumi:"resource"`
}

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput).ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefArgs, PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtr and PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput
}

type poolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrType PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefArgs

func PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtr(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefArgs) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef) *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput)
}

// Container name: required for volumes, optional for env vars
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput) Divisor() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef) interface{} { return v.Divisor }).(pulumi.AnyOutput)
}

// Required: resource to select
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput)
}

// Container name: required for volumes, optional for env vars
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput) Divisor() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef) interface{} {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(pulumi.AnyOutput)
}

// Required: resource to select
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor interface{} `pulumi:"divisor"`
	// Required: resource to select
	Resource *string `pulumi:"resource"`
}

// PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchArgs and PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchArgs{...}
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchArgs struct {
	// Container name: required for volumes, optional for env vars
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor pulumi.Input `pulumi:"divisor"`
	// Required: resource to select
	Resource pulumi.StringPtrInput `pulumi:"resource"`
}

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput).ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchArgs, PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtr and PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrType PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchArgs

func PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtr(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchArgs) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput)
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch) *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput)
}

// Container name: required for volumes, optional for env vars
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch) *string {
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput) Divisor() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch) interface{} {
		return v.Divisor
	}).(pulumi.AnyOutput)
}

// Required: resource to select
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch) PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput)
}

// Container name: required for volumes, optional for env vars
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput) Divisor() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch) interface{} {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(pulumi.AnyOutput)
}

// Required: resource to select
func (o PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// downwardAPI represents downward API about the pod that should populate this volume
type PoolerSpecTemplateSpecVolumesDownwardAPIPatch struct {
	// Optional: mode bits to use on created files by default. Must be a
	// Optional: mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// Defaults to 0644.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// Items is a list of downward API volume file
	Items []PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatch `pulumi:"items"`
}

// PoolerSpecTemplateSpecVolumesDownwardAPIPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIPatchArgs and PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardAPIPatchArgs{...}
type PoolerSpecTemplateSpecVolumesDownwardAPIPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput() PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput
}

// downwardAPI represents downward API about the pod that should populate this volume
type PoolerSpecTemplateSpecVolumesDownwardAPIPatchArgs struct {
	// Optional: mode bits to use on created files by default. Must be a
	// Optional: mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// Defaults to 0644.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// Items is a list of downward API volume file
	Items PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayInput `pulumi:"items"`
}

func (PoolerSpecTemplateSpecVolumesDownwardAPIPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIPatchArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput() PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIPatchArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIPatchArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardAPIPatchArgs) ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput).ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardAPIPatchArgs, PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtr and PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesDownwardAPIPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesDownwardAPIPatchPtrType PoolerSpecTemplateSpecVolumesDownwardAPIPatchArgs

func PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtr(v *PoolerSpecTemplateSpecVolumesDownwardAPIPatchArgs) PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesDownwardAPIPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesDownwardAPIPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardAPIPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesDownwardAPIPatchPtrType) ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesDownwardAPIPatchPtrType) ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput)
}

// downwardAPI represents downward API about the pod that should populate this volume
type PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput() PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesDownwardAPIPatch) *PoolerSpecTemplateSpecVolumesDownwardAPIPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput)
}

// Optional: mode bits to use on created files by default. Must be a
// Optional: mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// Defaults to 0644.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIPatch) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// Items is a list of downward API volume file
func (o PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput) Items() PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardAPIPatch) []PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatch {
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput)
}

type PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardAPIPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput() PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIPatch) PoolerSpecTemplateSpecVolumesDownwardAPIPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesDownwardAPIPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput)
}

// Optional: mode bits to use on created files by default. Must be a
// Optional: mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// Defaults to 0644.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIPatch) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// Items is a list of downward API volume file
func (o PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput) Items() PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardAPIPatch) []PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatch {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput)
}

// emptyDir represents a temporary directory that shares a pod's lifetime.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type PoolerSpecTemplateSpecVolumesEmptyDir struct {
	// medium represents what type of storage medium should back this directory.
	// The default is "" which means to use the node's default medium.
	// Must be an empty string (default) or Memory.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	Medium *string `pulumi:"medium"`
	// sizeLimit is the total amount of local storage required for this EmptyDir volume.
	// The size limit is also applicable for memory medium.
	// The maximum usage on memory medium EmptyDir would be the minimum value between
	// the SizeLimit specified here and the sum of memory limits of all containers in a pod.
	// The default is nil which means that the limit is undefined.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	SizeLimit interface{} `pulumi:"sizeLimit"`
}

// PoolerSpecTemplateSpecVolumesEmptyDirInput is an input type that accepts PoolerSpecTemplateSpecVolumesEmptyDirArgs and PoolerSpecTemplateSpecVolumesEmptyDirOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEmptyDirInput` via:
//
//	PoolerSpecTemplateSpecVolumesEmptyDirArgs{...}
type PoolerSpecTemplateSpecVolumesEmptyDirInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEmptyDirOutput() PoolerSpecTemplateSpecVolumesEmptyDirOutput
	ToPoolerSpecTemplateSpecVolumesEmptyDirOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEmptyDirOutput
}

// emptyDir represents a temporary directory that shares a pod's lifetime.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type PoolerSpecTemplateSpecVolumesEmptyDirArgs struct {
	// medium represents what type of storage medium should back this directory.
	// The default is "" which means to use the node's default medium.
	// Must be an empty string (default) or Memory.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	Medium pulumi.StringPtrInput `pulumi:"medium"`
	// sizeLimit is the total amount of local storage required for this EmptyDir volume.
	// The size limit is also applicable for memory medium.
	// The maximum usage on memory medium EmptyDir would be the minimum value between
	// the SizeLimit specified here and the sum of memory limits of all containers in a pod.
	// The default is nil which means that the limit is undefined.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	SizeLimit pulumi.Input `pulumi:"sizeLimit"`
}

func (PoolerSpecTemplateSpecVolumesEmptyDirArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEmptyDir)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEmptyDirArgs) ToPoolerSpecTemplateSpecVolumesEmptyDirOutput() PoolerSpecTemplateSpecVolumesEmptyDirOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEmptyDirOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEmptyDirArgs) ToPoolerSpecTemplateSpecVolumesEmptyDirOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEmptyDirOutput)
}

func (i PoolerSpecTemplateSpecVolumesEmptyDirArgs) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEmptyDirArgs) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEmptyDirOutput).ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEmptyDirPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEmptyDirArgs, PoolerSpecTemplateSpecVolumesEmptyDirPtr and PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEmptyDirPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEmptyDirArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEmptyDirPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput
	ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput
}

type poolerSpecTemplateSpecVolumesEmptyDirPtrType PoolerSpecTemplateSpecVolumesEmptyDirArgs

func PoolerSpecTemplateSpecVolumesEmptyDirPtr(v *PoolerSpecTemplateSpecVolumesEmptyDirArgs) PoolerSpecTemplateSpecVolumesEmptyDirPtrInput {
	return (*poolerSpecTemplateSpecVolumesEmptyDirPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEmptyDirPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEmptyDir)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEmptyDirPtrType) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEmptyDirPtrType) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput)
}

// emptyDir represents a temporary directory that shares a pod's lifetime.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type PoolerSpecTemplateSpecVolumesEmptyDirOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEmptyDirOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEmptyDir)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirOutput() PoolerSpecTemplateSpecVolumesEmptyDirOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEmptyDir) *PoolerSpecTemplateSpecVolumesEmptyDir {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput)
}

// medium represents what type of storage medium should back this directory.
// The default is "" which means to use the node's default medium.
// Must be an empty string (default) or Memory.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o PoolerSpecTemplateSpecVolumesEmptyDirOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEmptyDir) *string { return v.Medium }).(pulumi.StringPtrOutput)
}

// sizeLimit is the total amount of local storage required for this EmptyDir volume.
// The size limit is also applicable for memory medium.
// The maximum usage on memory medium EmptyDir would be the minimum value between
// the SizeLimit specified here and the sum of memory limits of all containers in a pod.
// The default is nil which means that the limit is undefined.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o PoolerSpecTemplateSpecVolumesEmptyDirOutput) SizeLimit() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEmptyDir) interface{} { return v.SizeLimit }).(pulumi.AnyOutput)
}

type PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEmptyDir)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEmptyDirOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEmptyDir) PoolerSpecTemplateSpecVolumesEmptyDir {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEmptyDir
		return ret
	}).(PoolerSpecTemplateSpecVolumesEmptyDirOutput)
}

// medium represents what type of storage medium should back this directory.
// The default is "" which means to use the node's default medium.
// Must be an empty string (default) or Memory.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEmptyDir) *string {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(pulumi.StringPtrOutput)
}

// sizeLimit is the total amount of local storage required for this EmptyDir volume.
// The size limit is also applicable for memory medium.
// The maximum usage on memory medium EmptyDir would be the minimum value between
// the SizeLimit specified here and the sum of memory limits of all containers in a pod.
// The default is nil which means that the limit is undefined.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput) SizeLimit() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEmptyDir) interface{} {
		if v == nil {
			return nil
		}
		return v.SizeLimit
	}).(pulumi.AnyOutput)
}

// emptyDir represents a temporary directory that shares a pod's lifetime.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type PoolerSpecTemplateSpecVolumesEmptyDirPatch struct {
	// medium represents what type of storage medium should back this directory.
	// The default is "" which means to use the node's default medium.
	// Must be an empty string (default) or Memory.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	Medium *string `pulumi:"medium"`
	// sizeLimit is the total amount of local storage required for this EmptyDir volume.
	// The size limit is also applicable for memory medium.
	// The maximum usage on memory medium EmptyDir would be the minimum value between
	// the SizeLimit specified here and the sum of memory limits of all containers in a pod.
	// The default is nil which means that the limit is undefined.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	SizeLimit interface{} `pulumi:"sizeLimit"`
}

// PoolerSpecTemplateSpecVolumesEmptyDirPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesEmptyDirPatchArgs and PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEmptyDirPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesEmptyDirPatchArgs{...}
type PoolerSpecTemplateSpecVolumesEmptyDirPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEmptyDirPatchOutput() PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput
	ToPoolerSpecTemplateSpecVolumesEmptyDirPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput
}

// emptyDir represents a temporary directory that shares a pod's lifetime.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type PoolerSpecTemplateSpecVolumesEmptyDirPatchArgs struct {
	// medium represents what type of storage medium should back this directory.
	// The default is "" which means to use the node's default medium.
	// Must be an empty string (default) or Memory.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	Medium pulumi.StringPtrInput `pulumi:"medium"`
	// sizeLimit is the total amount of local storage required for this EmptyDir volume.
	// The size limit is also applicable for memory medium.
	// The maximum usage on memory medium EmptyDir would be the minimum value between
	// the SizeLimit specified here and the sum of memory limits of all containers in a pod.
	// The default is nil which means that the limit is undefined.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	SizeLimit pulumi.Input `pulumi:"sizeLimit"`
}

func (PoolerSpecTemplateSpecVolumesEmptyDirPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEmptyDirPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEmptyDirPatchArgs) ToPoolerSpecTemplateSpecVolumesEmptyDirPatchOutput() PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEmptyDirPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEmptyDirPatchArgs) ToPoolerSpecTemplateSpecVolumesEmptyDirPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesEmptyDirPatchArgs) ToPoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEmptyDirPatchArgs) ToPoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput).ToPoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEmptyDirPatchArgs, PoolerSpecTemplateSpecVolumesEmptyDirPatchPtr and PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEmptyDirPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesEmptyDirPatchPtrType PoolerSpecTemplateSpecVolumesEmptyDirPatchArgs

func PoolerSpecTemplateSpecVolumesEmptyDirPatchPtr(v *PoolerSpecTemplateSpecVolumesEmptyDirPatchArgs) PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesEmptyDirPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEmptyDirPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEmptyDirPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEmptyDirPatchPtrType) ToPoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEmptyDirPatchPtrType) ToPoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput)
}

// emptyDir represents a temporary directory that shares a pod's lifetime.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEmptyDirPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirPatchOutput() PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEmptyDirPatch) *PoolerSpecTemplateSpecVolumesEmptyDirPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput)
}

// medium represents what type of storage medium should back this directory.
// The default is "" which means to use the node's default medium.
// Must be an empty string (default) or Memory.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEmptyDirPatch) *string { return v.Medium }).(pulumi.StringPtrOutput)
}

// sizeLimit is the total amount of local storage required for this EmptyDir volume.
// The size limit is also applicable for memory medium.
// The maximum usage on memory medium EmptyDir would be the minimum value between
// the SizeLimit specified here and the sum of memory limits of all containers in a pod.
// The default is nil which means that the limit is undefined.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput) SizeLimit() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEmptyDirPatch) interface{} { return v.SizeLimit }).(pulumi.AnyOutput)
}

type PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEmptyDirPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEmptyDirPatch) PoolerSpecTemplateSpecVolumesEmptyDirPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEmptyDirPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput)
}

// medium represents what type of storage medium should back this directory.
// The default is "" which means to use the node's default medium.
// Must be an empty string (default) or Memory.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEmptyDirPatch) *string {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(pulumi.StringPtrOutput)
}

// sizeLimit is the total amount of local storage required for this EmptyDir volume.
// The size limit is also applicable for memory medium.
// The maximum usage on memory medium EmptyDir would be the minimum value between
// the SizeLimit specified here and the sum of memory limits of all containers in a pod.
// The default is nil which means that the limit is undefined.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput) SizeLimit() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEmptyDirPatch) interface{} {
		if v == nil {
			return nil
		}
		return v.SizeLimit
	}).(pulumi.AnyOutput)
}

// ephemeral represents a volume that is handled by a cluster storage driver.
// The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
// and deleted when the pod is removed.
//
// Use this if:
// a) the volume is only needed while the pod runs,
// b) features of normal volumes like restoring from snapshot or capacity
//
//	tracking are needed,
//
// c) the storage driver is specified through a storage class, and
// d) the storage driver supports dynamic volume provisioning through
//
//	a PersistentVolumeClaim (see EphemeralVolumeSource for more
//	information on the connection between this volume type
//	and PersistentVolumeClaim).
//
// Use PersistentVolumeClaim or one of the vendor-specific
// APIs for volumes that persist for longer than the lifecycle
// of an individual pod.
//
// Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
// be used that way - see the documentation of the driver for
// more information.
//
// A pod can use both types of ephemeral volumes and
// persistent volumes at the same time.
type PoolerSpecTemplateSpecVolumesEphemeral struct {
	VolumeClaimTemplate *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate `pulumi:"volumeClaimTemplate"`
}

// PoolerSpecTemplateSpecVolumesEphemeralInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralArgs and PoolerSpecTemplateSpecVolumesEphemeralOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralOutput() PoolerSpecTemplateSpecVolumesEphemeralOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralOutput
}

// ephemeral represents a volume that is handled by a cluster storage driver.
// The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
// and deleted when the pod is removed.
//
// Use this if:
// a) the volume is only needed while the pod runs,
// b) features of normal volumes like restoring from snapshot or capacity
//
//	tracking are needed,
//
// c) the storage driver is specified through a storage class, and
// d) the storage driver supports dynamic volume provisioning through
//
//	a PersistentVolumeClaim (see EphemeralVolumeSource for more
//	information on the connection between this volume type
//	and PersistentVolumeClaim).
//
// Use PersistentVolumeClaim or one of the vendor-specific
// APIs for volumes that persist for longer than the lifecycle
// of an individual pod.
//
// Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
// be used that way - see the documentation of the driver for
// more information.
//
// A pod can use both types of ephemeral volumes and
// persistent volumes at the same time.
type PoolerSpecTemplateSpecVolumesEphemeralArgs struct {
	VolumeClaimTemplate PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrInput `pulumi:"volumeClaimTemplate"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeral)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralArgs) ToPoolerSpecTemplateSpecVolumesEphemeralOutput() PoolerSpecTemplateSpecVolumesEphemeralOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralArgs) ToPoolerSpecTemplateSpecVolumesEphemeralOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralArgs) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralArgs) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralOutput).ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralArgs, PoolerSpecTemplateSpecVolumesEphemeralPtr and PoolerSpecTemplateSpecVolumesEphemeralPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralPtrType PoolerSpecTemplateSpecVolumesEphemeralArgs

func PoolerSpecTemplateSpecVolumesEphemeralPtr(v *PoolerSpecTemplateSpecVolumesEphemeralArgs) PoolerSpecTemplateSpecVolumesEphemeralPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeral)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralPtrOutput)
}

// ephemeral represents a volume that is handled by a cluster storage driver.
// The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
// and deleted when the pod is removed.
//
// Use this if:
// a) the volume is only needed while the pod runs,
// b) features of normal volumes like restoring from snapshot or capacity
//
//	tracking are needed,
//
// c) the storage driver is specified through a storage class, and
// d) the storage driver supports dynamic volume provisioning through
//
//	a PersistentVolumeClaim (see EphemeralVolumeSource for more
//	information on the connection between this volume type
//	and PersistentVolumeClaim).
//
// Use PersistentVolumeClaim or one of the vendor-specific
// APIs for volumes that persist for longer than the lifecycle
// of an individual pod.
//
// Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
// be used that way - see the documentation of the driver for
// more information.
//
// A pod can use both types of ephemeral volumes and
// persistent volumes at the same time.
type PoolerSpecTemplateSpecVolumesEphemeralOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeral)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralOutput) ToPoolerSpecTemplateSpecVolumesEphemeralOutput() PoolerSpecTemplateSpecVolumesEphemeralOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralOutput) ToPoolerSpecTemplateSpecVolumesEphemeralOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralOutput) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralOutput) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeral) *PoolerSpecTemplateSpecVolumesEphemeral {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralOutput) VolumeClaimTemplate() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeral) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate {
		return v.VolumeClaimTemplate
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeral)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeral) PoolerSpecTemplateSpecVolumesEphemeral {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeral
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPtrOutput) VolumeClaimTemplate() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeral) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate {
		if v == nil {
			return nil
		}
		return v.VolumeClaimTemplate
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput)
}

// ephemeral represents a volume that is handled by a cluster storage driver.
// The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
// and deleted when the pod is removed.
//
// Use this if:
// a) the volume is only needed while the pod runs,
// b) features of normal volumes like restoring from snapshot or capacity
//
//	tracking are needed,
//
// c) the storage driver is specified through a storage class, and
// d) the storage driver supports dynamic volume provisioning through
//
//	a PersistentVolumeClaim (see EphemeralVolumeSource for more
//	information on the connection between this volume type
//	and PersistentVolumeClaim).
//
// Use PersistentVolumeClaim or one of the vendor-specific
// APIs for volumes that persist for longer than the lifecycle
// of an individual pod.
//
// Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
// be used that way - see the documentation of the driver for
// more information.
//
// A pod can use both types of ephemeral volumes and
// persistent volumes at the same time.
type PoolerSpecTemplateSpecVolumesEphemeralPatch struct {
	VolumeClaimTemplate *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch `pulumi:"volumeClaimTemplate"`
}

// PoolerSpecTemplateSpecVolumesEphemeralPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralPatchArgs and PoolerSpecTemplateSpecVolumesEphemeralPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralPatchArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralPatchOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralPatchOutput
}

// ephemeral represents a volume that is handled by a cluster storage driver.
// The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
// and deleted when the pod is removed.
//
// Use this if:
// a) the volume is only needed while the pod runs,
// b) features of normal volumes like restoring from snapshot or capacity
//
//	tracking are needed,
//
// c) the storage driver is specified through a storage class, and
// d) the storage driver supports dynamic volume provisioning through
//
//	a PersistentVolumeClaim (see EphemeralVolumeSource for more
//	information on the connection between this volume type
//	and PersistentVolumeClaim).
//
// Use PersistentVolumeClaim or one of the vendor-specific
// APIs for volumes that persist for longer than the lifecycle
// of an individual pod.
//
// Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
// be used that way - see the documentation of the driver for
// more information.
//
// A pod can use both types of ephemeral volumes and
// persistent volumes at the same time.
type PoolerSpecTemplateSpecVolumesEphemeralPatchArgs struct {
	VolumeClaimTemplate PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrInput `pulumi:"volumeClaimTemplate"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralPatchOutput).ToPoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralPatchArgs, PoolerSpecTemplateSpecVolumesEphemeralPatchPtr and PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralPatchPtrType PoolerSpecTemplateSpecVolumesEphemeralPatchArgs

func PoolerSpecTemplateSpecVolumesEphemeralPatchPtr(v *PoolerSpecTemplateSpecVolumesEphemeralPatchArgs) PoolerSpecTemplateSpecVolumesEphemeralPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralPatchPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralPatchPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput)
}

// ephemeral represents a volume that is handled by a cluster storage driver.
// The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
// and deleted when the pod is removed.
//
// Use this if:
// a) the volume is only needed while the pod runs,
// b) features of normal volumes like restoring from snapshot or capacity
//
//	tracking are needed,
//
// c) the storage driver is specified through a storage class, and
// d) the storage driver supports dynamic volume provisioning through
//
//	a PersistentVolumeClaim (see EphemeralVolumeSource for more
//	information on the connection between this volume type
//	and PersistentVolumeClaim).
//
// Use PersistentVolumeClaim or one of the vendor-specific
// APIs for volumes that persist for longer than the lifecycle
// of an individual pod.
//
// Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
// be used that way - see the documentation of the driver for
// more information.
//
// A pod can use both types of ephemeral volumes and
// persistent volumes at the same time.
type PoolerSpecTemplateSpecVolumesEphemeralPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralPatch) *PoolerSpecTemplateSpecVolumesEphemeralPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPatchOutput) VolumeClaimTemplate() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralPatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch {
		return v.VolumeClaimTemplate
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralPatch) PoolerSpecTemplateSpecVolumesEphemeralPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralPatchOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput) VolumeClaimTemplate() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralPatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch {
		if v == nil {
			return nil
		}
		return v.VolumeClaimTemplate
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput)
}

// Will be used to create a stand-alone PVC to provision the volume.
// The pod in which this EphemeralVolumeSource is embedded will be the
// owner of the PVC, i.e. the PVC will be deleted together with the
// pod.  The name of the PVC will be `<pod name>-<volume name>` where
// `<volume name>` is the name from the `PodSpec.Volumes` array
// entry. Pod validation will reject the pod if the concatenated name
// is not valid for a PVC (for example, too long).
//
// An existing PVC with that name that is not owned by the pod
// will *not* be used for the pod to avoid using an unrelated
// volume by mistake. Starting the pod is then blocked until
// the unrelated PVC is removed. If such a pre-created PVC is
// meant to be used by the pod, the PVC has to updated with an
// owner reference to the pod once the pod exists. Normally
// this should not be necessary, but it may be useful when
// manually reconstructing a broken cluster.
//
// This field is read-only and no changes will be made by Kubernetes
// to the PVC after it has been created.
//
// Required, must not be nil.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate struct {
	// May contain labels and annotations that will be copied into the PVC
	// when creating it. No other fields are allowed and will be rejected during
	// validation.
	Metadata map[string]string                                              `pulumi:"metadata"`
	Spec     *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec `pulumi:"spec"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput
}

// Will be used to create a stand-alone PVC to provision the volume.
// The pod in which this EphemeralVolumeSource is embedded will be the
// owner of the PVC, i.e. the PVC will be deleted together with the
// pod.  The name of the PVC will be `<pod name>-<volume name>` where
// `<volume name>` is the name from the `PodSpec.Volumes` array
// entry. Pod validation will reject the pod if the concatenated name
// is not valid for a PVC (for example, too long).
//
// An existing PVC with that name that is not owned by the pod
// will *not* be used for the pod to avoid using an unrelated
// volume by mistake. Starting the pod is then blocked until
// the unrelated PVC is removed. If such a pre-created PVC is
// meant to be used by the pod, the PVC has to updated with an
// owner reference to the pod once the pod exists. Normally
// this should not be necessary, but it may be useful when
// manually reconstructing a broken cluster.
//
// This field is read-only and no changes will be made by Kubernetes
// to the PVC after it has been created.
//
// Required, must not be nil.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs struct {
	// May contain labels and annotations that will be copied into the PVC
	// when creating it. No other fields are allowed and will be rejected during
	// validation.
	Metadata pulumi.StringMapInput                                                 `pulumi:"metadata"`
	Spec     PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrInput `pulumi:"spec"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput)
}

// Will be used to create a stand-alone PVC to provision the volume.
// The pod in which this EphemeralVolumeSource is embedded will be the
// owner of the PVC, i.e. the PVC will be deleted together with the
// pod.  The name of the PVC will be `<pod name>-<volume name>` where
// `<volume name>` is the name from the `PodSpec.Volumes` array
// entry. Pod validation will reject the pod if the concatenated name
// is not valid for a PVC (for example, too long).
//
// An existing PVC with that name that is not owned by the pod
// will *not* be used for the pod to avoid using an unrelated
// volume by mistake. Starting the pod is then blocked until
// the unrelated PVC is removed. If such a pre-created PVC is
// meant to be used by the pod, the PVC has to updated with an
// owner reference to the pod once the pod exists. Normally
// this should not be necessary, but it may be useful when
// manually reconstructing a broken cluster.
//
// This field is read-only and no changes will be made by Kubernetes
// to the PVC after it has been created.
//
// Required, must not be nil.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput)
}

// May contain labels and annotations that will be copied into the PVC
// when creating it. No other fields are allowed and will be rejected during
// validation.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput) Spec() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec {
		return v.Spec
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput)
}

// May contain labels and annotations that will be copied into the PVC
// when creating it. No other fields are allowed and will be rejected during
// validation.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput) Spec() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput)
}

// Will be used to create a stand-alone PVC to provision the volume.
// The pod in which this EphemeralVolumeSource is embedded will be the
// owner of the PVC, i.e. the PVC will be deleted together with the
// pod.  The name of the PVC will be `<pod name>-<volume name>` where
// `<volume name>` is the name from the `PodSpec.Volumes` array
// entry. Pod validation will reject the pod if the concatenated name
// is not valid for a PVC (for example, too long).
//
// An existing PVC with that name that is not owned by the pod
// will *not* be used for the pod to avoid using an unrelated
// volume by mistake. Starting the pod is then blocked until
// the unrelated PVC is removed. If such a pre-created PVC is
// meant to be used by the pod, the PVC has to updated with an
// owner reference to the pod once the pod exists. Normally
// this should not be necessary, but it may be useful when
// manually reconstructing a broken cluster.
//
// This field is read-only and no changes will be made by Kubernetes
// to the PVC after it has been created.
//
// Required, must not be nil.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch struct {
	// May contain labels and annotations that will be copied into the PVC
	// when creating it. No other fields are allowed and will be rejected during
	// validation.
	Metadata map[string]string                                                   `pulumi:"metadata"`
	Spec     *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch `pulumi:"spec"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput
}

// Will be used to create a stand-alone PVC to provision the volume.
// The pod in which this EphemeralVolumeSource is embedded will be the
// owner of the PVC, i.e. the PVC will be deleted together with the
// pod.  The name of the PVC will be `<pod name>-<volume name>` where
// `<volume name>` is the name from the `PodSpec.Volumes` array
// entry. Pod validation will reject the pod if the concatenated name
// is not valid for a PVC (for example, too long).
//
// An existing PVC with that name that is not owned by the pod
// will *not* be used for the pod to avoid using an unrelated
// volume by mistake. Starting the pod is then blocked until
// the unrelated PVC is removed. If such a pre-created PVC is
// meant to be used by the pod, the PVC has to updated with an
// owner reference to the pod once the pod exists. Normally
// this should not be necessary, but it may be useful when
// manually reconstructing a broken cluster.
//
// This field is read-only and no changes will be made by Kubernetes
// to the PVC after it has been created.
//
// Required, must not be nil.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchArgs struct {
	// May contain labels and annotations that will be copied into the PVC
	// when creating it. No other fields are allowed and will be rejected during
	// validation.
	Metadata pulumi.StringMapInput                                                      `pulumi:"metadata"`
	Spec     PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrInput `pulumi:"spec"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput)
}

// Will be used to create a stand-alone PVC to provision the volume.
// The pod in which this EphemeralVolumeSource is embedded will be the
// owner of the PVC, i.e. the PVC will be deleted together with the
// pod.  The name of the PVC will be `<pod name>-<volume name>` where
// `<volume name>` is the name from the `PodSpec.Volumes` array
// entry. Pod validation will reject the pod if the concatenated name
// is not valid for a PVC (for example, too long).
//
// An existing PVC with that name that is not owned by the pod
// will *not* be used for the pod to avoid using an unrelated
// volume by mistake. Starting the pod is then blocked until
// the unrelated PVC is removed. If such a pre-created PVC is
// meant to be used by the pod, the PVC has to updated with an
// owner reference to the pod once the pod exists. Normally
// this should not be necessary, but it may be useful when
// manually reconstructing a broken cluster.
//
// This field is read-only and no changes will be made by Kubernetes
// to the PVC after it has been created.
//
// Required, must not be nil.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput)
}

// May contain labels and annotations that will be copied into the PVC
// when creating it. No other fields are allowed and will be rejected during
// validation.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch) map[string]string {
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput) Spec() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch {
		return v.Spec
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput)
}

// May contain labels and annotations that will be copied into the PVC
// when creating it. No other fields are allowed and will be rejected during
// validation.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput) Spec() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput)
}

// The specification for the PersistentVolumeClaim. The entire content is
// copied unchanged into the PVC that gets created from this
// template. The same fields as in a PersistentVolumeClaim
// are also valid here.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec struct {
	// accessModes contains the desired access modes the volume should have.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes   []string                                                                    `pulumi:"accessModes"`
	DataSource    *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource    `pulumi:"dataSource"`
	DataSourceRef *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef `pulumi:"dataSourceRef"`
	Resources     *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources     `pulumi:"resources"`
	Selector      *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector      `pulumi:"selector"`
	// storageClassName is the name of the StorageClass required by the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName *string `pulumi:"storageClassName"`
	// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
	// If specified, the CSI driver will create or update the volume with the attributes defined
	// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
	// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
	// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
	// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
	// will be set by the persistentvolume controller if it exists.
	// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
	// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
	// exists.
	// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
	// (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
	VolumeAttributesClassName *string `pulumi:"volumeAttributesClassName"`
	// volumeMode defines what type of volume is required by the claim.
	// Value of Filesystem is implied when not included in claim spec.
	VolumeMode *string `pulumi:"volumeMode"`
	// volumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName *string `pulumi:"volumeName"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput
}

// The specification for the PersistentVolumeClaim. The entire content is
// copied unchanged into the PVC that gets created from this
// template. The same fields as in a PersistentVolumeClaim
// are also valid here.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs struct {
	// accessModes contains the desired access modes the volume should have.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes   pulumi.StringArrayInput                                                            `pulumi:"accessModes"`
	DataSource    PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrInput    `pulumi:"dataSource"`
	DataSourceRef PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrInput `pulumi:"dataSourceRef"`
	Resources     PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrInput     `pulumi:"resources"`
	Selector      PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrInput      `pulumi:"selector"`
	// storageClassName is the name of the StorageClass required by the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName pulumi.StringPtrInput `pulumi:"storageClassName"`
	// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
	// If specified, the CSI driver will create or update the volume with the attributes defined
	// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
	// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
	// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
	// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
	// will be set by the persistentvolume controller if it exists.
	// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
	// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
	// exists.
	// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
	// (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
	VolumeAttributesClassName pulumi.StringPtrInput `pulumi:"volumeAttributesClassName"`
	// volumeMode defines what type of volume is required by the claim.
	// Value of Filesystem is implied when not included in claim spec.
	VolumeMode pulumi.StringPtrInput `pulumi:"volumeMode"`
	// volumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput)
}

// The specification for the PersistentVolumeClaim. The entire content is
// copied unchanged into the PVC that gets created from this
// template. The same fields as in a PersistentVolumeClaim
// are also valid here.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput)
}

// accessModes contains the desired access modes the volume should have.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) []string { return v.AccessModes }).(pulumi.StringArrayOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) DataSource() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
		return v.DataSource
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) DataSourceRef() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
		return v.DataSourceRef
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) Resources() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources {
		return v.Resources
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) Selector() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
		return v.Selector
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput)
}

// storageClassName is the name of the StorageClass required by the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string {
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
// If specified, the CSI driver will create or update the volume with the attributes defined
// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
// will be set by the persistentvolume controller if it exists.
// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
// exists.
// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
// (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) VolumeAttributesClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string {
		return v.VolumeAttributesClassName
	}).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim.
// Value of Filesystem is implied when not included in claim spec.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string { return v.VolumeMode }).(pulumi.StringPtrOutput)
}

// volumeName is the binding reference to the PersistentVolume backing this claim.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput)
}

// accessModes contains the desired access modes the volume should have.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) []string {
		if v == nil {
			return nil
		}
		return v.AccessModes
	}).(pulumi.StringArrayOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) DataSource() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) DataSourceRef() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
		if v == nil {
			return nil
		}
		return v.DataSourceRef
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) Resources() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) Selector() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput)
}

// storageClassName is the name of the StorageClass required by the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
// If specified, the CSI driver will create or update the volume with the attributes defined
// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
// will be set by the persistentvolume controller if it exists.
// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
// exists.
// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
// (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) VolumeAttributesClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeAttributesClassName
	}).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim.
// Value of Filesystem is implied when not included in claim spec.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeMode
	}).(pulumi.StringPtrOutput)
}

// volumeName is the binding reference to the PersistentVolume backing this claim.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind *string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name *string `pulumi:"name"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) *string {
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind *string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name *string `pulumi:"name"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchArgs struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch) *string {
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch) *string {
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind *string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name *string `pulumi:"name"`
	// Namespace is the namespace of resource being referenced
	// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
	// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	Namespace *string `pulumi:"namespace"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace is the namespace of resource being referenced
	// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
	// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *string {
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *string {
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of resource being referenced
// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of resource being referenced
// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind *string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name *string `pulumi:"name"`
	// Namespace is the namespace of resource being referenced
	// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
	// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	Namespace *string `pulumi:"namespace"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchArgs struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace is the namespace of resource being referenced
	// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
	// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch) *string {
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch) *string {
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of resource being referenced
// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of resource being referenced
// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The specification for the PersistentVolumeClaim. The entire content is
// copied unchanged into the PVC that gets created from this
// template. The same fields as in a PersistentVolumeClaim
// are also valid here.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch struct {
	// accessModes contains the desired access modes the volume should have.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes   []string                                                                         `pulumi:"accessModes"`
	DataSource    *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch    `pulumi:"dataSource"`
	DataSourceRef *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch `pulumi:"dataSourceRef"`
	Resources     *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch     `pulumi:"resources"`
	Selector      *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch      `pulumi:"selector"`
	// storageClassName is the name of the StorageClass required by the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName *string `pulumi:"storageClassName"`
	// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
	// If specified, the CSI driver will create or update the volume with the attributes defined
	// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
	// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
	// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
	// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
	// will be set by the persistentvolume controller if it exists.
	// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
	// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
	// exists.
	// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
	// (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
	VolumeAttributesClassName *string `pulumi:"volumeAttributesClassName"`
	// volumeMode defines what type of volume is required by the claim.
	// Value of Filesystem is implied when not included in claim spec.
	VolumeMode *string `pulumi:"volumeMode"`
	// volumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName *string `pulumi:"volumeName"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput
}

// The specification for the PersistentVolumeClaim. The entire content is
// copied unchanged into the PVC that gets created from this
// template. The same fields as in a PersistentVolumeClaim
// are also valid here.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchArgs struct {
	// accessModes contains the desired access modes the volume should have.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes   pulumi.StringArrayInput                                                                 `pulumi:"accessModes"`
	DataSource    PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrInput    `pulumi:"dataSource"`
	DataSourceRef PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrInput `pulumi:"dataSourceRef"`
	Resources     PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrInput     `pulumi:"resources"`
	Selector      PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrInput      `pulumi:"selector"`
	// storageClassName is the name of the StorageClass required by the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName pulumi.StringPtrInput `pulumi:"storageClassName"`
	// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
	// If specified, the CSI driver will create or update the volume with the attributes defined
	// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
	// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
	// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
	// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
	// will be set by the persistentvolume controller if it exists.
	// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
	// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
	// exists.
	// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
	// (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
	VolumeAttributesClassName pulumi.StringPtrInput `pulumi:"volumeAttributesClassName"`
	// volumeMode defines what type of volume is required by the claim.
	// Value of Filesystem is implied when not included in claim spec.
	VolumeMode pulumi.StringPtrInput `pulumi:"volumeMode"`
	// volumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput)
}

// The specification for the PersistentVolumeClaim. The entire content is
// copied unchanged into the PVC that gets created from this
// template. The same fields as in a PersistentVolumeClaim
// are also valid here.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput)
}

// accessModes contains the desired access modes the volume should have.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) []string {
		return v.AccessModes
	}).(pulumi.StringArrayOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput) DataSource() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch {
		return v.DataSource
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput) DataSourceRef() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch {
		return v.DataSourceRef
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput) Resources() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch {
		return v.Resources
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput) Selector() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch {
		return v.Selector
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput)
}

// storageClassName is the name of the StorageClass required by the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *string {
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
// If specified, the CSI driver will create or update the volume with the attributes defined
// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
// will be set by the persistentvolume controller if it exists.
// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
// exists.
// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
// (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput) VolumeAttributesClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *string {
		return v.VolumeAttributesClassName
	}).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim.
// Value of Filesystem is implied when not included in claim spec.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *string {
		return v.VolumeMode
	}).(pulumi.StringPtrOutput)
}

// volumeName is the binding reference to the PersistentVolume backing this claim.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *string {
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput)
}

// accessModes contains the desired access modes the volume should have.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.AccessModes
	}).(pulumi.StringArrayOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput) DataSource() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatch {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput) DataSourceRef() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatch {
		if v == nil {
			return nil
		}
		return v.DataSourceRef
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput) Resources() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput) Selector() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput)
}

// storageClassName is the name of the StorageClass required by the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
// If specified, the CSI driver will create or update the volume with the attributes defined
// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
// will be set by the persistentvolume controller if it exists.
// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
// exists.
// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
// (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput) VolumeAttributesClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.VolumeAttributesClassName
	}).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim.
// Value of Filesystem is implied when not included in claim spec.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.VolumeMode
	}).(pulumi.StringPtrOutput)
}

// volumeName is the binding reference to the PersistentVolume backing this claim.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources struct {
	// Limits describes the maximum amount of compute resources allowed.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits map[string]interface{} `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
	// otherwise to an implementation-defined value. Requests cannot exceed Limits.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests map[string]interface{} `pulumi:"requests"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs struct {
	// Limits describes the maximum amount of compute resources allowed.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits pulumi.MapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
	// otherwise to an implementation-defined value. Requests cannot exceed Limits.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests pulumi.MapInput `pulumi:"requests"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources) map[string]interface{} {
		return v.Limits
	}).(pulumi.MapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources) map[string]interface{} {
		return v.Requests
	}).(pulumi.MapOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.MapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.MapOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch struct {
	// Limits describes the maximum amount of compute resources allowed.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits map[string]interface{} `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
	// otherwise to an implementation-defined value. Requests cannot exceed Limits.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests map[string]interface{} `pulumi:"requests"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchArgs struct {
	// Limits describes the maximum amount of compute resources allowed.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits pulumi.MapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
	// otherwise to an implementation-defined value. Requests cannot exceed Limits.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests pulumi.MapInput `pulumi:"requests"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch) map[string]interface{} {
		return v.Limits
	}).(pulumi.MapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch) map[string]interface{} {
		return v.Requests
	}).(pulumi.MapOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.MapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.MapOutput)
}

// selector is a label query over volumes to consider for binding.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput
}

// selector is a label query over volumes to consider for binding.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput)
}

// selector is a label query over volumes to consider for binding.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput) MatchExpressions() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector) []PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
		return v.MatchExpressions
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput) MatchExpressions() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector) []PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArray and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArray{ PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs{...} }
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArray []PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInput

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArray) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArray) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
		return vs[0].([]PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatch struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArray and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArray{ PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArgs{...} }
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArray []PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchInput

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArray) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArray) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput {
	return o
}

// key is the label key that the selector applies to.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatch {
		return vs[0].([]PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput)
}

// selector is a label query over volumes to consider for binding.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput
}

// selector is a label query over volumes to consider for binding.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput)
}

// selector is a label query over volumes to consider for binding.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput) MatchExpressions() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch) []PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput) MatchExpressions() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch) []PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type PoolerSpecTemplateSpecVolumesFc struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// lun is Optional: FC target lun number
	Lun *int `pulumi:"lun"`
	// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// targetWWNs is Optional: FC target worldwide names (WWNs)
	TargetWWNs []string `pulumi:"targetWWNs"`
	// wwids Optional: FC volume world wide identifiers (wwids)
	// Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
	Wwids []string `pulumi:"wwids"`
}

// PoolerSpecTemplateSpecVolumesFcInput is an input type that accepts PoolerSpecTemplateSpecVolumesFcArgs and PoolerSpecTemplateSpecVolumesFcOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFcInput` via:
//
//	PoolerSpecTemplateSpecVolumesFcArgs{...}
type PoolerSpecTemplateSpecVolumesFcInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFcOutput() PoolerSpecTemplateSpecVolumesFcOutput
	ToPoolerSpecTemplateSpecVolumesFcOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFcOutput
}

// fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type PoolerSpecTemplateSpecVolumesFcArgs struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// lun is Optional: FC target lun number
	Lun pulumi.IntPtrInput `pulumi:"lun"`
	// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// targetWWNs is Optional: FC target worldwide names (WWNs)
	TargetWWNs pulumi.StringArrayInput `pulumi:"targetWWNs"`
	// wwids Optional: FC volume world wide identifiers (wwids)
	// Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
	Wwids pulumi.StringArrayInput `pulumi:"wwids"`
}

func (PoolerSpecTemplateSpecVolumesFcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFc)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesFcArgs) ToPoolerSpecTemplateSpecVolumesFcOutput() PoolerSpecTemplateSpecVolumesFcOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFcOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFcArgs) ToPoolerSpecTemplateSpecVolumesFcOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFcOutput)
}

func (i PoolerSpecTemplateSpecVolumesFcArgs) ToPoolerSpecTemplateSpecVolumesFcPtrOutput() PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFcArgs) ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFcOutput).ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesFcPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesFcArgs, PoolerSpecTemplateSpecVolumesFcPtr and PoolerSpecTemplateSpecVolumesFcPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFcPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesFcArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesFcPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFcPtrOutput() PoolerSpecTemplateSpecVolumesFcPtrOutput
	ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFcPtrOutput
}

type poolerSpecTemplateSpecVolumesFcPtrType PoolerSpecTemplateSpecVolumesFcArgs

func PoolerSpecTemplateSpecVolumesFcPtr(v *PoolerSpecTemplateSpecVolumesFcArgs) PoolerSpecTemplateSpecVolumesFcPtrInput {
	return (*poolerSpecTemplateSpecVolumesFcPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesFcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFc)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesFcPtrType) ToPoolerSpecTemplateSpecVolumesFcPtrOutput() PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesFcPtrType) ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFcPtrOutput)
}

// fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type PoolerSpecTemplateSpecVolumesFcOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFc)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFcOutput) ToPoolerSpecTemplateSpecVolumesFcOutput() PoolerSpecTemplateSpecVolumesFcOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFcOutput) ToPoolerSpecTemplateSpecVolumesFcOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFcOutput) ToPoolerSpecTemplateSpecVolumesFcPtrOutput() PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesFcOutput) ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesFc) *PoolerSpecTemplateSpecVolumesFc {
		return &v
	}).(PoolerSpecTemplateSpecVolumesFcPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesFcOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFc) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// lun is Optional: FC target lun number
func (o PoolerSpecTemplateSpecVolumesFcOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFc) *int { return v.Lun }).(pulumi.IntPtrOutput)
}

// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesFcOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFc) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// targetWWNs is Optional: FC target worldwide names (WWNs)
func (o PoolerSpecTemplateSpecVolumesFcOutput) TargetWWNs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFc) []string { return v.TargetWWNs }).(pulumi.StringArrayOutput)
}

// wwids Optional: FC volume world wide identifiers (wwids)
// Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
func (o PoolerSpecTemplateSpecVolumesFcOutput) Wwids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFc) []string { return v.Wwids }).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecVolumesFcPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFc)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) ToPoolerSpecTemplateSpecVolumesFcPtrOutput() PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) Elem() PoolerSpecTemplateSpecVolumesFcOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFc) PoolerSpecTemplateSpecVolumesFc {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesFc
		return ret
	}).(PoolerSpecTemplateSpecVolumesFcOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFc) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// lun is Optional: FC target lun number
func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFc) *int {
		if v == nil {
			return nil
		}
		return v.Lun
	}).(pulumi.IntPtrOutput)
}

// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFc) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// targetWWNs is Optional: FC target worldwide names (WWNs)
func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) TargetWWNs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFc) []string {
		if v == nil {
			return nil
		}
		return v.TargetWWNs
	}).(pulumi.StringArrayOutput)
}

// wwids Optional: FC volume world wide identifiers (wwids)
// Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) Wwids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFc) []string {
		if v == nil {
			return nil
		}
		return v.Wwids
	}).(pulumi.StringArrayOutput)
}

// fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type PoolerSpecTemplateSpecVolumesFcPatch struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// lun is Optional: FC target lun number
	Lun *int `pulumi:"lun"`
	// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// targetWWNs is Optional: FC target worldwide names (WWNs)
	TargetWWNs []string `pulumi:"targetWWNs"`
	// wwids Optional: FC volume world wide identifiers (wwids)
	// Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
	Wwids []string `pulumi:"wwids"`
}

// PoolerSpecTemplateSpecVolumesFcPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesFcPatchArgs and PoolerSpecTemplateSpecVolumesFcPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFcPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesFcPatchArgs{...}
type PoolerSpecTemplateSpecVolumesFcPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFcPatchOutput() PoolerSpecTemplateSpecVolumesFcPatchOutput
	ToPoolerSpecTemplateSpecVolumesFcPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFcPatchOutput
}

// fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type PoolerSpecTemplateSpecVolumesFcPatchArgs struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// lun is Optional: FC target lun number
	Lun pulumi.IntPtrInput `pulumi:"lun"`
	// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// targetWWNs is Optional: FC target worldwide names (WWNs)
	TargetWWNs pulumi.StringArrayInput `pulumi:"targetWWNs"`
	// wwids Optional: FC volume world wide identifiers (wwids)
	// Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
	Wwids pulumi.StringArrayInput `pulumi:"wwids"`
}

func (PoolerSpecTemplateSpecVolumesFcPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFcPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesFcPatchArgs) ToPoolerSpecTemplateSpecVolumesFcPatchOutput() PoolerSpecTemplateSpecVolumesFcPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFcPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFcPatchArgs) ToPoolerSpecTemplateSpecVolumesFcPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFcPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesFcPatchArgs) ToPoolerSpecTemplateSpecVolumesFcPatchPtrOutput() PoolerSpecTemplateSpecVolumesFcPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFcPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFcPatchArgs) ToPoolerSpecTemplateSpecVolumesFcPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFcPatchOutput).ToPoolerSpecTemplateSpecVolumesFcPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesFcPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesFcPatchArgs, PoolerSpecTemplateSpecVolumesFcPatchPtr and PoolerSpecTemplateSpecVolumesFcPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFcPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesFcPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesFcPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFcPatchPtrOutput() PoolerSpecTemplateSpecVolumesFcPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesFcPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFcPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesFcPatchPtrType PoolerSpecTemplateSpecVolumesFcPatchArgs

func PoolerSpecTemplateSpecVolumesFcPatchPtr(v *PoolerSpecTemplateSpecVolumesFcPatchArgs) PoolerSpecTemplateSpecVolumesFcPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesFcPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesFcPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFcPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesFcPatchPtrType) ToPoolerSpecTemplateSpecVolumesFcPatchPtrOutput() PoolerSpecTemplateSpecVolumesFcPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFcPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesFcPatchPtrType) ToPoolerSpecTemplateSpecVolumesFcPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFcPatchPtrOutput)
}

// fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type PoolerSpecTemplateSpecVolumesFcPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFcPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFcPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFcPatchOutput) ToPoolerSpecTemplateSpecVolumesFcPatchOutput() PoolerSpecTemplateSpecVolumesFcPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFcPatchOutput) ToPoolerSpecTemplateSpecVolumesFcPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFcPatchOutput) ToPoolerSpecTemplateSpecVolumesFcPatchPtrOutput() PoolerSpecTemplateSpecVolumesFcPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesFcPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesFcPatchOutput) ToPoolerSpecTemplateSpecVolumesFcPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesFcPatch) *PoolerSpecTemplateSpecVolumesFcPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesFcPatchPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesFcPatchOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFcPatch) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// lun is Optional: FC target lun number
func (o PoolerSpecTemplateSpecVolumesFcPatchOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFcPatch) *int { return v.Lun }).(pulumi.IntPtrOutput)
}

// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesFcPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFcPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// targetWWNs is Optional: FC target worldwide names (WWNs)
func (o PoolerSpecTemplateSpecVolumesFcPatchOutput) TargetWWNs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFcPatch) []string { return v.TargetWWNs }).(pulumi.StringArrayOutput)
}

// wwids Optional: FC volume world wide identifiers (wwids)
// Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
func (o PoolerSpecTemplateSpecVolumesFcPatchOutput) Wwids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFcPatch) []string { return v.Wwids }).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecVolumesFcPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFcPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFcPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFcPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesFcPatchPtrOutput() PoolerSpecTemplateSpecVolumesFcPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFcPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesFcPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFcPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesFcPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFcPatch) PoolerSpecTemplateSpecVolumesFcPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesFcPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesFcPatchOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesFcPatchPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFcPatch) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// lun is Optional: FC target lun number
func (o PoolerSpecTemplateSpecVolumesFcPatchPtrOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFcPatch) *int {
		if v == nil {
			return nil
		}
		return v.Lun
	}).(pulumi.IntPtrOutput)
}

// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesFcPatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFcPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// targetWWNs is Optional: FC target worldwide names (WWNs)
func (o PoolerSpecTemplateSpecVolumesFcPatchPtrOutput) TargetWWNs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFcPatch) []string {
		if v == nil {
			return nil
		}
		return v.TargetWWNs
	}).(pulumi.StringArrayOutput)
}

// wwids Optional: FC volume world wide identifiers (wwids)
// Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
func (o PoolerSpecTemplateSpecVolumesFcPatchPtrOutput) Wwids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFcPatch) []string {
		if v == nil {
			return nil
		}
		return v.Wwids
	}).(pulumi.StringArrayOutput)
}

// flexVolume represents a generic volume resource that is
// provisioned/attached using an exec based plugin.
// Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.
type PoolerSpecTemplateSpecVolumesFlexVolume struct {
	// driver is the name of the driver to use for this volume.
	Driver *string `pulumi:"driver"`
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
	FsType *string `pulumi:"fsType"`
	// options is Optional: this field holds extra command options if any.
	Options map[string]string `pulumi:"options"`
	// readOnly is Optional: defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly  *bool                                             `pulumi:"readOnly"`
	SecretRef *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef `pulumi:"secretRef"`
}

// PoolerSpecTemplateSpecVolumesFlexVolumeInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlexVolumeArgs and PoolerSpecTemplateSpecVolumesFlexVolumeOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlexVolumeInput` via:
//
//	PoolerSpecTemplateSpecVolumesFlexVolumeArgs{...}
type PoolerSpecTemplateSpecVolumesFlexVolumeInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlexVolumeOutput() PoolerSpecTemplateSpecVolumesFlexVolumeOutput
	ToPoolerSpecTemplateSpecVolumesFlexVolumeOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeOutput
}

// flexVolume represents a generic volume resource that is
// provisioned/attached using an exec based plugin.
// Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.
type PoolerSpecTemplateSpecVolumesFlexVolumeArgs struct {
	// driver is the name of the driver to use for this volume.
	Driver pulumi.StringPtrInput `pulumi:"driver"`
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// options is Optional: this field holds extra command options if any.
	Options pulumi.StringMapInput `pulumi:"options"`
	// readOnly is Optional: defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly  pulumi.BoolPtrInput                                      `pulumi:"readOnly"`
	SecretRef PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrInput `pulumi:"secretRef"`
}

func (PoolerSpecTemplateSpecVolumesFlexVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolume)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeOutput() PoolerSpecTemplateSpecVolumesFlexVolumeOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumeOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumeOutput)
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumeOutput).ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesFlexVolumePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlexVolumeArgs, PoolerSpecTemplateSpecVolumesFlexVolumePtr and PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlexVolumePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesFlexVolumeArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesFlexVolumePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput
	ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput
}

type poolerSpecTemplateSpecVolumesFlexVolumePtrType PoolerSpecTemplateSpecVolumesFlexVolumeArgs

func PoolerSpecTemplateSpecVolumesFlexVolumePtr(v *PoolerSpecTemplateSpecVolumesFlexVolumeArgs) PoolerSpecTemplateSpecVolumesFlexVolumePtrInput {
	return (*poolerSpecTemplateSpecVolumesFlexVolumePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesFlexVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlexVolume)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesFlexVolumePtrType) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesFlexVolumePtrType) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput)
}

// flexVolume represents a generic volume resource that is
// provisioned/attached using an exec based plugin.
// Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.
type PoolerSpecTemplateSpecVolumesFlexVolumeOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlexVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolume)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeOutput() PoolerSpecTemplateSpecVolumesFlexVolumeOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesFlexVolume) *PoolerSpecTemplateSpecVolumesFlexVolume {
		return &v
	}).(PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput)
}

// driver is the name of the driver to use for this volume.
func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolume) *string { return v.Driver }).(pulumi.StringPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolume) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// options is Optional: this field holds extra command options if any.
func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolume) map[string]string { return v.Options }).(pulumi.StringMapOutput)
}

// readOnly is Optional: defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolume) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) SecretRef() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolume) *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput)
}

type PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlexVolume)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) Elem() PoolerSpecTemplateSpecVolumesFlexVolumeOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolume) PoolerSpecTemplateSpecVolumesFlexVolume {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesFlexVolume
		return ret
	}).(PoolerSpecTemplateSpecVolumesFlexVolumeOutput)
}

// driver is the name of the driver to use for this volume.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolume) *string {
		if v == nil {
			return nil
		}
		return v.Driver
	}).(pulumi.StringPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolume) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// options is Optional: this field holds extra command options if any.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolume) map[string]string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringMapOutput)
}

// readOnly is Optional: defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolume) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolume) *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput)
}

// flexVolume represents a generic volume resource that is
// provisioned/attached using an exec based plugin.
// Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.
type PoolerSpecTemplateSpecVolumesFlexVolumePatch struct {
	// driver is the name of the driver to use for this volume.
	Driver *string `pulumi:"driver"`
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
	FsType *string `pulumi:"fsType"`
	// options is Optional: this field holds extra command options if any.
	Options map[string]string `pulumi:"options"`
	// readOnly is Optional: defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly  *bool                                                  `pulumi:"readOnly"`
	SecretRef *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch `pulumi:"secretRef"`
}

// PoolerSpecTemplateSpecVolumesFlexVolumePatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlexVolumePatchArgs and PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlexVolumePatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesFlexVolumePatchArgs{...}
type PoolerSpecTemplateSpecVolumesFlexVolumePatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlexVolumePatchOutput() PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput
	ToPoolerSpecTemplateSpecVolumesFlexVolumePatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput
}

// flexVolume represents a generic volume resource that is
// provisioned/attached using an exec based plugin.
// Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.
type PoolerSpecTemplateSpecVolumesFlexVolumePatchArgs struct {
	// driver is the name of the driver to use for this volume.
	Driver pulumi.StringPtrInput `pulumi:"driver"`
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// options is Optional: this field holds extra command options if any.
	Options pulumi.StringMapInput `pulumi:"options"`
	// readOnly is Optional: defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly  pulumi.BoolPtrInput                                           `pulumi:"readOnly"`
	SecretRef PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (PoolerSpecTemplateSpecVolumesFlexVolumePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumePatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumePatchArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumePatchOutput() PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumePatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumePatchArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumePatchArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumePatchArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput).ToPoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlexVolumePatchArgs, PoolerSpecTemplateSpecVolumesFlexVolumePatchPtr and PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesFlexVolumePatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput
}

type poolerSpecTemplateSpecVolumesFlexVolumePatchPtrType PoolerSpecTemplateSpecVolumesFlexVolumePatchArgs

func PoolerSpecTemplateSpecVolumesFlexVolumePatchPtr(v *PoolerSpecTemplateSpecVolumesFlexVolumePatchArgs) PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesFlexVolumePatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesFlexVolumePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlexVolumePatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesFlexVolumePatchPtrType) ToPoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesFlexVolumePatchPtrType) ToPoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput)
}

// flexVolume represents a generic volume resource that is
// provisioned/attached using an exec based plugin.
// Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.
type PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumePatchOutput() PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesFlexVolumePatch) *PoolerSpecTemplateSpecVolumesFlexVolumePatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput)
}

// driver is the name of the driver to use for this volume.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolumePatch) *string { return v.Driver }).(pulumi.StringPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolumePatch) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// options is Optional: this field holds extra command options if any.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolumePatch) map[string]string { return v.Options }).(pulumi.StringMapOutput)
}

// readOnly is Optional: defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolumePatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput) SecretRef() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolumePatch) *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput)
}

type PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlexVolumePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolumePatch) PoolerSpecTemplateSpecVolumesFlexVolumePatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesFlexVolumePatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput)
}

// driver is the name of the driver to use for this volume.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolumePatch) *string {
		if v == nil {
			return nil
		}
		return v.Driver
	}).(pulumi.StringPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolumePatch) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// options is Optional: this field holds extra command options if any.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolumePatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringMapOutput)
}

// readOnly is Optional: defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolumePatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolumePatch) *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput)
}

// secretRef is Optional: secretRef is reference to the secret object containing
// sensitive information to pass to the plugin scripts. This may be
// empty if no secret object is specified. If the secret object
// contains more than one secret, all secrets are passed to the plugin
// scripts.
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs and PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs{...}
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput
	ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput
}

// secretRef is Optional: secretRef is reference to the secret object containing
// sensitive information to pass to the plugin scripts. This may be
// empty if no secret object is specified. If the secret object
// contains more than one secret, all secrets are passed to the plugin
// scripts.
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput).ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs, PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtr and PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput
}

type poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrType PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs

func PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtr(v *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput)
}

// secretRef is Optional: secretRef is reference to the secret object containing
// sensitive information to pass to the plugin scripts. This may be
// empty if no secret object is specified. If the secret object
// contains more than one secret, all secrets are passed to the plugin
// scripts.
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef) *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// secretRef is Optional: secretRef is reference to the secret object containing
// sensitive information to pass to the plugin scripts. This may be
// empty if no secret object is specified. If the secret object
// contains more than one secret, all secrets are passed to the plugin
// scripts.
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchArgs and PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchArgs{...}
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput
	ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput
}

// secretRef is Optional: secretRef is reference to the secret object containing
// sensitive information to pass to the plugin scripts. This may be
// empty if no secret object is specified. If the secret object
// contains more than one secret, all secrets are passed to the plugin
// scripts.
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput).ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchArgs, PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtr and PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrType PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchArgs

func PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtr(v *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchArgs) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput)
}

// secretRef is Optional: secretRef is reference to the secret object containing
// sensitive information to pass to the plugin scripts. This may be
// empty if no secret object is specified. If the secret object
// contains more than one secret, all secrets are passed to the plugin
// scripts.
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch) *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.
// Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.
type PoolerSpecTemplateSpecVolumesFlocker struct {
	// datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
	// should be considered as deprecated
	DatasetName *string `pulumi:"datasetName"`
	// datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
	DatasetUUID *string `pulumi:"datasetUUID"`
}

// PoolerSpecTemplateSpecVolumesFlockerInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlockerArgs and PoolerSpecTemplateSpecVolumesFlockerOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlockerInput` via:
//
//	PoolerSpecTemplateSpecVolumesFlockerArgs{...}
type PoolerSpecTemplateSpecVolumesFlockerInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlockerOutput() PoolerSpecTemplateSpecVolumesFlockerOutput
	ToPoolerSpecTemplateSpecVolumesFlockerOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlockerOutput
}

// flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.
// Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.
type PoolerSpecTemplateSpecVolumesFlockerArgs struct {
	// datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
	// should be considered as deprecated
	DatasetName pulumi.StringPtrInput `pulumi:"datasetName"`
	// datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
	DatasetUUID pulumi.StringPtrInput `pulumi:"datasetUUID"`
}

func (PoolerSpecTemplateSpecVolumesFlockerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlocker)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesFlockerArgs) ToPoolerSpecTemplateSpecVolumesFlockerOutput() PoolerSpecTemplateSpecVolumesFlockerOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlockerOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlockerArgs) ToPoolerSpecTemplateSpecVolumesFlockerOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlockerOutput)
}

func (i PoolerSpecTemplateSpecVolumesFlockerArgs) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlockerArgs) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlockerOutput).ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesFlockerPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlockerArgs, PoolerSpecTemplateSpecVolumesFlockerPtr and PoolerSpecTemplateSpecVolumesFlockerPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlockerPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesFlockerArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesFlockerPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlockerPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPtrOutput
	ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlockerPtrOutput
}

type poolerSpecTemplateSpecVolumesFlockerPtrType PoolerSpecTemplateSpecVolumesFlockerArgs

func PoolerSpecTemplateSpecVolumesFlockerPtr(v *PoolerSpecTemplateSpecVolumesFlockerArgs) PoolerSpecTemplateSpecVolumesFlockerPtrInput {
	return (*poolerSpecTemplateSpecVolumesFlockerPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesFlockerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlocker)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesFlockerPtrType) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesFlockerPtrType) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlockerPtrOutput)
}

// flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.
// Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.
type PoolerSpecTemplateSpecVolumesFlockerOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlockerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlocker)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlockerOutput) ToPoolerSpecTemplateSpecVolumesFlockerOutput() PoolerSpecTemplateSpecVolumesFlockerOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlockerOutput) ToPoolerSpecTemplateSpecVolumesFlockerOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlockerOutput) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesFlockerOutput) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesFlocker) *PoolerSpecTemplateSpecVolumesFlocker {
		return &v
	}).(PoolerSpecTemplateSpecVolumesFlockerPtrOutput)
}

// datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
// should be considered as deprecated
func (o PoolerSpecTemplateSpecVolumesFlockerOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlocker) *string { return v.DatasetName }).(pulumi.StringPtrOutput)
}

// datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
func (o PoolerSpecTemplateSpecVolumesFlockerOutput) DatasetUUID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlocker) *string { return v.DatasetUUID }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesFlockerPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlockerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlocker)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlockerPtrOutput) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlockerPtrOutput) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlockerPtrOutput) Elem() PoolerSpecTemplateSpecVolumesFlockerOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlocker) PoolerSpecTemplateSpecVolumesFlocker {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesFlocker
		return ret
	}).(PoolerSpecTemplateSpecVolumesFlockerOutput)
}

// datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
// should be considered as deprecated
func (o PoolerSpecTemplateSpecVolumesFlockerPtrOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlocker) *string {
		if v == nil {
			return nil
		}
		return v.DatasetName
	}).(pulumi.StringPtrOutput)
}

// datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
func (o PoolerSpecTemplateSpecVolumesFlockerPtrOutput) DatasetUUID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlocker) *string {
		if v == nil {
			return nil
		}
		return v.DatasetUUID
	}).(pulumi.StringPtrOutput)
}

// flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.
// Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.
type PoolerSpecTemplateSpecVolumesFlockerPatch struct {
	// datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
	// should be considered as deprecated
	DatasetName *string `pulumi:"datasetName"`
	// datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
	DatasetUUID *string `pulumi:"datasetUUID"`
}

// PoolerSpecTemplateSpecVolumesFlockerPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlockerPatchArgs and PoolerSpecTemplateSpecVolumesFlockerPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlockerPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesFlockerPatchArgs{...}
type PoolerSpecTemplateSpecVolumesFlockerPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlockerPatchOutput() PoolerSpecTemplateSpecVolumesFlockerPatchOutput
	ToPoolerSpecTemplateSpecVolumesFlockerPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlockerPatchOutput
}

// flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.
// Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.
type PoolerSpecTemplateSpecVolumesFlockerPatchArgs struct {
	// datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
	// should be considered as deprecated
	DatasetName pulumi.StringPtrInput `pulumi:"datasetName"`
	// datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
	DatasetUUID pulumi.StringPtrInput `pulumi:"datasetUUID"`
}

func (PoolerSpecTemplateSpecVolumesFlockerPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlockerPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesFlockerPatchArgs) ToPoolerSpecTemplateSpecVolumesFlockerPatchOutput() PoolerSpecTemplateSpecVolumesFlockerPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlockerPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlockerPatchArgs) ToPoolerSpecTemplateSpecVolumesFlockerPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlockerPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesFlockerPatchArgs) ToPoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlockerPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlockerPatchArgs) ToPoolerSpecTemplateSpecVolumesFlockerPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlockerPatchOutput).ToPoolerSpecTemplateSpecVolumesFlockerPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesFlockerPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlockerPatchArgs, PoolerSpecTemplateSpecVolumesFlockerPatchPtr and PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlockerPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesFlockerPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesFlockerPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesFlockerPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesFlockerPatchPtrType PoolerSpecTemplateSpecVolumesFlockerPatchArgs

func PoolerSpecTemplateSpecVolumesFlockerPatchPtr(v *PoolerSpecTemplateSpecVolumesFlockerPatchArgs) PoolerSpecTemplateSpecVolumesFlockerPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesFlockerPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesFlockerPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlockerPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesFlockerPatchPtrType) ToPoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlockerPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesFlockerPatchPtrType) ToPoolerSpecTemplateSpecVolumesFlockerPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput)
}

// flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.
// Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.
type PoolerSpecTemplateSpecVolumesFlockerPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlockerPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlockerPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlockerPatchOutput) ToPoolerSpecTemplateSpecVolumesFlockerPatchOutput() PoolerSpecTemplateSpecVolumesFlockerPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlockerPatchOutput) ToPoolerSpecTemplateSpecVolumesFlockerPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlockerPatchOutput) ToPoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesFlockerPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesFlockerPatchOutput) ToPoolerSpecTemplateSpecVolumesFlockerPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesFlockerPatch) *PoolerSpecTemplateSpecVolumesFlockerPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput)
}

// datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
// should be considered as deprecated
func (o PoolerSpecTemplateSpecVolumesFlockerPatchOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlockerPatch) *string { return v.DatasetName }).(pulumi.StringPtrOutput)
}

// datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
func (o PoolerSpecTemplateSpecVolumesFlockerPatchOutput) DatasetUUID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlockerPatch) *string { return v.DatasetUUID }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlockerPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesFlockerPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesFlockerPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlockerPatch) PoolerSpecTemplateSpecVolumesFlockerPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesFlockerPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesFlockerPatchOutput)
}

// datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
// should be considered as deprecated
func (o PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlockerPatch) *string {
		if v == nil {
			return nil
		}
		return v.DatasetName
	}).(pulumi.StringPtrOutput)
}

// datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
func (o PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput) DatasetUUID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlockerPatch) *string {
		if v == nil {
			return nil
		}
		return v.DatasetUUID
	}).(pulumi.StringPtrOutput)
}

// gcePersistentDisk represents a GCE Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree
// gcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type PoolerSpecTemplateSpecVolumesGcePersistentDisk struct {
	// fsType is filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	FsType *string `pulumi:"fsType"`
	// partition is the partition in the volume that you want to mount.
	// If omitted, the default is to mount by volume name.
	// Examples: For volume /dev/sda1, you specify the partition as "1".
	// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	Partition *int `pulumi:"partition"`
	// pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	PdName *string `pulumi:"pdName"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	ReadOnly *bool `pulumi:"readOnly"`
}

// PoolerSpecTemplateSpecVolumesGcePersistentDiskInput is an input type that accepts PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs and PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGcePersistentDiskInput` via:
//
//	PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs{...}
type PoolerSpecTemplateSpecVolumesGcePersistentDiskInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGcePersistentDiskOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput
	ToPoolerSpecTemplateSpecVolumesGcePersistentDiskOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput
}

// gcePersistentDisk represents a GCE Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree
// gcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs struct {
	// fsType is filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// partition is the partition in the volume that you want to mount.
	// If omitted, the default is to mount by volume name.
	// Examples: For volume /dev/sda1, you specify the partition as "1".
	// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	Partition pulumi.IntPtrInput `pulumi:"partition"`
	// pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	PdName pulumi.StringPtrInput `pulumi:"pdName"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGcePersistentDisk)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGcePersistentDiskOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput)
}

func (i PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput).ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs, PoolerSpecTemplateSpecVolumesGcePersistentDiskPtr and PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput
	ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput
}

type poolerSpecTemplateSpecVolumesGcePersistentDiskPtrType PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs

func PoolerSpecTemplateSpecVolumesGcePersistentDiskPtr(v *PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs) PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrInput {
	return (*poolerSpecTemplateSpecVolumesGcePersistentDiskPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesGcePersistentDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGcePersistentDisk)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesGcePersistentDiskPtrType) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesGcePersistentDiskPtrType) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput)
}

// gcePersistentDisk represents a GCE Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree
// gcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGcePersistentDisk)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesGcePersistentDisk) *PoolerSpecTemplateSpecVolumesGcePersistentDisk {
		return &v
	}).(PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput)
}

// fsType is filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGcePersistentDisk) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// partition is the partition in the volume that you want to mount.
// If omitted, the default is to mount by volume name.
// Examples: For volume /dev/sda1, you specify the partition as "1".
// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGcePersistentDisk) *int { return v.Partition }).(pulumi.IntPtrOutput)
}

// pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) PdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGcePersistentDisk) *string { return v.PdName }).(pulumi.StringPtrOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGcePersistentDisk) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGcePersistentDisk)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) Elem() PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDisk) PoolerSpecTemplateSpecVolumesGcePersistentDisk {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesGcePersistentDisk
		return ret
	}).(PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput)
}

// fsType is filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDisk) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// partition is the partition in the volume that you want to mount.
// If omitted, the default is to mount by volume name.
// Examples: For volume /dev/sda1, you specify the partition as "1".
// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDisk) *int {
		if v == nil {
			return nil
		}
		return v.Partition
	}).(pulumi.IntPtrOutput)
}

// pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) PdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDisk) *string {
		if v == nil {
			return nil
		}
		return v.PdName
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDisk) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// gcePersistentDisk represents a GCE Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree
// gcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch struct {
	// fsType is filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	FsType *string `pulumi:"fsType"`
	// partition is the partition in the volume that you want to mount.
	// If omitted, the default is to mount by volume name.
	// Examples: For volume /dev/sda1, you specify the partition as "1".
	// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	Partition *int `pulumi:"partition"`
	// pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	PdName *string `pulumi:"pdName"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	ReadOnly *bool `pulumi:"readOnly"`
}

// PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchArgs and PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchArgs{...}
type PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput
	ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput
}

// gcePersistentDisk represents a GCE Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree
// gcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchArgs struct {
	// fsType is filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// partition is the partition in the volume that you want to mount.
	// If omitted, the default is to mount by volume name.
	// Examples: For volume /dev/sda1, you specify the partition as "1".
	// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	Partition pulumi.IntPtrInput `pulumi:"partition"`
	// pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	PdName pulumi.StringPtrInput `pulumi:"pdName"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchArgs) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchArgs) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchArgs) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchArgs) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput).ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchArgs, PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtr and PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrType PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchArgs

func PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtr(v *PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchArgs) PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrType) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrType) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput)
}

// gcePersistentDisk represents a GCE Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree
// gcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch) *PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput)
}

// fsType is filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// partition is the partition in the volume that you want to mount.
// If omitted, the default is to mount by volume name.
// Examples: For volume /dev/sda1, you specify the partition as "1".
// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch) *int { return v.Partition }).(pulumi.IntPtrOutput)
}

// pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput) PdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch) *string { return v.PdName }).(pulumi.StringPtrOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch) PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput)
}

// fsType is filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// partition is the partition in the volume that you want to mount.
// If omitted, the default is to mount by volume name.
// Examples: For volume /dev/sda1, you specify the partition as "1".
// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch) *int {
		if v == nil {
			return nil
		}
		return v.Partition
	}).(pulumi.IntPtrOutput)
}

// pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput) PdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch) *string {
		if v == nil {
			return nil
		}
		return v.PdName
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// gitRepo represents a git repository at a particular revision.
// Deprecated: GitRepo is deprecated. To provision a container with a git repo, mount an
// EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
// into the Pod's container.
type PoolerSpecTemplateSpecVolumesGitRepo struct {
	// directory is the target directory name.
	// Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
	// git repository.  Otherwise, if specified, the volume will contain the git repository in
	// the subdirectory with the given name.
	Directory *string `pulumi:"directory"`
	// repository is the URL
	Repository *string `pulumi:"repository"`
	// revision is the commit hash for the specified revision.
	Revision *string `pulumi:"revision"`
}

// PoolerSpecTemplateSpecVolumesGitRepoInput is an input type that accepts PoolerSpecTemplateSpecVolumesGitRepoArgs and PoolerSpecTemplateSpecVolumesGitRepoOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGitRepoInput` via:
//
//	PoolerSpecTemplateSpecVolumesGitRepoArgs{...}
type PoolerSpecTemplateSpecVolumesGitRepoInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGitRepoOutput() PoolerSpecTemplateSpecVolumesGitRepoOutput
	ToPoolerSpecTemplateSpecVolumesGitRepoOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGitRepoOutput
}

// gitRepo represents a git repository at a particular revision.
// Deprecated: GitRepo is deprecated. To provision a container with a git repo, mount an
// EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
// into the Pod's container.
type PoolerSpecTemplateSpecVolumesGitRepoArgs struct {
	// directory is the target directory name.
	// Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
	// git repository.  Otherwise, if specified, the volume will contain the git repository in
	// the subdirectory with the given name.
	Directory pulumi.StringPtrInput `pulumi:"directory"`
	// repository is the URL
	Repository pulumi.StringPtrInput `pulumi:"repository"`
	// revision is the commit hash for the specified revision.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
}

func (PoolerSpecTemplateSpecVolumesGitRepoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGitRepo)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesGitRepoArgs) ToPoolerSpecTemplateSpecVolumesGitRepoOutput() PoolerSpecTemplateSpecVolumesGitRepoOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGitRepoOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGitRepoArgs) ToPoolerSpecTemplateSpecVolumesGitRepoOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGitRepoOutput)
}

func (i PoolerSpecTemplateSpecVolumesGitRepoArgs) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGitRepoArgs) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGitRepoOutput).ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesGitRepoPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesGitRepoArgs, PoolerSpecTemplateSpecVolumesGitRepoPtr and PoolerSpecTemplateSpecVolumesGitRepoPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGitRepoPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesGitRepoArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesGitRepoPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPtrOutput
	ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGitRepoPtrOutput
}

type poolerSpecTemplateSpecVolumesGitRepoPtrType PoolerSpecTemplateSpecVolumesGitRepoArgs

func PoolerSpecTemplateSpecVolumesGitRepoPtr(v *PoolerSpecTemplateSpecVolumesGitRepoArgs) PoolerSpecTemplateSpecVolumesGitRepoPtrInput {
	return (*poolerSpecTemplateSpecVolumesGitRepoPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesGitRepoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGitRepo)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesGitRepoPtrType) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesGitRepoPtrType) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGitRepoPtrOutput)
}

// gitRepo represents a git repository at a particular revision.
// Deprecated: GitRepo is deprecated. To provision a container with a git repo, mount an
// EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
// into the Pod's container.
type PoolerSpecTemplateSpecVolumesGitRepoOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGitRepoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGitRepo)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGitRepoOutput) ToPoolerSpecTemplateSpecVolumesGitRepoOutput() PoolerSpecTemplateSpecVolumesGitRepoOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGitRepoOutput) ToPoolerSpecTemplateSpecVolumesGitRepoOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGitRepoOutput) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesGitRepoOutput) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesGitRepo) *PoolerSpecTemplateSpecVolumesGitRepo {
		return &v
	}).(PoolerSpecTemplateSpecVolumesGitRepoPtrOutput)
}

// directory is the target directory name.
// Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
// git repository.  Otherwise, if specified, the volume will contain the git repository in
// the subdirectory with the given name.
func (o PoolerSpecTemplateSpecVolumesGitRepoOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGitRepo) *string { return v.Directory }).(pulumi.StringPtrOutput)
}

// repository is the URL
func (o PoolerSpecTemplateSpecVolumesGitRepoOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGitRepo) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

// revision is the commit hash for the specified revision.
func (o PoolerSpecTemplateSpecVolumesGitRepoOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGitRepo) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesGitRepoPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGitRepoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGitRepo)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGitRepoPtrOutput) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGitRepoPtrOutput) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGitRepoPtrOutput) Elem() PoolerSpecTemplateSpecVolumesGitRepoOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGitRepo) PoolerSpecTemplateSpecVolumesGitRepo {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesGitRepo
		return ret
	}).(PoolerSpecTemplateSpecVolumesGitRepoOutput)
}

// directory is the target directory name.
// Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
// git repository.  Otherwise, if specified, the volume will contain the git repository in
// the subdirectory with the given name.
func (o PoolerSpecTemplateSpecVolumesGitRepoPtrOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGitRepo) *string {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(pulumi.StringPtrOutput)
}

// repository is the URL
func (o PoolerSpecTemplateSpecVolumesGitRepoPtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGitRepo) *string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringPtrOutput)
}

// revision is the commit hash for the specified revision.
func (o PoolerSpecTemplateSpecVolumesGitRepoPtrOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGitRepo) *string {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.StringPtrOutput)
}

// gitRepo represents a git repository at a particular revision.
// Deprecated: GitRepo is deprecated. To provision a container with a git repo, mount an
// EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
// into the Pod's container.
type PoolerSpecTemplateSpecVolumesGitRepoPatch struct {
	// directory is the target directory name.
	// Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
	// git repository.  Otherwise, if specified, the volume will contain the git repository in
	// the subdirectory with the given name.
	Directory *string `pulumi:"directory"`
	// repository is the URL
	Repository *string `pulumi:"repository"`
	// revision is the commit hash for the specified revision.
	Revision *string `pulumi:"revision"`
}

// PoolerSpecTemplateSpecVolumesGitRepoPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesGitRepoPatchArgs and PoolerSpecTemplateSpecVolumesGitRepoPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGitRepoPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesGitRepoPatchArgs{...}
type PoolerSpecTemplateSpecVolumesGitRepoPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGitRepoPatchOutput() PoolerSpecTemplateSpecVolumesGitRepoPatchOutput
	ToPoolerSpecTemplateSpecVolumesGitRepoPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGitRepoPatchOutput
}

// gitRepo represents a git repository at a particular revision.
// Deprecated: GitRepo is deprecated. To provision a container with a git repo, mount an
// EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
// into the Pod's container.
type PoolerSpecTemplateSpecVolumesGitRepoPatchArgs struct {
	// directory is the target directory name.
	// Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
	// git repository.  Otherwise, if specified, the volume will contain the git repository in
	// the subdirectory with the given name.
	Directory pulumi.StringPtrInput `pulumi:"directory"`
	// repository is the URL
	Repository pulumi.StringPtrInput `pulumi:"repository"`
	// revision is the commit hash for the specified revision.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
}

func (PoolerSpecTemplateSpecVolumesGitRepoPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGitRepoPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesGitRepoPatchArgs) ToPoolerSpecTemplateSpecVolumesGitRepoPatchOutput() PoolerSpecTemplateSpecVolumesGitRepoPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGitRepoPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGitRepoPatchArgs) ToPoolerSpecTemplateSpecVolumesGitRepoPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGitRepoPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesGitRepoPatchArgs) ToPoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGitRepoPatchArgs) ToPoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGitRepoPatchOutput).ToPoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesGitRepoPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesGitRepoPatchArgs, PoolerSpecTemplateSpecVolumesGitRepoPatchPtr and PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGitRepoPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesGitRepoPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesGitRepoPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesGitRepoPatchPtrType PoolerSpecTemplateSpecVolumesGitRepoPatchArgs

func PoolerSpecTemplateSpecVolumesGitRepoPatchPtr(v *PoolerSpecTemplateSpecVolumesGitRepoPatchArgs) PoolerSpecTemplateSpecVolumesGitRepoPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesGitRepoPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesGitRepoPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGitRepoPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesGitRepoPatchPtrType) ToPoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesGitRepoPatchPtrType) ToPoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput)
}

// gitRepo represents a git repository at a particular revision.
// Deprecated: GitRepo is deprecated. To provision a container with a git repo, mount an
// EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
// into the Pod's container.
type PoolerSpecTemplateSpecVolumesGitRepoPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGitRepoPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGitRepoPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGitRepoPatchOutput) ToPoolerSpecTemplateSpecVolumesGitRepoPatchOutput() PoolerSpecTemplateSpecVolumesGitRepoPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGitRepoPatchOutput) ToPoolerSpecTemplateSpecVolumesGitRepoPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGitRepoPatchOutput) ToPoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesGitRepoPatchOutput) ToPoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesGitRepoPatch) *PoolerSpecTemplateSpecVolumesGitRepoPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput)
}

// directory is the target directory name.
// Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
// git repository.  Otherwise, if specified, the volume will contain the git repository in
// the subdirectory with the given name.
func (o PoolerSpecTemplateSpecVolumesGitRepoPatchOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGitRepoPatch) *string { return v.Directory }).(pulumi.StringPtrOutput)
}

// repository is the URL
func (o PoolerSpecTemplateSpecVolumesGitRepoPatchOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGitRepoPatch) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

// revision is the commit hash for the specified revision.
func (o PoolerSpecTemplateSpecVolumesGitRepoPatchOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGitRepoPatch) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGitRepoPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesGitRepoPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGitRepoPatch) PoolerSpecTemplateSpecVolumesGitRepoPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesGitRepoPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesGitRepoPatchOutput)
}

// directory is the target directory name.
// Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
// git repository.  Otherwise, if specified, the volume will contain the git repository in
// the subdirectory with the given name.
func (o PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGitRepoPatch) *string {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(pulumi.StringPtrOutput)
}

// repository is the URL
func (o PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGitRepoPatch) *string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringPtrOutput)
}

// revision is the commit hash for the specified revision.
func (o PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGitRepoPatch) *string {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.StringPtrOutput)
}

// glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
// Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md
type PoolerSpecTemplateSpecVolumesGlusterfs struct {
	// endpoints is the endpoint name that details Glusterfs topology.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Endpoints *string `pulumi:"endpoints"`
	// path is the Glusterfs volume path.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Path *string `pulumi:"path"`
	// readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
	// Defaults to false.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	ReadOnly *bool `pulumi:"readOnly"`
}

// PoolerSpecTemplateSpecVolumesGlusterfsInput is an input type that accepts PoolerSpecTemplateSpecVolumesGlusterfsArgs and PoolerSpecTemplateSpecVolumesGlusterfsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGlusterfsInput` via:
//
//	PoolerSpecTemplateSpecVolumesGlusterfsArgs{...}
type PoolerSpecTemplateSpecVolumesGlusterfsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGlusterfsOutput() PoolerSpecTemplateSpecVolumesGlusterfsOutput
	ToPoolerSpecTemplateSpecVolumesGlusterfsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGlusterfsOutput
}

// glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
// Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md
type PoolerSpecTemplateSpecVolumesGlusterfsArgs struct {
	// endpoints is the endpoint name that details Glusterfs topology.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Endpoints pulumi.StringPtrInput `pulumi:"endpoints"`
	// path is the Glusterfs volume path.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Path pulumi.StringPtrInput `pulumi:"path"`
	// readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
	// Defaults to false.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (PoolerSpecTemplateSpecVolumesGlusterfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGlusterfs)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesGlusterfsArgs) ToPoolerSpecTemplateSpecVolumesGlusterfsOutput() PoolerSpecTemplateSpecVolumesGlusterfsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGlusterfsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGlusterfsArgs) ToPoolerSpecTemplateSpecVolumesGlusterfsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGlusterfsOutput)
}

func (i PoolerSpecTemplateSpecVolumesGlusterfsArgs) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGlusterfsArgs) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGlusterfsOutput).ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesGlusterfsPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesGlusterfsArgs, PoolerSpecTemplateSpecVolumesGlusterfsPtr and PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGlusterfsPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesGlusterfsArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesGlusterfsPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput
	ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput
}

type poolerSpecTemplateSpecVolumesGlusterfsPtrType PoolerSpecTemplateSpecVolumesGlusterfsArgs

func PoolerSpecTemplateSpecVolumesGlusterfsPtr(v *PoolerSpecTemplateSpecVolumesGlusterfsArgs) PoolerSpecTemplateSpecVolumesGlusterfsPtrInput {
	return (*poolerSpecTemplateSpecVolumesGlusterfsPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesGlusterfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGlusterfs)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesGlusterfsPtrType) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesGlusterfsPtrType) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput)
}

// glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
// Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md
type PoolerSpecTemplateSpecVolumesGlusterfsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGlusterfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGlusterfs)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsOutput() PoolerSpecTemplateSpecVolumesGlusterfsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesGlusterfs) *PoolerSpecTemplateSpecVolumesGlusterfs {
		return &v
	}).(PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput)
}

// endpoints is the endpoint name that details Glusterfs topology.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsOutput) Endpoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGlusterfs) *string { return v.Endpoints }).(pulumi.StringPtrOutput)
}

// path is the Glusterfs volume path.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGlusterfs) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
// Defaults to false.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGlusterfs) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGlusterfs)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput) Elem() PoolerSpecTemplateSpecVolumesGlusterfsOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGlusterfs) PoolerSpecTemplateSpecVolumesGlusterfs {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesGlusterfs
		return ret
	}).(PoolerSpecTemplateSpecVolumesGlusterfsOutput)
}

// endpoints is the endpoint name that details Glusterfs topology.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput) Endpoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGlusterfs) *string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringPtrOutput)
}

// path is the Glusterfs volume path.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGlusterfs) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
// Defaults to false.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGlusterfs) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
// Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md
type PoolerSpecTemplateSpecVolumesGlusterfsPatch struct {
	// endpoints is the endpoint name that details Glusterfs topology.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Endpoints *string `pulumi:"endpoints"`
	// path is the Glusterfs volume path.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Path *string `pulumi:"path"`
	// readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
	// Defaults to false.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	ReadOnly *bool `pulumi:"readOnly"`
}

// PoolerSpecTemplateSpecVolumesGlusterfsPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesGlusterfsPatchArgs and PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGlusterfsPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesGlusterfsPatchArgs{...}
type PoolerSpecTemplateSpecVolumesGlusterfsPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGlusterfsPatchOutput() PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput
	ToPoolerSpecTemplateSpecVolumesGlusterfsPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput
}

// glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
// Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md
type PoolerSpecTemplateSpecVolumesGlusterfsPatchArgs struct {
	// endpoints is the endpoint name that details Glusterfs topology.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Endpoints pulumi.StringPtrInput `pulumi:"endpoints"`
	// path is the Glusterfs volume path.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Path pulumi.StringPtrInput `pulumi:"path"`
	// readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
	// Defaults to false.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (PoolerSpecTemplateSpecVolumesGlusterfsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGlusterfsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesGlusterfsPatchArgs) ToPoolerSpecTemplateSpecVolumesGlusterfsPatchOutput() PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGlusterfsPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGlusterfsPatchArgs) ToPoolerSpecTemplateSpecVolumesGlusterfsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesGlusterfsPatchArgs) ToPoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGlusterfsPatchArgs) ToPoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput).ToPoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesGlusterfsPatchArgs, PoolerSpecTemplateSpecVolumesGlusterfsPatchPtr and PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesGlusterfsPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesGlusterfsPatchPtrType PoolerSpecTemplateSpecVolumesGlusterfsPatchArgs

func PoolerSpecTemplateSpecVolumesGlusterfsPatchPtr(v *PoolerSpecTemplateSpecVolumesGlusterfsPatchArgs) PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesGlusterfsPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesGlusterfsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGlusterfsPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesGlusterfsPatchPtrType) ToPoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesGlusterfsPatchPtrType) ToPoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput)
}

// glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
// Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md
type PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGlusterfsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsPatchOutput() PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesGlusterfsPatch) *PoolerSpecTemplateSpecVolumesGlusterfsPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput)
}

// endpoints is the endpoint name that details Glusterfs topology.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput) Endpoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGlusterfsPatch) *string { return v.Endpoints }).(pulumi.StringPtrOutput)
}

// path is the Glusterfs volume path.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGlusterfsPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
// Defaults to false.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGlusterfsPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGlusterfsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGlusterfsPatch) PoolerSpecTemplateSpecVolumesGlusterfsPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesGlusterfsPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput)
}

// endpoints is the endpoint name that details Glusterfs topology.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput) Endpoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGlusterfsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringPtrOutput)
}

// path is the Glusterfs volume path.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGlusterfsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
// Defaults to false.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGlusterfsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// hostPath represents a pre-existing file or directory on the host
// machine that is directly exposed to the container. This is generally
// used for system agents or other privileged things that are allowed
// to see the host machine. Most containers will NOT need this.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
type PoolerSpecTemplateSpecVolumesHostPath struct {
	// path of the directory on the host.
	// If the path is a symlink, it will follow the link to the real path.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Path *string `pulumi:"path"`
	// type for HostPath Volume
	// Defaults to ""
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Type *string `pulumi:"type"`
}

// PoolerSpecTemplateSpecVolumesHostPathInput is an input type that accepts PoolerSpecTemplateSpecVolumesHostPathArgs and PoolerSpecTemplateSpecVolumesHostPathOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesHostPathInput` via:
//
//	PoolerSpecTemplateSpecVolumesHostPathArgs{...}
type PoolerSpecTemplateSpecVolumesHostPathInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesHostPathOutput() PoolerSpecTemplateSpecVolumesHostPathOutput
	ToPoolerSpecTemplateSpecVolumesHostPathOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesHostPathOutput
}

// hostPath represents a pre-existing file or directory on the host
// machine that is directly exposed to the container. This is generally
// used for system agents or other privileged things that are allowed
// to see the host machine. Most containers will NOT need this.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
type PoolerSpecTemplateSpecVolumesHostPathArgs struct {
	// path of the directory on the host.
	// If the path is a symlink, it will follow the link to the real path.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Path pulumi.StringPtrInput `pulumi:"path"`
	// type for HostPath Volume
	// Defaults to ""
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PoolerSpecTemplateSpecVolumesHostPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesHostPath)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesHostPathArgs) ToPoolerSpecTemplateSpecVolumesHostPathOutput() PoolerSpecTemplateSpecVolumesHostPathOutput {
	return i.ToPoolerSpecTemplateSpecVolumesHostPathOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesHostPathArgs) ToPoolerSpecTemplateSpecVolumesHostPathOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesHostPathOutput)
}

func (i PoolerSpecTemplateSpecVolumesHostPathArgs) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesHostPathArgs) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesHostPathOutput).ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesHostPathPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesHostPathArgs, PoolerSpecTemplateSpecVolumesHostPathPtr and PoolerSpecTemplateSpecVolumesHostPathPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesHostPathPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesHostPathArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesHostPathPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesHostPathPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPtrOutput
	ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesHostPathPtrOutput
}

type poolerSpecTemplateSpecVolumesHostPathPtrType PoolerSpecTemplateSpecVolumesHostPathArgs

func PoolerSpecTemplateSpecVolumesHostPathPtr(v *PoolerSpecTemplateSpecVolumesHostPathArgs) PoolerSpecTemplateSpecVolumesHostPathPtrInput {
	return (*poolerSpecTemplateSpecVolumesHostPathPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesHostPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesHostPath)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesHostPathPtrType) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesHostPathPtrType) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesHostPathPtrOutput)
}

// hostPath represents a pre-existing file or directory on the host
// machine that is directly exposed to the container. This is generally
// used for system agents or other privileged things that are allowed
// to see the host machine. Most containers will NOT need this.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
type PoolerSpecTemplateSpecVolumesHostPathOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesHostPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesHostPath)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesHostPathOutput) ToPoolerSpecTemplateSpecVolumesHostPathOutput() PoolerSpecTemplateSpecVolumesHostPathOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesHostPathOutput) ToPoolerSpecTemplateSpecVolumesHostPathOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesHostPathOutput) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesHostPathOutput) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesHostPath) *PoolerSpecTemplateSpecVolumesHostPath {
		return &v
	}).(PoolerSpecTemplateSpecVolumesHostPathPtrOutput)
}

// path of the directory on the host.
// If the path is a symlink, it will follow the link to the real path.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o PoolerSpecTemplateSpecVolumesHostPathOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesHostPath) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// type for HostPath Volume
// Defaults to ""
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o PoolerSpecTemplateSpecVolumesHostPathOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesHostPath) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesHostPathPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesHostPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesHostPath)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesHostPathPtrOutput) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesHostPathPtrOutput) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesHostPathPtrOutput) Elem() PoolerSpecTemplateSpecVolumesHostPathOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesHostPath) PoolerSpecTemplateSpecVolumesHostPath {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesHostPath
		return ret
	}).(PoolerSpecTemplateSpecVolumesHostPathOutput)
}

// path of the directory on the host.
// If the path is a symlink, it will follow the link to the real path.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o PoolerSpecTemplateSpecVolumesHostPathPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesHostPath) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// type for HostPath Volume
// Defaults to ""
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o PoolerSpecTemplateSpecVolumesHostPathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesHostPath) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// hostPath represents a pre-existing file or directory on the host
// machine that is directly exposed to the container. This is generally
// used for system agents or other privileged things that are allowed
// to see the host machine. Most containers will NOT need this.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
type PoolerSpecTemplateSpecVolumesHostPathPatch struct {
	// path of the directory on the host.
	// If the path is a symlink, it will follow the link to the real path.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Path *string `pulumi:"path"`
	// type for HostPath Volume
	// Defaults to ""
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Type *string `pulumi:"type"`
}

// PoolerSpecTemplateSpecVolumesHostPathPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesHostPathPatchArgs and PoolerSpecTemplateSpecVolumesHostPathPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesHostPathPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesHostPathPatchArgs{...}
type PoolerSpecTemplateSpecVolumesHostPathPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesHostPathPatchOutput() PoolerSpecTemplateSpecVolumesHostPathPatchOutput
	ToPoolerSpecTemplateSpecVolumesHostPathPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesHostPathPatchOutput
}

// hostPath represents a pre-existing file or directory on the host
// machine that is directly exposed to the container. This is generally
// used for system agents or other privileged things that are allowed
// to see the host machine. Most containers will NOT need this.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
type PoolerSpecTemplateSpecVolumesHostPathPatchArgs struct {
	// path of the directory on the host.
	// If the path is a symlink, it will follow the link to the real path.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Path pulumi.StringPtrInput `pulumi:"path"`
	// type for HostPath Volume
	// Defaults to ""
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PoolerSpecTemplateSpecVolumesHostPathPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesHostPathPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesHostPathPatchArgs) ToPoolerSpecTemplateSpecVolumesHostPathPatchOutput() PoolerSpecTemplateSpecVolumesHostPathPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesHostPathPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesHostPathPatchArgs) ToPoolerSpecTemplateSpecVolumesHostPathPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesHostPathPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesHostPathPatchArgs) ToPoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesHostPathPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesHostPathPatchArgs) ToPoolerSpecTemplateSpecVolumesHostPathPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesHostPathPatchOutput).ToPoolerSpecTemplateSpecVolumesHostPathPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesHostPathPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesHostPathPatchArgs, PoolerSpecTemplateSpecVolumesHostPathPatchPtr and PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesHostPathPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesHostPathPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesHostPathPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesHostPathPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesHostPathPatchPtrType PoolerSpecTemplateSpecVolumesHostPathPatchArgs

func PoolerSpecTemplateSpecVolumesHostPathPatchPtr(v *PoolerSpecTemplateSpecVolumesHostPathPatchArgs) PoolerSpecTemplateSpecVolumesHostPathPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesHostPathPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesHostPathPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesHostPathPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesHostPathPatchPtrType) ToPoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesHostPathPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesHostPathPatchPtrType) ToPoolerSpecTemplateSpecVolumesHostPathPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput)
}

// hostPath represents a pre-existing file or directory on the host
// machine that is directly exposed to the container. This is generally
// used for system agents or other privileged things that are allowed
// to see the host machine. Most containers will NOT need this.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
type PoolerSpecTemplateSpecVolumesHostPathPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesHostPathPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesHostPathPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesHostPathPatchOutput) ToPoolerSpecTemplateSpecVolumesHostPathPatchOutput() PoolerSpecTemplateSpecVolumesHostPathPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesHostPathPatchOutput) ToPoolerSpecTemplateSpecVolumesHostPathPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesHostPathPatchOutput) ToPoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesHostPathPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesHostPathPatchOutput) ToPoolerSpecTemplateSpecVolumesHostPathPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesHostPathPatch) *PoolerSpecTemplateSpecVolumesHostPathPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput)
}

// path of the directory on the host.
// If the path is a symlink, it will follow the link to the real path.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o PoolerSpecTemplateSpecVolumesHostPathPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesHostPathPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// type for HostPath Volume
// Defaults to ""
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o PoolerSpecTemplateSpecVolumesHostPathPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesHostPathPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesHostPathPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesHostPathPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesHostPathPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesHostPathPatch) PoolerSpecTemplateSpecVolumesHostPathPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesHostPathPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesHostPathPatchOutput)
}

// path of the directory on the host.
// If the path is a symlink, it will follow the link to the real path.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesHostPathPatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// type for HostPath Volume
// Defaults to ""
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesHostPathPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
// The volume is resolved at pod startup depending on which PullPolicy value is provided:
//
// - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
// - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
// - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
//
// The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
// A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
// The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
// The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
// The volume will be mounted read-only (ro) and non-executable files (noexec).
// Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).
// The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
type PoolerSpecTemplateSpecVolumesImage struct {
	// Policy for pulling OCI objects. Possible values are:
	// Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
	// Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
	// IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
	// Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
	PullPolicy *string `pulumi:"pullPolicy"`
	// Required: Image or artifact reference to be used.
	// Behaves in the same way as pod.spec.containers[*].image.
	// Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
	// More info: https://kubernetes.io/docs/concepts/containers/images
	// This field is optional to allow higher level config management to default or override
	// container images in workload controllers like Deployments and StatefulSets.
	Reference *string `pulumi:"reference"`
}

// PoolerSpecTemplateSpecVolumesImageInput is an input type that accepts PoolerSpecTemplateSpecVolumesImageArgs and PoolerSpecTemplateSpecVolumesImageOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesImageInput` via:
//
//	PoolerSpecTemplateSpecVolumesImageArgs{...}
type PoolerSpecTemplateSpecVolumesImageInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesImageOutput() PoolerSpecTemplateSpecVolumesImageOutput
	ToPoolerSpecTemplateSpecVolumesImageOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesImageOutput
}

// image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
// The volume is resolved at pod startup depending on which PullPolicy value is provided:
//
// - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
// - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
// - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
//
// The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
// A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
// The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
// The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
// The volume will be mounted read-only (ro) and non-executable files (noexec).
// Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).
// The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
type PoolerSpecTemplateSpecVolumesImageArgs struct {
	// Policy for pulling OCI objects. Possible values are:
	// Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
	// Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
	// IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
	// Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
	PullPolicy pulumi.StringPtrInput `pulumi:"pullPolicy"`
	// Required: Image or artifact reference to be used.
	// Behaves in the same way as pod.spec.containers[*].image.
	// Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
	// More info: https://kubernetes.io/docs/concepts/containers/images
	// This field is optional to allow higher level config management to default or override
	// container images in workload controllers like Deployments and StatefulSets.
	Reference pulumi.StringPtrInput `pulumi:"reference"`
}

func (PoolerSpecTemplateSpecVolumesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesImage)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesImageArgs) ToPoolerSpecTemplateSpecVolumesImageOutput() PoolerSpecTemplateSpecVolumesImageOutput {
	return i.ToPoolerSpecTemplateSpecVolumesImageOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesImageArgs) ToPoolerSpecTemplateSpecVolumesImageOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesImageOutput)
}

func (i PoolerSpecTemplateSpecVolumesImageArgs) ToPoolerSpecTemplateSpecVolumesImagePtrOutput() PoolerSpecTemplateSpecVolumesImagePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesImagePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesImageArgs) ToPoolerSpecTemplateSpecVolumesImagePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesImageOutput).ToPoolerSpecTemplateSpecVolumesImagePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesImagePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesImageArgs, PoolerSpecTemplateSpecVolumesImagePtr and PoolerSpecTemplateSpecVolumesImagePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesImagePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesImageArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesImagePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesImagePtrOutput() PoolerSpecTemplateSpecVolumesImagePtrOutput
	ToPoolerSpecTemplateSpecVolumesImagePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesImagePtrOutput
}

type poolerSpecTemplateSpecVolumesImagePtrType PoolerSpecTemplateSpecVolumesImageArgs

func PoolerSpecTemplateSpecVolumesImagePtr(v *PoolerSpecTemplateSpecVolumesImageArgs) PoolerSpecTemplateSpecVolumesImagePtrInput {
	return (*poolerSpecTemplateSpecVolumesImagePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesImage)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesImagePtrType) ToPoolerSpecTemplateSpecVolumesImagePtrOutput() PoolerSpecTemplateSpecVolumesImagePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesImagePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesImagePtrType) ToPoolerSpecTemplateSpecVolumesImagePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesImagePtrOutput)
}

// image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
// The volume is resolved at pod startup depending on which PullPolicy value is provided:
//
// - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
// - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
// - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
//
// The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
// A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
// The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
// The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
// The volume will be mounted read-only (ro) and non-executable files (noexec).
// Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).
// The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
type PoolerSpecTemplateSpecVolumesImageOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesImage)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesImageOutput) ToPoolerSpecTemplateSpecVolumesImageOutput() PoolerSpecTemplateSpecVolumesImageOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesImageOutput) ToPoolerSpecTemplateSpecVolumesImageOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesImageOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesImageOutput) ToPoolerSpecTemplateSpecVolumesImagePtrOutput() PoolerSpecTemplateSpecVolumesImagePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesImagePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesImageOutput) ToPoolerSpecTemplateSpecVolumesImagePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesImage) *PoolerSpecTemplateSpecVolumesImage {
		return &v
	}).(PoolerSpecTemplateSpecVolumesImagePtrOutput)
}

// Policy for pulling OCI objects. Possible values are:
// Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
// Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
// IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
// Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
func (o PoolerSpecTemplateSpecVolumesImageOutput) PullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesImage) *string { return v.PullPolicy }).(pulumi.StringPtrOutput)
}

// Required: Image or artifact reference to be used.
// Behaves in the same way as pod.spec.containers[*].image.
// Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
// More info: https://kubernetes.io/docs/concepts/containers/images
// This field is optional to allow higher level config management to default or override
// container images in workload controllers like Deployments and StatefulSets.
func (o PoolerSpecTemplateSpecVolumesImageOutput) Reference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesImage) *string { return v.Reference }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesImagePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesImage)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesImagePtrOutput) ToPoolerSpecTemplateSpecVolumesImagePtrOutput() PoolerSpecTemplateSpecVolumesImagePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesImagePtrOutput) ToPoolerSpecTemplateSpecVolumesImagePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesImagePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesImagePtrOutput) Elem() PoolerSpecTemplateSpecVolumesImageOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesImage) PoolerSpecTemplateSpecVolumesImage {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesImage
		return ret
	}).(PoolerSpecTemplateSpecVolumesImageOutput)
}

// Policy for pulling OCI objects. Possible values are:
// Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
// Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
// IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
// Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
func (o PoolerSpecTemplateSpecVolumesImagePtrOutput) PullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesImage) *string {
		if v == nil {
			return nil
		}
		return v.PullPolicy
	}).(pulumi.StringPtrOutput)
}

// Required: Image or artifact reference to be used.
// Behaves in the same way as pod.spec.containers[*].image.
// Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
// More info: https://kubernetes.io/docs/concepts/containers/images
// This field is optional to allow higher level config management to default or override
// container images in workload controllers like Deployments and StatefulSets.
func (o PoolerSpecTemplateSpecVolumesImagePtrOutput) Reference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesImage) *string {
		if v == nil {
			return nil
		}
		return v.Reference
	}).(pulumi.StringPtrOutput)
}

// image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
// The volume is resolved at pod startup depending on which PullPolicy value is provided:
//
// - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
// - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
// - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
//
// The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
// A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
// The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
// The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
// The volume will be mounted read-only (ro) and non-executable files (noexec).
// Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).
// The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
type PoolerSpecTemplateSpecVolumesImagePatch struct {
	// Policy for pulling OCI objects. Possible values are:
	// Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
	// Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
	// IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
	// Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
	PullPolicy *string `pulumi:"pullPolicy"`
	// Required: Image or artifact reference to be used.
	// Behaves in the same way as pod.spec.containers[*].image.
	// Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
	// More info: https://kubernetes.io/docs/concepts/containers/images
	// This field is optional to allow higher level config management to default or override
	// container images in workload controllers like Deployments and StatefulSets.
	Reference *string `pulumi:"reference"`
}

// PoolerSpecTemplateSpecVolumesImagePatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesImagePatchArgs and PoolerSpecTemplateSpecVolumesImagePatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesImagePatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesImagePatchArgs{...}
type PoolerSpecTemplateSpecVolumesImagePatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesImagePatchOutput() PoolerSpecTemplateSpecVolumesImagePatchOutput
	ToPoolerSpecTemplateSpecVolumesImagePatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesImagePatchOutput
}

// image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
// The volume is resolved at pod startup depending on which PullPolicy value is provided:
//
// - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
// - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
// - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
//
// The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
// A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
// The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
// The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
// The volume will be mounted read-only (ro) and non-executable files (noexec).
// Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).
// The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
type PoolerSpecTemplateSpecVolumesImagePatchArgs struct {
	// Policy for pulling OCI objects. Possible values are:
	// Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
	// Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
	// IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
	// Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
	PullPolicy pulumi.StringPtrInput `pulumi:"pullPolicy"`
	// Required: Image or artifact reference to be used.
	// Behaves in the same way as pod.spec.containers[*].image.
	// Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
	// More info: https://kubernetes.io/docs/concepts/containers/images
	// This field is optional to allow higher level config management to default or override
	// container images in workload controllers like Deployments and StatefulSets.
	Reference pulumi.StringPtrInput `pulumi:"reference"`
}

func (PoolerSpecTemplateSpecVolumesImagePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesImagePatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesImagePatchArgs) ToPoolerSpecTemplateSpecVolumesImagePatchOutput() PoolerSpecTemplateSpecVolumesImagePatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesImagePatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesImagePatchArgs) ToPoolerSpecTemplateSpecVolumesImagePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesImagePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesImagePatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesImagePatchArgs) ToPoolerSpecTemplateSpecVolumesImagePatchPtrOutput() PoolerSpecTemplateSpecVolumesImagePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesImagePatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesImagePatchArgs) ToPoolerSpecTemplateSpecVolumesImagePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesImagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesImagePatchOutput).ToPoolerSpecTemplateSpecVolumesImagePatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesImagePatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesImagePatchArgs, PoolerSpecTemplateSpecVolumesImagePatchPtr and PoolerSpecTemplateSpecVolumesImagePatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesImagePatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesImagePatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesImagePatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesImagePatchPtrOutput() PoolerSpecTemplateSpecVolumesImagePatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesImagePatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesImagePatchPtrOutput
}

type poolerSpecTemplateSpecVolumesImagePatchPtrType PoolerSpecTemplateSpecVolumesImagePatchArgs

func PoolerSpecTemplateSpecVolumesImagePatchPtr(v *PoolerSpecTemplateSpecVolumesImagePatchArgs) PoolerSpecTemplateSpecVolumesImagePatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesImagePatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesImagePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesImagePatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesImagePatchPtrType) ToPoolerSpecTemplateSpecVolumesImagePatchPtrOutput() PoolerSpecTemplateSpecVolumesImagePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesImagePatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesImagePatchPtrType) ToPoolerSpecTemplateSpecVolumesImagePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesImagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesImagePatchPtrOutput)
}

// image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
// The volume is resolved at pod startup depending on which PullPolicy value is provided:
//
// - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
// - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
// - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
//
// The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
// A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
// The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
// The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
// The volume will be mounted read-only (ro) and non-executable files (noexec).
// Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).
// The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
type PoolerSpecTemplateSpecVolumesImagePatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesImagePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesImagePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesImagePatchOutput) ToPoolerSpecTemplateSpecVolumesImagePatchOutput() PoolerSpecTemplateSpecVolumesImagePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesImagePatchOutput) ToPoolerSpecTemplateSpecVolumesImagePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesImagePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesImagePatchOutput) ToPoolerSpecTemplateSpecVolumesImagePatchPtrOutput() PoolerSpecTemplateSpecVolumesImagePatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesImagePatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesImagePatchOutput) ToPoolerSpecTemplateSpecVolumesImagePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesImagePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesImagePatch) *PoolerSpecTemplateSpecVolumesImagePatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesImagePatchPtrOutput)
}

// Policy for pulling OCI objects. Possible values are:
// Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
// Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
// IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
// Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
func (o PoolerSpecTemplateSpecVolumesImagePatchOutput) PullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesImagePatch) *string { return v.PullPolicy }).(pulumi.StringPtrOutput)
}

// Required: Image or artifact reference to be used.
// Behaves in the same way as pod.spec.containers[*].image.
// Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
// More info: https://kubernetes.io/docs/concepts/containers/images
// This field is optional to allow higher level config management to default or override
// container images in workload controllers like Deployments and StatefulSets.
func (o PoolerSpecTemplateSpecVolumesImagePatchOutput) Reference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesImagePatch) *string { return v.Reference }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesImagePatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesImagePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesImagePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesImagePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesImagePatchPtrOutput() PoolerSpecTemplateSpecVolumesImagePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesImagePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesImagePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesImagePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesImagePatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesImagePatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesImagePatch) PoolerSpecTemplateSpecVolumesImagePatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesImagePatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesImagePatchOutput)
}

// Policy for pulling OCI objects. Possible values are:
// Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
// Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
// IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
// Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
func (o PoolerSpecTemplateSpecVolumesImagePatchPtrOutput) PullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesImagePatch) *string {
		if v == nil {
			return nil
		}
		return v.PullPolicy
	}).(pulumi.StringPtrOutput)
}

// Required: Image or artifact reference to be used.
// Behaves in the same way as pod.spec.containers[*].image.
// Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
// More info: https://kubernetes.io/docs/concepts/containers/images
// This field is optional to allow higher level config management to default or override
// container images in workload controllers like Deployments and StatefulSets.
func (o PoolerSpecTemplateSpecVolumesImagePatchPtrOutput) Reference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesImagePatch) *string {
		if v == nil {
			return nil
		}
		return v.Reference
	}).(pulumi.StringPtrOutput)
}

// iscsi represents an ISCSI Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://examples.k8s.io/volumes/iscsi/README.md
type PoolerSpecTemplateSpecVolumesIscsi struct {
	// chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
	ChapAuthDiscovery *bool `pulumi:"chapAuthDiscovery"`
	// chapAuthSession defines whether support iSCSI Session CHAP authentication
	ChapAuthSession *bool `pulumi:"chapAuthSession"`
	// fsType is the filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
	FsType *string `pulumi:"fsType"`
	// initiatorName is the custom iSCSI Initiator Name.
	// If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
	// <target portal>:<volume name> will be created for the connection.
	InitiatorName *string `pulumi:"initiatorName"`
	// iqn is the target iSCSI Qualified Name.
	Iqn *string `pulumi:"iqn"`
	// iscsiInterface is the interface Name that uses an iSCSI transport.
	// Defaults to 'default' (tcp).
	IscsiInterface *string `pulumi:"iscsiInterface"`
	// lun represents iSCSI Target Lun number.
	Lun *int `pulumi:"lun"`
	// portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
	// is other than default (typically TCP ports 860 and 3260).
	Portals []string `pulumi:"portals"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	ReadOnly  *bool                                        `pulumi:"readOnly"`
	SecretRef *PoolerSpecTemplateSpecVolumesIscsiSecretRef `pulumi:"secretRef"`
	// targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
	// is other than default (typically TCP ports 860 and 3260).
	TargetPortal *string `pulumi:"targetPortal"`
}

// PoolerSpecTemplateSpecVolumesIscsiInput is an input type that accepts PoolerSpecTemplateSpecVolumesIscsiArgs and PoolerSpecTemplateSpecVolumesIscsiOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesIscsiInput` via:
//
//	PoolerSpecTemplateSpecVolumesIscsiArgs{...}
type PoolerSpecTemplateSpecVolumesIscsiInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesIscsiOutput() PoolerSpecTemplateSpecVolumesIscsiOutput
	ToPoolerSpecTemplateSpecVolumesIscsiOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesIscsiOutput
}

// iscsi represents an ISCSI Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://examples.k8s.io/volumes/iscsi/README.md
type PoolerSpecTemplateSpecVolumesIscsiArgs struct {
	// chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
	ChapAuthDiscovery pulumi.BoolPtrInput `pulumi:"chapAuthDiscovery"`
	// chapAuthSession defines whether support iSCSI Session CHAP authentication
	ChapAuthSession pulumi.BoolPtrInput `pulumi:"chapAuthSession"`
	// fsType is the filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// initiatorName is the custom iSCSI Initiator Name.
	// If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
	// <target portal>:<volume name> will be created for the connection.
	InitiatorName pulumi.StringPtrInput `pulumi:"initiatorName"`
	// iqn is the target iSCSI Qualified Name.
	Iqn pulumi.StringPtrInput `pulumi:"iqn"`
	// iscsiInterface is the interface Name that uses an iSCSI transport.
	// Defaults to 'default' (tcp).
	IscsiInterface pulumi.StringPtrInput `pulumi:"iscsiInterface"`
	// lun represents iSCSI Target Lun number.
	Lun pulumi.IntPtrInput `pulumi:"lun"`
	// portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
	// is other than default (typically TCP ports 860 and 3260).
	Portals pulumi.StringArrayInput `pulumi:"portals"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	ReadOnly  pulumi.BoolPtrInput                                 `pulumi:"readOnly"`
	SecretRef PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrInput `pulumi:"secretRef"`
	// targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
	// is other than default (typically TCP ports 860 and 3260).
	TargetPortal pulumi.StringPtrInput `pulumi:"targetPortal"`
}

func (PoolerSpecTemplateSpecVolumesIscsiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsi)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesIscsiArgs) ToPoolerSpecTemplateSpecVolumesIscsiOutput() PoolerSpecTemplateSpecVolumesIscsiOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesIscsiArgs) ToPoolerSpecTemplateSpecVolumesIscsiOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiOutput)
}

func (i PoolerSpecTemplateSpecVolumesIscsiArgs) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesIscsiArgs) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiOutput).ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesIscsiPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesIscsiArgs, PoolerSpecTemplateSpecVolumesIscsiPtr and PoolerSpecTemplateSpecVolumesIscsiPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesIscsiPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesIscsiArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesIscsiPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesIscsiPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPtrOutput
	ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesIscsiPtrOutput
}

type poolerSpecTemplateSpecVolumesIscsiPtrType PoolerSpecTemplateSpecVolumesIscsiArgs

func PoolerSpecTemplateSpecVolumesIscsiPtr(v *PoolerSpecTemplateSpecVolumesIscsiArgs) PoolerSpecTemplateSpecVolumesIscsiPtrInput {
	return (*poolerSpecTemplateSpecVolumesIscsiPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesIscsiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesIscsi)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesIscsiPtrType) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesIscsiPtrType) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiPtrOutput)
}

// iscsi represents an ISCSI Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://examples.k8s.io/volumes/iscsi/README.md
type PoolerSpecTemplateSpecVolumesIscsiOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesIscsiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsi)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesIscsiOutput) ToPoolerSpecTemplateSpecVolumesIscsiOutput() PoolerSpecTemplateSpecVolumesIscsiOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiOutput) ToPoolerSpecTemplateSpecVolumesIscsiOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiOutput) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesIscsiOutput) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesIscsi) *PoolerSpecTemplateSpecVolumesIscsi {
		return &v
	}).(PoolerSpecTemplateSpecVolumesIscsiPtrOutput)
}

// chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) ChapAuthDiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *bool { return v.ChapAuthDiscovery }).(pulumi.BoolPtrOutput)
}

// chapAuthSession defines whether support iSCSI Session CHAP authentication
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) ChapAuthSession() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *bool { return v.ChapAuthSession }).(pulumi.BoolPtrOutput)
}

// fsType is the filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// initiatorName is the custom iSCSI Initiator Name.
// If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
// <target portal>:<volume name> will be created for the connection.
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) InitiatorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *string { return v.InitiatorName }).(pulumi.StringPtrOutput)
}

// iqn is the target iSCSI Qualified Name.
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) Iqn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *string { return v.Iqn }).(pulumi.StringPtrOutput)
}

// iscsiInterface is the interface Name that uses an iSCSI transport.
// Defaults to 'default' (tcp).
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) IscsiInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *string { return v.IscsiInterface }).(pulumi.StringPtrOutput)
}

// lun represents iSCSI Target Lun number.
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *int { return v.Lun }).(pulumi.IntPtrOutput)
}

// portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
// is other than default (typically TCP ports 860 and 3260).
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) Portals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) []string { return v.Portals }).(pulumi.StringArrayOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesIscsiOutput) SecretRef() PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *PoolerSpecTemplateSpecVolumesIscsiSecretRef {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput)
}

// targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
// is other than default (typically TCP ports 860 and 3260).
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) TargetPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *string { return v.TargetPortal }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesIscsiPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesIscsiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesIscsi)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) Elem() PoolerSpecTemplateSpecVolumesIscsiOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) PoolerSpecTemplateSpecVolumesIscsi {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesIscsi
		return ret
	}).(PoolerSpecTemplateSpecVolumesIscsiOutput)
}

// chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) ChapAuthDiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *bool {
		if v == nil {
			return nil
		}
		return v.ChapAuthDiscovery
	}).(pulumi.BoolPtrOutput)
}

// chapAuthSession defines whether support iSCSI Session CHAP authentication
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) ChapAuthSession() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *bool {
		if v == nil {
			return nil
		}
		return v.ChapAuthSession
	}).(pulumi.BoolPtrOutput)
}

// fsType is the filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// initiatorName is the custom iSCSI Initiator Name.
// If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
// <target portal>:<volume name> will be created for the connection.
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) InitiatorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return v.InitiatorName
	}).(pulumi.StringPtrOutput)
}

// iqn is the target iSCSI Qualified Name.
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) Iqn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return v.Iqn
	}).(pulumi.StringPtrOutput)
}

// iscsiInterface is the interface Name that uses an iSCSI transport.
// Defaults to 'default' (tcp).
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) IscsiInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return v.IscsiInterface
	}).(pulumi.StringPtrOutput)
}

// lun represents iSCSI Target Lun number.
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *int {
		if v == nil {
			return nil
		}
		return v.Lun
	}).(pulumi.IntPtrOutput)
}

// portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
// is other than default (typically TCP ports 860 and 3260).
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) Portals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) []string {
		if v == nil {
			return nil
		}
		return v.Portals
	}).(pulumi.StringArrayOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *PoolerSpecTemplateSpecVolumesIscsiSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput)
}

// targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
// is other than default (typically TCP ports 860 and 3260).
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) TargetPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return v.TargetPortal
	}).(pulumi.StringPtrOutput)
}

// iscsi represents an ISCSI Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://examples.k8s.io/volumes/iscsi/README.md
type PoolerSpecTemplateSpecVolumesIscsiPatch struct {
	// chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
	ChapAuthDiscovery *bool `pulumi:"chapAuthDiscovery"`
	// chapAuthSession defines whether support iSCSI Session CHAP authentication
	ChapAuthSession *bool `pulumi:"chapAuthSession"`
	// fsType is the filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
	FsType *string `pulumi:"fsType"`
	// initiatorName is the custom iSCSI Initiator Name.
	// If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
	// <target portal>:<volume name> will be created for the connection.
	InitiatorName *string `pulumi:"initiatorName"`
	// iqn is the target iSCSI Qualified Name.
	Iqn *string `pulumi:"iqn"`
	// iscsiInterface is the interface Name that uses an iSCSI transport.
	// Defaults to 'default' (tcp).
	IscsiInterface *string `pulumi:"iscsiInterface"`
	// lun represents iSCSI Target Lun number.
	Lun *int `pulumi:"lun"`
	// portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
	// is other than default (typically TCP ports 860 and 3260).
	Portals []string `pulumi:"portals"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	ReadOnly  *bool                                             `pulumi:"readOnly"`
	SecretRef *PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch `pulumi:"secretRef"`
	// targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
	// is other than default (typically TCP ports 860 and 3260).
	TargetPortal *string `pulumi:"targetPortal"`
}

// PoolerSpecTemplateSpecVolumesIscsiPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesIscsiPatchArgs and PoolerSpecTemplateSpecVolumesIscsiPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesIscsiPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesIscsiPatchArgs{...}
type PoolerSpecTemplateSpecVolumesIscsiPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesIscsiPatchOutput() PoolerSpecTemplateSpecVolumesIscsiPatchOutput
	ToPoolerSpecTemplateSpecVolumesIscsiPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesIscsiPatchOutput
}

// iscsi represents an ISCSI Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://examples.k8s.io/volumes/iscsi/README.md
type PoolerSpecTemplateSpecVolumesIscsiPatchArgs struct {
	// chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
	ChapAuthDiscovery pulumi.BoolPtrInput `pulumi:"chapAuthDiscovery"`
	// chapAuthSession defines whether support iSCSI Session CHAP authentication
	ChapAuthSession pulumi.BoolPtrInput `pulumi:"chapAuthSession"`
	// fsType is the filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// initiatorName is the custom iSCSI Initiator Name.
	// If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
	// <target portal>:<volume name> will be created for the connection.
	InitiatorName pulumi.StringPtrInput `pulumi:"initiatorName"`
	// iqn is the target iSCSI Qualified Name.
	Iqn pulumi.StringPtrInput `pulumi:"iqn"`
	// iscsiInterface is the interface Name that uses an iSCSI transport.
	// Defaults to 'default' (tcp).
	IscsiInterface pulumi.StringPtrInput `pulumi:"iscsiInterface"`
	// lun represents iSCSI Target Lun number.
	Lun pulumi.IntPtrInput `pulumi:"lun"`
	// portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
	// is other than default (typically TCP ports 860 and 3260).
	Portals pulumi.StringArrayInput `pulumi:"portals"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	ReadOnly  pulumi.BoolPtrInput                                      `pulumi:"readOnly"`
	SecretRef PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrInput `pulumi:"secretRef"`
	// targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
	// is other than default (typically TCP ports 860 and 3260).
	TargetPortal pulumi.StringPtrInput `pulumi:"targetPortal"`
}

func (PoolerSpecTemplateSpecVolumesIscsiPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesIscsiPatchArgs) ToPoolerSpecTemplateSpecVolumesIscsiPatchOutput() PoolerSpecTemplateSpecVolumesIscsiPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesIscsiPatchArgs) ToPoolerSpecTemplateSpecVolumesIscsiPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesIscsiPatchArgs) ToPoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesIscsiPatchArgs) ToPoolerSpecTemplateSpecVolumesIscsiPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiPatchOutput).ToPoolerSpecTemplateSpecVolumesIscsiPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesIscsiPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesIscsiPatchArgs, PoolerSpecTemplateSpecVolumesIscsiPatchPtr and PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesIscsiPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesIscsiPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesIscsiPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesIscsiPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesIscsiPatchPtrType PoolerSpecTemplateSpecVolumesIscsiPatchArgs

func PoolerSpecTemplateSpecVolumesIscsiPatchPtr(v *PoolerSpecTemplateSpecVolumesIscsiPatchArgs) PoolerSpecTemplateSpecVolumesIscsiPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesIscsiPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesIscsiPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesIscsiPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesIscsiPatchPtrType) ToPoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesIscsiPatchPtrType) ToPoolerSpecTemplateSpecVolumesIscsiPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput)
}

// iscsi represents an ISCSI Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://examples.k8s.io/volumes/iscsi/README.md
type PoolerSpecTemplateSpecVolumesIscsiPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesIscsiPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) ToPoolerSpecTemplateSpecVolumesIscsiPatchOutput() PoolerSpecTemplateSpecVolumesIscsiPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) ToPoolerSpecTemplateSpecVolumesIscsiPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) ToPoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesIscsiPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) ToPoolerSpecTemplateSpecVolumesIscsiPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesIscsiPatch) *PoolerSpecTemplateSpecVolumesIscsiPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput)
}

// chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) ChapAuthDiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsiPatch) *bool { return v.ChapAuthDiscovery }).(pulumi.BoolPtrOutput)
}

// chapAuthSession defines whether support iSCSI Session CHAP authentication
func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) ChapAuthSession() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsiPatch) *bool { return v.ChapAuthSession }).(pulumi.BoolPtrOutput)
}

// fsType is the filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsiPatch) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// initiatorName is the custom iSCSI Initiator Name.
// If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
// <target portal>:<volume name> will be created for the connection.
func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) InitiatorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsiPatch) *string { return v.InitiatorName }).(pulumi.StringPtrOutput)
}

// iqn is the target iSCSI Qualified Name.
func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) Iqn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsiPatch) *string { return v.Iqn }).(pulumi.StringPtrOutput)
}

// iscsiInterface is the interface Name that uses an iSCSI transport.
// Defaults to 'default' (tcp).
func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) IscsiInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsiPatch) *string { return v.IscsiInterface }).(pulumi.StringPtrOutput)
}

// lun represents iSCSI Target Lun number.
func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsiPatch) *int { return v.Lun }).(pulumi.IntPtrOutput)
}

// portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
// is other than default (typically TCP ports 860 and 3260).
func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) Portals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsiPatch) []string { return v.Portals }).(pulumi.StringArrayOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsiPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) SecretRef() PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsiPatch) *PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput)
}

// targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
// is other than default (typically TCP ports 860 and 3260).
func (o PoolerSpecTemplateSpecVolumesIscsiPatchOutput) TargetPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsiPatch) *string { return v.TargetPortal }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesIscsiPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesIscsiPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesIscsiPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiPatch) PoolerSpecTemplateSpecVolumesIscsiPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesIscsiPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesIscsiPatchOutput)
}

// chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
func (o PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) ChapAuthDiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ChapAuthDiscovery
	}).(pulumi.BoolPtrOutput)
}

// chapAuthSession defines whether support iSCSI Session CHAP authentication
func (o PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) ChapAuthSession() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ChapAuthSession
	}).(pulumi.BoolPtrOutput)
}

// fsType is the filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
func (o PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiPatch) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// initiatorName is the custom iSCSI Initiator Name.
// If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
// <target portal>:<volume name> will be created for the connection.
func (o PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) InitiatorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiPatch) *string {
		if v == nil {
			return nil
		}
		return v.InitiatorName
	}).(pulumi.StringPtrOutput)
}

// iqn is the target iSCSI Qualified Name.
func (o PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) Iqn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiPatch) *string {
		if v == nil {
			return nil
		}
		return v.Iqn
	}).(pulumi.StringPtrOutput)
}

// iscsiInterface is the interface Name that uses an iSCSI transport.
// Defaults to 'default' (tcp).
func (o PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) IscsiInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiPatch) *string {
		if v == nil {
			return nil
		}
		return v.IscsiInterface
	}).(pulumi.StringPtrOutput)
}

// lun represents iSCSI Target Lun number.
func (o PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiPatch) *int {
		if v == nil {
			return nil
		}
		return v.Lun
	}).(pulumi.IntPtrOutput)
}

// portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
// is other than default (typically TCP ports 860 and 3260).
func (o PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) Portals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiPatch) []string {
		if v == nil {
			return nil
		}
		return v.Portals
	}).(pulumi.StringArrayOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
func (o PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiPatch) *PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput)
}

// targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
// is other than default (typically TCP ports 860 and 3260).
func (o PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput) TargetPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiPatch) *string {
		if v == nil {
			return nil
		}
		return v.TargetPortal
	}).(pulumi.StringPtrOutput)
}

// secretRef is the CHAP Secret for iSCSI target and initiator authentication
type PoolerSpecTemplateSpecVolumesIscsiSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// PoolerSpecTemplateSpecVolumesIscsiSecretRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs and PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesIscsiSecretRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs{...}
type PoolerSpecTemplateSpecVolumesIscsiSecretRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesIscsiSecretRefOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput
	ToPoolerSpecTemplateSpecVolumesIscsiSecretRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput
}

// secretRef is the CHAP Secret for iSCSI target and initiator authentication
type PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiSecretRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiSecretRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput).ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs, PoolerSpecTemplateSpecVolumesIscsiSecretRefPtr and PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput
}

type poolerSpecTemplateSpecVolumesIscsiSecretRefPtrType PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs

func PoolerSpecTemplateSpecVolumesIscsiSecretRefPtr(v *PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs) PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesIscsiSecretRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesIscsiSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesIscsiSecretRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesIscsiSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesIscsiSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput)
}

// secretRef is the CHAP Secret for iSCSI target and initiator authentication
type PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesIscsiSecretRef) *PoolerSpecTemplateSpecVolumesIscsiSecretRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsiSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesIscsiSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiSecretRef) PoolerSpecTemplateSpecVolumesIscsiSecretRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesIscsiSecretRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// secretRef is the CHAP Secret for iSCSI target and initiator authentication
type PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchArgs and PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchArgs{...}
type PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput
	ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput
}

// secretRef is the CHAP Secret for iSCSI target and initiator authentication
type PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput).ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchArgs, PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtr and PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrType PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchArgs

func PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtr(v *PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchArgs) PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput)
}

// secretRef is the CHAP Secret for iSCSI target and initiator authentication
type PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch) *PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch) PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// nfs represents an NFS mount on the host that shares a pod's lifetime
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type PoolerSpecTemplateSpecVolumesNfs struct {
	// path that is exported by the NFS server.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Path *string `pulumi:"path"`
	// readOnly here will force the NFS export to be mounted with read-only permissions.
	// Defaults to false.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	ReadOnly *bool `pulumi:"readOnly"`
	// server is the hostname or IP address of the NFS server.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Server *string `pulumi:"server"`
}

// PoolerSpecTemplateSpecVolumesNfsInput is an input type that accepts PoolerSpecTemplateSpecVolumesNfsArgs and PoolerSpecTemplateSpecVolumesNfsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesNfsInput` via:
//
//	PoolerSpecTemplateSpecVolumesNfsArgs{...}
type PoolerSpecTemplateSpecVolumesNfsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesNfsOutput() PoolerSpecTemplateSpecVolumesNfsOutput
	ToPoolerSpecTemplateSpecVolumesNfsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesNfsOutput
}

// nfs represents an NFS mount on the host that shares a pod's lifetime
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type PoolerSpecTemplateSpecVolumesNfsArgs struct {
	// path that is exported by the NFS server.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Path pulumi.StringPtrInput `pulumi:"path"`
	// readOnly here will force the NFS export to be mounted with read-only permissions.
	// Defaults to false.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// server is the hostname or IP address of the NFS server.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Server pulumi.StringPtrInput `pulumi:"server"`
}

func (PoolerSpecTemplateSpecVolumesNfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesNfs)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesNfsArgs) ToPoolerSpecTemplateSpecVolumesNfsOutput() PoolerSpecTemplateSpecVolumesNfsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesNfsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesNfsArgs) ToPoolerSpecTemplateSpecVolumesNfsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesNfsOutput)
}

func (i PoolerSpecTemplateSpecVolumesNfsArgs) ToPoolerSpecTemplateSpecVolumesNfsPtrOutput() PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesNfsArgs) ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesNfsOutput).ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesNfsPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesNfsArgs, PoolerSpecTemplateSpecVolumesNfsPtr and PoolerSpecTemplateSpecVolumesNfsPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesNfsPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesNfsArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesNfsPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesNfsPtrOutput() PoolerSpecTemplateSpecVolumesNfsPtrOutput
	ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesNfsPtrOutput
}

type poolerSpecTemplateSpecVolumesNfsPtrType PoolerSpecTemplateSpecVolumesNfsArgs

func PoolerSpecTemplateSpecVolumesNfsPtr(v *PoolerSpecTemplateSpecVolumesNfsArgs) PoolerSpecTemplateSpecVolumesNfsPtrInput {
	return (*poolerSpecTemplateSpecVolumesNfsPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesNfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesNfs)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesNfsPtrType) ToPoolerSpecTemplateSpecVolumesNfsPtrOutput() PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesNfsPtrType) ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesNfsPtrOutput)
}

// nfs represents an NFS mount on the host that shares a pod's lifetime
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type PoolerSpecTemplateSpecVolumesNfsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesNfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesNfs)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesNfsOutput) ToPoolerSpecTemplateSpecVolumesNfsOutput() PoolerSpecTemplateSpecVolumesNfsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesNfsOutput) ToPoolerSpecTemplateSpecVolumesNfsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesNfsOutput) ToPoolerSpecTemplateSpecVolumesNfsPtrOutput() PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesNfsOutput) ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesNfs) *PoolerSpecTemplateSpecVolumesNfs {
		return &v
	}).(PoolerSpecTemplateSpecVolumesNfsPtrOutput)
}

// path that is exported by the NFS server.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesNfs) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// readOnly here will force the NFS export to be mounted with read-only permissions.
// Defaults to false.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesNfs) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// server is the hostname or IP address of the NFS server.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesNfs) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesNfsPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesNfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesNfs)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesNfsPtrOutput) ToPoolerSpecTemplateSpecVolumesNfsPtrOutput() PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesNfsPtrOutput) ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesNfsPtrOutput) Elem() PoolerSpecTemplateSpecVolumesNfsOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesNfs) PoolerSpecTemplateSpecVolumesNfs {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesNfs
		return ret
	}).(PoolerSpecTemplateSpecVolumesNfsOutput)
}

// path that is exported by the NFS server.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesNfs) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the NFS export to be mounted with read-only permissions.
// Defaults to false.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesNfs) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// server is the hostname or IP address of the NFS server.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesNfs) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

// nfs represents an NFS mount on the host that shares a pod's lifetime
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type PoolerSpecTemplateSpecVolumesNfsPatch struct {
	// path that is exported by the NFS server.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Path *string `pulumi:"path"`
	// readOnly here will force the NFS export to be mounted with read-only permissions.
	// Defaults to false.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	ReadOnly *bool `pulumi:"readOnly"`
	// server is the hostname or IP address of the NFS server.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Server *string `pulumi:"server"`
}

// PoolerSpecTemplateSpecVolumesNfsPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesNfsPatchArgs and PoolerSpecTemplateSpecVolumesNfsPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesNfsPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesNfsPatchArgs{...}
type PoolerSpecTemplateSpecVolumesNfsPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesNfsPatchOutput() PoolerSpecTemplateSpecVolumesNfsPatchOutput
	ToPoolerSpecTemplateSpecVolumesNfsPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesNfsPatchOutput
}

// nfs represents an NFS mount on the host that shares a pod's lifetime
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type PoolerSpecTemplateSpecVolumesNfsPatchArgs struct {
	// path that is exported by the NFS server.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Path pulumi.StringPtrInput `pulumi:"path"`
	// readOnly here will force the NFS export to be mounted with read-only permissions.
	// Defaults to false.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// server is the hostname or IP address of the NFS server.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Server pulumi.StringPtrInput `pulumi:"server"`
}

func (PoolerSpecTemplateSpecVolumesNfsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesNfsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesNfsPatchArgs) ToPoolerSpecTemplateSpecVolumesNfsPatchOutput() PoolerSpecTemplateSpecVolumesNfsPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesNfsPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesNfsPatchArgs) ToPoolerSpecTemplateSpecVolumesNfsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesNfsPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesNfsPatchArgs) ToPoolerSpecTemplateSpecVolumesNfsPatchPtrOutput() PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesNfsPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesNfsPatchArgs) ToPoolerSpecTemplateSpecVolumesNfsPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesNfsPatchOutput).ToPoolerSpecTemplateSpecVolumesNfsPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesNfsPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesNfsPatchArgs, PoolerSpecTemplateSpecVolumesNfsPatchPtr and PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesNfsPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesNfsPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesNfsPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesNfsPatchPtrOutput() PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesNfsPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesNfsPatchPtrType PoolerSpecTemplateSpecVolumesNfsPatchArgs

func PoolerSpecTemplateSpecVolumesNfsPatchPtr(v *PoolerSpecTemplateSpecVolumesNfsPatchArgs) PoolerSpecTemplateSpecVolumesNfsPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesNfsPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesNfsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesNfsPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesNfsPatchPtrType) ToPoolerSpecTemplateSpecVolumesNfsPatchPtrOutput() PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesNfsPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesNfsPatchPtrType) ToPoolerSpecTemplateSpecVolumesNfsPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput)
}

// nfs represents an NFS mount on the host that shares a pod's lifetime
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type PoolerSpecTemplateSpecVolumesNfsPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesNfsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesNfsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesNfsPatchOutput) ToPoolerSpecTemplateSpecVolumesNfsPatchOutput() PoolerSpecTemplateSpecVolumesNfsPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesNfsPatchOutput) ToPoolerSpecTemplateSpecVolumesNfsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesNfsPatchOutput) ToPoolerSpecTemplateSpecVolumesNfsPatchPtrOutput() PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesNfsPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesNfsPatchOutput) ToPoolerSpecTemplateSpecVolumesNfsPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesNfsPatch) *PoolerSpecTemplateSpecVolumesNfsPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput)
}

// path that is exported by the NFS server.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesNfsPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// readOnly here will force the NFS export to be mounted with read-only permissions.
// Defaults to false.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesNfsPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// server is the hostname or IP address of the NFS server.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsPatchOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesNfsPatch) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesNfsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesNfsPatchPtrOutput() PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesNfsPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesNfsPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesNfsPatch) PoolerSpecTemplateSpecVolumesNfsPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesNfsPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesNfsPatchOutput)
}

// path that is exported by the NFS server.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesNfsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the NFS export to be mounted with read-only permissions.
// Defaults to false.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesNfsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// server is the hostname or IP address of the NFS server.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesNfsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

// Volume represents a named volume in a pod that may be accessed by any container in the pod.
type PoolerSpecTemplateSpecVolumesPatch struct {
	AwsElasticBlockStore *PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePatch `pulumi:"awsElasticBlockStore"`
	AzureDisk            *PoolerSpecTemplateSpecVolumesAzureDiskPatch            `pulumi:"azureDisk"`
	AzureFile            *PoolerSpecTemplateSpecVolumesAzureFilePatch            `pulumi:"azureFile"`
	Cephfs               *PoolerSpecTemplateSpecVolumesCephfsPatch               `pulumi:"cephfs"`
	Cinder               *PoolerSpecTemplateSpecVolumesCinderPatch               `pulumi:"cinder"`
	ConfigMap            *PoolerSpecTemplateSpecVolumesConfigMapPatch            `pulumi:"configMap"`
	Csi                  *PoolerSpecTemplateSpecVolumesCsiPatch                  `pulumi:"csi"`
	DownwardAPI          *PoolerSpecTemplateSpecVolumesDownwardAPIPatch          `pulumi:"downwardAPI"`
	EmptyDir             *PoolerSpecTemplateSpecVolumesEmptyDirPatch             `pulumi:"emptyDir"`
	Ephemeral            *PoolerSpecTemplateSpecVolumesEphemeralPatch            `pulumi:"ephemeral"`
	Fc                   *PoolerSpecTemplateSpecVolumesFcPatch                   `pulumi:"fc"`
	FlexVolume           *PoolerSpecTemplateSpecVolumesFlexVolumePatch           `pulumi:"flexVolume"`
	Flocker              *PoolerSpecTemplateSpecVolumesFlockerPatch              `pulumi:"flocker"`
	GcePersistentDisk    *PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch    `pulumi:"gcePersistentDisk"`
	GitRepo              *PoolerSpecTemplateSpecVolumesGitRepoPatch              `pulumi:"gitRepo"`
	Glusterfs            *PoolerSpecTemplateSpecVolumesGlusterfsPatch            `pulumi:"glusterfs"`
	HostPath             *PoolerSpecTemplateSpecVolumesHostPathPatch             `pulumi:"hostPath"`
	Image                *PoolerSpecTemplateSpecVolumesImagePatch                `pulumi:"image"`
	Iscsi                *PoolerSpecTemplateSpecVolumesIscsiPatch                `pulumi:"iscsi"`
	// name of the volume.
	// Must be a DNS_LABEL and unique within the pod.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name                  *string                                                  `pulumi:"name"`
	Nfs                   *PoolerSpecTemplateSpecVolumesNfsPatch                   `pulumi:"nfs"`
	PersistentVolumeClaim *PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch `pulumi:"persistentVolumeClaim"`
	PhotonPersistentDisk  *PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch  `pulumi:"photonPersistentDisk"`
	PortworxVolume        *PoolerSpecTemplateSpecVolumesPortworxVolumePatch        `pulumi:"portworxVolume"`
	Projected             *PoolerSpecTemplateSpecVolumesProjectedPatch             `pulumi:"projected"`
	Quobyte               *PoolerSpecTemplateSpecVolumesQuobytePatch               `pulumi:"quobyte"`
	Rbd                   *PoolerSpecTemplateSpecVolumesRbdPatch                   `pulumi:"rbd"`
	ScaleIO               *PoolerSpecTemplateSpecVolumesScaleIOPatch               `pulumi:"scaleIO"`
	Secret                *PoolerSpecTemplateSpecVolumesSecretPatch                `pulumi:"secret"`
	Storageos             *PoolerSpecTemplateSpecVolumesStorageosPatch             `pulumi:"storageos"`
	VsphereVolume         *PoolerSpecTemplateSpecVolumesVsphereVolumePatch         `pulumi:"vsphereVolume"`
}

// PoolerSpecTemplateSpecVolumesPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesPatchArgs and PoolerSpecTemplateSpecVolumesPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesPatchArgs{...}
type PoolerSpecTemplateSpecVolumesPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPatchOutput() PoolerSpecTemplateSpecVolumesPatchOutput
	ToPoolerSpecTemplateSpecVolumesPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPatchOutput
}

// Volume represents a named volume in a pod that may be accessed by any container in the pod.
type PoolerSpecTemplateSpecVolumesPatchArgs struct {
	AwsElasticBlockStore PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePatchPtrInput `pulumi:"awsElasticBlockStore"`
	AzureDisk            PoolerSpecTemplateSpecVolumesAzureDiskPatchPtrInput            `pulumi:"azureDisk"`
	AzureFile            PoolerSpecTemplateSpecVolumesAzureFilePatchPtrInput            `pulumi:"azureFile"`
	Cephfs               PoolerSpecTemplateSpecVolumesCephfsPatchPtrInput               `pulumi:"cephfs"`
	Cinder               PoolerSpecTemplateSpecVolumesCinderPatchPtrInput               `pulumi:"cinder"`
	ConfigMap            PoolerSpecTemplateSpecVolumesConfigMapPatchPtrInput            `pulumi:"configMap"`
	Csi                  PoolerSpecTemplateSpecVolumesCsiPatchPtrInput                  `pulumi:"csi"`
	DownwardAPI          PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrInput          `pulumi:"downwardAPI"`
	EmptyDir             PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrInput             `pulumi:"emptyDir"`
	Ephemeral            PoolerSpecTemplateSpecVolumesEphemeralPatchPtrInput            `pulumi:"ephemeral"`
	Fc                   PoolerSpecTemplateSpecVolumesFcPatchPtrInput                   `pulumi:"fc"`
	FlexVolume           PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrInput           `pulumi:"flexVolume"`
	Flocker              PoolerSpecTemplateSpecVolumesFlockerPatchPtrInput              `pulumi:"flocker"`
	GcePersistentDisk    PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrInput    `pulumi:"gcePersistentDisk"`
	GitRepo              PoolerSpecTemplateSpecVolumesGitRepoPatchPtrInput              `pulumi:"gitRepo"`
	Glusterfs            PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrInput            `pulumi:"glusterfs"`
	HostPath             PoolerSpecTemplateSpecVolumesHostPathPatchPtrInput             `pulumi:"hostPath"`
	Image                PoolerSpecTemplateSpecVolumesImagePatchPtrInput                `pulumi:"image"`
	Iscsi                PoolerSpecTemplateSpecVolumesIscsiPatchPtrInput                `pulumi:"iscsi"`
	// name of the volume.
	// Must be a DNS_LABEL and unique within the pod.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name                  pulumi.StringPtrInput                                           `pulumi:"name"`
	Nfs                   PoolerSpecTemplateSpecVolumesNfsPatchPtrInput                   `pulumi:"nfs"`
	PersistentVolumeClaim PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrInput `pulumi:"persistentVolumeClaim"`
	PhotonPersistentDisk  PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrInput  `pulumi:"photonPersistentDisk"`
	PortworxVolume        PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrInput        `pulumi:"portworxVolume"`
	Projected             PoolerSpecTemplateSpecVolumesProjectedPatchPtrInput             `pulumi:"projected"`
	Quobyte               PoolerSpecTemplateSpecVolumesQuobytePatchPtrInput               `pulumi:"quobyte"`
	Rbd                   PoolerSpecTemplateSpecVolumesRbdPatchPtrInput                   `pulumi:"rbd"`
	ScaleIO               PoolerSpecTemplateSpecVolumesScaleIOPatchPtrInput               `pulumi:"scaleIO"`
	Secret                PoolerSpecTemplateSpecVolumesSecretPatchPtrInput                `pulumi:"secret"`
	Storageos             PoolerSpecTemplateSpecVolumesStorageosPatchPtrInput             `pulumi:"storageos"`
	VsphereVolume         PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrInput         `pulumi:"vsphereVolume"`
}

func (PoolerSpecTemplateSpecVolumesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesPatchArgs) ToPoolerSpecTemplateSpecVolumesPatchOutput() PoolerSpecTemplateSpecVolumesPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPatchArgs) ToPoolerSpecTemplateSpecVolumesPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPatchOutput)
}

// PoolerSpecTemplateSpecVolumesPatchArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesPatchArray and PoolerSpecTemplateSpecVolumesPatchArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPatchArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesPatchArray{ PoolerSpecTemplateSpecVolumesPatchArgs{...} }
type PoolerSpecTemplateSpecVolumesPatchArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPatchArrayOutput() PoolerSpecTemplateSpecVolumesPatchArrayOutput
	ToPoolerSpecTemplateSpecVolumesPatchArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPatchArrayOutput
}

type PoolerSpecTemplateSpecVolumesPatchArray []PoolerSpecTemplateSpecVolumesPatchInput

func (PoolerSpecTemplateSpecVolumesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesPatchArray) ToPoolerSpecTemplateSpecVolumesPatchArrayOutput() PoolerSpecTemplateSpecVolumesPatchArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPatchArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPatchArray) ToPoolerSpecTemplateSpecVolumesPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPatchArrayOutput)
}

// Volume represents a named volume in a pod that may be accessed by any container in the pod.
type PoolerSpecTemplateSpecVolumesPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) ToPoolerSpecTemplateSpecVolumesPatchOutput() PoolerSpecTemplateSpecVolumesPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) ToPoolerSpecTemplateSpecVolumesPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) AwsElasticBlockStore() PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePatch {
		return v.AwsElasticBlockStore
	}).(PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) AzureDisk() PoolerSpecTemplateSpecVolumesAzureDiskPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesAzureDiskPatch {
		return v.AzureDisk
	}).(PoolerSpecTemplateSpecVolumesAzureDiskPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) AzureFile() PoolerSpecTemplateSpecVolumesAzureFilePatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesAzureFilePatch {
		return v.AzureFile
	}).(PoolerSpecTemplateSpecVolumesAzureFilePatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Cephfs() PoolerSpecTemplateSpecVolumesCephfsPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesCephfsPatch { return v.Cephfs }).(PoolerSpecTemplateSpecVolumesCephfsPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Cinder() PoolerSpecTemplateSpecVolumesCinderPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesCinderPatch { return v.Cinder }).(PoolerSpecTemplateSpecVolumesCinderPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) ConfigMap() PoolerSpecTemplateSpecVolumesConfigMapPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesConfigMapPatch {
		return v.ConfigMap
	}).(PoolerSpecTemplateSpecVolumesConfigMapPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Csi() PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesCsiPatch { return v.Csi }).(PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) DownwardAPI() PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesDownwardAPIPatch {
		return v.DownwardAPI
	}).(PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) EmptyDir() PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesEmptyDirPatch {
		return v.EmptyDir
	}).(PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Ephemeral() PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesEphemeralPatch {
		return v.Ephemeral
	}).(PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Fc() PoolerSpecTemplateSpecVolumesFcPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesFcPatch { return v.Fc }).(PoolerSpecTemplateSpecVolumesFcPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) FlexVolume() PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesFlexVolumePatch {
		return v.FlexVolume
	}).(PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Flocker() PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesFlockerPatch {
		return v.Flocker
	}).(PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) GcePersistentDisk() PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesGcePersistentDiskPatch {
		return v.GcePersistentDisk
	}).(PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) GitRepo() PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesGitRepoPatch {
		return v.GitRepo
	}).(PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Glusterfs() PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesGlusterfsPatch {
		return v.Glusterfs
	}).(PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) HostPath() PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesHostPathPatch {
		return v.HostPath
	}).(PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Image() PoolerSpecTemplateSpecVolumesImagePatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesImagePatch { return v.Image }).(PoolerSpecTemplateSpecVolumesImagePatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Iscsi() PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesIscsiPatch { return v.Iscsi }).(PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput)
}

// name of the volume.
// Must be a DNS_LABEL and unique within the pod.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Nfs() PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesNfsPatch { return v.Nfs }).(PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) PersistentVolumeClaim() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch {
		return v.PersistentVolumeClaim
	}).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) PhotonPersistentDisk() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch {
		return v.PhotonPersistentDisk
	}).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) PortworxVolume() PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesPortworxVolumePatch {
		return v.PortworxVolume
	}).(PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Projected() PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesProjectedPatch {
		return v.Projected
	}).(PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Quobyte() PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesQuobytePatch {
		return v.Quobyte
	}).(PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Rbd() PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesRbdPatch { return v.Rbd }).(PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) ScaleIO() PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesScaleIOPatch {
		return v.ScaleIO
	}).(PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Secret() PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesSecretPatch { return v.Secret }).(PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) Storageos() PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesStorageosPatch {
		return v.Storageos
	}).(PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesPatchOutput) VsphereVolume() PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPatch) *PoolerSpecTemplateSpecVolumesVsphereVolumePatch {
		return v.VsphereVolume
	}).(PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput)
}

type PoolerSpecTemplateSpecVolumesPatchArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesPatchArrayOutput() PoolerSpecTemplateSpecVolumesPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPatchArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesPatch {
		return vs[0].([]PoolerSpecTemplateSpecVolumesPatch)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesPatchOutput)
}

// persistentVolumeClaimVolumeSource represents a reference to a
// PersistentVolumeClaim in the same namespace.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaim struct {
	// claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	ClaimName *string `pulumi:"claimName"`
	// readOnly Will force the ReadOnly setting in VolumeMounts.
	// Default false.
	ReadOnly *bool `pulumi:"readOnly"`
}

// PoolerSpecTemplateSpecVolumesPersistentVolumeClaimInput is an input type that accepts PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs and PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPersistentVolumeClaimInput` via:
//
//	PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs{...}
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput
	ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput
}

// persistentVolumeClaimVolumeSource represents a reference to a
// PersistentVolumeClaim in the same namespace.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs struct {
	// claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	ClaimName pulumi.StringPtrInput `pulumi:"claimName"`
	// readOnly Will force the ReadOnly setting in VolumeMounts.
	// Default false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput)
}

func (i PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput).ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs, PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtr and PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput
	ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput
}

type poolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrType PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs

func PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtr(v *PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrInput {
	return (*poolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrType) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrType) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput)
}

// persistentVolumeClaimVolumeSource represents a reference to a
// PersistentVolumeClaim in the same namespace.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesPersistentVolumeClaim) *PoolerSpecTemplateSpecVolumesPersistentVolumeClaim {
		return &v
	}).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput)
}

// claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPersistentVolumeClaim) *string { return v.ClaimName }).(pulumi.StringPtrOutput)
}

// readOnly Will force the ReadOnly setting in VolumeMounts.
// Default false.
func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPersistentVolumeClaim) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput) Elem() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPersistentVolumeClaim) PoolerSpecTemplateSpecVolumesPersistentVolumeClaim {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesPersistentVolumeClaim
		return ret
	}).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput)
}

// claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPersistentVolumeClaim) *string {
		if v == nil {
			return nil
		}
		return v.ClaimName
	}).(pulumi.StringPtrOutput)
}

// readOnly Will force the ReadOnly setting in VolumeMounts.
// Default false.
func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPersistentVolumeClaim) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// persistentVolumeClaimVolumeSource represents a reference to a
// PersistentVolumeClaim in the same namespace.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch struct {
	// claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	ClaimName *string `pulumi:"claimName"`
	// readOnly Will force the ReadOnly setting in VolumeMounts.
	// Default false.
	ReadOnly *bool `pulumi:"readOnly"`
}

// PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchArgs and PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchArgs{...}
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput
	ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput
}

// persistentVolumeClaimVolumeSource represents a reference to a
// PersistentVolumeClaim in the same namespace.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchArgs struct {
	// claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	ClaimName pulumi.StringPtrInput `pulumi:"claimName"`
	// readOnly Will force the ReadOnly setting in VolumeMounts.
	// Default false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchArgs) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchArgs) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchArgs) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchArgs) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput).ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchArgs, PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtr and PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrType PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchArgs

func PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtr(v *PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchArgs) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrType) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrType) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput)
}

// persistentVolumeClaimVolumeSource represents a reference to a
// PersistentVolumeClaim in the same namespace.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch) *PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput)
}

// claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch) *string { return v.ClaimName }).(pulumi.StringPtrOutput)
}

// readOnly Will force the ReadOnly setting in VolumeMounts.
// Default false.
func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput)
}

// claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClaimName
	}).(pulumi.StringPtrOutput)
}

// readOnly Will force the ReadOnly setting in VolumeMounts.
// Default false.
func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.
// Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.
type PoolerSpecTemplateSpecVolumesPhotonPersistentDisk struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// pdID is the ID that identifies Photon Controller persistent disk
	PdID *string `pulumi:"pdID"`
}

// PoolerSpecTemplateSpecVolumesPhotonPersistentDiskInput is an input type that accepts PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs and PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPhotonPersistentDiskInput` via:
//
//	PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs{...}
type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput
	ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput
}

// photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.
// Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.
type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// pdID is the ID that identifies Photon Controller persistent disk
	PdID pulumi.StringPtrInput `pulumi:"pdID"`
}

func (PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput)
}

func (i PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput).ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs, PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtr and PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput
	ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput
}

type poolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrType PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs

func PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtr(v *PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrInput {
	return (*poolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrType) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrType) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput)
}

// photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.
// Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.
type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesPhotonPersistentDisk) *PoolerSpecTemplateSpecVolumesPhotonPersistentDisk {
		return &v
	}).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPhotonPersistentDisk) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// pdID is the ID that identifies Photon Controller persistent disk
func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput) PdID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPhotonPersistentDisk) *string { return v.PdID }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput) Elem() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPhotonPersistentDisk) PoolerSpecTemplateSpecVolumesPhotonPersistentDisk {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesPhotonPersistentDisk
		return ret
	}).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPhotonPersistentDisk) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// pdID is the ID that identifies Photon Controller persistent disk
func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput) PdID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPhotonPersistentDisk) *string {
		if v == nil {
			return nil
		}
		return v.PdID
	}).(pulumi.StringPtrOutput)
}

// photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.
// Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.
type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// pdID is the ID that identifies Photon Controller persistent disk
	PdID *string `pulumi:"pdID"`
}

// PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchArgs and PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchArgs{...}
type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput
	ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput
}

// photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.
// Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.
type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchArgs struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// pdID is the ID that identifies Photon Controller persistent disk
	PdID pulumi.StringPtrInput `pulumi:"pdID"`
}

func (PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchArgs) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchArgs) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchArgs) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchArgs) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput).ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchArgs, PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtr and PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrType PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchArgs

func PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtr(v *PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchArgs) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrType) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrType) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput)
}

// photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.
// Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.
type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch) *PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// pdID is the ID that identifies Photon Controller persistent disk
func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput) PdID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch) *string { return v.PdID }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// pdID is the ID that identifies Photon Controller persistent disk
func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput) PdID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatch) *string {
		if v == nil {
			return nil
		}
		return v.PdID
	}).(pulumi.StringPtrOutput)
}

// portworxVolume represents a portworx volume attached and mounted on kubelets host machine.
// Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type
// are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate
// is on.
type PoolerSpecTemplateSpecVolumesPortworxVolume struct {
	// fSType represents the filesystem type to mount
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// volumeID uniquely identifies a Portworx volume
	VolumeID *string `pulumi:"volumeID"`
}

// PoolerSpecTemplateSpecVolumesPortworxVolumeInput is an input type that accepts PoolerSpecTemplateSpecVolumesPortworxVolumeArgs and PoolerSpecTemplateSpecVolumesPortworxVolumeOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPortworxVolumeInput` via:
//
//	PoolerSpecTemplateSpecVolumesPortworxVolumeArgs{...}
type PoolerSpecTemplateSpecVolumesPortworxVolumeInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPortworxVolumeOutput() PoolerSpecTemplateSpecVolumesPortworxVolumeOutput
	ToPoolerSpecTemplateSpecVolumesPortworxVolumeOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumeOutput
}

// portworxVolume represents a portworx volume attached and mounted on kubelets host machine.
// Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type
// are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate
// is on.
type PoolerSpecTemplateSpecVolumesPortworxVolumeArgs struct {
	// fSType represents the filesystem type to mount
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// volumeID uniquely identifies a Portworx volume
	VolumeID pulumi.StringPtrInput `pulumi:"volumeID"`
}

func (PoolerSpecTemplateSpecVolumesPortworxVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPortworxVolume)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesPortworxVolumeArgs) ToPoolerSpecTemplateSpecVolumesPortworxVolumeOutput() PoolerSpecTemplateSpecVolumesPortworxVolumeOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPortworxVolumeOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPortworxVolumeArgs) ToPoolerSpecTemplateSpecVolumesPortworxVolumeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPortworxVolumeOutput)
}

func (i PoolerSpecTemplateSpecVolumesPortworxVolumeArgs) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPortworxVolumeArgs) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPortworxVolumeOutput).ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesPortworxVolumePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesPortworxVolumeArgs, PoolerSpecTemplateSpecVolumesPortworxVolumePtr and PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPortworxVolumePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesPortworxVolumeArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesPortworxVolumePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput
	ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput
}

type poolerSpecTemplateSpecVolumesPortworxVolumePtrType PoolerSpecTemplateSpecVolumesPortworxVolumeArgs

func PoolerSpecTemplateSpecVolumesPortworxVolumePtr(v *PoolerSpecTemplateSpecVolumesPortworxVolumeArgs) PoolerSpecTemplateSpecVolumesPortworxVolumePtrInput {
	return (*poolerSpecTemplateSpecVolumesPortworxVolumePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesPortworxVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPortworxVolume)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesPortworxVolumePtrType) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesPortworxVolumePtrType) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput)
}

// portworxVolume represents a portworx volume attached and mounted on kubelets host machine.
// Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type
// are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate
// is on.
type PoolerSpecTemplateSpecVolumesPortworxVolumeOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPortworxVolume)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumeOutput() PoolerSpecTemplateSpecVolumesPortworxVolumeOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumeOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesPortworxVolume) *PoolerSpecTemplateSpecVolumesPortworxVolume {
		return &v
	}).(PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput)
}

// fSType represents the filesystem type to mount
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPortworxVolume) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPortworxVolume) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// volumeID uniquely identifies a Portworx volume
func (o PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) VolumeID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPortworxVolume) *string { return v.VolumeID }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPortworxVolume)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput) Elem() PoolerSpecTemplateSpecVolumesPortworxVolumeOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPortworxVolume) PoolerSpecTemplateSpecVolumesPortworxVolume {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesPortworxVolume
		return ret
	}).(PoolerSpecTemplateSpecVolumesPortworxVolumeOutput)
}

// fSType represents the filesystem type to mount
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPortworxVolume) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPortworxVolume) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// volumeID uniquely identifies a Portworx volume
func (o PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput) VolumeID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPortworxVolume) *string {
		if v == nil {
			return nil
		}
		return v.VolumeID
	}).(pulumi.StringPtrOutput)
}

// portworxVolume represents a portworx volume attached and mounted on kubelets host machine.
// Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type
// are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate
// is on.
type PoolerSpecTemplateSpecVolumesPortworxVolumePatch struct {
	// fSType represents the filesystem type to mount
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// volumeID uniquely identifies a Portworx volume
	VolumeID *string `pulumi:"volumeID"`
}

// PoolerSpecTemplateSpecVolumesPortworxVolumePatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesPortworxVolumePatchArgs and PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPortworxVolumePatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesPortworxVolumePatchArgs{...}
type PoolerSpecTemplateSpecVolumesPortworxVolumePatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput
	ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput
}

// portworxVolume represents a portworx volume attached and mounted on kubelets host machine.
// Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type
// are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate
// is on.
type PoolerSpecTemplateSpecVolumesPortworxVolumePatchArgs struct {
	// fSType represents the filesystem type to mount
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// volumeID uniquely identifies a Portworx volume
	VolumeID pulumi.StringPtrInput `pulumi:"volumeID"`
}

func (PoolerSpecTemplateSpecVolumesPortworxVolumePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPortworxVolumePatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesPortworxVolumePatchArgs) ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPortworxVolumePatchArgs) ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesPortworxVolumePatchArgs) ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPortworxVolumePatchArgs) ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput).ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesPortworxVolumePatchArgs, PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtr and PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesPortworxVolumePatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput
}

type poolerSpecTemplateSpecVolumesPortworxVolumePatchPtrType PoolerSpecTemplateSpecVolumesPortworxVolumePatchArgs

func PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtr(v *PoolerSpecTemplateSpecVolumesPortworxVolumePatchArgs) PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesPortworxVolumePatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesPortworxVolumePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPortworxVolumePatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesPortworxVolumePatchPtrType) ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesPortworxVolumePatchPtrType) ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput)
}

// portworxVolume represents a portworx volume attached and mounted on kubelets host machine.
// Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type
// are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate
// is on.
type PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPortworxVolumePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesPortworxVolumePatch) *PoolerSpecTemplateSpecVolumesPortworxVolumePatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput)
}

// fSType represents the filesystem type to mount
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPortworxVolumePatch) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPortworxVolumePatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// volumeID uniquely identifies a Portworx volume
func (o PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput) VolumeID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPortworxVolumePatch) *string { return v.VolumeID }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPortworxVolumePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPortworxVolumePatch) PoolerSpecTemplateSpecVolumesPortworxVolumePatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesPortworxVolumePatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput)
}

// fSType represents the filesystem type to mount
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPortworxVolumePatch) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPortworxVolumePatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// volumeID uniquely identifies a Portworx volume
func (o PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput) VolumeID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPortworxVolumePatch) *string {
		if v == nil {
			return nil
		}
		return v.VolumeID
	}).(pulumi.StringPtrOutput)
}

// projected items for all in one resources secrets, configmaps, and downward API
type PoolerSpecTemplateSpecVolumesProjected struct {
	// defaultMode are the mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// sources is the list of volume projections. Each entry in this list
	// handles one source.
	Sources []PoolerSpecTemplateSpecVolumesProjectedSources `pulumi:"sources"`
}

// PoolerSpecTemplateSpecVolumesProjectedInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedArgs and PoolerSpecTemplateSpecVolumesProjectedOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedOutput() PoolerSpecTemplateSpecVolumesProjectedOutput
	ToPoolerSpecTemplateSpecVolumesProjectedOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedOutput
}

// projected items for all in one resources secrets, configmaps, and downward API
type PoolerSpecTemplateSpecVolumesProjectedArgs struct {
	// defaultMode are the mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// sources is the list of volume projections. Each entry in this list
	// handles one source.
	Sources PoolerSpecTemplateSpecVolumesProjectedSourcesArrayInput `pulumi:"sources"`
}

func (PoolerSpecTemplateSpecVolumesProjectedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjected)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedArgs) ToPoolerSpecTemplateSpecVolumesProjectedOutput() PoolerSpecTemplateSpecVolumesProjectedOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedArgs) ToPoolerSpecTemplateSpecVolumesProjectedOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedArgs) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedArgs) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedOutput).ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedArgs, PoolerSpecTemplateSpecVolumesProjectedPtr and PoolerSpecTemplateSpecVolumesProjectedPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedPtrType PoolerSpecTemplateSpecVolumesProjectedArgs

func PoolerSpecTemplateSpecVolumesProjectedPtr(v *PoolerSpecTemplateSpecVolumesProjectedArgs) PoolerSpecTemplateSpecVolumesProjectedPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjected)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedPtrType) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedPtrType) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedPtrOutput)
}

// projected items for all in one resources secrets, configmaps, and downward API
type PoolerSpecTemplateSpecVolumesProjectedOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjected)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedOutput) ToPoolerSpecTemplateSpecVolumesProjectedOutput() PoolerSpecTemplateSpecVolumesProjectedOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedOutput) ToPoolerSpecTemplateSpecVolumesProjectedOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedOutput) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedOutput) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjected) *PoolerSpecTemplateSpecVolumesProjected {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedPtrOutput)
}

// defaultMode are the mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjected) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// sources is the list of volume projections. Each entry in this list
// handles one source.
func (o PoolerSpecTemplateSpecVolumesProjectedOutput) Sources() PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjected) []PoolerSpecTemplateSpecVolumesProjectedSources {
		return v.Sources
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjected)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjected) PoolerSpecTemplateSpecVolumesProjected {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjected
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedOutput)
}

// defaultMode are the mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjected) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// sources is the list of volume projections. Each entry in this list
// handles one source.
func (o PoolerSpecTemplateSpecVolumesProjectedPtrOutput) Sources() PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjected) []PoolerSpecTemplateSpecVolumesProjectedSources {
		if v == nil {
			return nil
		}
		return v.Sources
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput)
}

// projected items for all in one resources secrets, configmaps, and downward API
type PoolerSpecTemplateSpecVolumesProjectedPatch struct {
	// defaultMode are the mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// sources is the list of volume projections. Each entry in this list
	// handles one source.
	Sources []PoolerSpecTemplateSpecVolumesProjectedSourcesPatch `pulumi:"sources"`
}

// PoolerSpecTemplateSpecVolumesProjectedPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedPatchArgs and PoolerSpecTemplateSpecVolumesProjectedPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedPatchArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedPatchOutput() PoolerSpecTemplateSpecVolumesProjectedPatchOutput
	ToPoolerSpecTemplateSpecVolumesProjectedPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedPatchOutput
}

// projected items for all in one resources secrets, configmaps, and downward API
type PoolerSpecTemplateSpecVolumesProjectedPatchArgs struct {
	// defaultMode are the mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// sources is the list of volume projections. Each entry in this list
	// handles one source.
	Sources PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayInput `pulumi:"sources"`
}

func (PoolerSpecTemplateSpecVolumesProjectedPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedPatchOutput() PoolerSpecTemplateSpecVolumesProjectedPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedPatchOutput).ToPoolerSpecTemplateSpecVolumesProjectedPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedPatchArgs, PoolerSpecTemplateSpecVolumesProjectedPatchPtr and PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedPatchPtrType PoolerSpecTemplateSpecVolumesProjectedPatchArgs

func PoolerSpecTemplateSpecVolumesProjectedPatchPtr(v *PoolerSpecTemplateSpecVolumesProjectedPatchArgs) PoolerSpecTemplateSpecVolumesProjectedPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput)
}

// projected items for all in one resources secrets, configmaps, and downward API
type PoolerSpecTemplateSpecVolumesProjectedPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedPatchOutput() PoolerSpecTemplateSpecVolumesProjectedPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedPatch) *PoolerSpecTemplateSpecVolumesProjectedPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput)
}

// defaultMode are the mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedPatchOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedPatch) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// sources is the list of volume projections. Each entry in this list
// handles one source.
func (o PoolerSpecTemplateSpecVolumesProjectedPatchOutput) Sources() PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedPatch) []PoolerSpecTemplateSpecVolumesProjectedSourcesPatch {
		return v.Sources
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedPatch) PoolerSpecTemplateSpecVolumesProjectedPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedPatchOutput)
}

// defaultMode are the mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedPatch) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// sources is the list of volume projections. Each entry in this list
// handles one source.
func (o PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput) Sources() PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedPatch) []PoolerSpecTemplateSpecVolumesProjectedSourcesPatch {
		if v == nil {
			return nil
		}
		return v.Sources
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput)
}

// Projection that may be projected along with other supported volume types.
// Exactly one of these fields must be set.
type PoolerSpecTemplateSpecVolumesProjectedSources struct {
	ClusterTrustBundle  *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle  `pulumi:"clusterTrustBundle"`
	ConfigMap           *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap           `pulumi:"configMap"`
	DownwardAPI         *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPI         `pulumi:"downwardAPI"`
	Secret              *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret              `pulumi:"secret"`
	ServiceAccountToken *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken `pulumi:"serviceAccountToken"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesOutput
}

// Projection that may be projected along with other supported volume types.
// Exactly one of these fields must be set.
type PoolerSpecTemplateSpecVolumesProjectedSourcesArgs struct {
	ClusterTrustBundle  PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrInput  `pulumi:"clusterTrustBundle"`
	ConfigMap           PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrInput           `pulumi:"configMap"`
	DownwardAPI         PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrInput         `pulumi:"downwardAPI"`
	Secret              PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrInput              `pulumi:"secret"`
	ServiceAccountToken PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrInput `pulumi:"serviceAccountToken"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSources)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesArray and PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesArray []PoolerSpecTemplateSpecVolumesProjectedSourcesInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSources)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput)
}

// Projection that may be projected along with other supported volume types.
// Exactly one of these fields must be set.
type PoolerSpecTemplateSpecVolumesProjectedSourcesOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSources)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) ClusterTrustBundle() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSources) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle {
		return v.ClusterTrustBundle
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) ConfigMap() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSources) *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap {
		return v.ConfigMap
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) DownwardAPI() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSources) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPI {
		return v.DownwardAPI
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) Secret() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSources) *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret {
		return v.Secret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) ServiceAccountToken() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSources) *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken {
		return v.ServiceAccountToken
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSources)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSources {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSources)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesOutput)
}

// ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
// of ClusterTrustBundle objects in an auto-updating file.
//
// Alpha, gated by the ClusterTrustBundleProjection feature gate.
//
// ClusterTrustBundle objects can either be selected by name, or by the
// combination of signer name and a label selector.
//
// Kubelet performs aggressive normalization of the PEM contents written
// into the pod filesystem.  Esoteric PEM features such as inter-block
// comments and block headers are stripped.  Certificates are deduplicated.
// The ordering of certificates within the file is arbitrary, and Kubelet
// may change the order over time.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle struct {
	LabelSelector *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector `pulumi:"labelSelector"`
	// Select a single ClusterTrustBundle by object name.  Mutually-exclusive
	// with signerName and labelSelector.
	Name *string `pulumi:"name"`
	// If true, don't block pod startup if the referenced ClusterTrustBundle(s)
	// aren't available.  If using name, then the named ClusterTrustBundle is
	// allowed not to exist.  If using signerName, then the combination of
	// signerName and labelSelector is allowed to match zero
	// ClusterTrustBundles.
	Optional *bool `pulumi:"optional"`
	// Relative path from the volume root to write the bundle.
	Path *string `pulumi:"path"`
	// Select all ClusterTrustBundles that match this signer name.
	// Mutually-exclusive with name.  The contents of all selected
	// ClusterTrustBundles will be unified and deduplicated.
	SignerName *string `pulumi:"signerName"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput
}

// ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
// of ClusterTrustBundle objects in an auto-updating file.
//
// Alpha, gated by the ClusterTrustBundleProjection feature gate.
//
// ClusterTrustBundle objects can either be selected by name, or by the
// combination of signer name and a label selector.
//
// Kubelet performs aggressive normalization of the PEM contents written
// into the pod filesystem.  Esoteric PEM features such as inter-block
// comments and block headers are stripped.  Certificates are deduplicated.
// The ordering of certificates within the file is arbitrary, and Kubelet
// may change the order over time.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs struct {
	LabelSelector PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrInput `pulumi:"labelSelector"`
	// Select a single ClusterTrustBundle by object name.  Mutually-exclusive
	// with signerName and labelSelector.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// If true, don't block pod startup if the referenced ClusterTrustBundle(s)
	// aren't available.  If using name, then the named ClusterTrustBundle is
	// allowed not to exist.  If using signerName, then the combination of
	// signerName and labelSelector is allowed to match zero
	// ClusterTrustBundles.
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
	// Relative path from the volume root to write the bundle.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Select all ClusterTrustBundles that match this signer name.
	// Mutually-exclusive with name.  The contents of all selected
	// ClusterTrustBundles will be unified and deduplicated.
	SignerName pulumi.StringPtrInput `pulumi:"signerName"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtr and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrType PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput)
}

// ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
// of ClusterTrustBundle objects in an auto-updating file.
//
// Alpha, gated by the ClusterTrustBundleProjection feature gate.
//
// ClusterTrustBundle objects can either be selected by name, or by the
// combination of signer name and a label selector.
//
// Kubelet performs aggressive normalization of the PEM contents written
// into the pod filesystem.  Esoteric PEM features such as inter-block
// comments and block headers are stripped.  Certificates are deduplicated.
// The ordering of certificates within the file is arbitrary, and Kubelet
// may change the order over time.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) LabelSelector() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector {
		return v.LabelSelector
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput)
}

// Select a single ClusterTrustBundle by object name.  Mutually-exclusive
// with signerName and labelSelector.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// If true, don't block pod startup if the referenced ClusterTrustBundle(s)
// aren't available.  If using name, then the named ClusterTrustBundle is
// allowed not to exist.  If using signerName, then the combination of
// signerName and labelSelector is allowed to match zero
// ClusterTrustBundles.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

// Relative path from the volume root to write the bundle.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Select all ClusterTrustBundles that match this signer name.
// Mutually-exclusive with name.  The contents of all selected
// ClusterTrustBundles will be unified and deduplicated.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) SignerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *string { return v.SignerName }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput)
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) LabelSelector() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector {
		if v == nil {
			return nil
		}
		return v.LabelSelector
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput)
}

// Select a single ClusterTrustBundle by object name.  Mutually-exclusive
// with signerName and labelSelector.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// If true, don't block pod startup if the referenced ClusterTrustBundle(s)
// aren't available.  If using name, then the named ClusterTrustBundle is
// allowed not to exist.  If using signerName, then the combination of
// signerName and labelSelector is allowed to match zero
// ClusterTrustBundles.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Relative path from the volume root to write the bundle.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Select all ClusterTrustBundles that match this signer name.
// Mutually-exclusive with name.  The contents of all selected
// ClusterTrustBundles will be unified and deduplicated.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) SignerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *string {
		if v == nil {
			return nil
		}
		return v.SignerName
	}).(pulumi.StringPtrOutput)
}

// Select all ClusterTrustBundles that match this label selector.  Only has
// effect if signerName is set.  Mutually-exclusive with name.  If unset,
// interpreted as "match nothing".  If set but empty, interpreted as "match
// everything".
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput
}

// Select all ClusterTrustBundles that match this label selector.  Only has
// effect if signerName is set.  Mutually-exclusive with name.  If unset,
// interpreted as "match nothing".  If set but empty, interpreted as "match
// everything".
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput)
}

// Select all ClusterTrustBundles that match this label selector.  Only has
// effect if signerName is set.  Mutually-exclusive with name.  If unset,
// interpreted as "match nothing".  If set but empty, interpreted as "match
// everything".
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput) MatchExpressions() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector) []PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput) MatchExpressions() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector) []PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArray and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArray []PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatch struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArray and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArray []PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput {
	return o
}

// key is the label key that the selector applies to.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatch {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput)
}

// Select all ClusterTrustBundles that match this label selector.  Only has
// effect if signerName is set.  Mutually-exclusive with name.  If unset,
// interpreted as "match nothing".  If set but empty, interpreted as "match
// everything".
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput
}

// Select all ClusterTrustBundles that match this label selector.  Only has
// effect if signerName is set.  Mutually-exclusive with name.  If unset,
// interpreted as "match nothing".  If set but empty, interpreted as "match
// everything".
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput)
}

// Select all ClusterTrustBundles that match this label selector.  Only has
// effect if signerName is set.  Mutually-exclusive with name.  If unset,
// interpreted as "match nothing".  If set but empty, interpreted as "match
// everything".
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput) MatchExpressions() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch) []PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput) MatchExpressions() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch) []PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
// of ClusterTrustBundle objects in an auto-updating file.
//
// Alpha, gated by the ClusterTrustBundleProjection feature gate.
//
// ClusterTrustBundle objects can either be selected by name, or by the
// combination of signer name and a label selector.
//
// Kubelet performs aggressive normalization of the PEM contents written
// into the pod filesystem.  Esoteric PEM features such as inter-block
// comments and block headers are stripped.  Certificates are deduplicated.
// The ordering of certificates within the file is arbitrary, and Kubelet
// may change the order over time.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch struct {
	LabelSelector *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch `pulumi:"labelSelector"`
	// Select a single ClusterTrustBundle by object name.  Mutually-exclusive
	// with signerName and labelSelector.
	Name *string `pulumi:"name"`
	// If true, don't block pod startup if the referenced ClusterTrustBundle(s)
	// aren't available.  If using name, then the named ClusterTrustBundle is
	// allowed not to exist.  If using signerName, then the combination of
	// signerName and labelSelector is allowed to match zero
	// ClusterTrustBundles.
	Optional *bool `pulumi:"optional"`
	// Relative path from the volume root to write the bundle.
	Path *string `pulumi:"path"`
	// Select all ClusterTrustBundles that match this signer name.
	// Mutually-exclusive with name.  The contents of all selected
	// ClusterTrustBundles will be unified and deduplicated.
	SignerName *string `pulumi:"signerName"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput
}

// ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
// of ClusterTrustBundle objects in an auto-updating file.
//
// Alpha, gated by the ClusterTrustBundleProjection feature gate.
//
// ClusterTrustBundle objects can either be selected by name, or by the
// combination of signer name and a label selector.
//
// Kubelet performs aggressive normalization of the PEM contents written
// into the pod filesystem.  Esoteric PEM features such as inter-block
// comments and block headers are stripped.  Certificates are deduplicated.
// The ordering of certificates within the file is arbitrary, and Kubelet
// may change the order over time.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchArgs struct {
	LabelSelector PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrInput `pulumi:"labelSelector"`
	// Select a single ClusterTrustBundle by object name.  Mutually-exclusive
	// with signerName and labelSelector.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// If true, don't block pod startup if the referenced ClusterTrustBundle(s)
	// aren't available.  If using name, then the named ClusterTrustBundle is
	// allowed not to exist.  If using signerName, then the combination of
	// signerName and labelSelector is allowed to match zero
	// ClusterTrustBundles.
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
	// Relative path from the volume root to write the bundle.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Select all ClusterTrustBundles that match this signer name.
	// Mutually-exclusive with name.  The contents of all selected
	// ClusterTrustBundles will be unified and deduplicated.
	SignerName pulumi.StringPtrInput `pulumi:"signerName"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput)
}

// ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
// of ClusterTrustBundle objects in an auto-updating file.
//
// Alpha, gated by the ClusterTrustBundleProjection feature gate.
//
// ClusterTrustBundle objects can either be selected by name, or by the
// combination of signer name and a label selector.
//
// Kubelet performs aggressive normalization of the PEM contents written
// into the pod filesystem.  Esoteric PEM features such as inter-block
// comments and block headers are stripped.  Certificates are deduplicated.
// The ordering of certificates within the file is arbitrary, and Kubelet
// may change the order over time.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput) LabelSelector() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch {
		return v.LabelSelector
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput)
}

// Select a single ClusterTrustBundle by object name.  Mutually-exclusive
// with signerName and labelSelector.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// If true, don't block pod startup if the referenced ClusterTrustBundle(s)
// aren't available.  If using name, then the named ClusterTrustBundle is
// allowed not to exist.  If using signerName, then the combination of
// signerName and labelSelector is allowed to match zero
// ClusterTrustBundles.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

// Relative path from the volume root to write the bundle.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Select all ClusterTrustBundles that match this signer name.
// Mutually-exclusive with name.  The contents of all selected
// ClusterTrustBundles will be unified and deduplicated.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput) SignerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch) *string {
		return v.SignerName
	}).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput)
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput) LabelSelector() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatch {
		if v == nil {
			return nil
		}
		return v.LabelSelector
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput)
}

// Select a single ClusterTrustBundle by object name.  Mutually-exclusive
// with signerName and labelSelector.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// If true, don't block pod startup if the referenced ClusterTrustBundle(s)
// aren't available.  If using name, then the named ClusterTrustBundle is
// allowed not to exist.  If using signerName, then the combination of
// signerName and labelSelector is allowed to match zero
// ClusterTrustBundles.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Relative path from the volume root to write the bundle.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Select all ClusterTrustBundles that match this signer name.
// Mutually-exclusive with name.  The contents of all selected
// ClusterTrustBundles will be unified and deduplicated.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput) SignerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch) *string {
		if v == nil {
			return nil
		}
		return v.SignerName
	}).(pulumi.StringPtrOutput)
}

// configMap information about the configMap data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap struct {
	// items if unspecified, each key-value pair in the Data field of the referenced
	// ConfigMap will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the ConfigMap,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items []PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems `pulumi:"items"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// optional specify whether the ConfigMap or its keys must be defined
	Optional *bool `pulumi:"optional"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap and PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap{ "key": PoolerSpecTemplateSpecVolumesProjectedSourcesConfigArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput
}

// configMap information about the configMap data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs struct {
	// items if unspecified, each key-value pair in the Data field of the referenced
	// ConfigMap will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the ConfigMap,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayInput `pulumi:"items"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// optional specify whether the ConfigMap or its keys must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput)
}

// configMap information about the configMap data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput)
}

// items if unspecified, each key-value pair in the Data field of the referenced
// ConfigMap will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the ConfigMap,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) []PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems {
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// optional specify whether the ConfigMap or its keys must be defined
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput)
}

// items if unspecified, each key-value pair in the Data field of the referenced
// ConfigMap will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the ConfigMap,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) []PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// optional specify whether the ConfigMap or its keys must be defined
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems struct {
	// key is the key to project.
	Key *string `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path *string `pulumi:"path"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs struct {
	// key is the key to project.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArray and PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArray []PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput {
	return o
}

// key is the key to project.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// mode is Optional: mode bits used to set permissions on this file.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// path is the relative path of the file to map the key to.
// May not be an absolute path.
// May not contain the path element '..'.
// May not start with the string '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatch struct {
	// key is the key to project.
	Key *string `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path *string `pulumi:"path"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArgs struct {
	// key is the key to project.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArray and PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArray []PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput {
	return o
}

// key is the key to project.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// mode is Optional: mode bits used to set permissions on this file.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatch) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// path is the relative path of the file to map the key to.
// May not be an absolute path.
// May not contain the path element '..'.
// May not start with the string '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatch {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatch)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput)
}

// configMap information about the configMap data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch struct {
	// items if unspecified, each key-value pair in the Data field of the referenced
	// ConfigMap will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the ConfigMap,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items []PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatch `pulumi:"items"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// optional specify whether the ConfigMap or its keys must be defined
	Optional *bool `pulumi:"optional"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput
}

// configMap information about the configMap data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchArgs struct {
	// items if unspecified, each key-value pair in the Data field of the referenced
	// ConfigMap will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the ConfigMap,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayInput `pulumi:"items"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// optional specify whether the ConfigMap or its keys must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput)
}

// configMap information about the configMap data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput)
}

// items if unspecified, each key-value pair in the Data field of the referenced
// ConfigMap will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the ConfigMap,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch) []PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatch {
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// optional specify whether the ConfigMap or its keys must be defined
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput)
}

// items if unspecified, each key-value pair in the Data field of the referenced
// ConfigMap will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the ConfigMap,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch) []PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatch {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// optional specify whether the ConfigMap or its keys must be defined
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// downwardAPI information about the downwardAPI data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPI struct {
	// Items is a list of DownwardAPIVolume file
	Items []PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItems `pulumi:"items"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput
}

// downwardAPI information about the downwardAPI data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIArgs struct {
	// Items is a list of DownwardAPIVolume file
	Items PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayInput `pulumi:"items"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPI)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPI)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput)
}

// downwardAPI information about the downwardAPI data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPI)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPI) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPI {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput)
}

// Items is a list of DownwardAPIVolume file
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPI) []PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItems {
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPI)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPI) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPI {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPI
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput)
}

// Items is a list of DownwardAPIVolume file
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPI) []PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItems struct {
	FieldRef *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef `pulumi:"fieldRef"`
	// Optional: mode bits used to set permissions on this file, must be an octal value
	// between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path             *string                                                                        `pulumi:"path"`
	ResourceFieldRef *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef `pulumi:"resourceFieldRef"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArgs struct {
	FieldRef PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput `pulumi:"fieldRef"`
	// Optional: mode bits used to set permissions on this file, must be an octal value
	// between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path             pulumi.StringPtrInput                                                                 `pulumi:"path"`
	ResourceFieldRef PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArray and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArray []PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput) FieldRef() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItems) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef {
		return v.FieldRef
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput)
}

// Optional: mode bits used to set permissions on this file, must be an octal value
// between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItems) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput) ResourceFieldRef() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItems) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
		return v.ResourceFieldRef
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItems {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItems)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion *string `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath *string `pulumi:"fieldPath"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef) *string {
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef) *string {
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion *string `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath *string `pulumi:"fieldPath"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchArgs struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch) *string {
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch) *string {
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatch struct {
	FieldRef *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch `pulumi:"fieldRef"`
	// Optional: mode bits used to set permissions on this file, must be an octal value
	// between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path             *string                                                                             `pulumi:"path"`
	ResourceFieldRef *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch `pulumi:"resourceFieldRef"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArgs struct {
	FieldRef PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrInput `pulumi:"fieldRef"`
	// Optional: mode bits used to set permissions on this file, must be an octal value
	// between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path             pulumi.StringPtrInput                                                                      `pulumi:"path"`
	ResourceFieldRef PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrInput `pulumi:"resourceFieldRef"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArray and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArray []PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput) FieldRef() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatch {
		return v.FieldRef
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput)
}

// Optional: mode bits used to set permissions on this file, must be an octal value
// between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatch) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput) ResourceFieldRef() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch {
		return v.ResourceFieldRef
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatch {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatch)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput)
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor interface{} `pulumi:"divisor"`
	// Required: resource to select
	Resource *string `pulumi:"resource"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs struct {
	// Container name: required for volumes, optional for env vars
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor pulumi.Input `pulumi:"divisor"`
	// Required: resource to select
	Resource pulumi.StringPtrInput `pulumi:"resource"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput)
}

// Container name: required for volumes, optional for env vars
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *string {
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) Divisor() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) interface{} {
		return v.Divisor
	}).(pulumi.AnyOutput)
}

// Required: resource to select
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *string {
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput)
}

// Container name: required for volumes, optional for env vars
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) Divisor() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) interface{} {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(pulumi.AnyOutput)
}

// Required: resource to select
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor interface{} `pulumi:"divisor"`
	// Required: resource to select
	Resource *string `pulumi:"resource"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchArgs struct {
	// Container name: required for volumes, optional for env vars
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor pulumi.Input `pulumi:"divisor"`
	// Required: resource to select
	Resource pulumi.StringPtrInput `pulumi:"resource"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput)
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput)
}

// Container name: required for volumes, optional for env vars
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch) *string {
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput) Divisor() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch) interface{} {
		return v.Divisor
	}).(pulumi.AnyOutput)
}

// Required: resource to select
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch) *string {
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput)
}

// Container name: required for volumes, optional for env vars
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput) Divisor() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch) interface{} {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(pulumi.AnyOutput)
}

// Required: resource to select
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// downwardAPI information about the downwardAPI data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatch struct {
	// Items is a list of DownwardAPIVolume file
	Items []PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatch `pulumi:"items"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput
}

// downwardAPI information about the downwardAPI data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchArgs struct {
	// Items is a list of DownwardAPIVolume file
	Items PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayInput `pulumi:"items"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput)
}

// downwardAPI information about the downwardAPI data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput)
}

// Items is a list of DownwardAPIVolume file
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatch) []PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatch {
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatch) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput)
}

// Items is a list of DownwardAPIVolume file
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatch) []PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatch {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput)
}

// Projection that may be projected along with other supported volume types.
// Exactly one of these fields must be set.
type PoolerSpecTemplateSpecVolumesProjectedSourcesPatch struct {
	ClusterTrustBundle  *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch  `pulumi:"clusterTrustBundle"`
	ConfigMap           *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch           `pulumi:"configMap"`
	DownwardAPI         *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatch         `pulumi:"downwardAPI"`
	Secret              *PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch              `pulumi:"secret"`
	ServiceAccountToken *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch `pulumi:"serviceAccountToken"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput
}

// Projection that may be projected along with other supported volume types.
// Exactly one of these fields must be set.
type PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArgs struct {
	ClusterTrustBundle  PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrInput  `pulumi:"clusterTrustBundle"`
	ConfigMap           PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrInput           `pulumi:"configMap"`
	DownwardAPI         PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrInput         `pulumi:"downwardAPI"`
	Secret              PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrInput              `pulumi:"secret"`
	ServiceAccountToken PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrInput `pulumi:"serviceAccountToken"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArray and PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArray []PoolerSpecTemplateSpecVolumesProjectedSourcesPatchInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput)
}

// Projection that may be projected along with other supported volume types.
// Exactly one of these fields must be set.
type PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput) ClusterTrustBundle() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesPatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatch {
		return v.ClusterTrustBundle
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput) ConfigMap() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesPatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatch {
		return v.ConfigMap
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput) DownwardAPI() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesPatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatch {
		return v.DownwardAPI
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput) Secret() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesPatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch {
		return v.Secret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput) ServiceAccountToken() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesPatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch {
		return v.ServiceAccountToken
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSourcesPatch {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSourcesPatch)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput)
}

// secret information about the secret data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecret struct {
	// items if unspecified, each key-value pair in the Data field of the referenced
	// Secret will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the Secret,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items []PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems `pulumi:"items"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// optional field specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesSecretInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesSecretInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput
}

// secret information about the secret data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs struct {
	// items if unspecified, each key-value pair in the Data field of the referenced
	// Secret will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the Secret,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayInput `pulumi:"items"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// optional field specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput)
}

// secret information about the secret data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput)
}

// items if unspecified, each key-value pair in the Data field of the referenced
// Secret will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the Secret,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) []PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems {
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// optional field specify whether the Secret or its key must be defined
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) PoolerSpecTemplateSpecVolumesProjectedSourcesSecret {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesSecret
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput)
}

// items if unspecified, each key-value pair in the Data field of the referenced
// Secret will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the Secret,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) []PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// optional field specify whether the Secret or its key must be defined
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems struct {
	// key is the key to project.
	Key *string `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path *string `pulumi:"path"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs struct {
	// key is the key to project.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArray and PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArray []PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput {
	return o
}

// key is the key to project.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// mode is Optional: mode bits used to set permissions on this file.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// path is the relative path of the file to map the key to.
// May not be an absolute path.
// May not contain the path element '..'.
// May not start with the string '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatch struct {
	// key is the key to project.
	Key *string `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path *string `pulumi:"path"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArgs struct {
	// key is the key to project.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArray and PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArray []PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput {
	return o
}

// key is the key to project.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// mode is Optional: mode bits used to set permissions on this file.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatch) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// path is the relative path of the file to map the key to.
// May not be an absolute path.
// May not contain the path element '..'.
// May not start with the string '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatch {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatch)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput)
}

// secret information about the secret data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch struct {
	// items if unspecified, each key-value pair in the Data field of the referenced
	// Secret will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the Secret,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items []PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatch `pulumi:"items"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// optional field specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput
}

// secret information about the secret data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchArgs struct {
	// items if unspecified, each key-value pair in the Data field of the referenced
	// Secret will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the Secret,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayInput `pulumi:"items"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// optional field specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput)
}

// secret information about the secret data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput)
}

// items if unspecified, each key-value pair in the Data field of the referenced
// Secret will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the Secret,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch) []PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatch {
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// optional field specify whether the Secret or its key must be defined
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput)
}

// items if unspecified, each key-value pair in the Data field of the referenced
// Secret will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the Secret,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch) []PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatch {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// optional field specify whether the Secret or its key must be defined
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// serviceAccountToken is information about the serviceAccountToken data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken struct {
	// audience is the intended audience of the token. A recipient of a token
	// must identify itself with an identifier specified in the audience of the
	// token, and otherwise should reject the token. The audience defaults to the
	// identifier of the apiserver.
	Audience *string `pulumi:"audience"`
	// expirationSeconds is the requested duration of validity of the service
	// account token. As the token approaches expiration, the kubelet volume
	// plugin will proactively rotate the service account token. The kubelet will
	// start trying to rotate the token if the token is older than 80 percent of
	// its time to live or if the token is older than 24 hours.Defaults to 1 hour
	// and must be at least 10 minutes.
	ExpirationSeconds *int `pulumi:"expirationSeconds"`
	// path is the path relative to the mount point of the file to project the
	// token into.
	Path *string `pulumi:"path"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput
}

// serviceAccountToken is information about the serviceAccountToken data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs struct {
	// audience is the intended audience of the token. A recipient of a token
	// must identify itself with an identifier specified in the audience of the
	// token, and otherwise should reject the token. The audience defaults to the
	// identifier of the apiserver.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// expirationSeconds is the requested duration of validity of the service
	// account token. As the token approaches expiration, the kubelet volume
	// plugin will proactively rotate the service account token. The kubelet will
	// start trying to rotate the token if the token is older than 80 percent of
	// its time to live or if the token is older than 24 hours.Defaults to 1 hour
	// and must be at least 10 minutes.
	ExpirationSeconds pulumi.IntPtrInput `pulumi:"expirationSeconds"`
	// path is the path relative to the mount point of the file to project the
	// token into.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput)
}

// serviceAccountToken is information about the serviceAccountToken data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput)
}

// audience is the intended audience of the token. A recipient of a token
// must identify itself with an identifier specified in the audience of the
// token, and otherwise should reject the token. The audience defaults to the
// identifier of the apiserver.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// expirationSeconds is the requested duration of validity of the service
// account token. As the token approaches expiration, the kubelet volume
// plugin will proactively rotate the service account token. The kubelet will
// start trying to rotate the token if the token is older than 80 percent of
// its time to live or if the token is older than 24 hours.Defaults to 1 hour
// and must be at least 10 minutes.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) *int {
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

// path is the path relative to the mount point of the file to project the
// token into.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput)
}

// audience is the intended audience of the token. A recipient of a token
// must identify itself with an identifier specified in the audience of the
// token, and otherwise should reject the token. The audience defaults to the
// identifier of the apiserver.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// expirationSeconds is the requested duration of validity of the service
// account token. As the token approaches expiration, the kubelet volume
// plugin will proactively rotate the service account token. The kubelet will
// start trying to rotate the token if the token is older than 80 percent of
// its time to live or if the token is older than 24 hours.Defaults to 1 hour
// and must be at least 10 minutes.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) *int {
		if v == nil {
			return nil
		}
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

// path is the path relative to the mount point of the file to project the
// token into.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// serviceAccountToken is information about the serviceAccountToken data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch struct {
	// audience is the intended audience of the token. A recipient of a token
	// must identify itself with an identifier specified in the audience of the
	// token, and otherwise should reject the token. The audience defaults to the
	// identifier of the apiserver.
	Audience *string `pulumi:"audience"`
	// expirationSeconds is the requested duration of validity of the service
	// account token. As the token approaches expiration, the kubelet volume
	// plugin will proactively rotate the service account token. The kubelet will
	// start trying to rotate the token if the token is older than 80 percent of
	// its time to live or if the token is older than 24 hours.Defaults to 1 hour
	// and must be at least 10 minutes.
	ExpirationSeconds *int `pulumi:"expirationSeconds"`
	// path is the path relative to the mount point of the file to project the
	// token into.
	Path *string `pulumi:"path"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput
}

// serviceAccountToken is information about the serviceAccountToken data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchArgs struct {
	// audience is the intended audience of the token. A recipient of a token
	// must identify itself with an identifier specified in the audience of the
	// token, and otherwise should reject the token. The audience defaults to the
	// identifier of the apiserver.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// expirationSeconds is the requested duration of validity of the service
	// account token. As the token approaches expiration, the kubelet volume
	// plugin will proactively rotate the service account token. The kubelet will
	// start trying to rotate the token if the token is older than 80 percent of
	// its time to live or if the token is older than 24 hours.Defaults to 1 hour
	// and must be at least 10 minutes.
	ExpirationSeconds pulumi.IntPtrInput `pulumi:"expirationSeconds"`
	// path is the path relative to the mount point of the file to project the
	// token into.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput)
}

// serviceAccountToken is information about the serviceAccountToken data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch) *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput)
}

// audience is the intended audience of the token. A recipient of a token
// must identify itself with an identifier specified in the audience of the
// token, and otherwise should reject the token. The audience defaults to the
// identifier of the apiserver.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch) *string {
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// expirationSeconds is the requested duration of validity of the service
// account token. As the token approaches expiration, the kubelet volume
// plugin will proactively rotate the service account token. The kubelet will
// start trying to rotate the token if the token is older than 80 percent of
// its time to live or if the token is older than 24 hours.Defaults to 1 hour
// and must be at least 10 minutes.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch) *int {
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

// path is the path relative to the mount point of the file to project the
// token into.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput)
}

// audience is the intended audience of the token. A recipient of a token
// must identify itself with an identifier specified in the audience of the
// token, and otherwise should reject the token. The audience defaults to the
// identifier of the apiserver.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// expirationSeconds is the requested duration of validity of the service
// account token. As the token approaches expiration, the kubelet volume
// plugin will proactively rotate the service account token. The kubelet will
// start trying to rotate the token if the token is older than 80 percent of
// its time to live or if the token is older than 24 hours.Defaults to 1 hour
// and must be at least 10 minutes.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch) *int {
		if v == nil {
			return nil
		}
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

// path is the path relative to the mount point of the file to project the
// token into.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// quobyte represents a Quobyte mount on the host that shares a pod's lifetime.
// Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.
type PoolerSpecTemplateSpecVolumesQuobyte struct {
	// group to map volume access to
	// Default is no group
	Group *string `pulumi:"group"`
	// readOnly here will force the Quobyte volume to be mounted with read-only permissions.
	// Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// registry represents a single or multiple Quobyte Registry services
	// specified as a string as host:port pair (multiple entries are separated with commas)
	// which acts as the central registry for volumes
	Registry *string `pulumi:"registry"`
	// tenant owning the given Quobyte volume in the Backend
	// Used with dynamically provisioned Quobyte volumes, value is set by the plugin
	Tenant *string `pulumi:"tenant"`
	// user to map volume access to
	// Defaults to serivceaccount user
	User *string `pulumi:"user"`
	// volume is a string that references an already created Quobyte volume by name.
	Volume *string `pulumi:"volume"`
}

// PoolerSpecTemplateSpecVolumesQuobyteInput is an input type that accepts PoolerSpecTemplateSpecVolumesQuobyteArgs and PoolerSpecTemplateSpecVolumesQuobyteOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesQuobyteInput` via:
//
//	PoolerSpecTemplateSpecVolumesQuobyteArgs{...}
type PoolerSpecTemplateSpecVolumesQuobyteInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesQuobyteOutput() PoolerSpecTemplateSpecVolumesQuobyteOutput
	ToPoolerSpecTemplateSpecVolumesQuobyteOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesQuobyteOutput
}

// quobyte represents a Quobyte mount on the host that shares a pod's lifetime.
// Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.
type PoolerSpecTemplateSpecVolumesQuobyteArgs struct {
	// group to map volume access to
	// Default is no group
	Group pulumi.StringPtrInput `pulumi:"group"`
	// readOnly here will force the Quobyte volume to be mounted with read-only permissions.
	// Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// registry represents a single or multiple Quobyte Registry services
	// specified as a string as host:port pair (multiple entries are separated with commas)
	// which acts as the central registry for volumes
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// tenant owning the given Quobyte volume in the Backend
	// Used with dynamically provisioned Quobyte volumes, value is set by the plugin
	Tenant pulumi.StringPtrInput `pulumi:"tenant"`
	// user to map volume access to
	// Defaults to serivceaccount user
	User pulumi.StringPtrInput `pulumi:"user"`
	// volume is a string that references an already created Quobyte volume by name.
	Volume pulumi.StringPtrInput `pulumi:"volume"`
}

func (PoolerSpecTemplateSpecVolumesQuobyteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesQuobyte)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesQuobyteArgs) ToPoolerSpecTemplateSpecVolumesQuobyteOutput() PoolerSpecTemplateSpecVolumesQuobyteOutput {
	return i.ToPoolerSpecTemplateSpecVolumesQuobyteOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesQuobyteArgs) ToPoolerSpecTemplateSpecVolumesQuobyteOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobyteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesQuobyteOutput)
}

func (i PoolerSpecTemplateSpecVolumesQuobyteArgs) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutput() PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesQuobyteArgs) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesQuobyteOutput).ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesQuobytePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesQuobyteArgs, PoolerSpecTemplateSpecVolumesQuobytePtr and PoolerSpecTemplateSpecVolumesQuobytePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesQuobytePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesQuobyteArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesQuobytePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesQuobytePtrOutput() PoolerSpecTemplateSpecVolumesQuobytePtrOutput
	ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesQuobytePtrOutput
}

type poolerSpecTemplateSpecVolumesQuobytePtrType PoolerSpecTemplateSpecVolumesQuobyteArgs

func PoolerSpecTemplateSpecVolumesQuobytePtr(v *PoolerSpecTemplateSpecVolumesQuobyteArgs) PoolerSpecTemplateSpecVolumesQuobytePtrInput {
	return (*poolerSpecTemplateSpecVolumesQuobytePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesQuobytePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesQuobyte)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesQuobytePtrType) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutput() PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesQuobytePtrType) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesQuobytePtrOutput)
}

// quobyte represents a Quobyte mount on the host that shares a pod's lifetime.
// Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.
type PoolerSpecTemplateSpecVolumesQuobyteOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesQuobyteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesQuobyte)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) ToPoolerSpecTemplateSpecVolumesQuobyteOutput() PoolerSpecTemplateSpecVolumesQuobyteOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) ToPoolerSpecTemplateSpecVolumesQuobyteOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobyteOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutput() PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesQuobyte) *PoolerSpecTemplateSpecVolumesQuobyte {
		return &v
	}).(PoolerSpecTemplateSpecVolumesQuobytePtrOutput)
}

// group to map volume access to
// Default is no group
func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobyte) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// readOnly here will force the Quobyte volume to be mounted with read-only permissions.
// Defaults to false.
func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobyte) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// registry represents a single or multiple Quobyte Registry services
// specified as a string as host:port pair (multiple entries are separated with commas)
// which acts as the central registry for volumes
func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobyte) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// tenant owning the given Quobyte volume in the Backend
// Used with dynamically provisioned Quobyte volumes, value is set by the plugin
func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobyte) *string { return v.Tenant }).(pulumi.StringPtrOutput)
}

// user to map volume access to
// Defaults to serivceaccount user
func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobyte) *string { return v.User }).(pulumi.StringPtrOutput)
}

// volume is a string that references an already created Quobyte volume by name.
func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) Volume() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobyte) *string { return v.Volume }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesQuobytePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesQuobytePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesQuobyte)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutput() PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) Elem() PoolerSpecTemplateSpecVolumesQuobyteOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobyte) PoolerSpecTemplateSpecVolumesQuobyte {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesQuobyte
		return ret
	}).(PoolerSpecTemplateSpecVolumesQuobyteOutput)
}

// group to map volume access to
// Default is no group
func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the Quobyte volume to be mounted with read-only permissions.
// Defaults to false.
func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobyte) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// registry represents a single or multiple Quobyte Registry services
// specified as a string as host:port pair (multiple entries are separated with commas)
// which acts as the central registry for volumes
func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return v.Registry
	}).(pulumi.StringPtrOutput)
}

// tenant owning the given Quobyte volume in the Backend
// Used with dynamically provisioned Quobyte volumes, value is set by the plugin
func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return v.Tenant
	}).(pulumi.StringPtrOutput)
}

// user to map volume access to
// Defaults to serivceaccount user
func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// volume is a string that references an already created Quobyte volume by name.
func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) Volume() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return v.Volume
	}).(pulumi.StringPtrOutput)
}

// quobyte represents a Quobyte mount on the host that shares a pod's lifetime.
// Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.
type PoolerSpecTemplateSpecVolumesQuobytePatch struct {
	// group to map volume access to
	// Default is no group
	Group *string `pulumi:"group"`
	// readOnly here will force the Quobyte volume to be mounted with read-only permissions.
	// Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// registry represents a single or multiple Quobyte Registry services
	// specified as a string as host:port pair (multiple entries are separated with commas)
	// which acts as the central registry for volumes
	Registry *string `pulumi:"registry"`
	// tenant owning the given Quobyte volume in the Backend
	// Used with dynamically provisioned Quobyte volumes, value is set by the plugin
	Tenant *string `pulumi:"tenant"`
	// user to map volume access to
	// Defaults to serivceaccount user
	User *string `pulumi:"user"`
	// volume is a string that references an already created Quobyte volume by name.
	Volume *string `pulumi:"volume"`
}

// PoolerSpecTemplateSpecVolumesQuobytePatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesQuobytePatchArgs and PoolerSpecTemplateSpecVolumesQuobytePatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesQuobytePatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesQuobytePatchArgs{...}
type PoolerSpecTemplateSpecVolumesQuobytePatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesQuobytePatchOutput() PoolerSpecTemplateSpecVolumesQuobytePatchOutput
	ToPoolerSpecTemplateSpecVolumesQuobytePatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesQuobytePatchOutput
}

// quobyte represents a Quobyte mount on the host that shares a pod's lifetime.
// Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.
type PoolerSpecTemplateSpecVolumesQuobytePatchArgs struct {
	// group to map volume access to
	// Default is no group
	Group pulumi.StringPtrInput `pulumi:"group"`
	// readOnly here will force the Quobyte volume to be mounted with read-only permissions.
	// Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// registry represents a single or multiple Quobyte Registry services
	// specified as a string as host:port pair (multiple entries are separated with commas)
	// which acts as the central registry for volumes
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// tenant owning the given Quobyte volume in the Backend
	// Used with dynamically provisioned Quobyte volumes, value is set by the plugin
	Tenant pulumi.StringPtrInput `pulumi:"tenant"`
	// user to map volume access to
	// Defaults to serivceaccount user
	User pulumi.StringPtrInput `pulumi:"user"`
	// volume is a string that references an already created Quobyte volume by name.
	Volume pulumi.StringPtrInput `pulumi:"volume"`
}

func (PoolerSpecTemplateSpecVolumesQuobytePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesQuobytePatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesQuobytePatchArgs) ToPoolerSpecTemplateSpecVolumesQuobytePatchOutput() PoolerSpecTemplateSpecVolumesQuobytePatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesQuobytePatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesQuobytePatchArgs) ToPoolerSpecTemplateSpecVolumesQuobytePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobytePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesQuobytePatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesQuobytePatchArgs) ToPoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput() PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesQuobytePatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesQuobytePatchArgs) ToPoolerSpecTemplateSpecVolumesQuobytePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesQuobytePatchOutput).ToPoolerSpecTemplateSpecVolumesQuobytePatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesQuobytePatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesQuobytePatchArgs, PoolerSpecTemplateSpecVolumesQuobytePatchPtr and PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesQuobytePatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesQuobytePatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesQuobytePatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput() PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesQuobytePatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput
}

type poolerSpecTemplateSpecVolumesQuobytePatchPtrType PoolerSpecTemplateSpecVolumesQuobytePatchArgs

func PoolerSpecTemplateSpecVolumesQuobytePatchPtr(v *PoolerSpecTemplateSpecVolumesQuobytePatchArgs) PoolerSpecTemplateSpecVolumesQuobytePatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesQuobytePatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesQuobytePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesQuobytePatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesQuobytePatchPtrType) ToPoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput() PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesQuobytePatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesQuobytePatchPtrType) ToPoolerSpecTemplateSpecVolumesQuobytePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput)
}

// quobyte represents a Quobyte mount on the host that shares a pod's lifetime.
// Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.
type PoolerSpecTemplateSpecVolumesQuobytePatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesQuobytePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesQuobytePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesQuobytePatchOutput) ToPoolerSpecTemplateSpecVolumesQuobytePatchOutput() PoolerSpecTemplateSpecVolumesQuobytePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesQuobytePatchOutput) ToPoolerSpecTemplateSpecVolumesQuobytePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobytePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesQuobytePatchOutput) ToPoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput() PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesQuobytePatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesQuobytePatchOutput) ToPoolerSpecTemplateSpecVolumesQuobytePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesQuobytePatch) *PoolerSpecTemplateSpecVolumesQuobytePatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput)
}

// group to map volume access to
// Default is no group
func (o PoolerSpecTemplateSpecVolumesQuobytePatchOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobytePatch) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// readOnly here will force the Quobyte volume to be mounted with read-only permissions.
// Defaults to false.
func (o PoolerSpecTemplateSpecVolumesQuobytePatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobytePatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// registry represents a single or multiple Quobyte Registry services
// specified as a string as host:port pair (multiple entries are separated with commas)
// which acts as the central registry for volumes
func (o PoolerSpecTemplateSpecVolumesQuobytePatchOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobytePatch) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// tenant owning the given Quobyte volume in the Backend
// Used with dynamically provisioned Quobyte volumes, value is set by the plugin
func (o PoolerSpecTemplateSpecVolumesQuobytePatchOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobytePatch) *string { return v.Tenant }).(pulumi.StringPtrOutput)
}

// user to map volume access to
// Defaults to serivceaccount user
func (o PoolerSpecTemplateSpecVolumesQuobytePatchOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobytePatch) *string { return v.User }).(pulumi.StringPtrOutput)
}

// volume is a string that references an already created Quobyte volume by name.
func (o PoolerSpecTemplateSpecVolumesQuobytePatchOutput) Volume() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobytePatch) *string { return v.Volume }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesQuobytePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput() PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesQuobytePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesQuobytePatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobytePatch) PoolerSpecTemplateSpecVolumesQuobytePatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesQuobytePatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesQuobytePatchOutput)
}

// group to map volume access to
// Default is no group
func (o PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobytePatch) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the Quobyte volume to be mounted with read-only permissions.
// Defaults to false.
func (o PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobytePatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// registry represents a single or multiple Quobyte Registry services
// specified as a string as host:port pair (multiple entries are separated with commas)
// which acts as the central registry for volumes
func (o PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobytePatch) *string {
		if v == nil {
			return nil
		}
		return v.Registry
	}).(pulumi.StringPtrOutput)
}

// tenant owning the given Quobyte volume in the Backend
// Used with dynamically provisioned Quobyte volumes, value is set by the plugin
func (o PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobytePatch) *string {
		if v == nil {
			return nil
		}
		return v.Tenant
	}).(pulumi.StringPtrOutput)
}

// user to map volume access to
// Defaults to serivceaccount user
func (o PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobytePatch) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// volume is a string that references an already created Quobyte volume by name.
func (o PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput) Volume() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobytePatch) *string {
		if v == nil {
			return nil
		}
		return v.Volume
	}).(pulumi.StringPtrOutput)
}

// rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
// Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.
// More info: https://examples.k8s.io/volumes/rbd/README.md
type PoolerSpecTemplateSpecVolumesRbd struct {
	// fsType is the filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
	FsType *string `pulumi:"fsType"`
	// image is the rados image name.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Image *string `pulumi:"image"`
	// keyring is the path to key ring for RBDUser.
	// Default is /etc/ceph/keyring.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Keyring *string `pulumi:"keyring"`
	// monitors is a collection of Ceph monitors.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Monitors []string `pulumi:"monitors"`
	// pool is the rados pool name.
	// Default is rbd.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Pool *string `pulumi:"pool"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	ReadOnly  *bool                                      `pulumi:"readOnly"`
	SecretRef *PoolerSpecTemplateSpecVolumesRbdSecretRef `pulumi:"secretRef"`
	// user is the rados user name.
	// Default is admin.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	User *string `pulumi:"user"`
}

// PoolerSpecTemplateSpecVolumesRbdInput is an input type that accepts PoolerSpecTemplateSpecVolumesRbdArgs and PoolerSpecTemplateSpecVolumesRbdOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesRbdInput` via:
//
//	PoolerSpecTemplateSpecVolumesRbdArgs{...}
type PoolerSpecTemplateSpecVolumesRbdInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesRbdOutput() PoolerSpecTemplateSpecVolumesRbdOutput
	ToPoolerSpecTemplateSpecVolumesRbdOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesRbdOutput
}

// rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
// Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.
// More info: https://examples.k8s.io/volumes/rbd/README.md
type PoolerSpecTemplateSpecVolumesRbdArgs struct {
	// fsType is the filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// image is the rados image name.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Image pulumi.StringPtrInput `pulumi:"image"`
	// keyring is the path to key ring for RBDUser.
	// Default is /etc/ceph/keyring.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Keyring pulumi.StringPtrInput `pulumi:"keyring"`
	// monitors is a collection of Ceph monitors.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Monitors pulumi.StringArrayInput `pulumi:"monitors"`
	// pool is the rados pool name.
	// Default is rbd.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Pool pulumi.StringPtrInput `pulumi:"pool"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	ReadOnly  pulumi.BoolPtrInput                               `pulumi:"readOnly"`
	SecretRef PoolerSpecTemplateSpecVolumesRbdSecretRefPtrInput `pulumi:"secretRef"`
	// user is the rados user name.
	// Default is admin.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (PoolerSpecTemplateSpecVolumesRbdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbd)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesRbdArgs) ToPoolerSpecTemplateSpecVolumesRbdOutput() PoolerSpecTemplateSpecVolumesRbdOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesRbdArgs) ToPoolerSpecTemplateSpecVolumesRbdOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdOutput)
}

func (i PoolerSpecTemplateSpecVolumesRbdArgs) ToPoolerSpecTemplateSpecVolumesRbdPtrOutput() PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesRbdArgs) ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdOutput).ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesRbdPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesRbdArgs, PoolerSpecTemplateSpecVolumesRbdPtr and PoolerSpecTemplateSpecVolumesRbdPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesRbdPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesRbdArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesRbdPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesRbdPtrOutput() PoolerSpecTemplateSpecVolumesRbdPtrOutput
	ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesRbdPtrOutput
}

type poolerSpecTemplateSpecVolumesRbdPtrType PoolerSpecTemplateSpecVolumesRbdArgs

func PoolerSpecTemplateSpecVolumesRbdPtr(v *PoolerSpecTemplateSpecVolumesRbdArgs) PoolerSpecTemplateSpecVolumesRbdPtrInput {
	return (*poolerSpecTemplateSpecVolumesRbdPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesRbdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesRbd)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesRbdPtrType) ToPoolerSpecTemplateSpecVolumesRbdPtrOutput() PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesRbdPtrType) ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdPtrOutput)
}

// rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
// Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.
// More info: https://examples.k8s.io/volumes/rbd/README.md
type PoolerSpecTemplateSpecVolumesRbdOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesRbdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbd)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesRbdOutput) ToPoolerSpecTemplateSpecVolumesRbdOutput() PoolerSpecTemplateSpecVolumesRbdOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdOutput) ToPoolerSpecTemplateSpecVolumesRbdOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdOutput) ToPoolerSpecTemplateSpecVolumesRbdPtrOutput() PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesRbdOutput) ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesRbd) *PoolerSpecTemplateSpecVolumesRbd {
		return &v
	}).(PoolerSpecTemplateSpecVolumesRbdPtrOutput)
}

// fsType is the filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
func (o PoolerSpecTemplateSpecVolumesRbdOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// image is the rados image name.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// keyring is the path to key ring for RBDUser.
// Default is /etc/ceph/keyring.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdOutput) Keyring() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) *string { return v.Keyring }).(pulumi.StringPtrOutput)
}

// monitors is a collection of Ceph monitors.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) []string { return v.Monitors }).(pulumi.StringArrayOutput)
}

// pool is the rados pool name.
// Default is rbd.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdOutput) Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) *string { return v.Pool }).(pulumi.StringPtrOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesRbdOutput) SecretRef() PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) *PoolerSpecTemplateSpecVolumesRbdSecretRef {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput)
}

// user is the rados user name.
// Default is admin.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) *string { return v.User }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesRbdPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesRbdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesRbd)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) ToPoolerSpecTemplateSpecVolumesRbdPtrOutput() PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) Elem() PoolerSpecTemplateSpecVolumesRbdOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) PoolerSpecTemplateSpecVolumesRbd {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesRbd
		return ret
	}).(PoolerSpecTemplateSpecVolumesRbdOutput)
}

// fsType is the filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// image is the rados image name.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// keyring is the path to key ring for RBDUser.
// Default is /etc/ceph/keyring.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) Keyring() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.Keyring
	}).(pulumi.StringPtrOutput)
}

// monitors is a collection of Ceph monitors.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) []string {
		if v == nil {
			return nil
		}
		return v.Monitors
	}).(pulumi.StringArrayOutput)
}

// pool is the rados pool name.
// Default is rbd.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.Pool
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) *PoolerSpecTemplateSpecVolumesRbdSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput)
}

// user is the rados user name.
// Default is admin.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
// Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.
// More info: https://examples.k8s.io/volumes/rbd/README.md
type PoolerSpecTemplateSpecVolumesRbdPatch struct {
	// fsType is the filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
	FsType *string `pulumi:"fsType"`
	// image is the rados image name.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Image *string `pulumi:"image"`
	// keyring is the path to key ring for RBDUser.
	// Default is /etc/ceph/keyring.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Keyring *string `pulumi:"keyring"`
	// monitors is a collection of Ceph monitors.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Monitors []string `pulumi:"monitors"`
	// pool is the rados pool name.
	// Default is rbd.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Pool *string `pulumi:"pool"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	ReadOnly  *bool                                           `pulumi:"readOnly"`
	SecretRef *PoolerSpecTemplateSpecVolumesRbdSecretRefPatch `pulumi:"secretRef"`
	// user is the rados user name.
	// Default is admin.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	User *string `pulumi:"user"`
}

// PoolerSpecTemplateSpecVolumesRbdPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesRbdPatchArgs and PoolerSpecTemplateSpecVolumesRbdPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesRbdPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesRbdPatchArgs{...}
type PoolerSpecTemplateSpecVolumesRbdPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesRbdPatchOutput() PoolerSpecTemplateSpecVolumesRbdPatchOutput
	ToPoolerSpecTemplateSpecVolumesRbdPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesRbdPatchOutput
}

// rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
// Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.
// More info: https://examples.k8s.io/volumes/rbd/README.md
type PoolerSpecTemplateSpecVolumesRbdPatchArgs struct {
	// fsType is the filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// image is the rados image name.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Image pulumi.StringPtrInput `pulumi:"image"`
	// keyring is the path to key ring for RBDUser.
	// Default is /etc/ceph/keyring.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Keyring pulumi.StringPtrInput `pulumi:"keyring"`
	// monitors is a collection of Ceph monitors.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Monitors pulumi.StringArrayInput `pulumi:"monitors"`
	// pool is the rados pool name.
	// Default is rbd.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Pool pulumi.StringPtrInput `pulumi:"pool"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	ReadOnly  pulumi.BoolPtrInput                                    `pulumi:"readOnly"`
	SecretRef PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrInput `pulumi:"secretRef"`
	// user is the rados user name.
	// Default is admin.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (PoolerSpecTemplateSpecVolumesRbdPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesRbdPatchArgs) ToPoolerSpecTemplateSpecVolumesRbdPatchOutput() PoolerSpecTemplateSpecVolumesRbdPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesRbdPatchArgs) ToPoolerSpecTemplateSpecVolumesRbdPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesRbdPatchArgs) ToPoolerSpecTemplateSpecVolumesRbdPatchPtrOutput() PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesRbdPatchArgs) ToPoolerSpecTemplateSpecVolumesRbdPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdPatchOutput).ToPoolerSpecTemplateSpecVolumesRbdPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesRbdPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesRbdPatchArgs, PoolerSpecTemplateSpecVolumesRbdPatchPtr and PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesRbdPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesRbdPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesRbdPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesRbdPatchPtrOutput() PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesRbdPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesRbdPatchPtrType PoolerSpecTemplateSpecVolumesRbdPatchArgs

func PoolerSpecTemplateSpecVolumesRbdPatchPtr(v *PoolerSpecTemplateSpecVolumesRbdPatchArgs) PoolerSpecTemplateSpecVolumesRbdPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesRbdPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesRbdPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesRbdPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesRbdPatchPtrType) ToPoolerSpecTemplateSpecVolumesRbdPatchPtrOutput() PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesRbdPatchPtrType) ToPoolerSpecTemplateSpecVolumesRbdPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput)
}

// rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
// Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.
// More info: https://examples.k8s.io/volumes/rbd/README.md
type PoolerSpecTemplateSpecVolumesRbdPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesRbdPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesRbdPatchOutput) ToPoolerSpecTemplateSpecVolumesRbdPatchOutput() PoolerSpecTemplateSpecVolumesRbdPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdPatchOutput) ToPoolerSpecTemplateSpecVolumesRbdPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdPatchOutput) ToPoolerSpecTemplateSpecVolumesRbdPatchPtrOutput() PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesRbdPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesRbdPatchOutput) ToPoolerSpecTemplateSpecVolumesRbdPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesRbdPatch) *PoolerSpecTemplateSpecVolumesRbdPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput)
}

// fsType is the filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
func (o PoolerSpecTemplateSpecVolumesRbdPatchOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbdPatch) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// image is the rados image name.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPatchOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbdPatch) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// keyring is the path to key ring for RBDUser.
// Default is /etc/ceph/keyring.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPatchOutput) Keyring() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbdPatch) *string { return v.Keyring }).(pulumi.StringPtrOutput)
}

// monitors is a collection of Ceph monitors.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPatchOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbdPatch) []string { return v.Monitors }).(pulumi.StringArrayOutput)
}

// pool is the rados pool name.
// Default is rbd.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPatchOutput) Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbdPatch) *string { return v.Pool }).(pulumi.StringPtrOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbdPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesRbdPatchOutput) SecretRef() PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbdPatch) *PoolerSpecTemplateSpecVolumesRbdSecretRefPatch {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput)
}

// user is the rados user name.
// Default is admin.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPatchOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbdPatch) *string { return v.User }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesRbdPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesRbdPatchPtrOutput() PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesRbdPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesRbdPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdPatch) PoolerSpecTemplateSpecVolumesRbdPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesRbdPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesRbdPatchOutput)
}

// fsType is the filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
func (o PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdPatch) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// image is the rados image name.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// keyring is the path to key ring for RBDUser.
// Default is /etc/ceph/keyring.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput) Keyring() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Keyring
	}).(pulumi.StringPtrOutput)
}

// monitors is a collection of Ceph monitors.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdPatch) []string {
		if v == nil {
			return nil
		}
		return v.Monitors
	}).(pulumi.StringArrayOutput)
}

// pool is the rados pool name.
// Default is rbd.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput) Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Pool
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdPatch) *PoolerSpecTemplateSpecVolumesRbdSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput)
}

// user is the rados user name.
// Default is admin.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdPatch) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// secretRef is name of the authentication secret for RBDUser. If provided
// overrides keyring.
// Default is nil.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type PoolerSpecTemplateSpecVolumesRbdSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// PoolerSpecTemplateSpecVolumesRbdSecretRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesRbdSecretRefArgs and PoolerSpecTemplateSpecVolumesRbdSecretRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesRbdSecretRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesRbdSecretRefArgs{...}
type PoolerSpecTemplateSpecVolumesRbdSecretRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesRbdSecretRefOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefOutput
	ToPoolerSpecTemplateSpecVolumesRbdSecretRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefOutput
}

// secretRef is name of the authentication secret for RBDUser. If provided
// overrides keyring.
// Default is nil.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type PoolerSpecTemplateSpecVolumesRbdSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecVolumesRbdSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdSecretRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesRbdSecretRefArgs) ToPoolerSpecTemplateSpecVolumesRbdSecretRefOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdSecretRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesRbdSecretRefArgs) ToPoolerSpecTemplateSpecVolumesRbdSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdSecretRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesRbdSecretRefArgs) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesRbdSecretRefArgs) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdSecretRefOutput).ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesRbdSecretRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesRbdSecretRefArgs, PoolerSpecTemplateSpecVolumesRbdSecretRefPtr and PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesRbdSecretRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesRbdSecretRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesRbdSecretRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput
}

type poolerSpecTemplateSpecVolumesRbdSecretRefPtrType PoolerSpecTemplateSpecVolumesRbdSecretRefArgs

func PoolerSpecTemplateSpecVolumesRbdSecretRefPtr(v *PoolerSpecTemplateSpecVolumesRbdSecretRefArgs) PoolerSpecTemplateSpecVolumesRbdSecretRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesRbdSecretRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesRbdSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesRbdSecretRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesRbdSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesRbdSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput)
}

// secretRef is name of the authentication secret for RBDUser. If provided
// overrides keyring.
// Default is nil.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type PoolerSpecTemplateSpecVolumesRbdSecretRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesRbdSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesRbdSecretRef) *PoolerSpecTemplateSpecVolumesRbdSecretRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesRbdSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbdSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesRbdSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesRbdSecretRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdSecretRef) PoolerSpecTemplateSpecVolumesRbdSecretRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesRbdSecretRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesRbdSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// secretRef is name of the authentication secret for RBDUser. If provided
// overrides keyring.
// Default is nil.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type PoolerSpecTemplateSpecVolumesRbdSecretRefPatch struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// PoolerSpecTemplateSpecVolumesRbdSecretRefPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesRbdSecretRefPatchArgs and PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesRbdSecretRefPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesRbdSecretRefPatchArgs{...}
type PoolerSpecTemplateSpecVolumesRbdSecretRefPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput
	ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput
}

// secretRef is name of the authentication secret for RBDUser. If provided
// overrides keyring.
// Default is nil.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type PoolerSpecTemplateSpecVolumesRbdSecretRefPatchArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecVolumesRbdSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdSecretRefPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesRbdSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesRbdSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesRbdSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesRbdSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput).ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesRbdSecretRefPatchArgs, PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtr and PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesRbdSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrType PoolerSpecTemplateSpecVolumesRbdSecretRefPatchArgs

func PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtr(v *PoolerSpecTemplateSpecVolumesRbdSecretRefPatchArgs) PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesRbdSecretRefPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput)
}

// secretRef is name of the authentication secret for RBDUser. If provided
// overrides keyring.
// Default is nil.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdSecretRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesRbdSecretRefPatch) *PoolerSpecTemplateSpecVolumesRbdSecretRefPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbdSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesRbdSecretRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdSecretRefPatch) PoolerSpecTemplateSpecVolumesRbdSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesRbdSecretRefPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
// Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.
type PoolerSpecTemplateSpecVolumesScaleIO struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs".
	// Default is "xfs".
	FsType *string `pulumi:"fsType"`
	// gateway is the host address of the ScaleIO API Gateway.
	Gateway *string `pulumi:"gateway"`
	// protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
	ProtectionDomain *string `pulumi:"protectionDomain"`
	// readOnly Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly  *bool                                          `pulumi:"readOnly"`
	SecretRef *PoolerSpecTemplateSpecVolumesScaleIOSecretRef `pulumi:"secretRef"`
	// sslEnabled Flag enable/disable SSL communication with Gateway, default false
	SslEnabled *bool `pulumi:"sslEnabled"`
	// storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
	// Default is ThinProvisioned.
	StorageMode *string `pulumi:"storageMode"`
	// storagePool is the ScaleIO Storage Pool associated with the protection domain.
	StoragePool *string `pulumi:"storagePool"`
	// system is the name of the storage system as configured in ScaleIO.
	System *string `pulumi:"system"`
	// volumeName is the name of a volume already created in the ScaleIO system
	// that is associated with this volume source.
	VolumeName *string `pulumi:"volumeName"`
}

// PoolerSpecTemplateSpecVolumesScaleIOInput is an input type that accepts PoolerSpecTemplateSpecVolumesScaleIOArgs and PoolerSpecTemplateSpecVolumesScaleIOOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesScaleIOInput` via:
//
//	PoolerSpecTemplateSpecVolumesScaleIOArgs{...}
type PoolerSpecTemplateSpecVolumesScaleIOInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesScaleIOOutput() PoolerSpecTemplateSpecVolumesScaleIOOutput
	ToPoolerSpecTemplateSpecVolumesScaleIOOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesScaleIOOutput
}

// scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
// Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.
type PoolerSpecTemplateSpecVolumesScaleIOArgs struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs".
	// Default is "xfs".
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// gateway is the host address of the ScaleIO API Gateway.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
	ProtectionDomain pulumi.StringPtrInput `pulumi:"protectionDomain"`
	// readOnly Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly  pulumi.BoolPtrInput                                   `pulumi:"readOnly"`
	SecretRef PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrInput `pulumi:"secretRef"`
	// sslEnabled Flag enable/disable SSL communication with Gateway, default false
	SslEnabled pulumi.BoolPtrInput `pulumi:"sslEnabled"`
	// storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
	// Default is ThinProvisioned.
	StorageMode pulumi.StringPtrInput `pulumi:"storageMode"`
	// storagePool is the ScaleIO Storage Pool associated with the protection domain.
	StoragePool pulumi.StringPtrInput `pulumi:"storagePool"`
	// system is the name of the storage system as configured in ScaleIO.
	System pulumi.StringPtrInput `pulumi:"system"`
	// volumeName is the name of a volume already created in the ScaleIO system
	// that is associated with this volume source.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
}

func (PoolerSpecTemplateSpecVolumesScaleIOArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIO)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesScaleIOArgs) ToPoolerSpecTemplateSpecVolumesScaleIOOutput() PoolerSpecTemplateSpecVolumesScaleIOOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIOOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesScaleIOArgs) ToPoolerSpecTemplateSpecVolumesScaleIOOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIOOutput)
}

func (i PoolerSpecTemplateSpecVolumesScaleIOArgs) ToPoolerSpecTemplateSpecVolumesScaleIOPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIOPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesScaleIOArgs) ToPoolerSpecTemplateSpecVolumesScaleIOPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIOOutput).ToPoolerSpecTemplateSpecVolumesScaleIOPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesScaleIOPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesScaleIOArgs, PoolerSpecTemplateSpecVolumesScaleIOPtr and PoolerSpecTemplateSpecVolumesScaleIOPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesScaleIOPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesScaleIOArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesScaleIOPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesScaleIOPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOPtrOutput
	ToPoolerSpecTemplateSpecVolumesScaleIOPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesScaleIOPtrOutput
}

type poolerSpecTemplateSpecVolumesScaleIOPtrType PoolerSpecTemplateSpecVolumesScaleIOArgs

func PoolerSpecTemplateSpecVolumesScaleIOPtr(v *PoolerSpecTemplateSpecVolumesScaleIOArgs) PoolerSpecTemplateSpecVolumesScaleIOPtrInput {
	return (*poolerSpecTemplateSpecVolumesScaleIOPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesScaleIOPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesScaleIO)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesScaleIOPtrType) ToPoolerSpecTemplateSpecVolumesScaleIOPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIOPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesScaleIOPtrType) ToPoolerSpecTemplateSpecVolumesScaleIOPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIOPtrOutput)
}

// scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
// Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.
type PoolerSpecTemplateSpecVolumesScaleIOOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesScaleIOOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIO)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesScaleIOOutput) ToPoolerSpecTemplateSpecVolumesScaleIOOutput() PoolerSpecTemplateSpecVolumesScaleIOOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOOutput) ToPoolerSpecTemplateSpecVolumesScaleIOOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOOutput) ToPoolerSpecTemplateSpecVolumesScaleIOPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesScaleIOPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesScaleIOOutput) ToPoolerSpecTemplateSpecVolumesScaleIOPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesScaleIO) *PoolerSpecTemplateSpecVolumesScaleIO {
		return &v
	}).(PoolerSpecTemplateSpecVolumesScaleIOPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs".
// Default is "xfs".
func (o PoolerSpecTemplateSpecVolumesScaleIOOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIO) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// gateway is the host address of the ScaleIO API Gateway.
func (o PoolerSpecTemplateSpecVolumesScaleIOOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIO) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
func (o PoolerSpecTemplateSpecVolumesScaleIOOutput) ProtectionDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIO) *string { return v.ProtectionDomain }).(pulumi.StringPtrOutput)
}

// readOnly Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesScaleIOOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIO) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesScaleIOOutput) SecretRef() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIO) *PoolerSpecTemplateSpecVolumesScaleIOSecretRef {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput)
}

// sslEnabled Flag enable/disable SSL communication with Gateway, default false
func (o PoolerSpecTemplateSpecVolumesScaleIOOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIO) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

// storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
// Default is ThinProvisioned.
func (o PoolerSpecTemplateSpecVolumesScaleIOOutput) StorageMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIO) *string { return v.StorageMode }).(pulumi.StringPtrOutput)
}

// storagePool is the ScaleIO Storage Pool associated with the protection domain.
func (o PoolerSpecTemplateSpecVolumesScaleIOOutput) StoragePool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIO) *string { return v.StoragePool }).(pulumi.StringPtrOutput)
}

// system is the name of the storage system as configured in ScaleIO.
func (o PoolerSpecTemplateSpecVolumesScaleIOOutput) System() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIO) *string { return v.System }).(pulumi.StringPtrOutput)
}

// volumeName is the name of a volume already created in the ScaleIO system
// that is associated with this volume source.
func (o PoolerSpecTemplateSpecVolumesScaleIOOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIO) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesScaleIOPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesScaleIOPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesScaleIO)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesScaleIOPtrOutput) ToPoolerSpecTemplateSpecVolumesScaleIOPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOPtrOutput) ToPoolerSpecTemplateSpecVolumesScaleIOPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOPtrOutput) Elem() PoolerSpecTemplateSpecVolumesScaleIOOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIO) PoolerSpecTemplateSpecVolumesScaleIO {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesScaleIO
		return ret
	}).(PoolerSpecTemplateSpecVolumesScaleIOOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs".
// Default is "xfs".
func (o PoolerSpecTemplateSpecVolumesScaleIOPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// gateway is the host address of the ScaleIO API Gateway.
func (o PoolerSpecTemplateSpecVolumesScaleIOPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

// protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
func (o PoolerSpecTemplateSpecVolumesScaleIOPtrOutput) ProtectionDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionDomain
	}).(pulumi.StringPtrOutput)
}

// readOnly Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesScaleIOPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIO) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesScaleIOPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIO) *PoolerSpecTemplateSpecVolumesScaleIOSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput)
}

// sslEnabled Flag enable/disable SSL communication with Gateway, default false
func (o PoolerSpecTemplateSpecVolumesScaleIOPtrOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIO) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnabled
	}).(pulumi.BoolPtrOutput)
}

// storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
// Default is ThinProvisioned.
func (o PoolerSpecTemplateSpecVolumesScaleIOPtrOutput) StorageMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.StorageMode
	}).(pulumi.StringPtrOutput)
}

// storagePool is the ScaleIO Storage Pool associated with the protection domain.
func (o PoolerSpecTemplateSpecVolumesScaleIOPtrOutput) StoragePool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.StoragePool
	}).(pulumi.StringPtrOutput)
}

// system is the name of the storage system as configured in ScaleIO.
func (o PoolerSpecTemplateSpecVolumesScaleIOPtrOutput) System() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.System
	}).(pulumi.StringPtrOutput)
}

// volumeName is the name of a volume already created in the ScaleIO system
// that is associated with this volume source.
func (o PoolerSpecTemplateSpecVolumesScaleIOPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
// Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.
type PoolerSpecTemplateSpecVolumesScaleIOPatch struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs".
	// Default is "xfs".
	FsType *string `pulumi:"fsType"`
	// gateway is the host address of the ScaleIO API Gateway.
	Gateway *string `pulumi:"gateway"`
	// protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
	ProtectionDomain *string `pulumi:"protectionDomain"`
	// readOnly Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly  *bool                                               `pulumi:"readOnly"`
	SecretRef *PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch `pulumi:"secretRef"`
	// sslEnabled Flag enable/disable SSL communication with Gateway, default false
	SslEnabled *bool `pulumi:"sslEnabled"`
	// storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
	// Default is ThinProvisioned.
	StorageMode *string `pulumi:"storageMode"`
	// storagePool is the ScaleIO Storage Pool associated with the protection domain.
	StoragePool *string `pulumi:"storagePool"`
	// system is the name of the storage system as configured in ScaleIO.
	System *string `pulumi:"system"`
	// volumeName is the name of a volume already created in the ScaleIO system
	// that is associated with this volume source.
	VolumeName *string `pulumi:"volumeName"`
}

// PoolerSpecTemplateSpecVolumesScaleIOPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesScaleIOPatchArgs and PoolerSpecTemplateSpecVolumesScaleIOPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesScaleIOPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesScaleIOPatchArgs{...}
type PoolerSpecTemplateSpecVolumesScaleIOPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesScaleIOPatchOutput() PoolerSpecTemplateSpecVolumesScaleIOPatchOutput
	ToPoolerSpecTemplateSpecVolumesScaleIOPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesScaleIOPatchOutput
}

// scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
// Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.
type PoolerSpecTemplateSpecVolumesScaleIOPatchArgs struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs".
	// Default is "xfs".
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// gateway is the host address of the ScaleIO API Gateway.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
	ProtectionDomain pulumi.StringPtrInput `pulumi:"protectionDomain"`
	// readOnly Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly  pulumi.BoolPtrInput                                        `pulumi:"readOnly"`
	SecretRef PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrInput `pulumi:"secretRef"`
	// sslEnabled Flag enable/disable SSL communication with Gateway, default false
	SslEnabled pulumi.BoolPtrInput `pulumi:"sslEnabled"`
	// storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
	// Default is ThinProvisioned.
	StorageMode pulumi.StringPtrInput `pulumi:"storageMode"`
	// storagePool is the ScaleIO Storage Pool associated with the protection domain.
	StoragePool pulumi.StringPtrInput `pulumi:"storagePool"`
	// system is the name of the storage system as configured in ScaleIO.
	System pulumi.StringPtrInput `pulumi:"system"`
	// volumeName is the name of a volume already created in the ScaleIO system
	// that is associated with this volume source.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
}

func (PoolerSpecTemplateSpecVolumesScaleIOPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIOPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesScaleIOPatchArgs) ToPoolerSpecTemplateSpecVolumesScaleIOPatchOutput() PoolerSpecTemplateSpecVolumesScaleIOPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIOPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesScaleIOPatchArgs) ToPoolerSpecTemplateSpecVolumesScaleIOPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIOPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesScaleIOPatchArgs) ToPoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesScaleIOPatchArgs) ToPoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIOPatchOutput).ToPoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesScaleIOPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesScaleIOPatchArgs, PoolerSpecTemplateSpecVolumesScaleIOPatchPtr and PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesScaleIOPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesScaleIOPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesScaleIOPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesScaleIOPatchPtrType PoolerSpecTemplateSpecVolumesScaleIOPatchArgs

func PoolerSpecTemplateSpecVolumesScaleIOPatchPtr(v *PoolerSpecTemplateSpecVolumesScaleIOPatchArgs) PoolerSpecTemplateSpecVolumesScaleIOPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesScaleIOPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesScaleIOPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesScaleIOPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesScaleIOPatchPtrType) ToPoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesScaleIOPatchPtrType) ToPoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput)
}

// scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
// Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.
type PoolerSpecTemplateSpecVolumesScaleIOPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIOPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) ToPoolerSpecTemplateSpecVolumesScaleIOPatchOutput() PoolerSpecTemplateSpecVolumesScaleIOPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) ToPoolerSpecTemplateSpecVolumesScaleIOPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) ToPoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) ToPoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesScaleIOPatch) *PoolerSpecTemplateSpecVolumesScaleIOPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs".
// Default is "xfs".
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIOPatch) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// gateway is the host address of the ScaleIO API Gateway.
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIOPatch) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) ProtectionDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIOPatch) *string { return v.ProtectionDomain }).(pulumi.StringPtrOutput)
}

// readOnly Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIOPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) SecretRef() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIOPatch) *PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput)
}

// sslEnabled Flag enable/disable SSL communication with Gateway, default false
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIOPatch) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

// storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
// Default is ThinProvisioned.
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) StorageMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIOPatch) *string { return v.StorageMode }).(pulumi.StringPtrOutput)
}

// storagePool is the ScaleIO Storage Pool associated with the protection domain.
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) StoragePool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIOPatch) *string { return v.StoragePool }).(pulumi.StringPtrOutput)
}

// system is the name of the storage system as configured in ScaleIO.
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) System() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIOPatch) *string { return v.System }).(pulumi.StringPtrOutput)
}

// volumeName is the name of a volume already created in the ScaleIO system
// that is associated with this volume source.
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIOPatch) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesScaleIOPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesScaleIOPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOPatch) PoolerSpecTemplateSpecVolumesScaleIOPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesScaleIOPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesScaleIOPatchOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs".
// Default is "xfs".
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOPatch) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// gateway is the host address of the ScaleIO API Gateway.
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOPatch) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

// protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput) ProtectionDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOPatch) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionDomain
	}).(pulumi.StringPtrOutput)
}

// readOnly Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOPatch) *PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput)
}

// sslEnabled Flag enable/disable SSL communication with Gateway, default false
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOPatch) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnabled
	}).(pulumi.BoolPtrOutput)
}

// storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
// Default is ThinProvisioned.
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput) StorageMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOPatch) *string {
		if v == nil {
			return nil
		}
		return v.StorageMode
	}).(pulumi.StringPtrOutput)
}

// storagePool is the ScaleIO Storage Pool associated with the protection domain.
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput) StoragePool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOPatch) *string {
		if v == nil {
			return nil
		}
		return v.StoragePool
	}).(pulumi.StringPtrOutput)
}

// system is the name of the storage system as configured in ScaleIO.
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput) System() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOPatch) *string {
		if v == nil {
			return nil
		}
		return v.System
	}).(pulumi.StringPtrOutput)
}

// volumeName is the name of a volume already created in the ScaleIO system
// that is associated with this volume source.
func (o PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOPatch) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// secretRef references to the secret for ScaleIO user and other
// sensitive information. If this is not provided, Login operation will fail.
type PoolerSpecTemplateSpecVolumesScaleIOSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// PoolerSpecTemplateSpecVolumesScaleIOSecretRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesScaleIOSecretRefArgs and PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesScaleIOSecretRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesScaleIOSecretRefArgs{...}
type PoolerSpecTemplateSpecVolumesScaleIOSecretRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput
	ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput
}

// secretRef references to the secret for ScaleIO user and other
// sensitive information. If this is not provided, Login operation will fail.
type PoolerSpecTemplateSpecVolumesScaleIOSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecVolumesScaleIOSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIOSecretRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesScaleIOSecretRefArgs) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesScaleIOSecretRefArgs) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesScaleIOSecretRefArgs) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesScaleIOSecretRefArgs) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput).ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesScaleIOSecretRefArgs, PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtr and PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesScaleIOSecretRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput
}

type poolerSpecTemplateSpecVolumesScaleIOSecretRefPtrType PoolerSpecTemplateSpecVolumesScaleIOSecretRefArgs

func PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtr(v *PoolerSpecTemplateSpecVolumesScaleIOSecretRefArgs) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesScaleIOSecretRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesScaleIOSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesScaleIOSecretRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesScaleIOSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesScaleIOSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput)
}

// secretRef references to the secret for ScaleIO user and other
// sensitive information. If this is not provided, Login operation will fail.
type PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIOSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesScaleIOSecretRef) *PoolerSpecTemplateSpecVolumesScaleIOSecretRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIOSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesScaleIOSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOSecretRef) PoolerSpecTemplateSpecVolumesScaleIOSecretRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesScaleIOSecretRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// secretRef references to the secret for ScaleIO user and other
// sensitive information. If this is not provided, Login operation will fail.
type PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchArgs and PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchArgs{...}
type PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput
	ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput
}

// secretRef references to the secret for ScaleIO user and other
// sensitive information. If this is not provided, Login operation will fail.
type PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput).ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchArgs, PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtr and PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrType PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchArgs

func PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtr(v *PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchArgs) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput)
}

// secretRef references to the secret for ScaleIO user and other
// sensitive information. If this is not provided, Login operation will fail.
type PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch) *PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch) PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// secret represents a secret that should populate this volume.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type PoolerSpecTemplateSpecVolumesSecret struct {
	// defaultMode is Optional: mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values
	// for mode bits. Defaults to 0644.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// items If unspecified, each key-value pair in the Data field of the referenced
	// Secret will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the Secret,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items []PoolerSpecTemplateSpecVolumesSecretItems `pulumi:"items"`
	// optional field specify whether the Secret or its keys must be defined
	Optional *bool `pulumi:"optional"`
	// secretName is the name of the secret in the pod's namespace to use.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	SecretName *string `pulumi:"secretName"`
}

// PoolerSpecTemplateSpecVolumesSecretInput is an input type that accepts PoolerSpecTemplateSpecVolumesSecretArgs and PoolerSpecTemplateSpecVolumesSecretOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesSecretInput` via:
//
//	PoolerSpecTemplateSpecVolumesSecretArgs{...}
type PoolerSpecTemplateSpecVolumesSecretInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesSecretOutput() PoolerSpecTemplateSpecVolumesSecretOutput
	ToPoolerSpecTemplateSpecVolumesSecretOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesSecretOutput
}

// secret represents a secret that should populate this volume.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type PoolerSpecTemplateSpecVolumesSecretArgs struct {
	// defaultMode is Optional: mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values
	// for mode bits. Defaults to 0644.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// items If unspecified, each key-value pair in the Data field of the referenced
	// Secret will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the Secret,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items PoolerSpecTemplateSpecVolumesSecretItemsArrayInput `pulumi:"items"`
	// optional field specify whether the Secret or its keys must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
	// secretName is the name of the secret in the pod's namespace to use.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (PoolerSpecTemplateSpecVolumesSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecret)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesSecretArgs) ToPoolerSpecTemplateSpecVolumesSecretOutput() PoolerSpecTemplateSpecVolumesSecretOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesSecretArgs) ToPoolerSpecTemplateSpecVolumesSecretOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretOutput)
}

func (i PoolerSpecTemplateSpecVolumesSecretArgs) ToPoolerSpecTemplateSpecVolumesSecretPtrOutput() PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesSecretArgs) ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretOutput).ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesSecretPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesSecretArgs, PoolerSpecTemplateSpecVolumesSecretPtr and PoolerSpecTemplateSpecVolumesSecretPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesSecretPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesSecretArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesSecretPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesSecretPtrOutput() PoolerSpecTemplateSpecVolumesSecretPtrOutput
	ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesSecretPtrOutput
}

type poolerSpecTemplateSpecVolumesSecretPtrType PoolerSpecTemplateSpecVolumesSecretArgs

func PoolerSpecTemplateSpecVolumesSecretPtr(v *PoolerSpecTemplateSpecVolumesSecretArgs) PoolerSpecTemplateSpecVolumesSecretPtrInput {
	return (*poolerSpecTemplateSpecVolumesSecretPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesSecret)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesSecretPtrType) ToPoolerSpecTemplateSpecVolumesSecretPtrOutput() PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesSecretPtrType) ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretPtrOutput)
}

// secret represents a secret that should populate this volume.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type PoolerSpecTemplateSpecVolumesSecretOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecret)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesSecretOutput) ToPoolerSpecTemplateSpecVolumesSecretOutput() PoolerSpecTemplateSpecVolumesSecretOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretOutput) ToPoolerSpecTemplateSpecVolumesSecretOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretOutput) ToPoolerSpecTemplateSpecVolumesSecretPtrOutput() PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesSecretOutput) ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesSecret) *PoolerSpecTemplateSpecVolumesSecret {
		return &v
	}).(PoolerSpecTemplateSpecVolumesSecretPtrOutput)
}

// defaultMode is Optional: mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values
// for mode bits. Defaults to 0644.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesSecretOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecret) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// items If unspecified, each key-value pair in the Data field of the referenced
// Secret will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the Secret,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesSecretOutput) Items() PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecret) []PoolerSpecTemplateSpecVolumesSecretItems { return v.Items }).(PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput)
}

// optional field specify whether the Secret or its keys must be defined
func (o PoolerSpecTemplateSpecVolumesSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

// secretName is the name of the secret in the pod's namespace to use.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
func (o PoolerSpecTemplateSpecVolumesSecretOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecret) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesSecretPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesSecret)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesSecretPtrOutput) ToPoolerSpecTemplateSpecVolumesSecretPtrOutput() PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretPtrOutput) ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretPtrOutput) Elem() PoolerSpecTemplateSpecVolumesSecretOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecret) PoolerSpecTemplateSpecVolumesSecret {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesSecret
		return ret
	}).(PoolerSpecTemplateSpecVolumesSecretOutput)
}

// defaultMode is Optional: mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values
// for mode bits. Defaults to 0644.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesSecretPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecret) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// items If unspecified, each key-value pair in the Data field of the referenced
// Secret will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the Secret,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesSecretPtrOutput) Items() PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecret) []PoolerSpecTemplateSpecVolumesSecretItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput)
}

// optional field specify whether the Secret or its keys must be defined
func (o PoolerSpecTemplateSpecVolumesSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// secretName is the name of the secret in the pod's namespace to use.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
func (o PoolerSpecTemplateSpecVolumesSecretPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecret) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesSecretItems struct {
	// key is the key to project.
	Key *string `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path *string `pulumi:"path"`
}

// PoolerSpecTemplateSpecVolumesSecretItemsInput is an input type that accepts PoolerSpecTemplateSpecVolumesSecretItemsArgs and PoolerSpecTemplateSpecVolumesSecretItemsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesSecretItemsInput` via:
//
//	PoolerSpecTemplateSpecVolumesSecretItemsArgs{...}
type PoolerSpecTemplateSpecVolumesSecretItemsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesSecretItemsOutput() PoolerSpecTemplateSpecVolumesSecretItemsOutput
	ToPoolerSpecTemplateSpecVolumesSecretItemsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesSecretItemsOutput
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesSecretItemsArgs struct {
	// key is the key to project.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (PoolerSpecTemplateSpecVolumesSecretItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesSecretItemsArgs) ToPoolerSpecTemplateSpecVolumesSecretItemsOutput() PoolerSpecTemplateSpecVolumesSecretItemsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretItemsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesSecretItemsArgs) ToPoolerSpecTemplateSpecVolumesSecretItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretItemsOutput)
}

// PoolerSpecTemplateSpecVolumesSecretItemsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesSecretItemsArray and PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesSecretItemsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesSecretItemsArray{ PoolerSpecTemplateSpecVolumesSecretItemsArgs{...} }
type PoolerSpecTemplateSpecVolumesSecretItemsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesSecretItemsArrayOutput() PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput
	ToPoolerSpecTemplateSpecVolumesSecretItemsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput
}

type PoolerSpecTemplateSpecVolumesSecretItemsArray []PoolerSpecTemplateSpecVolumesSecretItemsInput

func (PoolerSpecTemplateSpecVolumesSecretItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesSecretItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesSecretItemsArray) ToPoolerSpecTemplateSpecVolumesSecretItemsArrayOutput() PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretItemsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesSecretItemsArray) ToPoolerSpecTemplateSpecVolumesSecretItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesSecretItemsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesSecretItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsOutput) ToPoolerSpecTemplateSpecVolumesSecretItemsOutput() PoolerSpecTemplateSpecVolumesSecretItemsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsOutput) ToPoolerSpecTemplateSpecVolumesSecretItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretItemsOutput {
	return o
}

// key is the key to project.
func (o PoolerSpecTemplateSpecVolumesSecretItemsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecretItems) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// mode is Optional: mode bits used to set permissions on this file.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesSecretItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecretItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// path is the relative path of the file to map the key to.
// May not be an absolute path.
// May not contain the path element '..'.
// May not start with the string '..'.
func (o PoolerSpecTemplateSpecVolumesSecretItemsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecretItems) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesSecretItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesSecretItemsArrayOutput() PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesSecretItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesSecretItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesSecretItems {
		return vs[0].([]PoolerSpecTemplateSpecVolumesSecretItems)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesSecretItemsOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesSecretItemsPatch struct {
	// key is the key to project.
	Key *string `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path *string `pulumi:"path"`
}

// PoolerSpecTemplateSpecVolumesSecretItemsPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesSecretItemsPatchArgs and PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesSecretItemsPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesSecretItemsPatchArgs{...}
type PoolerSpecTemplateSpecVolumesSecretItemsPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesSecretItemsPatchOutput() PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput
	ToPoolerSpecTemplateSpecVolumesSecretItemsPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesSecretItemsPatchArgs struct {
	// key is the key to project.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (PoolerSpecTemplateSpecVolumesSecretItemsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretItemsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesSecretItemsPatchArgs) ToPoolerSpecTemplateSpecVolumesSecretItemsPatchOutput() PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretItemsPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesSecretItemsPatchArgs) ToPoolerSpecTemplateSpecVolumesSecretItemsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput)
}

// PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesSecretItemsPatchArray and PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesSecretItemsPatchArray{ PoolerSpecTemplateSpecVolumesSecretItemsPatchArgs{...} }
type PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput
	ToPoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput
}

type PoolerSpecTemplateSpecVolumesSecretItemsPatchArray []PoolerSpecTemplateSpecVolumesSecretItemsPatchInput

func (PoolerSpecTemplateSpecVolumesSecretItemsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesSecretItemsPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesSecretItemsPatchArray) ToPoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesSecretItemsPatchArray) ToPoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretItemsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput) ToPoolerSpecTemplateSpecVolumesSecretItemsPatchOutput() PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput) ToPoolerSpecTemplateSpecVolumesSecretItemsPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput {
	return o
}

// key is the key to project.
func (o PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecretItemsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// mode is Optional: mode bits used to set permissions on this file.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecretItemsPatch) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// path is the relative path of the file to map the key to.
// May not be an absolute path.
// May not contain the path element '..'.
// May not start with the string '..'.
func (o PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecretItemsPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesSecretItemsPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput() PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput) ToPoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesSecretItemsPatch {
		return vs[0].([]PoolerSpecTemplateSpecVolumesSecretItemsPatch)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput)
}

// secret represents a secret that should populate this volume.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type PoolerSpecTemplateSpecVolumesSecretPatch struct {
	// defaultMode is Optional: mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values
	// for mode bits. Defaults to 0644.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// items If unspecified, each key-value pair in the Data field of the referenced
	// Secret will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the Secret,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items []PoolerSpecTemplateSpecVolumesSecretItemsPatch `pulumi:"items"`
	// optional field specify whether the Secret or its keys must be defined
	Optional *bool `pulumi:"optional"`
	// secretName is the name of the secret in the pod's namespace to use.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	SecretName *string `pulumi:"secretName"`
}

// PoolerSpecTemplateSpecVolumesSecretPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesSecretPatchArgs and PoolerSpecTemplateSpecVolumesSecretPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesSecretPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesSecretPatchArgs{...}
type PoolerSpecTemplateSpecVolumesSecretPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesSecretPatchOutput() PoolerSpecTemplateSpecVolumesSecretPatchOutput
	ToPoolerSpecTemplateSpecVolumesSecretPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesSecretPatchOutput
}

// secret represents a secret that should populate this volume.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type PoolerSpecTemplateSpecVolumesSecretPatchArgs struct {
	// defaultMode is Optional: mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values
	// for mode bits. Defaults to 0644.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// items If unspecified, each key-value pair in the Data field of the referenced
	// Secret will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the Secret,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayInput `pulumi:"items"`
	// optional field specify whether the Secret or its keys must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
	// secretName is the name of the secret in the pod's namespace to use.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (PoolerSpecTemplateSpecVolumesSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesSecretPatchArgs) ToPoolerSpecTemplateSpecVolumesSecretPatchOutput() PoolerSpecTemplateSpecVolumesSecretPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesSecretPatchArgs) ToPoolerSpecTemplateSpecVolumesSecretPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesSecretPatchArgs) ToPoolerSpecTemplateSpecVolumesSecretPatchPtrOutput() PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesSecretPatchArgs) ToPoolerSpecTemplateSpecVolumesSecretPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretPatchOutput).ToPoolerSpecTemplateSpecVolumesSecretPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesSecretPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesSecretPatchArgs, PoolerSpecTemplateSpecVolumesSecretPatchPtr and PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesSecretPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesSecretPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesSecretPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesSecretPatchPtrOutput() PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesSecretPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesSecretPatchPtrType PoolerSpecTemplateSpecVolumesSecretPatchArgs

func PoolerSpecTemplateSpecVolumesSecretPatchPtr(v *PoolerSpecTemplateSpecVolumesSecretPatchArgs) PoolerSpecTemplateSpecVolumesSecretPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesSecretPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesSecretPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesSecretPatchPtrType) ToPoolerSpecTemplateSpecVolumesSecretPatchPtrOutput() PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesSecretPatchPtrType) ToPoolerSpecTemplateSpecVolumesSecretPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput)
}

// secret represents a secret that should populate this volume.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type PoolerSpecTemplateSpecVolumesSecretPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesSecretPatchOutput) ToPoolerSpecTemplateSpecVolumesSecretPatchOutput() PoolerSpecTemplateSpecVolumesSecretPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretPatchOutput) ToPoolerSpecTemplateSpecVolumesSecretPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretPatchOutput) ToPoolerSpecTemplateSpecVolumesSecretPatchPtrOutput() PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesSecretPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesSecretPatchOutput) ToPoolerSpecTemplateSpecVolumesSecretPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesSecretPatch) *PoolerSpecTemplateSpecVolumesSecretPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput)
}

// defaultMode is Optional: mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values
// for mode bits. Defaults to 0644.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesSecretPatchOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecretPatch) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// items If unspecified, each key-value pair in the Data field of the referenced
// Secret will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the Secret,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesSecretPatchOutput) Items() PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecretPatch) []PoolerSpecTemplateSpecVolumesSecretItemsPatch {
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput)
}

// optional field specify whether the Secret or its keys must be defined
func (o PoolerSpecTemplateSpecVolumesSecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecretPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

// secretName is the name of the secret in the pod's namespace to use.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
func (o PoolerSpecTemplateSpecVolumesSecretPatchOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecretPatch) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesSecretPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesSecretPatchPtrOutput() PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesSecretPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesSecretPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecretPatch) PoolerSpecTemplateSpecVolumesSecretPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesSecretPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesSecretPatchOutput)
}

// defaultMode is Optional: mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values
// for mode bits. Defaults to 0644.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecretPatch) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// items If unspecified, each key-value pair in the Data field of the referenced
// Secret will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the Secret,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput) Items() PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecretPatch) []PoolerSpecTemplateSpecVolumesSecretItemsPatch {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput)
}

// optional field specify whether the Secret or its keys must be defined
func (o PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// secretName is the name of the secret in the pod's namespace to use.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
func (o PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
// Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.
type PoolerSpecTemplateSpecVolumesStorageos struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly  *bool                                            `pulumi:"readOnly"`
	SecretRef *PoolerSpecTemplateSpecVolumesStorageosSecretRef `pulumi:"secretRef"`
	// volumeName is the human-readable name of the StorageOS volume.  Volume
	// names are only unique within a namespace.
	VolumeName *string `pulumi:"volumeName"`
	// volumeNamespace specifies the scope of the volume within StorageOS.  If no
	// namespace is specified then the Pod's namespace will be used.  This allows the
	// Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
	// Set VolumeName to any name to override the default behaviour.
	// Set to "default" if you are not using namespaces within StorageOS.
	// Namespaces that do not pre-exist within StorageOS will be created.
	VolumeNamespace *string `pulumi:"volumeNamespace"`
}

// PoolerSpecTemplateSpecVolumesStorageosInput is an input type that accepts PoolerSpecTemplateSpecVolumesStorageosArgs and PoolerSpecTemplateSpecVolumesStorageosOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesStorageosInput` via:
//
//	PoolerSpecTemplateSpecVolumesStorageosArgs{...}
type PoolerSpecTemplateSpecVolumesStorageosInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesStorageosOutput() PoolerSpecTemplateSpecVolumesStorageosOutput
	ToPoolerSpecTemplateSpecVolumesStorageosOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesStorageosOutput
}

// storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
// Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.
type PoolerSpecTemplateSpecVolumesStorageosArgs struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly  pulumi.BoolPtrInput                                     `pulumi:"readOnly"`
	SecretRef PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrInput `pulumi:"secretRef"`
	// volumeName is the human-readable name of the StorageOS volume.  Volume
	// names are only unique within a namespace.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
	// volumeNamespace specifies the scope of the volume within StorageOS.  If no
	// namespace is specified then the Pod's namespace will be used.  This allows the
	// Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
	// Set VolumeName to any name to override the default behaviour.
	// Set to "default" if you are not using namespaces within StorageOS.
	// Namespaces that do not pre-exist within StorageOS will be created.
	VolumeNamespace pulumi.StringPtrInput `pulumi:"volumeNamespace"`
}

func (PoolerSpecTemplateSpecVolumesStorageosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageos)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesStorageosArgs) ToPoolerSpecTemplateSpecVolumesStorageosOutput() PoolerSpecTemplateSpecVolumesStorageosOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesStorageosArgs) ToPoolerSpecTemplateSpecVolumesStorageosOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosOutput)
}

func (i PoolerSpecTemplateSpecVolumesStorageosArgs) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesStorageosArgs) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosOutput).ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesStorageosPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesStorageosArgs, PoolerSpecTemplateSpecVolumesStorageosPtr and PoolerSpecTemplateSpecVolumesStorageosPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesStorageosPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesStorageosArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesStorageosPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesStorageosPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPtrOutput
	ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesStorageosPtrOutput
}

type poolerSpecTemplateSpecVolumesStorageosPtrType PoolerSpecTemplateSpecVolumesStorageosArgs

func PoolerSpecTemplateSpecVolumesStorageosPtr(v *PoolerSpecTemplateSpecVolumesStorageosArgs) PoolerSpecTemplateSpecVolumesStorageosPtrInput {
	return (*poolerSpecTemplateSpecVolumesStorageosPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesStorageosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesStorageos)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesStorageosPtrType) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesStorageosPtrType) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosPtrOutput)
}

// storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
// Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.
type PoolerSpecTemplateSpecVolumesStorageosOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesStorageosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageos)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesStorageosOutput) ToPoolerSpecTemplateSpecVolumesStorageosOutput() PoolerSpecTemplateSpecVolumesStorageosOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosOutput) ToPoolerSpecTemplateSpecVolumesStorageosOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosOutput) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesStorageosOutput) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesStorageos) *PoolerSpecTemplateSpecVolumesStorageos {
		return &v
	}).(PoolerSpecTemplateSpecVolumesStorageosPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesStorageosOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageos) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesStorageosOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageos) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesStorageosOutput) SecretRef() PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageos) *PoolerSpecTemplateSpecVolumesStorageosSecretRef {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput)
}

// volumeName is the human-readable name of the StorageOS volume.  Volume
// names are only unique within a namespace.
func (o PoolerSpecTemplateSpecVolumesStorageosOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageos) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

// volumeNamespace specifies the scope of the volume within StorageOS.  If no
// namespace is specified then the Pod's namespace will be used.  This allows the
// Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
// Set VolumeName to any name to override the default behaviour.
// Set to "default" if you are not using namespaces within StorageOS.
// Namespaces that do not pre-exist within StorageOS will be created.
func (o PoolerSpecTemplateSpecVolumesStorageosOutput) VolumeNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageos) *string { return v.VolumeNamespace }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesStorageosPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesStorageosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesStorageos)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) Elem() PoolerSpecTemplateSpecVolumesStorageosOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageos) PoolerSpecTemplateSpecVolumesStorageos {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesStorageos
		return ret
	}).(PoolerSpecTemplateSpecVolumesStorageosOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageos) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageos) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageos) *PoolerSpecTemplateSpecVolumesStorageosSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput)
}

// volumeName is the human-readable name of the StorageOS volume.  Volume
// names are only unique within a namespace.
func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageos) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// volumeNamespace specifies the scope of the volume within StorageOS.  If no
// namespace is specified then the Pod's namespace will be used.  This allows the
// Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
// Set VolumeName to any name to override the default behaviour.
// Set to "default" if you are not using namespaces within StorageOS.
// Namespaces that do not pre-exist within StorageOS will be created.
func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) VolumeNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageos) *string {
		if v == nil {
			return nil
		}
		return v.VolumeNamespace
	}).(pulumi.StringPtrOutput)
}

// storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
// Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.
type PoolerSpecTemplateSpecVolumesStorageosPatch struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly  *bool                                                 `pulumi:"readOnly"`
	SecretRef *PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch `pulumi:"secretRef"`
	// volumeName is the human-readable name of the StorageOS volume.  Volume
	// names are only unique within a namespace.
	VolumeName *string `pulumi:"volumeName"`
	// volumeNamespace specifies the scope of the volume within StorageOS.  If no
	// namespace is specified then the Pod's namespace will be used.  This allows the
	// Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
	// Set VolumeName to any name to override the default behaviour.
	// Set to "default" if you are not using namespaces within StorageOS.
	// Namespaces that do not pre-exist within StorageOS will be created.
	VolumeNamespace *string `pulumi:"volumeNamespace"`
}

// PoolerSpecTemplateSpecVolumesStorageosPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesStorageosPatchArgs and PoolerSpecTemplateSpecVolumesStorageosPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesStorageosPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesStorageosPatchArgs{...}
type PoolerSpecTemplateSpecVolumesStorageosPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesStorageosPatchOutput() PoolerSpecTemplateSpecVolumesStorageosPatchOutput
	ToPoolerSpecTemplateSpecVolumesStorageosPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesStorageosPatchOutput
}

// storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
// Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.
type PoolerSpecTemplateSpecVolumesStorageosPatchArgs struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly  pulumi.BoolPtrInput                                          `pulumi:"readOnly"`
	SecretRef PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrInput `pulumi:"secretRef"`
	// volumeName is the human-readable name of the StorageOS volume.  Volume
	// names are only unique within a namespace.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
	// volumeNamespace specifies the scope of the volume within StorageOS.  If no
	// namespace is specified then the Pod's namespace will be used.  This allows the
	// Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
	// Set VolumeName to any name to override the default behaviour.
	// Set to "default" if you are not using namespaces within StorageOS.
	// Namespaces that do not pre-exist within StorageOS will be created.
	VolumeNamespace pulumi.StringPtrInput `pulumi:"volumeNamespace"`
}

func (PoolerSpecTemplateSpecVolumesStorageosPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesStorageosPatchArgs) ToPoolerSpecTemplateSpecVolumesStorageosPatchOutput() PoolerSpecTemplateSpecVolumesStorageosPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesStorageosPatchArgs) ToPoolerSpecTemplateSpecVolumesStorageosPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesStorageosPatchArgs) ToPoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesStorageosPatchArgs) ToPoolerSpecTemplateSpecVolumesStorageosPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosPatchOutput).ToPoolerSpecTemplateSpecVolumesStorageosPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesStorageosPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesStorageosPatchArgs, PoolerSpecTemplateSpecVolumesStorageosPatchPtr and PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesStorageosPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesStorageosPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesStorageosPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesStorageosPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesStorageosPatchPtrType PoolerSpecTemplateSpecVolumesStorageosPatchArgs

func PoolerSpecTemplateSpecVolumesStorageosPatchPtr(v *PoolerSpecTemplateSpecVolumesStorageosPatchArgs) PoolerSpecTemplateSpecVolumesStorageosPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesStorageosPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesStorageosPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesStorageosPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesStorageosPatchPtrType) ToPoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesStorageosPatchPtrType) ToPoolerSpecTemplateSpecVolumesStorageosPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput)
}

// storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
// Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.
type PoolerSpecTemplateSpecVolumesStorageosPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesStorageosPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesStorageosPatchOutput) ToPoolerSpecTemplateSpecVolumesStorageosPatchOutput() PoolerSpecTemplateSpecVolumesStorageosPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosPatchOutput) ToPoolerSpecTemplateSpecVolumesStorageosPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosPatchOutput) ToPoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesStorageosPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesStorageosPatchOutput) ToPoolerSpecTemplateSpecVolumesStorageosPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesStorageosPatch) *PoolerSpecTemplateSpecVolumesStorageosPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesStorageosPatchOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageosPatch) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesStorageosPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageosPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesStorageosPatchOutput) SecretRef() PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageosPatch) *PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput)
}

// volumeName is the human-readable name of the StorageOS volume.  Volume
// names are only unique within a namespace.
func (o PoolerSpecTemplateSpecVolumesStorageosPatchOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageosPatch) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

// volumeNamespace specifies the scope of the volume within StorageOS.  If no
// namespace is specified then the Pod's namespace will be used.  This allows the
// Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
// Set VolumeName to any name to override the default behaviour.
// Set to "default" if you are not using namespaces within StorageOS.
// Namespaces that do not pre-exist within StorageOS will be created.
func (o PoolerSpecTemplateSpecVolumesStorageosPatchOutput) VolumeNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageosPatch) *string { return v.VolumeNamespace }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesStorageosPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesStorageosPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesStorageosPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageosPatch) PoolerSpecTemplateSpecVolumesStorageosPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesStorageosPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesStorageosPatchOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageosPatch) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageosPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

func (o PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageosPatch) *PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput)
}

// volumeName is the human-readable name of the StorageOS volume.  Volume
// names are only unique within a namespace.
func (o PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageosPatch) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// volumeNamespace specifies the scope of the volume within StorageOS.  If no
// namespace is specified then the Pod's namespace will be used.  This allows the
// Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
// Set VolumeName to any name to override the default behaviour.
// Set to "default" if you are not using namespaces within StorageOS.
// Namespaces that do not pre-exist within StorageOS will be created.
func (o PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput) VolumeNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageosPatch) *string {
		if v == nil {
			return nil
		}
		return v.VolumeNamespace
	}).(pulumi.StringPtrOutput)
}

// secretRef specifies the secret to use for obtaining the StorageOS API
// credentials.  If not specified, default values will be attempted.
type PoolerSpecTemplateSpecVolumesStorageosSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// PoolerSpecTemplateSpecVolumesStorageosSecretRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs and PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesStorageosSecretRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs{...}
type PoolerSpecTemplateSpecVolumesStorageosSecretRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesStorageosSecretRefOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput
	ToPoolerSpecTemplateSpecVolumesStorageosSecretRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput
}

// secretRef specifies the secret to use for obtaining the StorageOS API
// credentials.  If not specified, default values will be attempted.
type PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosSecretRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosSecretRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput).ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs, PoolerSpecTemplateSpecVolumesStorageosSecretRefPtr and PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput
}

type poolerSpecTemplateSpecVolumesStorageosSecretRefPtrType PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs

func PoolerSpecTemplateSpecVolumesStorageosSecretRefPtr(v *PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs) PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesStorageosSecretRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesStorageosSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesStorageosSecretRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesStorageosSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesStorageosSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput)
}

// secretRef specifies the secret to use for obtaining the StorageOS API
// credentials.  If not specified, default values will be attempted.
type PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesStorageosSecretRef) *PoolerSpecTemplateSpecVolumesStorageosSecretRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageosSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesStorageosSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageosSecretRef) PoolerSpecTemplateSpecVolumesStorageosSecretRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesStorageosSecretRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageosSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// secretRef specifies the secret to use for obtaining the StorageOS API
// credentials.  If not specified, default values will be attempted.
type PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchArgs and PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchArgs{...}
type PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput
	ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput
}

// secretRef specifies the secret to use for obtaining the StorageOS API
// credentials.  If not specified, default values will be attempted.
type PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchArgs) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput).ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchArgs, PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtr and PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput
}

type poolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrType PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchArgs

func PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtr(v *PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchArgs) PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrType) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput)
}

// secretRef specifies the secret to use for obtaining the StorageOS API
// credentials.  If not specified, default values will be attempted.
type PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch) *PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch) PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageosSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.
// Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type
// are redirected to the csi.vsphere.vmware.com CSI driver.
type PoolerSpecTemplateSpecVolumesVsphereVolume struct {
	// fsType is filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
	StoragePolicyID *string `pulumi:"storagePolicyID"`
	// storagePolicyName is the storage Policy Based Management (SPBM) profile name.
	StoragePolicyName *string `pulumi:"storagePolicyName"`
	// volumePath is the path that identifies vSphere volume vmdk
	VolumePath *string `pulumi:"volumePath"`
}

// PoolerSpecTemplateSpecVolumesVsphereVolumeInput is an input type that accepts PoolerSpecTemplateSpecVolumesVsphereVolumeArgs and PoolerSpecTemplateSpecVolumesVsphereVolumeOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesVsphereVolumeInput` via:
//
//	PoolerSpecTemplateSpecVolumesVsphereVolumeArgs{...}
type PoolerSpecTemplateSpecVolumesVsphereVolumeInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesVsphereVolumeOutput() PoolerSpecTemplateSpecVolumesVsphereVolumeOutput
	ToPoolerSpecTemplateSpecVolumesVsphereVolumeOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumeOutput
}

// vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.
// Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type
// are redirected to the csi.vsphere.vmware.com CSI driver.
type PoolerSpecTemplateSpecVolumesVsphereVolumeArgs struct {
	// fsType is filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
	StoragePolicyID pulumi.StringPtrInput `pulumi:"storagePolicyID"`
	// storagePolicyName is the storage Policy Based Management (SPBM) profile name.
	StoragePolicyName pulumi.StringPtrInput `pulumi:"storagePolicyName"`
	// volumePath is the path that identifies vSphere volume vmdk
	VolumePath pulumi.StringPtrInput `pulumi:"volumePath"`
}

func (PoolerSpecTemplateSpecVolumesVsphereVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesVsphereVolume)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesVsphereVolumeArgs) ToPoolerSpecTemplateSpecVolumesVsphereVolumeOutput() PoolerSpecTemplateSpecVolumesVsphereVolumeOutput {
	return i.ToPoolerSpecTemplateSpecVolumesVsphereVolumeOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesVsphereVolumeArgs) ToPoolerSpecTemplateSpecVolumesVsphereVolumeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesVsphereVolumeOutput)
}

func (i PoolerSpecTemplateSpecVolumesVsphereVolumeArgs) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesVsphereVolumeArgs) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesVsphereVolumeOutput).ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesVsphereVolumePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesVsphereVolumeArgs, PoolerSpecTemplateSpecVolumesVsphereVolumePtr and PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesVsphereVolumePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesVsphereVolumeArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesVsphereVolumePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput
	ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput
}

type poolerSpecTemplateSpecVolumesVsphereVolumePtrType PoolerSpecTemplateSpecVolumesVsphereVolumeArgs

func PoolerSpecTemplateSpecVolumesVsphereVolumePtr(v *PoolerSpecTemplateSpecVolumesVsphereVolumeArgs) PoolerSpecTemplateSpecVolumesVsphereVolumePtrInput {
	return (*poolerSpecTemplateSpecVolumesVsphereVolumePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesVsphereVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesVsphereVolume)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesVsphereVolumePtrType) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesVsphereVolumePtrType) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput)
}

// vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.
// Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type
// are redirected to the csi.vsphere.vmware.com CSI driver.
type PoolerSpecTemplateSpecVolumesVsphereVolumeOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesVsphereVolume)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumeOutput() PoolerSpecTemplateSpecVolumesVsphereVolumeOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumeOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesVsphereVolume) *PoolerSpecTemplateSpecVolumesVsphereVolume {
		return &v
	}).(PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput)
}

// fsType is filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesVsphereVolume) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) StoragePolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesVsphereVolume) *string { return v.StoragePolicyID }).(pulumi.StringPtrOutput)
}

// storagePolicyName is the storage Policy Based Management (SPBM) profile name.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) StoragePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesVsphereVolume) *string { return v.StoragePolicyName }).(pulumi.StringPtrOutput)
}

// volumePath is the path that identifies vSphere volume vmdk
func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) VolumePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesVsphereVolume) *string { return v.VolumePath }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesVsphereVolume)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) Elem() PoolerSpecTemplateSpecVolumesVsphereVolumeOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolume) PoolerSpecTemplateSpecVolumesVsphereVolume {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesVsphereVolume
		return ret
	}).(PoolerSpecTemplateSpecVolumesVsphereVolumeOutput)
}

// fsType is filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) StoragePolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return v.StoragePolicyID
	}).(pulumi.StringPtrOutput)
}

// storagePolicyName is the storage Policy Based Management (SPBM) profile name.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) StoragePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return v.StoragePolicyName
	}).(pulumi.StringPtrOutput)
}

// volumePath is the path that identifies vSphere volume vmdk
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) VolumePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return v.VolumePath
	}).(pulumi.StringPtrOutput)
}

// vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.
// Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type
// are redirected to the csi.vsphere.vmware.com CSI driver.
type PoolerSpecTemplateSpecVolumesVsphereVolumePatch struct {
	// fsType is filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
	StoragePolicyID *string `pulumi:"storagePolicyID"`
	// storagePolicyName is the storage Policy Based Management (SPBM) profile name.
	StoragePolicyName *string `pulumi:"storagePolicyName"`
	// volumePath is the path that identifies vSphere volume vmdk
	VolumePath *string `pulumi:"volumePath"`
}

// PoolerSpecTemplateSpecVolumesVsphereVolumePatchInput is an input type that accepts PoolerSpecTemplateSpecVolumesVsphereVolumePatchArgs and PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesVsphereVolumePatchInput` via:
//
//	PoolerSpecTemplateSpecVolumesVsphereVolumePatchArgs{...}
type PoolerSpecTemplateSpecVolumesVsphereVolumePatchInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput
	ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput
}

// vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.
// Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type
// are redirected to the csi.vsphere.vmware.com CSI driver.
type PoolerSpecTemplateSpecVolumesVsphereVolumePatchArgs struct {
	// fsType is filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
	StoragePolicyID pulumi.StringPtrInput `pulumi:"storagePolicyID"`
	// storagePolicyName is the storage Policy Based Management (SPBM) profile name.
	StoragePolicyName pulumi.StringPtrInput `pulumi:"storagePolicyName"`
	// volumePath is the path that identifies vSphere volume vmdk
	VolumePath pulumi.StringPtrInput `pulumi:"volumePath"`
}

func (PoolerSpecTemplateSpecVolumesVsphereVolumePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesVsphereVolumePatch)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesVsphereVolumePatchArgs) ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput {
	return i.ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesVsphereVolumePatchArgs) ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput)
}

func (i PoolerSpecTemplateSpecVolumesVsphereVolumePatchArgs) ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesVsphereVolumePatchArgs) ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput).ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesVsphereVolumePatchArgs, PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtr and PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesVsphereVolumePatchArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput
	ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput
}

type poolerSpecTemplateSpecVolumesVsphereVolumePatchPtrType PoolerSpecTemplateSpecVolumesVsphereVolumePatchArgs

func PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtr(v *PoolerSpecTemplateSpecVolumesVsphereVolumePatchArgs) PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrInput {
	return (*poolerSpecTemplateSpecVolumesVsphereVolumePatchPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesVsphereVolumePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesVsphereVolumePatch)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesVsphereVolumePatchPtrType) ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesVsphereVolumePatchPtrType) ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput)
}

// vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.
// Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type
// are redirected to the csi.vsphere.vmware.com CSI driver.
type PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesVsphereVolumePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesVsphereVolumePatch) *PoolerSpecTemplateSpecVolumesVsphereVolumePatch {
		return &v
	}).(PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput)
}

// fsType is filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesVsphereVolumePatch) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput) StoragePolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesVsphereVolumePatch) *string { return v.StoragePolicyID }).(pulumi.StringPtrOutput)
}

// storagePolicyName is the storage Policy Based Management (SPBM) profile name.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput) StoragePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesVsphereVolumePatch) *string { return v.StoragePolicyName }).(pulumi.StringPtrOutput)
}

// volumePath is the path that identifies vSphere volume vmdk
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput) VolumePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesVsphereVolumePatch) *string { return v.VolumePath }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesVsphereVolumePatch)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput) Elem() PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolumePatch) PoolerSpecTemplateSpecVolumesVsphereVolumePatch {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesVsphereVolumePatch
		return ret
	}).(PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput)
}

// fsType is filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolumePatch) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput) StoragePolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolumePatch) *string {
		if v == nil {
			return nil
		}
		return v.StoragePolicyID
	}).(pulumi.StringPtrOutput)
}

// storagePolicyName is the storage Policy Based Management (SPBM) profile name.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput) StoragePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolumePatch) *string {
		if v == nil {
			return nil
		}
		return v.StoragePolicyName
	}).(pulumi.StringPtrOutput)
}

// volumePath is the path that identifies vSphere volume vmdk
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput) VolumePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolumePatch) *string {
		if v == nil {
			return nil
		}
		return v.VolumePath
	}).(pulumi.StringPtrOutput)
}

// Most recently observed status of the Pooler. This data may not be up to
// date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type PoolerStatus struct {
	// The number of pods trying to be scheduled
	Instances *int                 `pulumi:"instances"`
	Secrets   *PoolerStatusSecrets `pulumi:"secrets"`
}

// PoolerStatusInput is an input type that accepts PoolerStatusArgs and PoolerStatusOutput values.
// You can construct a concrete instance of `PoolerStatusInput` via:
//
//	PoolerStatusArgs{...}
type PoolerStatusInput interface {
	pulumi.Input

	ToPoolerStatusOutput() PoolerStatusOutput
	ToPoolerStatusOutputWithContext(context.Context) PoolerStatusOutput
}

// Most recently observed status of the Pooler. This data may not be up to
// date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type PoolerStatusArgs struct {
	// The number of pods trying to be scheduled
	Instances pulumi.IntPtrInput          `pulumi:"instances"`
	Secrets   PoolerStatusSecretsPtrInput `pulumi:"secrets"`
}

func (PoolerStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatus)(nil)).Elem()
}

func (i PoolerStatusArgs) ToPoolerStatusOutput() PoolerStatusOutput {
	return i.ToPoolerStatusOutputWithContext(context.Background())
}

func (i PoolerStatusArgs) ToPoolerStatusOutputWithContext(ctx context.Context) PoolerStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusOutput)
}

func (i PoolerStatusArgs) ToPoolerStatusPtrOutput() PoolerStatusPtrOutput {
	return i.ToPoolerStatusPtrOutputWithContext(context.Background())
}

func (i PoolerStatusArgs) ToPoolerStatusPtrOutputWithContext(ctx context.Context) PoolerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusOutput).ToPoolerStatusPtrOutputWithContext(ctx)
}

// PoolerStatusPtrInput is an input type that accepts PoolerStatusArgs, PoolerStatusPtr and PoolerStatusPtrOutput values.
// You can construct a concrete instance of `PoolerStatusPtrInput` via:
//
//	        PoolerStatusArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusPtrInput interface {
	pulumi.Input

	ToPoolerStatusPtrOutput() PoolerStatusPtrOutput
	ToPoolerStatusPtrOutputWithContext(context.Context) PoolerStatusPtrOutput
}

type poolerStatusPtrType PoolerStatusArgs

func PoolerStatusPtr(v *PoolerStatusArgs) PoolerStatusPtrInput {
	return (*poolerStatusPtrType)(v)
}

func (*poolerStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatus)(nil)).Elem()
}

func (i *poolerStatusPtrType) ToPoolerStatusPtrOutput() PoolerStatusPtrOutput {
	return i.ToPoolerStatusPtrOutputWithContext(context.Background())
}

func (i *poolerStatusPtrType) ToPoolerStatusPtrOutputWithContext(ctx context.Context) PoolerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusPtrOutput)
}

// Most recently observed status of the Pooler. This data may not be up to
// date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type PoolerStatusOutput struct{ *pulumi.OutputState }

func (PoolerStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatus)(nil)).Elem()
}

func (o PoolerStatusOutput) ToPoolerStatusOutput() PoolerStatusOutput {
	return o
}

func (o PoolerStatusOutput) ToPoolerStatusOutputWithContext(ctx context.Context) PoolerStatusOutput {
	return o
}

func (o PoolerStatusOutput) ToPoolerStatusPtrOutput() PoolerStatusPtrOutput {
	return o.ToPoolerStatusPtrOutputWithContext(context.Background())
}

func (o PoolerStatusOutput) ToPoolerStatusPtrOutputWithContext(ctx context.Context) PoolerStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatus) *PoolerStatus {
		return &v
	}).(PoolerStatusPtrOutput)
}

// The number of pods trying to be scheduled
func (o PoolerStatusOutput) Instances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerStatus) *int { return v.Instances }).(pulumi.IntPtrOutput)
}

func (o PoolerStatusOutput) Secrets() PoolerStatusSecretsPtrOutput {
	return o.ApplyT(func(v PoolerStatus) *PoolerStatusSecrets { return v.Secrets }).(PoolerStatusSecretsPtrOutput)
}

type PoolerStatusPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatus)(nil)).Elem()
}

func (o PoolerStatusPtrOutput) ToPoolerStatusPtrOutput() PoolerStatusPtrOutput {
	return o
}

func (o PoolerStatusPtrOutput) ToPoolerStatusPtrOutputWithContext(ctx context.Context) PoolerStatusPtrOutput {
	return o
}

func (o PoolerStatusPtrOutput) Elem() PoolerStatusOutput {
	return o.ApplyT(func(v *PoolerStatus) PoolerStatus {
		if v != nil {
			return *v
		}
		var ret PoolerStatus
		return ret
	}).(PoolerStatusOutput)
}

// The number of pods trying to be scheduled
func (o PoolerStatusPtrOutput) Instances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerStatus) *int {
		if v == nil {
			return nil
		}
		return v.Instances
	}).(pulumi.IntPtrOutput)
}

func (o PoolerStatusPtrOutput) Secrets() PoolerStatusSecretsPtrOutput {
	return o.ApplyT(func(v *PoolerStatus) *PoolerStatusSecrets {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(PoolerStatusSecretsPtrOutput)
}

// Most recently observed status of the Pooler. This data may not be up to
// date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type PoolerStatusPatch struct {
	// The number of pods trying to be scheduled
	Instances *int                      `pulumi:"instances"`
	Secrets   *PoolerStatusSecretsPatch `pulumi:"secrets"`
}

// PoolerStatusPatchInput is an input type that accepts PoolerStatusPatchArgs and PoolerStatusPatchOutput values.
// You can construct a concrete instance of `PoolerStatusPatchInput` via:
//
//	PoolerStatusPatchArgs{...}
type PoolerStatusPatchInput interface {
	pulumi.Input

	ToPoolerStatusPatchOutput() PoolerStatusPatchOutput
	ToPoolerStatusPatchOutputWithContext(context.Context) PoolerStatusPatchOutput
}

// Most recently observed status of the Pooler. This data may not be up to
// date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type PoolerStatusPatchArgs struct {
	// The number of pods trying to be scheduled
	Instances pulumi.IntPtrInput               `pulumi:"instances"`
	Secrets   PoolerStatusSecretsPatchPtrInput `pulumi:"secrets"`
}

func (PoolerStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusPatch)(nil)).Elem()
}

func (i PoolerStatusPatchArgs) ToPoolerStatusPatchOutput() PoolerStatusPatchOutput {
	return i.ToPoolerStatusPatchOutputWithContext(context.Background())
}

func (i PoolerStatusPatchArgs) ToPoolerStatusPatchOutputWithContext(ctx context.Context) PoolerStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusPatchOutput)
}

func (i PoolerStatusPatchArgs) ToPoolerStatusPatchPtrOutput() PoolerStatusPatchPtrOutput {
	return i.ToPoolerStatusPatchPtrOutputWithContext(context.Background())
}

func (i PoolerStatusPatchArgs) ToPoolerStatusPatchPtrOutputWithContext(ctx context.Context) PoolerStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusPatchOutput).ToPoolerStatusPatchPtrOutputWithContext(ctx)
}

// PoolerStatusPatchPtrInput is an input type that accepts PoolerStatusPatchArgs, PoolerStatusPatchPtr and PoolerStatusPatchPtrOutput values.
// You can construct a concrete instance of `PoolerStatusPatchPtrInput` via:
//
//	        PoolerStatusPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusPatchPtrInput interface {
	pulumi.Input

	ToPoolerStatusPatchPtrOutput() PoolerStatusPatchPtrOutput
	ToPoolerStatusPatchPtrOutputWithContext(context.Context) PoolerStatusPatchPtrOutput
}

type poolerStatusPatchPtrType PoolerStatusPatchArgs

func PoolerStatusPatchPtr(v *PoolerStatusPatchArgs) PoolerStatusPatchPtrInput {
	return (*poolerStatusPatchPtrType)(v)
}

func (*poolerStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusPatch)(nil)).Elem()
}

func (i *poolerStatusPatchPtrType) ToPoolerStatusPatchPtrOutput() PoolerStatusPatchPtrOutput {
	return i.ToPoolerStatusPatchPtrOutputWithContext(context.Background())
}

func (i *poolerStatusPatchPtrType) ToPoolerStatusPatchPtrOutputWithContext(ctx context.Context) PoolerStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusPatchPtrOutput)
}

// Most recently observed status of the Pooler. This data may not be up to
// date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type PoolerStatusPatchOutput struct{ *pulumi.OutputState }

func (PoolerStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusPatch)(nil)).Elem()
}

func (o PoolerStatusPatchOutput) ToPoolerStatusPatchOutput() PoolerStatusPatchOutput {
	return o
}

func (o PoolerStatusPatchOutput) ToPoolerStatusPatchOutputWithContext(ctx context.Context) PoolerStatusPatchOutput {
	return o
}

func (o PoolerStatusPatchOutput) ToPoolerStatusPatchPtrOutput() PoolerStatusPatchPtrOutput {
	return o.ToPoolerStatusPatchPtrOutputWithContext(context.Background())
}

func (o PoolerStatusPatchOutput) ToPoolerStatusPatchPtrOutputWithContext(ctx context.Context) PoolerStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusPatch) *PoolerStatusPatch {
		return &v
	}).(PoolerStatusPatchPtrOutput)
}

// The number of pods trying to be scheduled
func (o PoolerStatusPatchOutput) Instances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerStatusPatch) *int { return v.Instances }).(pulumi.IntPtrOutput)
}

func (o PoolerStatusPatchOutput) Secrets() PoolerStatusSecretsPatchPtrOutput {
	return o.ApplyT(func(v PoolerStatusPatch) *PoolerStatusSecretsPatch { return v.Secrets }).(PoolerStatusSecretsPatchPtrOutput)
}

type PoolerStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusPatch)(nil)).Elem()
}

func (o PoolerStatusPatchPtrOutput) ToPoolerStatusPatchPtrOutput() PoolerStatusPatchPtrOutput {
	return o
}

func (o PoolerStatusPatchPtrOutput) ToPoolerStatusPatchPtrOutputWithContext(ctx context.Context) PoolerStatusPatchPtrOutput {
	return o
}

func (o PoolerStatusPatchPtrOutput) Elem() PoolerStatusPatchOutput {
	return o.ApplyT(func(v *PoolerStatusPatch) PoolerStatusPatch {
		if v != nil {
			return *v
		}
		var ret PoolerStatusPatch
		return ret
	}).(PoolerStatusPatchOutput)
}

// The number of pods trying to be scheduled
func (o PoolerStatusPatchPtrOutput) Instances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.Instances
	}).(pulumi.IntPtrOutput)
}

func (o PoolerStatusPatchPtrOutput) Secrets() PoolerStatusSecretsPatchPtrOutput {
	return o.ApplyT(func(v *PoolerStatusPatch) *PoolerStatusSecretsPatch {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(PoolerStatusSecretsPatchPtrOutput)
}

// The resource version of the config object
type PoolerStatusSecrets struct {
	ClientCA         *PoolerStatusSecretsClientCA         `pulumi:"clientCA"`
	PgBouncerSecrets *PoolerStatusSecretsPgBouncerSecrets `pulumi:"pgBouncerSecrets"`
	ServerCA         *PoolerStatusSecretsServerCA         `pulumi:"serverCA"`
	ServerTLS        *PoolerStatusSecretsServerTLS        `pulumi:"serverTLS"`
}

// PoolerStatusSecretsInput is an input type that accepts PoolerStatusSecretsArgs and PoolerStatusSecretsOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsInput` via:
//
//	PoolerStatusSecretsArgs{...}
type PoolerStatusSecretsInput interface {
	pulumi.Input

	ToPoolerStatusSecretsOutput() PoolerStatusSecretsOutput
	ToPoolerStatusSecretsOutputWithContext(context.Context) PoolerStatusSecretsOutput
}

// The resource version of the config object
type PoolerStatusSecretsArgs struct {
	ClientCA         PoolerStatusSecretsClientCAPtrInput         `pulumi:"clientCA"`
	PgBouncerSecrets PoolerStatusSecretsPgBouncerSecretsPtrInput `pulumi:"pgBouncerSecrets"`
	ServerCA         PoolerStatusSecretsServerCAPtrInput         `pulumi:"serverCA"`
	ServerTLS        PoolerStatusSecretsServerTLSPtrInput        `pulumi:"serverTLS"`
}

func (PoolerStatusSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecrets)(nil)).Elem()
}

func (i PoolerStatusSecretsArgs) ToPoolerStatusSecretsOutput() PoolerStatusSecretsOutput {
	return i.ToPoolerStatusSecretsOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsArgs) ToPoolerStatusSecretsOutputWithContext(ctx context.Context) PoolerStatusSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsOutput)
}

func (i PoolerStatusSecretsArgs) ToPoolerStatusSecretsPtrOutput() PoolerStatusSecretsPtrOutput {
	return i.ToPoolerStatusSecretsPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsArgs) ToPoolerStatusSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsOutput).ToPoolerStatusSecretsPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsPtrInput is an input type that accepts PoolerStatusSecretsArgs, PoolerStatusSecretsPtr and PoolerStatusSecretsPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPtrInput` via:
//
//	        PoolerStatusSecretsArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPtrOutput() PoolerStatusSecretsPtrOutput
	ToPoolerStatusSecretsPtrOutputWithContext(context.Context) PoolerStatusSecretsPtrOutput
}

type poolerStatusSecretsPtrType PoolerStatusSecretsArgs

func PoolerStatusSecretsPtr(v *PoolerStatusSecretsArgs) PoolerStatusSecretsPtrInput {
	return (*poolerStatusSecretsPtrType)(v)
}

func (*poolerStatusSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecrets)(nil)).Elem()
}

func (i *poolerStatusSecretsPtrType) ToPoolerStatusSecretsPtrOutput() PoolerStatusSecretsPtrOutput {
	return i.ToPoolerStatusSecretsPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsPtrType) ToPoolerStatusSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPtrOutput)
}

// The resource version of the config object
type PoolerStatusSecretsOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecrets)(nil)).Elem()
}

func (o PoolerStatusSecretsOutput) ToPoolerStatusSecretsOutput() PoolerStatusSecretsOutput {
	return o
}

func (o PoolerStatusSecretsOutput) ToPoolerStatusSecretsOutputWithContext(ctx context.Context) PoolerStatusSecretsOutput {
	return o
}

func (o PoolerStatusSecretsOutput) ToPoolerStatusSecretsPtrOutput() PoolerStatusSecretsPtrOutput {
	return o.ToPoolerStatusSecretsPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsOutput) ToPoolerStatusSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecrets) *PoolerStatusSecrets {
		return &v
	}).(PoolerStatusSecretsPtrOutput)
}

func (o PoolerStatusSecretsOutput) ClientCA() PoolerStatusSecretsClientCAPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecrets) *PoolerStatusSecretsClientCA { return v.ClientCA }).(PoolerStatusSecretsClientCAPtrOutput)
}

func (o PoolerStatusSecretsOutput) PgBouncerSecrets() PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecrets) *PoolerStatusSecretsPgBouncerSecrets { return v.PgBouncerSecrets }).(PoolerStatusSecretsPgBouncerSecretsPtrOutput)
}

func (o PoolerStatusSecretsOutput) ServerCA() PoolerStatusSecretsServerCAPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecrets) *PoolerStatusSecretsServerCA { return v.ServerCA }).(PoolerStatusSecretsServerCAPtrOutput)
}

func (o PoolerStatusSecretsOutput) ServerTLS() PoolerStatusSecretsServerTLSPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecrets) *PoolerStatusSecretsServerTLS { return v.ServerTLS }).(PoolerStatusSecretsServerTLSPtrOutput)
}

type PoolerStatusSecretsPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecrets)(nil)).Elem()
}

func (o PoolerStatusSecretsPtrOutput) ToPoolerStatusSecretsPtrOutput() PoolerStatusSecretsPtrOutput {
	return o
}

func (o PoolerStatusSecretsPtrOutput) ToPoolerStatusSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPtrOutput {
	return o
}

func (o PoolerStatusSecretsPtrOutput) Elem() PoolerStatusSecretsOutput {
	return o.ApplyT(func(v *PoolerStatusSecrets) PoolerStatusSecrets {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecrets
		return ret
	}).(PoolerStatusSecretsOutput)
}

func (o PoolerStatusSecretsPtrOutput) ClientCA() PoolerStatusSecretsClientCAPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecrets) *PoolerStatusSecretsClientCA {
		if v == nil {
			return nil
		}
		return v.ClientCA
	}).(PoolerStatusSecretsClientCAPtrOutput)
}

func (o PoolerStatusSecretsPtrOutput) PgBouncerSecrets() PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecrets) *PoolerStatusSecretsPgBouncerSecrets {
		if v == nil {
			return nil
		}
		return v.PgBouncerSecrets
	}).(PoolerStatusSecretsPgBouncerSecretsPtrOutput)
}

func (o PoolerStatusSecretsPtrOutput) ServerCA() PoolerStatusSecretsServerCAPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecrets) *PoolerStatusSecretsServerCA {
		if v == nil {
			return nil
		}
		return v.ServerCA
	}).(PoolerStatusSecretsServerCAPtrOutput)
}

func (o PoolerStatusSecretsPtrOutput) ServerTLS() PoolerStatusSecretsServerTLSPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecrets) *PoolerStatusSecretsServerTLS {
		if v == nil {
			return nil
		}
		return v.ServerTLS
	}).(PoolerStatusSecretsServerTLSPtrOutput)
}

// The client CA secret version
type PoolerStatusSecretsClientCA struct {
	// The name of the secret
	Name *string `pulumi:"name"`
	// The ResourceVersion of the secret
	Version *string `pulumi:"version"`
}

// PoolerStatusSecretsClientCAInput is an input type that accepts PoolerStatusSecretsClientCAArgs and PoolerStatusSecretsClientCAOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsClientCAInput` via:
//
//	PoolerStatusSecretsClientCAArgs{...}
type PoolerStatusSecretsClientCAInput interface {
	pulumi.Input

	ToPoolerStatusSecretsClientCAOutput() PoolerStatusSecretsClientCAOutput
	ToPoolerStatusSecretsClientCAOutputWithContext(context.Context) PoolerStatusSecretsClientCAOutput
}

// The client CA secret version
type PoolerStatusSecretsClientCAArgs struct {
	// The name of the secret
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ResourceVersion of the secret
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PoolerStatusSecretsClientCAArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsClientCA)(nil)).Elem()
}

func (i PoolerStatusSecretsClientCAArgs) ToPoolerStatusSecretsClientCAOutput() PoolerStatusSecretsClientCAOutput {
	return i.ToPoolerStatusSecretsClientCAOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsClientCAArgs) ToPoolerStatusSecretsClientCAOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCAOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsClientCAOutput)
}

func (i PoolerStatusSecretsClientCAArgs) ToPoolerStatusSecretsClientCAPtrOutput() PoolerStatusSecretsClientCAPtrOutput {
	return i.ToPoolerStatusSecretsClientCAPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsClientCAArgs) ToPoolerStatusSecretsClientCAPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCAPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsClientCAOutput).ToPoolerStatusSecretsClientCAPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsClientCAPtrInput is an input type that accepts PoolerStatusSecretsClientCAArgs, PoolerStatusSecretsClientCAPtr and PoolerStatusSecretsClientCAPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsClientCAPtrInput` via:
//
//	        PoolerStatusSecretsClientCAArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsClientCAPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsClientCAPtrOutput() PoolerStatusSecretsClientCAPtrOutput
	ToPoolerStatusSecretsClientCAPtrOutputWithContext(context.Context) PoolerStatusSecretsClientCAPtrOutput
}

type poolerStatusSecretsClientCAPtrType PoolerStatusSecretsClientCAArgs

func PoolerStatusSecretsClientCAPtr(v *PoolerStatusSecretsClientCAArgs) PoolerStatusSecretsClientCAPtrInput {
	return (*poolerStatusSecretsClientCAPtrType)(v)
}

func (*poolerStatusSecretsClientCAPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsClientCA)(nil)).Elem()
}

func (i *poolerStatusSecretsClientCAPtrType) ToPoolerStatusSecretsClientCAPtrOutput() PoolerStatusSecretsClientCAPtrOutput {
	return i.ToPoolerStatusSecretsClientCAPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsClientCAPtrType) ToPoolerStatusSecretsClientCAPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCAPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsClientCAPtrOutput)
}

// The client CA secret version
type PoolerStatusSecretsClientCAOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsClientCAOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsClientCA)(nil)).Elem()
}

func (o PoolerStatusSecretsClientCAOutput) ToPoolerStatusSecretsClientCAOutput() PoolerStatusSecretsClientCAOutput {
	return o
}

func (o PoolerStatusSecretsClientCAOutput) ToPoolerStatusSecretsClientCAOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCAOutput {
	return o
}

func (o PoolerStatusSecretsClientCAOutput) ToPoolerStatusSecretsClientCAPtrOutput() PoolerStatusSecretsClientCAPtrOutput {
	return o.ToPoolerStatusSecretsClientCAPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsClientCAOutput) ToPoolerStatusSecretsClientCAPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCAPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsClientCA) *PoolerStatusSecretsClientCA {
		return &v
	}).(PoolerStatusSecretsClientCAPtrOutput)
}

// The name of the secret
func (o PoolerStatusSecretsClientCAOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsClientCA) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsClientCAOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsClientCA) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PoolerStatusSecretsClientCAPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsClientCAPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsClientCA)(nil)).Elem()
}

func (o PoolerStatusSecretsClientCAPtrOutput) ToPoolerStatusSecretsClientCAPtrOutput() PoolerStatusSecretsClientCAPtrOutput {
	return o
}

func (o PoolerStatusSecretsClientCAPtrOutput) ToPoolerStatusSecretsClientCAPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCAPtrOutput {
	return o
}

func (o PoolerStatusSecretsClientCAPtrOutput) Elem() PoolerStatusSecretsClientCAOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsClientCA) PoolerStatusSecretsClientCA {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsClientCA
		return ret
	}).(PoolerStatusSecretsClientCAOutput)
}

// The name of the secret
func (o PoolerStatusSecretsClientCAPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsClientCA) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsClientCAPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsClientCA) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The client CA secret version
type PoolerStatusSecretsClientCAPatch struct {
	// The name of the secret
	Name *string `pulumi:"name"`
	// The ResourceVersion of the secret
	Version *string `pulumi:"version"`
}

// PoolerStatusSecretsClientCAPatchInput is an input type that accepts PoolerStatusSecretsClientCAPatchArgs and PoolerStatusSecretsClientCAPatchOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsClientCAPatchInput` via:
//
//	PoolerStatusSecretsClientCAPatchArgs{...}
type PoolerStatusSecretsClientCAPatchInput interface {
	pulumi.Input

	ToPoolerStatusSecretsClientCAPatchOutput() PoolerStatusSecretsClientCAPatchOutput
	ToPoolerStatusSecretsClientCAPatchOutputWithContext(context.Context) PoolerStatusSecretsClientCAPatchOutput
}

// The client CA secret version
type PoolerStatusSecretsClientCAPatchArgs struct {
	// The name of the secret
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ResourceVersion of the secret
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PoolerStatusSecretsClientCAPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsClientCAPatch)(nil)).Elem()
}

func (i PoolerStatusSecretsClientCAPatchArgs) ToPoolerStatusSecretsClientCAPatchOutput() PoolerStatusSecretsClientCAPatchOutput {
	return i.ToPoolerStatusSecretsClientCAPatchOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsClientCAPatchArgs) ToPoolerStatusSecretsClientCAPatchOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCAPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsClientCAPatchOutput)
}

func (i PoolerStatusSecretsClientCAPatchArgs) ToPoolerStatusSecretsClientCAPatchPtrOutput() PoolerStatusSecretsClientCAPatchPtrOutput {
	return i.ToPoolerStatusSecretsClientCAPatchPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsClientCAPatchArgs) ToPoolerStatusSecretsClientCAPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCAPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsClientCAPatchOutput).ToPoolerStatusSecretsClientCAPatchPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsClientCAPatchPtrInput is an input type that accepts PoolerStatusSecretsClientCAPatchArgs, PoolerStatusSecretsClientCAPatchPtr and PoolerStatusSecretsClientCAPatchPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsClientCAPatchPtrInput` via:
//
//	        PoolerStatusSecretsClientCAPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsClientCAPatchPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsClientCAPatchPtrOutput() PoolerStatusSecretsClientCAPatchPtrOutput
	ToPoolerStatusSecretsClientCAPatchPtrOutputWithContext(context.Context) PoolerStatusSecretsClientCAPatchPtrOutput
}

type poolerStatusSecretsClientCAPatchPtrType PoolerStatusSecretsClientCAPatchArgs

func PoolerStatusSecretsClientCAPatchPtr(v *PoolerStatusSecretsClientCAPatchArgs) PoolerStatusSecretsClientCAPatchPtrInput {
	return (*poolerStatusSecretsClientCAPatchPtrType)(v)
}

func (*poolerStatusSecretsClientCAPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsClientCAPatch)(nil)).Elem()
}

func (i *poolerStatusSecretsClientCAPatchPtrType) ToPoolerStatusSecretsClientCAPatchPtrOutput() PoolerStatusSecretsClientCAPatchPtrOutput {
	return i.ToPoolerStatusSecretsClientCAPatchPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsClientCAPatchPtrType) ToPoolerStatusSecretsClientCAPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCAPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsClientCAPatchPtrOutput)
}

// The client CA secret version
type PoolerStatusSecretsClientCAPatchOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsClientCAPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsClientCAPatch)(nil)).Elem()
}

func (o PoolerStatusSecretsClientCAPatchOutput) ToPoolerStatusSecretsClientCAPatchOutput() PoolerStatusSecretsClientCAPatchOutput {
	return o
}

func (o PoolerStatusSecretsClientCAPatchOutput) ToPoolerStatusSecretsClientCAPatchOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCAPatchOutput {
	return o
}

func (o PoolerStatusSecretsClientCAPatchOutput) ToPoolerStatusSecretsClientCAPatchPtrOutput() PoolerStatusSecretsClientCAPatchPtrOutput {
	return o.ToPoolerStatusSecretsClientCAPatchPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsClientCAPatchOutput) ToPoolerStatusSecretsClientCAPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCAPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsClientCAPatch) *PoolerStatusSecretsClientCAPatch {
		return &v
	}).(PoolerStatusSecretsClientCAPatchPtrOutput)
}

// The name of the secret
func (o PoolerStatusSecretsClientCAPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsClientCAPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsClientCAPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsClientCAPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PoolerStatusSecretsClientCAPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsClientCAPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsClientCAPatch)(nil)).Elem()
}

func (o PoolerStatusSecretsClientCAPatchPtrOutput) ToPoolerStatusSecretsClientCAPatchPtrOutput() PoolerStatusSecretsClientCAPatchPtrOutput {
	return o
}

func (o PoolerStatusSecretsClientCAPatchPtrOutput) ToPoolerStatusSecretsClientCAPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCAPatchPtrOutput {
	return o
}

func (o PoolerStatusSecretsClientCAPatchPtrOutput) Elem() PoolerStatusSecretsClientCAPatchOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsClientCAPatch) PoolerStatusSecretsClientCAPatch {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsClientCAPatch
		return ret
	}).(PoolerStatusSecretsClientCAPatchOutput)
}

// The name of the secret
func (o PoolerStatusSecretsClientCAPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsClientCAPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsClientCAPatchPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsClientCAPatch) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The resource version of the config object
type PoolerStatusSecretsPatch struct {
	ClientCA         *PoolerStatusSecretsClientCAPatch         `pulumi:"clientCA"`
	PgBouncerSecrets *PoolerStatusSecretsPgBouncerSecretsPatch `pulumi:"pgBouncerSecrets"`
	ServerCA         *PoolerStatusSecretsServerCAPatch         `pulumi:"serverCA"`
	ServerTLS        *PoolerStatusSecretsServerTLSPatch        `pulumi:"serverTLS"`
}

// PoolerStatusSecretsPatchInput is an input type that accepts PoolerStatusSecretsPatchArgs and PoolerStatusSecretsPatchOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPatchInput` via:
//
//	PoolerStatusSecretsPatchArgs{...}
type PoolerStatusSecretsPatchInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPatchOutput() PoolerStatusSecretsPatchOutput
	ToPoolerStatusSecretsPatchOutputWithContext(context.Context) PoolerStatusSecretsPatchOutput
}

// The resource version of the config object
type PoolerStatusSecretsPatchArgs struct {
	ClientCA         PoolerStatusSecretsClientCAPatchPtrInput         `pulumi:"clientCA"`
	PgBouncerSecrets PoolerStatusSecretsPgBouncerSecretsPatchPtrInput `pulumi:"pgBouncerSecrets"`
	ServerCA         PoolerStatusSecretsServerCAPatchPtrInput         `pulumi:"serverCA"`
	ServerTLS        PoolerStatusSecretsServerTLSPatchPtrInput        `pulumi:"serverTLS"`
}

func (PoolerStatusSecretsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsPatch)(nil)).Elem()
}

func (i PoolerStatusSecretsPatchArgs) ToPoolerStatusSecretsPatchOutput() PoolerStatusSecretsPatchOutput {
	return i.ToPoolerStatusSecretsPatchOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsPatchArgs) ToPoolerStatusSecretsPatchOutputWithContext(ctx context.Context) PoolerStatusSecretsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPatchOutput)
}

func (i PoolerStatusSecretsPatchArgs) ToPoolerStatusSecretsPatchPtrOutput() PoolerStatusSecretsPatchPtrOutput {
	return i.ToPoolerStatusSecretsPatchPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsPatchArgs) ToPoolerStatusSecretsPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPatchOutput).ToPoolerStatusSecretsPatchPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsPatchPtrInput is an input type that accepts PoolerStatusSecretsPatchArgs, PoolerStatusSecretsPatchPtr and PoolerStatusSecretsPatchPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPatchPtrInput` via:
//
//	        PoolerStatusSecretsPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsPatchPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPatchPtrOutput() PoolerStatusSecretsPatchPtrOutput
	ToPoolerStatusSecretsPatchPtrOutputWithContext(context.Context) PoolerStatusSecretsPatchPtrOutput
}

type poolerStatusSecretsPatchPtrType PoolerStatusSecretsPatchArgs

func PoolerStatusSecretsPatchPtr(v *PoolerStatusSecretsPatchArgs) PoolerStatusSecretsPatchPtrInput {
	return (*poolerStatusSecretsPatchPtrType)(v)
}

func (*poolerStatusSecretsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsPatch)(nil)).Elem()
}

func (i *poolerStatusSecretsPatchPtrType) ToPoolerStatusSecretsPatchPtrOutput() PoolerStatusSecretsPatchPtrOutput {
	return i.ToPoolerStatusSecretsPatchPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsPatchPtrType) ToPoolerStatusSecretsPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPatchPtrOutput)
}

// The resource version of the config object
type PoolerStatusSecretsPatchOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsPatch)(nil)).Elem()
}

func (o PoolerStatusSecretsPatchOutput) ToPoolerStatusSecretsPatchOutput() PoolerStatusSecretsPatchOutput {
	return o
}

func (o PoolerStatusSecretsPatchOutput) ToPoolerStatusSecretsPatchOutputWithContext(ctx context.Context) PoolerStatusSecretsPatchOutput {
	return o
}

func (o PoolerStatusSecretsPatchOutput) ToPoolerStatusSecretsPatchPtrOutput() PoolerStatusSecretsPatchPtrOutput {
	return o.ToPoolerStatusSecretsPatchPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsPatchOutput) ToPoolerStatusSecretsPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsPatch) *PoolerStatusSecretsPatch {
		return &v
	}).(PoolerStatusSecretsPatchPtrOutput)
}

func (o PoolerStatusSecretsPatchOutput) ClientCA() PoolerStatusSecretsClientCAPatchPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsPatch) *PoolerStatusSecretsClientCAPatch { return v.ClientCA }).(PoolerStatusSecretsClientCAPatchPtrOutput)
}

func (o PoolerStatusSecretsPatchOutput) PgBouncerSecrets() PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsPatch) *PoolerStatusSecretsPgBouncerSecretsPatch { return v.PgBouncerSecrets }).(PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput)
}

func (o PoolerStatusSecretsPatchOutput) ServerCA() PoolerStatusSecretsServerCAPatchPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsPatch) *PoolerStatusSecretsServerCAPatch { return v.ServerCA }).(PoolerStatusSecretsServerCAPatchPtrOutput)
}

func (o PoolerStatusSecretsPatchOutput) ServerTLS() PoolerStatusSecretsServerTLSPatchPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsPatch) *PoolerStatusSecretsServerTLSPatch { return v.ServerTLS }).(PoolerStatusSecretsServerTLSPatchPtrOutput)
}

type PoolerStatusSecretsPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsPatch)(nil)).Elem()
}

func (o PoolerStatusSecretsPatchPtrOutput) ToPoolerStatusSecretsPatchPtrOutput() PoolerStatusSecretsPatchPtrOutput {
	return o
}

func (o PoolerStatusSecretsPatchPtrOutput) ToPoolerStatusSecretsPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPatchPtrOutput {
	return o
}

func (o PoolerStatusSecretsPatchPtrOutput) Elem() PoolerStatusSecretsPatchOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPatch) PoolerStatusSecretsPatch {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsPatch
		return ret
	}).(PoolerStatusSecretsPatchOutput)
}

func (o PoolerStatusSecretsPatchPtrOutput) ClientCA() PoolerStatusSecretsClientCAPatchPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPatch) *PoolerStatusSecretsClientCAPatch {
		if v == nil {
			return nil
		}
		return v.ClientCA
	}).(PoolerStatusSecretsClientCAPatchPtrOutput)
}

func (o PoolerStatusSecretsPatchPtrOutput) PgBouncerSecrets() PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPatch) *PoolerStatusSecretsPgBouncerSecretsPatch {
		if v == nil {
			return nil
		}
		return v.PgBouncerSecrets
	}).(PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput)
}

func (o PoolerStatusSecretsPatchPtrOutput) ServerCA() PoolerStatusSecretsServerCAPatchPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPatch) *PoolerStatusSecretsServerCAPatch {
		if v == nil {
			return nil
		}
		return v.ServerCA
	}).(PoolerStatusSecretsServerCAPatchPtrOutput)
}

func (o PoolerStatusSecretsPatchPtrOutput) ServerTLS() PoolerStatusSecretsServerTLSPatchPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPatch) *PoolerStatusSecretsServerTLSPatch {
		if v == nil {
			return nil
		}
		return v.ServerTLS
	}).(PoolerStatusSecretsServerTLSPatchPtrOutput)
}

// The version of the secrets used by PgBouncer
type PoolerStatusSecretsPgBouncerSecrets struct {
	AuthQuery *PoolerStatusSecretsPgBouncerSecretsAuthQuery `pulumi:"authQuery"`
}

// PoolerStatusSecretsPgBouncerSecretsInput is an input type that accepts PoolerStatusSecretsPgBouncerSecretsArgs and PoolerStatusSecretsPgBouncerSecretsOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPgBouncerSecretsInput` via:
//
//	PoolerStatusSecretsPgBouncerSecretsArgs{...}
type PoolerStatusSecretsPgBouncerSecretsInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPgBouncerSecretsOutput() PoolerStatusSecretsPgBouncerSecretsOutput
	ToPoolerStatusSecretsPgBouncerSecretsOutputWithContext(context.Context) PoolerStatusSecretsPgBouncerSecretsOutput
}

// The version of the secrets used by PgBouncer
type PoolerStatusSecretsPgBouncerSecretsArgs struct {
	AuthQuery PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrInput `pulumi:"authQuery"`
}

func (PoolerStatusSecretsPgBouncerSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecrets)(nil)).Elem()
}

func (i PoolerStatusSecretsPgBouncerSecretsArgs) ToPoolerStatusSecretsPgBouncerSecretsOutput() PoolerStatusSecretsPgBouncerSecretsOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsPgBouncerSecretsArgs) ToPoolerStatusSecretsPgBouncerSecretsOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsOutput)
}

func (i PoolerStatusSecretsPgBouncerSecretsArgs) ToPoolerStatusSecretsPgBouncerSecretsPtrOutput() PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsPgBouncerSecretsArgs) ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsOutput).ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsPgBouncerSecretsPtrInput is an input type that accepts PoolerStatusSecretsPgBouncerSecretsArgs, PoolerStatusSecretsPgBouncerSecretsPtr and PoolerStatusSecretsPgBouncerSecretsPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPgBouncerSecretsPtrInput` via:
//
//	        PoolerStatusSecretsPgBouncerSecretsArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsPgBouncerSecretsPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPgBouncerSecretsPtrOutput() PoolerStatusSecretsPgBouncerSecretsPtrOutput
	ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(context.Context) PoolerStatusSecretsPgBouncerSecretsPtrOutput
}

type poolerStatusSecretsPgBouncerSecretsPtrType PoolerStatusSecretsPgBouncerSecretsArgs

func PoolerStatusSecretsPgBouncerSecretsPtr(v *PoolerStatusSecretsPgBouncerSecretsArgs) PoolerStatusSecretsPgBouncerSecretsPtrInput {
	return (*poolerStatusSecretsPgBouncerSecretsPtrType)(v)
}

func (*poolerStatusSecretsPgBouncerSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsPgBouncerSecrets)(nil)).Elem()
}

func (i *poolerStatusSecretsPgBouncerSecretsPtrType) ToPoolerStatusSecretsPgBouncerSecretsPtrOutput() PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsPgBouncerSecretsPtrType) ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsPtrOutput)
}

// The version of the secrets used by PgBouncer
type PoolerStatusSecretsPgBouncerSecretsOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPgBouncerSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecrets)(nil)).Elem()
}

func (o PoolerStatusSecretsPgBouncerSecretsOutput) ToPoolerStatusSecretsPgBouncerSecretsOutput() PoolerStatusSecretsPgBouncerSecretsOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsOutput) ToPoolerStatusSecretsPgBouncerSecretsOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsOutput) ToPoolerStatusSecretsPgBouncerSecretsPtrOutput() PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return o.ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsPgBouncerSecretsOutput) ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsPgBouncerSecrets) *PoolerStatusSecretsPgBouncerSecrets {
		return &v
	}).(PoolerStatusSecretsPgBouncerSecretsPtrOutput)
}

func (o PoolerStatusSecretsPgBouncerSecretsOutput) AuthQuery() PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsPgBouncerSecrets) *PoolerStatusSecretsPgBouncerSecretsAuthQuery {
		return v.AuthQuery
	}).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput)
}

type PoolerStatusSecretsPgBouncerSecretsPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPgBouncerSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsPgBouncerSecrets)(nil)).Elem()
}

func (o PoolerStatusSecretsPgBouncerSecretsPtrOutput) ToPoolerStatusSecretsPgBouncerSecretsPtrOutput() PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsPtrOutput) ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsPtrOutput) Elem() PoolerStatusSecretsPgBouncerSecretsOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecrets) PoolerStatusSecretsPgBouncerSecrets {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsPgBouncerSecrets
		return ret
	}).(PoolerStatusSecretsPgBouncerSecretsOutput)
}

func (o PoolerStatusSecretsPgBouncerSecretsPtrOutput) AuthQuery() PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecrets) *PoolerStatusSecretsPgBouncerSecretsAuthQuery {
		if v == nil {
			return nil
		}
		return v.AuthQuery
	}).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput)
}

// The auth query secret version
type PoolerStatusSecretsPgBouncerSecretsAuthQuery struct {
	// The name of the secret
	Name *string `pulumi:"name"`
	// The ResourceVersion of the secret
	Version *string `pulumi:"version"`
}

// PoolerStatusSecretsPgBouncerSecretsAuthQueryInput is an input type that accepts PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs and PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPgBouncerSecretsAuthQueryInput` via:
//
//	PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs{...}
type PoolerStatusSecretsPgBouncerSecretsAuthQueryInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPgBouncerSecretsAuthQueryOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput
	ToPoolerStatusSecretsPgBouncerSecretsAuthQueryOutputWithContext(context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput
}

// The auth query secret version
type PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs struct {
	// The name of the secret
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ResourceVersion of the secret
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsAuthQuery)(nil)).Elem()
}

func (i PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsAuthQueryOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput)
}

func (i PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput).ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrInput is an input type that accepts PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs, PoolerStatusSecretsPgBouncerSecretsAuthQueryPtr and PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrInput` via:
//
//	        PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput
	ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput
}

type poolerStatusSecretsPgBouncerSecretsAuthQueryPtrType PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs

func PoolerStatusSecretsPgBouncerSecretsAuthQueryPtr(v *PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs) PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrInput {
	return (*poolerStatusSecretsPgBouncerSecretsAuthQueryPtrType)(v)
}

func (*poolerStatusSecretsPgBouncerSecretsAuthQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsPgBouncerSecretsAuthQuery)(nil)).Elem()
}

func (i *poolerStatusSecretsPgBouncerSecretsAuthQueryPtrType) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsPgBouncerSecretsAuthQueryPtrType) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput)
}

// The auth query secret version
type PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsAuthQuery)(nil)).Elem()
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return o.ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsPgBouncerSecretsAuthQuery) *PoolerStatusSecretsPgBouncerSecretsAuthQuery {
		return &v
	}).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput)
}

// The name of the secret
func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsPgBouncerSecretsAuthQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsPgBouncerSecretsAuthQuery) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsPgBouncerSecretsAuthQuery)(nil)).Elem()
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput) Elem() PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecretsAuthQuery) PoolerStatusSecretsPgBouncerSecretsAuthQuery {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsPgBouncerSecretsAuthQuery
		return ret
	}).(PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput)
}

// The name of the secret
func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecretsAuthQuery) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecretsAuthQuery) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The auth query secret version
type PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch struct {
	// The name of the secret
	Name *string `pulumi:"name"`
	// The ResourceVersion of the secret
	Version *string `pulumi:"version"`
}

// PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchInput is an input type that accepts PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchArgs and PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchInput` via:
//
//	PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchArgs{...}
type PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput
	ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutputWithContext(context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput
}

// The auth query secret version
type PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchArgs struct {
	// The name of the secret
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ResourceVersion of the secret
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch)(nil)).Elem()
}

func (i PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchArgs) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchArgs) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput)
}

func (i PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchArgs) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchArgs) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput).ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrInput is an input type that accepts PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchArgs, PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtr and PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrInput` via:
//
//	        PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput
	ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutputWithContext(context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput
}

type poolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrType PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchArgs

func PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtr(v *PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchArgs) PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrInput {
	return (*poolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrType)(v)
}

func (*poolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch)(nil)).Elem()
}

func (i *poolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrType) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrType) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput)
}

// The auth query secret version
type PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch)(nil)).Elem()
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput {
	return o.ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch) *PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch {
		return &v
	}).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput)
}

// The name of the secret
func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch)(nil)).Elem()
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput) Elem() PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch) PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch
		return ret
	}).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput)
}

// The name of the secret
func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The version of the secrets used by PgBouncer
type PoolerStatusSecretsPgBouncerSecretsPatch struct {
	AuthQuery *PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch `pulumi:"authQuery"`
}

// PoolerStatusSecretsPgBouncerSecretsPatchInput is an input type that accepts PoolerStatusSecretsPgBouncerSecretsPatchArgs and PoolerStatusSecretsPgBouncerSecretsPatchOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPgBouncerSecretsPatchInput` via:
//
//	PoolerStatusSecretsPgBouncerSecretsPatchArgs{...}
type PoolerStatusSecretsPgBouncerSecretsPatchInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPgBouncerSecretsPatchOutput() PoolerStatusSecretsPgBouncerSecretsPatchOutput
	ToPoolerStatusSecretsPgBouncerSecretsPatchOutputWithContext(context.Context) PoolerStatusSecretsPgBouncerSecretsPatchOutput
}

// The version of the secrets used by PgBouncer
type PoolerStatusSecretsPgBouncerSecretsPatchArgs struct {
	AuthQuery PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrInput `pulumi:"authQuery"`
}

func (PoolerStatusSecretsPgBouncerSecretsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsPatch)(nil)).Elem()
}

func (i PoolerStatusSecretsPgBouncerSecretsPatchArgs) ToPoolerStatusSecretsPgBouncerSecretsPatchOutput() PoolerStatusSecretsPgBouncerSecretsPatchOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsPatchOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsPgBouncerSecretsPatchArgs) ToPoolerStatusSecretsPgBouncerSecretsPatchOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsPatchOutput)
}

func (i PoolerStatusSecretsPgBouncerSecretsPatchArgs) ToPoolerStatusSecretsPgBouncerSecretsPatchPtrOutput() PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsPatchPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsPgBouncerSecretsPatchArgs) ToPoolerStatusSecretsPgBouncerSecretsPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsPatchOutput).ToPoolerStatusSecretsPgBouncerSecretsPatchPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsPgBouncerSecretsPatchPtrInput is an input type that accepts PoolerStatusSecretsPgBouncerSecretsPatchArgs, PoolerStatusSecretsPgBouncerSecretsPatchPtr and PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPgBouncerSecretsPatchPtrInput` via:
//
//	        PoolerStatusSecretsPgBouncerSecretsPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsPgBouncerSecretsPatchPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPgBouncerSecretsPatchPtrOutput() PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput
	ToPoolerStatusSecretsPgBouncerSecretsPatchPtrOutputWithContext(context.Context) PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput
}

type poolerStatusSecretsPgBouncerSecretsPatchPtrType PoolerStatusSecretsPgBouncerSecretsPatchArgs

func PoolerStatusSecretsPgBouncerSecretsPatchPtr(v *PoolerStatusSecretsPgBouncerSecretsPatchArgs) PoolerStatusSecretsPgBouncerSecretsPatchPtrInput {
	return (*poolerStatusSecretsPgBouncerSecretsPatchPtrType)(v)
}

func (*poolerStatusSecretsPgBouncerSecretsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsPgBouncerSecretsPatch)(nil)).Elem()
}

func (i *poolerStatusSecretsPgBouncerSecretsPatchPtrType) ToPoolerStatusSecretsPgBouncerSecretsPatchPtrOutput() PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsPatchPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsPgBouncerSecretsPatchPtrType) ToPoolerStatusSecretsPgBouncerSecretsPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput)
}

// The version of the secrets used by PgBouncer
type PoolerStatusSecretsPgBouncerSecretsPatchOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPgBouncerSecretsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsPatch)(nil)).Elem()
}

func (o PoolerStatusSecretsPgBouncerSecretsPatchOutput) ToPoolerStatusSecretsPgBouncerSecretsPatchOutput() PoolerStatusSecretsPgBouncerSecretsPatchOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsPatchOutput) ToPoolerStatusSecretsPgBouncerSecretsPatchOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsPatchOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsPatchOutput) ToPoolerStatusSecretsPgBouncerSecretsPatchPtrOutput() PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput {
	return o.ToPoolerStatusSecretsPgBouncerSecretsPatchPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsPgBouncerSecretsPatchOutput) ToPoolerStatusSecretsPgBouncerSecretsPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsPgBouncerSecretsPatch) *PoolerStatusSecretsPgBouncerSecretsPatch {
		return &v
	}).(PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput)
}

func (o PoolerStatusSecretsPgBouncerSecretsPatchOutput) AuthQuery() PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsPgBouncerSecretsPatch) *PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch {
		return v.AuthQuery
	}).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput)
}

type PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsPgBouncerSecretsPatch)(nil)).Elem()
}

func (o PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput) ToPoolerStatusSecretsPgBouncerSecretsPatchPtrOutput() PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput) ToPoolerStatusSecretsPgBouncerSecretsPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput) Elem() PoolerStatusSecretsPgBouncerSecretsPatchOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecretsPatch) PoolerStatusSecretsPgBouncerSecretsPatch {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsPgBouncerSecretsPatch
		return ret
	}).(PoolerStatusSecretsPgBouncerSecretsPatchOutput)
}

func (o PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput) AuthQuery() PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecretsPatch) *PoolerStatusSecretsPgBouncerSecretsAuthQueryPatch {
		if v == nil {
			return nil
		}
		return v.AuthQuery
	}).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput)
}

// The server CA secret version
type PoolerStatusSecretsServerCA struct {
	// The name of the secret
	Name *string `pulumi:"name"`
	// The ResourceVersion of the secret
	Version *string `pulumi:"version"`
}

// PoolerStatusSecretsServerCAInput is an input type that accepts PoolerStatusSecretsServerCAArgs and PoolerStatusSecretsServerCAOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsServerCAInput` via:
//
//	PoolerStatusSecretsServerCAArgs{...}
type PoolerStatusSecretsServerCAInput interface {
	pulumi.Input

	ToPoolerStatusSecretsServerCAOutput() PoolerStatusSecretsServerCAOutput
	ToPoolerStatusSecretsServerCAOutputWithContext(context.Context) PoolerStatusSecretsServerCAOutput
}

// The server CA secret version
type PoolerStatusSecretsServerCAArgs struct {
	// The name of the secret
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ResourceVersion of the secret
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PoolerStatusSecretsServerCAArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsServerCA)(nil)).Elem()
}

func (i PoolerStatusSecretsServerCAArgs) ToPoolerStatusSecretsServerCAOutput() PoolerStatusSecretsServerCAOutput {
	return i.ToPoolerStatusSecretsServerCAOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsServerCAArgs) ToPoolerStatusSecretsServerCAOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCAOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerCAOutput)
}

func (i PoolerStatusSecretsServerCAArgs) ToPoolerStatusSecretsServerCAPtrOutput() PoolerStatusSecretsServerCAPtrOutput {
	return i.ToPoolerStatusSecretsServerCAPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsServerCAArgs) ToPoolerStatusSecretsServerCAPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCAPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerCAOutput).ToPoolerStatusSecretsServerCAPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsServerCAPtrInput is an input type that accepts PoolerStatusSecretsServerCAArgs, PoolerStatusSecretsServerCAPtr and PoolerStatusSecretsServerCAPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsServerCAPtrInput` via:
//
//	        PoolerStatusSecretsServerCAArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsServerCAPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsServerCAPtrOutput() PoolerStatusSecretsServerCAPtrOutput
	ToPoolerStatusSecretsServerCAPtrOutputWithContext(context.Context) PoolerStatusSecretsServerCAPtrOutput
}

type poolerStatusSecretsServerCAPtrType PoolerStatusSecretsServerCAArgs

func PoolerStatusSecretsServerCAPtr(v *PoolerStatusSecretsServerCAArgs) PoolerStatusSecretsServerCAPtrInput {
	return (*poolerStatusSecretsServerCAPtrType)(v)
}

func (*poolerStatusSecretsServerCAPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsServerCA)(nil)).Elem()
}

func (i *poolerStatusSecretsServerCAPtrType) ToPoolerStatusSecretsServerCAPtrOutput() PoolerStatusSecretsServerCAPtrOutput {
	return i.ToPoolerStatusSecretsServerCAPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsServerCAPtrType) ToPoolerStatusSecretsServerCAPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCAPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerCAPtrOutput)
}

// The server CA secret version
type PoolerStatusSecretsServerCAOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsServerCAOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsServerCA)(nil)).Elem()
}

func (o PoolerStatusSecretsServerCAOutput) ToPoolerStatusSecretsServerCAOutput() PoolerStatusSecretsServerCAOutput {
	return o
}

func (o PoolerStatusSecretsServerCAOutput) ToPoolerStatusSecretsServerCAOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCAOutput {
	return o
}

func (o PoolerStatusSecretsServerCAOutput) ToPoolerStatusSecretsServerCAPtrOutput() PoolerStatusSecretsServerCAPtrOutput {
	return o.ToPoolerStatusSecretsServerCAPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsServerCAOutput) ToPoolerStatusSecretsServerCAPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCAPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsServerCA) *PoolerStatusSecretsServerCA {
		return &v
	}).(PoolerStatusSecretsServerCAPtrOutput)
}

// The name of the secret
func (o PoolerStatusSecretsServerCAOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsServerCA) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsServerCAOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsServerCA) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PoolerStatusSecretsServerCAPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsServerCAPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsServerCA)(nil)).Elem()
}

func (o PoolerStatusSecretsServerCAPtrOutput) ToPoolerStatusSecretsServerCAPtrOutput() PoolerStatusSecretsServerCAPtrOutput {
	return o
}

func (o PoolerStatusSecretsServerCAPtrOutput) ToPoolerStatusSecretsServerCAPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCAPtrOutput {
	return o
}

func (o PoolerStatusSecretsServerCAPtrOutput) Elem() PoolerStatusSecretsServerCAOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerCA) PoolerStatusSecretsServerCA {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsServerCA
		return ret
	}).(PoolerStatusSecretsServerCAOutput)
}

// The name of the secret
func (o PoolerStatusSecretsServerCAPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerCA) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsServerCAPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerCA) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The server CA secret version
type PoolerStatusSecretsServerCAPatch struct {
	// The name of the secret
	Name *string `pulumi:"name"`
	// The ResourceVersion of the secret
	Version *string `pulumi:"version"`
}

// PoolerStatusSecretsServerCAPatchInput is an input type that accepts PoolerStatusSecretsServerCAPatchArgs and PoolerStatusSecretsServerCAPatchOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsServerCAPatchInput` via:
//
//	PoolerStatusSecretsServerCAPatchArgs{...}
type PoolerStatusSecretsServerCAPatchInput interface {
	pulumi.Input

	ToPoolerStatusSecretsServerCAPatchOutput() PoolerStatusSecretsServerCAPatchOutput
	ToPoolerStatusSecretsServerCAPatchOutputWithContext(context.Context) PoolerStatusSecretsServerCAPatchOutput
}

// The server CA secret version
type PoolerStatusSecretsServerCAPatchArgs struct {
	// The name of the secret
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ResourceVersion of the secret
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PoolerStatusSecretsServerCAPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsServerCAPatch)(nil)).Elem()
}

func (i PoolerStatusSecretsServerCAPatchArgs) ToPoolerStatusSecretsServerCAPatchOutput() PoolerStatusSecretsServerCAPatchOutput {
	return i.ToPoolerStatusSecretsServerCAPatchOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsServerCAPatchArgs) ToPoolerStatusSecretsServerCAPatchOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCAPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerCAPatchOutput)
}

func (i PoolerStatusSecretsServerCAPatchArgs) ToPoolerStatusSecretsServerCAPatchPtrOutput() PoolerStatusSecretsServerCAPatchPtrOutput {
	return i.ToPoolerStatusSecretsServerCAPatchPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsServerCAPatchArgs) ToPoolerStatusSecretsServerCAPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCAPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerCAPatchOutput).ToPoolerStatusSecretsServerCAPatchPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsServerCAPatchPtrInput is an input type that accepts PoolerStatusSecretsServerCAPatchArgs, PoolerStatusSecretsServerCAPatchPtr and PoolerStatusSecretsServerCAPatchPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsServerCAPatchPtrInput` via:
//
//	        PoolerStatusSecretsServerCAPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsServerCAPatchPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsServerCAPatchPtrOutput() PoolerStatusSecretsServerCAPatchPtrOutput
	ToPoolerStatusSecretsServerCAPatchPtrOutputWithContext(context.Context) PoolerStatusSecretsServerCAPatchPtrOutput
}

type poolerStatusSecretsServerCAPatchPtrType PoolerStatusSecretsServerCAPatchArgs

func PoolerStatusSecretsServerCAPatchPtr(v *PoolerStatusSecretsServerCAPatchArgs) PoolerStatusSecretsServerCAPatchPtrInput {
	return (*poolerStatusSecretsServerCAPatchPtrType)(v)
}

func (*poolerStatusSecretsServerCAPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsServerCAPatch)(nil)).Elem()
}

func (i *poolerStatusSecretsServerCAPatchPtrType) ToPoolerStatusSecretsServerCAPatchPtrOutput() PoolerStatusSecretsServerCAPatchPtrOutput {
	return i.ToPoolerStatusSecretsServerCAPatchPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsServerCAPatchPtrType) ToPoolerStatusSecretsServerCAPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCAPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerCAPatchPtrOutput)
}

// The server CA secret version
type PoolerStatusSecretsServerCAPatchOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsServerCAPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsServerCAPatch)(nil)).Elem()
}

func (o PoolerStatusSecretsServerCAPatchOutput) ToPoolerStatusSecretsServerCAPatchOutput() PoolerStatusSecretsServerCAPatchOutput {
	return o
}

func (o PoolerStatusSecretsServerCAPatchOutput) ToPoolerStatusSecretsServerCAPatchOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCAPatchOutput {
	return o
}

func (o PoolerStatusSecretsServerCAPatchOutput) ToPoolerStatusSecretsServerCAPatchPtrOutput() PoolerStatusSecretsServerCAPatchPtrOutput {
	return o.ToPoolerStatusSecretsServerCAPatchPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsServerCAPatchOutput) ToPoolerStatusSecretsServerCAPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCAPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsServerCAPatch) *PoolerStatusSecretsServerCAPatch {
		return &v
	}).(PoolerStatusSecretsServerCAPatchPtrOutput)
}

// The name of the secret
func (o PoolerStatusSecretsServerCAPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsServerCAPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsServerCAPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsServerCAPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PoolerStatusSecretsServerCAPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsServerCAPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsServerCAPatch)(nil)).Elem()
}

func (o PoolerStatusSecretsServerCAPatchPtrOutput) ToPoolerStatusSecretsServerCAPatchPtrOutput() PoolerStatusSecretsServerCAPatchPtrOutput {
	return o
}

func (o PoolerStatusSecretsServerCAPatchPtrOutput) ToPoolerStatusSecretsServerCAPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCAPatchPtrOutput {
	return o
}

func (o PoolerStatusSecretsServerCAPatchPtrOutput) Elem() PoolerStatusSecretsServerCAPatchOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerCAPatch) PoolerStatusSecretsServerCAPatch {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsServerCAPatch
		return ret
	}).(PoolerStatusSecretsServerCAPatchOutput)
}

// The name of the secret
func (o PoolerStatusSecretsServerCAPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerCAPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsServerCAPatchPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerCAPatch) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The server TLS secret version
type PoolerStatusSecretsServerTLS struct {
	// The name of the secret
	Name *string `pulumi:"name"`
	// The ResourceVersion of the secret
	Version *string `pulumi:"version"`
}

// PoolerStatusSecretsServerTLSInput is an input type that accepts PoolerStatusSecretsServerTLSArgs and PoolerStatusSecretsServerTLSOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsServerTLSInput` via:
//
//	PoolerStatusSecretsServerTLSArgs{...}
type PoolerStatusSecretsServerTLSInput interface {
	pulumi.Input

	ToPoolerStatusSecretsServerTLSOutput() PoolerStatusSecretsServerTLSOutput
	ToPoolerStatusSecretsServerTLSOutputWithContext(context.Context) PoolerStatusSecretsServerTLSOutput
}

// The server TLS secret version
type PoolerStatusSecretsServerTLSArgs struct {
	// The name of the secret
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ResourceVersion of the secret
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PoolerStatusSecretsServerTLSArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsServerTLS)(nil)).Elem()
}

func (i PoolerStatusSecretsServerTLSArgs) ToPoolerStatusSecretsServerTLSOutput() PoolerStatusSecretsServerTLSOutput {
	return i.ToPoolerStatusSecretsServerTLSOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsServerTLSArgs) ToPoolerStatusSecretsServerTLSOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTLSOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerTLSOutput)
}

func (i PoolerStatusSecretsServerTLSArgs) ToPoolerStatusSecretsServerTLSPtrOutput() PoolerStatusSecretsServerTLSPtrOutput {
	return i.ToPoolerStatusSecretsServerTLSPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsServerTLSArgs) ToPoolerStatusSecretsServerTLSPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTLSPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerTLSOutput).ToPoolerStatusSecretsServerTLSPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsServerTLSPtrInput is an input type that accepts PoolerStatusSecretsServerTLSArgs, PoolerStatusSecretsServerTLSPtr and PoolerStatusSecretsServerTLSPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsServerTLSPtrInput` via:
//
//	        PoolerStatusSecretsServerTLSArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsServerTLSPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsServerTLSPtrOutput() PoolerStatusSecretsServerTLSPtrOutput
	ToPoolerStatusSecretsServerTLSPtrOutputWithContext(context.Context) PoolerStatusSecretsServerTLSPtrOutput
}

type poolerStatusSecretsServerTLSPtrType PoolerStatusSecretsServerTLSArgs

func PoolerStatusSecretsServerTLSPtr(v *PoolerStatusSecretsServerTLSArgs) PoolerStatusSecretsServerTLSPtrInput {
	return (*poolerStatusSecretsServerTLSPtrType)(v)
}

func (*poolerStatusSecretsServerTLSPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsServerTLS)(nil)).Elem()
}

func (i *poolerStatusSecretsServerTLSPtrType) ToPoolerStatusSecretsServerTLSPtrOutput() PoolerStatusSecretsServerTLSPtrOutput {
	return i.ToPoolerStatusSecretsServerTLSPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsServerTLSPtrType) ToPoolerStatusSecretsServerTLSPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTLSPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerTLSPtrOutput)
}

// The server TLS secret version
type PoolerStatusSecretsServerTLSOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsServerTLSOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsServerTLS)(nil)).Elem()
}

func (o PoolerStatusSecretsServerTLSOutput) ToPoolerStatusSecretsServerTLSOutput() PoolerStatusSecretsServerTLSOutput {
	return o
}

func (o PoolerStatusSecretsServerTLSOutput) ToPoolerStatusSecretsServerTLSOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTLSOutput {
	return o
}

func (o PoolerStatusSecretsServerTLSOutput) ToPoolerStatusSecretsServerTLSPtrOutput() PoolerStatusSecretsServerTLSPtrOutput {
	return o.ToPoolerStatusSecretsServerTLSPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsServerTLSOutput) ToPoolerStatusSecretsServerTLSPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTLSPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsServerTLS) *PoolerStatusSecretsServerTLS {
		return &v
	}).(PoolerStatusSecretsServerTLSPtrOutput)
}

// The name of the secret
func (o PoolerStatusSecretsServerTLSOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsServerTLS) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsServerTLSOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsServerTLS) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PoolerStatusSecretsServerTLSPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsServerTLSPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsServerTLS)(nil)).Elem()
}

func (o PoolerStatusSecretsServerTLSPtrOutput) ToPoolerStatusSecretsServerTLSPtrOutput() PoolerStatusSecretsServerTLSPtrOutput {
	return o
}

func (o PoolerStatusSecretsServerTLSPtrOutput) ToPoolerStatusSecretsServerTLSPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTLSPtrOutput {
	return o
}

func (o PoolerStatusSecretsServerTLSPtrOutput) Elem() PoolerStatusSecretsServerTLSOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerTLS) PoolerStatusSecretsServerTLS {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsServerTLS
		return ret
	}).(PoolerStatusSecretsServerTLSOutput)
}

// The name of the secret
func (o PoolerStatusSecretsServerTLSPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerTLS) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsServerTLSPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerTLS) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The server TLS secret version
type PoolerStatusSecretsServerTLSPatch struct {
	// The name of the secret
	Name *string `pulumi:"name"`
	// The ResourceVersion of the secret
	Version *string `pulumi:"version"`
}

// PoolerStatusSecretsServerTLSPatchInput is an input type that accepts PoolerStatusSecretsServerTLSPatchArgs and PoolerStatusSecretsServerTLSPatchOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsServerTLSPatchInput` via:
//
//	PoolerStatusSecretsServerTLSPatchArgs{...}
type PoolerStatusSecretsServerTLSPatchInput interface {
	pulumi.Input

	ToPoolerStatusSecretsServerTLSPatchOutput() PoolerStatusSecretsServerTLSPatchOutput
	ToPoolerStatusSecretsServerTLSPatchOutputWithContext(context.Context) PoolerStatusSecretsServerTLSPatchOutput
}

// The server TLS secret version
type PoolerStatusSecretsServerTLSPatchArgs struct {
	// The name of the secret
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ResourceVersion of the secret
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PoolerStatusSecretsServerTLSPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsServerTLSPatch)(nil)).Elem()
}

func (i PoolerStatusSecretsServerTLSPatchArgs) ToPoolerStatusSecretsServerTLSPatchOutput() PoolerStatusSecretsServerTLSPatchOutput {
	return i.ToPoolerStatusSecretsServerTLSPatchOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsServerTLSPatchArgs) ToPoolerStatusSecretsServerTLSPatchOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTLSPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerTLSPatchOutput)
}

func (i PoolerStatusSecretsServerTLSPatchArgs) ToPoolerStatusSecretsServerTLSPatchPtrOutput() PoolerStatusSecretsServerTLSPatchPtrOutput {
	return i.ToPoolerStatusSecretsServerTLSPatchPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsServerTLSPatchArgs) ToPoolerStatusSecretsServerTLSPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTLSPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerTLSPatchOutput).ToPoolerStatusSecretsServerTLSPatchPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsServerTLSPatchPtrInput is an input type that accepts PoolerStatusSecretsServerTLSPatchArgs, PoolerStatusSecretsServerTLSPatchPtr and PoolerStatusSecretsServerTLSPatchPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsServerTLSPatchPtrInput` via:
//
//	        PoolerStatusSecretsServerTLSPatchArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsServerTLSPatchPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsServerTLSPatchPtrOutput() PoolerStatusSecretsServerTLSPatchPtrOutput
	ToPoolerStatusSecretsServerTLSPatchPtrOutputWithContext(context.Context) PoolerStatusSecretsServerTLSPatchPtrOutput
}

type poolerStatusSecretsServerTLSPatchPtrType PoolerStatusSecretsServerTLSPatchArgs

func PoolerStatusSecretsServerTLSPatchPtr(v *PoolerStatusSecretsServerTLSPatchArgs) PoolerStatusSecretsServerTLSPatchPtrInput {
	return (*poolerStatusSecretsServerTLSPatchPtrType)(v)
}

func (*poolerStatusSecretsServerTLSPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsServerTLSPatch)(nil)).Elem()
}

func (i *poolerStatusSecretsServerTLSPatchPtrType) ToPoolerStatusSecretsServerTLSPatchPtrOutput() PoolerStatusSecretsServerTLSPatchPtrOutput {
	return i.ToPoolerStatusSecretsServerTLSPatchPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsServerTLSPatchPtrType) ToPoolerStatusSecretsServerTLSPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTLSPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerTLSPatchPtrOutput)
}

// The server TLS secret version
type PoolerStatusSecretsServerTLSPatchOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsServerTLSPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsServerTLSPatch)(nil)).Elem()
}

func (o PoolerStatusSecretsServerTLSPatchOutput) ToPoolerStatusSecretsServerTLSPatchOutput() PoolerStatusSecretsServerTLSPatchOutput {
	return o
}

func (o PoolerStatusSecretsServerTLSPatchOutput) ToPoolerStatusSecretsServerTLSPatchOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTLSPatchOutput {
	return o
}

func (o PoolerStatusSecretsServerTLSPatchOutput) ToPoolerStatusSecretsServerTLSPatchPtrOutput() PoolerStatusSecretsServerTLSPatchPtrOutput {
	return o.ToPoolerStatusSecretsServerTLSPatchPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsServerTLSPatchOutput) ToPoolerStatusSecretsServerTLSPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTLSPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsServerTLSPatch) *PoolerStatusSecretsServerTLSPatch {
		return &v
	}).(PoolerStatusSecretsServerTLSPatchPtrOutput)
}

// The name of the secret
func (o PoolerStatusSecretsServerTLSPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsServerTLSPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsServerTLSPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsServerTLSPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PoolerStatusSecretsServerTLSPatchPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsServerTLSPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsServerTLSPatch)(nil)).Elem()
}

func (o PoolerStatusSecretsServerTLSPatchPtrOutput) ToPoolerStatusSecretsServerTLSPatchPtrOutput() PoolerStatusSecretsServerTLSPatchPtrOutput {
	return o
}

func (o PoolerStatusSecretsServerTLSPatchPtrOutput) ToPoolerStatusSecretsServerTLSPatchPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTLSPatchPtrOutput {
	return o
}

func (o PoolerStatusSecretsServerTLSPatchPtrOutput) Elem() PoolerStatusSecretsServerTLSPatchOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerTLSPatch) PoolerStatusSecretsServerTLSPatch {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsServerTLSPatch
		return ret
	}).(PoolerStatusSecretsServerTLSPatchOutput)
}

// The name of the secret
func (o PoolerStatusSecretsServerTLSPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerTLSPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsServerTLSPatchPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerTLSPatch) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Publication is the Schema for the publications API
type PublicationType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *PublicationSpec   `pulumi:"spec"`
	Status   *PublicationStatus `pulumi:"status"`
}

// PublicationTypeInput is an input type that accepts PublicationTypeArgs and PublicationTypeOutput values.
// You can construct a concrete instance of `PublicationTypeInput` via:
//
//	PublicationTypeArgs{...}
type PublicationTypeInput interface {
	pulumi.Input

	ToPublicationTypeOutput() PublicationTypeOutput
	ToPublicationTypeOutputWithContext(context.Context) PublicationTypeOutput
}

// Publication is the Schema for the publications API
type PublicationTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     PublicationSpecPtrInput   `pulumi:"spec"`
	Status   PublicationStatusPtrInput `pulumi:"status"`
}

func (PublicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationType)(nil)).Elem()
}

func (i PublicationTypeArgs) ToPublicationTypeOutput() PublicationTypeOutput {
	return i.ToPublicationTypeOutputWithContext(context.Background())
}

func (i PublicationTypeArgs) ToPublicationTypeOutputWithContext(ctx context.Context) PublicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationTypeOutput)
}

// PublicationTypeArrayInput is an input type that accepts PublicationTypeArray and PublicationTypeArrayOutput values.
// You can construct a concrete instance of `PublicationTypeArrayInput` via:
//
//	PublicationTypeArray{ PublicationTypeArgs{...} }
type PublicationTypeArrayInput interface {
	pulumi.Input

	ToPublicationTypeArrayOutput() PublicationTypeArrayOutput
	ToPublicationTypeArrayOutputWithContext(context.Context) PublicationTypeArrayOutput
}

type PublicationTypeArray []PublicationTypeInput

func (PublicationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicationType)(nil)).Elem()
}

func (i PublicationTypeArray) ToPublicationTypeArrayOutput() PublicationTypeArrayOutput {
	return i.ToPublicationTypeArrayOutputWithContext(context.Background())
}

func (i PublicationTypeArray) ToPublicationTypeArrayOutputWithContext(ctx context.Context) PublicationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationTypeArrayOutput)
}

// Publication is the Schema for the publications API
type PublicationTypeOutput struct{ *pulumi.OutputState }

func (PublicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationType)(nil)).Elem()
}

func (o PublicationTypeOutput) ToPublicationTypeOutput() PublicationTypeOutput {
	return o
}

func (o PublicationTypeOutput) ToPublicationTypeOutputWithContext(ctx context.Context) PublicationTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PublicationTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PublicationTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PublicationTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v PublicationType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o PublicationTypeOutput) Spec() PublicationSpecPtrOutput {
	return o.ApplyT(func(v PublicationType) *PublicationSpec { return v.Spec }).(PublicationSpecPtrOutput)
}

func (o PublicationTypeOutput) Status() PublicationStatusPtrOutput {
	return o.ApplyT(func(v PublicationType) *PublicationStatus { return v.Status }).(PublicationStatusPtrOutput)
}

type PublicationTypeArrayOutput struct{ *pulumi.OutputState }

func (PublicationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicationType)(nil)).Elem()
}

func (o PublicationTypeArrayOutput) ToPublicationTypeArrayOutput() PublicationTypeArrayOutput {
	return o
}

func (o PublicationTypeArrayOutput) ToPublicationTypeArrayOutputWithContext(ctx context.Context) PublicationTypeArrayOutput {
	return o
}

func (o PublicationTypeArrayOutput) Index(i pulumi.IntInput) PublicationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PublicationType {
		return vs[0].([]PublicationType)[vs[1].(int)]
	}).(PublicationTypeOutput)
}

// PublicationList is a list of Publication
type PublicationListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of publications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PublicationType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// PublicationListTypeInput is an input type that accepts PublicationListTypeArgs and PublicationListTypeOutput values.
// You can construct a concrete instance of `PublicationListTypeInput` via:
//
//	PublicationListTypeArgs{...}
type PublicationListTypeInput interface {
	pulumi.Input

	ToPublicationListTypeOutput() PublicationListTypeOutput
	ToPublicationListTypeOutputWithContext(context.Context) PublicationListTypeOutput
}

// PublicationList is a list of Publication
type PublicationListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of publications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PublicationTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (PublicationListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationListType)(nil)).Elem()
}

func (i PublicationListTypeArgs) ToPublicationListTypeOutput() PublicationListTypeOutput {
	return i.ToPublicationListTypeOutputWithContext(context.Background())
}

func (i PublicationListTypeArgs) ToPublicationListTypeOutputWithContext(ctx context.Context) PublicationListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationListTypeOutput)
}

// PublicationList is a list of Publication
type PublicationListTypeOutput struct{ *pulumi.OutputState }

func (PublicationListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationListType)(nil)).Elem()
}

func (o PublicationListTypeOutput) ToPublicationListTypeOutput() PublicationListTypeOutput {
	return o
}

func (o PublicationListTypeOutput) ToPublicationListTypeOutputWithContext(ctx context.Context) PublicationListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PublicationListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of publications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PublicationListTypeOutput) Items() PublicationTypeArrayOutput {
	return o.ApplyT(func(v PublicationListType) []PublicationType { return v.Items }).(PublicationTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PublicationListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PublicationListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v PublicationListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// Publication is the Schema for the publications API
type PublicationPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *PublicationSpecPatch   `pulumi:"spec"`
	Status   *PublicationStatusPatch `pulumi:"status"`
}

// PublicationPatchTypeInput is an input type that accepts PublicationPatchTypeArgs and PublicationPatchTypeOutput values.
// You can construct a concrete instance of `PublicationPatchTypeInput` via:
//
//	PublicationPatchTypeArgs{...}
type PublicationPatchTypeInput interface {
	pulumi.Input

	ToPublicationPatchTypeOutput() PublicationPatchTypeOutput
	ToPublicationPatchTypeOutputWithContext(context.Context) PublicationPatchTypeOutput
}

// Publication is the Schema for the publications API
type PublicationPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     PublicationSpecPatchPtrInput   `pulumi:"spec"`
	Status   PublicationStatusPatchPtrInput `pulumi:"status"`
}

func (PublicationPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationPatchType)(nil)).Elem()
}

func (i PublicationPatchTypeArgs) ToPublicationPatchTypeOutput() PublicationPatchTypeOutput {
	return i.ToPublicationPatchTypeOutputWithContext(context.Background())
}

func (i PublicationPatchTypeArgs) ToPublicationPatchTypeOutputWithContext(ctx context.Context) PublicationPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationPatchTypeOutput)
}

// Publication is the Schema for the publications API
type PublicationPatchTypeOutput struct{ *pulumi.OutputState }

func (PublicationPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationPatchType)(nil)).Elem()
}

func (o PublicationPatchTypeOutput) ToPublicationPatchTypeOutput() PublicationPatchTypeOutput {
	return o
}

func (o PublicationPatchTypeOutput) ToPublicationPatchTypeOutputWithContext(ctx context.Context) PublicationPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PublicationPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PublicationPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PublicationPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v PublicationPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o PublicationPatchTypeOutput) Spec() PublicationSpecPatchPtrOutput {
	return o.ApplyT(func(v PublicationPatchType) *PublicationSpecPatch { return v.Spec }).(PublicationSpecPatchPtrOutput)
}

func (o PublicationPatchTypeOutput) Status() PublicationStatusPatchPtrOutput {
	return o.ApplyT(func(v PublicationPatchType) *PublicationStatusPatch { return v.Status }).(PublicationStatusPatchPtrOutput)
}

// PublicationSpec defines the desired state of Publication
type PublicationSpec struct {
	Cluster *PublicationSpecCluster `pulumi:"cluster"`
	// The name of the database where the publication will be installed in
	// the "publisher" cluster
	Dbname *string `pulumi:"dbname"`
	// The name of the publication inside PostgreSQL
	Name *string `pulumi:"name"`
	// Publication parameters part of the `WITH` clause as expected by
	// PostgreSQL `CREATE PUBLICATION` command
	Parameters map[string]string `pulumi:"parameters"`
	// The policy for end-of-life maintenance of this publication
	PublicationReclaimPolicy *string                `pulumi:"publicationReclaimPolicy"`
	Target                   *PublicationSpecTarget `pulumi:"target"`
}

// PublicationSpecInput is an input type that accepts PublicationSpecArgs and PublicationSpecOutput values.
// You can construct a concrete instance of `PublicationSpecInput` via:
//
//	PublicationSpecArgs{...}
type PublicationSpecInput interface {
	pulumi.Input

	ToPublicationSpecOutput() PublicationSpecOutput
	ToPublicationSpecOutputWithContext(context.Context) PublicationSpecOutput
}

// PublicationSpec defines the desired state of Publication
type PublicationSpecArgs struct {
	Cluster PublicationSpecClusterPtrInput `pulumi:"cluster"`
	// The name of the database where the publication will be installed in
	// the "publisher" cluster
	Dbname pulumi.StringPtrInput `pulumi:"dbname"`
	// The name of the publication inside PostgreSQL
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Publication parameters part of the `WITH` clause as expected by
	// PostgreSQL `CREATE PUBLICATION` command
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// The policy for end-of-life maintenance of this publication
	PublicationReclaimPolicy pulumi.StringPtrInput         `pulumi:"publicationReclaimPolicy"`
	Target                   PublicationSpecTargetPtrInput `pulumi:"target"`
}

func (PublicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpec)(nil)).Elem()
}

func (i PublicationSpecArgs) ToPublicationSpecOutput() PublicationSpecOutput {
	return i.ToPublicationSpecOutputWithContext(context.Background())
}

func (i PublicationSpecArgs) ToPublicationSpecOutputWithContext(ctx context.Context) PublicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecOutput)
}

func (i PublicationSpecArgs) ToPublicationSpecPtrOutput() PublicationSpecPtrOutput {
	return i.ToPublicationSpecPtrOutputWithContext(context.Background())
}

func (i PublicationSpecArgs) ToPublicationSpecPtrOutputWithContext(ctx context.Context) PublicationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecOutput).ToPublicationSpecPtrOutputWithContext(ctx)
}

// PublicationSpecPtrInput is an input type that accepts PublicationSpecArgs, PublicationSpecPtr and PublicationSpecPtrOutput values.
// You can construct a concrete instance of `PublicationSpecPtrInput` via:
//
//	        PublicationSpecArgs{...}
//
//	or:
//
//	        nil
type PublicationSpecPtrInput interface {
	pulumi.Input

	ToPublicationSpecPtrOutput() PublicationSpecPtrOutput
	ToPublicationSpecPtrOutputWithContext(context.Context) PublicationSpecPtrOutput
}

type publicationSpecPtrType PublicationSpecArgs

func PublicationSpecPtr(v *PublicationSpecArgs) PublicationSpecPtrInput {
	return (*publicationSpecPtrType)(v)
}

func (*publicationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpec)(nil)).Elem()
}

func (i *publicationSpecPtrType) ToPublicationSpecPtrOutput() PublicationSpecPtrOutput {
	return i.ToPublicationSpecPtrOutputWithContext(context.Background())
}

func (i *publicationSpecPtrType) ToPublicationSpecPtrOutputWithContext(ctx context.Context) PublicationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecPtrOutput)
}

// PublicationSpec defines the desired state of Publication
type PublicationSpecOutput struct{ *pulumi.OutputState }

func (PublicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpec)(nil)).Elem()
}

func (o PublicationSpecOutput) ToPublicationSpecOutput() PublicationSpecOutput {
	return o
}

func (o PublicationSpecOutput) ToPublicationSpecOutputWithContext(ctx context.Context) PublicationSpecOutput {
	return o
}

func (o PublicationSpecOutput) ToPublicationSpecPtrOutput() PublicationSpecPtrOutput {
	return o.ToPublicationSpecPtrOutputWithContext(context.Background())
}

func (o PublicationSpecOutput) ToPublicationSpecPtrOutputWithContext(ctx context.Context) PublicationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicationSpec) *PublicationSpec {
		return &v
	}).(PublicationSpecPtrOutput)
}

func (o PublicationSpecOutput) Cluster() PublicationSpecClusterPtrOutput {
	return o.ApplyT(func(v PublicationSpec) *PublicationSpecCluster { return v.Cluster }).(PublicationSpecClusterPtrOutput)
}

// The name of the database where the publication will be installed in
// the "publisher" cluster
func (o PublicationSpecOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationSpec) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

// The name of the publication inside PostgreSQL
func (o PublicationSpecOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationSpec) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Publication parameters part of the `WITH` clause as expected by
// PostgreSQL `CREATE PUBLICATION` command
func (o PublicationSpecOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicationSpec) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// The policy for end-of-life maintenance of this publication
func (o PublicationSpecOutput) PublicationReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationSpec) *string { return v.PublicationReclaimPolicy }).(pulumi.StringPtrOutput)
}

func (o PublicationSpecOutput) Target() PublicationSpecTargetPtrOutput {
	return o.ApplyT(func(v PublicationSpec) *PublicationSpecTarget { return v.Target }).(PublicationSpecTargetPtrOutput)
}

type PublicationSpecPtrOutput struct{ *pulumi.OutputState }

func (PublicationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpec)(nil)).Elem()
}

func (o PublicationSpecPtrOutput) ToPublicationSpecPtrOutput() PublicationSpecPtrOutput {
	return o
}

func (o PublicationSpecPtrOutput) ToPublicationSpecPtrOutputWithContext(ctx context.Context) PublicationSpecPtrOutput {
	return o
}

func (o PublicationSpecPtrOutput) Elem() PublicationSpecOutput {
	return o.ApplyT(func(v *PublicationSpec) PublicationSpec {
		if v != nil {
			return *v
		}
		var ret PublicationSpec
		return ret
	}).(PublicationSpecOutput)
}

func (o PublicationSpecPtrOutput) Cluster() PublicationSpecClusterPtrOutput {
	return o.ApplyT(func(v *PublicationSpec) *PublicationSpecCluster {
		if v == nil {
			return nil
		}
		return v.Cluster
	}).(PublicationSpecClusterPtrOutput)
}

// The name of the database where the publication will be installed in
// the "publisher" cluster
func (o PublicationSpecPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicationSpec) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

// The name of the publication inside PostgreSQL
func (o PublicationSpecPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicationSpec) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Publication parameters part of the `WITH` clause as expected by
// PostgreSQL `CREATE PUBLICATION` command
func (o PublicationSpecPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicationSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// The policy for end-of-life maintenance of this publication
func (o PublicationSpecPtrOutput) PublicationReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicationSpec) *string {
		if v == nil {
			return nil
		}
		return v.PublicationReclaimPolicy
	}).(pulumi.StringPtrOutput)
}

func (o PublicationSpecPtrOutput) Target() PublicationSpecTargetPtrOutput {
	return o.ApplyT(func(v *PublicationSpec) *PublicationSpecTarget {
		if v == nil {
			return nil
		}
		return v.Target
	}).(PublicationSpecTargetPtrOutput)
}

// The name of the PostgreSQL cluster that identifies the "publisher"
type PublicationSpecCluster struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// PublicationSpecClusterInput is an input type that accepts PublicationSpecClusterArgs and PublicationSpecClusterOutput values.
// You can construct a concrete instance of `PublicationSpecClusterInput` via:
//
//	PublicationSpecClusterArgs{...}
type PublicationSpecClusterInput interface {
	pulumi.Input

	ToPublicationSpecClusterOutput() PublicationSpecClusterOutput
	ToPublicationSpecClusterOutputWithContext(context.Context) PublicationSpecClusterOutput
}

// The name of the PostgreSQL cluster that identifies the "publisher"
type PublicationSpecClusterArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PublicationSpecClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecCluster)(nil)).Elem()
}

func (i PublicationSpecClusterArgs) ToPublicationSpecClusterOutput() PublicationSpecClusterOutput {
	return i.ToPublicationSpecClusterOutputWithContext(context.Background())
}

func (i PublicationSpecClusterArgs) ToPublicationSpecClusterOutputWithContext(ctx context.Context) PublicationSpecClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecClusterOutput)
}

func (i PublicationSpecClusterArgs) ToPublicationSpecClusterPtrOutput() PublicationSpecClusterPtrOutput {
	return i.ToPublicationSpecClusterPtrOutputWithContext(context.Background())
}

func (i PublicationSpecClusterArgs) ToPublicationSpecClusterPtrOutputWithContext(ctx context.Context) PublicationSpecClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecClusterOutput).ToPublicationSpecClusterPtrOutputWithContext(ctx)
}

// PublicationSpecClusterPtrInput is an input type that accepts PublicationSpecClusterArgs, PublicationSpecClusterPtr and PublicationSpecClusterPtrOutput values.
// You can construct a concrete instance of `PublicationSpecClusterPtrInput` via:
//
//	        PublicationSpecClusterArgs{...}
//
//	or:
//
//	        nil
type PublicationSpecClusterPtrInput interface {
	pulumi.Input

	ToPublicationSpecClusterPtrOutput() PublicationSpecClusterPtrOutput
	ToPublicationSpecClusterPtrOutputWithContext(context.Context) PublicationSpecClusterPtrOutput
}

type publicationSpecClusterPtrType PublicationSpecClusterArgs

func PublicationSpecClusterPtr(v *PublicationSpecClusterArgs) PublicationSpecClusterPtrInput {
	return (*publicationSpecClusterPtrType)(v)
}

func (*publicationSpecClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpecCluster)(nil)).Elem()
}

func (i *publicationSpecClusterPtrType) ToPublicationSpecClusterPtrOutput() PublicationSpecClusterPtrOutput {
	return i.ToPublicationSpecClusterPtrOutputWithContext(context.Background())
}

func (i *publicationSpecClusterPtrType) ToPublicationSpecClusterPtrOutputWithContext(ctx context.Context) PublicationSpecClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecClusterPtrOutput)
}

// The name of the PostgreSQL cluster that identifies the "publisher"
type PublicationSpecClusterOutput struct{ *pulumi.OutputState }

func (PublicationSpecClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecCluster)(nil)).Elem()
}

func (o PublicationSpecClusterOutput) ToPublicationSpecClusterOutput() PublicationSpecClusterOutput {
	return o
}

func (o PublicationSpecClusterOutput) ToPublicationSpecClusterOutputWithContext(ctx context.Context) PublicationSpecClusterOutput {
	return o
}

func (o PublicationSpecClusterOutput) ToPublicationSpecClusterPtrOutput() PublicationSpecClusterPtrOutput {
	return o.ToPublicationSpecClusterPtrOutputWithContext(context.Background())
}

func (o PublicationSpecClusterOutput) ToPublicationSpecClusterPtrOutputWithContext(ctx context.Context) PublicationSpecClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicationSpecCluster) *PublicationSpecCluster {
		return &v
	}).(PublicationSpecClusterPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PublicationSpecClusterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationSpecCluster) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PublicationSpecClusterPtrOutput struct{ *pulumi.OutputState }

func (PublicationSpecClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpecCluster)(nil)).Elem()
}

func (o PublicationSpecClusterPtrOutput) ToPublicationSpecClusterPtrOutput() PublicationSpecClusterPtrOutput {
	return o
}

func (o PublicationSpecClusterPtrOutput) ToPublicationSpecClusterPtrOutputWithContext(ctx context.Context) PublicationSpecClusterPtrOutput {
	return o
}

func (o PublicationSpecClusterPtrOutput) Elem() PublicationSpecClusterOutput {
	return o.ApplyT(func(v *PublicationSpecCluster) PublicationSpecCluster {
		if v != nil {
			return *v
		}
		var ret PublicationSpecCluster
		return ret
	}).(PublicationSpecClusterOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PublicationSpecClusterPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicationSpecCluster) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The name of the PostgreSQL cluster that identifies the "publisher"
type PublicationSpecClusterPatch struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// PublicationSpecClusterPatchInput is an input type that accepts PublicationSpecClusterPatchArgs and PublicationSpecClusterPatchOutput values.
// You can construct a concrete instance of `PublicationSpecClusterPatchInput` via:
//
//	PublicationSpecClusterPatchArgs{...}
type PublicationSpecClusterPatchInput interface {
	pulumi.Input

	ToPublicationSpecClusterPatchOutput() PublicationSpecClusterPatchOutput
	ToPublicationSpecClusterPatchOutputWithContext(context.Context) PublicationSpecClusterPatchOutput
}

// The name of the PostgreSQL cluster that identifies the "publisher"
type PublicationSpecClusterPatchArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PublicationSpecClusterPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecClusterPatch)(nil)).Elem()
}

func (i PublicationSpecClusterPatchArgs) ToPublicationSpecClusterPatchOutput() PublicationSpecClusterPatchOutput {
	return i.ToPublicationSpecClusterPatchOutputWithContext(context.Background())
}

func (i PublicationSpecClusterPatchArgs) ToPublicationSpecClusterPatchOutputWithContext(ctx context.Context) PublicationSpecClusterPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecClusterPatchOutput)
}

func (i PublicationSpecClusterPatchArgs) ToPublicationSpecClusterPatchPtrOutput() PublicationSpecClusterPatchPtrOutput {
	return i.ToPublicationSpecClusterPatchPtrOutputWithContext(context.Background())
}

func (i PublicationSpecClusterPatchArgs) ToPublicationSpecClusterPatchPtrOutputWithContext(ctx context.Context) PublicationSpecClusterPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecClusterPatchOutput).ToPublicationSpecClusterPatchPtrOutputWithContext(ctx)
}

// PublicationSpecClusterPatchPtrInput is an input type that accepts PublicationSpecClusterPatchArgs, PublicationSpecClusterPatchPtr and PublicationSpecClusterPatchPtrOutput values.
// You can construct a concrete instance of `PublicationSpecClusterPatchPtrInput` via:
//
//	        PublicationSpecClusterPatchArgs{...}
//
//	or:
//
//	        nil
type PublicationSpecClusterPatchPtrInput interface {
	pulumi.Input

	ToPublicationSpecClusterPatchPtrOutput() PublicationSpecClusterPatchPtrOutput
	ToPublicationSpecClusterPatchPtrOutputWithContext(context.Context) PublicationSpecClusterPatchPtrOutput
}

type publicationSpecClusterPatchPtrType PublicationSpecClusterPatchArgs

func PublicationSpecClusterPatchPtr(v *PublicationSpecClusterPatchArgs) PublicationSpecClusterPatchPtrInput {
	return (*publicationSpecClusterPatchPtrType)(v)
}

func (*publicationSpecClusterPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpecClusterPatch)(nil)).Elem()
}

func (i *publicationSpecClusterPatchPtrType) ToPublicationSpecClusterPatchPtrOutput() PublicationSpecClusterPatchPtrOutput {
	return i.ToPublicationSpecClusterPatchPtrOutputWithContext(context.Background())
}

func (i *publicationSpecClusterPatchPtrType) ToPublicationSpecClusterPatchPtrOutputWithContext(ctx context.Context) PublicationSpecClusterPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecClusterPatchPtrOutput)
}

// The name of the PostgreSQL cluster that identifies the "publisher"
type PublicationSpecClusterPatchOutput struct{ *pulumi.OutputState }

func (PublicationSpecClusterPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecClusterPatch)(nil)).Elem()
}

func (o PublicationSpecClusterPatchOutput) ToPublicationSpecClusterPatchOutput() PublicationSpecClusterPatchOutput {
	return o
}

func (o PublicationSpecClusterPatchOutput) ToPublicationSpecClusterPatchOutputWithContext(ctx context.Context) PublicationSpecClusterPatchOutput {
	return o
}

func (o PublicationSpecClusterPatchOutput) ToPublicationSpecClusterPatchPtrOutput() PublicationSpecClusterPatchPtrOutput {
	return o.ToPublicationSpecClusterPatchPtrOutputWithContext(context.Background())
}

func (o PublicationSpecClusterPatchOutput) ToPublicationSpecClusterPatchPtrOutputWithContext(ctx context.Context) PublicationSpecClusterPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicationSpecClusterPatch) *PublicationSpecClusterPatch {
		return &v
	}).(PublicationSpecClusterPatchPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PublicationSpecClusterPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationSpecClusterPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PublicationSpecClusterPatchPtrOutput struct{ *pulumi.OutputState }

func (PublicationSpecClusterPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpecClusterPatch)(nil)).Elem()
}

func (o PublicationSpecClusterPatchPtrOutput) ToPublicationSpecClusterPatchPtrOutput() PublicationSpecClusterPatchPtrOutput {
	return o
}

func (o PublicationSpecClusterPatchPtrOutput) ToPublicationSpecClusterPatchPtrOutputWithContext(ctx context.Context) PublicationSpecClusterPatchPtrOutput {
	return o
}

func (o PublicationSpecClusterPatchPtrOutput) Elem() PublicationSpecClusterPatchOutput {
	return o.ApplyT(func(v *PublicationSpecClusterPatch) PublicationSpecClusterPatch {
		if v != nil {
			return *v
		}
		var ret PublicationSpecClusterPatch
		return ret
	}).(PublicationSpecClusterPatchOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PublicationSpecClusterPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicationSpecClusterPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// PublicationSpec defines the desired state of Publication
type PublicationSpecPatch struct {
	Cluster *PublicationSpecClusterPatch `pulumi:"cluster"`
	// The name of the database where the publication will be installed in
	// the "publisher" cluster
	Dbname *string `pulumi:"dbname"`
	// The name of the publication inside PostgreSQL
	Name *string `pulumi:"name"`
	// Publication parameters part of the `WITH` clause as expected by
	// PostgreSQL `CREATE PUBLICATION` command
	Parameters map[string]string `pulumi:"parameters"`
	// The policy for end-of-life maintenance of this publication
	PublicationReclaimPolicy *string                     `pulumi:"publicationReclaimPolicy"`
	Target                   *PublicationSpecTargetPatch `pulumi:"target"`
}

// PublicationSpecPatchInput is an input type that accepts PublicationSpecPatchArgs and PublicationSpecPatchOutput values.
// You can construct a concrete instance of `PublicationSpecPatchInput` via:
//
//	PublicationSpecPatchArgs{...}
type PublicationSpecPatchInput interface {
	pulumi.Input

	ToPublicationSpecPatchOutput() PublicationSpecPatchOutput
	ToPublicationSpecPatchOutputWithContext(context.Context) PublicationSpecPatchOutput
}

// PublicationSpec defines the desired state of Publication
type PublicationSpecPatchArgs struct {
	Cluster PublicationSpecClusterPatchPtrInput `pulumi:"cluster"`
	// The name of the database where the publication will be installed in
	// the "publisher" cluster
	Dbname pulumi.StringPtrInput `pulumi:"dbname"`
	// The name of the publication inside PostgreSQL
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Publication parameters part of the `WITH` clause as expected by
	// PostgreSQL `CREATE PUBLICATION` command
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// The policy for end-of-life maintenance of this publication
	PublicationReclaimPolicy pulumi.StringPtrInput              `pulumi:"publicationReclaimPolicy"`
	Target                   PublicationSpecTargetPatchPtrInput `pulumi:"target"`
}

func (PublicationSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecPatch)(nil)).Elem()
}

func (i PublicationSpecPatchArgs) ToPublicationSpecPatchOutput() PublicationSpecPatchOutput {
	return i.ToPublicationSpecPatchOutputWithContext(context.Background())
}

func (i PublicationSpecPatchArgs) ToPublicationSpecPatchOutputWithContext(ctx context.Context) PublicationSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecPatchOutput)
}

func (i PublicationSpecPatchArgs) ToPublicationSpecPatchPtrOutput() PublicationSpecPatchPtrOutput {
	return i.ToPublicationSpecPatchPtrOutputWithContext(context.Background())
}

func (i PublicationSpecPatchArgs) ToPublicationSpecPatchPtrOutputWithContext(ctx context.Context) PublicationSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecPatchOutput).ToPublicationSpecPatchPtrOutputWithContext(ctx)
}

// PublicationSpecPatchPtrInput is an input type that accepts PublicationSpecPatchArgs, PublicationSpecPatchPtr and PublicationSpecPatchPtrOutput values.
// You can construct a concrete instance of `PublicationSpecPatchPtrInput` via:
//
//	        PublicationSpecPatchArgs{...}
//
//	or:
//
//	        nil
type PublicationSpecPatchPtrInput interface {
	pulumi.Input

	ToPublicationSpecPatchPtrOutput() PublicationSpecPatchPtrOutput
	ToPublicationSpecPatchPtrOutputWithContext(context.Context) PublicationSpecPatchPtrOutput
}

type publicationSpecPatchPtrType PublicationSpecPatchArgs

func PublicationSpecPatchPtr(v *PublicationSpecPatchArgs) PublicationSpecPatchPtrInput {
	return (*publicationSpecPatchPtrType)(v)
}

func (*publicationSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpecPatch)(nil)).Elem()
}

func (i *publicationSpecPatchPtrType) ToPublicationSpecPatchPtrOutput() PublicationSpecPatchPtrOutput {
	return i.ToPublicationSpecPatchPtrOutputWithContext(context.Background())
}

func (i *publicationSpecPatchPtrType) ToPublicationSpecPatchPtrOutputWithContext(ctx context.Context) PublicationSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecPatchPtrOutput)
}

// PublicationSpec defines the desired state of Publication
type PublicationSpecPatchOutput struct{ *pulumi.OutputState }

func (PublicationSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecPatch)(nil)).Elem()
}

func (o PublicationSpecPatchOutput) ToPublicationSpecPatchOutput() PublicationSpecPatchOutput {
	return o
}

func (o PublicationSpecPatchOutput) ToPublicationSpecPatchOutputWithContext(ctx context.Context) PublicationSpecPatchOutput {
	return o
}

func (o PublicationSpecPatchOutput) ToPublicationSpecPatchPtrOutput() PublicationSpecPatchPtrOutput {
	return o.ToPublicationSpecPatchPtrOutputWithContext(context.Background())
}

func (o PublicationSpecPatchOutput) ToPublicationSpecPatchPtrOutputWithContext(ctx context.Context) PublicationSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicationSpecPatch) *PublicationSpecPatch {
		return &v
	}).(PublicationSpecPatchPtrOutput)
}

func (o PublicationSpecPatchOutput) Cluster() PublicationSpecClusterPatchPtrOutput {
	return o.ApplyT(func(v PublicationSpecPatch) *PublicationSpecClusterPatch { return v.Cluster }).(PublicationSpecClusterPatchPtrOutput)
}

// The name of the database where the publication will be installed in
// the "publisher" cluster
func (o PublicationSpecPatchOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationSpecPatch) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

// The name of the publication inside PostgreSQL
func (o PublicationSpecPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationSpecPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Publication parameters part of the `WITH` clause as expected by
// PostgreSQL `CREATE PUBLICATION` command
func (o PublicationSpecPatchOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicationSpecPatch) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// The policy for end-of-life maintenance of this publication
func (o PublicationSpecPatchOutput) PublicationReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationSpecPatch) *string { return v.PublicationReclaimPolicy }).(pulumi.StringPtrOutput)
}

func (o PublicationSpecPatchOutput) Target() PublicationSpecTargetPatchPtrOutput {
	return o.ApplyT(func(v PublicationSpecPatch) *PublicationSpecTargetPatch { return v.Target }).(PublicationSpecTargetPatchPtrOutput)
}

type PublicationSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (PublicationSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpecPatch)(nil)).Elem()
}

func (o PublicationSpecPatchPtrOutput) ToPublicationSpecPatchPtrOutput() PublicationSpecPatchPtrOutput {
	return o
}

func (o PublicationSpecPatchPtrOutput) ToPublicationSpecPatchPtrOutputWithContext(ctx context.Context) PublicationSpecPatchPtrOutput {
	return o
}

func (o PublicationSpecPatchPtrOutput) Elem() PublicationSpecPatchOutput {
	return o.ApplyT(func(v *PublicationSpecPatch) PublicationSpecPatch {
		if v != nil {
			return *v
		}
		var ret PublicationSpecPatch
		return ret
	}).(PublicationSpecPatchOutput)
}

func (o PublicationSpecPatchPtrOutput) Cluster() PublicationSpecClusterPatchPtrOutput {
	return o.ApplyT(func(v *PublicationSpecPatch) *PublicationSpecClusterPatch {
		if v == nil {
			return nil
		}
		return v.Cluster
	}).(PublicationSpecClusterPatchPtrOutput)
}

// The name of the database where the publication will be installed in
// the "publisher" cluster
func (o PublicationSpecPatchPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicationSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

// The name of the publication inside PostgreSQL
func (o PublicationSpecPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicationSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Publication parameters part of the `WITH` clause as expected by
// PostgreSQL `CREATE PUBLICATION` command
func (o PublicationSpecPatchPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicationSpecPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// The policy for end-of-life maintenance of this publication
func (o PublicationSpecPatchPtrOutput) PublicationReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicationSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.PublicationReclaimPolicy
	}).(pulumi.StringPtrOutput)
}

func (o PublicationSpecPatchPtrOutput) Target() PublicationSpecTargetPatchPtrOutput {
	return o.ApplyT(func(v *PublicationSpecPatch) *PublicationSpecTargetPatch {
		if v == nil {
			return nil
		}
		return v.Target
	}).(PublicationSpecTargetPatchPtrOutput)
}

// Target of the publication as expected by PostgreSQL `CREATE PUBLICATION` command
type PublicationSpecTarget struct {
	// Marks the publication as one that replicates changes for all tables
	// in the database, including tables created in the future.
	// Corresponding to `FOR ALL TABLES` in PostgreSQL.
	AllTables *bool `pulumi:"allTables"`
	// Just the following schema objects
	Objects []PublicationSpecTargetObjects `pulumi:"objects"`
}

// PublicationSpecTargetInput is an input type that accepts PublicationSpecTargetArgs and PublicationSpecTargetOutput values.
// You can construct a concrete instance of `PublicationSpecTargetInput` via:
//
//	PublicationSpecTargetArgs{...}
type PublicationSpecTargetInput interface {
	pulumi.Input

	ToPublicationSpecTargetOutput() PublicationSpecTargetOutput
	ToPublicationSpecTargetOutputWithContext(context.Context) PublicationSpecTargetOutput
}

// Target of the publication as expected by PostgreSQL `CREATE PUBLICATION` command
type PublicationSpecTargetArgs struct {
	// Marks the publication as one that replicates changes for all tables
	// in the database, including tables created in the future.
	// Corresponding to `FOR ALL TABLES` in PostgreSQL.
	AllTables pulumi.BoolPtrInput `pulumi:"allTables"`
	// Just the following schema objects
	Objects PublicationSpecTargetObjectsArrayInput `pulumi:"objects"`
}

func (PublicationSpecTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecTarget)(nil)).Elem()
}

func (i PublicationSpecTargetArgs) ToPublicationSpecTargetOutput() PublicationSpecTargetOutput {
	return i.ToPublicationSpecTargetOutputWithContext(context.Background())
}

func (i PublicationSpecTargetArgs) ToPublicationSpecTargetOutputWithContext(ctx context.Context) PublicationSpecTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetOutput)
}

func (i PublicationSpecTargetArgs) ToPublicationSpecTargetPtrOutput() PublicationSpecTargetPtrOutput {
	return i.ToPublicationSpecTargetPtrOutputWithContext(context.Background())
}

func (i PublicationSpecTargetArgs) ToPublicationSpecTargetPtrOutputWithContext(ctx context.Context) PublicationSpecTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetOutput).ToPublicationSpecTargetPtrOutputWithContext(ctx)
}

// PublicationSpecTargetPtrInput is an input type that accepts PublicationSpecTargetArgs, PublicationSpecTargetPtr and PublicationSpecTargetPtrOutput values.
// You can construct a concrete instance of `PublicationSpecTargetPtrInput` via:
//
//	        PublicationSpecTargetArgs{...}
//
//	or:
//
//	        nil
type PublicationSpecTargetPtrInput interface {
	pulumi.Input

	ToPublicationSpecTargetPtrOutput() PublicationSpecTargetPtrOutput
	ToPublicationSpecTargetPtrOutputWithContext(context.Context) PublicationSpecTargetPtrOutput
}

type publicationSpecTargetPtrType PublicationSpecTargetArgs

func PublicationSpecTargetPtr(v *PublicationSpecTargetArgs) PublicationSpecTargetPtrInput {
	return (*publicationSpecTargetPtrType)(v)
}

func (*publicationSpecTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpecTarget)(nil)).Elem()
}

func (i *publicationSpecTargetPtrType) ToPublicationSpecTargetPtrOutput() PublicationSpecTargetPtrOutput {
	return i.ToPublicationSpecTargetPtrOutputWithContext(context.Background())
}

func (i *publicationSpecTargetPtrType) ToPublicationSpecTargetPtrOutputWithContext(ctx context.Context) PublicationSpecTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetPtrOutput)
}

// Target of the publication as expected by PostgreSQL `CREATE PUBLICATION` command
type PublicationSpecTargetOutput struct{ *pulumi.OutputState }

func (PublicationSpecTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecTarget)(nil)).Elem()
}

func (o PublicationSpecTargetOutput) ToPublicationSpecTargetOutput() PublicationSpecTargetOutput {
	return o
}

func (o PublicationSpecTargetOutput) ToPublicationSpecTargetOutputWithContext(ctx context.Context) PublicationSpecTargetOutput {
	return o
}

func (o PublicationSpecTargetOutput) ToPublicationSpecTargetPtrOutput() PublicationSpecTargetPtrOutput {
	return o.ToPublicationSpecTargetPtrOutputWithContext(context.Background())
}

func (o PublicationSpecTargetOutput) ToPublicationSpecTargetPtrOutputWithContext(ctx context.Context) PublicationSpecTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicationSpecTarget) *PublicationSpecTarget {
		return &v
	}).(PublicationSpecTargetPtrOutput)
}

// Marks the publication as one that replicates changes for all tables
// in the database, including tables created in the future.
// Corresponding to `FOR ALL TABLES` in PostgreSQL.
func (o PublicationSpecTargetOutput) AllTables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PublicationSpecTarget) *bool { return v.AllTables }).(pulumi.BoolPtrOutput)
}

// Just the following schema objects
func (o PublicationSpecTargetOutput) Objects() PublicationSpecTargetObjectsArrayOutput {
	return o.ApplyT(func(v PublicationSpecTarget) []PublicationSpecTargetObjects { return v.Objects }).(PublicationSpecTargetObjectsArrayOutput)
}

type PublicationSpecTargetPtrOutput struct{ *pulumi.OutputState }

func (PublicationSpecTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpecTarget)(nil)).Elem()
}

func (o PublicationSpecTargetPtrOutput) ToPublicationSpecTargetPtrOutput() PublicationSpecTargetPtrOutput {
	return o
}

func (o PublicationSpecTargetPtrOutput) ToPublicationSpecTargetPtrOutputWithContext(ctx context.Context) PublicationSpecTargetPtrOutput {
	return o
}

func (o PublicationSpecTargetPtrOutput) Elem() PublicationSpecTargetOutput {
	return o.ApplyT(func(v *PublicationSpecTarget) PublicationSpecTarget {
		if v != nil {
			return *v
		}
		var ret PublicationSpecTarget
		return ret
	}).(PublicationSpecTargetOutput)
}

// Marks the publication as one that replicates changes for all tables
// in the database, including tables created in the future.
// Corresponding to `FOR ALL TABLES` in PostgreSQL.
func (o PublicationSpecTargetPtrOutput) AllTables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicationSpecTarget) *bool {
		if v == nil {
			return nil
		}
		return v.AllTables
	}).(pulumi.BoolPtrOutput)
}

// Just the following schema objects
func (o PublicationSpecTargetPtrOutput) Objects() PublicationSpecTargetObjectsArrayOutput {
	return o.ApplyT(func(v *PublicationSpecTarget) []PublicationSpecTargetObjects {
		if v == nil {
			return nil
		}
		return v.Objects
	}).(PublicationSpecTargetObjectsArrayOutput)
}

// PublicationTargetObject is an object to publish
type PublicationSpecTargetObjects struct {
	Table *PublicationSpecTargetObjectsTable `pulumi:"table"`
	// Marks the publication as one that replicates changes for all tables
	// in the specified list of schemas, including tables created in the
	// future. Corresponding to `FOR TABLES IN SCHEMA` in PostgreSQL.
	TablesInSchema *string `pulumi:"tablesInSchema"`
}

// PublicationSpecTargetObjectsInput is an input type that accepts PublicationSpecTargetObjectsArgs and PublicationSpecTargetObjectsOutput values.
// You can construct a concrete instance of `PublicationSpecTargetObjectsInput` via:
//
//	PublicationSpecTargetObjectsArgs{...}
type PublicationSpecTargetObjectsInput interface {
	pulumi.Input

	ToPublicationSpecTargetObjectsOutput() PublicationSpecTargetObjectsOutput
	ToPublicationSpecTargetObjectsOutputWithContext(context.Context) PublicationSpecTargetObjectsOutput
}

// PublicationTargetObject is an object to publish
type PublicationSpecTargetObjectsArgs struct {
	Table PublicationSpecTargetObjectsTablePtrInput `pulumi:"table"`
	// Marks the publication as one that replicates changes for all tables
	// in the specified list of schemas, including tables created in the
	// future. Corresponding to `FOR TABLES IN SCHEMA` in PostgreSQL.
	TablesInSchema pulumi.StringPtrInput `pulumi:"tablesInSchema"`
}

func (PublicationSpecTargetObjectsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecTargetObjects)(nil)).Elem()
}

func (i PublicationSpecTargetObjectsArgs) ToPublicationSpecTargetObjectsOutput() PublicationSpecTargetObjectsOutput {
	return i.ToPublicationSpecTargetObjectsOutputWithContext(context.Background())
}

func (i PublicationSpecTargetObjectsArgs) ToPublicationSpecTargetObjectsOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetObjectsOutput)
}

// PublicationSpecTargetObjectsArrayInput is an input type that accepts PublicationSpecTargetObjectsArray and PublicationSpecTargetObjectsArrayOutput values.
// You can construct a concrete instance of `PublicationSpecTargetObjectsArrayInput` via:
//
//	PublicationSpecTargetObjectsArray{ PublicationSpecTargetObjectsArgs{...} }
type PublicationSpecTargetObjectsArrayInput interface {
	pulumi.Input

	ToPublicationSpecTargetObjectsArrayOutput() PublicationSpecTargetObjectsArrayOutput
	ToPublicationSpecTargetObjectsArrayOutputWithContext(context.Context) PublicationSpecTargetObjectsArrayOutput
}

type PublicationSpecTargetObjectsArray []PublicationSpecTargetObjectsInput

func (PublicationSpecTargetObjectsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicationSpecTargetObjects)(nil)).Elem()
}

func (i PublicationSpecTargetObjectsArray) ToPublicationSpecTargetObjectsArrayOutput() PublicationSpecTargetObjectsArrayOutput {
	return i.ToPublicationSpecTargetObjectsArrayOutputWithContext(context.Background())
}

func (i PublicationSpecTargetObjectsArray) ToPublicationSpecTargetObjectsArrayOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetObjectsArrayOutput)
}

// PublicationTargetObject is an object to publish
type PublicationSpecTargetObjectsOutput struct{ *pulumi.OutputState }

func (PublicationSpecTargetObjectsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecTargetObjects)(nil)).Elem()
}

func (o PublicationSpecTargetObjectsOutput) ToPublicationSpecTargetObjectsOutput() PublicationSpecTargetObjectsOutput {
	return o
}

func (o PublicationSpecTargetObjectsOutput) ToPublicationSpecTargetObjectsOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsOutput {
	return o
}

func (o PublicationSpecTargetObjectsOutput) Table() PublicationSpecTargetObjectsTablePtrOutput {
	return o.ApplyT(func(v PublicationSpecTargetObjects) *PublicationSpecTargetObjectsTable { return v.Table }).(PublicationSpecTargetObjectsTablePtrOutput)
}

// Marks the publication as one that replicates changes for all tables
// in the specified list of schemas, including tables created in the
// future. Corresponding to `FOR TABLES IN SCHEMA` in PostgreSQL.
func (o PublicationSpecTargetObjectsOutput) TablesInSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationSpecTargetObjects) *string { return v.TablesInSchema }).(pulumi.StringPtrOutput)
}

type PublicationSpecTargetObjectsArrayOutput struct{ *pulumi.OutputState }

func (PublicationSpecTargetObjectsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicationSpecTargetObjects)(nil)).Elem()
}

func (o PublicationSpecTargetObjectsArrayOutput) ToPublicationSpecTargetObjectsArrayOutput() PublicationSpecTargetObjectsArrayOutput {
	return o
}

func (o PublicationSpecTargetObjectsArrayOutput) ToPublicationSpecTargetObjectsArrayOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsArrayOutput {
	return o
}

func (o PublicationSpecTargetObjectsArrayOutput) Index(i pulumi.IntInput) PublicationSpecTargetObjectsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PublicationSpecTargetObjects {
		return vs[0].([]PublicationSpecTargetObjects)[vs[1].(int)]
	}).(PublicationSpecTargetObjectsOutput)
}

// PublicationTargetObject is an object to publish
type PublicationSpecTargetObjectsPatch struct {
	Table *PublicationSpecTargetObjectsTablePatch `pulumi:"table"`
	// Marks the publication as one that replicates changes for all tables
	// in the specified list of schemas, including tables created in the
	// future. Corresponding to `FOR TABLES IN SCHEMA` in PostgreSQL.
	TablesInSchema *string `pulumi:"tablesInSchema"`
}

// PublicationSpecTargetObjectsPatchInput is an input type that accepts PublicationSpecTargetObjectsPatchArgs and PublicationSpecTargetObjectsPatchOutput values.
// You can construct a concrete instance of `PublicationSpecTargetObjectsPatchInput` via:
//
//	PublicationSpecTargetObjectsPatchArgs{...}
type PublicationSpecTargetObjectsPatchInput interface {
	pulumi.Input

	ToPublicationSpecTargetObjectsPatchOutput() PublicationSpecTargetObjectsPatchOutput
	ToPublicationSpecTargetObjectsPatchOutputWithContext(context.Context) PublicationSpecTargetObjectsPatchOutput
}

// PublicationTargetObject is an object to publish
type PublicationSpecTargetObjectsPatchArgs struct {
	Table PublicationSpecTargetObjectsTablePatchPtrInput `pulumi:"table"`
	// Marks the publication as one that replicates changes for all tables
	// in the specified list of schemas, including tables created in the
	// future. Corresponding to `FOR TABLES IN SCHEMA` in PostgreSQL.
	TablesInSchema pulumi.StringPtrInput `pulumi:"tablesInSchema"`
}

func (PublicationSpecTargetObjectsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecTargetObjectsPatch)(nil)).Elem()
}

func (i PublicationSpecTargetObjectsPatchArgs) ToPublicationSpecTargetObjectsPatchOutput() PublicationSpecTargetObjectsPatchOutput {
	return i.ToPublicationSpecTargetObjectsPatchOutputWithContext(context.Background())
}

func (i PublicationSpecTargetObjectsPatchArgs) ToPublicationSpecTargetObjectsPatchOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetObjectsPatchOutput)
}

// PublicationSpecTargetObjectsPatchArrayInput is an input type that accepts PublicationSpecTargetObjectsPatchArray and PublicationSpecTargetObjectsPatchArrayOutput values.
// You can construct a concrete instance of `PublicationSpecTargetObjectsPatchArrayInput` via:
//
//	PublicationSpecTargetObjectsPatchArray{ PublicationSpecTargetObjectsPatchArgs{...} }
type PublicationSpecTargetObjectsPatchArrayInput interface {
	pulumi.Input

	ToPublicationSpecTargetObjectsPatchArrayOutput() PublicationSpecTargetObjectsPatchArrayOutput
	ToPublicationSpecTargetObjectsPatchArrayOutputWithContext(context.Context) PublicationSpecTargetObjectsPatchArrayOutput
}

type PublicationSpecTargetObjectsPatchArray []PublicationSpecTargetObjectsPatchInput

func (PublicationSpecTargetObjectsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicationSpecTargetObjectsPatch)(nil)).Elem()
}

func (i PublicationSpecTargetObjectsPatchArray) ToPublicationSpecTargetObjectsPatchArrayOutput() PublicationSpecTargetObjectsPatchArrayOutput {
	return i.ToPublicationSpecTargetObjectsPatchArrayOutputWithContext(context.Background())
}

func (i PublicationSpecTargetObjectsPatchArray) ToPublicationSpecTargetObjectsPatchArrayOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetObjectsPatchArrayOutput)
}

// PublicationTargetObject is an object to publish
type PublicationSpecTargetObjectsPatchOutput struct{ *pulumi.OutputState }

func (PublicationSpecTargetObjectsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecTargetObjectsPatch)(nil)).Elem()
}

func (o PublicationSpecTargetObjectsPatchOutput) ToPublicationSpecTargetObjectsPatchOutput() PublicationSpecTargetObjectsPatchOutput {
	return o
}

func (o PublicationSpecTargetObjectsPatchOutput) ToPublicationSpecTargetObjectsPatchOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsPatchOutput {
	return o
}

func (o PublicationSpecTargetObjectsPatchOutput) Table() PublicationSpecTargetObjectsTablePatchPtrOutput {
	return o.ApplyT(func(v PublicationSpecTargetObjectsPatch) *PublicationSpecTargetObjectsTablePatch { return v.Table }).(PublicationSpecTargetObjectsTablePatchPtrOutput)
}

// Marks the publication as one that replicates changes for all tables
// in the specified list of schemas, including tables created in the
// future. Corresponding to `FOR TABLES IN SCHEMA` in PostgreSQL.
func (o PublicationSpecTargetObjectsPatchOutput) TablesInSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationSpecTargetObjectsPatch) *string { return v.TablesInSchema }).(pulumi.StringPtrOutput)
}

type PublicationSpecTargetObjectsPatchArrayOutput struct{ *pulumi.OutputState }

func (PublicationSpecTargetObjectsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicationSpecTargetObjectsPatch)(nil)).Elem()
}

func (o PublicationSpecTargetObjectsPatchArrayOutput) ToPublicationSpecTargetObjectsPatchArrayOutput() PublicationSpecTargetObjectsPatchArrayOutput {
	return o
}

func (o PublicationSpecTargetObjectsPatchArrayOutput) ToPublicationSpecTargetObjectsPatchArrayOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsPatchArrayOutput {
	return o
}

func (o PublicationSpecTargetObjectsPatchArrayOutput) Index(i pulumi.IntInput) PublicationSpecTargetObjectsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PublicationSpecTargetObjectsPatch {
		return vs[0].([]PublicationSpecTargetObjectsPatch)[vs[1].(int)]
	}).(PublicationSpecTargetObjectsPatchOutput)
}

// Specifies a list of tables to add to the publication. Corresponding
// to `FOR TABLE` in PostgreSQL.
type PublicationSpecTargetObjectsTable struct {
	// The columns to publish
	Columns []string `pulumi:"columns"`
	// The table name
	Name *string `pulumi:"name"`
	// Whether to limit to the table only or include all its descendants
	Only *bool `pulumi:"only"`
	// The schema name
	Schema *string `pulumi:"schema"`
}

// PublicationSpecTargetObjectsTableInput is an input type that accepts PublicationSpecTargetObjectsTableArgs and PublicationSpecTargetObjectsTableOutput values.
// You can construct a concrete instance of `PublicationSpecTargetObjectsTableInput` via:
//
//	PublicationSpecTargetObjectsTableArgs{...}
type PublicationSpecTargetObjectsTableInput interface {
	pulumi.Input

	ToPublicationSpecTargetObjectsTableOutput() PublicationSpecTargetObjectsTableOutput
	ToPublicationSpecTargetObjectsTableOutputWithContext(context.Context) PublicationSpecTargetObjectsTableOutput
}

// Specifies a list of tables to add to the publication. Corresponding
// to `FOR TABLE` in PostgreSQL.
type PublicationSpecTargetObjectsTableArgs struct {
	// The columns to publish
	Columns pulumi.StringArrayInput `pulumi:"columns"`
	// The table name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether to limit to the table only or include all its descendants
	Only pulumi.BoolPtrInput `pulumi:"only"`
	// The schema name
	Schema pulumi.StringPtrInput `pulumi:"schema"`
}

func (PublicationSpecTargetObjectsTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecTargetObjectsTable)(nil)).Elem()
}

func (i PublicationSpecTargetObjectsTableArgs) ToPublicationSpecTargetObjectsTableOutput() PublicationSpecTargetObjectsTableOutput {
	return i.ToPublicationSpecTargetObjectsTableOutputWithContext(context.Background())
}

func (i PublicationSpecTargetObjectsTableArgs) ToPublicationSpecTargetObjectsTableOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetObjectsTableOutput)
}

func (i PublicationSpecTargetObjectsTableArgs) ToPublicationSpecTargetObjectsTablePtrOutput() PublicationSpecTargetObjectsTablePtrOutput {
	return i.ToPublicationSpecTargetObjectsTablePtrOutputWithContext(context.Background())
}

func (i PublicationSpecTargetObjectsTableArgs) ToPublicationSpecTargetObjectsTablePtrOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetObjectsTableOutput).ToPublicationSpecTargetObjectsTablePtrOutputWithContext(ctx)
}

// PublicationSpecTargetObjectsTablePtrInput is an input type that accepts PublicationSpecTargetObjectsTableArgs, PublicationSpecTargetObjectsTablePtr and PublicationSpecTargetObjectsTablePtrOutput values.
// You can construct a concrete instance of `PublicationSpecTargetObjectsTablePtrInput` via:
//
//	        PublicationSpecTargetObjectsTableArgs{...}
//
//	or:
//
//	        nil
type PublicationSpecTargetObjectsTablePtrInput interface {
	pulumi.Input

	ToPublicationSpecTargetObjectsTablePtrOutput() PublicationSpecTargetObjectsTablePtrOutput
	ToPublicationSpecTargetObjectsTablePtrOutputWithContext(context.Context) PublicationSpecTargetObjectsTablePtrOutput
}

type publicationSpecTargetObjectsTablePtrType PublicationSpecTargetObjectsTableArgs

func PublicationSpecTargetObjectsTablePtr(v *PublicationSpecTargetObjectsTableArgs) PublicationSpecTargetObjectsTablePtrInput {
	return (*publicationSpecTargetObjectsTablePtrType)(v)
}

func (*publicationSpecTargetObjectsTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpecTargetObjectsTable)(nil)).Elem()
}

func (i *publicationSpecTargetObjectsTablePtrType) ToPublicationSpecTargetObjectsTablePtrOutput() PublicationSpecTargetObjectsTablePtrOutput {
	return i.ToPublicationSpecTargetObjectsTablePtrOutputWithContext(context.Background())
}

func (i *publicationSpecTargetObjectsTablePtrType) ToPublicationSpecTargetObjectsTablePtrOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetObjectsTablePtrOutput)
}

// Specifies a list of tables to add to the publication. Corresponding
// to `FOR TABLE` in PostgreSQL.
type PublicationSpecTargetObjectsTableOutput struct{ *pulumi.OutputState }

func (PublicationSpecTargetObjectsTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecTargetObjectsTable)(nil)).Elem()
}

func (o PublicationSpecTargetObjectsTableOutput) ToPublicationSpecTargetObjectsTableOutput() PublicationSpecTargetObjectsTableOutput {
	return o
}

func (o PublicationSpecTargetObjectsTableOutput) ToPublicationSpecTargetObjectsTableOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsTableOutput {
	return o
}

func (o PublicationSpecTargetObjectsTableOutput) ToPublicationSpecTargetObjectsTablePtrOutput() PublicationSpecTargetObjectsTablePtrOutput {
	return o.ToPublicationSpecTargetObjectsTablePtrOutputWithContext(context.Background())
}

func (o PublicationSpecTargetObjectsTableOutput) ToPublicationSpecTargetObjectsTablePtrOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicationSpecTargetObjectsTable) *PublicationSpecTargetObjectsTable {
		return &v
	}).(PublicationSpecTargetObjectsTablePtrOutput)
}

// The columns to publish
func (o PublicationSpecTargetObjectsTableOutput) Columns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicationSpecTargetObjectsTable) []string { return v.Columns }).(pulumi.StringArrayOutput)
}

// The table name
func (o PublicationSpecTargetObjectsTableOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationSpecTargetObjectsTable) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether to limit to the table only or include all its descendants
func (o PublicationSpecTargetObjectsTableOutput) Only() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PublicationSpecTargetObjectsTable) *bool { return v.Only }).(pulumi.BoolPtrOutput)
}

// The schema name
func (o PublicationSpecTargetObjectsTableOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationSpecTargetObjectsTable) *string { return v.Schema }).(pulumi.StringPtrOutput)
}

type PublicationSpecTargetObjectsTablePtrOutput struct{ *pulumi.OutputState }

func (PublicationSpecTargetObjectsTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpecTargetObjectsTable)(nil)).Elem()
}

func (o PublicationSpecTargetObjectsTablePtrOutput) ToPublicationSpecTargetObjectsTablePtrOutput() PublicationSpecTargetObjectsTablePtrOutput {
	return o
}

func (o PublicationSpecTargetObjectsTablePtrOutput) ToPublicationSpecTargetObjectsTablePtrOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsTablePtrOutput {
	return o
}

func (o PublicationSpecTargetObjectsTablePtrOutput) Elem() PublicationSpecTargetObjectsTableOutput {
	return o.ApplyT(func(v *PublicationSpecTargetObjectsTable) PublicationSpecTargetObjectsTable {
		if v != nil {
			return *v
		}
		var ret PublicationSpecTargetObjectsTable
		return ret
	}).(PublicationSpecTargetObjectsTableOutput)
}

// The columns to publish
func (o PublicationSpecTargetObjectsTablePtrOutput) Columns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicationSpecTargetObjectsTable) []string {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(pulumi.StringArrayOutput)
}

// The table name
func (o PublicationSpecTargetObjectsTablePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicationSpecTargetObjectsTable) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Whether to limit to the table only or include all its descendants
func (o PublicationSpecTargetObjectsTablePtrOutput) Only() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicationSpecTargetObjectsTable) *bool {
		if v == nil {
			return nil
		}
		return v.Only
	}).(pulumi.BoolPtrOutput)
}

// The schema name
func (o PublicationSpecTargetObjectsTablePtrOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicationSpecTargetObjectsTable) *string {
		if v == nil {
			return nil
		}
		return v.Schema
	}).(pulumi.StringPtrOutput)
}

// Specifies a list of tables to add to the publication. Corresponding
// to `FOR TABLE` in PostgreSQL.
type PublicationSpecTargetObjectsTablePatch struct {
	// The columns to publish
	Columns []string `pulumi:"columns"`
	// The table name
	Name *string `pulumi:"name"`
	// Whether to limit to the table only or include all its descendants
	Only *bool `pulumi:"only"`
	// The schema name
	Schema *string `pulumi:"schema"`
}

// PublicationSpecTargetObjectsTablePatchInput is an input type that accepts PublicationSpecTargetObjectsTablePatchArgs and PublicationSpecTargetObjectsTablePatchOutput values.
// You can construct a concrete instance of `PublicationSpecTargetObjectsTablePatchInput` via:
//
//	PublicationSpecTargetObjectsTablePatchArgs{...}
type PublicationSpecTargetObjectsTablePatchInput interface {
	pulumi.Input

	ToPublicationSpecTargetObjectsTablePatchOutput() PublicationSpecTargetObjectsTablePatchOutput
	ToPublicationSpecTargetObjectsTablePatchOutputWithContext(context.Context) PublicationSpecTargetObjectsTablePatchOutput
}

// Specifies a list of tables to add to the publication. Corresponding
// to `FOR TABLE` in PostgreSQL.
type PublicationSpecTargetObjectsTablePatchArgs struct {
	// The columns to publish
	Columns pulumi.StringArrayInput `pulumi:"columns"`
	// The table name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether to limit to the table only or include all its descendants
	Only pulumi.BoolPtrInput `pulumi:"only"`
	// The schema name
	Schema pulumi.StringPtrInput `pulumi:"schema"`
}

func (PublicationSpecTargetObjectsTablePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecTargetObjectsTablePatch)(nil)).Elem()
}

func (i PublicationSpecTargetObjectsTablePatchArgs) ToPublicationSpecTargetObjectsTablePatchOutput() PublicationSpecTargetObjectsTablePatchOutput {
	return i.ToPublicationSpecTargetObjectsTablePatchOutputWithContext(context.Background())
}

func (i PublicationSpecTargetObjectsTablePatchArgs) ToPublicationSpecTargetObjectsTablePatchOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsTablePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetObjectsTablePatchOutput)
}

func (i PublicationSpecTargetObjectsTablePatchArgs) ToPublicationSpecTargetObjectsTablePatchPtrOutput() PublicationSpecTargetObjectsTablePatchPtrOutput {
	return i.ToPublicationSpecTargetObjectsTablePatchPtrOutputWithContext(context.Background())
}

func (i PublicationSpecTargetObjectsTablePatchArgs) ToPublicationSpecTargetObjectsTablePatchPtrOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsTablePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetObjectsTablePatchOutput).ToPublicationSpecTargetObjectsTablePatchPtrOutputWithContext(ctx)
}

// PublicationSpecTargetObjectsTablePatchPtrInput is an input type that accepts PublicationSpecTargetObjectsTablePatchArgs, PublicationSpecTargetObjectsTablePatchPtr and PublicationSpecTargetObjectsTablePatchPtrOutput values.
// You can construct a concrete instance of `PublicationSpecTargetObjectsTablePatchPtrInput` via:
//
//	        PublicationSpecTargetObjectsTablePatchArgs{...}
//
//	or:
//
//	        nil
type PublicationSpecTargetObjectsTablePatchPtrInput interface {
	pulumi.Input

	ToPublicationSpecTargetObjectsTablePatchPtrOutput() PublicationSpecTargetObjectsTablePatchPtrOutput
	ToPublicationSpecTargetObjectsTablePatchPtrOutputWithContext(context.Context) PublicationSpecTargetObjectsTablePatchPtrOutput
}

type publicationSpecTargetObjectsTablePatchPtrType PublicationSpecTargetObjectsTablePatchArgs

func PublicationSpecTargetObjectsTablePatchPtr(v *PublicationSpecTargetObjectsTablePatchArgs) PublicationSpecTargetObjectsTablePatchPtrInput {
	return (*publicationSpecTargetObjectsTablePatchPtrType)(v)
}

func (*publicationSpecTargetObjectsTablePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpecTargetObjectsTablePatch)(nil)).Elem()
}

func (i *publicationSpecTargetObjectsTablePatchPtrType) ToPublicationSpecTargetObjectsTablePatchPtrOutput() PublicationSpecTargetObjectsTablePatchPtrOutput {
	return i.ToPublicationSpecTargetObjectsTablePatchPtrOutputWithContext(context.Background())
}

func (i *publicationSpecTargetObjectsTablePatchPtrType) ToPublicationSpecTargetObjectsTablePatchPtrOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsTablePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetObjectsTablePatchPtrOutput)
}

// Specifies a list of tables to add to the publication. Corresponding
// to `FOR TABLE` in PostgreSQL.
type PublicationSpecTargetObjectsTablePatchOutput struct{ *pulumi.OutputState }

func (PublicationSpecTargetObjectsTablePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecTargetObjectsTablePatch)(nil)).Elem()
}

func (o PublicationSpecTargetObjectsTablePatchOutput) ToPublicationSpecTargetObjectsTablePatchOutput() PublicationSpecTargetObjectsTablePatchOutput {
	return o
}

func (o PublicationSpecTargetObjectsTablePatchOutput) ToPublicationSpecTargetObjectsTablePatchOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsTablePatchOutput {
	return o
}

func (o PublicationSpecTargetObjectsTablePatchOutput) ToPublicationSpecTargetObjectsTablePatchPtrOutput() PublicationSpecTargetObjectsTablePatchPtrOutput {
	return o.ToPublicationSpecTargetObjectsTablePatchPtrOutputWithContext(context.Background())
}

func (o PublicationSpecTargetObjectsTablePatchOutput) ToPublicationSpecTargetObjectsTablePatchPtrOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsTablePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicationSpecTargetObjectsTablePatch) *PublicationSpecTargetObjectsTablePatch {
		return &v
	}).(PublicationSpecTargetObjectsTablePatchPtrOutput)
}

// The columns to publish
func (o PublicationSpecTargetObjectsTablePatchOutput) Columns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicationSpecTargetObjectsTablePatch) []string { return v.Columns }).(pulumi.StringArrayOutput)
}

// The table name
func (o PublicationSpecTargetObjectsTablePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationSpecTargetObjectsTablePatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether to limit to the table only or include all its descendants
func (o PublicationSpecTargetObjectsTablePatchOutput) Only() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PublicationSpecTargetObjectsTablePatch) *bool { return v.Only }).(pulumi.BoolPtrOutput)
}

// The schema name
func (o PublicationSpecTargetObjectsTablePatchOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationSpecTargetObjectsTablePatch) *string { return v.Schema }).(pulumi.StringPtrOutput)
}

type PublicationSpecTargetObjectsTablePatchPtrOutput struct{ *pulumi.OutputState }

func (PublicationSpecTargetObjectsTablePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpecTargetObjectsTablePatch)(nil)).Elem()
}

func (o PublicationSpecTargetObjectsTablePatchPtrOutput) ToPublicationSpecTargetObjectsTablePatchPtrOutput() PublicationSpecTargetObjectsTablePatchPtrOutput {
	return o
}

func (o PublicationSpecTargetObjectsTablePatchPtrOutput) ToPublicationSpecTargetObjectsTablePatchPtrOutputWithContext(ctx context.Context) PublicationSpecTargetObjectsTablePatchPtrOutput {
	return o
}

func (o PublicationSpecTargetObjectsTablePatchPtrOutput) Elem() PublicationSpecTargetObjectsTablePatchOutput {
	return o.ApplyT(func(v *PublicationSpecTargetObjectsTablePatch) PublicationSpecTargetObjectsTablePatch {
		if v != nil {
			return *v
		}
		var ret PublicationSpecTargetObjectsTablePatch
		return ret
	}).(PublicationSpecTargetObjectsTablePatchOutput)
}

// The columns to publish
func (o PublicationSpecTargetObjectsTablePatchPtrOutput) Columns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicationSpecTargetObjectsTablePatch) []string {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(pulumi.StringArrayOutput)
}

// The table name
func (o PublicationSpecTargetObjectsTablePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicationSpecTargetObjectsTablePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Whether to limit to the table only or include all its descendants
func (o PublicationSpecTargetObjectsTablePatchPtrOutput) Only() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicationSpecTargetObjectsTablePatch) *bool {
		if v == nil {
			return nil
		}
		return v.Only
	}).(pulumi.BoolPtrOutput)
}

// The schema name
func (o PublicationSpecTargetObjectsTablePatchPtrOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicationSpecTargetObjectsTablePatch) *string {
		if v == nil {
			return nil
		}
		return v.Schema
	}).(pulumi.StringPtrOutput)
}

// Target of the publication as expected by PostgreSQL `CREATE PUBLICATION` command
type PublicationSpecTargetPatch struct {
	// Marks the publication as one that replicates changes for all tables
	// in the database, including tables created in the future.
	// Corresponding to `FOR ALL TABLES` in PostgreSQL.
	AllTables *bool `pulumi:"allTables"`
	// Just the following schema objects
	Objects []PublicationSpecTargetObjectsPatch `pulumi:"objects"`
}

// PublicationSpecTargetPatchInput is an input type that accepts PublicationSpecTargetPatchArgs and PublicationSpecTargetPatchOutput values.
// You can construct a concrete instance of `PublicationSpecTargetPatchInput` via:
//
//	PublicationSpecTargetPatchArgs{...}
type PublicationSpecTargetPatchInput interface {
	pulumi.Input

	ToPublicationSpecTargetPatchOutput() PublicationSpecTargetPatchOutput
	ToPublicationSpecTargetPatchOutputWithContext(context.Context) PublicationSpecTargetPatchOutput
}

// Target of the publication as expected by PostgreSQL `CREATE PUBLICATION` command
type PublicationSpecTargetPatchArgs struct {
	// Marks the publication as one that replicates changes for all tables
	// in the database, including tables created in the future.
	// Corresponding to `FOR ALL TABLES` in PostgreSQL.
	AllTables pulumi.BoolPtrInput `pulumi:"allTables"`
	// Just the following schema objects
	Objects PublicationSpecTargetObjectsPatchArrayInput `pulumi:"objects"`
}

func (PublicationSpecTargetPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecTargetPatch)(nil)).Elem()
}

func (i PublicationSpecTargetPatchArgs) ToPublicationSpecTargetPatchOutput() PublicationSpecTargetPatchOutput {
	return i.ToPublicationSpecTargetPatchOutputWithContext(context.Background())
}

func (i PublicationSpecTargetPatchArgs) ToPublicationSpecTargetPatchOutputWithContext(ctx context.Context) PublicationSpecTargetPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetPatchOutput)
}

func (i PublicationSpecTargetPatchArgs) ToPublicationSpecTargetPatchPtrOutput() PublicationSpecTargetPatchPtrOutput {
	return i.ToPublicationSpecTargetPatchPtrOutputWithContext(context.Background())
}

func (i PublicationSpecTargetPatchArgs) ToPublicationSpecTargetPatchPtrOutputWithContext(ctx context.Context) PublicationSpecTargetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetPatchOutput).ToPublicationSpecTargetPatchPtrOutputWithContext(ctx)
}

// PublicationSpecTargetPatchPtrInput is an input type that accepts PublicationSpecTargetPatchArgs, PublicationSpecTargetPatchPtr and PublicationSpecTargetPatchPtrOutput values.
// You can construct a concrete instance of `PublicationSpecTargetPatchPtrInput` via:
//
//	        PublicationSpecTargetPatchArgs{...}
//
//	or:
//
//	        nil
type PublicationSpecTargetPatchPtrInput interface {
	pulumi.Input

	ToPublicationSpecTargetPatchPtrOutput() PublicationSpecTargetPatchPtrOutput
	ToPublicationSpecTargetPatchPtrOutputWithContext(context.Context) PublicationSpecTargetPatchPtrOutput
}

type publicationSpecTargetPatchPtrType PublicationSpecTargetPatchArgs

func PublicationSpecTargetPatchPtr(v *PublicationSpecTargetPatchArgs) PublicationSpecTargetPatchPtrInput {
	return (*publicationSpecTargetPatchPtrType)(v)
}

func (*publicationSpecTargetPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpecTargetPatch)(nil)).Elem()
}

func (i *publicationSpecTargetPatchPtrType) ToPublicationSpecTargetPatchPtrOutput() PublicationSpecTargetPatchPtrOutput {
	return i.ToPublicationSpecTargetPatchPtrOutputWithContext(context.Background())
}

func (i *publicationSpecTargetPatchPtrType) ToPublicationSpecTargetPatchPtrOutputWithContext(ctx context.Context) PublicationSpecTargetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationSpecTargetPatchPtrOutput)
}

// Target of the publication as expected by PostgreSQL `CREATE PUBLICATION` command
type PublicationSpecTargetPatchOutput struct{ *pulumi.OutputState }

func (PublicationSpecTargetPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationSpecTargetPatch)(nil)).Elem()
}

func (o PublicationSpecTargetPatchOutput) ToPublicationSpecTargetPatchOutput() PublicationSpecTargetPatchOutput {
	return o
}

func (o PublicationSpecTargetPatchOutput) ToPublicationSpecTargetPatchOutputWithContext(ctx context.Context) PublicationSpecTargetPatchOutput {
	return o
}

func (o PublicationSpecTargetPatchOutput) ToPublicationSpecTargetPatchPtrOutput() PublicationSpecTargetPatchPtrOutput {
	return o.ToPublicationSpecTargetPatchPtrOutputWithContext(context.Background())
}

func (o PublicationSpecTargetPatchOutput) ToPublicationSpecTargetPatchPtrOutputWithContext(ctx context.Context) PublicationSpecTargetPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicationSpecTargetPatch) *PublicationSpecTargetPatch {
		return &v
	}).(PublicationSpecTargetPatchPtrOutput)
}

// Marks the publication as one that replicates changes for all tables
// in the database, including tables created in the future.
// Corresponding to `FOR ALL TABLES` in PostgreSQL.
func (o PublicationSpecTargetPatchOutput) AllTables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PublicationSpecTargetPatch) *bool { return v.AllTables }).(pulumi.BoolPtrOutput)
}

// Just the following schema objects
func (o PublicationSpecTargetPatchOutput) Objects() PublicationSpecTargetObjectsPatchArrayOutput {
	return o.ApplyT(func(v PublicationSpecTargetPatch) []PublicationSpecTargetObjectsPatch { return v.Objects }).(PublicationSpecTargetObjectsPatchArrayOutput)
}

type PublicationSpecTargetPatchPtrOutput struct{ *pulumi.OutputState }

func (PublicationSpecTargetPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationSpecTargetPatch)(nil)).Elem()
}

func (o PublicationSpecTargetPatchPtrOutput) ToPublicationSpecTargetPatchPtrOutput() PublicationSpecTargetPatchPtrOutput {
	return o
}

func (o PublicationSpecTargetPatchPtrOutput) ToPublicationSpecTargetPatchPtrOutputWithContext(ctx context.Context) PublicationSpecTargetPatchPtrOutput {
	return o
}

func (o PublicationSpecTargetPatchPtrOutput) Elem() PublicationSpecTargetPatchOutput {
	return o.ApplyT(func(v *PublicationSpecTargetPatch) PublicationSpecTargetPatch {
		if v != nil {
			return *v
		}
		var ret PublicationSpecTargetPatch
		return ret
	}).(PublicationSpecTargetPatchOutput)
}

// Marks the publication as one that replicates changes for all tables
// in the database, including tables created in the future.
// Corresponding to `FOR ALL TABLES` in PostgreSQL.
func (o PublicationSpecTargetPatchPtrOutput) AllTables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicationSpecTargetPatch) *bool {
		if v == nil {
			return nil
		}
		return v.AllTables
	}).(pulumi.BoolPtrOutput)
}

// Just the following schema objects
func (o PublicationSpecTargetPatchPtrOutput) Objects() PublicationSpecTargetObjectsPatchArrayOutput {
	return o.ApplyT(func(v *PublicationSpecTargetPatch) []PublicationSpecTargetObjectsPatch {
		if v == nil {
			return nil
		}
		return v.Objects
	}).(PublicationSpecTargetObjectsPatchArrayOutput)
}

// PublicationStatus defines the observed state of Publication
type PublicationStatus struct {
	// Applied is true if the publication was reconciled correctly
	Applied *bool `pulumi:"applied"`
	// Message is the reconciliation output message
	Message *string `pulumi:"message"`
	// A sequence number representing the latest
	// desired state that was synchronized
	ObservedGeneration *int `pulumi:"observedGeneration"`
}

// PublicationStatusInput is an input type that accepts PublicationStatusArgs and PublicationStatusOutput values.
// You can construct a concrete instance of `PublicationStatusInput` via:
//
//	PublicationStatusArgs{...}
type PublicationStatusInput interface {
	pulumi.Input

	ToPublicationStatusOutput() PublicationStatusOutput
	ToPublicationStatusOutputWithContext(context.Context) PublicationStatusOutput
}

// PublicationStatus defines the observed state of Publication
type PublicationStatusArgs struct {
	// Applied is true if the publication was reconciled correctly
	Applied pulumi.BoolPtrInput `pulumi:"applied"`
	// Message is the reconciliation output message
	Message pulumi.StringPtrInput `pulumi:"message"`
	// A sequence number representing the latest
	// desired state that was synchronized
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
}

func (PublicationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationStatus)(nil)).Elem()
}

func (i PublicationStatusArgs) ToPublicationStatusOutput() PublicationStatusOutput {
	return i.ToPublicationStatusOutputWithContext(context.Background())
}

func (i PublicationStatusArgs) ToPublicationStatusOutputWithContext(ctx context.Context) PublicationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationStatusOutput)
}

func (i PublicationStatusArgs) ToPublicationStatusPtrOutput() PublicationStatusPtrOutput {
	return i.ToPublicationStatusPtrOutputWithContext(context.Background())
}

func (i PublicationStatusArgs) ToPublicationStatusPtrOutputWithContext(ctx context.Context) PublicationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationStatusOutput).ToPublicationStatusPtrOutputWithContext(ctx)
}

// PublicationStatusPtrInput is an input type that accepts PublicationStatusArgs, PublicationStatusPtr and PublicationStatusPtrOutput values.
// You can construct a concrete instance of `PublicationStatusPtrInput` via:
//
//	        PublicationStatusArgs{...}
//
//	or:
//
//	        nil
type PublicationStatusPtrInput interface {
	pulumi.Input

	ToPublicationStatusPtrOutput() PublicationStatusPtrOutput
	ToPublicationStatusPtrOutputWithContext(context.Context) PublicationStatusPtrOutput
}

type publicationStatusPtrType PublicationStatusArgs

func PublicationStatusPtr(v *PublicationStatusArgs) PublicationStatusPtrInput {
	return (*publicationStatusPtrType)(v)
}

func (*publicationStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationStatus)(nil)).Elem()
}

func (i *publicationStatusPtrType) ToPublicationStatusPtrOutput() PublicationStatusPtrOutput {
	return i.ToPublicationStatusPtrOutputWithContext(context.Background())
}

func (i *publicationStatusPtrType) ToPublicationStatusPtrOutputWithContext(ctx context.Context) PublicationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationStatusPtrOutput)
}

// PublicationStatus defines the observed state of Publication
type PublicationStatusOutput struct{ *pulumi.OutputState }

func (PublicationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationStatus)(nil)).Elem()
}

func (o PublicationStatusOutput) ToPublicationStatusOutput() PublicationStatusOutput {
	return o
}

func (o PublicationStatusOutput) ToPublicationStatusOutputWithContext(ctx context.Context) PublicationStatusOutput {
	return o
}

func (o PublicationStatusOutput) ToPublicationStatusPtrOutput() PublicationStatusPtrOutput {
	return o.ToPublicationStatusPtrOutputWithContext(context.Background())
}

func (o PublicationStatusOutput) ToPublicationStatusPtrOutputWithContext(ctx context.Context) PublicationStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicationStatus) *PublicationStatus {
		return &v
	}).(PublicationStatusPtrOutput)
}

// Applied is true if the publication was reconciled correctly
func (o PublicationStatusOutput) Applied() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PublicationStatus) *bool { return v.Applied }).(pulumi.BoolPtrOutput)
}

// Message is the reconciliation output message
func (o PublicationStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A sequence number representing the latest
// desired state that was synchronized
func (o PublicationStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicationStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

type PublicationStatusPtrOutput struct{ *pulumi.OutputState }

func (PublicationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationStatus)(nil)).Elem()
}

func (o PublicationStatusPtrOutput) ToPublicationStatusPtrOutput() PublicationStatusPtrOutput {
	return o
}

func (o PublicationStatusPtrOutput) ToPublicationStatusPtrOutputWithContext(ctx context.Context) PublicationStatusPtrOutput {
	return o
}

func (o PublicationStatusPtrOutput) Elem() PublicationStatusOutput {
	return o.ApplyT(func(v *PublicationStatus) PublicationStatus {
		if v != nil {
			return *v
		}
		var ret PublicationStatus
		return ret
	}).(PublicationStatusOutput)
}

// Applied is true if the publication was reconciled correctly
func (o PublicationStatusPtrOutput) Applied() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicationStatus) *bool {
		if v == nil {
			return nil
		}
		return v.Applied
	}).(pulumi.BoolPtrOutput)
}

// Message is the reconciliation output message
func (o PublicationStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// A sequence number representing the latest
// desired state that was synchronized
func (o PublicationStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicationStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// PublicationStatus defines the observed state of Publication
type PublicationStatusPatch struct {
	// Applied is true if the publication was reconciled correctly
	Applied *bool `pulumi:"applied"`
	// Message is the reconciliation output message
	Message *string `pulumi:"message"`
	// A sequence number representing the latest
	// desired state that was synchronized
	ObservedGeneration *int `pulumi:"observedGeneration"`
}

// PublicationStatusPatchInput is an input type that accepts PublicationStatusPatchArgs and PublicationStatusPatchOutput values.
// You can construct a concrete instance of `PublicationStatusPatchInput` via:
//
//	PublicationStatusPatchArgs{...}
type PublicationStatusPatchInput interface {
	pulumi.Input

	ToPublicationStatusPatchOutput() PublicationStatusPatchOutput
	ToPublicationStatusPatchOutputWithContext(context.Context) PublicationStatusPatchOutput
}

// PublicationStatus defines the observed state of Publication
type PublicationStatusPatchArgs struct {
	// Applied is true if the publication was reconciled correctly
	Applied pulumi.BoolPtrInput `pulumi:"applied"`
	// Message is the reconciliation output message
	Message pulumi.StringPtrInput `pulumi:"message"`
	// A sequence number representing the latest
	// desired state that was synchronized
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
}

func (PublicationStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationStatusPatch)(nil)).Elem()
}

func (i PublicationStatusPatchArgs) ToPublicationStatusPatchOutput() PublicationStatusPatchOutput {
	return i.ToPublicationStatusPatchOutputWithContext(context.Background())
}

func (i PublicationStatusPatchArgs) ToPublicationStatusPatchOutputWithContext(ctx context.Context) PublicationStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationStatusPatchOutput)
}

func (i PublicationStatusPatchArgs) ToPublicationStatusPatchPtrOutput() PublicationStatusPatchPtrOutput {
	return i.ToPublicationStatusPatchPtrOutputWithContext(context.Background())
}

func (i PublicationStatusPatchArgs) ToPublicationStatusPatchPtrOutputWithContext(ctx context.Context) PublicationStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationStatusPatchOutput).ToPublicationStatusPatchPtrOutputWithContext(ctx)
}

// PublicationStatusPatchPtrInput is an input type that accepts PublicationStatusPatchArgs, PublicationStatusPatchPtr and PublicationStatusPatchPtrOutput values.
// You can construct a concrete instance of `PublicationStatusPatchPtrInput` via:
//
//	        PublicationStatusPatchArgs{...}
//
//	or:
//
//	        nil
type PublicationStatusPatchPtrInput interface {
	pulumi.Input

	ToPublicationStatusPatchPtrOutput() PublicationStatusPatchPtrOutput
	ToPublicationStatusPatchPtrOutputWithContext(context.Context) PublicationStatusPatchPtrOutput
}

type publicationStatusPatchPtrType PublicationStatusPatchArgs

func PublicationStatusPatchPtr(v *PublicationStatusPatchArgs) PublicationStatusPatchPtrInput {
	return (*publicationStatusPatchPtrType)(v)
}

func (*publicationStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationStatusPatch)(nil)).Elem()
}

func (i *publicationStatusPatchPtrType) ToPublicationStatusPatchPtrOutput() PublicationStatusPatchPtrOutput {
	return i.ToPublicationStatusPatchPtrOutputWithContext(context.Background())
}

func (i *publicationStatusPatchPtrType) ToPublicationStatusPatchPtrOutputWithContext(ctx context.Context) PublicationStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationStatusPatchPtrOutput)
}

// PublicationStatus defines the observed state of Publication
type PublicationStatusPatchOutput struct{ *pulumi.OutputState }

func (PublicationStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicationStatusPatch)(nil)).Elem()
}

func (o PublicationStatusPatchOutput) ToPublicationStatusPatchOutput() PublicationStatusPatchOutput {
	return o
}

func (o PublicationStatusPatchOutput) ToPublicationStatusPatchOutputWithContext(ctx context.Context) PublicationStatusPatchOutput {
	return o
}

func (o PublicationStatusPatchOutput) ToPublicationStatusPatchPtrOutput() PublicationStatusPatchPtrOutput {
	return o.ToPublicationStatusPatchPtrOutputWithContext(context.Background())
}

func (o PublicationStatusPatchOutput) ToPublicationStatusPatchPtrOutputWithContext(ctx context.Context) PublicationStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicationStatusPatch) *PublicationStatusPatch {
		return &v
	}).(PublicationStatusPatchPtrOutput)
}

// Applied is true if the publication was reconciled correctly
func (o PublicationStatusPatchOutput) Applied() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PublicationStatusPatch) *bool { return v.Applied }).(pulumi.BoolPtrOutput)
}

// Message is the reconciliation output message
func (o PublicationStatusPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicationStatusPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A sequence number representing the latest
// desired state that was synchronized
func (o PublicationStatusPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicationStatusPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

type PublicationStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (PublicationStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicationStatusPatch)(nil)).Elem()
}

func (o PublicationStatusPatchPtrOutput) ToPublicationStatusPatchPtrOutput() PublicationStatusPatchPtrOutput {
	return o
}

func (o PublicationStatusPatchPtrOutput) ToPublicationStatusPatchPtrOutputWithContext(ctx context.Context) PublicationStatusPatchPtrOutput {
	return o
}

func (o PublicationStatusPatchPtrOutput) Elem() PublicationStatusPatchOutput {
	return o.ApplyT(func(v *PublicationStatusPatch) PublicationStatusPatch {
		if v != nil {
			return *v
		}
		var ret PublicationStatusPatch
		return ret
	}).(PublicationStatusPatchOutput)
}

// Applied is true if the publication was reconciled correctly
func (o PublicationStatusPatchPtrOutput) Applied() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicationStatusPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Applied
	}).(pulumi.BoolPtrOutput)
}

// Message is the reconciliation output message
func (o PublicationStatusPatchPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicationStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// A sequence number representing the latest
// desired state that was synchronized
func (o PublicationStatusPatchPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicationStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// ScheduledBackup is the Schema for the scheduledbackups API
type ScheduledBackupType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec     *ScheduledBackupSpec   `pulumi:"spec"`
	Status   *ScheduledBackupStatus `pulumi:"status"`
}

// ScheduledBackupTypeInput is an input type that accepts ScheduledBackupTypeArgs and ScheduledBackupTypeOutput values.
// You can construct a concrete instance of `ScheduledBackupTypeInput` via:
//
//	ScheduledBackupTypeArgs{...}
type ScheduledBackupTypeInput interface {
	pulumi.Input

	ToScheduledBackupTypeOutput() ScheduledBackupTypeOutput
	ToScheduledBackupTypeOutputWithContext(context.Context) ScheduledBackupTypeOutput
}

// ScheduledBackup is the Schema for the scheduledbackups API
type ScheduledBackupTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput     `pulumi:"metadata"`
	Spec     ScheduledBackupSpecPtrInput   `pulumi:"spec"`
	Status   ScheduledBackupStatusPtrInput `pulumi:"status"`
}

func (ScheduledBackupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupType)(nil)).Elem()
}

func (i ScheduledBackupTypeArgs) ToScheduledBackupTypeOutput() ScheduledBackupTypeOutput {
	return i.ToScheduledBackupTypeOutputWithContext(context.Background())
}

func (i ScheduledBackupTypeArgs) ToScheduledBackupTypeOutputWithContext(ctx context.Context) ScheduledBackupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupTypeOutput)
}

// ScheduledBackupTypeArrayInput is an input type that accepts ScheduledBackupTypeArray and ScheduledBackupTypeArrayOutput values.
// You can construct a concrete instance of `ScheduledBackupTypeArrayInput` via:
//
//	ScheduledBackupTypeArray{ ScheduledBackupTypeArgs{...} }
type ScheduledBackupTypeArrayInput interface {
	pulumi.Input

	ToScheduledBackupTypeArrayOutput() ScheduledBackupTypeArrayOutput
	ToScheduledBackupTypeArrayOutputWithContext(context.Context) ScheduledBackupTypeArrayOutput
}

type ScheduledBackupTypeArray []ScheduledBackupTypeInput

func (ScheduledBackupTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledBackupType)(nil)).Elem()
}

func (i ScheduledBackupTypeArray) ToScheduledBackupTypeArrayOutput() ScheduledBackupTypeArrayOutput {
	return i.ToScheduledBackupTypeArrayOutputWithContext(context.Background())
}

func (i ScheduledBackupTypeArray) ToScheduledBackupTypeArrayOutputWithContext(ctx context.Context) ScheduledBackupTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupTypeArrayOutput)
}

// ScheduledBackup is the Schema for the scheduledbackups API
type ScheduledBackupTypeOutput struct{ *pulumi.OutputState }

func (ScheduledBackupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupType)(nil)).Elem()
}

func (o ScheduledBackupTypeOutput) ToScheduledBackupTypeOutput() ScheduledBackupTypeOutput {
	return o
}

func (o ScheduledBackupTypeOutput) ToScheduledBackupTypeOutputWithContext(ctx context.Context) ScheduledBackupTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ScheduledBackupTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ScheduledBackupTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ScheduledBackupTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ScheduledBackupType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o ScheduledBackupTypeOutput) Spec() ScheduledBackupSpecPtrOutput {
	return o.ApplyT(func(v ScheduledBackupType) *ScheduledBackupSpec { return v.Spec }).(ScheduledBackupSpecPtrOutput)
}

func (o ScheduledBackupTypeOutput) Status() ScheduledBackupStatusPtrOutput {
	return o.ApplyT(func(v ScheduledBackupType) *ScheduledBackupStatus { return v.Status }).(ScheduledBackupStatusPtrOutput)
}

type ScheduledBackupTypeArrayOutput struct{ *pulumi.OutputState }

func (ScheduledBackupTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledBackupType)(nil)).Elem()
}

func (o ScheduledBackupTypeArrayOutput) ToScheduledBackupTypeArrayOutput() ScheduledBackupTypeArrayOutput {
	return o
}

func (o ScheduledBackupTypeArrayOutput) ToScheduledBackupTypeArrayOutputWithContext(ctx context.Context) ScheduledBackupTypeArrayOutput {
	return o
}

func (o ScheduledBackupTypeArrayOutput) Index(i pulumi.IntInput) ScheduledBackupTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledBackupType {
		return vs[0].([]ScheduledBackupType)[vs[1].(int)]
	}).(ScheduledBackupTypeOutput)
}

// ScheduledBackupList is a list of ScheduledBackup
type ScheduledBackupListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of scheduledbackups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []ScheduledBackupType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// ScheduledBackupListTypeInput is an input type that accepts ScheduledBackupListTypeArgs and ScheduledBackupListTypeOutput values.
// You can construct a concrete instance of `ScheduledBackupListTypeInput` via:
//
//	ScheduledBackupListTypeArgs{...}
type ScheduledBackupListTypeInput interface {
	pulumi.Input

	ToScheduledBackupListTypeOutput() ScheduledBackupListTypeOutput
	ToScheduledBackupListTypeOutputWithContext(context.Context) ScheduledBackupListTypeOutput
}

// ScheduledBackupList is a list of ScheduledBackup
type ScheduledBackupListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of scheduledbackups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ScheduledBackupTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (ScheduledBackupListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupListType)(nil)).Elem()
}

func (i ScheduledBackupListTypeArgs) ToScheduledBackupListTypeOutput() ScheduledBackupListTypeOutput {
	return i.ToScheduledBackupListTypeOutputWithContext(context.Background())
}

func (i ScheduledBackupListTypeArgs) ToScheduledBackupListTypeOutputWithContext(ctx context.Context) ScheduledBackupListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupListTypeOutput)
}

// ScheduledBackupList is a list of ScheduledBackup
type ScheduledBackupListTypeOutput struct{ *pulumi.OutputState }

func (ScheduledBackupListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupListType)(nil)).Elem()
}

func (o ScheduledBackupListTypeOutput) ToScheduledBackupListTypeOutput() ScheduledBackupListTypeOutput {
	return o
}

func (o ScheduledBackupListTypeOutput) ToScheduledBackupListTypeOutputWithContext(ctx context.Context) ScheduledBackupListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ScheduledBackupListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of scheduledbackups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o ScheduledBackupListTypeOutput) Items() ScheduledBackupTypeArrayOutput {
	return o.ApplyT(func(v ScheduledBackupListType) []ScheduledBackupType { return v.Items }).(ScheduledBackupTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ScheduledBackupListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ScheduledBackupListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v ScheduledBackupListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// ScheduledBackup is the Schema for the scheduledbackups API
type ScheduledBackupPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch     `pulumi:"metadata"`
	Spec     *ScheduledBackupSpecPatch   `pulumi:"spec"`
	Status   *ScheduledBackupStatusPatch `pulumi:"status"`
}

// ScheduledBackupPatchTypeInput is an input type that accepts ScheduledBackupPatchTypeArgs and ScheduledBackupPatchTypeOutput values.
// You can construct a concrete instance of `ScheduledBackupPatchTypeInput` via:
//
//	ScheduledBackupPatchTypeArgs{...}
type ScheduledBackupPatchTypeInput interface {
	pulumi.Input

	ToScheduledBackupPatchTypeOutput() ScheduledBackupPatchTypeOutput
	ToScheduledBackupPatchTypeOutputWithContext(context.Context) ScheduledBackupPatchTypeOutput
}

// ScheduledBackup is the Schema for the scheduledbackups API
type ScheduledBackupPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput     `pulumi:"metadata"`
	Spec     ScheduledBackupSpecPatchPtrInput   `pulumi:"spec"`
	Status   ScheduledBackupStatusPatchPtrInput `pulumi:"status"`
}

func (ScheduledBackupPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupPatchType)(nil)).Elem()
}

func (i ScheduledBackupPatchTypeArgs) ToScheduledBackupPatchTypeOutput() ScheduledBackupPatchTypeOutput {
	return i.ToScheduledBackupPatchTypeOutputWithContext(context.Background())
}

func (i ScheduledBackupPatchTypeArgs) ToScheduledBackupPatchTypeOutputWithContext(ctx context.Context) ScheduledBackupPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupPatchTypeOutput)
}

// ScheduledBackup is the Schema for the scheduledbackups API
type ScheduledBackupPatchTypeOutput struct{ *pulumi.OutputState }

func (ScheduledBackupPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupPatchType)(nil)).Elem()
}

func (o ScheduledBackupPatchTypeOutput) ToScheduledBackupPatchTypeOutput() ScheduledBackupPatchTypeOutput {
	return o
}

func (o ScheduledBackupPatchTypeOutput) ToScheduledBackupPatchTypeOutputWithContext(ctx context.Context) ScheduledBackupPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ScheduledBackupPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ScheduledBackupPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ScheduledBackupPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v ScheduledBackupPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ScheduledBackupPatchTypeOutput) Spec() ScheduledBackupSpecPatchPtrOutput {
	return o.ApplyT(func(v ScheduledBackupPatchType) *ScheduledBackupSpecPatch { return v.Spec }).(ScheduledBackupSpecPatchPtrOutput)
}

func (o ScheduledBackupPatchTypeOutput) Status() ScheduledBackupStatusPatchPtrOutput {
	return o.ApplyT(func(v ScheduledBackupPatchType) *ScheduledBackupStatusPatch { return v.Status }).(ScheduledBackupStatusPatchPtrOutput)
}

// Specification of the desired behavior of the ScheduledBackup.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupSpec struct {
	// Indicates which ownerReference should be put inside the created backup resources.<br />
	// - none: no owner reference for created backup objects (same behavior as before the field was introduced)<br />
	// - self: sets the Scheduled backup object as owner of the backup<br />
	// - cluster: set the cluster as owner of the backup<br />
	BackupOwnerReference *string                     `pulumi:"backupOwnerReference"`
	Cluster              *ScheduledBackupSpecCluster `pulumi:"cluster"`
	// If the first backup has to be immediately start after creation or not
	Immediate *bool `pulumi:"immediate"`
	// The backup method to be used, possible options are `barmanObjectStore`,
	// `volumeSnapshot` or `plugin`. Defaults to: `barmanObjectStore`.
	Method *string `pulumi:"method"`
	// Whether the default type of backup with volume snapshots is
	// online/hot (`true`, default) or offline/cold (`false`)
	// Overrides the default setting specified in the cluster field '.spec.backup.volumeSnapshot.online'
	Online              *bool                                   `pulumi:"online"`
	OnlineConfiguration *ScheduledBackupSpecOnlineConfiguration `pulumi:"onlineConfiguration"`
	PluginConfiguration *ScheduledBackupSpecPluginConfiguration `pulumi:"pluginConfiguration"`
	// The schedule does not follow the same format used in Kubernetes CronJobs
	// as it includes an additional seconds specifier,
	// see https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
	Schedule *string `pulumi:"schedule"`
	// If this backup is suspended or not
	Suspend *bool `pulumi:"suspend"`
	// The policy to decide which instance should perform this backup. If empty,
	// it defaults to `cluster.spec.backup.target`.
	// Available options are empty string, `primary` and `prefer-standby`.
	// `primary` to have backups run always on primary instances,
	// `prefer-standby` to have backups run preferably on the most updated
	// standby, if available.
	Target *string `pulumi:"target"`
}

// ScheduledBackupSpecInput is an input type that accepts ScheduledBackupSpecArgs and ScheduledBackupSpecOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecInput` via:
//
//	ScheduledBackupSpecArgs{...}
type ScheduledBackupSpecInput interface {
	pulumi.Input

	ToScheduledBackupSpecOutput() ScheduledBackupSpecOutput
	ToScheduledBackupSpecOutputWithContext(context.Context) ScheduledBackupSpecOutput
}

// Specification of the desired behavior of the ScheduledBackup.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupSpecArgs struct {
	// Indicates which ownerReference should be put inside the created backup resources.<br />
	// - none: no owner reference for created backup objects (same behavior as before the field was introduced)<br />
	// - self: sets the Scheduled backup object as owner of the backup<br />
	// - cluster: set the cluster as owner of the backup<br />
	BackupOwnerReference pulumi.StringPtrInput              `pulumi:"backupOwnerReference"`
	Cluster              ScheduledBackupSpecClusterPtrInput `pulumi:"cluster"`
	// If the first backup has to be immediately start after creation or not
	Immediate pulumi.BoolPtrInput `pulumi:"immediate"`
	// The backup method to be used, possible options are `barmanObjectStore`,
	// `volumeSnapshot` or `plugin`. Defaults to: `barmanObjectStore`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Whether the default type of backup with volume snapshots is
	// online/hot (`true`, default) or offline/cold (`false`)
	// Overrides the default setting specified in the cluster field '.spec.backup.volumeSnapshot.online'
	Online              pulumi.BoolPtrInput                            `pulumi:"online"`
	OnlineConfiguration ScheduledBackupSpecOnlineConfigurationPtrInput `pulumi:"onlineConfiguration"`
	PluginConfiguration ScheduledBackupSpecPluginConfigurationPtrInput `pulumi:"pluginConfiguration"`
	// The schedule does not follow the same format used in Kubernetes CronJobs
	// as it includes an additional seconds specifier,
	// see https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
	Schedule pulumi.StringPtrInput `pulumi:"schedule"`
	// If this backup is suspended or not
	Suspend pulumi.BoolPtrInput `pulumi:"suspend"`
	// The policy to decide which instance should perform this backup. If empty,
	// it defaults to `cluster.spec.backup.target`.
	// Available options are empty string, `primary` and `prefer-standby`.
	// `primary` to have backups run always on primary instances,
	// `prefer-standby` to have backups run preferably on the most updated
	// standby, if available.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (ScheduledBackupSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpec)(nil)).Elem()
}

func (i ScheduledBackupSpecArgs) ToScheduledBackupSpecOutput() ScheduledBackupSpecOutput {
	return i.ToScheduledBackupSpecOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecArgs) ToScheduledBackupSpecOutputWithContext(ctx context.Context) ScheduledBackupSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecOutput)
}

func (i ScheduledBackupSpecArgs) ToScheduledBackupSpecPtrOutput() ScheduledBackupSpecPtrOutput {
	return i.ToScheduledBackupSpecPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecArgs) ToScheduledBackupSpecPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecOutput).ToScheduledBackupSpecPtrOutputWithContext(ctx)
}

// ScheduledBackupSpecPtrInput is an input type that accepts ScheduledBackupSpecArgs, ScheduledBackupSpecPtr and ScheduledBackupSpecPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecPtrInput` via:
//
//	        ScheduledBackupSpecArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupSpecPtrInput interface {
	pulumi.Input

	ToScheduledBackupSpecPtrOutput() ScheduledBackupSpecPtrOutput
	ToScheduledBackupSpecPtrOutputWithContext(context.Context) ScheduledBackupSpecPtrOutput
}

type scheduledBackupSpecPtrType ScheduledBackupSpecArgs

func ScheduledBackupSpecPtr(v *ScheduledBackupSpecArgs) ScheduledBackupSpecPtrInput {
	return (*scheduledBackupSpecPtrType)(v)
}

func (*scheduledBackupSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpec)(nil)).Elem()
}

func (i *scheduledBackupSpecPtrType) ToScheduledBackupSpecPtrOutput() ScheduledBackupSpecPtrOutput {
	return i.ToScheduledBackupSpecPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupSpecPtrType) ToScheduledBackupSpecPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecPtrOutput)
}

// Specification of the desired behavior of the ScheduledBackup.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupSpecOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpec)(nil)).Elem()
}

func (o ScheduledBackupSpecOutput) ToScheduledBackupSpecOutput() ScheduledBackupSpecOutput {
	return o
}

func (o ScheduledBackupSpecOutput) ToScheduledBackupSpecOutputWithContext(ctx context.Context) ScheduledBackupSpecOutput {
	return o
}

func (o ScheduledBackupSpecOutput) ToScheduledBackupSpecPtrOutput() ScheduledBackupSpecPtrOutput {
	return o.ToScheduledBackupSpecPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupSpecOutput) ToScheduledBackupSpecPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupSpec) *ScheduledBackupSpec {
		return &v
	}).(ScheduledBackupSpecPtrOutput)
}

// Indicates which ownerReference should be put inside the created backup resources.<br />
// - none: no owner reference for created backup objects (same behavior as before the field was introduced)<br />
// - self: sets the Scheduled backup object as owner of the backup<br />
// - cluster: set the cluster as owner of the backup<br />
func (o ScheduledBackupSpecOutput) BackupOwnerReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *string { return v.BackupOwnerReference }).(pulumi.StringPtrOutput)
}

func (o ScheduledBackupSpecOutput) Cluster() ScheduledBackupSpecClusterPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *ScheduledBackupSpecCluster { return v.Cluster }).(ScheduledBackupSpecClusterPtrOutput)
}

// If the first backup has to be immediately start after creation or not
func (o ScheduledBackupSpecOutput) Immediate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *bool { return v.Immediate }).(pulumi.BoolPtrOutput)
}

// The backup method to be used, possible options are `barmanObjectStore`,
// `volumeSnapshot` or `plugin`. Defaults to: `barmanObjectStore`.
func (o ScheduledBackupSpecOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Whether the default type of backup with volume snapshots is
// online/hot (`true`, default) or offline/cold (`false`)
// Overrides the default setting specified in the cluster field '.spec.backup.volumeSnapshot.online'
func (o ScheduledBackupSpecOutput) Online() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *bool { return v.Online }).(pulumi.BoolPtrOutput)
}

func (o ScheduledBackupSpecOutput) OnlineConfiguration() ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *ScheduledBackupSpecOnlineConfiguration { return v.OnlineConfiguration }).(ScheduledBackupSpecOnlineConfigurationPtrOutput)
}

func (o ScheduledBackupSpecOutput) PluginConfiguration() ScheduledBackupSpecPluginConfigurationPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *ScheduledBackupSpecPluginConfiguration { return v.PluginConfiguration }).(ScheduledBackupSpecPluginConfigurationPtrOutput)
}

// The schedule does not follow the same format used in Kubernetes CronJobs
// as it includes an additional seconds specifier,
// see https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
func (o ScheduledBackupSpecOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

// If this backup is suspended or not
func (o ScheduledBackupSpecOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *bool { return v.Suspend }).(pulumi.BoolPtrOutput)
}

// The policy to decide which instance should perform this backup. If empty,
// it defaults to `cluster.spec.backup.target`.
// Available options are empty string, `primary` and `prefer-standby`.
// `primary` to have backups run always on primary instances,
// `prefer-standby` to have backups run preferably on the most updated
// standby, if available.
func (o ScheduledBackupSpecOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ScheduledBackupSpecPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpec)(nil)).Elem()
}

func (o ScheduledBackupSpecPtrOutput) ToScheduledBackupSpecPtrOutput() ScheduledBackupSpecPtrOutput {
	return o
}

func (o ScheduledBackupSpecPtrOutput) ToScheduledBackupSpecPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPtrOutput {
	return o
}

func (o ScheduledBackupSpecPtrOutput) Elem() ScheduledBackupSpecOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) ScheduledBackupSpec {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupSpec
		return ret
	}).(ScheduledBackupSpecOutput)
}

// Indicates which ownerReference should be put inside the created backup resources.<br />
// - none: no owner reference for created backup objects (same behavior as before the field was introduced)<br />
// - self: sets the Scheduled backup object as owner of the backup<br />
// - cluster: set the cluster as owner of the backup<br />
func (o ScheduledBackupSpecPtrOutput) BackupOwnerReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *string {
		if v == nil {
			return nil
		}
		return v.BackupOwnerReference
	}).(pulumi.StringPtrOutput)
}

func (o ScheduledBackupSpecPtrOutput) Cluster() ScheduledBackupSpecClusterPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *ScheduledBackupSpecCluster {
		if v == nil {
			return nil
		}
		return v.Cluster
	}).(ScheduledBackupSpecClusterPtrOutput)
}

// If the first backup has to be immediately start after creation or not
func (o ScheduledBackupSpecPtrOutput) Immediate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Immediate
	}).(pulumi.BoolPtrOutput)
}

// The backup method to be used, possible options are `barmanObjectStore`,
// `volumeSnapshot` or `plugin`. Defaults to: `barmanObjectStore`.
func (o ScheduledBackupSpecPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Whether the default type of backup with volume snapshots is
// online/hot (`true`, default) or offline/cold (`false`)
// Overrides the default setting specified in the cluster field '.spec.backup.volumeSnapshot.online'
func (o ScheduledBackupSpecPtrOutput) Online() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Online
	}).(pulumi.BoolPtrOutput)
}

func (o ScheduledBackupSpecPtrOutput) OnlineConfiguration() ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *ScheduledBackupSpecOnlineConfiguration {
		if v == nil {
			return nil
		}
		return v.OnlineConfiguration
	}).(ScheduledBackupSpecOnlineConfigurationPtrOutput)
}

func (o ScheduledBackupSpecPtrOutput) PluginConfiguration() ScheduledBackupSpecPluginConfigurationPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *ScheduledBackupSpecPluginConfiguration {
		if v == nil {
			return nil
		}
		return v.PluginConfiguration
	}).(ScheduledBackupSpecPluginConfigurationPtrOutput)
}

// The schedule does not follow the same format used in Kubernetes CronJobs
// as it includes an additional seconds specifier,
// see https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
func (o ScheduledBackupSpecPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringPtrOutput)
}

// If this backup is suspended or not
func (o ScheduledBackupSpecPtrOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Suspend
	}).(pulumi.BoolPtrOutput)
}

// The policy to decide which instance should perform this backup. If empty,
// it defaults to `cluster.spec.backup.target`.
// Available options are empty string, `primary` and `prefer-standby`.
// `primary` to have backups run always on primary instances,
// `prefer-standby` to have backups run preferably on the most updated
// standby, if available.
func (o ScheduledBackupSpecPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// The cluster to backup
type ScheduledBackupSpecCluster struct {
	// Name of the referent.
	Name *string `pulumi:"name"`
}

// ScheduledBackupSpecClusterInput is an input type that accepts ScheduledBackupSpecClusterArgs and ScheduledBackupSpecClusterOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecClusterInput` via:
//
//	ScheduledBackupSpecClusterArgs{...}
type ScheduledBackupSpecClusterInput interface {
	pulumi.Input

	ToScheduledBackupSpecClusterOutput() ScheduledBackupSpecClusterOutput
	ToScheduledBackupSpecClusterOutputWithContext(context.Context) ScheduledBackupSpecClusterOutput
}

// The cluster to backup
type ScheduledBackupSpecClusterArgs struct {
	// Name of the referent.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ScheduledBackupSpecClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecCluster)(nil)).Elem()
}

func (i ScheduledBackupSpecClusterArgs) ToScheduledBackupSpecClusterOutput() ScheduledBackupSpecClusterOutput {
	return i.ToScheduledBackupSpecClusterOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecClusterArgs) ToScheduledBackupSpecClusterOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecClusterOutput)
}

func (i ScheduledBackupSpecClusterArgs) ToScheduledBackupSpecClusterPtrOutput() ScheduledBackupSpecClusterPtrOutput {
	return i.ToScheduledBackupSpecClusterPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecClusterArgs) ToScheduledBackupSpecClusterPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecClusterOutput).ToScheduledBackupSpecClusterPtrOutputWithContext(ctx)
}

// ScheduledBackupSpecClusterPtrInput is an input type that accepts ScheduledBackupSpecClusterArgs, ScheduledBackupSpecClusterPtr and ScheduledBackupSpecClusterPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecClusterPtrInput` via:
//
//	        ScheduledBackupSpecClusterArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupSpecClusterPtrInput interface {
	pulumi.Input

	ToScheduledBackupSpecClusterPtrOutput() ScheduledBackupSpecClusterPtrOutput
	ToScheduledBackupSpecClusterPtrOutputWithContext(context.Context) ScheduledBackupSpecClusterPtrOutput
}

type scheduledBackupSpecClusterPtrType ScheduledBackupSpecClusterArgs

func ScheduledBackupSpecClusterPtr(v *ScheduledBackupSpecClusterArgs) ScheduledBackupSpecClusterPtrInput {
	return (*scheduledBackupSpecClusterPtrType)(v)
}

func (*scheduledBackupSpecClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecCluster)(nil)).Elem()
}

func (i *scheduledBackupSpecClusterPtrType) ToScheduledBackupSpecClusterPtrOutput() ScheduledBackupSpecClusterPtrOutput {
	return i.ToScheduledBackupSpecClusterPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupSpecClusterPtrType) ToScheduledBackupSpecClusterPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecClusterPtrOutput)
}

// The cluster to backup
type ScheduledBackupSpecClusterOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecCluster)(nil)).Elem()
}

func (o ScheduledBackupSpecClusterOutput) ToScheduledBackupSpecClusterOutput() ScheduledBackupSpecClusterOutput {
	return o
}

func (o ScheduledBackupSpecClusterOutput) ToScheduledBackupSpecClusterOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterOutput {
	return o
}

func (o ScheduledBackupSpecClusterOutput) ToScheduledBackupSpecClusterPtrOutput() ScheduledBackupSpecClusterPtrOutput {
	return o.ToScheduledBackupSpecClusterPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupSpecClusterOutput) ToScheduledBackupSpecClusterPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupSpecCluster) *ScheduledBackupSpecCluster {
		return &v
	}).(ScheduledBackupSpecClusterPtrOutput)
}

// Name of the referent.
func (o ScheduledBackupSpecClusterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecCluster) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ScheduledBackupSpecClusterPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecCluster)(nil)).Elem()
}

func (o ScheduledBackupSpecClusterPtrOutput) ToScheduledBackupSpecClusterPtrOutput() ScheduledBackupSpecClusterPtrOutput {
	return o
}

func (o ScheduledBackupSpecClusterPtrOutput) ToScheduledBackupSpecClusterPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterPtrOutput {
	return o
}

func (o ScheduledBackupSpecClusterPtrOutput) Elem() ScheduledBackupSpecClusterOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecCluster) ScheduledBackupSpecCluster {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupSpecCluster
		return ret
	}).(ScheduledBackupSpecClusterOutput)
}

// Name of the referent.
func (o ScheduledBackupSpecClusterPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecCluster) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The cluster to backup
type ScheduledBackupSpecClusterPatch struct {
	// Name of the referent.
	Name *string `pulumi:"name"`
}

// ScheduledBackupSpecClusterPatchInput is an input type that accepts ScheduledBackupSpecClusterPatchArgs and ScheduledBackupSpecClusterPatchOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecClusterPatchInput` via:
//
//	ScheduledBackupSpecClusterPatchArgs{...}
type ScheduledBackupSpecClusterPatchInput interface {
	pulumi.Input

	ToScheduledBackupSpecClusterPatchOutput() ScheduledBackupSpecClusterPatchOutput
	ToScheduledBackupSpecClusterPatchOutputWithContext(context.Context) ScheduledBackupSpecClusterPatchOutput
}

// The cluster to backup
type ScheduledBackupSpecClusterPatchArgs struct {
	// Name of the referent.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ScheduledBackupSpecClusterPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecClusterPatch)(nil)).Elem()
}

func (i ScheduledBackupSpecClusterPatchArgs) ToScheduledBackupSpecClusterPatchOutput() ScheduledBackupSpecClusterPatchOutput {
	return i.ToScheduledBackupSpecClusterPatchOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecClusterPatchArgs) ToScheduledBackupSpecClusterPatchOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecClusterPatchOutput)
}

func (i ScheduledBackupSpecClusterPatchArgs) ToScheduledBackupSpecClusterPatchPtrOutput() ScheduledBackupSpecClusterPatchPtrOutput {
	return i.ToScheduledBackupSpecClusterPatchPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecClusterPatchArgs) ToScheduledBackupSpecClusterPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecClusterPatchOutput).ToScheduledBackupSpecClusterPatchPtrOutputWithContext(ctx)
}

// ScheduledBackupSpecClusterPatchPtrInput is an input type that accepts ScheduledBackupSpecClusterPatchArgs, ScheduledBackupSpecClusterPatchPtr and ScheduledBackupSpecClusterPatchPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecClusterPatchPtrInput` via:
//
//	        ScheduledBackupSpecClusterPatchArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupSpecClusterPatchPtrInput interface {
	pulumi.Input

	ToScheduledBackupSpecClusterPatchPtrOutput() ScheduledBackupSpecClusterPatchPtrOutput
	ToScheduledBackupSpecClusterPatchPtrOutputWithContext(context.Context) ScheduledBackupSpecClusterPatchPtrOutput
}

type scheduledBackupSpecClusterPatchPtrType ScheduledBackupSpecClusterPatchArgs

func ScheduledBackupSpecClusterPatchPtr(v *ScheduledBackupSpecClusterPatchArgs) ScheduledBackupSpecClusterPatchPtrInput {
	return (*scheduledBackupSpecClusterPatchPtrType)(v)
}

func (*scheduledBackupSpecClusterPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecClusterPatch)(nil)).Elem()
}

func (i *scheduledBackupSpecClusterPatchPtrType) ToScheduledBackupSpecClusterPatchPtrOutput() ScheduledBackupSpecClusterPatchPtrOutput {
	return i.ToScheduledBackupSpecClusterPatchPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupSpecClusterPatchPtrType) ToScheduledBackupSpecClusterPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecClusterPatchPtrOutput)
}

// The cluster to backup
type ScheduledBackupSpecClusterPatchOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecClusterPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecClusterPatch)(nil)).Elem()
}

func (o ScheduledBackupSpecClusterPatchOutput) ToScheduledBackupSpecClusterPatchOutput() ScheduledBackupSpecClusterPatchOutput {
	return o
}

func (o ScheduledBackupSpecClusterPatchOutput) ToScheduledBackupSpecClusterPatchOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterPatchOutput {
	return o
}

func (o ScheduledBackupSpecClusterPatchOutput) ToScheduledBackupSpecClusterPatchPtrOutput() ScheduledBackupSpecClusterPatchPtrOutput {
	return o.ToScheduledBackupSpecClusterPatchPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupSpecClusterPatchOutput) ToScheduledBackupSpecClusterPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupSpecClusterPatch) *ScheduledBackupSpecClusterPatch {
		return &v
	}).(ScheduledBackupSpecClusterPatchPtrOutput)
}

// Name of the referent.
func (o ScheduledBackupSpecClusterPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecClusterPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ScheduledBackupSpecClusterPatchPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecClusterPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecClusterPatch)(nil)).Elem()
}

func (o ScheduledBackupSpecClusterPatchPtrOutput) ToScheduledBackupSpecClusterPatchPtrOutput() ScheduledBackupSpecClusterPatchPtrOutput {
	return o
}

func (o ScheduledBackupSpecClusterPatchPtrOutput) ToScheduledBackupSpecClusterPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterPatchPtrOutput {
	return o
}

func (o ScheduledBackupSpecClusterPatchPtrOutput) Elem() ScheduledBackupSpecClusterPatchOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecClusterPatch) ScheduledBackupSpecClusterPatch {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupSpecClusterPatch
		return ret
	}).(ScheduledBackupSpecClusterPatchOutput)
}

// Name of the referent.
func (o ScheduledBackupSpecClusterPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecClusterPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Configuration parameters to control the online/hot backup with volume snapshots
// Overrides the default settings specified in the cluster '.backup.volumeSnapshot.onlineConfiguration' stanza
type ScheduledBackupSpecOnlineConfiguration struct {
	// Control whether the I/O workload for the backup initial checkpoint will
	// be limited, according to the `checkpoint_completion_target` setting on
	// the PostgreSQL server. If set to true, an immediate checkpoint will be
	// used, meaning PostgreSQL will complete the checkpoint as soon as
	// possible. `false` by default.
	ImmediateCheckpoint *bool `pulumi:"immediateCheckpoint"`
	// If false, the function will return immediately after the backup is completed,
	// without waiting for WAL to be archived.
	// This behavior is only useful with backup software that independently monitors WAL archiving.
	// Otherwise, WAL required to make the backup consistent might be missing and make the backup useless.
	// By default, or when this parameter is true, pg_backup_stop will wait for WAL to be archived when archiving is
	// enabled.
	// On a standby, this means that it will wait only when archive_mode = always.
	// If write activity on the primary is low, it may be useful to run pg_switch_wal on the primary in order to trigger
	// an immediate segment switch.
	WaitForArchive *bool `pulumi:"waitForArchive"`
}

// ScheduledBackupSpecOnlineConfigurationInput is an input type that accepts ScheduledBackupSpecOnlineConfigurationArgs and ScheduledBackupSpecOnlineConfigurationOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecOnlineConfigurationInput` via:
//
//	ScheduledBackupSpecOnlineConfigurationArgs{...}
type ScheduledBackupSpecOnlineConfigurationInput interface {
	pulumi.Input

	ToScheduledBackupSpecOnlineConfigurationOutput() ScheduledBackupSpecOnlineConfigurationOutput
	ToScheduledBackupSpecOnlineConfigurationOutputWithContext(context.Context) ScheduledBackupSpecOnlineConfigurationOutput
}

// Configuration parameters to control the online/hot backup with volume snapshots
// Overrides the default settings specified in the cluster '.backup.volumeSnapshot.onlineConfiguration' stanza
type ScheduledBackupSpecOnlineConfigurationArgs struct {
	// Control whether the I/O workload for the backup initial checkpoint will
	// be limited, according to the `checkpoint_completion_target` setting on
	// the PostgreSQL server. If set to true, an immediate checkpoint will be
	// used, meaning PostgreSQL will complete the checkpoint as soon as
	// possible. `false` by default.
	ImmediateCheckpoint pulumi.BoolPtrInput `pulumi:"immediateCheckpoint"`
	// If false, the function will return immediately after the backup is completed,
	// without waiting for WAL to be archived.
	// This behavior is only useful with backup software that independently monitors WAL archiving.
	// Otherwise, WAL required to make the backup consistent might be missing and make the backup useless.
	// By default, or when this parameter is true, pg_backup_stop will wait for WAL to be archived when archiving is
	// enabled.
	// On a standby, this means that it will wait only when archive_mode = always.
	// If write activity on the primary is low, it may be useful to run pg_switch_wal on the primary in order to trigger
	// an immediate segment switch.
	WaitForArchive pulumi.BoolPtrInput `pulumi:"waitForArchive"`
}

func (ScheduledBackupSpecOnlineConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecOnlineConfiguration)(nil)).Elem()
}

func (i ScheduledBackupSpecOnlineConfigurationArgs) ToScheduledBackupSpecOnlineConfigurationOutput() ScheduledBackupSpecOnlineConfigurationOutput {
	return i.ToScheduledBackupSpecOnlineConfigurationOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecOnlineConfigurationArgs) ToScheduledBackupSpecOnlineConfigurationOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecOnlineConfigurationOutput)
}

func (i ScheduledBackupSpecOnlineConfigurationArgs) ToScheduledBackupSpecOnlineConfigurationPtrOutput() ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return i.ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecOnlineConfigurationArgs) ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecOnlineConfigurationOutput).ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(ctx)
}

// ScheduledBackupSpecOnlineConfigurationPtrInput is an input type that accepts ScheduledBackupSpecOnlineConfigurationArgs, ScheduledBackupSpecOnlineConfigurationPtr and ScheduledBackupSpecOnlineConfigurationPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecOnlineConfigurationPtrInput` via:
//
//	        ScheduledBackupSpecOnlineConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupSpecOnlineConfigurationPtrInput interface {
	pulumi.Input

	ToScheduledBackupSpecOnlineConfigurationPtrOutput() ScheduledBackupSpecOnlineConfigurationPtrOutput
	ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(context.Context) ScheduledBackupSpecOnlineConfigurationPtrOutput
}

type scheduledBackupSpecOnlineConfigurationPtrType ScheduledBackupSpecOnlineConfigurationArgs

func ScheduledBackupSpecOnlineConfigurationPtr(v *ScheduledBackupSpecOnlineConfigurationArgs) ScheduledBackupSpecOnlineConfigurationPtrInput {
	return (*scheduledBackupSpecOnlineConfigurationPtrType)(v)
}

func (*scheduledBackupSpecOnlineConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecOnlineConfiguration)(nil)).Elem()
}

func (i *scheduledBackupSpecOnlineConfigurationPtrType) ToScheduledBackupSpecOnlineConfigurationPtrOutput() ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return i.ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupSpecOnlineConfigurationPtrType) ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecOnlineConfigurationPtrOutput)
}

// Configuration parameters to control the online/hot backup with volume snapshots
// Overrides the default settings specified in the cluster '.backup.volumeSnapshot.onlineConfiguration' stanza
type ScheduledBackupSpecOnlineConfigurationOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecOnlineConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecOnlineConfiguration)(nil)).Elem()
}

func (o ScheduledBackupSpecOnlineConfigurationOutput) ToScheduledBackupSpecOnlineConfigurationOutput() ScheduledBackupSpecOnlineConfigurationOutput {
	return o
}

func (o ScheduledBackupSpecOnlineConfigurationOutput) ToScheduledBackupSpecOnlineConfigurationOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationOutput {
	return o
}

func (o ScheduledBackupSpecOnlineConfigurationOutput) ToScheduledBackupSpecOnlineConfigurationPtrOutput() ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return o.ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupSpecOnlineConfigurationOutput) ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupSpecOnlineConfiguration) *ScheduledBackupSpecOnlineConfiguration {
		return &v
	}).(ScheduledBackupSpecOnlineConfigurationPtrOutput)
}

// Control whether the I/O workload for the backup initial checkpoint will
// be limited, according to the `checkpoint_completion_target` setting on
// the PostgreSQL server. If set to true, an immediate checkpoint will be
// used, meaning PostgreSQL will complete the checkpoint as soon as
// possible. `false` by default.
func (o ScheduledBackupSpecOnlineConfigurationOutput) ImmediateCheckpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecOnlineConfiguration) *bool { return v.ImmediateCheckpoint }).(pulumi.BoolPtrOutput)
}

// If false, the function will return immediately after the backup is completed,
// without waiting for WAL to be archived.
// This behavior is only useful with backup software that independently monitors WAL archiving.
// Otherwise, WAL required to make the backup consistent might be missing and make the backup useless.
// By default, or when this parameter is true, pg_backup_stop will wait for WAL to be archived when archiving is
// enabled.
// On a standby, this means that it will wait only when archive_mode = always.
// If write activity on the primary is low, it may be useful to run pg_switch_wal on the primary in order to trigger
// an immediate segment switch.
func (o ScheduledBackupSpecOnlineConfigurationOutput) WaitForArchive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecOnlineConfiguration) *bool { return v.WaitForArchive }).(pulumi.BoolPtrOutput)
}

type ScheduledBackupSpecOnlineConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecOnlineConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecOnlineConfiguration)(nil)).Elem()
}

func (o ScheduledBackupSpecOnlineConfigurationPtrOutput) ToScheduledBackupSpecOnlineConfigurationPtrOutput() ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return o
}

func (o ScheduledBackupSpecOnlineConfigurationPtrOutput) ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return o
}

func (o ScheduledBackupSpecOnlineConfigurationPtrOutput) Elem() ScheduledBackupSpecOnlineConfigurationOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecOnlineConfiguration) ScheduledBackupSpecOnlineConfiguration {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupSpecOnlineConfiguration
		return ret
	}).(ScheduledBackupSpecOnlineConfigurationOutput)
}

// Control whether the I/O workload for the backup initial checkpoint will
// be limited, according to the `checkpoint_completion_target` setting on
// the PostgreSQL server. If set to true, an immediate checkpoint will be
// used, meaning PostgreSQL will complete the checkpoint as soon as
// possible. `false` by default.
func (o ScheduledBackupSpecOnlineConfigurationPtrOutput) ImmediateCheckpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecOnlineConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ImmediateCheckpoint
	}).(pulumi.BoolPtrOutput)
}

// If false, the function will return immediately after the backup is completed,
// without waiting for WAL to be archived.
// This behavior is only useful with backup software that independently monitors WAL archiving.
// Otherwise, WAL required to make the backup consistent might be missing and make the backup useless.
// By default, or when this parameter is true, pg_backup_stop will wait for WAL to be archived when archiving is
// enabled.
// On a standby, this means that it will wait only when archive_mode = always.
// If write activity on the primary is low, it may be useful to run pg_switch_wal on the primary in order to trigger
// an immediate segment switch.
func (o ScheduledBackupSpecOnlineConfigurationPtrOutput) WaitForArchive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecOnlineConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.WaitForArchive
	}).(pulumi.BoolPtrOutput)
}

// Configuration parameters to control the online/hot backup with volume snapshots
// Overrides the default settings specified in the cluster '.backup.volumeSnapshot.onlineConfiguration' stanza
type ScheduledBackupSpecOnlineConfigurationPatch struct {
	// Control whether the I/O workload for the backup initial checkpoint will
	// be limited, according to the `checkpoint_completion_target` setting on
	// the PostgreSQL server. If set to true, an immediate checkpoint will be
	// used, meaning PostgreSQL will complete the checkpoint as soon as
	// possible. `false` by default.
	ImmediateCheckpoint *bool `pulumi:"immediateCheckpoint"`
	// If false, the function will return immediately after the backup is completed,
	// without waiting for WAL to be archived.
	// This behavior is only useful with backup software that independently monitors WAL archiving.
	// Otherwise, WAL required to make the backup consistent might be missing and make the backup useless.
	// By default, or when this parameter is true, pg_backup_stop will wait for WAL to be archived when archiving is
	// enabled.
	// On a standby, this means that it will wait only when archive_mode = always.
	// If write activity on the primary is low, it may be useful to run pg_switch_wal on the primary in order to trigger
	// an immediate segment switch.
	WaitForArchive *bool `pulumi:"waitForArchive"`
}

// ScheduledBackupSpecOnlineConfigurationPatchInput is an input type that accepts ScheduledBackupSpecOnlineConfigurationPatchArgs and ScheduledBackupSpecOnlineConfigurationPatchOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecOnlineConfigurationPatchInput` via:
//
//	ScheduledBackupSpecOnlineConfigurationPatchArgs{...}
type ScheduledBackupSpecOnlineConfigurationPatchInput interface {
	pulumi.Input

	ToScheduledBackupSpecOnlineConfigurationPatchOutput() ScheduledBackupSpecOnlineConfigurationPatchOutput
	ToScheduledBackupSpecOnlineConfigurationPatchOutputWithContext(context.Context) ScheduledBackupSpecOnlineConfigurationPatchOutput
}

// Configuration parameters to control the online/hot backup with volume snapshots
// Overrides the default settings specified in the cluster '.backup.volumeSnapshot.onlineConfiguration' stanza
type ScheduledBackupSpecOnlineConfigurationPatchArgs struct {
	// Control whether the I/O workload for the backup initial checkpoint will
	// be limited, according to the `checkpoint_completion_target` setting on
	// the PostgreSQL server. If set to true, an immediate checkpoint will be
	// used, meaning PostgreSQL will complete the checkpoint as soon as
	// possible. `false` by default.
	ImmediateCheckpoint pulumi.BoolPtrInput `pulumi:"immediateCheckpoint"`
	// If false, the function will return immediately after the backup is completed,
	// without waiting for WAL to be archived.
	// This behavior is only useful with backup software that independently monitors WAL archiving.
	// Otherwise, WAL required to make the backup consistent might be missing and make the backup useless.
	// By default, or when this parameter is true, pg_backup_stop will wait for WAL to be archived when archiving is
	// enabled.
	// On a standby, this means that it will wait only when archive_mode = always.
	// If write activity on the primary is low, it may be useful to run pg_switch_wal on the primary in order to trigger
	// an immediate segment switch.
	WaitForArchive pulumi.BoolPtrInput `pulumi:"waitForArchive"`
}

func (ScheduledBackupSpecOnlineConfigurationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecOnlineConfigurationPatch)(nil)).Elem()
}

func (i ScheduledBackupSpecOnlineConfigurationPatchArgs) ToScheduledBackupSpecOnlineConfigurationPatchOutput() ScheduledBackupSpecOnlineConfigurationPatchOutput {
	return i.ToScheduledBackupSpecOnlineConfigurationPatchOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecOnlineConfigurationPatchArgs) ToScheduledBackupSpecOnlineConfigurationPatchOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecOnlineConfigurationPatchOutput)
}

func (i ScheduledBackupSpecOnlineConfigurationPatchArgs) ToScheduledBackupSpecOnlineConfigurationPatchPtrOutput() ScheduledBackupSpecOnlineConfigurationPatchPtrOutput {
	return i.ToScheduledBackupSpecOnlineConfigurationPatchPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecOnlineConfigurationPatchArgs) ToScheduledBackupSpecOnlineConfigurationPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecOnlineConfigurationPatchOutput).ToScheduledBackupSpecOnlineConfigurationPatchPtrOutputWithContext(ctx)
}

// ScheduledBackupSpecOnlineConfigurationPatchPtrInput is an input type that accepts ScheduledBackupSpecOnlineConfigurationPatchArgs, ScheduledBackupSpecOnlineConfigurationPatchPtr and ScheduledBackupSpecOnlineConfigurationPatchPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecOnlineConfigurationPatchPtrInput` via:
//
//	        ScheduledBackupSpecOnlineConfigurationPatchArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupSpecOnlineConfigurationPatchPtrInput interface {
	pulumi.Input

	ToScheduledBackupSpecOnlineConfigurationPatchPtrOutput() ScheduledBackupSpecOnlineConfigurationPatchPtrOutput
	ToScheduledBackupSpecOnlineConfigurationPatchPtrOutputWithContext(context.Context) ScheduledBackupSpecOnlineConfigurationPatchPtrOutput
}

type scheduledBackupSpecOnlineConfigurationPatchPtrType ScheduledBackupSpecOnlineConfigurationPatchArgs

func ScheduledBackupSpecOnlineConfigurationPatchPtr(v *ScheduledBackupSpecOnlineConfigurationPatchArgs) ScheduledBackupSpecOnlineConfigurationPatchPtrInput {
	return (*scheduledBackupSpecOnlineConfigurationPatchPtrType)(v)
}

func (*scheduledBackupSpecOnlineConfigurationPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecOnlineConfigurationPatch)(nil)).Elem()
}

func (i *scheduledBackupSpecOnlineConfigurationPatchPtrType) ToScheduledBackupSpecOnlineConfigurationPatchPtrOutput() ScheduledBackupSpecOnlineConfigurationPatchPtrOutput {
	return i.ToScheduledBackupSpecOnlineConfigurationPatchPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupSpecOnlineConfigurationPatchPtrType) ToScheduledBackupSpecOnlineConfigurationPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecOnlineConfigurationPatchPtrOutput)
}

// Configuration parameters to control the online/hot backup with volume snapshots
// Overrides the default settings specified in the cluster '.backup.volumeSnapshot.onlineConfiguration' stanza
type ScheduledBackupSpecOnlineConfigurationPatchOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecOnlineConfigurationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecOnlineConfigurationPatch)(nil)).Elem()
}

func (o ScheduledBackupSpecOnlineConfigurationPatchOutput) ToScheduledBackupSpecOnlineConfigurationPatchOutput() ScheduledBackupSpecOnlineConfigurationPatchOutput {
	return o
}

func (o ScheduledBackupSpecOnlineConfigurationPatchOutput) ToScheduledBackupSpecOnlineConfigurationPatchOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationPatchOutput {
	return o
}

func (o ScheduledBackupSpecOnlineConfigurationPatchOutput) ToScheduledBackupSpecOnlineConfigurationPatchPtrOutput() ScheduledBackupSpecOnlineConfigurationPatchPtrOutput {
	return o.ToScheduledBackupSpecOnlineConfigurationPatchPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupSpecOnlineConfigurationPatchOutput) ToScheduledBackupSpecOnlineConfigurationPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupSpecOnlineConfigurationPatch) *ScheduledBackupSpecOnlineConfigurationPatch {
		return &v
	}).(ScheduledBackupSpecOnlineConfigurationPatchPtrOutput)
}

// Control whether the I/O workload for the backup initial checkpoint will
// be limited, according to the `checkpoint_completion_target` setting on
// the PostgreSQL server. If set to true, an immediate checkpoint will be
// used, meaning PostgreSQL will complete the checkpoint as soon as
// possible. `false` by default.
func (o ScheduledBackupSpecOnlineConfigurationPatchOutput) ImmediateCheckpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecOnlineConfigurationPatch) *bool { return v.ImmediateCheckpoint }).(pulumi.BoolPtrOutput)
}

// If false, the function will return immediately after the backup is completed,
// without waiting for WAL to be archived.
// This behavior is only useful with backup software that independently monitors WAL archiving.
// Otherwise, WAL required to make the backup consistent might be missing and make the backup useless.
// By default, or when this parameter is true, pg_backup_stop will wait for WAL to be archived when archiving is
// enabled.
// On a standby, this means that it will wait only when archive_mode = always.
// If write activity on the primary is low, it may be useful to run pg_switch_wal on the primary in order to trigger
// an immediate segment switch.
func (o ScheduledBackupSpecOnlineConfigurationPatchOutput) WaitForArchive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecOnlineConfigurationPatch) *bool { return v.WaitForArchive }).(pulumi.BoolPtrOutput)
}

type ScheduledBackupSpecOnlineConfigurationPatchPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecOnlineConfigurationPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecOnlineConfigurationPatch)(nil)).Elem()
}

func (o ScheduledBackupSpecOnlineConfigurationPatchPtrOutput) ToScheduledBackupSpecOnlineConfigurationPatchPtrOutput() ScheduledBackupSpecOnlineConfigurationPatchPtrOutput {
	return o
}

func (o ScheduledBackupSpecOnlineConfigurationPatchPtrOutput) ToScheduledBackupSpecOnlineConfigurationPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationPatchPtrOutput {
	return o
}

func (o ScheduledBackupSpecOnlineConfigurationPatchPtrOutput) Elem() ScheduledBackupSpecOnlineConfigurationPatchOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecOnlineConfigurationPatch) ScheduledBackupSpecOnlineConfigurationPatch {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupSpecOnlineConfigurationPatch
		return ret
	}).(ScheduledBackupSpecOnlineConfigurationPatchOutput)
}

// Control whether the I/O workload for the backup initial checkpoint will
// be limited, according to the `checkpoint_completion_target` setting on
// the PostgreSQL server. If set to true, an immediate checkpoint will be
// used, meaning PostgreSQL will complete the checkpoint as soon as
// possible. `false` by default.
func (o ScheduledBackupSpecOnlineConfigurationPatchPtrOutput) ImmediateCheckpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecOnlineConfigurationPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ImmediateCheckpoint
	}).(pulumi.BoolPtrOutput)
}

// If false, the function will return immediately after the backup is completed,
// without waiting for WAL to be archived.
// This behavior is only useful with backup software that independently monitors WAL archiving.
// Otherwise, WAL required to make the backup consistent might be missing and make the backup useless.
// By default, or when this parameter is true, pg_backup_stop will wait for WAL to be archived when archiving is
// enabled.
// On a standby, this means that it will wait only when archive_mode = always.
// If write activity on the primary is low, it may be useful to run pg_switch_wal on the primary in order to trigger
// an immediate segment switch.
func (o ScheduledBackupSpecOnlineConfigurationPatchPtrOutput) WaitForArchive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecOnlineConfigurationPatch) *bool {
		if v == nil {
			return nil
		}
		return v.WaitForArchive
	}).(pulumi.BoolPtrOutput)
}

// Specification of the desired behavior of the ScheduledBackup.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupSpecPatch struct {
	// Indicates which ownerReference should be put inside the created backup resources.<br />
	// - none: no owner reference for created backup objects (same behavior as before the field was introduced)<br />
	// - self: sets the Scheduled backup object as owner of the backup<br />
	// - cluster: set the cluster as owner of the backup<br />
	BackupOwnerReference *string                          `pulumi:"backupOwnerReference"`
	Cluster              *ScheduledBackupSpecClusterPatch `pulumi:"cluster"`
	// If the first backup has to be immediately start after creation or not
	Immediate *bool `pulumi:"immediate"`
	// The backup method to be used, possible options are `barmanObjectStore`,
	// `volumeSnapshot` or `plugin`. Defaults to: `barmanObjectStore`.
	Method *string `pulumi:"method"`
	// Whether the default type of backup with volume snapshots is
	// online/hot (`true`, default) or offline/cold (`false`)
	// Overrides the default setting specified in the cluster field '.spec.backup.volumeSnapshot.online'
	Online              *bool                                        `pulumi:"online"`
	OnlineConfiguration *ScheduledBackupSpecOnlineConfigurationPatch `pulumi:"onlineConfiguration"`
	PluginConfiguration *ScheduledBackupSpecPluginConfigurationPatch `pulumi:"pluginConfiguration"`
	// The schedule does not follow the same format used in Kubernetes CronJobs
	// as it includes an additional seconds specifier,
	// see https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
	Schedule *string `pulumi:"schedule"`
	// If this backup is suspended or not
	Suspend *bool `pulumi:"suspend"`
	// The policy to decide which instance should perform this backup. If empty,
	// it defaults to `cluster.spec.backup.target`.
	// Available options are empty string, `primary` and `prefer-standby`.
	// `primary` to have backups run always on primary instances,
	// `prefer-standby` to have backups run preferably on the most updated
	// standby, if available.
	Target *string `pulumi:"target"`
}

// ScheduledBackupSpecPatchInput is an input type that accepts ScheduledBackupSpecPatchArgs and ScheduledBackupSpecPatchOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecPatchInput` via:
//
//	ScheduledBackupSpecPatchArgs{...}
type ScheduledBackupSpecPatchInput interface {
	pulumi.Input

	ToScheduledBackupSpecPatchOutput() ScheduledBackupSpecPatchOutput
	ToScheduledBackupSpecPatchOutputWithContext(context.Context) ScheduledBackupSpecPatchOutput
}

// Specification of the desired behavior of the ScheduledBackup.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupSpecPatchArgs struct {
	// Indicates which ownerReference should be put inside the created backup resources.<br />
	// - none: no owner reference for created backup objects (same behavior as before the field was introduced)<br />
	// - self: sets the Scheduled backup object as owner of the backup<br />
	// - cluster: set the cluster as owner of the backup<br />
	BackupOwnerReference pulumi.StringPtrInput                   `pulumi:"backupOwnerReference"`
	Cluster              ScheduledBackupSpecClusterPatchPtrInput `pulumi:"cluster"`
	// If the first backup has to be immediately start after creation or not
	Immediate pulumi.BoolPtrInput `pulumi:"immediate"`
	// The backup method to be used, possible options are `barmanObjectStore`,
	// `volumeSnapshot` or `plugin`. Defaults to: `barmanObjectStore`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Whether the default type of backup with volume snapshots is
	// online/hot (`true`, default) or offline/cold (`false`)
	// Overrides the default setting specified in the cluster field '.spec.backup.volumeSnapshot.online'
	Online              pulumi.BoolPtrInput                                 `pulumi:"online"`
	OnlineConfiguration ScheduledBackupSpecOnlineConfigurationPatchPtrInput `pulumi:"onlineConfiguration"`
	PluginConfiguration ScheduledBackupSpecPluginConfigurationPatchPtrInput `pulumi:"pluginConfiguration"`
	// The schedule does not follow the same format used in Kubernetes CronJobs
	// as it includes an additional seconds specifier,
	// see https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
	Schedule pulumi.StringPtrInput `pulumi:"schedule"`
	// If this backup is suspended or not
	Suspend pulumi.BoolPtrInput `pulumi:"suspend"`
	// The policy to decide which instance should perform this backup. If empty,
	// it defaults to `cluster.spec.backup.target`.
	// Available options are empty string, `primary` and `prefer-standby`.
	// `primary` to have backups run always on primary instances,
	// `prefer-standby` to have backups run preferably on the most updated
	// standby, if available.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (ScheduledBackupSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecPatch)(nil)).Elem()
}

func (i ScheduledBackupSpecPatchArgs) ToScheduledBackupSpecPatchOutput() ScheduledBackupSpecPatchOutput {
	return i.ToScheduledBackupSpecPatchOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecPatchArgs) ToScheduledBackupSpecPatchOutputWithContext(ctx context.Context) ScheduledBackupSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecPatchOutput)
}

func (i ScheduledBackupSpecPatchArgs) ToScheduledBackupSpecPatchPtrOutput() ScheduledBackupSpecPatchPtrOutput {
	return i.ToScheduledBackupSpecPatchPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecPatchArgs) ToScheduledBackupSpecPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecPatchOutput).ToScheduledBackupSpecPatchPtrOutputWithContext(ctx)
}

// ScheduledBackupSpecPatchPtrInput is an input type that accepts ScheduledBackupSpecPatchArgs, ScheduledBackupSpecPatchPtr and ScheduledBackupSpecPatchPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecPatchPtrInput` via:
//
//	        ScheduledBackupSpecPatchArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupSpecPatchPtrInput interface {
	pulumi.Input

	ToScheduledBackupSpecPatchPtrOutput() ScheduledBackupSpecPatchPtrOutput
	ToScheduledBackupSpecPatchPtrOutputWithContext(context.Context) ScheduledBackupSpecPatchPtrOutput
}

type scheduledBackupSpecPatchPtrType ScheduledBackupSpecPatchArgs

func ScheduledBackupSpecPatchPtr(v *ScheduledBackupSpecPatchArgs) ScheduledBackupSpecPatchPtrInput {
	return (*scheduledBackupSpecPatchPtrType)(v)
}

func (*scheduledBackupSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecPatch)(nil)).Elem()
}

func (i *scheduledBackupSpecPatchPtrType) ToScheduledBackupSpecPatchPtrOutput() ScheduledBackupSpecPatchPtrOutput {
	return i.ToScheduledBackupSpecPatchPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupSpecPatchPtrType) ToScheduledBackupSpecPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecPatchPtrOutput)
}

// Specification of the desired behavior of the ScheduledBackup.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupSpecPatchOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecPatch)(nil)).Elem()
}

func (o ScheduledBackupSpecPatchOutput) ToScheduledBackupSpecPatchOutput() ScheduledBackupSpecPatchOutput {
	return o
}

func (o ScheduledBackupSpecPatchOutput) ToScheduledBackupSpecPatchOutputWithContext(ctx context.Context) ScheduledBackupSpecPatchOutput {
	return o
}

func (o ScheduledBackupSpecPatchOutput) ToScheduledBackupSpecPatchPtrOutput() ScheduledBackupSpecPatchPtrOutput {
	return o.ToScheduledBackupSpecPatchPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupSpecPatchOutput) ToScheduledBackupSpecPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupSpecPatch) *ScheduledBackupSpecPatch {
		return &v
	}).(ScheduledBackupSpecPatchPtrOutput)
}

// Indicates which ownerReference should be put inside the created backup resources.<br />
// - none: no owner reference for created backup objects (same behavior as before the field was introduced)<br />
// - self: sets the Scheduled backup object as owner of the backup<br />
// - cluster: set the cluster as owner of the backup<br />
func (o ScheduledBackupSpecPatchOutput) BackupOwnerReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPatch) *string { return v.BackupOwnerReference }).(pulumi.StringPtrOutput)
}

func (o ScheduledBackupSpecPatchOutput) Cluster() ScheduledBackupSpecClusterPatchPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPatch) *ScheduledBackupSpecClusterPatch { return v.Cluster }).(ScheduledBackupSpecClusterPatchPtrOutput)
}

// If the first backup has to be immediately start after creation or not
func (o ScheduledBackupSpecPatchOutput) Immediate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPatch) *bool { return v.Immediate }).(pulumi.BoolPtrOutput)
}

// The backup method to be used, possible options are `barmanObjectStore`,
// `volumeSnapshot` or `plugin`. Defaults to: `barmanObjectStore`.
func (o ScheduledBackupSpecPatchOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPatch) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Whether the default type of backup with volume snapshots is
// online/hot (`true`, default) or offline/cold (`false`)
// Overrides the default setting specified in the cluster field '.spec.backup.volumeSnapshot.online'
func (o ScheduledBackupSpecPatchOutput) Online() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPatch) *bool { return v.Online }).(pulumi.BoolPtrOutput)
}

func (o ScheduledBackupSpecPatchOutput) OnlineConfiguration() ScheduledBackupSpecOnlineConfigurationPatchPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPatch) *ScheduledBackupSpecOnlineConfigurationPatch {
		return v.OnlineConfiguration
	}).(ScheduledBackupSpecOnlineConfigurationPatchPtrOutput)
}

func (o ScheduledBackupSpecPatchOutput) PluginConfiguration() ScheduledBackupSpecPluginConfigurationPatchPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPatch) *ScheduledBackupSpecPluginConfigurationPatch {
		return v.PluginConfiguration
	}).(ScheduledBackupSpecPluginConfigurationPatchPtrOutput)
}

// The schedule does not follow the same format used in Kubernetes CronJobs
// as it includes an additional seconds specifier,
// see https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
func (o ScheduledBackupSpecPatchOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPatch) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

// If this backup is suspended or not
func (o ScheduledBackupSpecPatchOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPatch) *bool { return v.Suspend }).(pulumi.BoolPtrOutput)
}

// The policy to decide which instance should perform this backup. If empty,
// it defaults to `cluster.spec.backup.target`.
// Available options are empty string, `primary` and `prefer-standby`.
// `primary` to have backups run always on primary instances,
// `prefer-standby` to have backups run preferably on the most updated
// standby, if available.
func (o ScheduledBackupSpecPatchOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPatch) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ScheduledBackupSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecPatch)(nil)).Elem()
}

func (o ScheduledBackupSpecPatchPtrOutput) ToScheduledBackupSpecPatchPtrOutput() ScheduledBackupSpecPatchPtrOutput {
	return o
}

func (o ScheduledBackupSpecPatchPtrOutput) ToScheduledBackupSpecPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPatchPtrOutput {
	return o
}

func (o ScheduledBackupSpecPatchPtrOutput) Elem() ScheduledBackupSpecPatchOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPatch) ScheduledBackupSpecPatch {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupSpecPatch
		return ret
	}).(ScheduledBackupSpecPatchOutput)
}

// Indicates which ownerReference should be put inside the created backup resources.<br />
// - none: no owner reference for created backup objects (same behavior as before the field was introduced)<br />
// - self: sets the Scheduled backup object as owner of the backup<br />
// - cluster: set the cluster as owner of the backup<br />
func (o ScheduledBackupSpecPatchPtrOutput) BackupOwnerReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.BackupOwnerReference
	}).(pulumi.StringPtrOutput)
}

func (o ScheduledBackupSpecPatchPtrOutput) Cluster() ScheduledBackupSpecClusterPatchPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPatch) *ScheduledBackupSpecClusterPatch {
		if v == nil {
			return nil
		}
		return v.Cluster
	}).(ScheduledBackupSpecClusterPatchPtrOutput)
}

// If the first backup has to be immediately start after creation or not
func (o ScheduledBackupSpecPatchPtrOutput) Immediate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Immediate
	}).(pulumi.BoolPtrOutput)
}

// The backup method to be used, possible options are `barmanObjectStore`,
// `volumeSnapshot` or `plugin`. Defaults to: `barmanObjectStore`.
func (o ScheduledBackupSpecPatchPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Whether the default type of backup with volume snapshots is
// online/hot (`true`, default) or offline/cold (`false`)
// Overrides the default setting specified in the cluster field '.spec.backup.volumeSnapshot.online'
func (o ScheduledBackupSpecPatchPtrOutput) Online() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Online
	}).(pulumi.BoolPtrOutput)
}

func (o ScheduledBackupSpecPatchPtrOutput) OnlineConfiguration() ScheduledBackupSpecOnlineConfigurationPatchPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPatch) *ScheduledBackupSpecOnlineConfigurationPatch {
		if v == nil {
			return nil
		}
		return v.OnlineConfiguration
	}).(ScheduledBackupSpecOnlineConfigurationPatchPtrOutput)
}

func (o ScheduledBackupSpecPatchPtrOutput) PluginConfiguration() ScheduledBackupSpecPluginConfigurationPatchPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPatch) *ScheduledBackupSpecPluginConfigurationPatch {
		if v == nil {
			return nil
		}
		return v.PluginConfiguration
	}).(ScheduledBackupSpecPluginConfigurationPatchPtrOutput)
}

// The schedule does not follow the same format used in Kubernetes CronJobs
// as it includes an additional seconds specifier,
// see https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
func (o ScheduledBackupSpecPatchPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringPtrOutput)
}

// If this backup is suspended or not
func (o ScheduledBackupSpecPatchPtrOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Suspend
	}).(pulumi.BoolPtrOutput)
}

// The policy to decide which instance should perform this backup. If empty,
// it defaults to `cluster.spec.backup.target`.
// Available options are empty string, `primary` and `prefer-standby`.
// `primary` to have backups run always on primary instances,
// `prefer-standby` to have backups run preferably on the most updated
// standby, if available.
func (o ScheduledBackupSpecPatchPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// Configuration parameters passed to the plugin managing this backup
type ScheduledBackupSpecPluginConfiguration struct {
	// Name is the name of the plugin managing this backup
	Name *string `pulumi:"name"`
	// Parameters are the configuration parameters passed to the backup
	// plugin for this backup
	Parameters map[string]string `pulumi:"parameters"`
}

// ScheduledBackupSpecPluginConfigurationInput is an input type that accepts ScheduledBackupSpecPluginConfigurationArgs and ScheduledBackupSpecPluginConfigurationOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecPluginConfigurationInput` via:
//
//	ScheduledBackupSpecPluginConfigurationArgs{...}
type ScheduledBackupSpecPluginConfigurationInput interface {
	pulumi.Input

	ToScheduledBackupSpecPluginConfigurationOutput() ScheduledBackupSpecPluginConfigurationOutput
	ToScheduledBackupSpecPluginConfigurationOutputWithContext(context.Context) ScheduledBackupSpecPluginConfigurationOutput
}

// Configuration parameters passed to the plugin managing this backup
type ScheduledBackupSpecPluginConfigurationArgs struct {
	// Name is the name of the plugin managing this backup
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Parameters are the configuration parameters passed to the backup
	// plugin for this backup
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (ScheduledBackupSpecPluginConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecPluginConfiguration)(nil)).Elem()
}

func (i ScheduledBackupSpecPluginConfigurationArgs) ToScheduledBackupSpecPluginConfigurationOutput() ScheduledBackupSpecPluginConfigurationOutput {
	return i.ToScheduledBackupSpecPluginConfigurationOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecPluginConfigurationArgs) ToScheduledBackupSpecPluginConfigurationOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecPluginConfigurationOutput)
}

func (i ScheduledBackupSpecPluginConfigurationArgs) ToScheduledBackupSpecPluginConfigurationPtrOutput() ScheduledBackupSpecPluginConfigurationPtrOutput {
	return i.ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecPluginConfigurationArgs) ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecPluginConfigurationOutput).ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(ctx)
}

// ScheduledBackupSpecPluginConfigurationPtrInput is an input type that accepts ScheduledBackupSpecPluginConfigurationArgs, ScheduledBackupSpecPluginConfigurationPtr and ScheduledBackupSpecPluginConfigurationPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecPluginConfigurationPtrInput` via:
//
//	        ScheduledBackupSpecPluginConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupSpecPluginConfigurationPtrInput interface {
	pulumi.Input

	ToScheduledBackupSpecPluginConfigurationPtrOutput() ScheduledBackupSpecPluginConfigurationPtrOutput
	ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(context.Context) ScheduledBackupSpecPluginConfigurationPtrOutput
}

type scheduledBackupSpecPluginConfigurationPtrType ScheduledBackupSpecPluginConfigurationArgs

func ScheduledBackupSpecPluginConfigurationPtr(v *ScheduledBackupSpecPluginConfigurationArgs) ScheduledBackupSpecPluginConfigurationPtrInput {
	return (*scheduledBackupSpecPluginConfigurationPtrType)(v)
}

func (*scheduledBackupSpecPluginConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecPluginConfiguration)(nil)).Elem()
}

func (i *scheduledBackupSpecPluginConfigurationPtrType) ToScheduledBackupSpecPluginConfigurationPtrOutput() ScheduledBackupSpecPluginConfigurationPtrOutput {
	return i.ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupSpecPluginConfigurationPtrType) ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecPluginConfigurationPtrOutput)
}

// Configuration parameters passed to the plugin managing this backup
type ScheduledBackupSpecPluginConfigurationOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecPluginConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecPluginConfiguration)(nil)).Elem()
}

func (o ScheduledBackupSpecPluginConfigurationOutput) ToScheduledBackupSpecPluginConfigurationOutput() ScheduledBackupSpecPluginConfigurationOutput {
	return o
}

func (o ScheduledBackupSpecPluginConfigurationOutput) ToScheduledBackupSpecPluginConfigurationOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationOutput {
	return o
}

func (o ScheduledBackupSpecPluginConfigurationOutput) ToScheduledBackupSpecPluginConfigurationPtrOutput() ScheduledBackupSpecPluginConfigurationPtrOutput {
	return o.ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupSpecPluginConfigurationOutput) ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupSpecPluginConfiguration) *ScheduledBackupSpecPluginConfiguration {
		return &v
	}).(ScheduledBackupSpecPluginConfigurationPtrOutput)
}

// Name is the name of the plugin managing this backup
func (o ScheduledBackupSpecPluginConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPluginConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Parameters are the configuration parameters passed to the backup
// plugin for this backup
func (o ScheduledBackupSpecPluginConfigurationOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPluginConfiguration) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type ScheduledBackupSpecPluginConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecPluginConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecPluginConfiguration)(nil)).Elem()
}

func (o ScheduledBackupSpecPluginConfigurationPtrOutput) ToScheduledBackupSpecPluginConfigurationPtrOutput() ScheduledBackupSpecPluginConfigurationPtrOutput {
	return o
}

func (o ScheduledBackupSpecPluginConfigurationPtrOutput) ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationPtrOutput {
	return o
}

func (o ScheduledBackupSpecPluginConfigurationPtrOutput) Elem() ScheduledBackupSpecPluginConfigurationOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPluginConfiguration) ScheduledBackupSpecPluginConfiguration {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupSpecPluginConfiguration
		return ret
	}).(ScheduledBackupSpecPluginConfigurationOutput)
}

// Name is the name of the plugin managing this backup
func (o ScheduledBackupSpecPluginConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPluginConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Parameters are the configuration parameters passed to the backup
// plugin for this backup
func (o ScheduledBackupSpecPluginConfigurationPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPluginConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// Configuration parameters passed to the plugin managing this backup
type ScheduledBackupSpecPluginConfigurationPatch struct {
	// Name is the name of the plugin managing this backup
	Name *string `pulumi:"name"`
	// Parameters are the configuration parameters passed to the backup
	// plugin for this backup
	Parameters map[string]string `pulumi:"parameters"`
}

// ScheduledBackupSpecPluginConfigurationPatchInput is an input type that accepts ScheduledBackupSpecPluginConfigurationPatchArgs and ScheduledBackupSpecPluginConfigurationPatchOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecPluginConfigurationPatchInput` via:
//
//	ScheduledBackupSpecPluginConfigurationPatchArgs{...}
type ScheduledBackupSpecPluginConfigurationPatchInput interface {
	pulumi.Input

	ToScheduledBackupSpecPluginConfigurationPatchOutput() ScheduledBackupSpecPluginConfigurationPatchOutput
	ToScheduledBackupSpecPluginConfigurationPatchOutputWithContext(context.Context) ScheduledBackupSpecPluginConfigurationPatchOutput
}

// Configuration parameters passed to the plugin managing this backup
type ScheduledBackupSpecPluginConfigurationPatchArgs struct {
	// Name is the name of the plugin managing this backup
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Parameters are the configuration parameters passed to the backup
	// plugin for this backup
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (ScheduledBackupSpecPluginConfigurationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecPluginConfigurationPatch)(nil)).Elem()
}

func (i ScheduledBackupSpecPluginConfigurationPatchArgs) ToScheduledBackupSpecPluginConfigurationPatchOutput() ScheduledBackupSpecPluginConfigurationPatchOutput {
	return i.ToScheduledBackupSpecPluginConfigurationPatchOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecPluginConfigurationPatchArgs) ToScheduledBackupSpecPluginConfigurationPatchOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecPluginConfigurationPatchOutput)
}

func (i ScheduledBackupSpecPluginConfigurationPatchArgs) ToScheduledBackupSpecPluginConfigurationPatchPtrOutput() ScheduledBackupSpecPluginConfigurationPatchPtrOutput {
	return i.ToScheduledBackupSpecPluginConfigurationPatchPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecPluginConfigurationPatchArgs) ToScheduledBackupSpecPluginConfigurationPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecPluginConfigurationPatchOutput).ToScheduledBackupSpecPluginConfigurationPatchPtrOutputWithContext(ctx)
}

// ScheduledBackupSpecPluginConfigurationPatchPtrInput is an input type that accepts ScheduledBackupSpecPluginConfigurationPatchArgs, ScheduledBackupSpecPluginConfigurationPatchPtr and ScheduledBackupSpecPluginConfigurationPatchPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecPluginConfigurationPatchPtrInput` via:
//
//	        ScheduledBackupSpecPluginConfigurationPatchArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupSpecPluginConfigurationPatchPtrInput interface {
	pulumi.Input

	ToScheduledBackupSpecPluginConfigurationPatchPtrOutput() ScheduledBackupSpecPluginConfigurationPatchPtrOutput
	ToScheduledBackupSpecPluginConfigurationPatchPtrOutputWithContext(context.Context) ScheduledBackupSpecPluginConfigurationPatchPtrOutput
}

type scheduledBackupSpecPluginConfigurationPatchPtrType ScheduledBackupSpecPluginConfigurationPatchArgs

func ScheduledBackupSpecPluginConfigurationPatchPtr(v *ScheduledBackupSpecPluginConfigurationPatchArgs) ScheduledBackupSpecPluginConfigurationPatchPtrInput {
	return (*scheduledBackupSpecPluginConfigurationPatchPtrType)(v)
}

func (*scheduledBackupSpecPluginConfigurationPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecPluginConfigurationPatch)(nil)).Elem()
}

func (i *scheduledBackupSpecPluginConfigurationPatchPtrType) ToScheduledBackupSpecPluginConfigurationPatchPtrOutput() ScheduledBackupSpecPluginConfigurationPatchPtrOutput {
	return i.ToScheduledBackupSpecPluginConfigurationPatchPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupSpecPluginConfigurationPatchPtrType) ToScheduledBackupSpecPluginConfigurationPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecPluginConfigurationPatchPtrOutput)
}

// Configuration parameters passed to the plugin managing this backup
type ScheduledBackupSpecPluginConfigurationPatchOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecPluginConfigurationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecPluginConfigurationPatch)(nil)).Elem()
}

func (o ScheduledBackupSpecPluginConfigurationPatchOutput) ToScheduledBackupSpecPluginConfigurationPatchOutput() ScheduledBackupSpecPluginConfigurationPatchOutput {
	return o
}

func (o ScheduledBackupSpecPluginConfigurationPatchOutput) ToScheduledBackupSpecPluginConfigurationPatchOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationPatchOutput {
	return o
}

func (o ScheduledBackupSpecPluginConfigurationPatchOutput) ToScheduledBackupSpecPluginConfigurationPatchPtrOutput() ScheduledBackupSpecPluginConfigurationPatchPtrOutput {
	return o.ToScheduledBackupSpecPluginConfigurationPatchPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupSpecPluginConfigurationPatchOutput) ToScheduledBackupSpecPluginConfigurationPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupSpecPluginConfigurationPatch) *ScheduledBackupSpecPluginConfigurationPatch {
		return &v
	}).(ScheduledBackupSpecPluginConfigurationPatchPtrOutput)
}

// Name is the name of the plugin managing this backup
func (o ScheduledBackupSpecPluginConfigurationPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPluginConfigurationPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Parameters are the configuration parameters passed to the backup
// plugin for this backup
func (o ScheduledBackupSpecPluginConfigurationPatchOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPluginConfigurationPatch) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type ScheduledBackupSpecPluginConfigurationPatchPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecPluginConfigurationPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecPluginConfigurationPatch)(nil)).Elem()
}

func (o ScheduledBackupSpecPluginConfigurationPatchPtrOutput) ToScheduledBackupSpecPluginConfigurationPatchPtrOutput() ScheduledBackupSpecPluginConfigurationPatchPtrOutput {
	return o
}

func (o ScheduledBackupSpecPluginConfigurationPatchPtrOutput) ToScheduledBackupSpecPluginConfigurationPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationPatchPtrOutput {
	return o
}

func (o ScheduledBackupSpecPluginConfigurationPatchPtrOutput) Elem() ScheduledBackupSpecPluginConfigurationPatchOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPluginConfigurationPatch) ScheduledBackupSpecPluginConfigurationPatch {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupSpecPluginConfigurationPatch
		return ret
	}).(ScheduledBackupSpecPluginConfigurationPatchOutput)
}

// Name is the name of the plugin managing this backup
func (o ScheduledBackupSpecPluginConfigurationPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPluginConfigurationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Parameters are the configuration parameters passed to the backup
// plugin for this backup
func (o ScheduledBackupSpecPluginConfigurationPatchPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPluginConfigurationPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// Most recently observed status of the ScheduledBackup. This data may not be up
// to date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupStatus struct {
	// The latest time the schedule
	LastCheckTime *string `pulumi:"lastCheckTime"`
	// Information when was the last time that backup was successfully scheduled.
	LastScheduleTime *string `pulumi:"lastScheduleTime"`
	// Next time we will run a backup
	NextScheduleTime *string `pulumi:"nextScheduleTime"`
}

// ScheduledBackupStatusInput is an input type that accepts ScheduledBackupStatusArgs and ScheduledBackupStatusOutput values.
// You can construct a concrete instance of `ScheduledBackupStatusInput` via:
//
//	ScheduledBackupStatusArgs{...}
type ScheduledBackupStatusInput interface {
	pulumi.Input

	ToScheduledBackupStatusOutput() ScheduledBackupStatusOutput
	ToScheduledBackupStatusOutputWithContext(context.Context) ScheduledBackupStatusOutput
}

// Most recently observed status of the ScheduledBackup. This data may not be up
// to date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupStatusArgs struct {
	// The latest time the schedule
	LastCheckTime pulumi.StringPtrInput `pulumi:"lastCheckTime"`
	// Information when was the last time that backup was successfully scheduled.
	LastScheduleTime pulumi.StringPtrInput `pulumi:"lastScheduleTime"`
	// Next time we will run a backup
	NextScheduleTime pulumi.StringPtrInput `pulumi:"nextScheduleTime"`
}

func (ScheduledBackupStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupStatus)(nil)).Elem()
}

func (i ScheduledBackupStatusArgs) ToScheduledBackupStatusOutput() ScheduledBackupStatusOutput {
	return i.ToScheduledBackupStatusOutputWithContext(context.Background())
}

func (i ScheduledBackupStatusArgs) ToScheduledBackupStatusOutputWithContext(ctx context.Context) ScheduledBackupStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupStatusOutput)
}

func (i ScheduledBackupStatusArgs) ToScheduledBackupStatusPtrOutput() ScheduledBackupStatusPtrOutput {
	return i.ToScheduledBackupStatusPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupStatusArgs) ToScheduledBackupStatusPtrOutputWithContext(ctx context.Context) ScheduledBackupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupStatusOutput).ToScheduledBackupStatusPtrOutputWithContext(ctx)
}

// ScheduledBackupStatusPtrInput is an input type that accepts ScheduledBackupStatusArgs, ScheduledBackupStatusPtr and ScheduledBackupStatusPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupStatusPtrInput` via:
//
//	        ScheduledBackupStatusArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupStatusPtrInput interface {
	pulumi.Input

	ToScheduledBackupStatusPtrOutput() ScheduledBackupStatusPtrOutput
	ToScheduledBackupStatusPtrOutputWithContext(context.Context) ScheduledBackupStatusPtrOutput
}

type scheduledBackupStatusPtrType ScheduledBackupStatusArgs

func ScheduledBackupStatusPtr(v *ScheduledBackupStatusArgs) ScheduledBackupStatusPtrInput {
	return (*scheduledBackupStatusPtrType)(v)
}

func (*scheduledBackupStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupStatus)(nil)).Elem()
}

func (i *scheduledBackupStatusPtrType) ToScheduledBackupStatusPtrOutput() ScheduledBackupStatusPtrOutput {
	return i.ToScheduledBackupStatusPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupStatusPtrType) ToScheduledBackupStatusPtrOutputWithContext(ctx context.Context) ScheduledBackupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupStatusPtrOutput)
}

// Most recently observed status of the ScheduledBackup. This data may not be up
// to date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupStatusOutput struct{ *pulumi.OutputState }

func (ScheduledBackupStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupStatus)(nil)).Elem()
}

func (o ScheduledBackupStatusOutput) ToScheduledBackupStatusOutput() ScheduledBackupStatusOutput {
	return o
}

func (o ScheduledBackupStatusOutput) ToScheduledBackupStatusOutputWithContext(ctx context.Context) ScheduledBackupStatusOutput {
	return o
}

func (o ScheduledBackupStatusOutput) ToScheduledBackupStatusPtrOutput() ScheduledBackupStatusPtrOutput {
	return o.ToScheduledBackupStatusPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupStatusOutput) ToScheduledBackupStatusPtrOutputWithContext(ctx context.Context) ScheduledBackupStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupStatus) *ScheduledBackupStatus {
		return &v
	}).(ScheduledBackupStatusPtrOutput)
}

// The latest time the schedule
func (o ScheduledBackupStatusOutput) LastCheckTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupStatus) *string { return v.LastCheckTime }).(pulumi.StringPtrOutput)
}

// Information when was the last time that backup was successfully scheduled.
func (o ScheduledBackupStatusOutput) LastScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupStatus) *string { return v.LastScheduleTime }).(pulumi.StringPtrOutput)
}

// Next time we will run a backup
func (o ScheduledBackupStatusOutput) NextScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupStatus) *string { return v.NextScheduleTime }).(pulumi.StringPtrOutput)
}

type ScheduledBackupStatusPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupStatus)(nil)).Elem()
}

func (o ScheduledBackupStatusPtrOutput) ToScheduledBackupStatusPtrOutput() ScheduledBackupStatusPtrOutput {
	return o
}

func (o ScheduledBackupStatusPtrOutput) ToScheduledBackupStatusPtrOutputWithContext(ctx context.Context) ScheduledBackupStatusPtrOutput {
	return o
}

func (o ScheduledBackupStatusPtrOutput) Elem() ScheduledBackupStatusOutput {
	return o.ApplyT(func(v *ScheduledBackupStatus) ScheduledBackupStatus {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupStatus
		return ret
	}).(ScheduledBackupStatusOutput)
}

// The latest time the schedule
func (o ScheduledBackupStatusPtrOutput) LastCheckTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastCheckTime
	}).(pulumi.StringPtrOutput)
}

// Information when was the last time that backup was successfully scheduled.
func (o ScheduledBackupStatusPtrOutput) LastScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastScheduleTime
	}).(pulumi.StringPtrOutput)
}

// Next time we will run a backup
func (o ScheduledBackupStatusPtrOutput) NextScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupStatus) *string {
		if v == nil {
			return nil
		}
		return v.NextScheduleTime
	}).(pulumi.StringPtrOutput)
}

// Most recently observed status of the ScheduledBackup. This data may not be up
// to date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupStatusPatch struct {
	// The latest time the schedule
	LastCheckTime *string `pulumi:"lastCheckTime"`
	// Information when was the last time that backup was successfully scheduled.
	LastScheduleTime *string `pulumi:"lastScheduleTime"`
	// Next time we will run a backup
	NextScheduleTime *string `pulumi:"nextScheduleTime"`
}

// ScheduledBackupStatusPatchInput is an input type that accepts ScheduledBackupStatusPatchArgs and ScheduledBackupStatusPatchOutput values.
// You can construct a concrete instance of `ScheduledBackupStatusPatchInput` via:
//
//	ScheduledBackupStatusPatchArgs{...}
type ScheduledBackupStatusPatchInput interface {
	pulumi.Input

	ToScheduledBackupStatusPatchOutput() ScheduledBackupStatusPatchOutput
	ToScheduledBackupStatusPatchOutputWithContext(context.Context) ScheduledBackupStatusPatchOutput
}

// Most recently observed status of the ScheduledBackup. This data may not be up
// to date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupStatusPatchArgs struct {
	// The latest time the schedule
	LastCheckTime pulumi.StringPtrInput `pulumi:"lastCheckTime"`
	// Information when was the last time that backup was successfully scheduled.
	LastScheduleTime pulumi.StringPtrInput `pulumi:"lastScheduleTime"`
	// Next time we will run a backup
	NextScheduleTime pulumi.StringPtrInput `pulumi:"nextScheduleTime"`
}

func (ScheduledBackupStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupStatusPatch)(nil)).Elem()
}

func (i ScheduledBackupStatusPatchArgs) ToScheduledBackupStatusPatchOutput() ScheduledBackupStatusPatchOutput {
	return i.ToScheduledBackupStatusPatchOutputWithContext(context.Background())
}

func (i ScheduledBackupStatusPatchArgs) ToScheduledBackupStatusPatchOutputWithContext(ctx context.Context) ScheduledBackupStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupStatusPatchOutput)
}

func (i ScheduledBackupStatusPatchArgs) ToScheduledBackupStatusPatchPtrOutput() ScheduledBackupStatusPatchPtrOutput {
	return i.ToScheduledBackupStatusPatchPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupStatusPatchArgs) ToScheduledBackupStatusPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupStatusPatchOutput).ToScheduledBackupStatusPatchPtrOutputWithContext(ctx)
}

// ScheduledBackupStatusPatchPtrInput is an input type that accepts ScheduledBackupStatusPatchArgs, ScheduledBackupStatusPatchPtr and ScheduledBackupStatusPatchPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupStatusPatchPtrInput` via:
//
//	        ScheduledBackupStatusPatchArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupStatusPatchPtrInput interface {
	pulumi.Input

	ToScheduledBackupStatusPatchPtrOutput() ScheduledBackupStatusPatchPtrOutput
	ToScheduledBackupStatusPatchPtrOutputWithContext(context.Context) ScheduledBackupStatusPatchPtrOutput
}

type scheduledBackupStatusPatchPtrType ScheduledBackupStatusPatchArgs

func ScheduledBackupStatusPatchPtr(v *ScheduledBackupStatusPatchArgs) ScheduledBackupStatusPatchPtrInput {
	return (*scheduledBackupStatusPatchPtrType)(v)
}

func (*scheduledBackupStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupStatusPatch)(nil)).Elem()
}

func (i *scheduledBackupStatusPatchPtrType) ToScheduledBackupStatusPatchPtrOutput() ScheduledBackupStatusPatchPtrOutput {
	return i.ToScheduledBackupStatusPatchPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupStatusPatchPtrType) ToScheduledBackupStatusPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupStatusPatchPtrOutput)
}

// Most recently observed status of the ScheduledBackup. This data may not be up
// to date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupStatusPatchOutput struct{ *pulumi.OutputState }

func (ScheduledBackupStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupStatusPatch)(nil)).Elem()
}

func (o ScheduledBackupStatusPatchOutput) ToScheduledBackupStatusPatchOutput() ScheduledBackupStatusPatchOutput {
	return o
}

func (o ScheduledBackupStatusPatchOutput) ToScheduledBackupStatusPatchOutputWithContext(ctx context.Context) ScheduledBackupStatusPatchOutput {
	return o
}

func (o ScheduledBackupStatusPatchOutput) ToScheduledBackupStatusPatchPtrOutput() ScheduledBackupStatusPatchPtrOutput {
	return o.ToScheduledBackupStatusPatchPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupStatusPatchOutput) ToScheduledBackupStatusPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupStatusPatch) *ScheduledBackupStatusPatch {
		return &v
	}).(ScheduledBackupStatusPatchPtrOutput)
}

// The latest time the schedule
func (o ScheduledBackupStatusPatchOutput) LastCheckTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupStatusPatch) *string { return v.LastCheckTime }).(pulumi.StringPtrOutput)
}

// Information when was the last time that backup was successfully scheduled.
func (o ScheduledBackupStatusPatchOutput) LastScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupStatusPatch) *string { return v.LastScheduleTime }).(pulumi.StringPtrOutput)
}

// Next time we will run a backup
func (o ScheduledBackupStatusPatchOutput) NextScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupStatusPatch) *string { return v.NextScheduleTime }).(pulumi.StringPtrOutput)
}

type ScheduledBackupStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupStatusPatch)(nil)).Elem()
}

func (o ScheduledBackupStatusPatchPtrOutput) ToScheduledBackupStatusPatchPtrOutput() ScheduledBackupStatusPatchPtrOutput {
	return o
}

func (o ScheduledBackupStatusPatchPtrOutput) ToScheduledBackupStatusPatchPtrOutputWithContext(ctx context.Context) ScheduledBackupStatusPatchPtrOutput {
	return o
}

func (o ScheduledBackupStatusPatchPtrOutput) Elem() ScheduledBackupStatusPatchOutput {
	return o.ApplyT(func(v *ScheduledBackupStatusPatch) ScheduledBackupStatusPatch {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupStatusPatch
		return ret
	}).(ScheduledBackupStatusPatchOutput)
}

// The latest time the schedule
func (o ScheduledBackupStatusPatchPtrOutput) LastCheckTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.LastCheckTime
	}).(pulumi.StringPtrOutput)
}

// Information when was the last time that backup was successfully scheduled.
func (o ScheduledBackupStatusPatchPtrOutput) LastScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.LastScheduleTime
	}).(pulumi.StringPtrOutput)
}

// Next time we will run a backup
func (o ScheduledBackupStatusPatchPtrOutput) NextScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.NextScheduleTime
	}).(pulumi.StringPtrOutput)
}

// Subscription is the Schema for the subscriptions API
type SubscriptionType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta  `pulumi:"metadata"`
	Spec     *SubscriptionSpec   `pulumi:"spec"`
	Status   *SubscriptionStatus `pulumi:"status"`
}

// SubscriptionTypeInput is an input type that accepts SubscriptionTypeArgs and SubscriptionTypeOutput values.
// You can construct a concrete instance of `SubscriptionTypeInput` via:
//
//	SubscriptionTypeArgs{...}
type SubscriptionTypeInput interface {
	pulumi.Input

	ToSubscriptionTypeOutput() SubscriptionTypeOutput
	ToSubscriptionTypeOutputWithContext(context.Context) SubscriptionTypeOutput
}

// Subscription is the Schema for the subscriptions API
type SubscriptionTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput  `pulumi:"metadata"`
	Spec     SubscriptionSpecPtrInput   `pulumi:"spec"`
	Status   SubscriptionStatusPtrInput `pulumi:"status"`
}

func (SubscriptionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionType)(nil)).Elem()
}

func (i SubscriptionTypeArgs) ToSubscriptionTypeOutput() SubscriptionTypeOutput {
	return i.ToSubscriptionTypeOutputWithContext(context.Background())
}

func (i SubscriptionTypeArgs) ToSubscriptionTypeOutputWithContext(ctx context.Context) SubscriptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionTypeOutput)
}

// SubscriptionTypeArrayInput is an input type that accepts SubscriptionTypeArray and SubscriptionTypeArrayOutput values.
// You can construct a concrete instance of `SubscriptionTypeArrayInput` via:
//
//	SubscriptionTypeArray{ SubscriptionTypeArgs{...} }
type SubscriptionTypeArrayInput interface {
	pulumi.Input

	ToSubscriptionTypeArrayOutput() SubscriptionTypeArrayOutput
	ToSubscriptionTypeArrayOutputWithContext(context.Context) SubscriptionTypeArrayOutput
}

type SubscriptionTypeArray []SubscriptionTypeInput

func (SubscriptionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionType)(nil)).Elem()
}

func (i SubscriptionTypeArray) ToSubscriptionTypeArrayOutput() SubscriptionTypeArrayOutput {
	return i.ToSubscriptionTypeArrayOutputWithContext(context.Background())
}

func (i SubscriptionTypeArray) ToSubscriptionTypeArrayOutputWithContext(ctx context.Context) SubscriptionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionTypeArrayOutput)
}

// Subscription is the Schema for the subscriptions API
type SubscriptionTypeOutput struct{ *pulumi.OutputState }

func (SubscriptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionType)(nil)).Elem()
}

func (o SubscriptionTypeOutput) ToSubscriptionTypeOutput() SubscriptionTypeOutput {
	return o
}

func (o SubscriptionTypeOutput) ToSubscriptionTypeOutputWithContext(ctx context.Context) SubscriptionTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o SubscriptionTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SubscriptionTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o SubscriptionTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v SubscriptionType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o SubscriptionTypeOutput) Spec() SubscriptionSpecPtrOutput {
	return o.ApplyT(func(v SubscriptionType) *SubscriptionSpec { return v.Spec }).(SubscriptionSpecPtrOutput)
}

func (o SubscriptionTypeOutput) Status() SubscriptionStatusPtrOutput {
	return o.ApplyT(func(v SubscriptionType) *SubscriptionStatus { return v.Status }).(SubscriptionStatusPtrOutput)
}

type SubscriptionTypeArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionType)(nil)).Elem()
}

func (o SubscriptionTypeArrayOutput) ToSubscriptionTypeArrayOutput() SubscriptionTypeArrayOutput {
	return o
}

func (o SubscriptionTypeArrayOutput) ToSubscriptionTypeArrayOutputWithContext(ctx context.Context) SubscriptionTypeArrayOutput {
	return o
}

func (o SubscriptionTypeArrayOutput) Index(i pulumi.IntInput) SubscriptionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionType {
		return vs[0].([]SubscriptionType)[vs[1].(int)]
	}).(SubscriptionTypeOutput)
}

// SubscriptionList is a list of Subscription
type SubscriptionListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of subscriptions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []SubscriptionType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// SubscriptionListTypeInput is an input type that accepts SubscriptionListTypeArgs and SubscriptionListTypeOutput values.
// You can construct a concrete instance of `SubscriptionListTypeInput` via:
//
//	SubscriptionListTypeArgs{...}
type SubscriptionListTypeInput interface {
	pulumi.Input

	ToSubscriptionListTypeOutput() SubscriptionListTypeOutput
	ToSubscriptionListTypeOutputWithContext(context.Context) SubscriptionListTypeOutput
}

// SubscriptionList is a list of Subscription
type SubscriptionListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of subscriptions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items SubscriptionTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (SubscriptionListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionListType)(nil)).Elem()
}

func (i SubscriptionListTypeArgs) ToSubscriptionListTypeOutput() SubscriptionListTypeOutput {
	return i.ToSubscriptionListTypeOutputWithContext(context.Background())
}

func (i SubscriptionListTypeArgs) ToSubscriptionListTypeOutputWithContext(ctx context.Context) SubscriptionListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionListTypeOutput)
}

// SubscriptionList is a list of Subscription
type SubscriptionListTypeOutput struct{ *pulumi.OutputState }

func (SubscriptionListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionListType)(nil)).Elem()
}

func (o SubscriptionListTypeOutput) ToSubscriptionListTypeOutput() SubscriptionListTypeOutput {
	return o
}

func (o SubscriptionListTypeOutput) ToSubscriptionListTypeOutputWithContext(ctx context.Context) SubscriptionListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o SubscriptionListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of subscriptions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o SubscriptionListTypeOutput) Items() SubscriptionTypeArrayOutput {
	return o.ApplyT(func(v SubscriptionListType) []SubscriptionType { return v.Items }).(SubscriptionTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SubscriptionListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SubscriptionListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v SubscriptionListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// Subscription is the Schema for the subscriptions API
type SubscriptionPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch  `pulumi:"metadata"`
	Spec     *SubscriptionSpecPatch   `pulumi:"spec"`
	Status   *SubscriptionStatusPatch `pulumi:"status"`
}

// SubscriptionPatchTypeInput is an input type that accepts SubscriptionPatchTypeArgs and SubscriptionPatchTypeOutput values.
// You can construct a concrete instance of `SubscriptionPatchTypeInput` via:
//
//	SubscriptionPatchTypeArgs{...}
type SubscriptionPatchTypeInput interface {
	pulumi.Input

	ToSubscriptionPatchTypeOutput() SubscriptionPatchTypeOutput
	ToSubscriptionPatchTypeOutputWithContext(context.Context) SubscriptionPatchTypeOutput
}

// Subscription is the Schema for the subscriptions API
type SubscriptionPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput  `pulumi:"metadata"`
	Spec     SubscriptionSpecPatchPtrInput   `pulumi:"spec"`
	Status   SubscriptionStatusPatchPtrInput `pulumi:"status"`
}

func (SubscriptionPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPatchType)(nil)).Elem()
}

func (i SubscriptionPatchTypeArgs) ToSubscriptionPatchTypeOutput() SubscriptionPatchTypeOutput {
	return i.ToSubscriptionPatchTypeOutputWithContext(context.Background())
}

func (i SubscriptionPatchTypeArgs) ToSubscriptionPatchTypeOutputWithContext(ctx context.Context) SubscriptionPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPatchTypeOutput)
}

// Subscription is the Schema for the subscriptions API
type SubscriptionPatchTypeOutput struct{ *pulumi.OutputState }

func (SubscriptionPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPatchType)(nil)).Elem()
}

func (o SubscriptionPatchTypeOutput) ToSubscriptionPatchTypeOutput() SubscriptionPatchTypeOutput {
	return o
}

func (o SubscriptionPatchTypeOutput) ToSubscriptionPatchTypeOutputWithContext(ctx context.Context) SubscriptionPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o SubscriptionPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SubscriptionPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o SubscriptionPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v SubscriptionPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o SubscriptionPatchTypeOutput) Spec() SubscriptionSpecPatchPtrOutput {
	return o.ApplyT(func(v SubscriptionPatchType) *SubscriptionSpecPatch { return v.Spec }).(SubscriptionSpecPatchPtrOutput)
}

func (o SubscriptionPatchTypeOutput) Status() SubscriptionStatusPatchPtrOutput {
	return o.ApplyT(func(v SubscriptionPatchType) *SubscriptionStatusPatch { return v.Status }).(SubscriptionStatusPatchPtrOutput)
}

// SubscriptionSpec defines the desired state of Subscription
type SubscriptionSpec struct {
	Cluster *SubscriptionSpecCluster `pulumi:"cluster"`
	// The name of the database where the publication will be installed in
	// the "subscriber" cluster
	Dbname *string `pulumi:"dbname"`
	// The name of the external cluster with the publication ("publisher")
	ExternalClusterName *string `pulumi:"externalClusterName"`
	// The name of the subscription inside PostgreSQL
	Name *string `pulumi:"name"`
	// Subscription parameters part of the `WITH` clause as expected by
	// PostgreSQL `CREATE SUBSCRIPTION` command
	Parameters map[string]string `pulumi:"parameters"`
	// The name of the database containing the publication on the external
	// cluster. Defaults to the one in the external cluster definition.
	PublicationDBName *string `pulumi:"publicationDBName"`
	// The name of the publication inside the PostgreSQL database in the
	// "publisher"
	PublicationName *string `pulumi:"publicationName"`
	// The policy for end-of-life maintenance of this subscription
	SubscriptionReclaimPolicy *string `pulumi:"subscriptionReclaimPolicy"`
}

// SubscriptionSpecInput is an input type that accepts SubscriptionSpecArgs and SubscriptionSpecOutput values.
// You can construct a concrete instance of `SubscriptionSpecInput` via:
//
//	SubscriptionSpecArgs{...}
type SubscriptionSpecInput interface {
	pulumi.Input

	ToSubscriptionSpecOutput() SubscriptionSpecOutput
	ToSubscriptionSpecOutputWithContext(context.Context) SubscriptionSpecOutput
}

// SubscriptionSpec defines the desired state of Subscription
type SubscriptionSpecArgs struct {
	Cluster SubscriptionSpecClusterPtrInput `pulumi:"cluster"`
	// The name of the database where the publication will be installed in
	// the "subscriber" cluster
	Dbname pulumi.StringPtrInput `pulumi:"dbname"`
	// The name of the external cluster with the publication ("publisher")
	ExternalClusterName pulumi.StringPtrInput `pulumi:"externalClusterName"`
	// The name of the subscription inside PostgreSQL
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Subscription parameters part of the `WITH` clause as expected by
	// PostgreSQL `CREATE SUBSCRIPTION` command
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// The name of the database containing the publication on the external
	// cluster. Defaults to the one in the external cluster definition.
	PublicationDBName pulumi.StringPtrInput `pulumi:"publicationDBName"`
	// The name of the publication inside the PostgreSQL database in the
	// "publisher"
	PublicationName pulumi.StringPtrInput `pulumi:"publicationName"`
	// The policy for end-of-life maintenance of this subscription
	SubscriptionReclaimPolicy pulumi.StringPtrInput `pulumi:"subscriptionReclaimPolicy"`
}

func (SubscriptionSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionSpec)(nil)).Elem()
}

func (i SubscriptionSpecArgs) ToSubscriptionSpecOutput() SubscriptionSpecOutput {
	return i.ToSubscriptionSpecOutputWithContext(context.Background())
}

func (i SubscriptionSpecArgs) ToSubscriptionSpecOutputWithContext(ctx context.Context) SubscriptionSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionSpecOutput)
}

func (i SubscriptionSpecArgs) ToSubscriptionSpecPtrOutput() SubscriptionSpecPtrOutput {
	return i.ToSubscriptionSpecPtrOutputWithContext(context.Background())
}

func (i SubscriptionSpecArgs) ToSubscriptionSpecPtrOutputWithContext(ctx context.Context) SubscriptionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionSpecOutput).ToSubscriptionSpecPtrOutputWithContext(ctx)
}

// SubscriptionSpecPtrInput is an input type that accepts SubscriptionSpecArgs, SubscriptionSpecPtr and SubscriptionSpecPtrOutput values.
// You can construct a concrete instance of `SubscriptionSpecPtrInput` via:
//
//	        SubscriptionSpecArgs{...}
//
//	or:
//
//	        nil
type SubscriptionSpecPtrInput interface {
	pulumi.Input

	ToSubscriptionSpecPtrOutput() SubscriptionSpecPtrOutput
	ToSubscriptionSpecPtrOutputWithContext(context.Context) SubscriptionSpecPtrOutput
}

type subscriptionSpecPtrType SubscriptionSpecArgs

func SubscriptionSpecPtr(v *SubscriptionSpecArgs) SubscriptionSpecPtrInput {
	return (*subscriptionSpecPtrType)(v)
}

func (*subscriptionSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionSpec)(nil)).Elem()
}

func (i *subscriptionSpecPtrType) ToSubscriptionSpecPtrOutput() SubscriptionSpecPtrOutput {
	return i.ToSubscriptionSpecPtrOutputWithContext(context.Background())
}

func (i *subscriptionSpecPtrType) ToSubscriptionSpecPtrOutputWithContext(ctx context.Context) SubscriptionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionSpecPtrOutput)
}

// SubscriptionSpec defines the desired state of Subscription
type SubscriptionSpecOutput struct{ *pulumi.OutputState }

func (SubscriptionSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionSpec)(nil)).Elem()
}

func (o SubscriptionSpecOutput) ToSubscriptionSpecOutput() SubscriptionSpecOutput {
	return o
}

func (o SubscriptionSpecOutput) ToSubscriptionSpecOutputWithContext(ctx context.Context) SubscriptionSpecOutput {
	return o
}

func (o SubscriptionSpecOutput) ToSubscriptionSpecPtrOutput() SubscriptionSpecPtrOutput {
	return o.ToSubscriptionSpecPtrOutputWithContext(context.Background())
}

func (o SubscriptionSpecOutput) ToSubscriptionSpecPtrOutputWithContext(ctx context.Context) SubscriptionSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionSpec) *SubscriptionSpec {
		return &v
	}).(SubscriptionSpecPtrOutput)
}

func (o SubscriptionSpecOutput) Cluster() SubscriptionSpecClusterPtrOutput {
	return o.ApplyT(func(v SubscriptionSpec) *SubscriptionSpecCluster { return v.Cluster }).(SubscriptionSpecClusterPtrOutput)
}

// The name of the database where the publication will be installed in
// the "subscriber" cluster
func (o SubscriptionSpecOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionSpec) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

// The name of the external cluster with the publication ("publisher")
func (o SubscriptionSpecOutput) ExternalClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionSpec) *string { return v.ExternalClusterName }).(pulumi.StringPtrOutput)
}

// The name of the subscription inside PostgreSQL
func (o SubscriptionSpecOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionSpec) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Subscription parameters part of the `WITH` clause as expected by
// PostgreSQL `CREATE SUBSCRIPTION` command
func (o SubscriptionSpecOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v SubscriptionSpec) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// The name of the database containing the publication on the external
// cluster. Defaults to the one in the external cluster definition.
func (o SubscriptionSpecOutput) PublicationDBName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionSpec) *string { return v.PublicationDBName }).(pulumi.StringPtrOutput)
}

// The name of the publication inside the PostgreSQL database in the
// "publisher"
func (o SubscriptionSpecOutput) PublicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionSpec) *string { return v.PublicationName }).(pulumi.StringPtrOutput)
}

// The policy for end-of-life maintenance of this subscription
func (o SubscriptionSpecOutput) SubscriptionReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionSpec) *string { return v.SubscriptionReclaimPolicy }).(pulumi.StringPtrOutput)
}

type SubscriptionSpecPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionSpec)(nil)).Elem()
}

func (o SubscriptionSpecPtrOutput) ToSubscriptionSpecPtrOutput() SubscriptionSpecPtrOutput {
	return o
}

func (o SubscriptionSpecPtrOutput) ToSubscriptionSpecPtrOutputWithContext(ctx context.Context) SubscriptionSpecPtrOutput {
	return o
}

func (o SubscriptionSpecPtrOutput) Elem() SubscriptionSpecOutput {
	return o.ApplyT(func(v *SubscriptionSpec) SubscriptionSpec {
		if v != nil {
			return *v
		}
		var ret SubscriptionSpec
		return ret
	}).(SubscriptionSpecOutput)
}

func (o SubscriptionSpecPtrOutput) Cluster() SubscriptionSpecClusterPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpec) *SubscriptionSpecCluster {
		if v == nil {
			return nil
		}
		return v.Cluster
	}).(SubscriptionSpecClusterPtrOutput)
}

// The name of the database where the publication will be installed in
// the "subscriber" cluster
func (o SubscriptionSpecPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpec) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

// The name of the external cluster with the publication ("publisher")
func (o SubscriptionSpecPtrOutput) ExternalClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpec) *string {
		if v == nil {
			return nil
		}
		return v.ExternalClusterName
	}).(pulumi.StringPtrOutput)
}

// The name of the subscription inside PostgreSQL
func (o SubscriptionSpecPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpec) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Subscription parameters part of the `WITH` clause as expected by
// PostgreSQL `CREATE SUBSCRIPTION` command
func (o SubscriptionSpecPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SubscriptionSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// The name of the database containing the publication on the external
// cluster. Defaults to the one in the external cluster definition.
func (o SubscriptionSpecPtrOutput) PublicationDBName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpec) *string {
		if v == nil {
			return nil
		}
		return v.PublicationDBName
	}).(pulumi.StringPtrOutput)
}

// The name of the publication inside the PostgreSQL database in the
// "publisher"
func (o SubscriptionSpecPtrOutput) PublicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpec) *string {
		if v == nil {
			return nil
		}
		return v.PublicationName
	}).(pulumi.StringPtrOutput)
}

// The policy for end-of-life maintenance of this subscription
func (o SubscriptionSpecPtrOutput) SubscriptionReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpec) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionReclaimPolicy
	}).(pulumi.StringPtrOutput)
}

// The name of the PostgreSQL cluster that identifies the "subscriber"
type SubscriptionSpecCluster struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// SubscriptionSpecClusterInput is an input type that accepts SubscriptionSpecClusterArgs and SubscriptionSpecClusterOutput values.
// You can construct a concrete instance of `SubscriptionSpecClusterInput` via:
//
//	SubscriptionSpecClusterArgs{...}
type SubscriptionSpecClusterInput interface {
	pulumi.Input

	ToSubscriptionSpecClusterOutput() SubscriptionSpecClusterOutput
	ToSubscriptionSpecClusterOutputWithContext(context.Context) SubscriptionSpecClusterOutput
}

// The name of the PostgreSQL cluster that identifies the "subscriber"
type SubscriptionSpecClusterArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SubscriptionSpecClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionSpecCluster)(nil)).Elem()
}

func (i SubscriptionSpecClusterArgs) ToSubscriptionSpecClusterOutput() SubscriptionSpecClusterOutput {
	return i.ToSubscriptionSpecClusterOutputWithContext(context.Background())
}

func (i SubscriptionSpecClusterArgs) ToSubscriptionSpecClusterOutputWithContext(ctx context.Context) SubscriptionSpecClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionSpecClusterOutput)
}

func (i SubscriptionSpecClusterArgs) ToSubscriptionSpecClusterPtrOutput() SubscriptionSpecClusterPtrOutput {
	return i.ToSubscriptionSpecClusterPtrOutputWithContext(context.Background())
}

func (i SubscriptionSpecClusterArgs) ToSubscriptionSpecClusterPtrOutputWithContext(ctx context.Context) SubscriptionSpecClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionSpecClusterOutput).ToSubscriptionSpecClusterPtrOutputWithContext(ctx)
}

// SubscriptionSpecClusterPtrInput is an input type that accepts SubscriptionSpecClusterArgs, SubscriptionSpecClusterPtr and SubscriptionSpecClusterPtrOutput values.
// You can construct a concrete instance of `SubscriptionSpecClusterPtrInput` via:
//
//	        SubscriptionSpecClusterArgs{...}
//
//	or:
//
//	        nil
type SubscriptionSpecClusterPtrInput interface {
	pulumi.Input

	ToSubscriptionSpecClusterPtrOutput() SubscriptionSpecClusterPtrOutput
	ToSubscriptionSpecClusterPtrOutputWithContext(context.Context) SubscriptionSpecClusterPtrOutput
}

type subscriptionSpecClusterPtrType SubscriptionSpecClusterArgs

func SubscriptionSpecClusterPtr(v *SubscriptionSpecClusterArgs) SubscriptionSpecClusterPtrInput {
	return (*subscriptionSpecClusterPtrType)(v)
}

func (*subscriptionSpecClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionSpecCluster)(nil)).Elem()
}

func (i *subscriptionSpecClusterPtrType) ToSubscriptionSpecClusterPtrOutput() SubscriptionSpecClusterPtrOutput {
	return i.ToSubscriptionSpecClusterPtrOutputWithContext(context.Background())
}

func (i *subscriptionSpecClusterPtrType) ToSubscriptionSpecClusterPtrOutputWithContext(ctx context.Context) SubscriptionSpecClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionSpecClusterPtrOutput)
}

// The name of the PostgreSQL cluster that identifies the "subscriber"
type SubscriptionSpecClusterOutput struct{ *pulumi.OutputState }

func (SubscriptionSpecClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionSpecCluster)(nil)).Elem()
}

func (o SubscriptionSpecClusterOutput) ToSubscriptionSpecClusterOutput() SubscriptionSpecClusterOutput {
	return o
}

func (o SubscriptionSpecClusterOutput) ToSubscriptionSpecClusterOutputWithContext(ctx context.Context) SubscriptionSpecClusterOutput {
	return o
}

func (o SubscriptionSpecClusterOutput) ToSubscriptionSpecClusterPtrOutput() SubscriptionSpecClusterPtrOutput {
	return o.ToSubscriptionSpecClusterPtrOutputWithContext(context.Background())
}

func (o SubscriptionSpecClusterOutput) ToSubscriptionSpecClusterPtrOutputWithContext(ctx context.Context) SubscriptionSpecClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionSpecCluster) *SubscriptionSpecCluster {
		return &v
	}).(SubscriptionSpecClusterPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o SubscriptionSpecClusterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionSpecCluster) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SubscriptionSpecClusterPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionSpecClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionSpecCluster)(nil)).Elem()
}

func (o SubscriptionSpecClusterPtrOutput) ToSubscriptionSpecClusterPtrOutput() SubscriptionSpecClusterPtrOutput {
	return o
}

func (o SubscriptionSpecClusterPtrOutput) ToSubscriptionSpecClusterPtrOutputWithContext(ctx context.Context) SubscriptionSpecClusterPtrOutput {
	return o
}

func (o SubscriptionSpecClusterPtrOutput) Elem() SubscriptionSpecClusterOutput {
	return o.ApplyT(func(v *SubscriptionSpecCluster) SubscriptionSpecCluster {
		if v != nil {
			return *v
		}
		var ret SubscriptionSpecCluster
		return ret
	}).(SubscriptionSpecClusterOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o SubscriptionSpecClusterPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpecCluster) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The name of the PostgreSQL cluster that identifies the "subscriber"
type SubscriptionSpecClusterPatch struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// SubscriptionSpecClusterPatchInput is an input type that accepts SubscriptionSpecClusterPatchArgs and SubscriptionSpecClusterPatchOutput values.
// You can construct a concrete instance of `SubscriptionSpecClusterPatchInput` via:
//
//	SubscriptionSpecClusterPatchArgs{...}
type SubscriptionSpecClusterPatchInput interface {
	pulumi.Input

	ToSubscriptionSpecClusterPatchOutput() SubscriptionSpecClusterPatchOutput
	ToSubscriptionSpecClusterPatchOutputWithContext(context.Context) SubscriptionSpecClusterPatchOutput
}

// The name of the PostgreSQL cluster that identifies the "subscriber"
type SubscriptionSpecClusterPatchArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SubscriptionSpecClusterPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionSpecClusterPatch)(nil)).Elem()
}

func (i SubscriptionSpecClusterPatchArgs) ToSubscriptionSpecClusterPatchOutput() SubscriptionSpecClusterPatchOutput {
	return i.ToSubscriptionSpecClusterPatchOutputWithContext(context.Background())
}

func (i SubscriptionSpecClusterPatchArgs) ToSubscriptionSpecClusterPatchOutputWithContext(ctx context.Context) SubscriptionSpecClusterPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionSpecClusterPatchOutput)
}

func (i SubscriptionSpecClusterPatchArgs) ToSubscriptionSpecClusterPatchPtrOutput() SubscriptionSpecClusterPatchPtrOutput {
	return i.ToSubscriptionSpecClusterPatchPtrOutputWithContext(context.Background())
}

func (i SubscriptionSpecClusterPatchArgs) ToSubscriptionSpecClusterPatchPtrOutputWithContext(ctx context.Context) SubscriptionSpecClusterPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionSpecClusterPatchOutput).ToSubscriptionSpecClusterPatchPtrOutputWithContext(ctx)
}

// SubscriptionSpecClusterPatchPtrInput is an input type that accepts SubscriptionSpecClusterPatchArgs, SubscriptionSpecClusterPatchPtr and SubscriptionSpecClusterPatchPtrOutput values.
// You can construct a concrete instance of `SubscriptionSpecClusterPatchPtrInput` via:
//
//	        SubscriptionSpecClusterPatchArgs{...}
//
//	or:
//
//	        nil
type SubscriptionSpecClusterPatchPtrInput interface {
	pulumi.Input

	ToSubscriptionSpecClusterPatchPtrOutput() SubscriptionSpecClusterPatchPtrOutput
	ToSubscriptionSpecClusterPatchPtrOutputWithContext(context.Context) SubscriptionSpecClusterPatchPtrOutput
}

type subscriptionSpecClusterPatchPtrType SubscriptionSpecClusterPatchArgs

func SubscriptionSpecClusterPatchPtr(v *SubscriptionSpecClusterPatchArgs) SubscriptionSpecClusterPatchPtrInput {
	return (*subscriptionSpecClusterPatchPtrType)(v)
}

func (*subscriptionSpecClusterPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionSpecClusterPatch)(nil)).Elem()
}

func (i *subscriptionSpecClusterPatchPtrType) ToSubscriptionSpecClusterPatchPtrOutput() SubscriptionSpecClusterPatchPtrOutput {
	return i.ToSubscriptionSpecClusterPatchPtrOutputWithContext(context.Background())
}

func (i *subscriptionSpecClusterPatchPtrType) ToSubscriptionSpecClusterPatchPtrOutputWithContext(ctx context.Context) SubscriptionSpecClusterPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionSpecClusterPatchPtrOutput)
}

// The name of the PostgreSQL cluster that identifies the "subscriber"
type SubscriptionSpecClusterPatchOutput struct{ *pulumi.OutputState }

func (SubscriptionSpecClusterPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionSpecClusterPatch)(nil)).Elem()
}

func (o SubscriptionSpecClusterPatchOutput) ToSubscriptionSpecClusterPatchOutput() SubscriptionSpecClusterPatchOutput {
	return o
}

func (o SubscriptionSpecClusterPatchOutput) ToSubscriptionSpecClusterPatchOutputWithContext(ctx context.Context) SubscriptionSpecClusterPatchOutput {
	return o
}

func (o SubscriptionSpecClusterPatchOutput) ToSubscriptionSpecClusterPatchPtrOutput() SubscriptionSpecClusterPatchPtrOutput {
	return o.ToSubscriptionSpecClusterPatchPtrOutputWithContext(context.Background())
}

func (o SubscriptionSpecClusterPatchOutput) ToSubscriptionSpecClusterPatchPtrOutputWithContext(ctx context.Context) SubscriptionSpecClusterPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionSpecClusterPatch) *SubscriptionSpecClusterPatch {
		return &v
	}).(SubscriptionSpecClusterPatchPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o SubscriptionSpecClusterPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionSpecClusterPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SubscriptionSpecClusterPatchPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionSpecClusterPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionSpecClusterPatch)(nil)).Elem()
}

func (o SubscriptionSpecClusterPatchPtrOutput) ToSubscriptionSpecClusterPatchPtrOutput() SubscriptionSpecClusterPatchPtrOutput {
	return o
}

func (o SubscriptionSpecClusterPatchPtrOutput) ToSubscriptionSpecClusterPatchPtrOutputWithContext(ctx context.Context) SubscriptionSpecClusterPatchPtrOutput {
	return o
}

func (o SubscriptionSpecClusterPatchPtrOutput) Elem() SubscriptionSpecClusterPatchOutput {
	return o.ApplyT(func(v *SubscriptionSpecClusterPatch) SubscriptionSpecClusterPatch {
		if v != nil {
			return *v
		}
		var ret SubscriptionSpecClusterPatch
		return ret
	}).(SubscriptionSpecClusterPatchOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o SubscriptionSpecClusterPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpecClusterPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// SubscriptionSpec defines the desired state of Subscription
type SubscriptionSpecPatch struct {
	Cluster *SubscriptionSpecClusterPatch `pulumi:"cluster"`
	// The name of the database where the publication will be installed in
	// the "subscriber" cluster
	Dbname *string `pulumi:"dbname"`
	// The name of the external cluster with the publication ("publisher")
	ExternalClusterName *string `pulumi:"externalClusterName"`
	// The name of the subscription inside PostgreSQL
	Name *string `pulumi:"name"`
	// Subscription parameters part of the `WITH` clause as expected by
	// PostgreSQL `CREATE SUBSCRIPTION` command
	Parameters map[string]string `pulumi:"parameters"`
	// The name of the database containing the publication on the external
	// cluster. Defaults to the one in the external cluster definition.
	PublicationDBName *string `pulumi:"publicationDBName"`
	// The name of the publication inside the PostgreSQL database in the
	// "publisher"
	PublicationName *string `pulumi:"publicationName"`
	// The policy for end-of-life maintenance of this subscription
	SubscriptionReclaimPolicy *string `pulumi:"subscriptionReclaimPolicy"`
}

// SubscriptionSpecPatchInput is an input type that accepts SubscriptionSpecPatchArgs and SubscriptionSpecPatchOutput values.
// You can construct a concrete instance of `SubscriptionSpecPatchInput` via:
//
//	SubscriptionSpecPatchArgs{...}
type SubscriptionSpecPatchInput interface {
	pulumi.Input

	ToSubscriptionSpecPatchOutput() SubscriptionSpecPatchOutput
	ToSubscriptionSpecPatchOutputWithContext(context.Context) SubscriptionSpecPatchOutput
}

// SubscriptionSpec defines the desired state of Subscription
type SubscriptionSpecPatchArgs struct {
	Cluster SubscriptionSpecClusterPatchPtrInput `pulumi:"cluster"`
	// The name of the database where the publication will be installed in
	// the "subscriber" cluster
	Dbname pulumi.StringPtrInput `pulumi:"dbname"`
	// The name of the external cluster with the publication ("publisher")
	ExternalClusterName pulumi.StringPtrInput `pulumi:"externalClusterName"`
	// The name of the subscription inside PostgreSQL
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Subscription parameters part of the `WITH` clause as expected by
	// PostgreSQL `CREATE SUBSCRIPTION` command
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// The name of the database containing the publication on the external
	// cluster. Defaults to the one in the external cluster definition.
	PublicationDBName pulumi.StringPtrInput `pulumi:"publicationDBName"`
	// The name of the publication inside the PostgreSQL database in the
	// "publisher"
	PublicationName pulumi.StringPtrInput `pulumi:"publicationName"`
	// The policy for end-of-life maintenance of this subscription
	SubscriptionReclaimPolicy pulumi.StringPtrInput `pulumi:"subscriptionReclaimPolicy"`
}

func (SubscriptionSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionSpecPatch)(nil)).Elem()
}

func (i SubscriptionSpecPatchArgs) ToSubscriptionSpecPatchOutput() SubscriptionSpecPatchOutput {
	return i.ToSubscriptionSpecPatchOutputWithContext(context.Background())
}

func (i SubscriptionSpecPatchArgs) ToSubscriptionSpecPatchOutputWithContext(ctx context.Context) SubscriptionSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionSpecPatchOutput)
}

func (i SubscriptionSpecPatchArgs) ToSubscriptionSpecPatchPtrOutput() SubscriptionSpecPatchPtrOutput {
	return i.ToSubscriptionSpecPatchPtrOutputWithContext(context.Background())
}

func (i SubscriptionSpecPatchArgs) ToSubscriptionSpecPatchPtrOutputWithContext(ctx context.Context) SubscriptionSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionSpecPatchOutput).ToSubscriptionSpecPatchPtrOutputWithContext(ctx)
}

// SubscriptionSpecPatchPtrInput is an input type that accepts SubscriptionSpecPatchArgs, SubscriptionSpecPatchPtr and SubscriptionSpecPatchPtrOutput values.
// You can construct a concrete instance of `SubscriptionSpecPatchPtrInput` via:
//
//	        SubscriptionSpecPatchArgs{...}
//
//	or:
//
//	        nil
type SubscriptionSpecPatchPtrInput interface {
	pulumi.Input

	ToSubscriptionSpecPatchPtrOutput() SubscriptionSpecPatchPtrOutput
	ToSubscriptionSpecPatchPtrOutputWithContext(context.Context) SubscriptionSpecPatchPtrOutput
}

type subscriptionSpecPatchPtrType SubscriptionSpecPatchArgs

func SubscriptionSpecPatchPtr(v *SubscriptionSpecPatchArgs) SubscriptionSpecPatchPtrInput {
	return (*subscriptionSpecPatchPtrType)(v)
}

func (*subscriptionSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionSpecPatch)(nil)).Elem()
}

func (i *subscriptionSpecPatchPtrType) ToSubscriptionSpecPatchPtrOutput() SubscriptionSpecPatchPtrOutput {
	return i.ToSubscriptionSpecPatchPtrOutputWithContext(context.Background())
}

func (i *subscriptionSpecPatchPtrType) ToSubscriptionSpecPatchPtrOutputWithContext(ctx context.Context) SubscriptionSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionSpecPatchPtrOutput)
}

// SubscriptionSpec defines the desired state of Subscription
type SubscriptionSpecPatchOutput struct{ *pulumi.OutputState }

func (SubscriptionSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionSpecPatch)(nil)).Elem()
}

func (o SubscriptionSpecPatchOutput) ToSubscriptionSpecPatchOutput() SubscriptionSpecPatchOutput {
	return o
}

func (o SubscriptionSpecPatchOutput) ToSubscriptionSpecPatchOutputWithContext(ctx context.Context) SubscriptionSpecPatchOutput {
	return o
}

func (o SubscriptionSpecPatchOutput) ToSubscriptionSpecPatchPtrOutput() SubscriptionSpecPatchPtrOutput {
	return o.ToSubscriptionSpecPatchPtrOutputWithContext(context.Background())
}

func (o SubscriptionSpecPatchOutput) ToSubscriptionSpecPatchPtrOutputWithContext(ctx context.Context) SubscriptionSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionSpecPatch) *SubscriptionSpecPatch {
		return &v
	}).(SubscriptionSpecPatchPtrOutput)
}

func (o SubscriptionSpecPatchOutput) Cluster() SubscriptionSpecClusterPatchPtrOutput {
	return o.ApplyT(func(v SubscriptionSpecPatch) *SubscriptionSpecClusterPatch { return v.Cluster }).(SubscriptionSpecClusterPatchPtrOutput)
}

// The name of the database where the publication will be installed in
// the "subscriber" cluster
func (o SubscriptionSpecPatchOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionSpecPatch) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

// The name of the external cluster with the publication ("publisher")
func (o SubscriptionSpecPatchOutput) ExternalClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionSpecPatch) *string { return v.ExternalClusterName }).(pulumi.StringPtrOutput)
}

// The name of the subscription inside PostgreSQL
func (o SubscriptionSpecPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionSpecPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Subscription parameters part of the `WITH` clause as expected by
// PostgreSQL `CREATE SUBSCRIPTION` command
func (o SubscriptionSpecPatchOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v SubscriptionSpecPatch) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// The name of the database containing the publication on the external
// cluster. Defaults to the one in the external cluster definition.
func (o SubscriptionSpecPatchOutput) PublicationDBName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionSpecPatch) *string { return v.PublicationDBName }).(pulumi.StringPtrOutput)
}

// The name of the publication inside the PostgreSQL database in the
// "publisher"
func (o SubscriptionSpecPatchOutput) PublicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionSpecPatch) *string { return v.PublicationName }).(pulumi.StringPtrOutput)
}

// The policy for end-of-life maintenance of this subscription
func (o SubscriptionSpecPatchOutput) SubscriptionReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionSpecPatch) *string { return v.SubscriptionReclaimPolicy }).(pulumi.StringPtrOutput)
}

type SubscriptionSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionSpecPatch)(nil)).Elem()
}

func (o SubscriptionSpecPatchPtrOutput) ToSubscriptionSpecPatchPtrOutput() SubscriptionSpecPatchPtrOutput {
	return o
}

func (o SubscriptionSpecPatchPtrOutput) ToSubscriptionSpecPatchPtrOutputWithContext(ctx context.Context) SubscriptionSpecPatchPtrOutput {
	return o
}

func (o SubscriptionSpecPatchPtrOutput) Elem() SubscriptionSpecPatchOutput {
	return o.ApplyT(func(v *SubscriptionSpecPatch) SubscriptionSpecPatch {
		if v != nil {
			return *v
		}
		var ret SubscriptionSpecPatch
		return ret
	}).(SubscriptionSpecPatchOutput)
}

func (o SubscriptionSpecPatchPtrOutput) Cluster() SubscriptionSpecClusterPatchPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpecPatch) *SubscriptionSpecClusterPatch {
		if v == nil {
			return nil
		}
		return v.Cluster
	}).(SubscriptionSpecClusterPatchPtrOutput)
}

// The name of the database where the publication will be installed in
// the "subscriber" cluster
func (o SubscriptionSpecPatchPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

// The name of the external cluster with the publication ("publisher")
func (o SubscriptionSpecPatchPtrOutput) ExternalClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.ExternalClusterName
	}).(pulumi.StringPtrOutput)
}

// The name of the subscription inside PostgreSQL
func (o SubscriptionSpecPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Subscription parameters part of the `WITH` clause as expected by
// PostgreSQL `CREATE SUBSCRIPTION` command
func (o SubscriptionSpecPatchPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SubscriptionSpecPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// The name of the database containing the publication on the external
// cluster. Defaults to the one in the external cluster definition.
func (o SubscriptionSpecPatchPtrOutput) PublicationDBName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.PublicationDBName
	}).(pulumi.StringPtrOutput)
}

// The name of the publication inside the PostgreSQL database in the
// "publisher"
func (o SubscriptionSpecPatchPtrOutput) PublicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.PublicationName
	}).(pulumi.StringPtrOutput)
}

// The policy for end-of-life maintenance of this subscription
func (o SubscriptionSpecPatchPtrOutput) SubscriptionReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionReclaimPolicy
	}).(pulumi.StringPtrOutput)
}

// SubscriptionStatus defines the observed state of Subscription
type SubscriptionStatus struct {
	// Applied is true if the subscription was reconciled correctly
	Applied *bool `pulumi:"applied"`
	// Message is the reconciliation output message
	Message *string `pulumi:"message"`
	// A sequence number representing the latest
	// desired state that was synchronized
	ObservedGeneration *int `pulumi:"observedGeneration"`
}

// SubscriptionStatusInput is an input type that accepts SubscriptionStatusArgs and SubscriptionStatusOutput values.
// You can construct a concrete instance of `SubscriptionStatusInput` via:
//
//	SubscriptionStatusArgs{...}
type SubscriptionStatusInput interface {
	pulumi.Input

	ToSubscriptionStatusOutput() SubscriptionStatusOutput
	ToSubscriptionStatusOutputWithContext(context.Context) SubscriptionStatusOutput
}

// SubscriptionStatus defines the observed state of Subscription
type SubscriptionStatusArgs struct {
	// Applied is true if the subscription was reconciled correctly
	Applied pulumi.BoolPtrInput `pulumi:"applied"`
	// Message is the reconciliation output message
	Message pulumi.StringPtrInput `pulumi:"message"`
	// A sequence number representing the latest
	// desired state that was synchronized
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
}

func (SubscriptionStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionStatus)(nil)).Elem()
}

func (i SubscriptionStatusArgs) ToSubscriptionStatusOutput() SubscriptionStatusOutput {
	return i.ToSubscriptionStatusOutputWithContext(context.Background())
}

func (i SubscriptionStatusArgs) ToSubscriptionStatusOutputWithContext(ctx context.Context) SubscriptionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionStatusOutput)
}

func (i SubscriptionStatusArgs) ToSubscriptionStatusPtrOutput() SubscriptionStatusPtrOutput {
	return i.ToSubscriptionStatusPtrOutputWithContext(context.Background())
}

func (i SubscriptionStatusArgs) ToSubscriptionStatusPtrOutputWithContext(ctx context.Context) SubscriptionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionStatusOutput).ToSubscriptionStatusPtrOutputWithContext(ctx)
}

// SubscriptionStatusPtrInput is an input type that accepts SubscriptionStatusArgs, SubscriptionStatusPtr and SubscriptionStatusPtrOutput values.
// You can construct a concrete instance of `SubscriptionStatusPtrInput` via:
//
//	        SubscriptionStatusArgs{...}
//
//	or:
//
//	        nil
type SubscriptionStatusPtrInput interface {
	pulumi.Input

	ToSubscriptionStatusPtrOutput() SubscriptionStatusPtrOutput
	ToSubscriptionStatusPtrOutputWithContext(context.Context) SubscriptionStatusPtrOutput
}

type subscriptionStatusPtrType SubscriptionStatusArgs

func SubscriptionStatusPtr(v *SubscriptionStatusArgs) SubscriptionStatusPtrInput {
	return (*subscriptionStatusPtrType)(v)
}

func (*subscriptionStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionStatus)(nil)).Elem()
}

func (i *subscriptionStatusPtrType) ToSubscriptionStatusPtrOutput() SubscriptionStatusPtrOutput {
	return i.ToSubscriptionStatusPtrOutputWithContext(context.Background())
}

func (i *subscriptionStatusPtrType) ToSubscriptionStatusPtrOutputWithContext(ctx context.Context) SubscriptionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionStatusPtrOutput)
}

// SubscriptionStatus defines the observed state of Subscription
type SubscriptionStatusOutput struct{ *pulumi.OutputState }

func (SubscriptionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionStatus)(nil)).Elem()
}

func (o SubscriptionStatusOutput) ToSubscriptionStatusOutput() SubscriptionStatusOutput {
	return o
}

func (o SubscriptionStatusOutput) ToSubscriptionStatusOutputWithContext(ctx context.Context) SubscriptionStatusOutput {
	return o
}

func (o SubscriptionStatusOutput) ToSubscriptionStatusPtrOutput() SubscriptionStatusPtrOutput {
	return o.ToSubscriptionStatusPtrOutputWithContext(context.Background())
}

func (o SubscriptionStatusOutput) ToSubscriptionStatusPtrOutputWithContext(ctx context.Context) SubscriptionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionStatus) *SubscriptionStatus {
		return &v
	}).(SubscriptionStatusPtrOutput)
}

// Applied is true if the subscription was reconciled correctly
func (o SubscriptionStatusOutput) Applied() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SubscriptionStatus) *bool { return v.Applied }).(pulumi.BoolPtrOutput)
}

// Message is the reconciliation output message
func (o SubscriptionStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A sequence number representing the latest
// desired state that was synchronized
func (o SubscriptionStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubscriptionStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

type SubscriptionStatusPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionStatus)(nil)).Elem()
}

func (o SubscriptionStatusPtrOutput) ToSubscriptionStatusPtrOutput() SubscriptionStatusPtrOutput {
	return o
}

func (o SubscriptionStatusPtrOutput) ToSubscriptionStatusPtrOutputWithContext(ctx context.Context) SubscriptionStatusPtrOutput {
	return o
}

func (o SubscriptionStatusPtrOutput) Elem() SubscriptionStatusOutput {
	return o.ApplyT(func(v *SubscriptionStatus) SubscriptionStatus {
		if v != nil {
			return *v
		}
		var ret SubscriptionStatus
		return ret
	}).(SubscriptionStatusOutput)
}

// Applied is true if the subscription was reconciled correctly
func (o SubscriptionStatusPtrOutput) Applied() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubscriptionStatus) *bool {
		if v == nil {
			return nil
		}
		return v.Applied
	}).(pulumi.BoolPtrOutput)
}

// Message is the reconciliation output message
func (o SubscriptionStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// A sequence number representing the latest
// desired state that was synchronized
func (o SubscriptionStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubscriptionStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// SubscriptionStatus defines the observed state of Subscription
type SubscriptionStatusPatch struct {
	// Applied is true if the subscription was reconciled correctly
	Applied *bool `pulumi:"applied"`
	// Message is the reconciliation output message
	Message *string `pulumi:"message"`
	// A sequence number representing the latest
	// desired state that was synchronized
	ObservedGeneration *int `pulumi:"observedGeneration"`
}

// SubscriptionStatusPatchInput is an input type that accepts SubscriptionStatusPatchArgs and SubscriptionStatusPatchOutput values.
// You can construct a concrete instance of `SubscriptionStatusPatchInput` via:
//
//	SubscriptionStatusPatchArgs{...}
type SubscriptionStatusPatchInput interface {
	pulumi.Input

	ToSubscriptionStatusPatchOutput() SubscriptionStatusPatchOutput
	ToSubscriptionStatusPatchOutputWithContext(context.Context) SubscriptionStatusPatchOutput
}

// SubscriptionStatus defines the observed state of Subscription
type SubscriptionStatusPatchArgs struct {
	// Applied is true if the subscription was reconciled correctly
	Applied pulumi.BoolPtrInput `pulumi:"applied"`
	// Message is the reconciliation output message
	Message pulumi.StringPtrInput `pulumi:"message"`
	// A sequence number representing the latest
	// desired state that was synchronized
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
}

func (SubscriptionStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionStatusPatch)(nil)).Elem()
}

func (i SubscriptionStatusPatchArgs) ToSubscriptionStatusPatchOutput() SubscriptionStatusPatchOutput {
	return i.ToSubscriptionStatusPatchOutputWithContext(context.Background())
}

func (i SubscriptionStatusPatchArgs) ToSubscriptionStatusPatchOutputWithContext(ctx context.Context) SubscriptionStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionStatusPatchOutput)
}

func (i SubscriptionStatusPatchArgs) ToSubscriptionStatusPatchPtrOutput() SubscriptionStatusPatchPtrOutput {
	return i.ToSubscriptionStatusPatchPtrOutputWithContext(context.Background())
}

func (i SubscriptionStatusPatchArgs) ToSubscriptionStatusPatchPtrOutputWithContext(ctx context.Context) SubscriptionStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionStatusPatchOutput).ToSubscriptionStatusPatchPtrOutputWithContext(ctx)
}

// SubscriptionStatusPatchPtrInput is an input type that accepts SubscriptionStatusPatchArgs, SubscriptionStatusPatchPtr and SubscriptionStatusPatchPtrOutput values.
// You can construct a concrete instance of `SubscriptionStatusPatchPtrInput` via:
//
//	        SubscriptionStatusPatchArgs{...}
//
//	or:
//
//	        nil
type SubscriptionStatusPatchPtrInput interface {
	pulumi.Input

	ToSubscriptionStatusPatchPtrOutput() SubscriptionStatusPatchPtrOutput
	ToSubscriptionStatusPatchPtrOutputWithContext(context.Context) SubscriptionStatusPatchPtrOutput
}

type subscriptionStatusPatchPtrType SubscriptionStatusPatchArgs

func SubscriptionStatusPatchPtr(v *SubscriptionStatusPatchArgs) SubscriptionStatusPatchPtrInput {
	return (*subscriptionStatusPatchPtrType)(v)
}

func (*subscriptionStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionStatusPatch)(nil)).Elem()
}

func (i *subscriptionStatusPatchPtrType) ToSubscriptionStatusPatchPtrOutput() SubscriptionStatusPatchPtrOutput {
	return i.ToSubscriptionStatusPatchPtrOutputWithContext(context.Background())
}

func (i *subscriptionStatusPatchPtrType) ToSubscriptionStatusPatchPtrOutputWithContext(ctx context.Context) SubscriptionStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionStatusPatchPtrOutput)
}

// SubscriptionStatus defines the observed state of Subscription
type SubscriptionStatusPatchOutput struct{ *pulumi.OutputState }

func (SubscriptionStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionStatusPatch)(nil)).Elem()
}

func (o SubscriptionStatusPatchOutput) ToSubscriptionStatusPatchOutput() SubscriptionStatusPatchOutput {
	return o
}

func (o SubscriptionStatusPatchOutput) ToSubscriptionStatusPatchOutputWithContext(ctx context.Context) SubscriptionStatusPatchOutput {
	return o
}

func (o SubscriptionStatusPatchOutput) ToSubscriptionStatusPatchPtrOutput() SubscriptionStatusPatchPtrOutput {
	return o.ToSubscriptionStatusPatchPtrOutputWithContext(context.Background())
}

func (o SubscriptionStatusPatchOutput) ToSubscriptionStatusPatchPtrOutputWithContext(ctx context.Context) SubscriptionStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionStatusPatch) *SubscriptionStatusPatch {
		return &v
	}).(SubscriptionStatusPatchPtrOutput)
}

// Applied is true if the subscription was reconciled correctly
func (o SubscriptionStatusPatchOutput) Applied() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SubscriptionStatusPatch) *bool { return v.Applied }).(pulumi.BoolPtrOutput)
}

// Message is the reconciliation output message
func (o SubscriptionStatusPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionStatusPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A sequence number representing the latest
// desired state that was synchronized
func (o SubscriptionStatusPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubscriptionStatusPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

type SubscriptionStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionStatusPatch)(nil)).Elem()
}

func (o SubscriptionStatusPatchPtrOutput) ToSubscriptionStatusPatchPtrOutput() SubscriptionStatusPatchPtrOutput {
	return o
}

func (o SubscriptionStatusPatchPtrOutput) ToSubscriptionStatusPatchPtrOutputWithContext(ctx context.Context) SubscriptionStatusPatchPtrOutput {
	return o
}

func (o SubscriptionStatusPatchPtrOutput) Elem() SubscriptionStatusPatchOutput {
	return o.ApplyT(func(v *SubscriptionStatusPatch) SubscriptionStatusPatch {
		if v != nil {
			return *v
		}
		var ret SubscriptionStatusPatch
		return ret
	}).(SubscriptionStatusPatchOutput)
}

// Applied is true if the subscription was reconciled correctly
func (o SubscriptionStatusPatchPtrOutput) Applied() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubscriptionStatusPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Applied
	}).(pulumi.BoolPtrOutput)
}

// Message is the reconciliation output message
func (o SubscriptionStatusPatchPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// A sequence number representing the latest
// desired state that was synchronized
func (o SubscriptionStatusPatchPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubscriptionStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCsiPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesCsiPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCsiPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesCsiPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardAPIPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEmptyDirInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEmptyDirArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEmptyDirPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEmptyDirArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEmptyDirPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEmptyDirPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEmptyDirPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFcInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFcPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFcPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFcPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFcPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFcPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumeInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlexVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlexVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumePatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlexVolumePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlexVolumePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlockerInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlockerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlockerPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlockerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlockerPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlockerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlockerPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlockerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGcePersistentDiskInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGitRepoInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGitRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGitRepoPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGitRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGitRepoPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGitRepoPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGitRepoPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGitRepoPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGlusterfsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGlusterfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGlusterfsPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGlusterfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGlusterfsPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGlusterfsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGlusterfsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesHostPathInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesHostPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesHostPathPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesHostPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesHostPathPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesHostPathPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesHostPathPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesHostPathPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesImageInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesImagePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesImagePatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesImagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesImagePatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesImagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesIscsiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesIscsiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesIscsiPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesIscsiPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiSecretRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesNfsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesNfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesNfsPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesNfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesNfsPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesNfsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesNfsPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesNfsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPatchArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPersistentVolumeClaimInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPhotonPersistentDiskInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPortworxVolumeInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPortworxVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPortworxVolumePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPortworxVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPortworxVolumePatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPortworxVolumePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPortworxVolumePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesQuobyteInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesQuobyteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesQuobytePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesQuobyteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesQuobytePatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesQuobytePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesQuobytePatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesQuobytePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesRbdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesRbdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesRbdPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesRbdPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdSecretRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesRbdSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdSecretRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesRbdSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdSecretRefPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesRbdSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesRbdSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIOInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesScaleIOArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIOPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesScaleIOArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIOPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesScaleIOPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIOPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesScaleIOPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIOSecretRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesScaleIOSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesScaleIOSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretItemsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesSecretItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretItemsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesSecretItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretItemsPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesSecretItemsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesSecretItemsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesStorageosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesStorageosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesStorageosPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesStorageosPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosSecretRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesVsphereVolumeInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesVsphereVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesVsphereVolumePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesVsphereVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesVsphereVolumePatchInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesVsphereVolumePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesVsphereVolumePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusInput)(nil)).Elem(), PoolerStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusPtrInput)(nil)).Elem(), PoolerStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusPatchInput)(nil)).Elem(), PoolerStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusPatchPtrInput)(nil)).Elem(), PoolerStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsInput)(nil)).Elem(), PoolerStatusSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPtrInput)(nil)).Elem(), PoolerStatusSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsClientCAInput)(nil)).Elem(), PoolerStatusSecretsClientCAArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsClientCAPtrInput)(nil)).Elem(), PoolerStatusSecretsClientCAArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsClientCAPatchInput)(nil)).Elem(), PoolerStatusSecretsClientCAPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsClientCAPatchPtrInput)(nil)).Elem(), PoolerStatusSecretsClientCAPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPatchInput)(nil)).Elem(), PoolerStatusSecretsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPatchPtrInput)(nil)).Elem(), PoolerStatusSecretsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsInput)(nil)).Elem(), PoolerStatusSecretsPgBouncerSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsPtrInput)(nil)).Elem(), PoolerStatusSecretsPgBouncerSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsAuthQueryInput)(nil)).Elem(), PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrInput)(nil)).Elem(), PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchInput)(nil)).Elem(), PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrInput)(nil)).Elem(), PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsPatchInput)(nil)).Elem(), PoolerStatusSecretsPgBouncerSecretsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsPatchPtrInput)(nil)).Elem(), PoolerStatusSecretsPgBouncerSecretsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsServerCAInput)(nil)).Elem(), PoolerStatusSecretsServerCAArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsServerCAPtrInput)(nil)).Elem(), PoolerStatusSecretsServerCAArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsServerCAPatchInput)(nil)).Elem(), PoolerStatusSecretsServerCAPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsServerCAPatchPtrInput)(nil)).Elem(), PoolerStatusSecretsServerCAPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsServerTLSInput)(nil)).Elem(), PoolerStatusSecretsServerTLSArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsServerTLSPtrInput)(nil)).Elem(), PoolerStatusSecretsServerTLSArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsServerTLSPatchInput)(nil)).Elem(), PoolerStatusSecretsServerTLSPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsServerTLSPatchPtrInput)(nil)).Elem(), PoolerStatusSecretsServerTLSPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationTypeInput)(nil)).Elem(), PublicationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationTypeArrayInput)(nil)).Elem(), PublicationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationListTypeInput)(nil)).Elem(), PublicationListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationPatchTypeInput)(nil)).Elem(), PublicationPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecInput)(nil)).Elem(), PublicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecPtrInput)(nil)).Elem(), PublicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecClusterInput)(nil)).Elem(), PublicationSpecClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecClusterPtrInput)(nil)).Elem(), PublicationSpecClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecClusterPatchInput)(nil)).Elem(), PublicationSpecClusterPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecClusterPatchPtrInput)(nil)).Elem(), PublicationSpecClusterPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecPatchInput)(nil)).Elem(), PublicationSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecPatchPtrInput)(nil)).Elem(), PublicationSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecTargetInput)(nil)).Elem(), PublicationSpecTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecTargetPtrInput)(nil)).Elem(), PublicationSpecTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecTargetObjectsInput)(nil)).Elem(), PublicationSpecTargetObjectsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecTargetObjectsArrayInput)(nil)).Elem(), PublicationSpecTargetObjectsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecTargetObjectsPatchInput)(nil)).Elem(), PublicationSpecTargetObjectsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecTargetObjectsPatchArrayInput)(nil)).Elem(), PublicationSpecTargetObjectsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecTargetObjectsTableInput)(nil)).Elem(), PublicationSpecTargetObjectsTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecTargetObjectsTablePtrInput)(nil)).Elem(), PublicationSpecTargetObjectsTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecTargetObjectsTablePatchInput)(nil)).Elem(), PublicationSpecTargetObjectsTablePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecTargetObjectsTablePatchPtrInput)(nil)).Elem(), PublicationSpecTargetObjectsTablePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecTargetPatchInput)(nil)).Elem(), PublicationSpecTargetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationSpecTargetPatchPtrInput)(nil)).Elem(), PublicationSpecTargetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationStatusInput)(nil)).Elem(), PublicationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationStatusPtrInput)(nil)).Elem(), PublicationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationStatusPatchInput)(nil)).Elem(), PublicationStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationStatusPatchPtrInput)(nil)).Elem(), PublicationStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupTypeInput)(nil)).Elem(), ScheduledBackupTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupTypeArrayInput)(nil)).Elem(), ScheduledBackupTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupListTypeInput)(nil)).Elem(), ScheduledBackupListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupPatchTypeInput)(nil)).Elem(), ScheduledBackupPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecInput)(nil)).Elem(), ScheduledBackupSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecPtrInput)(nil)).Elem(), ScheduledBackupSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecClusterInput)(nil)).Elem(), ScheduledBackupSpecClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecClusterPtrInput)(nil)).Elem(), ScheduledBackupSpecClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecClusterPatchInput)(nil)).Elem(), ScheduledBackupSpecClusterPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecClusterPatchPtrInput)(nil)).Elem(), ScheduledBackupSpecClusterPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecOnlineConfigurationInput)(nil)).Elem(), ScheduledBackupSpecOnlineConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecOnlineConfigurationPtrInput)(nil)).Elem(), ScheduledBackupSpecOnlineConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecOnlineConfigurationPatchInput)(nil)).Elem(), ScheduledBackupSpecOnlineConfigurationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecOnlineConfigurationPatchPtrInput)(nil)).Elem(), ScheduledBackupSpecOnlineConfigurationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecPatchInput)(nil)).Elem(), ScheduledBackupSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecPatchPtrInput)(nil)).Elem(), ScheduledBackupSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecPluginConfigurationInput)(nil)).Elem(), ScheduledBackupSpecPluginConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecPluginConfigurationPtrInput)(nil)).Elem(), ScheduledBackupSpecPluginConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecPluginConfigurationPatchInput)(nil)).Elem(), ScheduledBackupSpecPluginConfigurationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecPluginConfigurationPatchPtrInput)(nil)).Elem(), ScheduledBackupSpecPluginConfigurationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupStatusInput)(nil)).Elem(), ScheduledBackupStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupStatusPtrInput)(nil)).Elem(), ScheduledBackupStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupStatusPatchInput)(nil)).Elem(), ScheduledBackupStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupStatusPatchPtrInput)(nil)).Elem(), ScheduledBackupStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionTypeInput)(nil)).Elem(), SubscriptionTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionTypeArrayInput)(nil)).Elem(), SubscriptionTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionListTypeInput)(nil)).Elem(), SubscriptionListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPatchTypeInput)(nil)).Elem(), SubscriptionPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionSpecInput)(nil)).Elem(), SubscriptionSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionSpecPtrInput)(nil)).Elem(), SubscriptionSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionSpecClusterInput)(nil)).Elem(), SubscriptionSpecClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionSpecClusterPtrInput)(nil)).Elem(), SubscriptionSpecClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionSpecClusterPatchInput)(nil)).Elem(), SubscriptionSpecClusterPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionSpecClusterPatchPtrInput)(nil)).Elem(), SubscriptionSpecClusterPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionSpecPatchInput)(nil)).Elem(), SubscriptionSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionSpecPatchPtrInput)(nil)).Elem(), SubscriptionSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionStatusInput)(nil)).Elem(), SubscriptionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionStatusPtrInput)(nil)).Elem(), SubscriptionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionStatusPatchInput)(nil)).Elem(), SubscriptionStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionStatusPatchPtrInput)(nil)).Elem(), SubscriptionStatusPatchArgs{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesCsiPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesCsiPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIItemsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIItemsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIItemsFieldRefPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIItemsPatchArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIItemsResourceFieldRefPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardAPIPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEmptyDirOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEmptyDirPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEmptyDirPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFcOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFcPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFcPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFcPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlexVolumeOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlexVolumePatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlexVolumePatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlockerOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlockerPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlockerPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlockerPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGcePersistentDiskPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGitRepoOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGitRepoPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGitRepoPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGitRepoPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGlusterfsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGlusterfsPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGlusterfsPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesHostPathOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesHostPathPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesHostPathPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesHostPathPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesImageOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesImagePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesImagePatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesImagePatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesIscsiOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesIscsiPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesIscsiPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesIscsiPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesIscsiSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesNfsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesNfsPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesNfsPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesNfsPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPatchArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPortworxVolumeOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPortworxVolumePatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPortworxVolumePatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsPatchArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRefPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsPatchArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardAPIPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesPatchArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsPatchArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesQuobyteOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesQuobytePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesQuobytePatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesQuobytePatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesRbdOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesRbdPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesRbdPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesRbdPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesRbdSecretRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesRbdSecretRefPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesRbdSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesScaleIOOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesScaleIOPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesScaleIOPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesScaleIOPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesScaleIOSecretRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesScaleIOSecretRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesScaleIOSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesSecretOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesSecretPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesSecretItemsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesSecretItemsPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesSecretItemsPatchArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesSecretPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesStorageosOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesStorageosPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesStorageosPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesStorageosPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesStorageosSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesVsphereVolumeOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesVsphereVolumePatchOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesVsphereVolumePatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusOutput{})
	pulumi.RegisterOutputType(PoolerStatusPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusPatchOutput{})
	pulumi.RegisterOutputType(PoolerStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsClientCAOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsClientCAPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsClientCAPatchOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsClientCAPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPatchOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPgBouncerSecretsOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPgBouncerSecretsPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPgBouncerSecretsAuthQueryPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPgBouncerSecretsPatchOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPgBouncerSecretsPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsServerCAOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsServerCAPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsServerCAPatchOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsServerCAPatchPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsServerTLSOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsServerTLSPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsServerTLSPatchOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsServerTLSPatchPtrOutput{})
	pulumi.RegisterOutputType(PublicationTypeOutput{})
	pulumi.RegisterOutputType(PublicationTypeArrayOutput{})
	pulumi.RegisterOutputType(PublicationListTypeOutput{})
	pulumi.RegisterOutputType(PublicationPatchTypeOutput{})
	pulumi.RegisterOutputType(PublicationSpecOutput{})
	pulumi.RegisterOutputType(PublicationSpecPtrOutput{})
	pulumi.RegisterOutputType(PublicationSpecClusterOutput{})
	pulumi.RegisterOutputType(PublicationSpecClusterPtrOutput{})
	pulumi.RegisterOutputType(PublicationSpecClusterPatchOutput{})
	pulumi.RegisterOutputType(PublicationSpecClusterPatchPtrOutput{})
	pulumi.RegisterOutputType(PublicationSpecPatchOutput{})
	pulumi.RegisterOutputType(PublicationSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(PublicationSpecTargetOutput{})
	pulumi.RegisterOutputType(PublicationSpecTargetPtrOutput{})
	pulumi.RegisterOutputType(PublicationSpecTargetObjectsOutput{})
	pulumi.RegisterOutputType(PublicationSpecTargetObjectsArrayOutput{})
	pulumi.RegisterOutputType(PublicationSpecTargetObjectsPatchOutput{})
	pulumi.RegisterOutputType(PublicationSpecTargetObjectsPatchArrayOutput{})
	pulumi.RegisterOutputType(PublicationSpecTargetObjectsTableOutput{})
	pulumi.RegisterOutputType(PublicationSpecTargetObjectsTablePtrOutput{})
	pulumi.RegisterOutputType(PublicationSpecTargetObjectsTablePatchOutput{})
	pulumi.RegisterOutputType(PublicationSpecTargetObjectsTablePatchPtrOutput{})
	pulumi.RegisterOutputType(PublicationSpecTargetPatchOutput{})
	pulumi.RegisterOutputType(PublicationSpecTargetPatchPtrOutput{})
	pulumi.RegisterOutputType(PublicationStatusOutput{})
	pulumi.RegisterOutputType(PublicationStatusPtrOutput{})
	pulumi.RegisterOutputType(PublicationStatusPatchOutput{})
	pulumi.RegisterOutputType(PublicationStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupTypeOutput{})
	pulumi.RegisterOutputType(ScheduledBackupTypeArrayOutput{})
	pulumi.RegisterOutputType(ScheduledBackupListTypeOutput{})
	pulumi.RegisterOutputType(ScheduledBackupPatchTypeOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecClusterOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecClusterPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecClusterPatchOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecClusterPatchPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecOnlineConfigurationOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecOnlineConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecOnlineConfigurationPatchOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecOnlineConfigurationPatchPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecPatchOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecPluginConfigurationOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecPluginConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecPluginConfigurationPatchOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecPluginConfigurationPatchPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupStatusOutput{})
	pulumi.RegisterOutputType(ScheduledBackupStatusPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupStatusPatchOutput{})
	pulumi.RegisterOutputType(ScheduledBackupStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionTypeOutput{})
	pulumi.RegisterOutputType(SubscriptionTypeArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionListTypeOutput{})
	pulumi.RegisterOutputType(SubscriptionPatchTypeOutput{})
	pulumi.RegisterOutputType(SubscriptionSpecOutput{})
	pulumi.RegisterOutputType(SubscriptionSpecPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionSpecClusterOutput{})
	pulumi.RegisterOutputType(SubscriptionSpecClusterPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionSpecClusterPatchOutput{})
	pulumi.RegisterOutputType(SubscriptionSpecClusterPatchPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionSpecPatchOutput{})
	pulumi.RegisterOutputType(SubscriptionSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionStatusOutput{})
	pulumi.RegisterOutputType(SubscriptionStatusPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionStatusPatchOutput{})
	pulumi.RegisterOutputType(SubscriptionStatusPatchPtrOutput{})
}
