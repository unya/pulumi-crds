// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ScheduledBackup is the Schema for the scheduledbackups API
type ScheduledBackup struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput        `pulumi:"metadata"`
	Spec     ScheduledBackupSpecOutput      `pulumi:"spec"`
	Status   ScheduledBackupStatusPtrOutput `pulumi:"status"`
}

// NewScheduledBackup registers a new resource with the given unique name, arguments, and options.
func NewScheduledBackup(ctx *pulumi.Context,
	name string, args *ScheduledBackupArgs, opts ...pulumi.ResourceOption) (*ScheduledBackup, error) {
	if args == nil {
		args = &ScheduledBackupArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("postgresql.cnpg.io/v1")
	args.Kind = pulumi.StringPtr("ScheduledBackup")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ScheduledBackup
	err := ctx.RegisterResource("kubernetes:postgresql.cnpg.io/v1:ScheduledBackup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScheduledBackup gets an existing ScheduledBackup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScheduledBackup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScheduledBackupState, opts ...pulumi.ResourceOption) (*ScheduledBackup, error) {
	var resource ScheduledBackup
	err := ctx.ReadResource("kubernetes:postgresql.cnpg.io/v1:ScheduledBackup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScheduledBackup resources.
type scheduledBackupState struct {
}

type ScheduledBackupState struct {
}

func (ScheduledBackupState) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledBackupState)(nil)).Elem()
}

type scheduledBackupArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta   `pulumi:"metadata"`
	Spec     *ScheduledBackupSpec `pulumi:"spec"`
}

// The set of arguments for constructing a ScheduledBackup resource.
type ScheduledBackupArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     ScheduledBackupSpecPtrInput
}

func (ScheduledBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledBackupArgs)(nil)).Elem()
}

type ScheduledBackupInput interface {
	pulumi.Input

	ToScheduledBackupOutput() ScheduledBackupOutput
	ToScheduledBackupOutputWithContext(ctx context.Context) ScheduledBackupOutput
}

func (*ScheduledBackup) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackup)(nil)).Elem()
}

func (i *ScheduledBackup) ToScheduledBackupOutput() ScheduledBackupOutput {
	return i.ToScheduledBackupOutputWithContext(context.Background())
}

func (i *ScheduledBackup) ToScheduledBackupOutputWithContext(ctx context.Context) ScheduledBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupOutput)
}

// ScheduledBackupArrayInput is an input type that accepts ScheduledBackupArray and ScheduledBackupArrayOutput values.
// You can construct a concrete instance of `ScheduledBackupArrayInput` via:
//
//	ScheduledBackupArray{ ScheduledBackupArgs{...} }
type ScheduledBackupArrayInput interface {
	pulumi.Input

	ToScheduledBackupArrayOutput() ScheduledBackupArrayOutput
	ToScheduledBackupArrayOutputWithContext(context.Context) ScheduledBackupArrayOutput
}

type ScheduledBackupArray []ScheduledBackupInput

func (ScheduledBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScheduledBackup)(nil)).Elem()
}

func (i ScheduledBackupArray) ToScheduledBackupArrayOutput() ScheduledBackupArrayOutput {
	return i.ToScheduledBackupArrayOutputWithContext(context.Background())
}

func (i ScheduledBackupArray) ToScheduledBackupArrayOutputWithContext(ctx context.Context) ScheduledBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupArrayOutput)
}

// ScheduledBackupMapInput is an input type that accepts ScheduledBackupMap and ScheduledBackupMapOutput values.
// You can construct a concrete instance of `ScheduledBackupMapInput` via:
//
//	ScheduledBackupMap{ "key": ScheduledBackupArgs{...} }
type ScheduledBackupMapInput interface {
	pulumi.Input

	ToScheduledBackupMapOutput() ScheduledBackupMapOutput
	ToScheduledBackupMapOutputWithContext(context.Context) ScheduledBackupMapOutput
}

type ScheduledBackupMap map[string]ScheduledBackupInput

func (ScheduledBackupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScheduledBackup)(nil)).Elem()
}

func (i ScheduledBackupMap) ToScheduledBackupMapOutput() ScheduledBackupMapOutput {
	return i.ToScheduledBackupMapOutputWithContext(context.Background())
}

func (i ScheduledBackupMap) ToScheduledBackupMapOutputWithContext(ctx context.Context) ScheduledBackupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupMapOutput)
}

type ScheduledBackupOutput struct{ *pulumi.OutputState }

func (ScheduledBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackup)(nil)).Elem()
}

func (o ScheduledBackupOutput) ToScheduledBackupOutput() ScheduledBackupOutput {
	return o
}

func (o ScheduledBackupOutput) ToScheduledBackupOutputWithContext(ctx context.Context) ScheduledBackupOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ScheduledBackupOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledBackup) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ScheduledBackupOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledBackup) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ScheduledBackupOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *ScheduledBackup) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o ScheduledBackupOutput) Spec() ScheduledBackupSpecOutput {
	return o.ApplyT(func(v *ScheduledBackup) ScheduledBackupSpecOutput { return v.Spec }).(ScheduledBackupSpecOutput)
}

func (o ScheduledBackupOutput) Status() ScheduledBackupStatusPtrOutput {
	return o.ApplyT(func(v *ScheduledBackup) ScheduledBackupStatusPtrOutput { return v.Status }).(ScheduledBackupStatusPtrOutput)
}

type ScheduledBackupArrayOutput struct{ *pulumi.OutputState }

func (ScheduledBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScheduledBackup)(nil)).Elem()
}

func (o ScheduledBackupArrayOutput) ToScheduledBackupArrayOutput() ScheduledBackupArrayOutput {
	return o
}

func (o ScheduledBackupArrayOutput) ToScheduledBackupArrayOutputWithContext(ctx context.Context) ScheduledBackupArrayOutput {
	return o
}

func (o ScheduledBackupArrayOutput) Index(i pulumi.IntInput) ScheduledBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ScheduledBackup {
		return vs[0].([]*ScheduledBackup)[vs[1].(int)]
	}).(ScheduledBackupOutput)
}

type ScheduledBackupMapOutput struct{ *pulumi.OutputState }

func (ScheduledBackupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScheduledBackup)(nil)).Elem()
}

func (o ScheduledBackupMapOutput) ToScheduledBackupMapOutput() ScheduledBackupMapOutput {
	return o
}

func (o ScheduledBackupMapOutput) ToScheduledBackupMapOutputWithContext(ctx context.Context) ScheduledBackupMapOutput {
	return o
}

func (o ScheduledBackupMapOutput) MapIndex(k pulumi.StringInput) ScheduledBackupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ScheduledBackup {
		return vs[0].(map[string]*ScheduledBackup)[vs[1].(string)]
	}).(ScheduledBackupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupInput)(nil)).Elem(), &ScheduledBackup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupArrayInput)(nil)).Elem(), ScheduledBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupMapInput)(nil)).Elem(), ScheduledBackupMap{})
	pulumi.RegisterOutputType(ScheduledBackupOutput{})
	pulumi.RegisterOutputType(ScheduledBackupArrayOutput{})
	pulumi.RegisterOutputType(ScheduledBackupMapOutput{})
}
