// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// UDPRouteList is a list of UDPRoute
type UDPRouteList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of udproutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items UDPRouteTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewUDPRouteList registers a new resource with the given unique name, arguments, and options.
func NewUDPRouteList(ctx *pulumi.Context,
	name string, args *UDPRouteListArgs, opts ...pulumi.ResourceOption) (*UDPRouteList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("gateway.networking.k8s.io/v1alpha2")
	args.Kind = pulumi.StringPtr("UDPRouteList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource UDPRouteList
	err := ctx.RegisterResource("kubernetes:gateway.networking.k8s.io/v1alpha2:UDPRouteList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUDPRouteList gets an existing UDPRouteList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUDPRouteList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UDPRouteListState, opts ...pulumi.ResourceOption) (*UDPRouteList, error) {
	var resource UDPRouteList
	err := ctx.ReadResource("kubernetes:gateway.networking.k8s.io/v1alpha2:UDPRouteList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UDPRouteList resources.
type udprouteListState struct {
}

type UDPRouteListState struct {
}

func (UDPRouteListState) ElementType() reflect.Type {
	return reflect.TypeOf((*udprouteListState)(nil)).Elem()
}

type udprouteListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of udproutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []UDPRouteType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a UDPRouteList resource.
type UDPRouteListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of udproutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items UDPRouteTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (UDPRouteListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*udprouteListArgs)(nil)).Elem()
}

type UDPRouteListInput interface {
	pulumi.Input

	ToUDPRouteListOutput() UDPRouteListOutput
	ToUDPRouteListOutputWithContext(ctx context.Context) UDPRouteListOutput
}

func (*UDPRouteList) ElementType() reflect.Type {
	return reflect.TypeOf((**UDPRouteList)(nil)).Elem()
}

func (i *UDPRouteList) ToUDPRouteListOutput() UDPRouteListOutput {
	return i.ToUDPRouteListOutputWithContext(context.Background())
}

func (i *UDPRouteList) ToUDPRouteListOutputWithContext(ctx context.Context) UDPRouteListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UDPRouteListOutput)
}

// UDPRouteListArrayInput is an input type that accepts UDPRouteListArray and UDPRouteListArrayOutput values.
// You can construct a concrete instance of `UDPRouteListArrayInput` via:
//
//	UDPRouteListArray{ UDPRouteListArgs{...} }
type UDPRouteListArrayInput interface {
	pulumi.Input

	ToUDPRouteListArrayOutput() UDPRouteListArrayOutput
	ToUDPRouteListArrayOutputWithContext(context.Context) UDPRouteListArrayOutput
}

type UDPRouteListArray []UDPRouteListInput

func (UDPRouteListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UDPRouteList)(nil)).Elem()
}

func (i UDPRouteListArray) ToUDPRouteListArrayOutput() UDPRouteListArrayOutput {
	return i.ToUDPRouteListArrayOutputWithContext(context.Background())
}

func (i UDPRouteListArray) ToUDPRouteListArrayOutputWithContext(ctx context.Context) UDPRouteListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UDPRouteListArrayOutput)
}

// UDPRouteListMapInput is an input type that accepts UDPRouteListMap and UDPRouteListMapOutput values.
// You can construct a concrete instance of `UDPRouteListMapInput` via:
//
//	UDPRouteListMap{ "key": UDPRouteListArgs{...} }
type UDPRouteListMapInput interface {
	pulumi.Input

	ToUDPRouteListMapOutput() UDPRouteListMapOutput
	ToUDPRouteListMapOutputWithContext(context.Context) UDPRouteListMapOutput
}

type UDPRouteListMap map[string]UDPRouteListInput

func (UDPRouteListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UDPRouteList)(nil)).Elem()
}

func (i UDPRouteListMap) ToUDPRouteListMapOutput() UDPRouteListMapOutput {
	return i.ToUDPRouteListMapOutputWithContext(context.Background())
}

func (i UDPRouteListMap) ToUDPRouteListMapOutputWithContext(ctx context.Context) UDPRouteListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UDPRouteListMapOutput)
}

type UDPRouteListOutput struct{ *pulumi.OutputState }

func (UDPRouteListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UDPRouteList)(nil)).Elem()
}

func (o UDPRouteListOutput) ToUDPRouteListOutput() UDPRouteListOutput {
	return o
}

func (o UDPRouteListOutput) ToUDPRouteListOutputWithContext(ctx context.Context) UDPRouteListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o UDPRouteListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *UDPRouteList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of udproutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o UDPRouteListOutput) Items() UDPRouteTypeArrayOutput {
	return o.ApplyT(func(v *UDPRouteList) UDPRouteTypeArrayOutput { return v.Items }).(UDPRouteTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o UDPRouteListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *UDPRouteList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o UDPRouteListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *UDPRouteList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type UDPRouteListArrayOutput struct{ *pulumi.OutputState }

func (UDPRouteListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UDPRouteList)(nil)).Elem()
}

func (o UDPRouteListArrayOutput) ToUDPRouteListArrayOutput() UDPRouteListArrayOutput {
	return o
}

func (o UDPRouteListArrayOutput) ToUDPRouteListArrayOutputWithContext(ctx context.Context) UDPRouteListArrayOutput {
	return o
}

func (o UDPRouteListArrayOutput) Index(i pulumi.IntInput) UDPRouteListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UDPRouteList {
		return vs[0].([]*UDPRouteList)[vs[1].(int)]
	}).(UDPRouteListOutput)
}

type UDPRouteListMapOutput struct{ *pulumi.OutputState }

func (UDPRouteListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UDPRouteList)(nil)).Elem()
}

func (o UDPRouteListMapOutput) ToUDPRouteListMapOutput() UDPRouteListMapOutput {
	return o
}

func (o UDPRouteListMapOutput) ToUDPRouteListMapOutputWithContext(ctx context.Context) UDPRouteListMapOutput {
	return o
}

func (o UDPRouteListMapOutput) MapIndex(k pulumi.StringInput) UDPRouteListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UDPRouteList {
		return vs[0].(map[string]*UDPRouteList)[vs[1].(string)]
	}).(UDPRouteListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UDPRouteListInput)(nil)).Elem(), &UDPRouteList{})
	pulumi.RegisterInputType(reflect.TypeOf((*UDPRouteListArrayInput)(nil)).Elem(), UDPRouteListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UDPRouteListMapInput)(nil)).Elem(), UDPRouteListMap{})
	pulumi.RegisterOutputType(UDPRouteListOutput{})
	pulumi.RegisterOutputType(UDPRouteListArrayOutput{})
	pulumi.RegisterOutputType(UDPRouteListMapOutput{})
}
