// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// TCPRouteList is a list of TCPRoute
type TCPRouteList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of tcproutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items TCPRouteTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewTCPRouteList registers a new resource with the given unique name, arguments, and options.
func NewTCPRouteList(ctx *pulumi.Context,
	name string, args *TCPRouteListArgs, opts ...pulumi.ResourceOption) (*TCPRouteList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("gateway.networking.k8s.io/v1alpha2")
	args.Kind = pulumi.StringPtr("TCPRouteList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource TCPRouteList
	err := ctx.RegisterResource("kubernetes:gateway.networking.k8s.io/v1alpha2:TCPRouteList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTCPRouteList gets an existing TCPRouteList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTCPRouteList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TCPRouteListState, opts ...pulumi.ResourceOption) (*TCPRouteList, error) {
	var resource TCPRouteList
	err := ctx.ReadResource("kubernetes:gateway.networking.k8s.io/v1alpha2:TCPRouteList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TCPRouteList resources.
type tcprouteListState struct {
}

type TCPRouteListState struct {
}

func (TCPRouteListState) ElementType() reflect.Type {
	return reflect.TypeOf((*tcprouteListState)(nil)).Elem()
}

type tcprouteListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of tcproutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []TCPRouteType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a TCPRouteList resource.
type TCPRouteListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of tcproutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items TCPRouteTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (TCPRouteListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tcprouteListArgs)(nil)).Elem()
}

type TCPRouteListInput interface {
	pulumi.Input

	ToTCPRouteListOutput() TCPRouteListOutput
	ToTCPRouteListOutputWithContext(ctx context.Context) TCPRouteListOutput
}

func (*TCPRouteList) ElementType() reflect.Type {
	return reflect.TypeOf((**TCPRouteList)(nil)).Elem()
}

func (i *TCPRouteList) ToTCPRouteListOutput() TCPRouteListOutput {
	return i.ToTCPRouteListOutputWithContext(context.Background())
}

func (i *TCPRouteList) ToTCPRouteListOutputWithContext(ctx context.Context) TCPRouteListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPRouteListOutput)
}

// TCPRouteListArrayInput is an input type that accepts TCPRouteListArray and TCPRouteListArrayOutput values.
// You can construct a concrete instance of `TCPRouteListArrayInput` via:
//
//	TCPRouteListArray{ TCPRouteListArgs{...} }
type TCPRouteListArrayInput interface {
	pulumi.Input

	ToTCPRouteListArrayOutput() TCPRouteListArrayOutput
	ToTCPRouteListArrayOutputWithContext(context.Context) TCPRouteListArrayOutput
}

type TCPRouteListArray []TCPRouteListInput

func (TCPRouteListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TCPRouteList)(nil)).Elem()
}

func (i TCPRouteListArray) ToTCPRouteListArrayOutput() TCPRouteListArrayOutput {
	return i.ToTCPRouteListArrayOutputWithContext(context.Background())
}

func (i TCPRouteListArray) ToTCPRouteListArrayOutputWithContext(ctx context.Context) TCPRouteListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPRouteListArrayOutput)
}

// TCPRouteListMapInput is an input type that accepts TCPRouteListMap and TCPRouteListMapOutput values.
// You can construct a concrete instance of `TCPRouteListMapInput` via:
//
//	TCPRouteListMap{ "key": TCPRouteListArgs{...} }
type TCPRouteListMapInput interface {
	pulumi.Input

	ToTCPRouteListMapOutput() TCPRouteListMapOutput
	ToTCPRouteListMapOutputWithContext(context.Context) TCPRouteListMapOutput
}

type TCPRouteListMap map[string]TCPRouteListInput

func (TCPRouteListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TCPRouteList)(nil)).Elem()
}

func (i TCPRouteListMap) ToTCPRouteListMapOutput() TCPRouteListMapOutput {
	return i.ToTCPRouteListMapOutputWithContext(context.Background())
}

func (i TCPRouteListMap) ToTCPRouteListMapOutputWithContext(ctx context.Context) TCPRouteListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPRouteListMapOutput)
}

type TCPRouteListOutput struct{ *pulumi.OutputState }

func (TCPRouteListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TCPRouteList)(nil)).Elem()
}

func (o TCPRouteListOutput) ToTCPRouteListOutput() TCPRouteListOutput {
	return o
}

func (o TCPRouteListOutput) ToTCPRouteListOutputWithContext(ctx context.Context) TCPRouteListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o TCPRouteListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *TCPRouteList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of tcproutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o TCPRouteListOutput) Items() TCPRouteTypeArrayOutput {
	return o.ApplyT(func(v *TCPRouteList) TCPRouteTypeArrayOutput { return v.Items }).(TCPRouteTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o TCPRouteListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *TCPRouteList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o TCPRouteListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *TCPRouteList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type TCPRouteListArrayOutput struct{ *pulumi.OutputState }

func (TCPRouteListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TCPRouteList)(nil)).Elem()
}

func (o TCPRouteListArrayOutput) ToTCPRouteListArrayOutput() TCPRouteListArrayOutput {
	return o
}

func (o TCPRouteListArrayOutput) ToTCPRouteListArrayOutputWithContext(ctx context.Context) TCPRouteListArrayOutput {
	return o
}

func (o TCPRouteListArrayOutput) Index(i pulumi.IntInput) TCPRouteListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TCPRouteList {
		return vs[0].([]*TCPRouteList)[vs[1].(int)]
	}).(TCPRouteListOutput)
}

type TCPRouteListMapOutput struct{ *pulumi.OutputState }

func (TCPRouteListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TCPRouteList)(nil)).Elem()
}

func (o TCPRouteListMapOutput) ToTCPRouteListMapOutput() TCPRouteListMapOutput {
	return o
}

func (o TCPRouteListMapOutput) ToTCPRouteListMapOutputWithContext(ctx context.Context) TCPRouteListMapOutput {
	return o
}

func (o TCPRouteListMapOutput) MapIndex(k pulumi.StringInput) TCPRouteListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TCPRouteList {
		return vs[0].(map[string]*TCPRouteList)[vs[1].(string)]
	}).(TCPRouteListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TCPRouteListInput)(nil)).Elem(), &TCPRouteList{})
	pulumi.RegisterInputType(reflect.TypeOf((*TCPRouteListArrayInput)(nil)).Elem(), TCPRouteListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TCPRouteListMapInput)(nil)).Elem(), TCPRouteListMap{})
	pulumi.RegisterOutputType(TCPRouteListOutput{})
	pulumi.RegisterOutputType(TCPRouteListArrayOutput{})
	pulumi.RegisterOutputType(TCPRouteListMapOutput{})
}
