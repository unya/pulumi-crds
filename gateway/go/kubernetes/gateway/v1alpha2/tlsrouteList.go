// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// TLSRouteList is a list of TLSRoute
type TLSRouteList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of tlsroutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items TLSRouteTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewTLSRouteList registers a new resource with the given unique name, arguments, and options.
func NewTLSRouteList(ctx *pulumi.Context,
	name string, args *TLSRouteListArgs, opts ...pulumi.ResourceOption) (*TLSRouteList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("gateway.networking.k8s.io/v1alpha2")
	args.Kind = pulumi.StringPtr("TLSRouteList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource TLSRouteList
	err := ctx.RegisterResource("kubernetes:gateway.networking.k8s.io/v1alpha2:TLSRouteList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTLSRouteList gets an existing TLSRouteList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTLSRouteList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TLSRouteListState, opts ...pulumi.ResourceOption) (*TLSRouteList, error) {
	var resource TLSRouteList
	err := ctx.ReadResource("kubernetes:gateway.networking.k8s.io/v1alpha2:TLSRouteList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TLSRouteList resources.
type tlsrouteListState struct {
}

type TLSRouteListState struct {
}

func (TLSRouteListState) ElementType() reflect.Type {
	return reflect.TypeOf((*tlsrouteListState)(nil)).Elem()
}

type tlsrouteListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of tlsroutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []TLSRouteType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a TLSRouteList resource.
type TLSRouteListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of tlsroutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items TLSRouteTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (TLSRouteListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tlsrouteListArgs)(nil)).Elem()
}

type TLSRouteListInput interface {
	pulumi.Input

	ToTLSRouteListOutput() TLSRouteListOutput
	ToTLSRouteListOutputWithContext(ctx context.Context) TLSRouteListOutput
}

func (*TLSRouteList) ElementType() reflect.Type {
	return reflect.TypeOf((**TLSRouteList)(nil)).Elem()
}

func (i *TLSRouteList) ToTLSRouteListOutput() TLSRouteListOutput {
	return i.ToTLSRouteListOutputWithContext(context.Background())
}

func (i *TLSRouteList) ToTLSRouteListOutputWithContext(ctx context.Context) TLSRouteListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TLSRouteListOutput)
}

// TLSRouteListArrayInput is an input type that accepts TLSRouteListArray and TLSRouteListArrayOutput values.
// You can construct a concrete instance of `TLSRouteListArrayInput` via:
//
//	TLSRouteListArray{ TLSRouteListArgs{...} }
type TLSRouteListArrayInput interface {
	pulumi.Input

	ToTLSRouteListArrayOutput() TLSRouteListArrayOutput
	ToTLSRouteListArrayOutputWithContext(context.Context) TLSRouteListArrayOutput
}

type TLSRouteListArray []TLSRouteListInput

func (TLSRouteListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TLSRouteList)(nil)).Elem()
}

func (i TLSRouteListArray) ToTLSRouteListArrayOutput() TLSRouteListArrayOutput {
	return i.ToTLSRouteListArrayOutputWithContext(context.Background())
}

func (i TLSRouteListArray) ToTLSRouteListArrayOutputWithContext(ctx context.Context) TLSRouteListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TLSRouteListArrayOutput)
}

// TLSRouteListMapInput is an input type that accepts TLSRouteListMap and TLSRouteListMapOutput values.
// You can construct a concrete instance of `TLSRouteListMapInput` via:
//
//	TLSRouteListMap{ "key": TLSRouteListArgs{...} }
type TLSRouteListMapInput interface {
	pulumi.Input

	ToTLSRouteListMapOutput() TLSRouteListMapOutput
	ToTLSRouteListMapOutputWithContext(context.Context) TLSRouteListMapOutput
}

type TLSRouteListMap map[string]TLSRouteListInput

func (TLSRouteListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TLSRouteList)(nil)).Elem()
}

func (i TLSRouteListMap) ToTLSRouteListMapOutput() TLSRouteListMapOutput {
	return i.ToTLSRouteListMapOutputWithContext(context.Background())
}

func (i TLSRouteListMap) ToTLSRouteListMapOutputWithContext(ctx context.Context) TLSRouteListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TLSRouteListMapOutput)
}

type TLSRouteListOutput struct{ *pulumi.OutputState }

func (TLSRouteListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TLSRouteList)(nil)).Elem()
}

func (o TLSRouteListOutput) ToTLSRouteListOutput() TLSRouteListOutput {
	return o
}

func (o TLSRouteListOutput) ToTLSRouteListOutputWithContext(ctx context.Context) TLSRouteListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o TLSRouteListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *TLSRouteList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of tlsroutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o TLSRouteListOutput) Items() TLSRouteTypeArrayOutput {
	return o.ApplyT(func(v *TLSRouteList) TLSRouteTypeArrayOutput { return v.Items }).(TLSRouteTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o TLSRouteListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *TLSRouteList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o TLSRouteListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *TLSRouteList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type TLSRouteListArrayOutput struct{ *pulumi.OutputState }

func (TLSRouteListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TLSRouteList)(nil)).Elem()
}

func (o TLSRouteListArrayOutput) ToTLSRouteListArrayOutput() TLSRouteListArrayOutput {
	return o
}

func (o TLSRouteListArrayOutput) ToTLSRouteListArrayOutputWithContext(ctx context.Context) TLSRouteListArrayOutput {
	return o
}

func (o TLSRouteListArrayOutput) Index(i pulumi.IntInput) TLSRouteListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TLSRouteList {
		return vs[0].([]*TLSRouteList)[vs[1].(int)]
	}).(TLSRouteListOutput)
}

type TLSRouteListMapOutput struct{ *pulumi.OutputState }

func (TLSRouteListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TLSRouteList)(nil)).Elem()
}

func (o TLSRouteListMapOutput) ToTLSRouteListMapOutput() TLSRouteListMapOutput {
	return o
}

func (o TLSRouteListMapOutput) ToTLSRouteListMapOutputWithContext(ctx context.Context) TLSRouteListMapOutput {
	return o
}

func (o TLSRouteListMapOutput) MapIndex(k pulumi.StringInput) TLSRouteListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TLSRouteList {
		return vs[0].(map[string]*TLSRouteList)[vs[1].(string)]
	}).(TLSRouteListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TLSRouteListInput)(nil)).Elem(), &TLSRouteList{})
	pulumi.RegisterInputType(reflect.TypeOf((*TLSRouteListArrayInput)(nil)).Elem(), TLSRouteListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TLSRouteListMapInput)(nil)).Elem(), TLSRouteListMap{})
	pulumi.RegisterOutputType(TLSRouteListOutput{})
	pulumi.RegisterOutputType(TLSRouteListArrayOutput{})
	pulumi.RegisterOutputType(TLSRouteListMapOutput{})
}
