// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// UDPRoute provides a way to route UDP traffic. When combined with a Gateway
// listener, it can be used to forward traffic on the port specified by the
// listener to a set of backends specified by the UDPRoute.
type UDPRoute struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput `pulumi:"metadata"`
	Spec     UDPRouteSpecOutput      `pulumi:"spec"`
	Status   UDPRouteStatusPtrOutput `pulumi:"status"`
}

// NewUDPRoute registers a new resource with the given unique name, arguments, and options.
func NewUDPRoute(ctx *pulumi.Context,
	name string, args *UDPRouteArgs, opts ...pulumi.ResourceOption) (*UDPRoute, error) {
	if args == nil {
		args = &UDPRouteArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("gateway.networking.k8s.io/v1alpha2")
	args.Kind = pulumi.StringPtr("UDPRoute")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource UDPRoute
	err := ctx.RegisterResource("kubernetes:gateway.networking.k8s.io/v1alpha2:UDPRoute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUDPRoute gets an existing UDPRoute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUDPRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UDPRouteState, opts ...pulumi.ResourceOption) (*UDPRoute, error) {
	var resource UDPRoute
	err := ctx.ReadResource("kubernetes:gateway.networking.k8s.io/v1alpha2:UDPRoute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UDPRoute resources.
type udprouteState struct {
}

type UDPRouteState struct {
}

func (UDPRouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*udprouteState)(nil)).Elem()
}

type udprouteArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *UDPRouteSpec      `pulumi:"spec"`
}

// The set of arguments for constructing a UDPRoute resource.
type UDPRouteArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     UDPRouteSpecPtrInput
}

func (UDPRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*udprouteArgs)(nil)).Elem()
}

type UDPRouteInput interface {
	pulumi.Input

	ToUDPRouteOutput() UDPRouteOutput
	ToUDPRouteOutputWithContext(ctx context.Context) UDPRouteOutput
}

func (*UDPRoute) ElementType() reflect.Type {
	return reflect.TypeOf((**UDPRoute)(nil)).Elem()
}

func (i *UDPRoute) ToUDPRouteOutput() UDPRouteOutput {
	return i.ToUDPRouteOutputWithContext(context.Background())
}

func (i *UDPRoute) ToUDPRouteOutputWithContext(ctx context.Context) UDPRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UDPRouteOutput)
}

// UDPRouteArrayInput is an input type that accepts UDPRouteArray and UDPRouteArrayOutput values.
// You can construct a concrete instance of `UDPRouteArrayInput` via:
//
//	UDPRouteArray{ UDPRouteArgs{...} }
type UDPRouteArrayInput interface {
	pulumi.Input

	ToUDPRouteArrayOutput() UDPRouteArrayOutput
	ToUDPRouteArrayOutputWithContext(context.Context) UDPRouteArrayOutput
}

type UDPRouteArray []UDPRouteInput

func (UDPRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UDPRoute)(nil)).Elem()
}

func (i UDPRouteArray) ToUDPRouteArrayOutput() UDPRouteArrayOutput {
	return i.ToUDPRouteArrayOutputWithContext(context.Background())
}

func (i UDPRouteArray) ToUDPRouteArrayOutputWithContext(ctx context.Context) UDPRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UDPRouteArrayOutput)
}

// UDPRouteMapInput is an input type that accepts UDPRouteMap and UDPRouteMapOutput values.
// You can construct a concrete instance of `UDPRouteMapInput` via:
//
//	UDPRouteMap{ "key": UDPRouteArgs{...} }
type UDPRouteMapInput interface {
	pulumi.Input

	ToUDPRouteMapOutput() UDPRouteMapOutput
	ToUDPRouteMapOutputWithContext(context.Context) UDPRouteMapOutput
}

type UDPRouteMap map[string]UDPRouteInput

func (UDPRouteMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UDPRoute)(nil)).Elem()
}

func (i UDPRouteMap) ToUDPRouteMapOutput() UDPRouteMapOutput {
	return i.ToUDPRouteMapOutputWithContext(context.Background())
}

func (i UDPRouteMap) ToUDPRouteMapOutputWithContext(ctx context.Context) UDPRouteMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UDPRouteMapOutput)
}

type UDPRouteOutput struct{ *pulumi.OutputState }

func (UDPRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UDPRoute)(nil)).Elem()
}

func (o UDPRouteOutput) ToUDPRouteOutput() UDPRouteOutput {
	return o
}

func (o UDPRouteOutput) ToUDPRouteOutputWithContext(ctx context.Context) UDPRouteOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o UDPRouteOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *UDPRoute) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o UDPRouteOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *UDPRoute) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o UDPRouteOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *UDPRoute) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o UDPRouteOutput) Spec() UDPRouteSpecOutput {
	return o.ApplyT(func(v *UDPRoute) UDPRouteSpecOutput { return v.Spec }).(UDPRouteSpecOutput)
}

func (o UDPRouteOutput) Status() UDPRouteStatusPtrOutput {
	return o.ApplyT(func(v *UDPRoute) UDPRouteStatusPtrOutput { return v.Status }).(UDPRouteStatusPtrOutput)
}

type UDPRouteArrayOutput struct{ *pulumi.OutputState }

func (UDPRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UDPRoute)(nil)).Elem()
}

func (o UDPRouteArrayOutput) ToUDPRouteArrayOutput() UDPRouteArrayOutput {
	return o
}

func (o UDPRouteArrayOutput) ToUDPRouteArrayOutputWithContext(ctx context.Context) UDPRouteArrayOutput {
	return o
}

func (o UDPRouteArrayOutput) Index(i pulumi.IntInput) UDPRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UDPRoute {
		return vs[0].([]*UDPRoute)[vs[1].(int)]
	}).(UDPRouteOutput)
}

type UDPRouteMapOutput struct{ *pulumi.OutputState }

func (UDPRouteMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UDPRoute)(nil)).Elem()
}

func (o UDPRouteMapOutput) ToUDPRouteMapOutput() UDPRouteMapOutput {
	return o
}

func (o UDPRouteMapOutput) ToUDPRouteMapOutputWithContext(ctx context.Context) UDPRouteMapOutput {
	return o
}

func (o UDPRouteMapOutput) MapIndex(k pulumi.StringInput) UDPRouteOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UDPRoute {
		return vs[0].(map[string]*UDPRoute)[vs[1].(string)]
	}).(UDPRouteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UDPRouteInput)(nil)).Elem(), &UDPRoute{})
	pulumi.RegisterInputType(reflect.TypeOf((*UDPRouteArrayInput)(nil)).Elem(), UDPRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UDPRouteMapInput)(nil)).Elem(), UDPRouteMap{})
	pulumi.RegisterOutputType(UDPRouteOutput{})
	pulumi.RegisterOutputType(UDPRouteArrayOutput{})
	pulumi.RegisterOutputType(UDPRouteMapOutput{})
}
