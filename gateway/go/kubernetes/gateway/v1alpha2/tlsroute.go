// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The TLSRoute resource is similar to TCPRoute, but can be configured
// to match against TLS-specific metadata. This allows more flexibility
// in matching streams for a given TLS listener.
//
// If you need to forward traffic to a single target for a TLS listener, you
// could choose to use a TCPRoute with a TLS listener.
type TLSRoute struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput `pulumi:"metadata"`
	Spec     TLSRouteSpecOutput      `pulumi:"spec"`
	Status   TLSRouteStatusPtrOutput `pulumi:"status"`
}

// NewTLSRoute registers a new resource with the given unique name, arguments, and options.
func NewTLSRoute(ctx *pulumi.Context,
	name string, args *TLSRouteArgs, opts ...pulumi.ResourceOption) (*TLSRoute, error) {
	if args == nil {
		args = &TLSRouteArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("gateway.networking.k8s.io/v1alpha2")
	args.Kind = pulumi.StringPtr("TLSRoute")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource TLSRoute
	err := ctx.RegisterResource("kubernetes:gateway.networking.k8s.io/v1alpha2:TLSRoute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTLSRoute gets an existing TLSRoute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTLSRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TLSRouteState, opts ...pulumi.ResourceOption) (*TLSRoute, error) {
	var resource TLSRoute
	err := ctx.ReadResource("kubernetes:gateway.networking.k8s.io/v1alpha2:TLSRoute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TLSRoute resources.
type tlsrouteState struct {
}

type TLSRouteState struct {
}

func (TLSRouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*tlsrouteState)(nil)).Elem()
}

type tlsrouteArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *TLSRouteSpec      `pulumi:"spec"`
}

// The set of arguments for constructing a TLSRoute resource.
type TLSRouteArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     TLSRouteSpecPtrInput
}

func (TLSRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tlsrouteArgs)(nil)).Elem()
}

type TLSRouteInput interface {
	pulumi.Input

	ToTLSRouteOutput() TLSRouteOutput
	ToTLSRouteOutputWithContext(ctx context.Context) TLSRouteOutput
}

func (*TLSRoute) ElementType() reflect.Type {
	return reflect.TypeOf((**TLSRoute)(nil)).Elem()
}

func (i *TLSRoute) ToTLSRouteOutput() TLSRouteOutput {
	return i.ToTLSRouteOutputWithContext(context.Background())
}

func (i *TLSRoute) ToTLSRouteOutputWithContext(ctx context.Context) TLSRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TLSRouteOutput)
}

// TLSRouteArrayInput is an input type that accepts TLSRouteArray and TLSRouteArrayOutput values.
// You can construct a concrete instance of `TLSRouteArrayInput` via:
//
//	TLSRouteArray{ TLSRouteArgs{...} }
type TLSRouteArrayInput interface {
	pulumi.Input

	ToTLSRouteArrayOutput() TLSRouteArrayOutput
	ToTLSRouteArrayOutputWithContext(context.Context) TLSRouteArrayOutput
}

type TLSRouteArray []TLSRouteInput

func (TLSRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TLSRoute)(nil)).Elem()
}

func (i TLSRouteArray) ToTLSRouteArrayOutput() TLSRouteArrayOutput {
	return i.ToTLSRouteArrayOutputWithContext(context.Background())
}

func (i TLSRouteArray) ToTLSRouteArrayOutputWithContext(ctx context.Context) TLSRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TLSRouteArrayOutput)
}

// TLSRouteMapInput is an input type that accepts TLSRouteMap and TLSRouteMapOutput values.
// You can construct a concrete instance of `TLSRouteMapInput` via:
//
//	TLSRouteMap{ "key": TLSRouteArgs{...} }
type TLSRouteMapInput interface {
	pulumi.Input

	ToTLSRouteMapOutput() TLSRouteMapOutput
	ToTLSRouteMapOutputWithContext(context.Context) TLSRouteMapOutput
}

type TLSRouteMap map[string]TLSRouteInput

func (TLSRouteMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TLSRoute)(nil)).Elem()
}

func (i TLSRouteMap) ToTLSRouteMapOutput() TLSRouteMapOutput {
	return i.ToTLSRouteMapOutputWithContext(context.Background())
}

func (i TLSRouteMap) ToTLSRouteMapOutputWithContext(ctx context.Context) TLSRouteMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TLSRouteMapOutput)
}

type TLSRouteOutput struct{ *pulumi.OutputState }

func (TLSRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TLSRoute)(nil)).Elem()
}

func (o TLSRouteOutput) ToTLSRouteOutput() TLSRouteOutput {
	return o
}

func (o TLSRouteOutput) ToTLSRouteOutputWithContext(ctx context.Context) TLSRouteOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o TLSRouteOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *TLSRoute) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o TLSRouteOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *TLSRoute) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o TLSRouteOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *TLSRoute) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o TLSRouteOutput) Spec() TLSRouteSpecOutput {
	return o.ApplyT(func(v *TLSRoute) TLSRouteSpecOutput { return v.Spec }).(TLSRouteSpecOutput)
}

func (o TLSRouteOutput) Status() TLSRouteStatusPtrOutput {
	return o.ApplyT(func(v *TLSRoute) TLSRouteStatusPtrOutput { return v.Status }).(TLSRouteStatusPtrOutput)
}

type TLSRouteArrayOutput struct{ *pulumi.OutputState }

func (TLSRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TLSRoute)(nil)).Elem()
}

func (o TLSRouteArrayOutput) ToTLSRouteArrayOutput() TLSRouteArrayOutput {
	return o
}

func (o TLSRouteArrayOutput) ToTLSRouteArrayOutputWithContext(ctx context.Context) TLSRouteArrayOutput {
	return o
}

func (o TLSRouteArrayOutput) Index(i pulumi.IntInput) TLSRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TLSRoute {
		return vs[0].([]*TLSRoute)[vs[1].(int)]
	}).(TLSRouteOutput)
}

type TLSRouteMapOutput struct{ *pulumi.OutputState }

func (TLSRouteMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TLSRoute)(nil)).Elem()
}

func (o TLSRouteMapOutput) ToTLSRouteMapOutput() TLSRouteMapOutput {
	return o
}

func (o TLSRouteMapOutput) ToTLSRouteMapOutputWithContext(ctx context.Context) TLSRouteMapOutput {
	return o
}

func (o TLSRouteMapOutput) MapIndex(k pulumi.StringInput) TLSRouteOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TLSRoute {
		return vs[0].(map[string]*TLSRoute)[vs[1].(string)]
	}).(TLSRouteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TLSRouteInput)(nil)).Elem(), &TLSRoute{})
	pulumi.RegisterInputType(reflect.TypeOf((*TLSRouteArrayInput)(nil)).Elem(), TLSRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TLSRouteMapInput)(nil)).Elem(), TLSRouteMap{})
	pulumi.RegisterOutputType(TLSRouteOutput{})
	pulumi.RegisterOutputType(TLSRouteArrayOutput{})
	pulumi.RegisterOutputType(TLSRouteMapOutput{})
}
