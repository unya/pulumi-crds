// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// XListenerSet defines a set of additional listeners
// to attach to an existing Gateway.
type XListenerSet struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput     `pulumi:"metadata"`
	Spec     XListenerSetSpecOutput      `pulumi:"spec"`
	Status   XListenerSetStatusPtrOutput `pulumi:"status"`
}

// NewXListenerSet registers a new resource with the given unique name, arguments, and options.
func NewXListenerSet(ctx *pulumi.Context,
	name string, args *XListenerSetArgs, opts ...pulumi.ResourceOption) (*XListenerSet, error) {
	if args == nil {
		args = &XListenerSetArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("gateway.networking.x-k8s.io/v1alpha1")
	args.Kind = pulumi.StringPtr("XListenerSet")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource XListenerSet
	err := ctx.RegisterResource("kubernetes:gateway.networking.x-k8s.io/v1alpha1:XListenerSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetXListenerSet gets an existing XListenerSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetXListenerSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *XListenerSetState, opts ...pulumi.ResourceOption) (*XListenerSet, error) {
	var resource XListenerSet
	err := ctx.ReadResource("kubernetes:gateway.networking.x-k8s.io/v1alpha1:XListenerSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering XListenerSet resources.
type xlistenerSetState struct {
}

type XListenerSetState struct {
}

func (XListenerSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*xlistenerSetState)(nil)).Elem()
}

type xlistenerSetArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *XListenerSetSpec  `pulumi:"spec"`
}

// The set of arguments for constructing a XListenerSet resource.
type XListenerSetArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     XListenerSetSpecPtrInput
}

func (XListenerSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*xlistenerSetArgs)(nil)).Elem()
}

type XListenerSetInput interface {
	pulumi.Input

	ToXListenerSetOutput() XListenerSetOutput
	ToXListenerSetOutputWithContext(ctx context.Context) XListenerSetOutput
}

func (*XListenerSet) ElementType() reflect.Type {
	return reflect.TypeOf((**XListenerSet)(nil)).Elem()
}

func (i *XListenerSet) ToXListenerSetOutput() XListenerSetOutput {
	return i.ToXListenerSetOutputWithContext(context.Background())
}

func (i *XListenerSet) ToXListenerSetOutputWithContext(ctx context.Context) XListenerSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XListenerSetOutput)
}

// XListenerSetArrayInput is an input type that accepts XListenerSetArray and XListenerSetArrayOutput values.
// You can construct a concrete instance of `XListenerSetArrayInput` via:
//
//	XListenerSetArray{ XListenerSetArgs{...} }
type XListenerSetArrayInput interface {
	pulumi.Input

	ToXListenerSetArrayOutput() XListenerSetArrayOutput
	ToXListenerSetArrayOutputWithContext(context.Context) XListenerSetArrayOutput
}

type XListenerSetArray []XListenerSetInput

func (XListenerSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*XListenerSet)(nil)).Elem()
}

func (i XListenerSetArray) ToXListenerSetArrayOutput() XListenerSetArrayOutput {
	return i.ToXListenerSetArrayOutputWithContext(context.Background())
}

func (i XListenerSetArray) ToXListenerSetArrayOutputWithContext(ctx context.Context) XListenerSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XListenerSetArrayOutput)
}

// XListenerSetMapInput is an input type that accepts XListenerSetMap and XListenerSetMapOutput values.
// You can construct a concrete instance of `XListenerSetMapInput` via:
//
//	XListenerSetMap{ "key": XListenerSetArgs{...} }
type XListenerSetMapInput interface {
	pulumi.Input

	ToXListenerSetMapOutput() XListenerSetMapOutput
	ToXListenerSetMapOutputWithContext(context.Context) XListenerSetMapOutput
}

type XListenerSetMap map[string]XListenerSetInput

func (XListenerSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*XListenerSet)(nil)).Elem()
}

func (i XListenerSetMap) ToXListenerSetMapOutput() XListenerSetMapOutput {
	return i.ToXListenerSetMapOutputWithContext(context.Background())
}

func (i XListenerSetMap) ToXListenerSetMapOutputWithContext(ctx context.Context) XListenerSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XListenerSetMapOutput)
}

type XListenerSetOutput struct{ *pulumi.OutputState }

func (XListenerSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**XListenerSet)(nil)).Elem()
}

func (o XListenerSetOutput) ToXListenerSetOutput() XListenerSetOutput {
	return o
}

func (o XListenerSetOutput) ToXListenerSetOutputWithContext(ctx context.Context) XListenerSetOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o XListenerSetOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *XListenerSet) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o XListenerSetOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *XListenerSet) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o XListenerSetOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *XListenerSet) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o XListenerSetOutput) Spec() XListenerSetSpecOutput {
	return o.ApplyT(func(v *XListenerSet) XListenerSetSpecOutput { return v.Spec }).(XListenerSetSpecOutput)
}

func (o XListenerSetOutput) Status() XListenerSetStatusPtrOutput {
	return o.ApplyT(func(v *XListenerSet) XListenerSetStatusPtrOutput { return v.Status }).(XListenerSetStatusPtrOutput)
}

type XListenerSetArrayOutput struct{ *pulumi.OutputState }

func (XListenerSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*XListenerSet)(nil)).Elem()
}

func (o XListenerSetArrayOutput) ToXListenerSetArrayOutput() XListenerSetArrayOutput {
	return o
}

func (o XListenerSetArrayOutput) ToXListenerSetArrayOutputWithContext(ctx context.Context) XListenerSetArrayOutput {
	return o
}

func (o XListenerSetArrayOutput) Index(i pulumi.IntInput) XListenerSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *XListenerSet {
		return vs[0].([]*XListenerSet)[vs[1].(int)]
	}).(XListenerSetOutput)
}

type XListenerSetMapOutput struct{ *pulumi.OutputState }

func (XListenerSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*XListenerSet)(nil)).Elem()
}

func (o XListenerSetMapOutput) ToXListenerSetMapOutput() XListenerSetMapOutput {
	return o
}

func (o XListenerSetMapOutput) ToXListenerSetMapOutputWithContext(ctx context.Context) XListenerSetMapOutput {
	return o
}

func (o XListenerSetMapOutput) MapIndex(k pulumi.StringInput) XListenerSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *XListenerSet {
		return vs[0].(map[string]*XListenerSet)[vs[1].(string)]
	}).(XListenerSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*XListenerSetInput)(nil)).Elem(), &XListenerSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*XListenerSetArrayInput)(nil)).Elem(), XListenerSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*XListenerSetMapInput)(nil)).Elem(), XListenerSetMap{})
	pulumi.RegisterOutputType(XListenerSetOutput{})
	pulumi.RegisterOutputType(XListenerSetArrayOutput{})
	pulumi.RegisterOutputType(XListenerSetMapOutput{})
}
