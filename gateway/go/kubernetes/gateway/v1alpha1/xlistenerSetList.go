// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// XListenerSetList is a list of XListenerSet
type XListenerSetList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of xlistenersets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items XListenerSetTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewXListenerSetList registers a new resource with the given unique name, arguments, and options.
func NewXListenerSetList(ctx *pulumi.Context,
	name string, args *XListenerSetListArgs, opts ...pulumi.ResourceOption) (*XListenerSetList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("gateway.networking.x-k8s.io/v1alpha1")
	args.Kind = pulumi.StringPtr("XListenerSetList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource XListenerSetList
	err := ctx.RegisterResource("kubernetes:gateway.networking.x-k8s.io/v1alpha1:XListenerSetList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetXListenerSetList gets an existing XListenerSetList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetXListenerSetList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *XListenerSetListState, opts ...pulumi.ResourceOption) (*XListenerSetList, error) {
	var resource XListenerSetList
	err := ctx.ReadResource("kubernetes:gateway.networking.x-k8s.io/v1alpha1:XListenerSetList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering XListenerSetList resources.
type xlistenerSetListState struct {
}

type XListenerSetListState struct {
}

func (XListenerSetListState) ElementType() reflect.Type {
	return reflect.TypeOf((*xlistenerSetListState)(nil)).Elem()
}

type xlistenerSetListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of xlistenersets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []XListenerSetType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a XListenerSetList resource.
type XListenerSetListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of xlistenersets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items XListenerSetTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (XListenerSetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*xlistenerSetListArgs)(nil)).Elem()
}

type XListenerSetListInput interface {
	pulumi.Input

	ToXListenerSetListOutput() XListenerSetListOutput
	ToXListenerSetListOutputWithContext(ctx context.Context) XListenerSetListOutput
}

func (*XListenerSetList) ElementType() reflect.Type {
	return reflect.TypeOf((**XListenerSetList)(nil)).Elem()
}

func (i *XListenerSetList) ToXListenerSetListOutput() XListenerSetListOutput {
	return i.ToXListenerSetListOutputWithContext(context.Background())
}

func (i *XListenerSetList) ToXListenerSetListOutputWithContext(ctx context.Context) XListenerSetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XListenerSetListOutput)
}

// XListenerSetListArrayInput is an input type that accepts XListenerSetListArray and XListenerSetListArrayOutput values.
// You can construct a concrete instance of `XListenerSetListArrayInput` via:
//
//	XListenerSetListArray{ XListenerSetListArgs{...} }
type XListenerSetListArrayInput interface {
	pulumi.Input

	ToXListenerSetListArrayOutput() XListenerSetListArrayOutput
	ToXListenerSetListArrayOutputWithContext(context.Context) XListenerSetListArrayOutput
}

type XListenerSetListArray []XListenerSetListInput

func (XListenerSetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*XListenerSetList)(nil)).Elem()
}

func (i XListenerSetListArray) ToXListenerSetListArrayOutput() XListenerSetListArrayOutput {
	return i.ToXListenerSetListArrayOutputWithContext(context.Background())
}

func (i XListenerSetListArray) ToXListenerSetListArrayOutputWithContext(ctx context.Context) XListenerSetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XListenerSetListArrayOutput)
}

// XListenerSetListMapInput is an input type that accepts XListenerSetListMap and XListenerSetListMapOutput values.
// You can construct a concrete instance of `XListenerSetListMapInput` via:
//
//	XListenerSetListMap{ "key": XListenerSetListArgs{...} }
type XListenerSetListMapInput interface {
	pulumi.Input

	ToXListenerSetListMapOutput() XListenerSetListMapOutput
	ToXListenerSetListMapOutputWithContext(context.Context) XListenerSetListMapOutput
}

type XListenerSetListMap map[string]XListenerSetListInput

func (XListenerSetListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*XListenerSetList)(nil)).Elem()
}

func (i XListenerSetListMap) ToXListenerSetListMapOutput() XListenerSetListMapOutput {
	return i.ToXListenerSetListMapOutputWithContext(context.Background())
}

func (i XListenerSetListMap) ToXListenerSetListMapOutputWithContext(ctx context.Context) XListenerSetListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XListenerSetListMapOutput)
}

type XListenerSetListOutput struct{ *pulumi.OutputState }

func (XListenerSetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**XListenerSetList)(nil)).Elem()
}

func (o XListenerSetListOutput) ToXListenerSetListOutput() XListenerSetListOutput {
	return o
}

func (o XListenerSetListOutput) ToXListenerSetListOutputWithContext(ctx context.Context) XListenerSetListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o XListenerSetListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *XListenerSetList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of xlistenersets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o XListenerSetListOutput) Items() XListenerSetTypeArrayOutput {
	return o.ApplyT(func(v *XListenerSetList) XListenerSetTypeArrayOutput { return v.Items }).(XListenerSetTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o XListenerSetListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *XListenerSetList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o XListenerSetListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *XListenerSetList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type XListenerSetListArrayOutput struct{ *pulumi.OutputState }

func (XListenerSetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*XListenerSetList)(nil)).Elem()
}

func (o XListenerSetListArrayOutput) ToXListenerSetListArrayOutput() XListenerSetListArrayOutput {
	return o
}

func (o XListenerSetListArrayOutput) ToXListenerSetListArrayOutputWithContext(ctx context.Context) XListenerSetListArrayOutput {
	return o
}

func (o XListenerSetListArrayOutput) Index(i pulumi.IntInput) XListenerSetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *XListenerSetList {
		return vs[0].([]*XListenerSetList)[vs[1].(int)]
	}).(XListenerSetListOutput)
}

type XListenerSetListMapOutput struct{ *pulumi.OutputState }

func (XListenerSetListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*XListenerSetList)(nil)).Elem()
}

func (o XListenerSetListMapOutput) ToXListenerSetListMapOutput() XListenerSetListMapOutput {
	return o
}

func (o XListenerSetListMapOutput) ToXListenerSetListMapOutputWithContext(ctx context.Context) XListenerSetListMapOutput {
	return o
}

func (o XListenerSetListMapOutput) MapIndex(k pulumi.StringInput) XListenerSetListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *XListenerSetList {
		return vs[0].(map[string]*XListenerSetList)[vs[1].(string)]
	}).(XListenerSetListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*XListenerSetListInput)(nil)).Elem(), &XListenerSetList{})
	pulumi.RegisterInputType(reflect.TypeOf((*XListenerSetListArrayInput)(nil)).Elem(), XListenerSetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*XListenerSetListMapInput)(nil)).Elem(), XListenerSetListMap{})
	pulumi.RegisterOutputType(XListenerSetListOutput{})
	pulumi.RegisterOutputType(XListenerSetListArrayOutput{})
	pulumi.RegisterOutputType(XListenerSetListMapOutput{})
}
