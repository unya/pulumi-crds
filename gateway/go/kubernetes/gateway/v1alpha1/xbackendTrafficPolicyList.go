// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// XBackendTrafficPolicyList is a list of XBackendTrafficPolicy
type XBackendTrafficPolicyList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of xbackendtrafficpolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items XBackendTrafficPolicyTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewXBackendTrafficPolicyList registers a new resource with the given unique name, arguments, and options.
func NewXBackendTrafficPolicyList(ctx *pulumi.Context,
	name string, args *XBackendTrafficPolicyListArgs, opts ...pulumi.ResourceOption) (*XBackendTrafficPolicyList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("gateway.networking.x-k8s.io/v1alpha1")
	args.Kind = pulumi.StringPtr("XBackendTrafficPolicyList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource XBackendTrafficPolicyList
	err := ctx.RegisterResource("kubernetes:gateway.networking.x-k8s.io/v1alpha1:XBackendTrafficPolicyList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetXBackendTrafficPolicyList gets an existing XBackendTrafficPolicyList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetXBackendTrafficPolicyList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *XBackendTrafficPolicyListState, opts ...pulumi.ResourceOption) (*XBackendTrafficPolicyList, error) {
	var resource XBackendTrafficPolicyList
	err := ctx.ReadResource("kubernetes:gateway.networking.x-k8s.io/v1alpha1:XBackendTrafficPolicyList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering XBackendTrafficPolicyList resources.
type xbackendTrafficPolicyListState struct {
}

type XBackendTrafficPolicyListState struct {
}

func (XBackendTrafficPolicyListState) ElementType() reflect.Type {
	return reflect.TypeOf((*xbackendTrafficPolicyListState)(nil)).Elem()
}

type xbackendTrafficPolicyListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of xbackendtrafficpolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []XBackendTrafficPolicyType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a XBackendTrafficPolicyList resource.
type XBackendTrafficPolicyListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of xbackendtrafficpolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items XBackendTrafficPolicyTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (XBackendTrafficPolicyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*xbackendTrafficPolicyListArgs)(nil)).Elem()
}

type XBackendTrafficPolicyListInput interface {
	pulumi.Input

	ToXBackendTrafficPolicyListOutput() XBackendTrafficPolicyListOutput
	ToXBackendTrafficPolicyListOutputWithContext(ctx context.Context) XBackendTrafficPolicyListOutput
}

func (*XBackendTrafficPolicyList) ElementType() reflect.Type {
	return reflect.TypeOf((**XBackendTrafficPolicyList)(nil)).Elem()
}

func (i *XBackendTrafficPolicyList) ToXBackendTrafficPolicyListOutput() XBackendTrafficPolicyListOutput {
	return i.ToXBackendTrafficPolicyListOutputWithContext(context.Background())
}

func (i *XBackendTrafficPolicyList) ToXBackendTrafficPolicyListOutputWithContext(ctx context.Context) XBackendTrafficPolicyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XBackendTrafficPolicyListOutput)
}

// XBackendTrafficPolicyListArrayInput is an input type that accepts XBackendTrafficPolicyListArray and XBackendTrafficPolicyListArrayOutput values.
// You can construct a concrete instance of `XBackendTrafficPolicyListArrayInput` via:
//
//	XBackendTrafficPolicyListArray{ XBackendTrafficPolicyListArgs{...} }
type XBackendTrafficPolicyListArrayInput interface {
	pulumi.Input

	ToXBackendTrafficPolicyListArrayOutput() XBackendTrafficPolicyListArrayOutput
	ToXBackendTrafficPolicyListArrayOutputWithContext(context.Context) XBackendTrafficPolicyListArrayOutput
}

type XBackendTrafficPolicyListArray []XBackendTrafficPolicyListInput

func (XBackendTrafficPolicyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*XBackendTrafficPolicyList)(nil)).Elem()
}

func (i XBackendTrafficPolicyListArray) ToXBackendTrafficPolicyListArrayOutput() XBackendTrafficPolicyListArrayOutput {
	return i.ToXBackendTrafficPolicyListArrayOutputWithContext(context.Background())
}

func (i XBackendTrafficPolicyListArray) ToXBackendTrafficPolicyListArrayOutputWithContext(ctx context.Context) XBackendTrafficPolicyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XBackendTrafficPolicyListArrayOutput)
}

// XBackendTrafficPolicyListMapInput is an input type that accepts XBackendTrafficPolicyListMap and XBackendTrafficPolicyListMapOutput values.
// You can construct a concrete instance of `XBackendTrafficPolicyListMapInput` via:
//
//	XBackendTrafficPolicyListMap{ "key": XBackendTrafficPolicyListArgs{...} }
type XBackendTrafficPolicyListMapInput interface {
	pulumi.Input

	ToXBackendTrafficPolicyListMapOutput() XBackendTrafficPolicyListMapOutput
	ToXBackendTrafficPolicyListMapOutputWithContext(context.Context) XBackendTrafficPolicyListMapOutput
}

type XBackendTrafficPolicyListMap map[string]XBackendTrafficPolicyListInput

func (XBackendTrafficPolicyListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*XBackendTrafficPolicyList)(nil)).Elem()
}

func (i XBackendTrafficPolicyListMap) ToXBackendTrafficPolicyListMapOutput() XBackendTrafficPolicyListMapOutput {
	return i.ToXBackendTrafficPolicyListMapOutputWithContext(context.Background())
}

func (i XBackendTrafficPolicyListMap) ToXBackendTrafficPolicyListMapOutputWithContext(ctx context.Context) XBackendTrafficPolicyListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XBackendTrafficPolicyListMapOutput)
}

type XBackendTrafficPolicyListOutput struct{ *pulumi.OutputState }

func (XBackendTrafficPolicyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**XBackendTrafficPolicyList)(nil)).Elem()
}

func (o XBackendTrafficPolicyListOutput) ToXBackendTrafficPolicyListOutput() XBackendTrafficPolicyListOutput {
	return o
}

func (o XBackendTrafficPolicyListOutput) ToXBackendTrafficPolicyListOutputWithContext(ctx context.Context) XBackendTrafficPolicyListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o XBackendTrafficPolicyListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *XBackendTrafficPolicyList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of xbackendtrafficpolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o XBackendTrafficPolicyListOutput) Items() XBackendTrafficPolicyTypeArrayOutput {
	return o.ApplyT(func(v *XBackendTrafficPolicyList) XBackendTrafficPolicyTypeArrayOutput { return v.Items }).(XBackendTrafficPolicyTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o XBackendTrafficPolicyListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *XBackendTrafficPolicyList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o XBackendTrafficPolicyListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *XBackendTrafficPolicyList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type XBackendTrafficPolicyListArrayOutput struct{ *pulumi.OutputState }

func (XBackendTrafficPolicyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*XBackendTrafficPolicyList)(nil)).Elem()
}

func (o XBackendTrafficPolicyListArrayOutput) ToXBackendTrafficPolicyListArrayOutput() XBackendTrafficPolicyListArrayOutput {
	return o
}

func (o XBackendTrafficPolicyListArrayOutput) ToXBackendTrafficPolicyListArrayOutputWithContext(ctx context.Context) XBackendTrafficPolicyListArrayOutput {
	return o
}

func (o XBackendTrafficPolicyListArrayOutput) Index(i pulumi.IntInput) XBackendTrafficPolicyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *XBackendTrafficPolicyList {
		return vs[0].([]*XBackendTrafficPolicyList)[vs[1].(int)]
	}).(XBackendTrafficPolicyListOutput)
}

type XBackendTrafficPolicyListMapOutput struct{ *pulumi.OutputState }

func (XBackendTrafficPolicyListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*XBackendTrafficPolicyList)(nil)).Elem()
}

func (o XBackendTrafficPolicyListMapOutput) ToXBackendTrafficPolicyListMapOutput() XBackendTrafficPolicyListMapOutput {
	return o
}

func (o XBackendTrafficPolicyListMapOutput) ToXBackendTrafficPolicyListMapOutputWithContext(ctx context.Context) XBackendTrafficPolicyListMapOutput {
	return o
}

func (o XBackendTrafficPolicyListMapOutput) MapIndex(k pulumi.StringInput) XBackendTrafficPolicyListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *XBackendTrafficPolicyList {
		return vs[0].(map[string]*XBackendTrafficPolicyList)[vs[1].(string)]
	}).(XBackendTrafficPolicyListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*XBackendTrafficPolicyListInput)(nil)).Elem(), &XBackendTrafficPolicyList{})
	pulumi.RegisterInputType(reflect.TypeOf((*XBackendTrafficPolicyListArrayInput)(nil)).Elem(), XBackendTrafficPolicyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*XBackendTrafficPolicyListMapInput)(nil)).Elem(), XBackendTrafficPolicyListMap{})
	pulumi.RegisterOutputType(XBackendTrafficPolicyListOutput{})
	pulumi.RegisterOutputType(XBackendTrafficPolicyListArrayOutput{})
	pulumi.RegisterOutputType(XBackendTrafficPolicyListMapOutput{})
}
