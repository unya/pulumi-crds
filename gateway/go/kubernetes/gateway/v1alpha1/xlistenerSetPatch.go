// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// XListenerSet defines a set of additional listeners
// to attach to an existing Gateway.
type XListenerSetPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput  `pulumi:"metadata"`
	Spec     XListenerSetSpecPatchPtrOutput   `pulumi:"spec"`
	Status   XListenerSetStatusPatchPtrOutput `pulumi:"status"`
}

// NewXListenerSetPatch registers a new resource with the given unique name, arguments, and options.
func NewXListenerSetPatch(ctx *pulumi.Context,
	name string, args *XListenerSetPatchArgs, opts ...pulumi.ResourceOption) (*XListenerSetPatch, error) {
	if args == nil {
		args = &XListenerSetPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("gateway.networking.x-k8s.io/v1alpha1")
	args.Kind = pulumi.StringPtr("XListenerSet")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource XListenerSetPatch
	err := ctx.RegisterResource("kubernetes:gateway.networking.x-k8s.io/v1alpha1:XListenerSetPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetXListenerSetPatch gets an existing XListenerSetPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetXListenerSetPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *XListenerSetPatchState, opts ...pulumi.ResourceOption) (*XListenerSetPatch, error) {
	var resource XListenerSetPatch
	err := ctx.ReadResource("kubernetes:gateway.networking.x-k8s.io/v1alpha1:XListenerSetPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering XListenerSetPatch resources.
type xlistenerSetPatchState struct {
}

type XListenerSetPatchState struct {
}

func (XListenerSetPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*xlistenerSetPatchState)(nil)).Elem()
}

type xlistenerSetPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *XListenerSetSpecPatch  `pulumi:"spec"`
}

// The set of arguments for constructing a XListenerSetPatch resource.
type XListenerSetPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     XListenerSetSpecPatchPtrInput
}

func (XListenerSetPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*xlistenerSetPatchArgs)(nil)).Elem()
}

type XListenerSetPatchInput interface {
	pulumi.Input

	ToXListenerSetPatchOutput() XListenerSetPatchOutput
	ToXListenerSetPatchOutputWithContext(ctx context.Context) XListenerSetPatchOutput
}

func (*XListenerSetPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**XListenerSetPatch)(nil)).Elem()
}

func (i *XListenerSetPatch) ToXListenerSetPatchOutput() XListenerSetPatchOutput {
	return i.ToXListenerSetPatchOutputWithContext(context.Background())
}

func (i *XListenerSetPatch) ToXListenerSetPatchOutputWithContext(ctx context.Context) XListenerSetPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XListenerSetPatchOutput)
}

// XListenerSetPatchArrayInput is an input type that accepts XListenerSetPatchArray and XListenerSetPatchArrayOutput values.
// You can construct a concrete instance of `XListenerSetPatchArrayInput` via:
//
//	XListenerSetPatchArray{ XListenerSetPatchArgs{...} }
type XListenerSetPatchArrayInput interface {
	pulumi.Input

	ToXListenerSetPatchArrayOutput() XListenerSetPatchArrayOutput
	ToXListenerSetPatchArrayOutputWithContext(context.Context) XListenerSetPatchArrayOutput
}

type XListenerSetPatchArray []XListenerSetPatchInput

func (XListenerSetPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*XListenerSetPatch)(nil)).Elem()
}

func (i XListenerSetPatchArray) ToXListenerSetPatchArrayOutput() XListenerSetPatchArrayOutput {
	return i.ToXListenerSetPatchArrayOutputWithContext(context.Background())
}

func (i XListenerSetPatchArray) ToXListenerSetPatchArrayOutputWithContext(ctx context.Context) XListenerSetPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XListenerSetPatchArrayOutput)
}

// XListenerSetPatchMapInput is an input type that accepts XListenerSetPatchMap and XListenerSetPatchMapOutput values.
// You can construct a concrete instance of `XListenerSetPatchMapInput` via:
//
//	XListenerSetPatchMap{ "key": XListenerSetPatchArgs{...} }
type XListenerSetPatchMapInput interface {
	pulumi.Input

	ToXListenerSetPatchMapOutput() XListenerSetPatchMapOutput
	ToXListenerSetPatchMapOutputWithContext(context.Context) XListenerSetPatchMapOutput
}

type XListenerSetPatchMap map[string]XListenerSetPatchInput

func (XListenerSetPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*XListenerSetPatch)(nil)).Elem()
}

func (i XListenerSetPatchMap) ToXListenerSetPatchMapOutput() XListenerSetPatchMapOutput {
	return i.ToXListenerSetPatchMapOutputWithContext(context.Background())
}

func (i XListenerSetPatchMap) ToXListenerSetPatchMapOutputWithContext(ctx context.Context) XListenerSetPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XListenerSetPatchMapOutput)
}

type XListenerSetPatchOutput struct{ *pulumi.OutputState }

func (XListenerSetPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**XListenerSetPatch)(nil)).Elem()
}

func (o XListenerSetPatchOutput) ToXListenerSetPatchOutput() XListenerSetPatchOutput {
	return o
}

func (o XListenerSetPatchOutput) ToXListenerSetPatchOutputWithContext(ctx context.Context) XListenerSetPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o XListenerSetPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *XListenerSetPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o XListenerSetPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *XListenerSetPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o XListenerSetPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *XListenerSetPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o XListenerSetPatchOutput) Spec() XListenerSetSpecPatchPtrOutput {
	return o.ApplyT(func(v *XListenerSetPatch) XListenerSetSpecPatchPtrOutput { return v.Spec }).(XListenerSetSpecPatchPtrOutput)
}

func (o XListenerSetPatchOutput) Status() XListenerSetStatusPatchPtrOutput {
	return o.ApplyT(func(v *XListenerSetPatch) XListenerSetStatusPatchPtrOutput { return v.Status }).(XListenerSetStatusPatchPtrOutput)
}

type XListenerSetPatchArrayOutput struct{ *pulumi.OutputState }

func (XListenerSetPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*XListenerSetPatch)(nil)).Elem()
}

func (o XListenerSetPatchArrayOutput) ToXListenerSetPatchArrayOutput() XListenerSetPatchArrayOutput {
	return o
}

func (o XListenerSetPatchArrayOutput) ToXListenerSetPatchArrayOutputWithContext(ctx context.Context) XListenerSetPatchArrayOutput {
	return o
}

func (o XListenerSetPatchArrayOutput) Index(i pulumi.IntInput) XListenerSetPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *XListenerSetPatch {
		return vs[0].([]*XListenerSetPatch)[vs[1].(int)]
	}).(XListenerSetPatchOutput)
}

type XListenerSetPatchMapOutput struct{ *pulumi.OutputState }

func (XListenerSetPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*XListenerSetPatch)(nil)).Elem()
}

func (o XListenerSetPatchMapOutput) ToXListenerSetPatchMapOutput() XListenerSetPatchMapOutput {
	return o
}

func (o XListenerSetPatchMapOutput) ToXListenerSetPatchMapOutputWithContext(ctx context.Context) XListenerSetPatchMapOutput {
	return o
}

func (o XListenerSetPatchMapOutput) MapIndex(k pulumi.StringInput) XListenerSetPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *XListenerSetPatch {
		return vs[0].(map[string]*XListenerSetPatch)[vs[1].(string)]
	}).(XListenerSetPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*XListenerSetPatchInput)(nil)).Elem(), &XListenerSetPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*XListenerSetPatchArrayInput)(nil)).Elem(), XListenerSetPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*XListenerSetPatchMapInput)(nil)).Elem(), XListenerSetPatchMap{})
	pulumi.RegisterOutputType(XListenerSetPatchOutput{})
	pulumi.RegisterOutputType(XListenerSetPatchArrayOutput{})
	pulumi.RegisterOutputType(XListenerSetPatchMapOutput{})
}
