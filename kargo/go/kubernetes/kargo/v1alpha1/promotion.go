// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Promotion represents a request to transition a particular Stage into a
// particular Freight.
type Promotion struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput  `pulumi:"metadata"`
	Spec     PromotionSpecOutput      `pulumi:"spec"`
	Status   PromotionStatusPtrOutput `pulumi:"status"`
}

// NewPromotion registers a new resource with the given unique name, arguments, and options.
func NewPromotion(ctx *pulumi.Context,
	name string, args *PromotionArgs, opts ...pulumi.ResourceOption) (*Promotion, error) {
	if args == nil {
		args = &PromotionArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("kargo.akuity.io/v1alpha1")
	args.Kind = pulumi.StringPtr("Promotion")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Promotion
	err := ctx.RegisterResource("kubernetes:kargo.akuity.io/v1alpha1:Promotion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPromotion gets an existing Promotion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPromotion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PromotionState, opts ...pulumi.ResourceOption) (*Promotion, error) {
	var resource Promotion
	err := ctx.ReadResource("kubernetes:kargo.akuity.io/v1alpha1:Promotion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Promotion resources.
type promotionState struct {
}

type PromotionState struct {
}

func (PromotionState) ElementType() reflect.Type {
	return reflect.TypeOf((*promotionState)(nil)).Elem()
}

type promotionArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *PromotionSpec     `pulumi:"spec"`
}

// The set of arguments for constructing a Promotion resource.
type PromotionArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     PromotionSpecPtrInput
}

func (PromotionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*promotionArgs)(nil)).Elem()
}

type PromotionInput interface {
	pulumi.Input

	ToPromotionOutput() PromotionOutput
	ToPromotionOutputWithContext(ctx context.Context) PromotionOutput
}

func (*Promotion) ElementType() reflect.Type {
	return reflect.TypeOf((**Promotion)(nil)).Elem()
}

func (i *Promotion) ToPromotionOutput() PromotionOutput {
	return i.ToPromotionOutputWithContext(context.Background())
}

func (i *Promotion) ToPromotionOutputWithContext(ctx context.Context) PromotionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionOutput)
}

// PromotionArrayInput is an input type that accepts PromotionArray and PromotionArrayOutput values.
// You can construct a concrete instance of `PromotionArrayInput` via:
//
//	PromotionArray{ PromotionArgs{...} }
type PromotionArrayInput interface {
	pulumi.Input

	ToPromotionArrayOutput() PromotionArrayOutput
	ToPromotionArrayOutputWithContext(context.Context) PromotionArrayOutput
}

type PromotionArray []PromotionInput

func (PromotionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Promotion)(nil)).Elem()
}

func (i PromotionArray) ToPromotionArrayOutput() PromotionArrayOutput {
	return i.ToPromotionArrayOutputWithContext(context.Background())
}

func (i PromotionArray) ToPromotionArrayOutputWithContext(ctx context.Context) PromotionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionArrayOutput)
}

// PromotionMapInput is an input type that accepts PromotionMap and PromotionMapOutput values.
// You can construct a concrete instance of `PromotionMapInput` via:
//
//	PromotionMap{ "key": PromotionArgs{...} }
type PromotionMapInput interface {
	pulumi.Input

	ToPromotionMapOutput() PromotionMapOutput
	ToPromotionMapOutputWithContext(context.Context) PromotionMapOutput
}

type PromotionMap map[string]PromotionInput

func (PromotionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Promotion)(nil)).Elem()
}

func (i PromotionMap) ToPromotionMapOutput() PromotionMapOutput {
	return i.ToPromotionMapOutputWithContext(context.Background())
}

func (i PromotionMap) ToPromotionMapOutputWithContext(ctx context.Context) PromotionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionMapOutput)
}

type PromotionOutput struct{ *pulumi.OutputState }

func (PromotionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Promotion)(nil)).Elem()
}

func (o PromotionOutput) ToPromotionOutput() PromotionOutput {
	return o
}

func (o PromotionOutput) ToPromotionOutputWithContext(ctx context.Context) PromotionOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PromotionOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Promotion) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *Promotion) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PromotionOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *Promotion) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o PromotionOutput) Spec() PromotionSpecOutput {
	return o.ApplyT(func(v *Promotion) PromotionSpecOutput { return v.Spec }).(PromotionSpecOutput)
}

func (o PromotionOutput) Status() PromotionStatusPtrOutput {
	return o.ApplyT(func(v *Promotion) PromotionStatusPtrOutput { return v.Status }).(PromotionStatusPtrOutput)
}

type PromotionArrayOutput struct{ *pulumi.OutputState }

func (PromotionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Promotion)(nil)).Elem()
}

func (o PromotionArrayOutput) ToPromotionArrayOutput() PromotionArrayOutput {
	return o
}

func (o PromotionArrayOutput) ToPromotionArrayOutputWithContext(ctx context.Context) PromotionArrayOutput {
	return o
}

func (o PromotionArrayOutput) Index(i pulumi.IntInput) PromotionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Promotion {
		return vs[0].([]*Promotion)[vs[1].(int)]
	}).(PromotionOutput)
}

type PromotionMapOutput struct{ *pulumi.OutputState }

func (PromotionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Promotion)(nil)).Elem()
}

func (o PromotionMapOutput) ToPromotionMapOutput() PromotionMapOutput {
	return o
}

func (o PromotionMapOutput) ToPromotionMapOutputWithContext(ctx context.Context) PromotionMapOutput {
	return o
}

func (o PromotionMapOutput) MapIndex(k pulumi.StringInput) PromotionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Promotion {
		return vs[0].(map[string]*Promotion)[vs[1].(string)]
	}).(PromotionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionInput)(nil)).Elem(), &Promotion{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionArrayInput)(nil)).Elem(), PromotionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionMapInput)(nil)).Elem(), PromotionMap{})
	pulumi.RegisterOutputType(PromotionOutput{})
	pulumi.RegisterOutputType(PromotionArrayOutput{})
	pulumi.RegisterOutputType(PromotionMapOutput{})
}
