// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PromotionTaskList is a list of PromotionTask
type PromotionTaskList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of promotiontasks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PromotionTaskTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewPromotionTaskList registers a new resource with the given unique name, arguments, and options.
func NewPromotionTaskList(ctx *pulumi.Context,
	name string, args *PromotionTaskListArgs, opts ...pulumi.ResourceOption) (*PromotionTaskList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("kargo.akuity.io/v1alpha1")
	args.Kind = pulumi.StringPtr("PromotionTaskList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PromotionTaskList
	err := ctx.RegisterResource("kubernetes:kargo.akuity.io/v1alpha1:PromotionTaskList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPromotionTaskList gets an existing PromotionTaskList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPromotionTaskList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PromotionTaskListState, opts ...pulumi.ResourceOption) (*PromotionTaskList, error) {
	var resource PromotionTaskList
	err := ctx.ReadResource("kubernetes:kargo.akuity.io/v1alpha1:PromotionTaskList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PromotionTaskList resources.
type promotionTaskListState struct {
}

type PromotionTaskListState struct {
}

func (PromotionTaskListState) ElementType() reflect.Type {
	return reflect.TypeOf((*promotionTaskListState)(nil)).Elem()
}

type promotionTaskListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of promotiontasks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PromotionTaskType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PromotionTaskList resource.
type PromotionTaskListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of promotiontasks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PromotionTaskTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (PromotionTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*promotionTaskListArgs)(nil)).Elem()
}

type PromotionTaskListInput interface {
	pulumi.Input

	ToPromotionTaskListOutput() PromotionTaskListOutput
	ToPromotionTaskListOutputWithContext(ctx context.Context) PromotionTaskListOutput
}

func (*PromotionTaskList) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskList)(nil)).Elem()
}

func (i *PromotionTaskList) ToPromotionTaskListOutput() PromotionTaskListOutput {
	return i.ToPromotionTaskListOutputWithContext(context.Background())
}

func (i *PromotionTaskList) ToPromotionTaskListOutputWithContext(ctx context.Context) PromotionTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskListOutput)
}

// PromotionTaskListArrayInput is an input type that accepts PromotionTaskListArray and PromotionTaskListArrayOutput values.
// You can construct a concrete instance of `PromotionTaskListArrayInput` via:
//
//	PromotionTaskListArray{ PromotionTaskListArgs{...} }
type PromotionTaskListArrayInput interface {
	pulumi.Input

	ToPromotionTaskListArrayOutput() PromotionTaskListArrayOutput
	ToPromotionTaskListArrayOutputWithContext(context.Context) PromotionTaskListArrayOutput
}

type PromotionTaskListArray []PromotionTaskListInput

func (PromotionTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PromotionTaskList)(nil)).Elem()
}

func (i PromotionTaskListArray) ToPromotionTaskListArrayOutput() PromotionTaskListArrayOutput {
	return i.ToPromotionTaskListArrayOutputWithContext(context.Background())
}

func (i PromotionTaskListArray) ToPromotionTaskListArrayOutputWithContext(ctx context.Context) PromotionTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskListArrayOutput)
}

// PromotionTaskListMapInput is an input type that accepts PromotionTaskListMap and PromotionTaskListMapOutput values.
// You can construct a concrete instance of `PromotionTaskListMapInput` via:
//
//	PromotionTaskListMap{ "key": PromotionTaskListArgs{...} }
type PromotionTaskListMapInput interface {
	pulumi.Input

	ToPromotionTaskListMapOutput() PromotionTaskListMapOutput
	ToPromotionTaskListMapOutputWithContext(context.Context) PromotionTaskListMapOutput
}

type PromotionTaskListMap map[string]PromotionTaskListInput

func (PromotionTaskListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PromotionTaskList)(nil)).Elem()
}

func (i PromotionTaskListMap) ToPromotionTaskListMapOutput() PromotionTaskListMapOutput {
	return i.ToPromotionTaskListMapOutputWithContext(context.Background())
}

func (i PromotionTaskListMap) ToPromotionTaskListMapOutputWithContext(ctx context.Context) PromotionTaskListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskListMapOutput)
}

type PromotionTaskListOutput struct{ *pulumi.OutputState }

func (PromotionTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskList)(nil)).Elem()
}

func (o PromotionTaskListOutput) ToPromotionTaskListOutput() PromotionTaskListOutput {
	return o
}

func (o PromotionTaskListOutput) ToPromotionTaskListOutputWithContext(ctx context.Context) PromotionTaskListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PromotionTaskListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PromotionTaskList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of promotiontasks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PromotionTaskListOutput) Items() PromotionTaskTypeArrayOutput {
	return o.ApplyT(func(v *PromotionTaskList) PromotionTaskTypeArrayOutput { return v.Items }).(PromotionTaskTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionTaskListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PromotionTaskList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionTaskListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *PromotionTaskList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type PromotionTaskListArrayOutput struct{ *pulumi.OutputState }

func (PromotionTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PromotionTaskList)(nil)).Elem()
}

func (o PromotionTaskListArrayOutput) ToPromotionTaskListArrayOutput() PromotionTaskListArrayOutput {
	return o
}

func (o PromotionTaskListArrayOutput) ToPromotionTaskListArrayOutputWithContext(ctx context.Context) PromotionTaskListArrayOutput {
	return o
}

func (o PromotionTaskListArrayOutput) Index(i pulumi.IntInput) PromotionTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PromotionTaskList {
		return vs[0].([]*PromotionTaskList)[vs[1].(int)]
	}).(PromotionTaskListOutput)
}

type PromotionTaskListMapOutput struct{ *pulumi.OutputState }

func (PromotionTaskListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PromotionTaskList)(nil)).Elem()
}

func (o PromotionTaskListMapOutput) ToPromotionTaskListMapOutput() PromotionTaskListMapOutput {
	return o
}

func (o PromotionTaskListMapOutput) ToPromotionTaskListMapOutputWithContext(ctx context.Context) PromotionTaskListMapOutput {
	return o
}

func (o PromotionTaskListMapOutput) MapIndex(k pulumi.StringInput) PromotionTaskListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PromotionTaskList {
		return vs[0].(map[string]*PromotionTaskList)[vs[1].(string)]
	}).(PromotionTaskListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskListInput)(nil)).Elem(), &PromotionTaskList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskListArrayInput)(nil)).Elem(), PromotionTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskListMapInput)(nil)).Elem(), PromotionTaskListMap{})
	pulumi.RegisterOutputType(PromotionTaskListOutput{})
	pulumi.RegisterOutputType(PromotionTaskListArrayOutput{})
	pulumi.RegisterOutputType(PromotionTaskListMapOutput{})
}
