// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
type ClusterPromotionTaskPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput        `pulumi:"metadata"`
	Spec     ClusterPromotionTaskSpecPatchPtrOutput `pulumi:"spec"`
}

// NewClusterPromotionTaskPatch registers a new resource with the given unique name, arguments, and options.
func NewClusterPromotionTaskPatch(ctx *pulumi.Context,
	name string, args *ClusterPromotionTaskPatchArgs, opts ...pulumi.ResourceOption) (*ClusterPromotionTaskPatch, error) {
	if args == nil {
		args = &ClusterPromotionTaskPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("kargo.akuity.io/v1alpha1")
	args.Kind = pulumi.StringPtr("ClusterPromotionTask")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ClusterPromotionTaskPatch
	err := ctx.RegisterResource("kubernetes:kargo.akuity.io/v1alpha1:ClusterPromotionTaskPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterPromotionTaskPatch gets an existing ClusterPromotionTaskPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterPromotionTaskPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterPromotionTaskPatchState, opts ...pulumi.ResourceOption) (*ClusterPromotionTaskPatch, error) {
	var resource ClusterPromotionTaskPatch
	err := ctx.ReadResource("kubernetes:kargo.akuity.io/v1alpha1:ClusterPromotionTaskPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterPromotionTaskPatch resources.
type clusterPromotionTaskPatchState struct {
}

type ClusterPromotionTaskPatchState struct {
}

func (ClusterPromotionTaskPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterPromotionTaskPatchState)(nil)).Elem()
}

type clusterPromotionTaskPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch        `pulumi:"metadata"`
	Spec     *ClusterPromotionTaskSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a ClusterPromotionTaskPatch resource.
type ClusterPromotionTaskPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     ClusterPromotionTaskSpecPatchPtrInput
}

func (ClusterPromotionTaskPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterPromotionTaskPatchArgs)(nil)).Elem()
}

type ClusterPromotionTaskPatchInput interface {
	pulumi.Input

	ToClusterPromotionTaskPatchOutput() ClusterPromotionTaskPatchOutput
	ToClusterPromotionTaskPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskPatchOutput
}

func (*ClusterPromotionTaskPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTaskPatch)(nil)).Elem()
}

func (i *ClusterPromotionTaskPatch) ToClusterPromotionTaskPatchOutput() ClusterPromotionTaskPatchOutput {
	return i.ToClusterPromotionTaskPatchOutputWithContext(context.Background())
}

func (i *ClusterPromotionTaskPatch) ToClusterPromotionTaskPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskPatchOutput)
}

// ClusterPromotionTaskPatchArrayInput is an input type that accepts ClusterPromotionTaskPatchArray and ClusterPromotionTaskPatchArrayOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskPatchArrayInput` via:
//
//	ClusterPromotionTaskPatchArray{ ClusterPromotionTaskPatchArgs{...} }
type ClusterPromotionTaskPatchArrayInput interface {
	pulumi.Input

	ToClusterPromotionTaskPatchArrayOutput() ClusterPromotionTaskPatchArrayOutput
	ToClusterPromotionTaskPatchArrayOutputWithContext(context.Context) ClusterPromotionTaskPatchArrayOutput
}

type ClusterPromotionTaskPatchArray []ClusterPromotionTaskPatchInput

func (ClusterPromotionTaskPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterPromotionTaskPatch)(nil)).Elem()
}

func (i ClusterPromotionTaskPatchArray) ToClusterPromotionTaskPatchArrayOutput() ClusterPromotionTaskPatchArrayOutput {
	return i.ToClusterPromotionTaskPatchArrayOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskPatchArray) ToClusterPromotionTaskPatchArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskPatchArrayOutput)
}

// ClusterPromotionTaskPatchMapInput is an input type that accepts ClusterPromotionTaskPatchMap and ClusterPromotionTaskPatchMapOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskPatchMapInput` via:
//
//	ClusterPromotionTaskPatchMap{ "key": ClusterPromotionTaskPatchArgs{...} }
type ClusterPromotionTaskPatchMapInput interface {
	pulumi.Input

	ToClusterPromotionTaskPatchMapOutput() ClusterPromotionTaskPatchMapOutput
	ToClusterPromotionTaskPatchMapOutputWithContext(context.Context) ClusterPromotionTaskPatchMapOutput
}

type ClusterPromotionTaskPatchMap map[string]ClusterPromotionTaskPatchInput

func (ClusterPromotionTaskPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterPromotionTaskPatch)(nil)).Elem()
}

func (i ClusterPromotionTaskPatchMap) ToClusterPromotionTaskPatchMapOutput() ClusterPromotionTaskPatchMapOutput {
	return i.ToClusterPromotionTaskPatchMapOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskPatchMap) ToClusterPromotionTaskPatchMapOutputWithContext(ctx context.Context) ClusterPromotionTaskPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskPatchMapOutput)
}

type ClusterPromotionTaskPatchOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTaskPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskPatchOutput) ToClusterPromotionTaskPatchOutput() ClusterPromotionTaskPatchOutput {
	return o
}

func (o ClusterPromotionTaskPatchOutput) ToClusterPromotionTaskPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ClusterPromotionTaskPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterPromotionTaskPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClusterPromotionTaskPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ClusterPromotionTaskPatchOutput) Spec() ClusterPromotionTaskSpecPatchPtrOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskPatch) ClusterPromotionTaskSpecPatchPtrOutput { return v.Spec }).(ClusterPromotionTaskSpecPatchPtrOutput)
}

type ClusterPromotionTaskPatchArrayOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterPromotionTaskPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskPatchArrayOutput) ToClusterPromotionTaskPatchArrayOutput() ClusterPromotionTaskPatchArrayOutput {
	return o
}

func (o ClusterPromotionTaskPatchArrayOutput) ToClusterPromotionTaskPatchArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskPatchArrayOutput {
	return o
}

func (o ClusterPromotionTaskPatchArrayOutput) Index(i pulumi.IntInput) ClusterPromotionTaskPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClusterPromotionTaskPatch {
		return vs[0].([]*ClusterPromotionTaskPatch)[vs[1].(int)]
	}).(ClusterPromotionTaskPatchOutput)
}

type ClusterPromotionTaskPatchMapOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterPromotionTaskPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskPatchMapOutput) ToClusterPromotionTaskPatchMapOutput() ClusterPromotionTaskPatchMapOutput {
	return o
}

func (o ClusterPromotionTaskPatchMapOutput) ToClusterPromotionTaskPatchMapOutputWithContext(ctx context.Context) ClusterPromotionTaskPatchMapOutput {
	return o
}

func (o ClusterPromotionTaskPatchMapOutput) MapIndex(k pulumi.StringInput) ClusterPromotionTaskPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClusterPromotionTaskPatch {
		return vs[0].(map[string]*ClusterPromotionTaskPatch)[vs[1].(string)]
	}).(ClusterPromotionTaskPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskPatchInput)(nil)).Elem(), &ClusterPromotionTaskPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskPatchArrayInput)(nil)).Elem(), ClusterPromotionTaskPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskPatchMapInput)(nil)).Elem(), ClusterPromotionTaskPatchMap{})
	pulumi.RegisterOutputType(ClusterPromotionTaskPatchOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskPatchArrayOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskPatchMapOutput{})
}
