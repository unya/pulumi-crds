// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PromotionList is a list of Promotion
type PromotionList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of promotions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PromotionTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewPromotionList registers a new resource with the given unique name, arguments, and options.
func NewPromotionList(ctx *pulumi.Context,
	name string, args *PromotionListArgs, opts ...pulumi.ResourceOption) (*PromotionList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("kargo.akuity.io/v1alpha1")
	args.Kind = pulumi.StringPtr("PromotionList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PromotionList
	err := ctx.RegisterResource("kubernetes:kargo.akuity.io/v1alpha1:PromotionList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPromotionList gets an existing PromotionList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPromotionList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PromotionListState, opts ...pulumi.ResourceOption) (*PromotionList, error) {
	var resource PromotionList
	err := ctx.ReadResource("kubernetes:kargo.akuity.io/v1alpha1:PromotionList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PromotionList resources.
type promotionListState struct {
}

type PromotionListState struct {
}

func (PromotionListState) ElementType() reflect.Type {
	return reflect.TypeOf((*promotionListState)(nil)).Elem()
}

type promotionListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of promotions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PromotionType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PromotionList resource.
type PromotionListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of promotions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PromotionTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (PromotionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*promotionListArgs)(nil)).Elem()
}

type PromotionListInput interface {
	pulumi.Input

	ToPromotionListOutput() PromotionListOutput
	ToPromotionListOutputWithContext(ctx context.Context) PromotionListOutput
}

func (*PromotionList) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionList)(nil)).Elem()
}

func (i *PromotionList) ToPromotionListOutput() PromotionListOutput {
	return i.ToPromotionListOutputWithContext(context.Background())
}

func (i *PromotionList) ToPromotionListOutputWithContext(ctx context.Context) PromotionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionListOutput)
}

// PromotionListArrayInput is an input type that accepts PromotionListArray and PromotionListArrayOutput values.
// You can construct a concrete instance of `PromotionListArrayInput` via:
//
//	PromotionListArray{ PromotionListArgs{...} }
type PromotionListArrayInput interface {
	pulumi.Input

	ToPromotionListArrayOutput() PromotionListArrayOutput
	ToPromotionListArrayOutputWithContext(context.Context) PromotionListArrayOutput
}

type PromotionListArray []PromotionListInput

func (PromotionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PromotionList)(nil)).Elem()
}

func (i PromotionListArray) ToPromotionListArrayOutput() PromotionListArrayOutput {
	return i.ToPromotionListArrayOutputWithContext(context.Background())
}

func (i PromotionListArray) ToPromotionListArrayOutputWithContext(ctx context.Context) PromotionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionListArrayOutput)
}

// PromotionListMapInput is an input type that accepts PromotionListMap and PromotionListMapOutput values.
// You can construct a concrete instance of `PromotionListMapInput` via:
//
//	PromotionListMap{ "key": PromotionListArgs{...} }
type PromotionListMapInput interface {
	pulumi.Input

	ToPromotionListMapOutput() PromotionListMapOutput
	ToPromotionListMapOutputWithContext(context.Context) PromotionListMapOutput
}

type PromotionListMap map[string]PromotionListInput

func (PromotionListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PromotionList)(nil)).Elem()
}

func (i PromotionListMap) ToPromotionListMapOutput() PromotionListMapOutput {
	return i.ToPromotionListMapOutputWithContext(context.Background())
}

func (i PromotionListMap) ToPromotionListMapOutputWithContext(ctx context.Context) PromotionListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionListMapOutput)
}

type PromotionListOutput struct{ *pulumi.OutputState }

func (PromotionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionList)(nil)).Elem()
}

func (o PromotionListOutput) ToPromotionListOutput() PromotionListOutput {
	return o
}

func (o PromotionListOutput) ToPromotionListOutputWithContext(ctx context.Context) PromotionListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PromotionListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PromotionList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of promotions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PromotionListOutput) Items() PromotionTypeArrayOutput {
	return o.ApplyT(func(v *PromotionList) PromotionTypeArrayOutput { return v.Items }).(PromotionTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PromotionList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *PromotionList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type PromotionListArrayOutput struct{ *pulumi.OutputState }

func (PromotionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PromotionList)(nil)).Elem()
}

func (o PromotionListArrayOutput) ToPromotionListArrayOutput() PromotionListArrayOutput {
	return o
}

func (o PromotionListArrayOutput) ToPromotionListArrayOutputWithContext(ctx context.Context) PromotionListArrayOutput {
	return o
}

func (o PromotionListArrayOutput) Index(i pulumi.IntInput) PromotionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PromotionList {
		return vs[0].([]*PromotionList)[vs[1].(int)]
	}).(PromotionListOutput)
}

type PromotionListMapOutput struct{ *pulumi.OutputState }

func (PromotionListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PromotionList)(nil)).Elem()
}

func (o PromotionListMapOutput) ToPromotionListMapOutput() PromotionListMapOutput {
	return o
}

func (o PromotionListMapOutput) ToPromotionListMapOutputWithContext(ctx context.Context) PromotionListMapOutput {
	return o
}

func (o PromotionListMapOutput) MapIndex(k pulumi.StringInput) PromotionListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PromotionList {
		return vs[0].(map[string]*PromotionList)[vs[1].(string)]
	}).(PromotionListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionListInput)(nil)).Elem(), &PromotionList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionListArrayInput)(nil)).Elem(), PromotionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionListMapInput)(nil)).Elem(), PromotionListMap{})
	pulumi.RegisterOutputType(PromotionListOutput{})
	pulumi.RegisterOutputType(PromotionListArrayOutput{})
	pulumi.RegisterOutputType(PromotionListMapOutput{})
}
