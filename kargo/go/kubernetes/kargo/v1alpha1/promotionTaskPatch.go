// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
type PromotionTaskPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput `pulumi:"metadata"`
	Spec     PromotionTaskSpecPatchPtrOutput `pulumi:"spec"`
}

// NewPromotionTaskPatch registers a new resource with the given unique name, arguments, and options.
func NewPromotionTaskPatch(ctx *pulumi.Context,
	name string, args *PromotionTaskPatchArgs, opts ...pulumi.ResourceOption) (*PromotionTaskPatch, error) {
	if args == nil {
		args = &PromotionTaskPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("kargo.akuity.io/v1alpha1")
	args.Kind = pulumi.StringPtr("PromotionTask")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PromotionTaskPatch
	err := ctx.RegisterResource("kubernetes:kargo.akuity.io/v1alpha1:PromotionTaskPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPromotionTaskPatch gets an existing PromotionTaskPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPromotionTaskPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PromotionTaskPatchState, opts ...pulumi.ResourceOption) (*PromotionTaskPatch, error) {
	var resource PromotionTaskPatch
	err := ctx.ReadResource("kubernetes:kargo.akuity.io/v1alpha1:PromotionTaskPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PromotionTaskPatch resources.
type promotionTaskPatchState struct {
}

type PromotionTaskPatchState struct {
}

func (PromotionTaskPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*promotionTaskPatchState)(nil)).Elem()
}

type promotionTaskPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *PromotionTaskSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a PromotionTaskPatch resource.
type PromotionTaskPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     PromotionTaskSpecPatchPtrInput
}

func (PromotionTaskPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*promotionTaskPatchArgs)(nil)).Elem()
}

type PromotionTaskPatchInput interface {
	pulumi.Input

	ToPromotionTaskPatchOutput() PromotionTaskPatchOutput
	ToPromotionTaskPatchOutputWithContext(ctx context.Context) PromotionTaskPatchOutput
}

func (*PromotionTaskPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskPatch)(nil)).Elem()
}

func (i *PromotionTaskPatch) ToPromotionTaskPatchOutput() PromotionTaskPatchOutput {
	return i.ToPromotionTaskPatchOutputWithContext(context.Background())
}

func (i *PromotionTaskPatch) ToPromotionTaskPatchOutputWithContext(ctx context.Context) PromotionTaskPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskPatchOutput)
}

// PromotionTaskPatchArrayInput is an input type that accepts PromotionTaskPatchArray and PromotionTaskPatchArrayOutput values.
// You can construct a concrete instance of `PromotionTaskPatchArrayInput` via:
//
//	PromotionTaskPatchArray{ PromotionTaskPatchArgs{...} }
type PromotionTaskPatchArrayInput interface {
	pulumi.Input

	ToPromotionTaskPatchArrayOutput() PromotionTaskPatchArrayOutput
	ToPromotionTaskPatchArrayOutputWithContext(context.Context) PromotionTaskPatchArrayOutput
}

type PromotionTaskPatchArray []PromotionTaskPatchInput

func (PromotionTaskPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PromotionTaskPatch)(nil)).Elem()
}

func (i PromotionTaskPatchArray) ToPromotionTaskPatchArrayOutput() PromotionTaskPatchArrayOutput {
	return i.ToPromotionTaskPatchArrayOutputWithContext(context.Background())
}

func (i PromotionTaskPatchArray) ToPromotionTaskPatchArrayOutputWithContext(ctx context.Context) PromotionTaskPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskPatchArrayOutput)
}

// PromotionTaskPatchMapInput is an input type that accepts PromotionTaskPatchMap and PromotionTaskPatchMapOutput values.
// You can construct a concrete instance of `PromotionTaskPatchMapInput` via:
//
//	PromotionTaskPatchMap{ "key": PromotionTaskPatchArgs{...} }
type PromotionTaskPatchMapInput interface {
	pulumi.Input

	ToPromotionTaskPatchMapOutput() PromotionTaskPatchMapOutput
	ToPromotionTaskPatchMapOutputWithContext(context.Context) PromotionTaskPatchMapOutput
}

type PromotionTaskPatchMap map[string]PromotionTaskPatchInput

func (PromotionTaskPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PromotionTaskPatch)(nil)).Elem()
}

func (i PromotionTaskPatchMap) ToPromotionTaskPatchMapOutput() PromotionTaskPatchMapOutput {
	return i.ToPromotionTaskPatchMapOutputWithContext(context.Background())
}

func (i PromotionTaskPatchMap) ToPromotionTaskPatchMapOutputWithContext(ctx context.Context) PromotionTaskPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskPatchMapOutput)
}

type PromotionTaskPatchOutput struct{ *pulumi.OutputState }

func (PromotionTaskPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskPatch)(nil)).Elem()
}

func (o PromotionTaskPatchOutput) ToPromotionTaskPatchOutput() PromotionTaskPatchOutput {
	return o
}

func (o PromotionTaskPatchOutput) ToPromotionTaskPatchOutputWithContext(ctx context.Context) PromotionTaskPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PromotionTaskPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionTaskPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionTaskPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionTaskPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PromotionTaskPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *PromotionTaskPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o PromotionTaskPatchOutput) Spec() PromotionTaskSpecPatchPtrOutput {
	return o.ApplyT(func(v *PromotionTaskPatch) PromotionTaskSpecPatchPtrOutput { return v.Spec }).(PromotionTaskSpecPatchPtrOutput)
}

type PromotionTaskPatchArrayOutput struct{ *pulumi.OutputState }

func (PromotionTaskPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PromotionTaskPatch)(nil)).Elem()
}

func (o PromotionTaskPatchArrayOutput) ToPromotionTaskPatchArrayOutput() PromotionTaskPatchArrayOutput {
	return o
}

func (o PromotionTaskPatchArrayOutput) ToPromotionTaskPatchArrayOutputWithContext(ctx context.Context) PromotionTaskPatchArrayOutput {
	return o
}

func (o PromotionTaskPatchArrayOutput) Index(i pulumi.IntInput) PromotionTaskPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PromotionTaskPatch {
		return vs[0].([]*PromotionTaskPatch)[vs[1].(int)]
	}).(PromotionTaskPatchOutput)
}

type PromotionTaskPatchMapOutput struct{ *pulumi.OutputState }

func (PromotionTaskPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PromotionTaskPatch)(nil)).Elem()
}

func (o PromotionTaskPatchMapOutput) ToPromotionTaskPatchMapOutput() PromotionTaskPatchMapOutput {
	return o
}

func (o PromotionTaskPatchMapOutput) ToPromotionTaskPatchMapOutputWithContext(ctx context.Context) PromotionTaskPatchMapOutput {
	return o
}

func (o PromotionTaskPatchMapOutput) MapIndex(k pulumi.StringInput) PromotionTaskPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PromotionTaskPatch {
		return vs[0].(map[string]*PromotionTaskPatch)[vs[1].(string)]
	}).(PromotionTaskPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskPatchInput)(nil)).Elem(), &PromotionTaskPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskPatchArrayInput)(nil)).Elem(), PromotionTaskPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskPatchMapInput)(nil)).Elem(), PromotionTaskPatchMap{})
	pulumi.RegisterOutputType(PromotionTaskPatchOutput{})
	pulumi.RegisterOutputType(PromotionTaskPatchArrayOutput{})
	pulumi.RegisterOutputType(PromotionTaskPatchMapOutput{})
}
