// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

type ClusterPromotionTaskType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta        `pulumi:"metadata"`
	Spec     *ClusterPromotionTaskSpec `pulumi:"spec"`
}

// ClusterPromotionTaskTypeInput is an input type that accepts ClusterPromotionTaskTypeArgs and ClusterPromotionTaskTypeOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskTypeInput` via:
//
//	ClusterPromotionTaskTypeArgs{...}
type ClusterPromotionTaskTypeInput interface {
	pulumi.Input

	ToClusterPromotionTaskTypeOutput() ClusterPromotionTaskTypeOutput
	ToClusterPromotionTaskTypeOutputWithContext(context.Context) ClusterPromotionTaskTypeOutput
}

type ClusterPromotionTaskTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput        `pulumi:"metadata"`
	Spec     ClusterPromotionTaskSpecPtrInput `pulumi:"spec"`
}

func (ClusterPromotionTaskTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskType)(nil)).Elem()
}

func (i ClusterPromotionTaskTypeArgs) ToClusterPromotionTaskTypeOutput() ClusterPromotionTaskTypeOutput {
	return i.ToClusterPromotionTaskTypeOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskTypeArgs) ToClusterPromotionTaskTypeOutputWithContext(ctx context.Context) ClusterPromotionTaskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskTypeOutput)
}

// ClusterPromotionTaskTypeArrayInput is an input type that accepts ClusterPromotionTaskTypeArray and ClusterPromotionTaskTypeArrayOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskTypeArrayInput` via:
//
//	ClusterPromotionTaskTypeArray{ ClusterPromotionTaskTypeArgs{...} }
type ClusterPromotionTaskTypeArrayInput interface {
	pulumi.Input

	ToClusterPromotionTaskTypeArrayOutput() ClusterPromotionTaskTypeArrayOutput
	ToClusterPromotionTaskTypeArrayOutputWithContext(context.Context) ClusterPromotionTaskTypeArrayOutput
}

type ClusterPromotionTaskTypeArray []ClusterPromotionTaskTypeInput

func (ClusterPromotionTaskTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPromotionTaskType)(nil)).Elem()
}

func (i ClusterPromotionTaskTypeArray) ToClusterPromotionTaskTypeArrayOutput() ClusterPromotionTaskTypeArrayOutput {
	return i.ToClusterPromotionTaskTypeArrayOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskTypeArray) ToClusterPromotionTaskTypeArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskTypeArrayOutput)
}

type ClusterPromotionTaskTypeOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskType)(nil)).Elem()
}

func (o ClusterPromotionTaskTypeOutput) ToClusterPromotionTaskTypeOutput() ClusterPromotionTaskTypeOutput {
	return o
}

func (o ClusterPromotionTaskTypeOutput) ToClusterPromotionTaskTypeOutputWithContext(ctx context.Context) ClusterPromotionTaskTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ClusterPromotionTaskTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterPromotionTaskTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClusterPromotionTaskTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o ClusterPromotionTaskTypeOutput) Spec() ClusterPromotionTaskSpecPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskType) *ClusterPromotionTaskSpec { return v.Spec }).(ClusterPromotionTaskSpecPtrOutput)
}

type ClusterPromotionTaskTypeArrayOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPromotionTaskType)(nil)).Elem()
}

func (o ClusterPromotionTaskTypeArrayOutput) ToClusterPromotionTaskTypeArrayOutput() ClusterPromotionTaskTypeArrayOutput {
	return o
}

func (o ClusterPromotionTaskTypeArrayOutput) ToClusterPromotionTaskTypeArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskTypeArrayOutput {
	return o
}

func (o ClusterPromotionTaskTypeArrayOutput) Index(i pulumi.IntInput) ClusterPromotionTaskTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPromotionTaskType {
		return vs[0].([]ClusterPromotionTaskType)[vs[1].(int)]
	}).(ClusterPromotionTaskTypeOutput)
}

// ClusterPromotionTaskList is a list of ClusterPromotionTask
type ClusterPromotionTaskListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of clusterpromotiontasks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []ClusterPromotionTaskType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// ClusterPromotionTaskListTypeInput is an input type that accepts ClusterPromotionTaskListTypeArgs and ClusterPromotionTaskListTypeOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskListTypeInput` via:
//
//	ClusterPromotionTaskListTypeArgs{...}
type ClusterPromotionTaskListTypeInput interface {
	pulumi.Input

	ToClusterPromotionTaskListTypeOutput() ClusterPromotionTaskListTypeOutput
	ToClusterPromotionTaskListTypeOutputWithContext(context.Context) ClusterPromotionTaskListTypeOutput
}

// ClusterPromotionTaskList is a list of ClusterPromotionTask
type ClusterPromotionTaskListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of clusterpromotiontasks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ClusterPromotionTaskTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (ClusterPromotionTaskListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskListType)(nil)).Elem()
}

func (i ClusterPromotionTaskListTypeArgs) ToClusterPromotionTaskListTypeOutput() ClusterPromotionTaskListTypeOutput {
	return i.ToClusterPromotionTaskListTypeOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskListTypeArgs) ToClusterPromotionTaskListTypeOutputWithContext(ctx context.Context) ClusterPromotionTaskListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskListTypeOutput)
}

// ClusterPromotionTaskList is a list of ClusterPromotionTask
type ClusterPromotionTaskListTypeOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskListType)(nil)).Elem()
}

func (o ClusterPromotionTaskListTypeOutput) ToClusterPromotionTaskListTypeOutput() ClusterPromotionTaskListTypeOutput {
	return o
}

func (o ClusterPromotionTaskListTypeOutput) ToClusterPromotionTaskListTypeOutputWithContext(ctx context.Context) ClusterPromotionTaskListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ClusterPromotionTaskListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of clusterpromotiontasks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o ClusterPromotionTaskListTypeOutput) Items() ClusterPromotionTaskTypeArrayOutput {
	return o.ApplyT(func(v ClusterPromotionTaskListType) []ClusterPromotionTaskType { return v.Items }).(ClusterPromotionTaskTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterPromotionTaskListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterPromotionTaskListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type ClusterPromotionTaskPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch        `pulumi:"metadata"`
	Spec     *ClusterPromotionTaskSpecPatch `pulumi:"spec"`
}

// ClusterPromotionTaskPatchTypeInput is an input type that accepts ClusterPromotionTaskPatchTypeArgs and ClusterPromotionTaskPatchTypeOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskPatchTypeInput` via:
//
//	ClusterPromotionTaskPatchTypeArgs{...}
type ClusterPromotionTaskPatchTypeInput interface {
	pulumi.Input

	ToClusterPromotionTaskPatchTypeOutput() ClusterPromotionTaskPatchTypeOutput
	ToClusterPromotionTaskPatchTypeOutputWithContext(context.Context) ClusterPromotionTaskPatchTypeOutput
}

type ClusterPromotionTaskPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput        `pulumi:"metadata"`
	Spec     ClusterPromotionTaskSpecPatchPtrInput `pulumi:"spec"`
}

func (ClusterPromotionTaskPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskPatchType)(nil)).Elem()
}

func (i ClusterPromotionTaskPatchTypeArgs) ToClusterPromotionTaskPatchTypeOutput() ClusterPromotionTaskPatchTypeOutput {
	return i.ToClusterPromotionTaskPatchTypeOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskPatchTypeArgs) ToClusterPromotionTaskPatchTypeOutputWithContext(ctx context.Context) ClusterPromotionTaskPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskPatchTypeOutput)
}

type ClusterPromotionTaskPatchTypeOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskPatchType)(nil)).Elem()
}

func (o ClusterPromotionTaskPatchTypeOutput) ToClusterPromotionTaskPatchTypeOutput() ClusterPromotionTaskPatchTypeOutput {
	return o
}

func (o ClusterPromotionTaskPatchTypeOutput) ToClusterPromotionTaskPatchTypeOutputWithContext(ctx context.Context) ClusterPromotionTaskPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ClusterPromotionTaskPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterPromotionTaskPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClusterPromotionTaskPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ClusterPromotionTaskPatchTypeOutput) Spec() ClusterPromotionTaskSpecPatchPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskPatchType) *ClusterPromotionTaskSpecPatch { return v.Spec }).(ClusterPromotionTaskSpecPatchPtrOutput)
}

// Spec describes the desired transition of a specific Stage into a specific
// Freight.
type ClusterPromotionTaskSpec struct {
	// Steps specifies the directives to be executed as part of this
	// PromotionTask. The steps as defined here are inflated into a
	// Promotion when it is built from a PromotionTemplate.
	Steps []ClusterPromotionTaskSpecSteps `pulumi:"steps"`
	// Vars specifies the variables available to the PromotionTask. The
	// values of these variables are the default values that can be
	// overridden by the step referencing the task.
	Vars []ClusterPromotionTaskSpecVars `pulumi:"vars"`
}

// ClusterPromotionTaskSpecInput is an input type that accepts ClusterPromotionTaskSpecArgs and ClusterPromotionTaskSpecOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecInput` via:
//
//	ClusterPromotionTaskSpecArgs{...}
type ClusterPromotionTaskSpecInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecOutput() ClusterPromotionTaskSpecOutput
	ToClusterPromotionTaskSpecOutputWithContext(context.Context) ClusterPromotionTaskSpecOutput
}

// Spec describes the desired transition of a specific Stage into a specific
// Freight.
type ClusterPromotionTaskSpecArgs struct {
	// Steps specifies the directives to be executed as part of this
	// PromotionTask. The steps as defined here are inflated into a
	// Promotion when it is built from a PromotionTemplate.
	Steps ClusterPromotionTaskSpecStepsArrayInput `pulumi:"steps"`
	// Vars specifies the variables available to the PromotionTask. The
	// values of these variables are the default values that can be
	// overridden by the step referencing the task.
	Vars ClusterPromotionTaskSpecVarsArrayInput `pulumi:"vars"`
}

func (ClusterPromotionTaskSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpec)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecArgs) ToClusterPromotionTaskSpecOutput() ClusterPromotionTaskSpecOutput {
	return i.ToClusterPromotionTaskSpecOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecArgs) ToClusterPromotionTaskSpecOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecOutput)
}

func (i ClusterPromotionTaskSpecArgs) ToClusterPromotionTaskSpecPtrOutput() ClusterPromotionTaskSpecPtrOutput {
	return i.ToClusterPromotionTaskSpecPtrOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecArgs) ToClusterPromotionTaskSpecPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecOutput).ToClusterPromotionTaskSpecPtrOutputWithContext(ctx)
}

// ClusterPromotionTaskSpecPtrInput is an input type that accepts ClusterPromotionTaskSpecArgs, ClusterPromotionTaskSpecPtr and ClusterPromotionTaskSpecPtrOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecPtrInput` via:
//
//	        ClusterPromotionTaskSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterPromotionTaskSpecPtrInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecPtrOutput() ClusterPromotionTaskSpecPtrOutput
	ToClusterPromotionTaskSpecPtrOutputWithContext(context.Context) ClusterPromotionTaskSpecPtrOutput
}

type clusterPromotionTaskSpecPtrType ClusterPromotionTaskSpecArgs

func ClusterPromotionTaskSpecPtr(v *ClusterPromotionTaskSpecArgs) ClusterPromotionTaskSpecPtrInput {
	return (*clusterPromotionTaskSpecPtrType)(v)
}

func (*clusterPromotionTaskSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTaskSpec)(nil)).Elem()
}

func (i *clusterPromotionTaskSpecPtrType) ToClusterPromotionTaskSpecPtrOutput() ClusterPromotionTaskSpecPtrOutput {
	return i.ToClusterPromotionTaskSpecPtrOutputWithContext(context.Background())
}

func (i *clusterPromotionTaskSpecPtrType) ToClusterPromotionTaskSpecPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecPtrOutput)
}

// Spec describes the desired transition of a specific Stage into a specific
// Freight.
type ClusterPromotionTaskSpecOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpec)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecOutput) ToClusterPromotionTaskSpecOutput() ClusterPromotionTaskSpecOutput {
	return o
}

func (o ClusterPromotionTaskSpecOutput) ToClusterPromotionTaskSpecOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecOutput {
	return o
}

func (o ClusterPromotionTaskSpecOutput) ToClusterPromotionTaskSpecPtrOutput() ClusterPromotionTaskSpecPtrOutput {
	return o.ToClusterPromotionTaskSpecPtrOutputWithContext(context.Background())
}

func (o ClusterPromotionTaskSpecOutput) ToClusterPromotionTaskSpecPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPromotionTaskSpec) *ClusterPromotionTaskSpec {
		return &v
	}).(ClusterPromotionTaskSpecPtrOutput)
}

// Steps specifies the directives to be executed as part of this
// PromotionTask. The steps as defined here are inflated into a
// Promotion when it is built from a PromotionTemplate.
func (o ClusterPromotionTaskSpecOutput) Steps() ClusterPromotionTaskSpecStepsArrayOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpec) []ClusterPromotionTaskSpecSteps { return v.Steps }).(ClusterPromotionTaskSpecStepsArrayOutput)
}

// Vars specifies the variables available to the PromotionTask. The
// values of these variables are the default values that can be
// overridden by the step referencing the task.
func (o ClusterPromotionTaskSpecOutput) Vars() ClusterPromotionTaskSpecVarsArrayOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpec) []ClusterPromotionTaskSpecVars { return v.Vars }).(ClusterPromotionTaskSpecVarsArrayOutput)
}

type ClusterPromotionTaskSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTaskSpec)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecPtrOutput) ToClusterPromotionTaskSpecPtrOutput() ClusterPromotionTaskSpecPtrOutput {
	return o
}

func (o ClusterPromotionTaskSpecPtrOutput) ToClusterPromotionTaskSpecPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecPtrOutput {
	return o
}

func (o ClusterPromotionTaskSpecPtrOutput) Elem() ClusterPromotionTaskSpecOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpec) ClusterPromotionTaskSpec {
		if v != nil {
			return *v
		}
		var ret ClusterPromotionTaskSpec
		return ret
	}).(ClusterPromotionTaskSpecOutput)
}

// Steps specifies the directives to be executed as part of this
// PromotionTask. The steps as defined here are inflated into a
// Promotion when it is built from a PromotionTemplate.
func (o ClusterPromotionTaskSpecPtrOutput) Steps() ClusterPromotionTaskSpecStepsArrayOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpec) []ClusterPromotionTaskSpecSteps {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(ClusterPromotionTaskSpecStepsArrayOutput)
}

// Vars specifies the variables available to the PromotionTask. The
// values of these variables are the default values that can be
// overridden by the step referencing the task.
func (o ClusterPromotionTaskSpecPtrOutput) Vars() ClusterPromotionTaskSpecVarsArrayOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpec) []ClusterPromotionTaskSpecVars {
		if v == nil {
			return nil
		}
		return v.Vars
	}).(ClusterPromotionTaskSpecVarsArrayOutput)
}

// Spec describes the desired transition of a specific Stage into a specific
// Freight.
type ClusterPromotionTaskSpecPatch struct {
	// Steps specifies the directives to be executed as part of this
	// PromotionTask. The steps as defined here are inflated into a
	// Promotion when it is built from a PromotionTemplate.
	Steps []ClusterPromotionTaskSpecStepsPatch `pulumi:"steps"`
	// Vars specifies the variables available to the PromotionTask. The
	// values of these variables are the default values that can be
	// overridden by the step referencing the task.
	Vars []ClusterPromotionTaskSpecVarsPatch `pulumi:"vars"`
}

// ClusterPromotionTaskSpecPatchInput is an input type that accepts ClusterPromotionTaskSpecPatchArgs and ClusterPromotionTaskSpecPatchOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecPatchInput` via:
//
//	ClusterPromotionTaskSpecPatchArgs{...}
type ClusterPromotionTaskSpecPatchInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecPatchOutput() ClusterPromotionTaskSpecPatchOutput
	ToClusterPromotionTaskSpecPatchOutputWithContext(context.Context) ClusterPromotionTaskSpecPatchOutput
}

// Spec describes the desired transition of a specific Stage into a specific
// Freight.
type ClusterPromotionTaskSpecPatchArgs struct {
	// Steps specifies the directives to be executed as part of this
	// PromotionTask. The steps as defined here are inflated into a
	// Promotion when it is built from a PromotionTemplate.
	Steps ClusterPromotionTaskSpecStepsPatchArrayInput `pulumi:"steps"`
	// Vars specifies the variables available to the PromotionTask. The
	// values of these variables are the default values that can be
	// overridden by the step referencing the task.
	Vars ClusterPromotionTaskSpecVarsPatchArrayInput `pulumi:"vars"`
}

func (ClusterPromotionTaskSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecPatch)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecPatchArgs) ToClusterPromotionTaskSpecPatchOutput() ClusterPromotionTaskSpecPatchOutput {
	return i.ToClusterPromotionTaskSpecPatchOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecPatchArgs) ToClusterPromotionTaskSpecPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecPatchOutput)
}

func (i ClusterPromotionTaskSpecPatchArgs) ToClusterPromotionTaskSpecPatchPtrOutput() ClusterPromotionTaskSpecPatchPtrOutput {
	return i.ToClusterPromotionTaskSpecPatchPtrOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecPatchArgs) ToClusterPromotionTaskSpecPatchPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecPatchOutput).ToClusterPromotionTaskSpecPatchPtrOutputWithContext(ctx)
}

// ClusterPromotionTaskSpecPatchPtrInput is an input type that accepts ClusterPromotionTaskSpecPatchArgs, ClusterPromotionTaskSpecPatchPtr and ClusterPromotionTaskSpecPatchPtrOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecPatchPtrInput` via:
//
//	        ClusterPromotionTaskSpecPatchArgs{...}
//
//	or:
//
//	        nil
type ClusterPromotionTaskSpecPatchPtrInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecPatchPtrOutput() ClusterPromotionTaskSpecPatchPtrOutput
	ToClusterPromotionTaskSpecPatchPtrOutputWithContext(context.Context) ClusterPromotionTaskSpecPatchPtrOutput
}

type clusterPromotionTaskSpecPatchPtrType ClusterPromotionTaskSpecPatchArgs

func ClusterPromotionTaskSpecPatchPtr(v *ClusterPromotionTaskSpecPatchArgs) ClusterPromotionTaskSpecPatchPtrInput {
	return (*clusterPromotionTaskSpecPatchPtrType)(v)
}

func (*clusterPromotionTaskSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTaskSpecPatch)(nil)).Elem()
}

func (i *clusterPromotionTaskSpecPatchPtrType) ToClusterPromotionTaskSpecPatchPtrOutput() ClusterPromotionTaskSpecPatchPtrOutput {
	return i.ToClusterPromotionTaskSpecPatchPtrOutputWithContext(context.Background())
}

func (i *clusterPromotionTaskSpecPatchPtrType) ToClusterPromotionTaskSpecPatchPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecPatchPtrOutput)
}

// Spec describes the desired transition of a specific Stage into a specific
// Freight.
type ClusterPromotionTaskSpecPatchOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecPatchOutput) ToClusterPromotionTaskSpecPatchOutput() ClusterPromotionTaskSpecPatchOutput {
	return o
}

func (o ClusterPromotionTaskSpecPatchOutput) ToClusterPromotionTaskSpecPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecPatchOutput {
	return o
}

func (o ClusterPromotionTaskSpecPatchOutput) ToClusterPromotionTaskSpecPatchPtrOutput() ClusterPromotionTaskSpecPatchPtrOutput {
	return o.ToClusterPromotionTaskSpecPatchPtrOutputWithContext(context.Background())
}

func (o ClusterPromotionTaskSpecPatchOutput) ToClusterPromotionTaskSpecPatchPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPromotionTaskSpecPatch) *ClusterPromotionTaskSpecPatch {
		return &v
	}).(ClusterPromotionTaskSpecPatchPtrOutput)
}

// Steps specifies the directives to be executed as part of this
// PromotionTask. The steps as defined here are inflated into a
// Promotion when it is built from a PromotionTemplate.
func (o ClusterPromotionTaskSpecPatchOutput) Steps() ClusterPromotionTaskSpecStepsPatchArrayOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecPatch) []ClusterPromotionTaskSpecStepsPatch { return v.Steps }).(ClusterPromotionTaskSpecStepsPatchArrayOutput)
}

// Vars specifies the variables available to the PromotionTask. The
// values of these variables are the default values that can be
// overridden by the step referencing the task.
func (o ClusterPromotionTaskSpecPatchOutput) Vars() ClusterPromotionTaskSpecVarsPatchArrayOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecPatch) []ClusterPromotionTaskSpecVarsPatch { return v.Vars }).(ClusterPromotionTaskSpecVarsPatchArrayOutput)
}

type ClusterPromotionTaskSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTaskSpecPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecPatchPtrOutput) ToClusterPromotionTaskSpecPatchPtrOutput() ClusterPromotionTaskSpecPatchPtrOutput {
	return o
}

func (o ClusterPromotionTaskSpecPatchPtrOutput) ToClusterPromotionTaskSpecPatchPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecPatchPtrOutput {
	return o
}

func (o ClusterPromotionTaskSpecPatchPtrOutput) Elem() ClusterPromotionTaskSpecPatchOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecPatch) ClusterPromotionTaskSpecPatch {
		if v != nil {
			return *v
		}
		var ret ClusterPromotionTaskSpecPatch
		return ret
	}).(ClusterPromotionTaskSpecPatchOutput)
}

// Steps specifies the directives to be executed as part of this
// PromotionTask. The steps as defined here are inflated into a
// Promotion when it is built from a PromotionTemplate.
func (o ClusterPromotionTaskSpecPatchPtrOutput) Steps() ClusterPromotionTaskSpecStepsPatchArrayOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecPatch) []ClusterPromotionTaskSpecStepsPatch {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(ClusterPromotionTaskSpecStepsPatchArrayOutput)
}

// Vars specifies the variables available to the PromotionTask. The
// values of these variables are the default values that can be
// overridden by the step referencing the task.
func (o ClusterPromotionTaskSpecPatchPtrOutput) Vars() ClusterPromotionTaskSpecVarsPatchArrayOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecPatch) []ClusterPromotionTaskSpecVarsPatch {
		if v == nil {
			return nil
		}
		return v.Vars
	}).(ClusterPromotionTaskSpecVarsPatchArrayOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type ClusterPromotionTaskSpecSteps struct {
	// As is the alias this step can be referred to as.
	As *string `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config map[string]interface{} `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    *string                             `pulumi:"if"`
	Retry *ClusterPromotionTaskSpecStepsRetry `pulumi:"retry"`
	Task  *ClusterPromotionTaskSpecStepsTask  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses *string `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars []ClusterPromotionTaskSpecStepsVars `pulumi:"vars"`
}

// ClusterPromotionTaskSpecStepsInput is an input type that accepts ClusterPromotionTaskSpecStepsArgs and ClusterPromotionTaskSpecStepsOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsInput` via:
//
//	ClusterPromotionTaskSpecStepsArgs{...}
type ClusterPromotionTaskSpecStepsInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsOutput() ClusterPromotionTaskSpecStepsOutput
	ToClusterPromotionTaskSpecStepsOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsOutput
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type ClusterPromotionTaskSpecStepsArgs struct {
	// As is the alias this step can be referred to as.
	As pulumi.StringPtrInput `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config pulumi.MapInput `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError pulumi.BoolPtrInput `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    pulumi.StringPtrInput                      `pulumi:"if"`
	Retry ClusterPromotionTaskSpecStepsRetryPtrInput `pulumi:"retry"`
	Task  ClusterPromotionTaskSpecStepsTaskPtrInput  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses pulumi.StringPtrInput `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars ClusterPromotionTaskSpecStepsVarsArrayInput `pulumi:"vars"`
}

func (ClusterPromotionTaskSpecStepsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecSteps)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecStepsArgs) ToClusterPromotionTaskSpecStepsOutput() ClusterPromotionTaskSpecStepsOutput {
	return i.ToClusterPromotionTaskSpecStepsOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsArgs) ToClusterPromotionTaskSpecStepsOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsOutput)
}

// ClusterPromotionTaskSpecStepsArrayInput is an input type that accepts ClusterPromotionTaskSpecStepsArray and ClusterPromotionTaskSpecStepsArrayOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsArrayInput` via:
//
//	ClusterPromotionTaskSpecStepsArray{ ClusterPromotionTaskSpecStepsArgs{...} }
type ClusterPromotionTaskSpecStepsArrayInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsArrayOutput() ClusterPromotionTaskSpecStepsArrayOutput
	ToClusterPromotionTaskSpecStepsArrayOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsArrayOutput
}

type ClusterPromotionTaskSpecStepsArray []ClusterPromotionTaskSpecStepsInput

func (ClusterPromotionTaskSpecStepsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPromotionTaskSpecSteps)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecStepsArray) ToClusterPromotionTaskSpecStepsArrayOutput() ClusterPromotionTaskSpecStepsArrayOutput {
	return i.ToClusterPromotionTaskSpecStepsArrayOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsArray) ToClusterPromotionTaskSpecStepsArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsArrayOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type ClusterPromotionTaskSpecStepsOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecSteps)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsOutput) ToClusterPromotionTaskSpecStepsOutput() ClusterPromotionTaskSpecStepsOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsOutput) ToClusterPromotionTaskSpecStepsOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsOutput {
	return o
}

// As is the alias this step can be referred to as.
func (o ClusterPromotionTaskSpecStepsOutput) As() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecSteps) *string { return v.As }).(pulumi.StringPtrOutput)
}

// Config is opaque configuration for the PromotionStep that is understood
// only by each PromotionStep's implementation. It is legal to utilize
// expressions in defining values at any level of this block.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o ClusterPromotionTaskSpecStepsOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecSteps) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// ContinueOnError is a boolean value that, if set to true, will cause the
// Promotion to continue executing the next step even if this step fails. It
// also will not permit this failure to impact the overall status of the
// Promotion.
func (o ClusterPromotionTaskSpecStepsOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecSteps) *bool { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// If is an optional expression that, if present, must evaluate to a boolean
// value. If the expression evaluates to false, the step will be skipped.
// If the expression does not evaluate to a boolean value, the step will be
// considered to have failed.
func (o ClusterPromotionTaskSpecStepsOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecSteps) *string { return v.If }).(pulumi.StringPtrOutput)
}

func (o ClusterPromotionTaskSpecStepsOutput) Retry() ClusterPromotionTaskSpecStepsRetryPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecSteps) *ClusterPromotionTaskSpecStepsRetry { return v.Retry }).(ClusterPromotionTaskSpecStepsRetryPtrOutput)
}

func (o ClusterPromotionTaskSpecStepsOutput) Task() ClusterPromotionTaskSpecStepsTaskPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecSteps) *ClusterPromotionTaskSpecStepsTask { return v.Task }).(ClusterPromotionTaskSpecStepsTaskPtrOutput)
}

// Uses identifies a runner that can execute this step.
func (o ClusterPromotionTaskSpecStepsOutput) Uses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecSteps) *string { return v.Uses }).(pulumi.StringPtrOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// the step's Config. The values override the values specified in the
// PromotionSpec.
func (o ClusterPromotionTaskSpecStepsOutput) Vars() ClusterPromotionTaskSpecStepsVarsArrayOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecSteps) []ClusterPromotionTaskSpecStepsVars { return v.Vars }).(ClusterPromotionTaskSpecStepsVarsArrayOutput)
}

type ClusterPromotionTaskSpecStepsArrayOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPromotionTaskSpecSteps)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsArrayOutput) ToClusterPromotionTaskSpecStepsArrayOutput() ClusterPromotionTaskSpecStepsArrayOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsArrayOutput) ToClusterPromotionTaskSpecStepsArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsArrayOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsArrayOutput) Index(i pulumi.IntInput) ClusterPromotionTaskSpecStepsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPromotionTaskSpecSteps {
		return vs[0].([]ClusterPromotionTaskSpecSteps)[vs[1].(int)]
	}).(ClusterPromotionTaskSpecStepsOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type ClusterPromotionTaskSpecStepsPatch struct {
	// As is the alias this step can be referred to as.
	As *string `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config map[string]interface{} `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    *string                                  `pulumi:"if"`
	Retry *ClusterPromotionTaskSpecStepsRetryPatch `pulumi:"retry"`
	Task  *ClusterPromotionTaskSpecStepsTaskPatch  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses *string `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars []ClusterPromotionTaskSpecStepsVarsPatch `pulumi:"vars"`
}

// ClusterPromotionTaskSpecStepsPatchInput is an input type that accepts ClusterPromotionTaskSpecStepsPatchArgs and ClusterPromotionTaskSpecStepsPatchOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsPatchInput` via:
//
//	ClusterPromotionTaskSpecStepsPatchArgs{...}
type ClusterPromotionTaskSpecStepsPatchInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsPatchOutput() ClusterPromotionTaskSpecStepsPatchOutput
	ToClusterPromotionTaskSpecStepsPatchOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsPatchOutput
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type ClusterPromotionTaskSpecStepsPatchArgs struct {
	// As is the alias this step can be referred to as.
	As pulumi.StringPtrInput `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config pulumi.MapInput `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError pulumi.BoolPtrInput `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    pulumi.StringPtrInput                           `pulumi:"if"`
	Retry ClusterPromotionTaskSpecStepsRetryPatchPtrInput `pulumi:"retry"`
	Task  ClusterPromotionTaskSpecStepsTaskPatchPtrInput  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses pulumi.StringPtrInput `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars ClusterPromotionTaskSpecStepsVarsPatchArrayInput `pulumi:"vars"`
}

func (ClusterPromotionTaskSpecStepsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecStepsPatch)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecStepsPatchArgs) ToClusterPromotionTaskSpecStepsPatchOutput() ClusterPromotionTaskSpecStepsPatchOutput {
	return i.ToClusterPromotionTaskSpecStepsPatchOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsPatchArgs) ToClusterPromotionTaskSpecStepsPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsPatchOutput)
}

// ClusterPromotionTaskSpecStepsPatchArrayInput is an input type that accepts ClusterPromotionTaskSpecStepsPatchArray and ClusterPromotionTaskSpecStepsPatchArrayOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsPatchArrayInput` via:
//
//	ClusterPromotionTaskSpecStepsPatchArray{ ClusterPromotionTaskSpecStepsPatchArgs{...} }
type ClusterPromotionTaskSpecStepsPatchArrayInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsPatchArrayOutput() ClusterPromotionTaskSpecStepsPatchArrayOutput
	ToClusterPromotionTaskSpecStepsPatchArrayOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsPatchArrayOutput
}

type ClusterPromotionTaskSpecStepsPatchArray []ClusterPromotionTaskSpecStepsPatchInput

func (ClusterPromotionTaskSpecStepsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPromotionTaskSpecStepsPatch)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecStepsPatchArray) ToClusterPromotionTaskSpecStepsPatchArrayOutput() ClusterPromotionTaskSpecStepsPatchArrayOutput {
	return i.ToClusterPromotionTaskSpecStepsPatchArrayOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsPatchArray) ToClusterPromotionTaskSpecStepsPatchArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsPatchArrayOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type ClusterPromotionTaskSpecStepsPatchOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecStepsPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsPatchOutput) ToClusterPromotionTaskSpecStepsPatchOutput() ClusterPromotionTaskSpecStepsPatchOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsPatchOutput) ToClusterPromotionTaskSpecStepsPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsPatchOutput {
	return o
}

// As is the alias this step can be referred to as.
func (o ClusterPromotionTaskSpecStepsPatchOutput) As() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsPatch) *string { return v.As }).(pulumi.StringPtrOutput)
}

// Config is opaque configuration for the PromotionStep that is understood
// only by each PromotionStep's implementation. It is legal to utilize
// expressions in defining values at any level of this block.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o ClusterPromotionTaskSpecStepsPatchOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsPatch) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// ContinueOnError is a boolean value that, if set to true, will cause the
// Promotion to continue executing the next step even if this step fails. It
// also will not permit this failure to impact the overall status of the
// Promotion.
func (o ClusterPromotionTaskSpecStepsPatchOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsPatch) *bool { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// If is an optional expression that, if present, must evaluate to a boolean
// value. If the expression evaluates to false, the step will be skipped.
// If the expression does not evaluate to a boolean value, the step will be
// considered to have failed.
func (o ClusterPromotionTaskSpecStepsPatchOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsPatch) *string { return v.If }).(pulumi.StringPtrOutput)
}

func (o ClusterPromotionTaskSpecStepsPatchOutput) Retry() ClusterPromotionTaskSpecStepsRetryPatchPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsPatch) *ClusterPromotionTaskSpecStepsRetryPatch { return v.Retry }).(ClusterPromotionTaskSpecStepsRetryPatchPtrOutput)
}

func (o ClusterPromotionTaskSpecStepsPatchOutput) Task() ClusterPromotionTaskSpecStepsTaskPatchPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsPatch) *ClusterPromotionTaskSpecStepsTaskPatch { return v.Task }).(ClusterPromotionTaskSpecStepsTaskPatchPtrOutput)
}

// Uses identifies a runner that can execute this step.
func (o ClusterPromotionTaskSpecStepsPatchOutput) Uses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsPatch) *string { return v.Uses }).(pulumi.StringPtrOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// the step's Config. The values override the values specified in the
// PromotionSpec.
func (o ClusterPromotionTaskSpecStepsPatchOutput) Vars() ClusterPromotionTaskSpecStepsVarsPatchArrayOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsPatch) []ClusterPromotionTaskSpecStepsVarsPatch { return v.Vars }).(ClusterPromotionTaskSpecStepsVarsPatchArrayOutput)
}

type ClusterPromotionTaskSpecStepsPatchArrayOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPromotionTaskSpecStepsPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsPatchArrayOutput) ToClusterPromotionTaskSpecStepsPatchArrayOutput() ClusterPromotionTaskSpecStepsPatchArrayOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsPatchArrayOutput) ToClusterPromotionTaskSpecStepsPatchArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsPatchArrayOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsPatchArrayOutput) Index(i pulumi.IntInput) ClusterPromotionTaskSpecStepsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPromotionTaskSpecStepsPatch {
		return vs[0].([]ClusterPromotionTaskSpecStepsPatch)[vs[1].(int)]
	}).(ClusterPromotionTaskSpecStepsPatchOutput)
}

// Retry is the retry policy for this step.
type ClusterPromotionTaskSpecStepsRetry struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold *int `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout *string `pulumi:"timeout"`
}

// ClusterPromotionTaskSpecStepsRetryInput is an input type that accepts ClusterPromotionTaskSpecStepsRetryArgs and ClusterPromotionTaskSpecStepsRetryOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsRetryInput` via:
//
//	ClusterPromotionTaskSpecStepsRetryArgs{...}
type ClusterPromotionTaskSpecStepsRetryInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsRetryOutput() ClusterPromotionTaskSpecStepsRetryOutput
	ToClusterPromotionTaskSpecStepsRetryOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsRetryOutput
}

// Retry is the retry policy for this step.
type ClusterPromotionTaskSpecStepsRetryArgs struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold pulumi.IntPtrInput `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (ClusterPromotionTaskSpecStepsRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecStepsRetry)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecStepsRetryArgs) ToClusterPromotionTaskSpecStepsRetryOutput() ClusterPromotionTaskSpecStepsRetryOutput {
	return i.ToClusterPromotionTaskSpecStepsRetryOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsRetryArgs) ToClusterPromotionTaskSpecStepsRetryOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsRetryOutput)
}

func (i ClusterPromotionTaskSpecStepsRetryArgs) ToClusterPromotionTaskSpecStepsRetryPtrOutput() ClusterPromotionTaskSpecStepsRetryPtrOutput {
	return i.ToClusterPromotionTaskSpecStepsRetryPtrOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsRetryArgs) ToClusterPromotionTaskSpecStepsRetryPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsRetryOutput).ToClusterPromotionTaskSpecStepsRetryPtrOutputWithContext(ctx)
}

// ClusterPromotionTaskSpecStepsRetryPtrInput is an input type that accepts ClusterPromotionTaskSpecStepsRetryArgs, ClusterPromotionTaskSpecStepsRetryPtr and ClusterPromotionTaskSpecStepsRetryPtrOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsRetryPtrInput` via:
//
//	        ClusterPromotionTaskSpecStepsRetryArgs{...}
//
//	or:
//
//	        nil
type ClusterPromotionTaskSpecStepsRetryPtrInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsRetryPtrOutput() ClusterPromotionTaskSpecStepsRetryPtrOutput
	ToClusterPromotionTaskSpecStepsRetryPtrOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsRetryPtrOutput
}

type clusterPromotionTaskSpecStepsRetryPtrType ClusterPromotionTaskSpecStepsRetryArgs

func ClusterPromotionTaskSpecStepsRetryPtr(v *ClusterPromotionTaskSpecStepsRetryArgs) ClusterPromotionTaskSpecStepsRetryPtrInput {
	return (*clusterPromotionTaskSpecStepsRetryPtrType)(v)
}

func (*clusterPromotionTaskSpecStepsRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTaskSpecStepsRetry)(nil)).Elem()
}

func (i *clusterPromotionTaskSpecStepsRetryPtrType) ToClusterPromotionTaskSpecStepsRetryPtrOutput() ClusterPromotionTaskSpecStepsRetryPtrOutput {
	return i.ToClusterPromotionTaskSpecStepsRetryPtrOutputWithContext(context.Background())
}

func (i *clusterPromotionTaskSpecStepsRetryPtrType) ToClusterPromotionTaskSpecStepsRetryPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsRetryPtrOutput)
}

// Retry is the retry policy for this step.
type ClusterPromotionTaskSpecStepsRetryOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecStepsRetry)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsRetryOutput) ToClusterPromotionTaskSpecStepsRetryOutput() ClusterPromotionTaskSpecStepsRetryOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsRetryOutput) ToClusterPromotionTaskSpecStepsRetryOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsRetryOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsRetryOutput) ToClusterPromotionTaskSpecStepsRetryPtrOutput() ClusterPromotionTaskSpecStepsRetryPtrOutput {
	return o.ToClusterPromotionTaskSpecStepsRetryPtrOutputWithContext(context.Background())
}

func (o ClusterPromotionTaskSpecStepsRetryOutput) ToClusterPromotionTaskSpecStepsRetryPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsRetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPromotionTaskSpecStepsRetry) *ClusterPromotionTaskSpecStepsRetry {
		return &v
	}).(ClusterPromotionTaskSpecStepsRetryPtrOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o ClusterPromotionTaskSpecStepsRetryOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsRetry) *int { return v.ErrorThreshold }).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o ClusterPromotionTaskSpecStepsRetryOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsRetry) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ClusterPromotionTaskSpecStepsRetryPtrOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTaskSpecStepsRetry)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsRetryPtrOutput) ToClusterPromotionTaskSpecStepsRetryPtrOutput() ClusterPromotionTaskSpecStepsRetryPtrOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsRetryPtrOutput) ToClusterPromotionTaskSpecStepsRetryPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsRetryPtrOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsRetryPtrOutput) Elem() ClusterPromotionTaskSpecStepsRetryOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecStepsRetry) ClusterPromotionTaskSpecStepsRetry {
		if v != nil {
			return *v
		}
		var ret ClusterPromotionTaskSpecStepsRetry
		return ret
	}).(ClusterPromotionTaskSpecStepsRetryOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o ClusterPromotionTaskSpecStepsRetryPtrOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecStepsRetry) *int {
		if v == nil {
			return nil
		}
		return v.ErrorThreshold
	}).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o ClusterPromotionTaskSpecStepsRetryPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecStepsRetry) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Retry is the retry policy for this step.
type ClusterPromotionTaskSpecStepsRetryPatch struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold *int `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout *string `pulumi:"timeout"`
}

// ClusterPromotionTaskSpecStepsRetryPatchInput is an input type that accepts ClusterPromotionTaskSpecStepsRetryPatchArgs and ClusterPromotionTaskSpecStepsRetryPatchOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsRetryPatchInput` via:
//
//	ClusterPromotionTaskSpecStepsRetryPatchArgs{...}
type ClusterPromotionTaskSpecStepsRetryPatchInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsRetryPatchOutput() ClusterPromotionTaskSpecStepsRetryPatchOutput
	ToClusterPromotionTaskSpecStepsRetryPatchOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsRetryPatchOutput
}

// Retry is the retry policy for this step.
type ClusterPromotionTaskSpecStepsRetryPatchArgs struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold pulumi.IntPtrInput `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (ClusterPromotionTaskSpecStepsRetryPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecStepsRetryPatch)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecStepsRetryPatchArgs) ToClusterPromotionTaskSpecStepsRetryPatchOutput() ClusterPromotionTaskSpecStepsRetryPatchOutput {
	return i.ToClusterPromotionTaskSpecStepsRetryPatchOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsRetryPatchArgs) ToClusterPromotionTaskSpecStepsRetryPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsRetryPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsRetryPatchOutput)
}

func (i ClusterPromotionTaskSpecStepsRetryPatchArgs) ToClusterPromotionTaskSpecStepsRetryPatchPtrOutput() ClusterPromotionTaskSpecStepsRetryPatchPtrOutput {
	return i.ToClusterPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsRetryPatchArgs) ToClusterPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsRetryPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsRetryPatchOutput).ToClusterPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(ctx)
}

// ClusterPromotionTaskSpecStepsRetryPatchPtrInput is an input type that accepts ClusterPromotionTaskSpecStepsRetryPatchArgs, ClusterPromotionTaskSpecStepsRetryPatchPtr and ClusterPromotionTaskSpecStepsRetryPatchPtrOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsRetryPatchPtrInput` via:
//
//	        ClusterPromotionTaskSpecStepsRetryPatchArgs{...}
//
//	or:
//
//	        nil
type ClusterPromotionTaskSpecStepsRetryPatchPtrInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsRetryPatchPtrOutput() ClusterPromotionTaskSpecStepsRetryPatchPtrOutput
	ToClusterPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsRetryPatchPtrOutput
}

type clusterPromotionTaskSpecStepsRetryPatchPtrType ClusterPromotionTaskSpecStepsRetryPatchArgs

func ClusterPromotionTaskSpecStepsRetryPatchPtr(v *ClusterPromotionTaskSpecStepsRetryPatchArgs) ClusterPromotionTaskSpecStepsRetryPatchPtrInput {
	return (*clusterPromotionTaskSpecStepsRetryPatchPtrType)(v)
}

func (*clusterPromotionTaskSpecStepsRetryPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTaskSpecStepsRetryPatch)(nil)).Elem()
}

func (i *clusterPromotionTaskSpecStepsRetryPatchPtrType) ToClusterPromotionTaskSpecStepsRetryPatchPtrOutput() ClusterPromotionTaskSpecStepsRetryPatchPtrOutput {
	return i.ToClusterPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(context.Background())
}

func (i *clusterPromotionTaskSpecStepsRetryPatchPtrType) ToClusterPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsRetryPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsRetryPatchPtrOutput)
}

// Retry is the retry policy for this step.
type ClusterPromotionTaskSpecStepsRetryPatchOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsRetryPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecStepsRetryPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsRetryPatchOutput) ToClusterPromotionTaskSpecStepsRetryPatchOutput() ClusterPromotionTaskSpecStepsRetryPatchOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsRetryPatchOutput) ToClusterPromotionTaskSpecStepsRetryPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsRetryPatchOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsRetryPatchOutput) ToClusterPromotionTaskSpecStepsRetryPatchPtrOutput() ClusterPromotionTaskSpecStepsRetryPatchPtrOutput {
	return o.ToClusterPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(context.Background())
}

func (o ClusterPromotionTaskSpecStepsRetryPatchOutput) ToClusterPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsRetryPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPromotionTaskSpecStepsRetryPatch) *ClusterPromotionTaskSpecStepsRetryPatch {
		return &v
	}).(ClusterPromotionTaskSpecStepsRetryPatchPtrOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o ClusterPromotionTaskSpecStepsRetryPatchOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsRetryPatch) *int { return v.ErrorThreshold }).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o ClusterPromotionTaskSpecStepsRetryPatchOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsRetryPatch) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ClusterPromotionTaskSpecStepsRetryPatchPtrOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsRetryPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTaskSpecStepsRetryPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsRetryPatchPtrOutput) ToClusterPromotionTaskSpecStepsRetryPatchPtrOutput() ClusterPromotionTaskSpecStepsRetryPatchPtrOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsRetryPatchPtrOutput) ToClusterPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsRetryPatchPtrOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsRetryPatchPtrOutput) Elem() ClusterPromotionTaskSpecStepsRetryPatchOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecStepsRetryPatch) ClusterPromotionTaskSpecStepsRetryPatch {
		if v != nil {
			return *v
		}
		var ret ClusterPromotionTaskSpecStepsRetryPatch
		return ret
	}).(ClusterPromotionTaskSpecStepsRetryPatchOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o ClusterPromotionTaskSpecStepsRetryPatchPtrOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecStepsRetryPatch) *int {
		if v == nil {
			return nil
		}
		return v.ErrorThreshold
	}).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o ClusterPromotionTaskSpecStepsRetryPatchPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecStepsRetryPatch) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type ClusterPromotionTaskSpecStepsTask struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind *string `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name *string `pulumi:"name"`
}

// ClusterPromotionTaskSpecStepsTaskInput is an input type that accepts ClusterPromotionTaskSpecStepsTaskArgs and ClusterPromotionTaskSpecStepsTaskOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsTaskInput` via:
//
//	ClusterPromotionTaskSpecStepsTaskArgs{...}
type ClusterPromotionTaskSpecStepsTaskInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsTaskOutput() ClusterPromotionTaskSpecStepsTaskOutput
	ToClusterPromotionTaskSpecStepsTaskOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsTaskOutput
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type ClusterPromotionTaskSpecStepsTaskArgs struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ClusterPromotionTaskSpecStepsTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecStepsTask)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecStepsTaskArgs) ToClusterPromotionTaskSpecStepsTaskOutput() ClusterPromotionTaskSpecStepsTaskOutput {
	return i.ToClusterPromotionTaskSpecStepsTaskOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsTaskArgs) ToClusterPromotionTaskSpecStepsTaskOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsTaskOutput)
}

func (i ClusterPromotionTaskSpecStepsTaskArgs) ToClusterPromotionTaskSpecStepsTaskPtrOutput() ClusterPromotionTaskSpecStepsTaskPtrOutput {
	return i.ToClusterPromotionTaskSpecStepsTaskPtrOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsTaskArgs) ToClusterPromotionTaskSpecStepsTaskPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsTaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsTaskOutput).ToClusterPromotionTaskSpecStepsTaskPtrOutputWithContext(ctx)
}

// ClusterPromotionTaskSpecStepsTaskPtrInput is an input type that accepts ClusterPromotionTaskSpecStepsTaskArgs, ClusterPromotionTaskSpecStepsTaskPtr and ClusterPromotionTaskSpecStepsTaskPtrOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsTaskPtrInput` via:
//
//	        ClusterPromotionTaskSpecStepsTaskArgs{...}
//
//	or:
//
//	        nil
type ClusterPromotionTaskSpecStepsTaskPtrInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsTaskPtrOutput() ClusterPromotionTaskSpecStepsTaskPtrOutput
	ToClusterPromotionTaskSpecStepsTaskPtrOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsTaskPtrOutput
}

type clusterPromotionTaskSpecStepsTaskPtrType ClusterPromotionTaskSpecStepsTaskArgs

func ClusterPromotionTaskSpecStepsTaskPtr(v *ClusterPromotionTaskSpecStepsTaskArgs) ClusterPromotionTaskSpecStepsTaskPtrInput {
	return (*clusterPromotionTaskSpecStepsTaskPtrType)(v)
}

func (*clusterPromotionTaskSpecStepsTaskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTaskSpecStepsTask)(nil)).Elem()
}

func (i *clusterPromotionTaskSpecStepsTaskPtrType) ToClusterPromotionTaskSpecStepsTaskPtrOutput() ClusterPromotionTaskSpecStepsTaskPtrOutput {
	return i.ToClusterPromotionTaskSpecStepsTaskPtrOutputWithContext(context.Background())
}

func (i *clusterPromotionTaskSpecStepsTaskPtrType) ToClusterPromotionTaskSpecStepsTaskPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsTaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsTaskPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type ClusterPromotionTaskSpecStepsTaskOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecStepsTask)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsTaskOutput) ToClusterPromotionTaskSpecStepsTaskOutput() ClusterPromotionTaskSpecStepsTaskOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsTaskOutput) ToClusterPromotionTaskSpecStepsTaskOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsTaskOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsTaskOutput) ToClusterPromotionTaskSpecStepsTaskPtrOutput() ClusterPromotionTaskSpecStepsTaskPtrOutput {
	return o.ToClusterPromotionTaskSpecStepsTaskPtrOutputWithContext(context.Background())
}

func (o ClusterPromotionTaskSpecStepsTaskOutput) ToClusterPromotionTaskSpecStepsTaskPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsTaskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPromotionTaskSpecStepsTask) *ClusterPromotionTaskSpecStepsTask {
		return &v
	}).(ClusterPromotionTaskSpecStepsTaskPtrOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o ClusterPromotionTaskSpecStepsTaskOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsTask) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o ClusterPromotionTaskSpecStepsTaskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsTask) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ClusterPromotionTaskSpecStepsTaskPtrOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsTaskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTaskSpecStepsTask)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsTaskPtrOutput) ToClusterPromotionTaskSpecStepsTaskPtrOutput() ClusterPromotionTaskSpecStepsTaskPtrOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsTaskPtrOutput) ToClusterPromotionTaskSpecStepsTaskPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsTaskPtrOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsTaskPtrOutput) Elem() ClusterPromotionTaskSpecStepsTaskOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecStepsTask) ClusterPromotionTaskSpecStepsTask {
		if v != nil {
			return *v
		}
		var ret ClusterPromotionTaskSpecStepsTask
		return ret
	}).(ClusterPromotionTaskSpecStepsTaskOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o ClusterPromotionTaskSpecStepsTaskPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecStepsTask) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o ClusterPromotionTaskSpecStepsTaskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecStepsTask) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type ClusterPromotionTaskSpecStepsTaskPatch struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind *string `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name *string `pulumi:"name"`
}

// ClusterPromotionTaskSpecStepsTaskPatchInput is an input type that accepts ClusterPromotionTaskSpecStepsTaskPatchArgs and ClusterPromotionTaskSpecStepsTaskPatchOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsTaskPatchInput` via:
//
//	ClusterPromotionTaskSpecStepsTaskPatchArgs{...}
type ClusterPromotionTaskSpecStepsTaskPatchInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsTaskPatchOutput() ClusterPromotionTaskSpecStepsTaskPatchOutput
	ToClusterPromotionTaskSpecStepsTaskPatchOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsTaskPatchOutput
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type ClusterPromotionTaskSpecStepsTaskPatchArgs struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ClusterPromotionTaskSpecStepsTaskPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecStepsTaskPatch)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecStepsTaskPatchArgs) ToClusterPromotionTaskSpecStepsTaskPatchOutput() ClusterPromotionTaskSpecStepsTaskPatchOutput {
	return i.ToClusterPromotionTaskSpecStepsTaskPatchOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsTaskPatchArgs) ToClusterPromotionTaskSpecStepsTaskPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsTaskPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsTaskPatchOutput)
}

func (i ClusterPromotionTaskSpecStepsTaskPatchArgs) ToClusterPromotionTaskSpecStepsTaskPatchPtrOutput() ClusterPromotionTaskSpecStepsTaskPatchPtrOutput {
	return i.ToClusterPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsTaskPatchArgs) ToClusterPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsTaskPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsTaskPatchOutput).ToClusterPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(ctx)
}

// ClusterPromotionTaskSpecStepsTaskPatchPtrInput is an input type that accepts ClusterPromotionTaskSpecStepsTaskPatchArgs, ClusterPromotionTaskSpecStepsTaskPatchPtr and ClusterPromotionTaskSpecStepsTaskPatchPtrOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsTaskPatchPtrInput` via:
//
//	        ClusterPromotionTaskSpecStepsTaskPatchArgs{...}
//
//	or:
//
//	        nil
type ClusterPromotionTaskSpecStepsTaskPatchPtrInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsTaskPatchPtrOutput() ClusterPromotionTaskSpecStepsTaskPatchPtrOutput
	ToClusterPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsTaskPatchPtrOutput
}

type clusterPromotionTaskSpecStepsTaskPatchPtrType ClusterPromotionTaskSpecStepsTaskPatchArgs

func ClusterPromotionTaskSpecStepsTaskPatchPtr(v *ClusterPromotionTaskSpecStepsTaskPatchArgs) ClusterPromotionTaskSpecStepsTaskPatchPtrInput {
	return (*clusterPromotionTaskSpecStepsTaskPatchPtrType)(v)
}

func (*clusterPromotionTaskSpecStepsTaskPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTaskSpecStepsTaskPatch)(nil)).Elem()
}

func (i *clusterPromotionTaskSpecStepsTaskPatchPtrType) ToClusterPromotionTaskSpecStepsTaskPatchPtrOutput() ClusterPromotionTaskSpecStepsTaskPatchPtrOutput {
	return i.ToClusterPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(context.Background())
}

func (i *clusterPromotionTaskSpecStepsTaskPatchPtrType) ToClusterPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsTaskPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsTaskPatchPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type ClusterPromotionTaskSpecStepsTaskPatchOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsTaskPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecStepsTaskPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsTaskPatchOutput) ToClusterPromotionTaskSpecStepsTaskPatchOutput() ClusterPromotionTaskSpecStepsTaskPatchOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsTaskPatchOutput) ToClusterPromotionTaskSpecStepsTaskPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsTaskPatchOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsTaskPatchOutput) ToClusterPromotionTaskSpecStepsTaskPatchPtrOutput() ClusterPromotionTaskSpecStepsTaskPatchPtrOutput {
	return o.ToClusterPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(context.Background())
}

func (o ClusterPromotionTaskSpecStepsTaskPatchOutput) ToClusterPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsTaskPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPromotionTaskSpecStepsTaskPatch) *ClusterPromotionTaskSpecStepsTaskPatch {
		return &v
	}).(ClusterPromotionTaskSpecStepsTaskPatchPtrOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o ClusterPromotionTaskSpecStepsTaskPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsTaskPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o ClusterPromotionTaskSpecStepsTaskPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsTaskPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ClusterPromotionTaskSpecStepsTaskPatchPtrOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsTaskPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTaskSpecStepsTaskPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsTaskPatchPtrOutput) ToClusterPromotionTaskSpecStepsTaskPatchPtrOutput() ClusterPromotionTaskSpecStepsTaskPatchPtrOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsTaskPatchPtrOutput) ToClusterPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsTaskPatchPtrOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsTaskPatchPtrOutput) Elem() ClusterPromotionTaskSpecStepsTaskPatchOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecStepsTaskPatch) ClusterPromotionTaskSpecStepsTaskPatch {
		if v != nil {
			return *v
		}
		var ret ClusterPromotionTaskSpecStepsTaskPatch
		return ret
	}).(ClusterPromotionTaskSpecStepsTaskPatchOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o ClusterPromotionTaskSpecStepsTaskPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecStepsTaskPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o ClusterPromotionTaskSpecStepsTaskPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPromotionTaskSpecStepsTaskPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type ClusterPromotionTaskSpecStepsVars struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// ClusterPromotionTaskSpecStepsVarsInput is an input type that accepts ClusterPromotionTaskSpecStepsVarsArgs and ClusterPromotionTaskSpecStepsVarsOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsVarsInput` via:
//
//	ClusterPromotionTaskSpecStepsVarsArgs{...}
type ClusterPromotionTaskSpecStepsVarsInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsVarsOutput() ClusterPromotionTaskSpecStepsVarsOutput
	ToClusterPromotionTaskSpecStepsVarsOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsVarsOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type ClusterPromotionTaskSpecStepsVarsArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClusterPromotionTaskSpecStepsVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecStepsVars)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecStepsVarsArgs) ToClusterPromotionTaskSpecStepsVarsOutput() ClusterPromotionTaskSpecStepsVarsOutput {
	return i.ToClusterPromotionTaskSpecStepsVarsOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsVarsArgs) ToClusterPromotionTaskSpecStepsVarsOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsVarsOutput)
}

// ClusterPromotionTaskSpecStepsVarsArrayInput is an input type that accepts ClusterPromotionTaskSpecStepsVarsArray and ClusterPromotionTaskSpecStepsVarsArrayOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsVarsArrayInput` via:
//
//	ClusterPromotionTaskSpecStepsVarsArray{ ClusterPromotionTaskSpecStepsVarsArgs{...} }
type ClusterPromotionTaskSpecStepsVarsArrayInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsVarsArrayOutput() ClusterPromotionTaskSpecStepsVarsArrayOutput
	ToClusterPromotionTaskSpecStepsVarsArrayOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsVarsArrayOutput
}

type ClusterPromotionTaskSpecStepsVarsArray []ClusterPromotionTaskSpecStepsVarsInput

func (ClusterPromotionTaskSpecStepsVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPromotionTaskSpecStepsVars)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecStepsVarsArray) ToClusterPromotionTaskSpecStepsVarsArrayOutput() ClusterPromotionTaskSpecStepsVarsArrayOutput {
	return i.ToClusterPromotionTaskSpecStepsVarsArrayOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsVarsArray) ToClusterPromotionTaskSpecStepsVarsArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsVarsArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type ClusterPromotionTaskSpecStepsVarsOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecStepsVars)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsVarsOutput) ToClusterPromotionTaskSpecStepsVarsOutput() ClusterPromotionTaskSpecStepsVarsOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsVarsOutput) ToClusterPromotionTaskSpecStepsVarsOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsVarsOutput {
	return o
}

// Name is the name of the variable.
func (o ClusterPromotionTaskSpecStepsVarsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsVars) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o ClusterPromotionTaskSpecStepsVarsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsVars) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClusterPromotionTaskSpecStepsVarsArrayOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPromotionTaskSpecStepsVars)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsVarsArrayOutput) ToClusterPromotionTaskSpecStepsVarsArrayOutput() ClusterPromotionTaskSpecStepsVarsArrayOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsVarsArrayOutput) ToClusterPromotionTaskSpecStepsVarsArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsVarsArrayOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsVarsArrayOutput) Index(i pulumi.IntInput) ClusterPromotionTaskSpecStepsVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPromotionTaskSpecStepsVars {
		return vs[0].([]ClusterPromotionTaskSpecStepsVars)[vs[1].(int)]
	}).(ClusterPromotionTaskSpecStepsVarsOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type ClusterPromotionTaskSpecStepsVarsPatch struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// ClusterPromotionTaskSpecStepsVarsPatchInput is an input type that accepts ClusterPromotionTaskSpecStepsVarsPatchArgs and ClusterPromotionTaskSpecStepsVarsPatchOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsVarsPatchInput` via:
//
//	ClusterPromotionTaskSpecStepsVarsPatchArgs{...}
type ClusterPromotionTaskSpecStepsVarsPatchInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsVarsPatchOutput() ClusterPromotionTaskSpecStepsVarsPatchOutput
	ToClusterPromotionTaskSpecStepsVarsPatchOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsVarsPatchOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type ClusterPromotionTaskSpecStepsVarsPatchArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClusterPromotionTaskSpecStepsVarsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecStepsVarsPatch)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecStepsVarsPatchArgs) ToClusterPromotionTaskSpecStepsVarsPatchOutput() ClusterPromotionTaskSpecStepsVarsPatchOutput {
	return i.ToClusterPromotionTaskSpecStepsVarsPatchOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsVarsPatchArgs) ToClusterPromotionTaskSpecStepsVarsPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsVarsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsVarsPatchOutput)
}

// ClusterPromotionTaskSpecStepsVarsPatchArrayInput is an input type that accepts ClusterPromotionTaskSpecStepsVarsPatchArray and ClusterPromotionTaskSpecStepsVarsPatchArrayOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecStepsVarsPatchArrayInput` via:
//
//	ClusterPromotionTaskSpecStepsVarsPatchArray{ ClusterPromotionTaskSpecStepsVarsPatchArgs{...} }
type ClusterPromotionTaskSpecStepsVarsPatchArrayInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecStepsVarsPatchArrayOutput() ClusterPromotionTaskSpecStepsVarsPatchArrayOutput
	ToClusterPromotionTaskSpecStepsVarsPatchArrayOutputWithContext(context.Context) ClusterPromotionTaskSpecStepsVarsPatchArrayOutput
}

type ClusterPromotionTaskSpecStepsVarsPatchArray []ClusterPromotionTaskSpecStepsVarsPatchInput

func (ClusterPromotionTaskSpecStepsVarsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPromotionTaskSpecStepsVarsPatch)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecStepsVarsPatchArray) ToClusterPromotionTaskSpecStepsVarsPatchArrayOutput() ClusterPromotionTaskSpecStepsVarsPatchArrayOutput {
	return i.ToClusterPromotionTaskSpecStepsVarsPatchArrayOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecStepsVarsPatchArray) ToClusterPromotionTaskSpecStepsVarsPatchArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsVarsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecStepsVarsPatchArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type ClusterPromotionTaskSpecStepsVarsPatchOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsVarsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecStepsVarsPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsVarsPatchOutput) ToClusterPromotionTaskSpecStepsVarsPatchOutput() ClusterPromotionTaskSpecStepsVarsPatchOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsVarsPatchOutput) ToClusterPromotionTaskSpecStepsVarsPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsVarsPatchOutput {
	return o
}

// Name is the name of the variable.
func (o ClusterPromotionTaskSpecStepsVarsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsVarsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o ClusterPromotionTaskSpecStepsVarsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecStepsVarsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClusterPromotionTaskSpecStepsVarsPatchArrayOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecStepsVarsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPromotionTaskSpecStepsVarsPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecStepsVarsPatchArrayOutput) ToClusterPromotionTaskSpecStepsVarsPatchArrayOutput() ClusterPromotionTaskSpecStepsVarsPatchArrayOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsVarsPatchArrayOutput) ToClusterPromotionTaskSpecStepsVarsPatchArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecStepsVarsPatchArrayOutput {
	return o
}

func (o ClusterPromotionTaskSpecStepsVarsPatchArrayOutput) Index(i pulumi.IntInput) ClusterPromotionTaskSpecStepsVarsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPromotionTaskSpecStepsVarsPatch {
		return vs[0].([]ClusterPromotionTaskSpecStepsVarsPatch)[vs[1].(int)]
	}).(ClusterPromotionTaskSpecStepsVarsPatchOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type ClusterPromotionTaskSpecVars struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// ClusterPromotionTaskSpecVarsInput is an input type that accepts ClusterPromotionTaskSpecVarsArgs and ClusterPromotionTaskSpecVarsOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecVarsInput` via:
//
//	ClusterPromotionTaskSpecVarsArgs{...}
type ClusterPromotionTaskSpecVarsInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecVarsOutput() ClusterPromotionTaskSpecVarsOutput
	ToClusterPromotionTaskSpecVarsOutputWithContext(context.Context) ClusterPromotionTaskSpecVarsOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type ClusterPromotionTaskSpecVarsArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClusterPromotionTaskSpecVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecVars)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecVarsArgs) ToClusterPromotionTaskSpecVarsOutput() ClusterPromotionTaskSpecVarsOutput {
	return i.ToClusterPromotionTaskSpecVarsOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecVarsArgs) ToClusterPromotionTaskSpecVarsOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecVarsOutput)
}

// ClusterPromotionTaskSpecVarsArrayInput is an input type that accepts ClusterPromotionTaskSpecVarsArray and ClusterPromotionTaskSpecVarsArrayOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecVarsArrayInput` via:
//
//	ClusterPromotionTaskSpecVarsArray{ ClusterPromotionTaskSpecVarsArgs{...} }
type ClusterPromotionTaskSpecVarsArrayInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecVarsArrayOutput() ClusterPromotionTaskSpecVarsArrayOutput
	ToClusterPromotionTaskSpecVarsArrayOutputWithContext(context.Context) ClusterPromotionTaskSpecVarsArrayOutput
}

type ClusterPromotionTaskSpecVarsArray []ClusterPromotionTaskSpecVarsInput

func (ClusterPromotionTaskSpecVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPromotionTaskSpecVars)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecVarsArray) ToClusterPromotionTaskSpecVarsArrayOutput() ClusterPromotionTaskSpecVarsArrayOutput {
	return i.ToClusterPromotionTaskSpecVarsArrayOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecVarsArray) ToClusterPromotionTaskSpecVarsArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecVarsArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type ClusterPromotionTaskSpecVarsOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecVars)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecVarsOutput) ToClusterPromotionTaskSpecVarsOutput() ClusterPromotionTaskSpecVarsOutput {
	return o
}

func (o ClusterPromotionTaskSpecVarsOutput) ToClusterPromotionTaskSpecVarsOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecVarsOutput {
	return o
}

// Name is the name of the variable.
func (o ClusterPromotionTaskSpecVarsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecVars) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o ClusterPromotionTaskSpecVarsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecVars) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClusterPromotionTaskSpecVarsArrayOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPromotionTaskSpecVars)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecVarsArrayOutput) ToClusterPromotionTaskSpecVarsArrayOutput() ClusterPromotionTaskSpecVarsArrayOutput {
	return o
}

func (o ClusterPromotionTaskSpecVarsArrayOutput) ToClusterPromotionTaskSpecVarsArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecVarsArrayOutput {
	return o
}

func (o ClusterPromotionTaskSpecVarsArrayOutput) Index(i pulumi.IntInput) ClusterPromotionTaskSpecVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPromotionTaskSpecVars {
		return vs[0].([]ClusterPromotionTaskSpecVars)[vs[1].(int)]
	}).(ClusterPromotionTaskSpecVarsOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type ClusterPromotionTaskSpecVarsPatch struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// ClusterPromotionTaskSpecVarsPatchInput is an input type that accepts ClusterPromotionTaskSpecVarsPatchArgs and ClusterPromotionTaskSpecVarsPatchOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecVarsPatchInput` via:
//
//	ClusterPromotionTaskSpecVarsPatchArgs{...}
type ClusterPromotionTaskSpecVarsPatchInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecVarsPatchOutput() ClusterPromotionTaskSpecVarsPatchOutput
	ToClusterPromotionTaskSpecVarsPatchOutputWithContext(context.Context) ClusterPromotionTaskSpecVarsPatchOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type ClusterPromotionTaskSpecVarsPatchArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClusterPromotionTaskSpecVarsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecVarsPatch)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecVarsPatchArgs) ToClusterPromotionTaskSpecVarsPatchOutput() ClusterPromotionTaskSpecVarsPatchOutput {
	return i.ToClusterPromotionTaskSpecVarsPatchOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecVarsPatchArgs) ToClusterPromotionTaskSpecVarsPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecVarsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecVarsPatchOutput)
}

// ClusterPromotionTaskSpecVarsPatchArrayInput is an input type that accepts ClusterPromotionTaskSpecVarsPatchArray and ClusterPromotionTaskSpecVarsPatchArrayOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskSpecVarsPatchArrayInput` via:
//
//	ClusterPromotionTaskSpecVarsPatchArray{ ClusterPromotionTaskSpecVarsPatchArgs{...} }
type ClusterPromotionTaskSpecVarsPatchArrayInput interface {
	pulumi.Input

	ToClusterPromotionTaskSpecVarsPatchArrayOutput() ClusterPromotionTaskSpecVarsPatchArrayOutput
	ToClusterPromotionTaskSpecVarsPatchArrayOutputWithContext(context.Context) ClusterPromotionTaskSpecVarsPatchArrayOutput
}

type ClusterPromotionTaskSpecVarsPatchArray []ClusterPromotionTaskSpecVarsPatchInput

func (ClusterPromotionTaskSpecVarsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPromotionTaskSpecVarsPatch)(nil)).Elem()
}

func (i ClusterPromotionTaskSpecVarsPatchArray) ToClusterPromotionTaskSpecVarsPatchArrayOutput() ClusterPromotionTaskSpecVarsPatchArrayOutput {
	return i.ToClusterPromotionTaskSpecVarsPatchArrayOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskSpecVarsPatchArray) ToClusterPromotionTaskSpecVarsPatchArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecVarsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskSpecVarsPatchArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type ClusterPromotionTaskSpecVarsPatchOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecVarsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPromotionTaskSpecVarsPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecVarsPatchOutput) ToClusterPromotionTaskSpecVarsPatchOutput() ClusterPromotionTaskSpecVarsPatchOutput {
	return o
}

func (o ClusterPromotionTaskSpecVarsPatchOutput) ToClusterPromotionTaskSpecVarsPatchOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecVarsPatchOutput {
	return o
}

// Name is the name of the variable.
func (o ClusterPromotionTaskSpecVarsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecVarsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o ClusterPromotionTaskSpecVarsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPromotionTaskSpecVarsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClusterPromotionTaskSpecVarsPatchArrayOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskSpecVarsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPromotionTaskSpecVarsPatch)(nil)).Elem()
}

func (o ClusterPromotionTaskSpecVarsPatchArrayOutput) ToClusterPromotionTaskSpecVarsPatchArrayOutput() ClusterPromotionTaskSpecVarsPatchArrayOutput {
	return o
}

func (o ClusterPromotionTaskSpecVarsPatchArrayOutput) ToClusterPromotionTaskSpecVarsPatchArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskSpecVarsPatchArrayOutput {
	return o
}

func (o ClusterPromotionTaskSpecVarsPatchArrayOutput) Index(i pulumi.IntInput) ClusterPromotionTaskSpecVarsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPromotionTaskSpecVarsPatch {
		return vs[0].([]ClusterPromotionTaskSpecVarsPatch)[vs[1].(int)]
	}).(ClusterPromotionTaskSpecVarsPatchOutput)
}

// Freight represents a collection of versioned artifacts.
type FreightType struct {
	// Alias is a human-friendly alias for a piece of Freight. This is an optional
	// field. A defaulting webhook will sync this field with the value of the
	// kargo.akuity.io/alias label. When the alias label is not present or differs
	// from the value of this field, the defaulting webhook will set the label to
	// the value of this field. If the alias label is present and this field is
	// empty, the defaulting webhook will set the value of this field to the value
	// of the alias label. If this field is empty and the alias label is not
	// present, the defaulting webhook will choose an available alias and assign
	// it to both the field and label.
	Alias *string `pulumi:"alias"`
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Charts describes specific versions of specific Helm charts.
	Charts []FreightCharts `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits []FreightCommits `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images []FreightImages `pulumi:"images"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Origin   *FreightOrigin     `pulumi:"origin"`
	Status   *FreightStatus     `pulumi:"status"`
}

// FreightTypeInput is an input type that accepts FreightTypeArgs and FreightTypeOutput values.
// You can construct a concrete instance of `FreightTypeInput` via:
//
//	FreightTypeArgs{...}
type FreightTypeInput interface {
	pulumi.Input

	ToFreightTypeOutput() FreightTypeOutput
	ToFreightTypeOutputWithContext(context.Context) FreightTypeOutput
}

// Freight represents a collection of versioned artifacts.
type FreightTypeArgs struct {
	// Alias is a human-friendly alias for a piece of Freight. This is an optional
	// field. A defaulting webhook will sync this field with the value of the
	// kargo.akuity.io/alias label. When the alias label is not present or differs
	// from the value of this field, the defaulting webhook will set the label to
	// the value of this field. If the alias label is present and this field is
	// empty, the defaulting webhook will set the value of this field to the value
	// of the alias label. If this field is empty and the alias label is not
	// present, the defaulting webhook will choose an available alias and assign
	// it to both the field and label.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Charts describes specific versions of specific Helm charts.
	Charts FreightChartsArrayInput `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits FreightCommitsArrayInput `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images FreightImagesArrayInput `pulumi:"images"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Origin   FreightOriginPtrInput     `pulumi:"origin"`
	Status   FreightStatusPtrInput     `pulumi:"status"`
}

func (FreightTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightType)(nil)).Elem()
}

func (i FreightTypeArgs) ToFreightTypeOutput() FreightTypeOutput {
	return i.ToFreightTypeOutputWithContext(context.Background())
}

func (i FreightTypeArgs) ToFreightTypeOutputWithContext(ctx context.Context) FreightTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightTypeOutput)
}

// FreightTypeArrayInput is an input type that accepts FreightTypeArray and FreightTypeArrayOutput values.
// You can construct a concrete instance of `FreightTypeArrayInput` via:
//
//	FreightTypeArray{ FreightTypeArgs{...} }
type FreightTypeArrayInput interface {
	pulumi.Input

	ToFreightTypeArrayOutput() FreightTypeArrayOutput
	ToFreightTypeArrayOutputWithContext(context.Context) FreightTypeArrayOutput
}

type FreightTypeArray []FreightTypeInput

func (FreightTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FreightType)(nil)).Elem()
}

func (i FreightTypeArray) ToFreightTypeArrayOutput() FreightTypeArrayOutput {
	return i.ToFreightTypeArrayOutputWithContext(context.Background())
}

func (i FreightTypeArray) ToFreightTypeArrayOutputWithContext(ctx context.Context) FreightTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightTypeArrayOutput)
}

// Freight represents a collection of versioned artifacts.
type FreightTypeOutput struct{ *pulumi.OutputState }

func (FreightTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightType)(nil)).Elem()
}

func (o FreightTypeOutput) ToFreightTypeOutput() FreightTypeOutput {
	return o
}

func (o FreightTypeOutput) ToFreightTypeOutputWithContext(ctx context.Context) FreightTypeOutput {
	return o
}

// Alias is a human-friendly alias for a piece of Freight. This is an optional
// field. A defaulting webhook will sync this field with the value of the
// kargo.akuity.io/alias label. When the alias label is not present or differs
// from the value of this field, the defaulting webhook will set the label to
// the value of this field. If the alias label is present and this field is
// empty, the defaulting webhook will set the value of this field to the value
// of the alias label. If this field is empty and the alias label is not
// present, the defaulting webhook will choose an available alias and assign
// it to both the field and label.
func (o FreightTypeOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightType) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o FreightTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o FreightTypeOutput) Charts() FreightChartsArrayOutput {
	return o.ApplyT(func(v FreightType) []FreightCharts { return v.Charts }).(FreightChartsArrayOutput)
}

// Commits describes specific Git repository commits.
func (o FreightTypeOutput) Commits() FreightCommitsArrayOutput {
	return o.ApplyT(func(v FreightType) []FreightCommits { return v.Commits }).(FreightCommitsArrayOutput)
}

// Images describes specific versions of specific container images.
func (o FreightTypeOutput) Images() FreightImagesArrayOutput {
	return o.ApplyT(func(v FreightType) []FreightImages { return v.Images }).(FreightImagesArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o FreightTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o FreightTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v FreightType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o FreightTypeOutput) Origin() FreightOriginPtrOutput {
	return o.ApplyT(func(v FreightType) *FreightOrigin { return v.Origin }).(FreightOriginPtrOutput)
}

func (o FreightTypeOutput) Status() FreightStatusPtrOutput {
	return o.ApplyT(func(v FreightType) *FreightStatus { return v.Status }).(FreightStatusPtrOutput)
}

type FreightTypeArrayOutput struct{ *pulumi.OutputState }

func (FreightTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FreightType)(nil)).Elem()
}

func (o FreightTypeArrayOutput) ToFreightTypeArrayOutput() FreightTypeArrayOutput {
	return o
}

func (o FreightTypeArrayOutput) ToFreightTypeArrayOutputWithContext(ctx context.Context) FreightTypeArrayOutput {
	return o
}

func (o FreightTypeArrayOutput) Index(i pulumi.IntInput) FreightTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FreightType {
		return vs[0].([]FreightType)[vs[1].(int)]
	}).(FreightTypeOutput)
}

// Chart describes a specific version of a Helm chart.
type FreightCharts struct {
	// Name specifies the name of the chart.
	Name *string `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL *string `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version *string `pulumi:"version"`
}

// FreightChartsInput is an input type that accepts FreightChartsArgs and FreightChartsOutput values.
// You can construct a concrete instance of `FreightChartsInput` via:
//
//	FreightChartsArgs{...}
type FreightChartsInput interface {
	pulumi.Input

	ToFreightChartsOutput() FreightChartsOutput
	ToFreightChartsOutputWithContext(context.Context) FreightChartsOutput
}

// Chart describes a specific version of a Helm chart.
type FreightChartsArgs struct {
	// Name specifies the name of the chart.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (FreightChartsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightCharts)(nil)).Elem()
}

func (i FreightChartsArgs) ToFreightChartsOutput() FreightChartsOutput {
	return i.ToFreightChartsOutputWithContext(context.Background())
}

func (i FreightChartsArgs) ToFreightChartsOutputWithContext(ctx context.Context) FreightChartsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightChartsOutput)
}

// FreightChartsArrayInput is an input type that accepts FreightChartsArray and FreightChartsArrayOutput values.
// You can construct a concrete instance of `FreightChartsArrayInput` via:
//
//	FreightChartsArray{ FreightChartsArgs{...} }
type FreightChartsArrayInput interface {
	pulumi.Input

	ToFreightChartsArrayOutput() FreightChartsArrayOutput
	ToFreightChartsArrayOutputWithContext(context.Context) FreightChartsArrayOutput
}

type FreightChartsArray []FreightChartsInput

func (FreightChartsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FreightCharts)(nil)).Elem()
}

func (i FreightChartsArray) ToFreightChartsArrayOutput() FreightChartsArrayOutput {
	return i.ToFreightChartsArrayOutputWithContext(context.Background())
}

func (i FreightChartsArray) ToFreightChartsArrayOutputWithContext(ctx context.Context) FreightChartsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightChartsArrayOutput)
}

// Chart describes a specific version of a Helm chart.
type FreightChartsOutput struct{ *pulumi.OutputState }

func (FreightChartsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightCharts)(nil)).Elem()
}

func (o FreightChartsOutput) ToFreightChartsOutput() FreightChartsOutput {
	return o
}

func (o FreightChartsOutput) ToFreightChartsOutputWithContext(ctx context.Context) FreightChartsOutput {
	return o
}

// Name specifies the name of the chart.
func (o FreightChartsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCharts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. Classic chart
// repositories (using HTTP/S) can contain differently named charts. When this
// field points to such a repository, the Name field will specify the name of
// the chart within the repository. In the case of a repository within an OCI
// registry, the URL implicitly points to a specific chart and the Name field
// will be empty.
func (o FreightChartsOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCharts) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Version specifies a particular version of the chart.
func (o FreightChartsOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCharts) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type FreightChartsArrayOutput struct{ *pulumi.OutputState }

func (FreightChartsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FreightCharts)(nil)).Elem()
}

func (o FreightChartsArrayOutput) ToFreightChartsArrayOutput() FreightChartsArrayOutput {
	return o
}

func (o FreightChartsArrayOutput) ToFreightChartsArrayOutputWithContext(ctx context.Context) FreightChartsArrayOutput {
	return o
}

func (o FreightChartsArrayOutput) Index(i pulumi.IntInput) FreightChartsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FreightCharts {
		return vs[0].([]FreightCharts)[vs[1].(int)]
	}).(FreightChartsOutput)
}

// Chart describes a specific version of a Helm chart.
type FreightChartsPatch struct {
	// Name specifies the name of the chart.
	Name *string `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL *string `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version *string `pulumi:"version"`
}

// FreightChartsPatchInput is an input type that accepts FreightChartsPatchArgs and FreightChartsPatchOutput values.
// You can construct a concrete instance of `FreightChartsPatchInput` via:
//
//	FreightChartsPatchArgs{...}
type FreightChartsPatchInput interface {
	pulumi.Input

	ToFreightChartsPatchOutput() FreightChartsPatchOutput
	ToFreightChartsPatchOutputWithContext(context.Context) FreightChartsPatchOutput
}

// Chart describes a specific version of a Helm chart.
type FreightChartsPatchArgs struct {
	// Name specifies the name of the chart.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (FreightChartsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightChartsPatch)(nil)).Elem()
}

func (i FreightChartsPatchArgs) ToFreightChartsPatchOutput() FreightChartsPatchOutput {
	return i.ToFreightChartsPatchOutputWithContext(context.Background())
}

func (i FreightChartsPatchArgs) ToFreightChartsPatchOutputWithContext(ctx context.Context) FreightChartsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightChartsPatchOutput)
}

// FreightChartsPatchArrayInput is an input type that accepts FreightChartsPatchArray and FreightChartsPatchArrayOutput values.
// You can construct a concrete instance of `FreightChartsPatchArrayInput` via:
//
//	FreightChartsPatchArray{ FreightChartsPatchArgs{...} }
type FreightChartsPatchArrayInput interface {
	pulumi.Input

	ToFreightChartsPatchArrayOutput() FreightChartsPatchArrayOutput
	ToFreightChartsPatchArrayOutputWithContext(context.Context) FreightChartsPatchArrayOutput
}

type FreightChartsPatchArray []FreightChartsPatchInput

func (FreightChartsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FreightChartsPatch)(nil)).Elem()
}

func (i FreightChartsPatchArray) ToFreightChartsPatchArrayOutput() FreightChartsPatchArrayOutput {
	return i.ToFreightChartsPatchArrayOutputWithContext(context.Background())
}

func (i FreightChartsPatchArray) ToFreightChartsPatchArrayOutputWithContext(ctx context.Context) FreightChartsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightChartsPatchArrayOutput)
}

// Chart describes a specific version of a Helm chart.
type FreightChartsPatchOutput struct{ *pulumi.OutputState }

func (FreightChartsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightChartsPatch)(nil)).Elem()
}

func (o FreightChartsPatchOutput) ToFreightChartsPatchOutput() FreightChartsPatchOutput {
	return o
}

func (o FreightChartsPatchOutput) ToFreightChartsPatchOutputWithContext(ctx context.Context) FreightChartsPatchOutput {
	return o
}

// Name specifies the name of the chart.
func (o FreightChartsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightChartsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. Classic chart
// repositories (using HTTP/S) can contain differently named charts. When this
// field points to such a repository, the Name field will specify the name of
// the chart within the repository. In the case of a repository within an OCI
// registry, the URL implicitly points to a specific chart and the Name field
// will be empty.
func (o FreightChartsPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightChartsPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Version specifies a particular version of the chart.
func (o FreightChartsPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightChartsPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type FreightChartsPatchArrayOutput struct{ *pulumi.OutputState }

func (FreightChartsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FreightChartsPatch)(nil)).Elem()
}

func (o FreightChartsPatchArrayOutput) ToFreightChartsPatchArrayOutput() FreightChartsPatchArrayOutput {
	return o
}

func (o FreightChartsPatchArrayOutput) ToFreightChartsPatchArrayOutputWithContext(ctx context.Context) FreightChartsPatchArrayOutput {
	return o
}

func (o FreightChartsPatchArrayOutput) Index(i pulumi.IntInput) FreightChartsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FreightChartsPatch {
		return vs[0].([]FreightChartsPatch)[vs[1].(int)]
	}).(FreightChartsPatchOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type FreightCommits struct {
	// Author is the author of the commit.
	Author *string `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch *string `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer *string `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id *string `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message *string `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL *string `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag *string `pulumi:"tag"`
}

// FreightCommitsInput is an input type that accepts FreightCommitsArgs and FreightCommitsOutput values.
// You can construct a concrete instance of `FreightCommitsInput` via:
//
//	FreightCommitsArgs{...}
type FreightCommitsInput interface {
	pulumi.Input

	ToFreightCommitsOutput() FreightCommitsOutput
	ToFreightCommitsOutputWithContext(context.Context) FreightCommitsOutput
}

// GitCommit describes a specific commit from a specific Git repository.
type FreightCommitsArgs struct {
	// Author is the author of the commit.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer pulumi.StringPtrInput `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (FreightCommitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightCommits)(nil)).Elem()
}

func (i FreightCommitsArgs) ToFreightCommitsOutput() FreightCommitsOutput {
	return i.ToFreightCommitsOutputWithContext(context.Background())
}

func (i FreightCommitsArgs) ToFreightCommitsOutputWithContext(ctx context.Context) FreightCommitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightCommitsOutput)
}

// FreightCommitsArrayInput is an input type that accepts FreightCommitsArray and FreightCommitsArrayOutput values.
// You can construct a concrete instance of `FreightCommitsArrayInput` via:
//
//	FreightCommitsArray{ FreightCommitsArgs{...} }
type FreightCommitsArrayInput interface {
	pulumi.Input

	ToFreightCommitsArrayOutput() FreightCommitsArrayOutput
	ToFreightCommitsArrayOutputWithContext(context.Context) FreightCommitsArrayOutput
}

type FreightCommitsArray []FreightCommitsInput

func (FreightCommitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FreightCommits)(nil)).Elem()
}

func (i FreightCommitsArray) ToFreightCommitsArrayOutput() FreightCommitsArrayOutput {
	return i.ToFreightCommitsArrayOutputWithContext(context.Background())
}

func (i FreightCommitsArray) ToFreightCommitsArrayOutputWithContext(ctx context.Context) FreightCommitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightCommitsArrayOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type FreightCommitsOutput struct{ *pulumi.OutputState }

func (FreightCommitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightCommits)(nil)).Elem()
}

func (o FreightCommitsOutput) ToFreightCommitsOutput() FreightCommitsOutput {
	return o
}

func (o FreightCommitsOutput) ToFreightCommitsOutputWithContext(ctx context.Context) FreightCommitsOutput {
	return o
}

// Author is the author of the commit.
func (o FreightCommitsOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCommits) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Branch denotes the branch of the repository where this commit was found.
func (o FreightCommitsOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCommits) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Committer is the person who committed the commit.
func (o FreightCommitsOutput) Committer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCommits) *string { return v.Committer }).(pulumi.StringPtrOutput)
}

// ID is the ID of a specific commit in the Git repository specified by
// RepoURL.
func (o FreightCommitsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCommits) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message is the message associated with the commit. At present, this only
// contains the first line (subject) of the commit message.
func (o FreightCommitsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCommits) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// RepoURL is the URL of a Git repository.
func (o FreightCommitsOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCommits) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag denotes a tag in the repository that matched selection criteria and
// resolved to this commit.
func (o FreightCommitsOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCommits) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type FreightCommitsArrayOutput struct{ *pulumi.OutputState }

func (FreightCommitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FreightCommits)(nil)).Elem()
}

func (o FreightCommitsArrayOutput) ToFreightCommitsArrayOutput() FreightCommitsArrayOutput {
	return o
}

func (o FreightCommitsArrayOutput) ToFreightCommitsArrayOutputWithContext(ctx context.Context) FreightCommitsArrayOutput {
	return o
}

func (o FreightCommitsArrayOutput) Index(i pulumi.IntInput) FreightCommitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FreightCommits {
		return vs[0].([]FreightCommits)[vs[1].(int)]
	}).(FreightCommitsOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type FreightCommitsPatch struct {
	// Author is the author of the commit.
	Author *string `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch *string `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer *string `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id *string `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message *string `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL *string `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag *string `pulumi:"tag"`
}

// FreightCommitsPatchInput is an input type that accepts FreightCommitsPatchArgs and FreightCommitsPatchOutput values.
// You can construct a concrete instance of `FreightCommitsPatchInput` via:
//
//	FreightCommitsPatchArgs{...}
type FreightCommitsPatchInput interface {
	pulumi.Input

	ToFreightCommitsPatchOutput() FreightCommitsPatchOutput
	ToFreightCommitsPatchOutputWithContext(context.Context) FreightCommitsPatchOutput
}

// GitCommit describes a specific commit from a specific Git repository.
type FreightCommitsPatchArgs struct {
	// Author is the author of the commit.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer pulumi.StringPtrInput `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (FreightCommitsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightCommitsPatch)(nil)).Elem()
}

func (i FreightCommitsPatchArgs) ToFreightCommitsPatchOutput() FreightCommitsPatchOutput {
	return i.ToFreightCommitsPatchOutputWithContext(context.Background())
}

func (i FreightCommitsPatchArgs) ToFreightCommitsPatchOutputWithContext(ctx context.Context) FreightCommitsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightCommitsPatchOutput)
}

// FreightCommitsPatchArrayInput is an input type that accepts FreightCommitsPatchArray and FreightCommitsPatchArrayOutput values.
// You can construct a concrete instance of `FreightCommitsPatchArrayInput` via:
//
//	FreightCommitsPatchArray{ FreightCommitsPatchArgs{...} }
type FreightCommitsPatchArrayInput interface {
	pulumi.Input

	ToFreightCommitsPatchArrayOutput() FreightCommitsPatchArrayOutput
	ToFreightCommitsPatchArrayOutputWithContext(context.Context) FreightCommitsPatchArrayOutput
}

type FreightCommitsPatchArray []FreightCommitsPatchInput

func (FreightCommitsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FreightCommitsPatch)(nil)).Elem()
}

func (i FreightCommitsPatchArray) ToFreightCommitsPatchArrayOutput() FreightCommitsPatchArrayOutput {
	return i.ToFreightCommitsPatchArrayOutputWithContext(context.Background())
}

func (i FreightCommitsPatchArray) ToFreightCommitsPatchArrayOutputWithContext(ctx context.Context) FreightCommitsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightCommitsPatchArrayOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type FreightCommitsPatchOutput struct{ *pulumi.OutputState }

func (FreightCommitsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightCommitsPatch)(nil)).Elem()
}

func (o FreightCommitsPatchOutput) ToFreightCommitsPatchOutput() FreightCommitsPatchOutput {
	return o
}

func (o FreightCommitsPatchOutput) ToFreightCommitsPatchOutputWithContext(ctx context.Context) FreightCommitsPatchOutput {
	return o
}

// Author is the author of the commit.
func (o FreightCommitsPatchOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCommitsPatch) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Branch denotes the branch of the repository where this commit was found.
func (o FreightCommitsPatchOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCommitsPatch) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Committer is the person who committed the commit.
func (o FreightCommitsPatchOutput) Committer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCommitsPatch) *string { return v.Committer }).(pulumi.StringPtrOutput)
}

// ID is the ID of a specific commit in the Git repository specified by
// RepoURL.
func (o FreightCommitsPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCommitsPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message is the message associated with the commit. At present, this only
// contains the first line (subject) of the commit message.
func (o FreightCommitsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCommitsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// RepoURL is the URL of a Git repository.
func (o FreightCommitsPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCommitsPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag denotes a tag in the repository that matched selection criteria and
// resolved to this commit.
func (o FreightCommitsPatchOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightCommitsPatch) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type FreightCommitsPatchArrayOutput struct{ *pulumi.OutputState }

func (FreightCommitsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FreightCommitsPatch)(nil)).Elem()
}

func (o FreightCommitsPatchArrayOutput) ToFreightCommitsPatchArrayOutput() FreightCommitsPatchArrayOutput {
	return o
}

func (o FreightCommitsPatchArrayOutput) ToFreightCommitsPatchArrayOutputWithContext(ctx context.Context) FreightCommitsPatchArrayOutput {
	return o
}

func (o FreightCommitsPatchArrayOutput) Index(i pulumi.IntInput) FreightCommitsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FreightCommitsPatch {
		return vs[0].([]FreightCommitsPatch)[vs[1].(int)]
	}).(FreightCommitsPatchOutput)
}

// Image describes a specific version of a container image.
type FreightImages struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations map[string]string `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest *string `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL *string `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag *string `pulumi:"tag"`
}

// FreightImagesInput is an input type that accepts FreightImagesArgs and FreightImagesOutput values.
// You can construct a concrete instance of `FreightImagesInput` via:
//
//	FreightImagesArgs{...}
type FreightImagesInput interface {
	pulumi.Input

	ToFreightImagesOutput() FreightImagesOutput
	ToFreightImagesOutputWithContext(context.Context) FreightImagesOutput
}

// Image describes a specific version of a container image.
type FreightImagesArgs struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (FreightImagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightImages)(nil)).Elem()
}

func (i FreightImagesArgs) ToFreightImagesOutput() FreightImagesOutput {
	return i.ToFreightImagesOutputWithContext(context.Background())
}

func (i FreightImagesArgs) ToFreightImagesOutputWithContext(ctx context.Context) FreightImagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightImagesOutput)
}

// FreightImagesArrayInput is an input type that accepts FreightImagesArray and FreightImagesArrayOutput values.
// You can construct a concrete instance of `FreightImagesArrayInput` via:
//
//	FreightImagesArray{ FreightImagesArgs{...} }
type FreightImagesArrayInput interface {
	pulumi.Input

	ToFreightImagesArrayOutput() FreightImagesArrayOutput
	ToFreightImagesArrayOutputWithContext(context.Context) FreightImagesArrayOutput
}

type FreightImagesArray []FreightImagesInput

func (FreightImagesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FreightImages)(nil)).Elem()
}

func (i FreightImagesArray) ToFreightImagesArrayOutput() FreightImagesArrayOutput {
	return i.ToFreightImagesArrayOutputWithContext(context.Background())
}

func (i FreightImagesArray) ToFreightImagesArrayOutputWithContext(ctx context.Context) FreightImagesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightImagesArrayOutput)
}

// Image describes a specific version of a container image.
type FreightImagesOutput struct{ *pulumi.OutputState }

func (FreightImagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightImages)(nil)).Elem()
}

func (o FreightImagesOutput) ToFreightImagesOutput() FreightImagesOutput {
	return o
}

func (o FreightImagesOutput) ToFreightImagesOutputWithContext(ctx context.Context) FreightImagesOutput {
	return o
}

// Annotations is a map of arbitrary metadata for the image.
func (o FreightImagesOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v FreightImages) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Digest identifies a specific version of the image in the repository
// specified by RepoURL. This is a more precise identifier than Tag.
func (o FreightImagesOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightImages) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// GitRepoURL specifies the URL of a Git repository that contains the source
// code for the image repository referenced by the RepoURL field if Kargo was
// able to infer it.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o FreightImagesOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightImages) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// RepoURL describes the repository in which the image can be found.
func (o FreightImagesOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightImages) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag identifies a specific version of the image in the repository specified
// by RepoURL.
func (o FreightImagesOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightImages) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type FreightImagesArrayOutput struct{ *pulumi.OutputState }

func (FreightImagesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FreightImages)(nil)).Elem()
}

func (o FreightImagesArrayOutput) ToFreightImagesArrayOutput() FreightImagesArrayOutput {
	return o
}

func (o FreightImagesArrayOutput) ToFreightImagesArrayOutputWithContext(ctx context.Context) FreightImagesArrayOutput {
	return o
}

func (o FreightImagesArrayOutput) Index(i pulumi.IntInput) FreightImagesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FreightImages {
		return vs[0].([]FreightImages)[vs[1].(int)]
	}).(FreightImagesOutput)
}

// Image describes a specific version of a container image.
type FreightImagesPatch struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations map[string]string `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest *string `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL *string `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag *string `pulumi:"tag"`
}

// FreightImagesPatchInput is an input type that accepts FreightImagesPatchArgs and FreightImagesPatchOutput values.
// You can construct a concrete instance of `FreightImagesPatchInput` via:
//
//	FreightImagesPatchArgs{...}
type FreightImagesPatchInput interface {
	pulumi.Input

	ToFreightImagesPatchOutput() FreightImagesPatchOutput
	ToFreightImagesPatchOutputWithContext(context.Context) FreightImagesPatchOutput
}

// Image describes a specific version of a container image.
type FreightImagesPatchArgs struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (FreightImagesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightImagesPatch)(nil)).Elem()
}

func (i FreightImagesPatchArgs) ToFreightImagesPatchOutput() FreightImagesPatchOutput {
	return i.ToFreightImagesPatchOutputWithContext(context.Background())
}

func (i FreightImagesPatchArgs) ToFreightImagesPatchOutputWithContext(ctx context.Context) FreightImagesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightImagesPatchOutput)
}

// FreightImagesPatchArrayInput is an input type that accepts FreightImagesPatchArray and FreightImagesPatchArrayOutput values.
// You can construct a concrete instance of `FreightImagesPatchArrayInput` via:
//
//	FreightImagesPatchArray{ FreightImagesPatchArgs{...} }
type FreightImagesPatchArrayInput interface {
	pulumi.Input

	ToFreightImagesPatchArrayOutput() FreightImagesPatchArrayOutput
	ToFreightImagesPatchArrayOutputWithContext(context.Context) FreightImagesPatchArrayOutput
}

type FreightImagesPatchArray []FreightImagesPatchInput

func (FreightImagesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FreightImagesPatch)(nil)).Elem()
}

func (i FreightImagesPatchArray) ToFreightImagesPatchArrayOutput() FreightImagesPatchArrayOutput {
	return i.ToFreightImagesPatchArrayOutputWithContext(context.Background())
}

func (i FreightImagesPatchArray) ToFreightImagesPatchArrayOutputWithContext(ctx context.Context) FreightImagesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightImagesPatchArrayOutput)
}

// Image describes a specific version of a container image.
type FreightImagesPatchOutput struct{ *pulumi.OutputState }

func (FreightImagesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightImagesPatch)(nil)).Elem()
}

func (o FreightImagesPatchOutput) ToFreightImagesPatchOutput() FreightImagesPatchOutput {
	return o
}

func (o FreightImagesPatchOutput) ToFreightImagesPatchOutputWithContext(ctx context.Context) FreightImagesPatchOutput {
	return o
}

// Annotations is a map of arbitrary metadata for the image.
func (o FreightImagesPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v FreightImagesPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Digest identifies a specific version of the image in the repository
// specified by RepoURL. This is a more precise identifier than Tag.
func (o FreightImagesPatchOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightImagesPatch) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// GitRepoURL specifies the URL of a Git repository that contains the source
// code for the image repository referenced by the RepoURL field if Kargo was
// able to infer it.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o FreightImagesPatchOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightImagesPatch) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// RepoURL describes the repository in which the image can be found.
func (o FreightImagesPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightImagesPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag identifies a specific version of the image in the repository specified
// by RepoURL.
func (o FreightImagesPatchOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightImagesPatch) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type FreightImagesPatchArrayOutput struct{ *pulumi.OutputState }

func (FreightImagesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FreightImagesPatch)(nil)).Elem()
}

func (o FreightImagesPatchArrayOutput) ToFreightImagesPatchArrayOutput() FreightImagesPatchArrayOutput {
	return o
}

func (o FreightImagesPatchArrayOutput) ToFreightImagesPatchArrayOutputWithContext(ctx context.Context) FreightImagesPatchArrayOutput {
	return o
}

func (o FreightImagesPatchArrayOutput) Index(i pulumi.IntInput) FreightImagesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FreightImagesPatch {
		return vs[0].([]FreightImagesPatch)[vs[1].(int)]
	}).(FreightImagesPatchOutput)
}

// FreightList is a list of Freight
type FreightListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of freights. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []FreightType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// FreightListTypeInput is an input type that accepts FreightListTypeArgs and FreightListTypeOutput values.
// You can construct a concrete instance of `FreightListTypeInput` via:
//
//	FreightListTypeArgs{...}
type FreightListTypeInput interface {
	pulumi.Input

	ToFreightListTypeOutput() FreightListTypeOutput
	ToFreightListTypeOutputWithContext(context.Context) FreightListTypeOutput
}

// FreightList is a list of Freight
type FreightListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of freights. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items FreightTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (FreightListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightListType)(nil)).Elem()
}

func (i FreightListTypeArgs) ToFreightListTypeOutput() FreightListTypeOutput {
	return i.ToFreightListTypeOutputWithContext(context.Background())
}

func (i FreightListTypeArgs) ToFreightListTypeOutputWithContext(ctx context.Context) FreightListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightListTypeOutput)
}

// FreightList is a list of Freight
type FreightListTypeOutput struct{ *pulumi.OutputState }

func (FreightListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightListType)(nil)).Elem()
}

func (o FreightListTypeOutput) ToFreightListTypeOutput() FreightListTypeOutput {
	return o
}

func (o FreightListTypeOutput) ToFreightListTypeOutputWithContext(ctx context.Context) FreightListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o FreightListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of freights. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o FreightListTypeOutput) Items() FreightTypeArrayOutput {
	return o.ApplyT(func(v FreightListType) []FreightType { return v.Items }).(FreightTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o FreightListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o FreightListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v FreightListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type FreightOrigin struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name *string `pulumi:"name"`
}

// FreightOriginInput is an input type that accepts FreightOriginArgs and FreightOriginOutput values.
// You can construct a concrete instance of `FreightOriginInput` via:
//
//	FreightOriginArgs{...}
type FreightOriginInput interface {
	pulumi.Input

	ToFreightOriginOutput() FreightOriginOutput
	ToFreightOriginOutputWithContext(context.Context) FreightOriginOutput
}

// Origin describes a kind of Freight in terms of its origin.
type FreightOriginArgs struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FreightOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightOrigin)(nil)).Elem()
}

func (i FreightOriginArgs) ToFreightOriginOutput() FreightOriginOutput {
	return i.ToFreightOriginOutputWithContext(context.Background())
}

func (i FreightOriginArgs) ToFreightOriginOutputWithContext(ctx context.Context) FreightOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightOriginOutput)
}

func (i FreightOriginArgs) ToFreightOriginPtrOutput() FreightOriginPtrOutput {
	return i.ToFreightOriginPtrOutputWithContext(context.Background())
}

func (i FreightOriginArgs) ToFreightOriginPtrOutputWithContext(ctx context.Context) FreightOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightOriginOutput).ToFreightOriginPtrOutputWithContext(ctx)
}

// FreightOriginPtrInput is an input type that accepts FreightOriginArgs, FreightOriginPtr and FreightOriginPtrOutput values.
// You can construct a concrete instance of `FreightOriginPtrInput` via:
//
//	        FreightOriginArgs{...}
//
//	or:
//
//	        nil
type FreightOriginPtrInput interface {
	pulumi.Input

	ToFreightOriginPtrOutput() FreightOriginPtrOutput
	ToFreightOriginPtrOutputWithContext(context.Context) FreightOriginPtrOutput
}

type freightOriginPtrType FreightOriginArgs

func FreightOriginPtr(v *FreightOriginArgs) FreightOriginPtrInput {
	return (*freightOriginPtrType)(v)
}

func (*freightOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FreightOrigin)(nil)).Elem()
}

func (i *freightOriginPtrType) ToFreightOriginPtrOutput() FreightOriginPtrOutput {
	return i.ToFreightOriginPtrOutputWithContext(context.Background())
}

func (i *freightOriginPtrType) ToFreightOriginPtrOutputWithContext(ctx context.Context) FreightOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightOriginPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type FreightOriginOutput struct{ *pulumi.OutputState }

func (FreightOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightOrigin)(nil)).Elem()
}

func (o FreightOriginOutput) ToFreightOriginOutput() FreightOriginOutput {
	return o
}

func (o FreightOriginOutput) ToFreightOriginOutputWithContext(ctx context.Context) FreightOriginOutput {
	return o
}

func (o FreightOriginOutput) ToFreightOriginPtrOutput() FreightOriginPtrOutput {
	return o.ToFreightOriginPtrOutputWithContext(context.Background())
}

func (o FreightOriginOutput) ToFreightOriginPtrOutputWithContext(ctx context.Context) FreightOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FreightOrigin) *FreightOrigin {
		return &v
	}).(FreightOriginPtrOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o FreightOriginOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightOrigin) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o FreightOriginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightOrigin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FreightOriginPtrOutput struct{ *pulumi.OutputState }

func (FreightOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FreightOrigin)(nil)).Elem()
}

func (o FreightOriginPtrOutput) ToFreightOriginPtrOutput() FreightOriginPtrOutput {
	return o
}

func (o FreightOriginPtrOutput) ToFreightOriginPtrOutputWithContext(ctx context.Context) FreightOriginPtrOutput {
	return o
}

func (o FreightOriginPtrOutput) Elem() FreightOriginOutput {
	return o.ApplyT(func(v *FreightOrigin) FreightOrigin {
		if v != nil {
			return *v
		}
		var ret FreightOrigin
		return ret
	}).(FreightOriginOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o FreightOriginPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FreightOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o FreightOriginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FreightOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type FreightOriginPatch struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name *string `pulumi:"name"`
}

// FreightOriginPatchInput is an input type that accepts FreightOriginPatchArgs and FreightOriginPatchOutput values.
// You can construct a concrete instance of `FreightOriginPatchInput` via:
//
//	FreightOriginPatchArgs{...}
type FreightOriginPatchInput interface {
	pulumi.Input

	ToFreightOriginPatchOutput() FreightOriginPatchOutput
	ToFreightOriginPatchOutputWithContext(context.Context) FreightOriginPatchOutput
}

// Origin describes a kind of Freight in terms of its origin.
type FreightOriginPatchArgs struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FreightOriginPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightOriginPatch)(nil)).Elem()
}

func (i FreightOriginPatchArgs) ToFreightOriginPatchOutput() FreightOriginPatchOutput {
	return i.ToFreightOriginPatchOutputWithContext(context.Background())
}

func (i FreightOriginPatchArgs) ToFreightOriginPatchOutputWithContext(ctx context.Context) FreightOriginPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightOriginPatchOutput)
}

func (i FreightOriginPatchArgs) ToFreightOriginPatchPtrOutput() FreightOriginPatchPtrOutput {
	return i.ToFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (i FreightOriginPatchArgs) ToFreightOriginPatchPtrOutputWithContext(ctx context.Context) FreightOriginPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightOriginPatchOutput).ToFreightOriginPatchPtrOutputWithContext(ctx)
}

// FreightOriginPatchPtrInput is an input type that accepts FreightOriginPatchArgs, FreightOriginPatchPtr and FreightOriginPatchPtrOutput values.
// You can construct a concrete instance of `FreightOriginPatchPtrInput` via:
//
//	        FreightOriginPatchArgs{...}
//
//	or:
//
//	        nil
type FreightOriginPatchPtrInput interface {
	pulumi.Input

	ToFreightOriginPatchPtrOutput() FreightOriginPatchPtrOutput
	ToFreightOriginPatchPtrOutputWithContext(context.Context) FreightOriginPatchPtrOutput
}

type freightOriginPatchPtrType FreightOriginPatchArgs

func FreightOriginPatchPtr(v *FreightOriginPatchArgs) FreightOriginPatchPtrInput {
	return (*freightOriginPatchPtrType)(v)
}

func (*freightOriginPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FreightOriginPatch)(nil)).Elem()
}

func (i *freightOriginPatchPtrType) ToFreightOriginPatchPtrOutput() FreightOriginPatchPtrOutput {
	return i.ToFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (i *freightOriginPatchPtrType) ToFreightOriginPatchPtrOutputWithContext(ctx context.Context) FreightOriginPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightOriginPatchPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type FreightOriginPatchOutput struct{ *pulumi.OutputState }

func (FreightOriginPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightOriginPatch)(nil)).Elem()
}

func (o FreightOriginPatchOutput) ToFreightOriginPatchOutput() FreightOriginPatchOutput {
	return o
}

func (o FreightOriginPatchOutput) ToFreightOriginPatchOutputWithContext(ctx context.Context) FreightOriginPatchOutput {
	return o
}

func (o FreightOriginPatchOutput) ToFreightOriginPatchPtrOutput() FreightOriginPatchPtrOutput {
	return o.ToFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (o FreightOriginPatchOutput) ToFreightOriginPatchPtrOutputWithContext(ctx context.Context) FreightOriginPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FreightOriginPatch) *FreightOriginPatch {
		return &v
	}).(FreightOriginPatchPtrOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o FreightOriginPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightOriginPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o FreightOriginPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightOriginPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FreightOriginPatchPtrOutput struct{ *pulumi.OutputState }

func (FreightOriginPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FreightOriginPatch)(nil)).Elem()
}

func (o FreightOriginPatchPtrOutput) ToFreightOriginPatchPtrOutput() FreightOriginPatchPtrOutput {
	return o
}

func (o FreightOriginPatchPtrOutput) ToFreightOriginPatchPtrOutputWithContext(ctx context.Context) FreightOriginPatchPtrOutput {
	return o
}

func (o FreightOriginPatchPtrOutput) Elem() FreightOriginPatchOutput {
	return o.ApplyT(func(v *FreightOriginPatch) FreightOriginPatch {
		if v != nil {
			return *v
		}
		var ret FreightOriginPatch
		return ret
	}).(FreightOriginPatchOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o FreightOriginPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FreightOriginPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o FreightOriginPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FreightOriginPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Freight represents a collection of versioned artifacts.
type FreightPatchType struct {
	// Alias is a human-friendly alias for a piece of Freight. This is an optional
	// field. A defaulting webhook will sync this field with the value of the
	// kargo.akuity.io/alias label. When the alias label is not present or differs
	// from the value of this field, the defaulting webhook will set the label to
	// the value of this field. If the alias label is present and this field is
	// empty, the defaulting webhook will set the value of this field to the value
	// of the alias label. If this field is empty and the alias label is not
	// present, the defaulting webhook will choose an available alias and assign
	// it to both the field and label.
	Alias *string `pulumi:"alias"`
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Charts describes specific versions of specific Helm charts.
	Charts []FreightChartsPatch `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits []FreightCommitsPatch `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images []FreightImagesPatch `pulumi:"images"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Origin   *FreightOriginPatch     `pulumi:"origin"`
	Status   *FreightStatusPatch     `pulumi:"status"`
}

// FreightPatchTypeInput is an input type that accepts FreightPatchTypeArgs and FreightPatchTypeOutput values.
// You can construct a concrete instance of `FreightPatchTypeInput` via:
//
//	FreightPatchTypeArgs{...}
type FreightPatchTypeInput interface {
	pulumi.Input

	ToFreightPatchTypeOutput() FreightPatchTypeOutput
	ToFreightPatchTypeOutputWithContext(context.Context) FreightPatchTypeOutput
}

// Freight represents a collection of versioned artifacts.
type FreightPatchTypeArgs struct {
	// Alias is a human-friendly alias for a piece of Freight. This is an optional
	// field. A defaulting webhook will sync this field with the value of the
	// kargo.akuity.io/alias label. When the alias label is not present or differs
	// from the value of this field, the defaulting webhook will set the label to
	// the value of this field. If the alias label is present and this field is
	// empty, the defaulting webhook will set the value of this field to the value
	// of the alias label. If this field is empty and the alias label is not
	// present, the defaulting webhook will choose an available alias and assign
	// it to both the field and label.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Charts describes specific versions of specific Helm charts.
	Charts FreightChartsPatchArrayInput `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits FreightCommitsPatchArrayInput `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images FreightImagesPatchArrayInput `pulumi:"images"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Origin   FreightOriginPatchPtrInput     `pulumi:"origin"`
	Status   FreightStatusPatchPtrInput     `pulumi:"status"`
}

func (FreightPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightPatchType)(nil)).Elem()
}

func (i FreightPatchTypeArgs) ToFreightPatchTypeOutput() FreightPatchTypeOutput {
	return i.ToFreightPatchTypeOutputWithContext(context.Background())
}

func (i FreightPatchTypeArgs) ToFreightPatchTypeOutputWithContext(ctx context.Context) FreightPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightPatchTypeOutput)
}

// Freight represents a collection of versioned artifacts.
type FreightPatchTypeOutput struct{ *pulumi.OutputState }

func (FreightPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightPatchType)(nil)).Elem()
}

func (o FreightPatchTypeOutput) ToFreightPatchTypeOutput() FreightPatchTypeOutput {
	return o
}

func (o FreightPatchTypeOutput) ToFreightPatchTypeOutputWithContext(ctx context.Context) FreightPatchTypeOutput {
	return o
}

// Alias is a human-friendly alias for a piece of Freight. This is an optional
// field. A defaulting webhook will sync this field with the value of the
// kargo.akuity.io/alias label. When the alias label is not present or differs
// from the value of this field, the defaulting webhook will set the label to
// the value of this field. If the alias label is present and this field is
// empty, the defaulting webhook will set the value of this field to the value
// of the alias label. If this field is empty and the alias label is not
// present, the defaulting webhook will choose an available alias and assign
// it to both the field and label.
func (o FreightPatchTypeOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightPatchType) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o FreightPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o FreightPatchTypeOutput) Charts() FreightChartsPatchArrayOutput {
	return o.ApplyT(func(v FreightPatchType) []FreightChartsPatch { return v.Charts }).(FreightChartsPatchArrayOutput)
}

// Commits describes specific Git repository commits.
func (o FreightPatchTypeOutput) Commits() FreightCommitsPatchArrayOutput {
	return o.ApplyT(func(v FreightPatchType) []FreightCommitsPatch { return v.Commits }).(FreightCommitsPatchArrayOutput)
}

// Images describes specific versions of specific container images.
func (o FreightPatchTypeOutput) Images() FreightImagesPatchArrayOutput {
	return o.ApplyT(func(v FreightPatchType) []FreightImagesPatch { return v.Images }).(FreightImagesPatchArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o FreightPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FreightPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o FreightPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v FreightPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o FreightPatchTypeOutput) Origin() FreightOriginPatchPtrOutput {
	return o.ApplyT(func(v FreightPatchType) *FreightOriginPatch { return v.Origin }).(FreightOriginPatchPtrOutput)
}

func (o FreightPatchTypeOutput) Status() FreightStatusPatchPtrOutput {
	return o.ApplyT(func(v FreightPatchType) *FreightStatusPatch { return v.Status }).(FreightStatusPatchPtrOutput)
}

// Status describes the current status of this Freight.
type FreightStatus struct {
	// ApprovedFor describes the Stages for which this Freight has been approved
	// preemptively/manually by a user. This is useful for hotfixes, where one
	// might wish to promote a piece of Freight to a given Stage without
	// transiting the entire pipeline.
	ApprovedFor map[string]map[string]string `pulumi:"approvedFor"`
	// CurrentlyIn describes the Stages in which this Freight is currently in use.
	CurrentlyIn map[string]map[string]string `pulumi:"currentlyIn"`
	// VerifiedIn describes the Stages in which this Freight has been verified
	// through promotion and subsequent health checks.
	VerifiedIn map[string]map[string]string `pulumi:"verifiedIn"`
}

// FreightStatusInput is an input type that accepts FreightStatusArgs and FreightStatusOutput values.
// You can construct a concrete instance of `FreightStatusInput` via:
//
//	FreightStatusArgs{...}
type FreightStatusInput interface {
	pulumi.Input

	ToFreightStatusOutput() FreightStatusOutput
	ToFreightStatusOutputWithContext(context.Context) FreightStatusOutput
}

// Status describes the current status of this Freight.
type FreightStatusArgs struct {
	// ApprovedFor describes the Stages for which this Freight has been approved
	// preemptively/manually by a user. This is useful for hotfixes, where one
	// might wish to promote a piece of Freight to a given Stage without
	// transiting the entire pipeline.
	ApprovedFor pulumi.StringMapMapInput `pulumi:"approvedFor"`
	// CurrentlyIn describes the Stages in which this Freight is currently in use.
	CurrentlyIn pulumi.StringMapMapInput `pulumi:"currentlyIn"`
	// VerifiedIn describes the Stages in which this Freight has been verified
	// through promotion and subsequent health checks.
	VerifiedIn pulumi.StringMapMapInput `pulumi:"verifiedIn"`
}

func (FreightStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightStatus)(nil)).Elem()
}

func (i FreightStatusArgs) ToFreightStatusOutput() FreightStatusOutput {
	return i.ToFreightStatusOutputWithContext(context.Background())
}

func (i FreightStatusArgs) ToFreightStatusOutputWithContext(ctx context.Context) FreightStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightStatusOutput)
}

func (i FreightStatusArgs) ToFreightStatusPtrOutput() FreightStatusPtrOutput {
	return i.ToFreightStatusPtrOutputWithContext(context.Background())
}

func (i FreightStatusArgs) ToFreightStatusPtrOutputWithContext(ctx context.Context) FreightStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightStatusOutput).ToFreightStatusPtrOutputWithContext(ctx)
}

// FreightStatusPtrInput is an input type that accepts FreightStatusArgs, FreightStatusPtr and FreightStatusPtrOutput values.
// You can construct a concrete instance of `FreightStatusPtrInput` via:
//
//	        FreightStatusArgs{...}
//
//	or:
//
//	        nil
type FreightStatusPtrInput interface {
	pulumi.Input

	ToFreightStatusPtrOutput() FreightStatusPtrOutput
	ToFreightStatusPtrOutputWithContext(context.Context) FreightStatusPtrOutput
}

type freightStatusPtrType FreightStatusArgs

func FreightStatusPtr(v *FreightStatusArgs) FreightStatusPtrInput {
	return (*freightStatusPtrType)(v)
}

func (*freightStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FreightStatus)(nil)).Elem()
}

func (i *freightStatusPtrType) ToFreightStatusPtrOutput() FreightStatusPtrOutput {
	return i.ToFreightStatusPtrOutputWithContext(context.Background())
}

func (i *freightStatusPtrType) ToFreightStatusPtrOutputWithContext(ctx context.Context) FreightStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightStatusPtrOutput)
}

// Status describes the current status of this Freight.
type FreightStatusOutput struct{ *pulumi.OutputState }

func (FreightStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightStatus)(nil)).Elem()
}

func (o FreightStatusOutput) ToFreightStatusOutput() FreightStatusOutput {
	return o
}

func (o FreightStatusOutput) ToFreightStatusOutputWithContext(ctx context.Context) FreightStatusOutput {
	return o
}

func (o FreightStatusOutput) ToFreightStatusPtrOutput() FreightStatusPtrOutput {
	return o.ToFreightStatusPtrOutputWithContext(context.Background())
}

func (o FreightStatusOutput) ToFreightStatusPtrOutputWithContext(ctx context.Context) FreightStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FreightStatus) *FreightStatus {
		return &v
	}).(FreightStatusPtrOutput)
}

// ApprovedFor describes the Stages for which this Freight has been approved
// preemptively/manually by a user. This is useful for hotfixes, where one
// might wish to promote a piece of Freight to a given Stage without
// transiting the entire pipeline.
func (o FreightStatusOutput) ApprovedFor() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v FreightStatus) map[string]map[string]string { return v.ApprovedFor }).(pulumi.StringMapMapOutput)
}

// CurrentlyIn describes the Stages in which this Freight is currently in use.
func (o FreightStatusOutput) CurrentlyIn() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v FreightStatus) map[string]map[string]string { return v.CurrentlyIn }).(pulumi.StringMapMapOutput)
}

// VerifiedIn describes the Stages in which this Freight has been verified
// through promotion and subsequent health checks.
func (o FreightStatusOutput) VerifiedIn() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v FreightStatus) map[string]map[string]string { return v.VerifiedIn }).(pulumi.StringMapMapOutput)
}

type FreightStatusPtrOutput struct{ *pulumi.OutputState }

func (FreightStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FreightStatus)(nil)).Elem()
}

func (o FreightStatusPtrOutput) ToFreightStatusPtrOutput() FreightStatusPtrOutput {
	return o
}

func (o FreightStatusPtrOutput) ToFreightStatusPtrOutputWithContext(ctx context.Context) FreightStatusPtrOutput {
	return o
}

func (o FreightStatusPtrOutput) Elem() FreightStatusOutput {
	return o.ApplyT(func(v *FreightStatus) FreightStatus {
		if v != nil {
			return *v
		}
		var ret FreightStatus
		return ret
	}).(FreightStatusOutput)
}

// ApprovedFor describes the Stages for which this Freight has been approved
// preemptively/manually by a user. This is useful for hotfixes, where one
// might wish to promote a piece of Freight to a given Stage without
// transiting the entire pipeline.
func (o FreightStatusPtrOutput) ApprovedFor() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *FreightStatus) map[string]map[string]string {
		if v == nil {
			return nil
		}
		return v.ApprovedFor
	}).(pulumi.StringMapMapOutput)
}

// CurrentlyIn describes the Stages in which this Freight is currently in use.
func (o FreightStatusPtrOutput) CurrentlyIn() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *FreightStatus) map[string]map[string]string {
		if v == nil {
			return nil
		}
		return v.CurrentlyIn
	}).(pulumi.StringMapMapOutput)
}

// VerifiedIn describes the Stages in which this Freight has been verified
// through promotion and subsequent health checks.
func (o FreightStatusPtrOutput) VerifiedIn() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *FreightStatus) map[string]map[string]string {
		if v == nil {
			return nil
		}
		return v.VerifiedIn
	}).(pulumi.StringMapMapOutput)
}

// Status describes the current status of this Freight.
type FreightStatusPatch struct {
	// ApprovedFor describes the Stages for which this Freight has been approved
	// preemptively/manually by a user. This is useful for hotfixes, where one
	// might wish to promote a piece of Freight to a given Stage without
	// transiting the entire pipeline.
	ApprovedFor map[string]map[string]string `pulumi:"approvedFor"`
	// CurrentlyIn describes the Stages in which this Freight is currently in use.
	CurrentlyIn map[string]map[string]string `pulumi:"currentlyIn"`
	// VerifiedIn describes the Stages in which this Freight has been verified
	// through promotion and subsequent health checks.
	VerifiedIn map[string]map[string]string `pulumi:"verifiedIn"`
}

// FreightStatusPatchInput is an input type that accepts FreightStatusPatchArgs and FreightStatusPatchOutput values.
// You can construct a concrete instance of `FreightStatusPatchInput` via:
//
//	FreightStatusPatchArgs{...}
type FreightStatusPatchInput interface {
	pulumi.Input

	ToFreightStatusPatchOutput() FreightStatusPatchOutput
	ToFreightStatusPatchOutputWithContext(context.Context) FreightStatusPatchOutput
}

// Status describes the current status of this Freight.
type FreightStatusPatchArgs struct {
	// ApprovedFor describes the Stages for which this Freight has been approved
	// preemptively/manually by a user. This is useful for hotfixes, where one
	// might wish to promote a piece of Freight to a given Stage without
	// transiting the entire pipeline.
	ApprovedFor pulumi.StringMapMapInput `pulumi:"approvedFor"`
	// CurrentlyIn describes the Stages in which this Freight is currently in use.
	CurrentlyIn pulumi.StringMapMapInput `pulumi:"currentlyIn"`
	// VerifiedIn describes the Stages in which this Freight has been verified
	// through promotion and subsequent health checks.
	VerifiedIn pulumi.StringMapMapInput `pulumi:"verifiedIn"`
}

func (FreightStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightStatusPatch)(nil)).Elem()
}

func (i FreightStatusPatchArgs) ToFreightStatusPatchOutput() FreightStatusPatchOutput {
	return i.ToFreightStatusPatchOutputWithContext(context.Background())
}

func (i FreightStatusPatchArgs) ToFreightStatusPatchOutputWithContext(ctx context.Context) FreightStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightStatusPatchOutput)
}

func (i FreightStatusPatchArgs) ToFreightStatusPatchPtrOutput() FreightStatusPatchPtrOutput {
	return i.ToFreightStatusPatchPtrOutputWithContext(context.Background())
}

func (i FreightStatusPatchArgs) ToFreightStatusPatchPtrOutputWithContext(ctx context.Context) FreightStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightStatusPatchOutput).ToFreightStatusPatchPtrOutputWithContext(ctx)
}

// FreightStatusPatchPtrInput is an input type that accepts FreightStatusPatchArgs, FreightStatusPatchPtr and FreightStatusPatchPtrOutput values.
// You can construct a concrete instance of `FreightStatusPatchPtrInput` via:
//
//	        FreightStatusPatchArgs{...}
//
//	or:
//
//	        nil
type FreightStatusPatchPtrInput interface {
	pulumi.Input

	ToFreightStatusPatchPtrOutput() FreightStatusPatchPtrOutput
	ToFreightStatusPatchPtrOutputWithContext(context.Context) FreightStatusPatchPtrOutput
}

type freightStatusPatchPtrType FreightStatusPatchArgs

func FreightStatusPatchPtr(v *FreightStatusPatchArgs) FreightStatusPatchPtrInput {
	return (*freightStatusPatchPtrType)(v)
}

func (*freightStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FreightStatusPatch)(nil)).Elem()
}

func (i *freightStatusPatchPtrType) ToFreightStatusPatchPtrOutput() FreightStatusPatchPtrOutput {
	return i.ToFreightStatusPatchPtrOutputWithContext(context.Background())
}

func (i *freightStatusPatchPtrType) ToFreightStatusPatchPtrOutputWithContext(ctx context.Context) FreightStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreightStatusPatchPtrOutput)
}

// Status describes the current status of this Freight.
type FreightStatusPatchOutput struct{ *pulumi.OutputState }

func (FreightStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreightStatusPatch)(nil)).Elem()
}

func (o FreightStatusPatchOutput) ToFreightStatusPatchOutput() FreightStatusPatchOutput {
	return o
}

func (o FreightStatusPatchOutput) ToFreightStatusPatchOutputWithContext(ctx context.Context) FreightStatusPatchOutput {
	return o
}

func (o FreightStatusPatchOutput) ToFreightStatusPatchPtrOutput() FreightStatusPatchPtrOutput {
	return o.ToFreightStatusPatchPtrOutputWithContext(context.Background())
}

func (o FreightStatusPatchOutput) ToFreightStatusPatchPtrOutputWithContext(ctx context.Context) FreightStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FreightStatusPatch) *FreightStatusPatch {
		return &v
	}).(FreightStatusPatchPtrOutput)
}

// ApprovedFor describes the Stages for which this Freight has been approved
// preemptively/manually by a user. This is useful for hotfixes, where one
// might wish to promote a piece of Freight to a given Stage without
// transiting the entire pipeline.
func (o FreightStatusPatchOutput) ApprovedFor() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v FreightStatusPatch) map[string]map[string]string { return v.ApprovedFor }).(pulumi.StringMapMapOutput)
}

// CurrentlyIn describes the Stages in which this Freight is currently in use.
func (o FreightStatusPatchOutput) CurrentlyIn() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v FreightStatusPatch) map[string]map[string]string { return v.CurrentlyIn }).(pulumi.StringMapMapOutput)
}

// VerifiedIn describes the Stages in which this Freight has been verified
// through promotion and subsequent health checks.
func (o FreightStatusPatchOutput) VerifiedIn() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v FreightStatusPatch) map[string]map[string]string { return v.VerifiedIn }).(pulumi.StringMapMapOutput)
}

type FreightStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (FreightStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FreightStatusPatch)(nil)).Elem()
}

func (o FreightStatusPatchPtrOutput) ToFreightStatusPatchPtrOutput() FreightStatusPatchPtrOutput {
	return o
}

func (o FreightStatusPatchPtrOutput) ToFreightStatusPatchPtrOutputWithContext(ctx context.Context) FreightStatusPatchPtrOutput {
	return o
}

func (o FreightStatusPatchPtrOutput) Elem() FreightStatusPatchOutput {
	return o.ApplyT(func(v *FreightStatusPatch) FreightStatusPatch {
		if v != nil {
			return *v
		}
		var ret FreightStatusPatch
		return ret
	}).(FreightStatusPatchOutput)
}

// ApprovedFor describes the Stages for which this Freight has been approved
// preemptively/manually by a user. This is useful for hotfixes, where one
// might wish to promote a piece of Freight to a given Stage without
// transiting the entire pipeline.
func (o FreightStatusPatchPtrOutput) ApprovedFor() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *FreightStatusPatch) map[string]map[string]string {
		if v == nil {
			return nil
		}
		return v.ApprovedFor
	}).(pulumi.StringMapMapOutput)
}

// CurrentlyIn describes the Stages in which this Freight is currently in use.
func (o FreightStatusPatchPtrOutput) CurrentlyIn() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *FreightStatusPatch) map[string]map[string]string {
		if v == nil {
			return nil
		}
		return v.CurrentlyIn
	}).(pulumi.StringMapMapOutput)
}

// VerifiedIn describes the Stages in which this Freight has been verified
// through promotion and subsequent health checks.
func (o FreightStatusPatchPtrOutput) VerifiedIn() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *FreightStatusPatch) map[string]map[string]string {
		if v == nil {
			return nil
		}
		return v.VerifiedIn
	}).(pulumi.StringMapMapOutput)
}

// Project is a resource type that reconciles to a specially labeled namespace
// and other TODO: TBD project-level resources.
type ProjectType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *ProjectSpec       `pulumi:"spec"`
	Status   *ProjectStatus     `pulumi:"status"`
}

// ProjectTypeInput is an input type that accepts ProjectTypeArgs and ProjectTypeOutput values.
// You can construct a concrete instance of `ProjectTypeInput` via:
//
//	ProjectTypeArgs{...}
type ProjectTypeInput interface {
	pulumi.Input

	ToProjectTypeOutput() ProjectTypeOutput
	ToProjectTypeOutputWithContext(context.Context) ProjectTypeOutput
}

// Project is a resource type that reconciles to a specially labeled namespace
// and other TODO: TBD project-level resources.
type ProjectTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     ProjectSpecPtrInput       `pulumi:"spec"`
	Status   ProjectStatusPtrInput     `pulumi:"status"`
}

func (ProjectTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectType)(nil)).Elem()
}

func (i ProjectTypeArgs) ToProjectTypeOutput() ProjectTypeOutput {
	return i.ToProjectTypeOutputWithContext(context.Background())
}

func (i ProjectTypeArgs) ToProjectTypeOutputWithContext(ctx context.Context) ProjectTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTypeOutput)
}

// ProjectTypeArrayInput is an input type that accepts ProjectTypeArray and ProjectTypeArrayOutput values.
// You can construct a concrete instance of `ProjectTypeArrayInput` via:
//
//	ProjectTypeArray{ ProjectTypeArgs{...} }
type ProjectTypeArrayInput interface {
	pulumi.Input

	ToProjectTypeArrayOutput() ProjectTypeArrayOutput
	ToProjectTypeArrayOutputWithContext(context.Context) ProjectTypeArrayOutput
}

type ProjectTypeArray []ProjectTypeInput

func (ProjectTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectType)(nil)).Elem()
}

func (i ProjectTypeArray) ToProjectTypeArrayOutput() ProjectTypeArrayOutput {
	return i.ToProjectTypeArrayOutputWithContext(context.Background())
}

func (i ProjectTypeArray) ToProjectTypeArrayOutputWithContext(ctx context.Context) ProjectTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTypeArrayOutput)
}

// Project is a resource type that reconciles to a specially labeled namespace
// and other TODO: TBD project-level resources.
type ProjectTypeOutput struct{ *pulumi.OutputState }

func (ProjectTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectType)(nil)).Elem()
}

func (o ProjectTypeOutput) ToProjectTypeOutput() ProjectTypeOutput {
	return o
}

func (o ProjectTypeOutput) ToProjectTypeOutputWithContext(ctx context.Context) ProjectTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProjectTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProjectTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ProjectTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ProjectType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o ProjectTypeOutput) Spec() ProjectSpecPtrOutput {
	return o.ApplyT(func(v ProjectType) *ProjectSpec { return v.Spec }).(ProjectSpecPtrOutput)
}

func (o ProjectTypeOutput) Status() ProjectStatusPtrOutput {
	return o.ApplyT(func(v ProjectType) *ProjectStatus { return v.Status }).(ProjectStatusPtrOutput)
}

type ProjectTypeArrayOutput struct{ *pulumi.OutputState }

func (ProjectTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectType)(nil)).Elem()
}

func (o ProjectTypeArrayOutput) ToProjectTypeArrayOutput() ProjectTypeArrayOutput {
	return o
}

func (o ProjectTypeArrayOutput) ToProjectTypeArrayOutputWithContext(ctx context.Context) ProjectTypeArrayOutput {
	return o
}

func (o ProjectTypeArrayOutput) Index(i pulumi.IntInput) ProjectTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectType {
		return vs[0].([]ProjectType)[vs[1].(int)]
	}).(ProjectTypeOutput)
}

// ProjectConfig is a resource type that describes the configuration of a
// Project.
type ProjectConfigType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta   `pulumi:"metadata"`
	Spec     *ProjectConfigSpec   `pulumi:"spec"`
	Status   *ProjectConfigStatus `pulumi:"status"`
}

// ProjectConfigTypeInput is an input type that accepts ProjectConfigTypeArgs and ProjectConfigTypeOutput values.
// You can construct a concrete instance of `ProjectConfigTypeInput` via:
//
//	ProjectConfigTypeArgs{...}
type ProjectConfigTypeInput interface {
	pulumi.Input

	ToProjectConfigTypeOutput() ProjectConfigTypeOutput
	ToProjectConfigTypeOutputWithContext(context.Context) ProjectConfigTypeOutput
}

// ProjectConfig is a resource type that describes the configuration of a
// Project.
type ProjectConfigTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput   `pulumi:"metadata"`
	Spec     ProjectConfigSpecPtrInput   `pulumi:"spec"`
	Status   ProjectConfigStatusPtrInput `pulumi:"status"`
}

func (ProjectConfigTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigType)(nil)).Elem()
}

func (i ProjectConfigTypeArgs) ToProjectConfigTypeOutput() ProjectConfigTypeOutput {
	return i.ToProjectConfigTypeOutputWithContext(context.Background())
}

func (i ProjectConfigTypeArgs) ToProjectConfigTypeOutputWithContext(ctx context.Context) ProjectConfigTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigTypeOutput)
}

// ProjectConfigTypeArrayInput is an input type that accepts ProjectConfigTypeArray and ProjectConfigTypeArrayOutput values.
// You can construct a concrete instance of `ProjectConfigTypeArrayInput` via:
//
//	ProjectConfigTypeArray{ ProjectConfigTypeArgs{...} }
type ProjectConfigTypeArrayInput interface {
	pulumi.Input

	ToProjectConfigTypeArrayOutput() ProjectConfigTypeArrayOutput
	ToProjectConfigTypeArrayOutputWithContext(context.Context) ProjectConfigTypeArrayOutput
}

type ProjectConfigTypeArray []ProjectConfigTypeInput

func (ProjectConfigTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigType)(nil)).Elem()
}

func (i ProjectConfigTypeArray) ToProjectConfigTypeArrayOutput() ProjectConfigTypeArrayOutput {
	return i.ToProjectConfigTypeArrayOutputWithContext(context.Background())
}

func (i ProjectConfigTypeArray) ToProjectConfigTypeArrayOutputWithContext(ctx context.Context) ProjectConfigTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigTypeArrayOutput)
}

// ProjectConfig is a resource type that describes the configuration of a
// Project.
type ProjectConfigTypeOutput struct{ *pulumi.OutputState }

func (ProjectConfigTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigType)(nil)).Elem()
}

func (o ProjectConfigTypeOutput) ToProjectConfigTypeOutput() ProjectConfigTypeOutput {
	return o
}

func (o ProjectConfigTypeOutput) ToProjectConfigTypeOutputWithContext(ctx context.Context) ProjectConfigTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProjectConfigTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProjectConfigTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ProjectConfigTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ProjectConfigType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o ProjectConfigTypeOutput) Spec() ProjectConfigSpecPtrOutput {
	return o.ApplyT(func(v ProjectConfigType) *ProjectConfigSpec { return v.Spec }).(ProjectConfigSpecPtrOutput)
}

func (o ProjectConfigTypeOutput) Status() ProjectConfigStatusPtrOutput {
	return o.ApplyT(func(v ProjectConfigType) *ProjectConfigStatus { return v.Status }).(ProjectConfigStatusPtrOutput)
}

type ProjectConfigTypeArrayOutput struct{ *pulumi.OutputState }

func (ProjectConfigTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigType)(nil)).Elem()
}

func (o ProjectConfigTypeArrayOutput) ToProjectConfigTypeArrayOutput() ProjectConfigTypeArrayOutput {
	return o
}

func (o ProjectConfigTypeArrayOutput) ToProjectConfigTypeArrayOutputWithContext(ctx context.Context) ProjectConfigTypeArrayOutput {
	return o
}

func (o ProjectConfigTypeArrayOutput) Index(i pulumi.IntInput) ProjectConfigTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectConfigType {
		return vs[0].([]ProjectConfigType)[vs[1].(int)]
	}).(ProjectConfigTypeOutput)
}

// ProjectConfigList is a list of ProjectConfig
type ProjectConfigListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of projectconfigs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []ProjectConfigType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// ProjectConfigListTypeInput is an input type that accepts ProjectConfigListTypeArgs and ProjectConfigListTypeOutput values.
// You can construct a concrete instance of `ProjectConfigListTypeInput` via:
//
//	ProjectConfigListTypeArgs{...}
type ProjectConfigListTypeInput interface {
	pulumi.Input

	ToProjectConfigListTypeOutput() ProjectConfigListTypeOutput
	ToProjectConfigListTypeOutputWithContext(context.Context) ProjectConfigListTypeOutput
}

// ProjectConfigList is a list of ProjectConfig
type ProjectConfigListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of projectconfigs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ProjectConfigTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (ProjectConfigListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigListType)(nil)).Elem()
}

func (i ProjectConfigListTypeArgs) ToProjectConfigListTypeOutput() ProjectConfigListTypeOutput {
	return i.ToProjectConfigListTypeOutputWithContext(context.Background())
}

func (i ProjectConfigListTypeArgs) ToProjectConfigListTypeOutputWithContext(ctx context.Context) ProjectConfigListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigListTypeOutput)
}

// ProjectConfigList is a list of ProjectConfig
type ProjectConfigListTypeOutput struct{ *pulumi.OutputState }

func (ProjectConfigListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigListType)(nil)).Elem()
}

func (o ProjectConfigListTypeOutput) ToProjectConfigListTypeOutput() ProjectConfigListTypeOutput {
	return o
}

func (o ProjectConfigListTypeOutput) ToProjectConfigListTypeOutputWithContext(ctx context.Context) ProjectConfigListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProjectConfigListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of projectconfigs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o ProjectConfigListTypeOutput) Items() ProjectConfigTypeArrayOutput {
	return o.ApplyT(func(v ProjectConfigListType) []ProjectConfigType { return v.Items }).(ProjectConfigTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProjectConfigListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProjectConfigListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v ProjectConfigListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// ProjectConfig is a resource type that describes the configuration of a
// Project.
type ProjectConfigPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch   `pulumi:"metadata"`
	Spec     *ProjectConfigSpecPatch   `pulumi:"spec"`
	Status   *ProjectConfigStatusPatch `pulumi:"status"`
}

// ProjectConfigPatchTypeInput is an input type that accepts ProjectConfigPatchTypeArgs and ProjectConfigPatchTypeOutput values.
// You can construct a concrete instance of `ProjectConfigPatchTypeInput` via:
//
//	ProjectConfigPatchTypeArgs{...}
type ProjectConfigPatchTypeInput interface {
	pulumi.Input

	ToProjectConfigPatchTypeOutput() ProjectConfigPatchTypeOutput
	ToProjectConfigPatchTypeOutputWithContext(context.Context) ProjectConfigPatchTypeOutput
}

// ProjectConfig is a resource type that describes the configuration of a
// Project.
type ProjectConfigPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput   `pulumi:"metadata"`
	Spec     ProjectConfigSpecPatchPtrInput   `pulumi:"spec"`
	Status   ProjectConfigStatusPatchPtrInput `pulumi:"status"`
}

func (ProjectConfigPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigPatchType)(nil)).Elem()
}

func (i ProjectConfigPatchTypeArgs) ToProjectConfigPatchTypeOutput() ProjectConfigPatchTypeOutput {
	return i.ToProjectConfigPatchTypeOutputWithContext(context.Background())
}

func (i ProjectConfigPatchTypeArgs) ToProjectConfigPatchTypeOutputWithContext(ctx context.Context) ProjectConfigPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigPatchTypeOutput)
}

// ProjectConfig is a resource type that describes the configuration of a
// Project.
type ProjectConfigPatchTypeOutput struct{ *pulumi.OutputState }

func (ProjectConfigPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigPatchType)(nil)).Elem()
}

func (o ProjectConfigPatchTypeOutput) ToProjectConfigPatchTypeOutput() ProjectConfigPatchTypeOutput {
	return o
}

func (o ProjectConfigPatchTypeOutput) ToProjectConfigPatchTypeOutputWithContext(ctx context.Context) ProjectConfigPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProjectConfigPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProjectConfigPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ProjectConfigPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v ProjectConfigPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ProjectConfigPatchTypeOutput) Spec() ProjectConfigSpecPatchPtrOutput {
	return o.ApplyT(func(v ProjectConfigPatchType) *ProjectConfigSpecPatch { return v.Spec }).(ProjectConfigSpecPatchPtrOutput)
}

func (o ProjectConfigPatchTypeOutput) Status() ProjectConfigStatusPatchPtrOutput {
	return o.ApplyT(func(v ProjectConfigPatchType) *ProjectConfigStatusPatch { return v.Status }).(ProjectConfigStatusPatchPtrOutput)
}

// Spec describes the configuration of a Project.
type ProjectConfigSpec struct {
	// PromotionPolicies defines policies governing the promotion of Freight to
	// specific Stages within the Project.
	PromotionPolicies []ProjectConfigSpecPromotionPolicies `pulumi:"promotionPolicies"`
	// WebhookReceivers describes Project-specific webhook receivers used for
	// processing events from various external platforms
	WebhookReceivers []ProjectConfigSpecWebhookReceivers `pulumi:"webhookReceivers"`
}

// ProjectConfigSpecInput is an input type that accepts ProjectConfigSpecArgs and ProjectConfigSpecOutput values.
// You can construct a concrete instance of `ProjectConfigSpecInput` via:
//
//	ProjectConfigSpecArgs{...}
type ProjectConfigSpecInput interface {
	pulumi.Input

	ToProjectConfigSpecOutput() ProjectConfigSpecOutput
	ToProjectConfigSpecOutputWithContext(context.Context) ProjectConfigSpecOutput
}

// Spec describes the configuration of a Project.
type ProjectConfigSpecArgs struct {
	// PromotionPolicies defines policies governing the promotion of Freight to
	// specific Stages within the Project.
	PromotionPolicies ProjectConfigSpecPromotionPoliciesArrayInput `pulumi:"promotionPolicies"`
	// WebhookReceivers describes Project-specific webhook receivers used for
	// processing events from various external platforms
	WebhookReceivers ProjectConfigSpecWebhookReceiversArrayInput `pulumi:"webhookReceivers"`
}

func (ProjectConfigSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpec)(nil)).Elem()
}

func (i ProjectConfigSpecArgs) ToProjectConfigSpecOutput() ProjectConfigSpecOutput {
	return i.ToProjectConfigSpecOutputWithContext(context.Background())
}

func (i ProjectConfigSpecArgs) ToProjectConfigSpecOutputWithContext(ctx context.Context) ProjectConfigSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecOutput)
}

func (i ProjectConfigSpecArgs) ToProjectConfigSpecPtrOutput() ProjectConfigSpecPtrOutput {
	return i.ToProjectConfigSpecPtrOutputWithContext(context.Background())
}

func (i ProjectConfigSpecArgs) ToProjectConfigSpecPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecOutput).ToProjectConfigSpecPtrOutputWithContext(ctx)
}

// ProjectConfigSpecPtrInput is an input type that accepts ProjectConfigSpecArgs, ProjectConfigSpecPtr and ProjectConfigSpecPtrOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPtrInput` via:
//
//	        ProjectConfigSpecArgs{...}
//
//	or:
//
//	        nil
type ProjectConfigSpecPtrInput interface {
	pulumi.Input

	ToProjectConfigSpecPtrOutput() ProjectConfigSpecPtrOutput
	ToProjectConfigSpecPtrOutputWithContext(context.Context) ProjectConfigSpecPtrOutput
}

type projectConfigSpecPtrType ProjectConfigSpecArgs

func ProjectConfigSpecPtr(v *ProjectConfigSpecArgs) ProjectConfigSpecPtrInput {
	return (*projectConfigSpecPtrType)(v)
}

func (*projectConfigSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpec)(nil)).Elem()
}

func (i *projectConfigSpecPtrType) ToProjectConfigSpecPtrOutput() ProjectConfigSpecPtrOutput {
	return i.ToProjectConfigSpecPtrOutputWithContext(context.Background())
}

func (i *projectConfigSpecPtrType) ToProjectConfigSpecPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPtrOutput)
}

// Spec describes the configuration of a Project.
type ProjectConfigSpecOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpec)(nil)).Elem()
}

func (o ProjectConfigSpecOutput) ToProjectConfigSpecOutput() ProjectConfigSpecOutput {
	return o
}

func (o ProjectConfigSpecOutput) ToProjectConfigSpecOutputWithContext(ctx context.Context) ProjectConfigSpecOutput {
	return o
}

func (o ProjectConfigSpecOutput) ToProjectConfigSpecPtrOutput() ProjectConfigSpecPtrOutput {
	return o.ToProjectConfigSpecPtrOutputWithContext(context.Background())
}

func (o ProjectConfigSpecOutput) ToProjectConfigSpecPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectConfigSpec) *ProjectConfigSpec {
		return &v
	}).(ProjectConfigSpecPtrOutput)
}

// PromotionPolicies defines policies governing the promotion of Freight to
// specific Stages within the Project.
func (o ProjectConfigSpecOutput) PromotionPolicies() ProjectConfigSpecPromotionPoliciesArrayOutput {
	return o.ApplyT(func(v ProjectConfigSpec) []ProjectConfigSpecPromotionPolicies { return v.PromotionPolicies }).(ProjectConfigSpecPromotionPoliciesArrayOutput)
}

// WebhookReceivers describes Project-specific webhook receivers used for
// processing events from various external platforms
func (o ProjectConfigSpecOutput) WebhookReceivers() ProjectConfigSpecWebhookReceiversArrayOutput {
	return o.ApplyT(func(v ProjectConfigSpec) []ProjectConfigSpecWebhookReceivers { return v.WebhookReceivers }).(ProjectConfigSpecWebhookReceiversArrayOutput)
}

type ProjectConfigSpecPtrOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpec)(nil)).Elem()
}

func (o ProjectConfigSpecPtrOutput) ToProjectConfigSpecPtrOutput() ProjectConfigSpecPtrOutput {
	return o
}

func (o ProjectConfigSpecPtrOutput) ToProjectConfigSpecPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPtrOutput {
	return o
}

func (o ProjectConfigSpecPtrOutput) Elem() ProjectConfigSpecOutput {
	return o.ApplyT(func(v *ProjectConfigSpec) ProjectConfigSpec {
		if v != nil {
			return *v
		}
		var ret ProjectConfigSpec
		return ret
	}).(ProjectConfigSpecOutput)
}

// PromotionPolicies defines policies governing the promotion of Freight to
// specific Stages within the Project.
func (o ProjectConfigSpecPtrOutput) PromotionPolicies() ProjectConfigSpecPromotionPoliciesArrayOutput {
	return o.ApplyT(func(v *ProjectConfigSpec) []ProjectConfigSpecPromotionPolicies {
		if v == nil {
			return nil
		}
		return v.PromotionPolicies
	}).(ProjectConfigSpecPromotionPoliciesArrayOutput)
}

// WebhookReceivers describes Project-specific webhook receivers used for
// processing events from various external platforms
func (o ProjectConfigSpecPtrOutput) WebhookReceivers() ProjectConfigSpecWebhookReceiversArrayOutput {
	return o.ApplyT(func(v *ProjectConfigSpec) []ProjectConfigSpecWebhookReceivers {
		if v == nil {
			return nil
		}
		return v.WebhookReceivers
	}).(ProjectConfigSpecWebhookReceiversArrayOutput)
}

// Spec describes the configuration of a Project.
type ProjectConfigSpecPatch struct {
	// PromotionPolicies defines policies governing the promotion of Freight to
	// specific Stages within the Project.
	PromotionPolicies []ProjectConfigSpecPromotionPoliciesPatch `pulumi:"promotionPolicies"`
	// WebhookReceivers describes Project-specific webhook receivers used for
	// processing events from various external platforms
	WebhookReceivers []ProjectConfigSpecWebhookReceiversPatch `pulumi:"webhookReceivers"`
}

// ProjectConfigSpecPatchInput is an input type that accepts ProjectConfigSpecPatchArgs and ProjectConfigSpecPatchOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPatchInput` via:
//
//	ProjectConfigSpecPatchArgs{...}
type ProjectConfigSpecPatchInput interface {
	pulumi.Input

	ToProjectConfigSpecPatchOutput() ProjectConfigSpecPatchOutput
	ToProjectConfigSpecPatchOutputWithContext(context.Context) ProjectConfigSpecPatchOutput
}

// Spec describes the configuration of a Project.
type ProjectConfigSpecPatchArgs struct {
	// PromotionPolicies defines policies governing the promotion of Freight to
	// specific Stages within the Project.
	PromotionPolicies ProjectConfigSpecPromotionPoliciesPatchArrayInput `pulumi:"promotionPolicies"`
	// WebhookReceivers describes Project-specific webhook receivers used for
	// processing events from various external platforms
	WebhookReceivers ProjectConfigSpecWebhookReceiversPatchArrayInput `pulumi:"webhookReceivers"`
}

func (ProjectConfigSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecPatch)(nil)).Elem()
}

func (i ProjectConfigSpecPatchArgs) ToProjectConfigSpecPatchOutput() ProjectConfigSpecPatchOutput {
	return i.ToProjectConfigSpecPatchOutputWithContext(context.Background())
}

func (i ProjectConfigSpecPatchArgs) ToProjectConfigSpecPatchOutputWithContext(ctx context.Context) ProjectConfigSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPatchOutput)
}

func (i ProjectConfigSpecPatchArgs) ToProjectConfigSpecPatchPtrOutput() ProjectConfigSpecPatchPtrOutput {
	return i.ToProjectConfigSpecPatchPtrOutputWithContext(context.Background())
}

func (i ProjectConfigSpecPatchArgs) ToProjectConfigSpecPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPatchOutput).ToProjectConfigSpecPatchPtrOutputWithContext(ctx)
}

// ProjectConfigSpecPatchPtrInput is an input type that accepts ProjectConfigSpecPatchArgs, ProjectConfigSpecPatchPtr and ProjectConfigSpecPatchPtrOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPatchPtrInput` via:
//
//	        ProjectConfigSpecPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectConfigSpecPatchPtrInput interface {
	pulumi.Input

	ToProjectConfigSpecPatchPtrOutput() ProjectConfigSpecPatchPtrOutput
	ToProjectConfigSpecPatchPtrOutputWithContext(context.Context) ProjectConfigSpecPatchPtrOutput
}

type projectConfigSpecPatchPtrType ProjectConfigSpecPatchArgs

func ProjectConfigSpecPatchPtr(v *ProjectConfigSpecPatchArgs) ProjectConfigSpecPatchPtrInput {
	return (*projectConfigSpecPatchPtrType)(v)
}

func (*projectConfigSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpecPatch)(nil)).Elem()
}

func (i *projectConfigSpecPatchPtrType) ToProjectConfigSpecPatchPtrOutput() ProjectConfigSpecPatchPtrOutput {
	return i.ToProjectConfigSpecPatchPtrOutputWithContext(context.Background())
}

func (i *projectConfigSpecPatchPtrType) ToProjectConfigSpecPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPatchPtrOutput)
}

// Spec describes the configuration of a Project.
type ProjectConfigSpecPatchOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecPatch)(nil)).Elem()
}

func (o ProjectConfigSpecPatchOutput) ToProjectConfigSpecPatchOutput() ProjectConfigSpecPatchOutput {
	return o
}

func (o ProjectConfigSpecPatchOutput) ToProjectConfigSpecPatchOutputWithContext(ctx context.Context) ProjectConfigSpecPatchOutput {
	return o
}

func (o ProjectConfigSpecPatchOutput) ToProjectConfigSpecPatchPtrOutput() ProjectConfigSpecPatchPtrOutput {
	return o.ToProjectConfigSpecPatchPtrOutputWithContext(context.Background())
}

func (o ProjectConfigSpecPatchOutput) ToProjectConfigSpecPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectConfigSpecPatch) *ProjectConfigSpecPatch {
		return &v
	}).(ProjectConfigSpecPatchPtrOutput)
}

// PromotionPolicies defines policies governing the promotion of Freight to
// specific Stages within the Project.
func (o ProjectConfigSpecPatchOutput) PromotionPolicies() ProjectConfigSpecPromotionPoliciesPatchArrayOutput {
	return o.ApplyT(func(v ProjectConfigSpecPatch) []ProjectConfigSpecPromotionPoliciesPatch { return v.PromotionPolicies }).(ProjectConfigSpecPromotionPoliciesPatchArrayOutput)
}

// WebhookReceivers describes Project-specific webhook receivers used for
// processing events from various external platforms
func (o ProjectConfigSpecPatchOutput) WebhookReceivers() ProjectConfigSpecWebhookReceiversPatchArrayOutput {
	return o.ApplyT(func(v ProjectConfigSpecPatch) []ProjectConfigSpecWebhookReceiversPatch { return v.WebhookReceivers }).(ProjectConfigSpecWebhookReceiversPatchArrayOutput)
}

type ProjectConfigSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpecPatch)(nil)).Elem()
}

func (o ProjectConfigSpecPatchPtrOutput) ToProjectConfigSpecPatchPtrOutput() ProjectConfigSpecPatchPtrOutput {
	return o
}

func (o ProjectConfigSpecPatchPtrOutput) ToProjectConfigSpecPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPatchPtrOutput {
	return o
}

func (o ProjectConfigSpecPatchPtrOutput) Elem() ProjectConfigSpecPatchOutput {
	return o.ApplyT(func(v *ProjectConfigSpecPatch) ProjectConfigSpecPatch {
		if v != nil {
			return *v
		}
		var ret ProjectConfigSpecPatch
		return ret
	}).(ProjectConfigSpecPatchOutput)
}

// PromotionPolicies defines policies governing the promotion of Freight to
// specific Stages within the Project.
func (o ProjectConfigSpecPatchPtrOutput) PromotionPolicies() ProjectConfigSpecPromotionPoliciesPatchArrayOutput {
	return o.ApplyT(func(v *ProjectConfigSpecPatch) []ProjectConfigSpecPromotionPoliciesPatch {
		if v == nil {
			return nil
		}
		return v.PromotionPolicies
	}).(ProjectConfigSpecPromotionPoliciesPatchArrayOutput)
}

// WebhookReceivers describes Project-specific webhook receivers used for
// processing events from various external platforms
func (o ProjectConfigSpecPatchPtrOutput) WebhookReceivers() ProjectConfigSpecWebhookReceiversPatchArrayOutput {
	return o.ApplyT(func(v *ProjectConfigSpecPatch) []ProjectConfigSpecWebhookReceiversPatch {
		if v == nil {
			return nil
		}
		return v.WebhookReceivers
	}).(ProjectConfigSpecWebhookReceiversPatchArrayOutput)
}

// PromotionPolicy defines policies governing the promotion of Freight to a
// specific Stage.
type ProjectConfigSpecPromotionPolicies struct {
	// AutoPromotionEnabled indicates whether new Freight can automatically be
	// promoted into the Stage referenced by the Stage field. Note: There are may
	// be other conditions also required for an auto-promotion to occur. This
	// field defaults to false, but is commonly set to true for Stages that
	// subscribe to Warehouses instead of other, upstream Stages. This allows
	// users to define Stages that are automatically updated as soon as new
	// artifacts are detected.
	AutoPromotionEnabled *bool `pulumi:"autoPromotionEnabled"`
	// Stage is the name of the Stage to which this policy applies.
	//
	// Deprecated: Use StageSelector instead.
	Stage         *string                                          `pulumi:"stage"`
	StageSelector *ProjectConfigSpecPromotionPoliciesStageSelector `pulumi:"stageSelector"`
}

// ProjectConfigSpecPromotionPoliciesInput is an input type that accepts ProjectConfigSpecPromotionPoliciesArgs and ProjectConfigSpecPromotionPoliciesOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPromotionPoliciesInput` via:
//
//	ProjectConfigSpecPromotionPoliciesArgs{...}
type ProjectConfigSpecPromotionPoliciesInput interface {
	pulumi.Input

	ToProjectConfigSpecPromotionPoliciesOutput() ProjectConfigSpecPromotionPoliciesOutput
	ToProjectConfigSpecPromotionPoliciesOutputWithContext(context.Context) ProjectConfigSpecPromotionPoliciesOutput
}

// PromotionPolicy defines policies governing the promotion of Freight to a
// specific Stage.
type ProjectConfigSpecPromotionPoliciesArgs struct {
	// AutoPromotionEnabled indicates whether new Freight can automatically be
	// promoted into the Stage referenced by the Stage field. Note: There are may
	// be other conditions also required for an auto-promotion to occur. This
	// field defaults to false, but is commonly set to true for Stages that
	// subscribe to Warehouses instead of other, upstream Stages. This allows
	// users to define Stages that are automatically updated as soon as new
	// artifacts are detected.
	AutoPromotionEnabled pulumi.BoolPtrInput `pulumi:"autoPromotionEnabled"`
	// Stage is the name of the Stage to which this policy applies.
	//
	// Deprecated: Use StageSelector instead.
	Stage         pulumi.StringPtrInput                                   `pulumi:"stage"`
	StageSelector ProjectConfigSpecPromotionPoliciesStageSelectorPtrInput `pulumi:"stageSelector"`
}

func (ProjectConfigSpecPromotionPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecPromotionPolicies)(nil)).Elem()
}

func (i ProjectConfigSpecPromotionPoliciesArgs) ToProjectConfigSpecPromotionPoliciesOutput() ProjectConfigSpecPromotionPoliciesOutput {
	return i.ToProjectConfigSpecPromotionPoliciesOutputWithContext(context.Background())
}

func (i ProjectConfigSpecPromotionPoliciesArgs) ToProjectConfigSpecPromotionPoliciesOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPromotionPoliciesOutput)
}

// ProjectConfigSpecPromotionPoliciesArrayInput is an input type that accepts ProjectConfigSpecPromotionPoliciesArray and ProjectConfigSpecPromotionPoliciesArrayOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPromotionPoliciesArrayInput` via:
//
//	ProjectConfigSpecPromotionPoliciesArray{ ProjectConfigSpecPromotionPoliciesArgs{...} }
type ProjectConfigSpecPromotionPoliciesArrayInput interface {
	pulumi.Input

	ToProjectConfigSpecPromotionPoliciesArrayOutput() ProjectConfigSpecPromotionPoliciesArrayOutput
	ToProjectConfigSpecPromotionPoliciesArrayOutputWithContext(context.Context) ProjectConfigSpecPromotionPoliciesArrayOutput
}

type ProjectConfigSpecPromotionPoliciesArray []ProjectConfigSpecPromotionPoliciesInput

func (ProjectConfigSpecPromotionPoliciesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigSpecPromotionPolicies)(nil)).Elem()
}

func (i ProjectConfigSpecPromotionPoliciesArray) ToProjectConfigSpecPromotionPoliciesArrayOutput() ProjectConfigSpecPromotionPoliciesArrayOutput {
	return i.ToProjectConfigSpecPromotionPoliciesArrayOutputWithContext(context.Background())
}

func (i ProjectConfigSpecPromotionPoliciesArray) ToProjectConfigSpecPromotionPoliciesArrayOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPromotionPoliciesArrayOutput)
}

// PromotionPolicy defines policies governing the promotion of Freight to a
// specific Stage.
type ProjectConfigSpecPromotionPoliciesOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPromotionPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecPromotionPolicies)(nil)).Elem()
}

func (o ProjectConfigSpecPromotionPoliciesOutput) ToProjectConfigSpecPromotionPoliciesOutput() ProjectConfigSpecPromotionPoliciesOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesOutput) ToProjectConfigSpecPromotionPoliciesOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesOutput {
	return o
}

// AutoPromotionEnabled indicates whether new Freight can automatically be
// promoted into the Stage referenced by the Stage field. Note: There are may
// be other conditions also required for an auto-promotion to occur. This
// field defaults to false, but is commonly set to true for Stages that
// subscribe to Warehouses instead of other, upstream Stages. This allows
// users to define Stages that are automatically updated as soon as new
// artifacts are detected.
func (o ProjectConfigSpecPromotionPoliciesOutput) AutoPromotionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPolicies) *bool { return v.AutoPromotionEnabled }).(pulumi.BoolPtrOutput)
}

// Stage is the name of the Stage to which this policy applies.
//
// Deprecated: Use StageSelector instead.
func (o ProjectConfigSpecPromotionPoliciesOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPolicies) *string { return v.Stage }).(pulumi.StringPtrOutput)
}

func (o ProjectConfigSpecPromotionPoliciesOutput) StageSelector() ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPolicies) *ProjectConfigSpecPromotionPoliciesStageSelector {
		return v.StageSelector
	}).(ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput)
}

type ProjectConfigSpecPromotionPoliciesArrayOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPromotionPoliciesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigSpecPromotionPolicies)(nil)).Elem()
}

func (o ProjectConfigSpecPromotionPoliciesArrayOutput) ToProjectConfigSpecPromotionPoliciesArrayOutput() ProjectConfigSpecPromotionPoliciesArrayOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesArrayOutput) ToProjectConfigSpecPromotionPoliciesArrayOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesArrayOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesArrayOutput) Index(i pulumi.IntInput) ProjectConfigSpecPromotionPoliciesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectConfigSpecPromotionPolicies {
		return vs[0].([]ProjectConfigSpecPromotionPolicies)[vs[1].(int)]
	}).(ProjectConfigSpecPromotionPoliciesOutput)
}

// PromotionPolicy defines policies governing the promotion of Freight to a
// specific Stage.
type ProjectConfigSpecPromotionPoliciesPatch struct {
	// AutoPromotionEnabled indicates whether new Freight can automatically be
	// promoted into the Stage referenced by the Stage field. Note: There are may
	// be other conditions also required for an auto-promotion to occur. This
	// field defaults to false, but is commonly set to true for Stages that
	// subscribe to Warehouses instead of other, upstream Stages. This allows
	// users to define Stages that are automatically updated as soon as new
	// artifacts are detected.
	AutoPromotionEnabled *bool `pulumi:"autoPromotionEnabled"`
	// Stage is the name of the Stage to which this policy applies.
	//
	// Deprecated: Use StageSelector instead.
	Stage         *string                                               `pulumi:"stage"`
	StageSelector *ProjectConfigSpecPromotionPoliciesStageSelectorPatch `pulumi:"stageSelector"`
}

// ProjectConfigSpecPromotionPoliciesPatchInput is an input type that accepts ProjectConfigSpecPromotionPoliciesPatchArgs and ProjectConfigSpecPromotionPoliciesPatchOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPromotionPoliciesPatchInput` via:
//
//	ProjectConfigSpecPromotionPoliciesPatchArgs{...}
type ProjectConfigSpecPromotionPoliciesPatchInput interface {
	pulumi.Input

	ToProjectConfigSpecPromotionPoliciesPatchOutput() ProjectConfigSpecPromotionPoliciesPatchOutput
	ToProjectConfigSpecPromotionPoliciesPatchOutputWithContext(context.Context) ProjectConfigSpecPromotionPoliciesPatchOutput
}

// PromotionPolicy defines policies governing the promotion of Freight to a
// specific Stage.
type ProjectConfigSpecPromotionPoliciesPatchArgs struct {
	// AutoPromotionEnabled indicates whether new Freight can automatically be
	// promoted into the Stage referenced by the Stage field. Note: There are may
	// be other conditions also required for an auto-promotion to occur. This
	// field defaults to false, but is commonly set to true for Stages that
	// subscribe to Warehouses instead of other, upstream Stages. This allows
	// users to define Stages that are automatically updated as soon as new
	// artifacts are detected.
	AutoPromotionEnabled pulumi.BoolPtrInput `pulumi:"autoPromotionEnabled"`
	// Stage is the name of the Stage to which this policy applies.
	//
	// Deprecated: Use StageSelector instead.
	Stage         pulumi.StringPtrInput                                        `pulumi:"stage"`
	StageSelector ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrInput `pulumi:"stageSelector"`
}

func (ProjectConfigSpecPromotionPoliciesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesPatch)(nil)).Elem()
}

func (i ProjectConfigSpecPromotionPoliciesPatchArgs) ToProjectConfigSpecPromotionPoliciesPatchOutput() ProjectConfigSpecPromotionPoliciesPatchOutput {
	return i.ToProjectConfigSpecPromotionPoliciesPatchOutputWithContext(context.Background())
}

func (i ProjectConfigSpecPromotionPoliciesPatchArgs) ToProjectConfigSpecPromotionPoliciesPatchOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPromotionPoliciesPatchOutput)
}

// ProjectConfigSpecPromotionPoliciesPatchArrayInput is an input type that accepts ProjectConfigSpecPromotionPoliciesPatchArray and ProjectConfigSpecPromotionPoliciesPatchArrayOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPromotionPoliciesPatchArrayInput` via:
//
//	ProjectConfigSpecPromotionPoliciesPatchArray{ ProjectConfigSpecPromotionPoliciesPatchArgs{...} }
type ProjectConfigSpecPromotionPoliciesPatchArrayInput interface {
	pulumi.Input

	ToProjectConfigSpecPromotionPoliciesPatchArrayOutput() ProjectConfigSpecPromotionPoliciesPatchArrayOutput
	ToProjectConfigSpecPromotionPoliciesPatchArrayOutputWithContext(context.Context) ProjectConfigSpecPromotionPoliciesPatchArrayOutput
}

type ProjectConfigSpecPromotionPoliciesPatchArray []ProjectConfigSpecPromotionPoliciesPatchInput

func (ProjectConfigSpecPromotionPoliciesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigSpecPromotionPoliciesPatch)(nil)).Elem()
}

func (i ProjectConfigSpecPromotionPoliciesPatchArray) ToProjectConfigSpecPromotionPoliciesPatchArrayOutput() ProjectConfigSpecPromotionPoliciesPatchArrayOutput {
	return i.ToProjectConfigSpecPromotionPoliciesPatchArrayOutputWithContext(context.Background())
}

func (i ProjectConfigSpecPromotionPoliciesPatchArray) ToProjectConfigSpecPromotionPoliciesPatchArrayOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPromotionPoliciesPatchArrayOutput)
}

// PromotionPolicy defines policies governing the promotion of Freight to a
// specific Stage.
type ProjectConfigSpecPromotionPoliciesPatchOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPromotionPoliciesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesPatch)(nil)).Elem()
}

func (o ProjectConfigSpecPromotionPoliciesPatchOutput) ToProjectConfigSpecPromotionPoliciesPatchOutput() ProjectConfigSpecPromotionPoliciesPatchOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesPatchOutput) ToProjectConfigSpecPromotionPoliciesPatchOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesPatchOutput {
	return o
}

// AutoPromotionEnabled indicates whether new Freight can automatically be
// promoted into the Stage referenced by the Stage field. Note: There are may
// be other conditions also required for an auto-promotion to occur. This
// field defaults to false, but is commonly set to true for Stages that
// subscribe to Warehouses instead of other, upstream Stages. This allows
// users to define Stages that are automatically updated as soon as new
// artifacts are detected.
func (o ProjectConfigSpecPromotionPoliciesPatchOutput) AutoPromotionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesPatch) *bool { return v.AutoPromotionEnabled }).(pulumi.BoolPtrOutput)
}

// Stage is the name of the Stage to which this policy applies.
//
// Deprecated: Use StageSelector instead.
func (o ProjectConfigSpecPromotionPoliciesPatchOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesPatch) *string { return v.Stage }).(pulumi.StringPtrOutput)
}

func (o ProjectConfigSpecPromotionPoliciesPatchOutput) StageSelector() ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesPatch) *ProjectConfigSpecPromotionPoliciesStageSelectorPatch {
		return v.StageSelector
	}).(ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput)
}

type ProjectConfigSpecPromotionPoliciesPatchArrayOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPromotionPoliciesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigSpecPromotionPoliciesPatch)(nil)).Elem()
}

func (o ProjectConfigSpecPromotionPoliciesPatchArrayOutput) ToProjectConfigSpecPromotionPoliciesPatchArrayOutput() ProjectConfigSpecPromotionPoliciesPatchArrayOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesPatchArrayOutput) ToProjectConfigSpecPromotionPoliciesPatchArrayOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesPatchArrayOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesPatchArrayOutput) Index(i pulumi.IntInput) ProjectConfigSpecPromotionPoliciesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectConfigSpecPromotionPoliciesPatch {
		return vs[0].([]ProjectConfigSpecPromotionPoliciesPatch)[vs[1].(int)]
	}).(ProjectConfigSpecPromotionPoliciesPatchOutput)
}

// StageSelector is a selector that matches the Stage resource to which
// this policy applies.
type ProjectConfigSpecPromotionPoliciesStageSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
	// Name is the name of the resource to which this policy applies.
	//
	// It can be an exact name, a regex pattern (with prefix "regex:"), or a
	// glob pattern (with prefix "glob:").
	//
	// When both Name and LabelSelector are specified, the Name is ANDed with
	// the LabelSelector. I.e., the resource must match both the Name and
	// LabelSelector to be selected by this policy.
	//
	// NOTE: Using a specific exact name is the most secure option. Pattern
	// matching via regex or glob can be exploited by users with permissions to
	// match promotion policies that weren't intended to apply to their
	// resources. For example, a user could create a resource with a name
	// deliberately crafted to match the pattern, potentially bypassing intended
	// promotion controls.
	Name *string `pulumi:"name"`
}

// ProjectConfigSpecPromotionPoliciesStageSelectorInput is an input type that accepts ProjectConfigSpecPromotionPoliciesStageSelectorArgs and ProjectConfigSpecPromotionPoliciesStageSelectorOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPromotionPoliciesStageSelectorInput` via:
//
//	ProjectConfigSpecPromotionPoliciesStageSelectorArgs{...}
type ProjectConfigSpecPromotionPoliciesStageSelectorInput interface {
	pulumi.Input

	ToProjectConfigSpecPromotionPoliciesStageSelectorOutput() ProjectConfigSpecPromotionPoliciesStageSelectorOutput
	ToProjectConfigSpecPromotionPoliciesStageSelectorOutputWithContext(context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorOutput
}

// StageSelector is a selector that matches the Stage resource to which
// this policy applies.
type ProjectConfigSpecPromotionPoliciesStageSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
	// Name is the name of the resource to which this policy applies.
	//
	// It can be an exact name, a regex pattern (with prefix "regex:"), or a
	// glob pattern (with prefix "glob:").
	//
	// When both Name and LabelSelector are specified, the Name is ANDed with
	// the LabelSelector. I.e., the resource must match both the Name and
	// LabelSelector to be selected by this policy.
	//
	// NOTE: Using a specific exact name is the most secure option. Pattern
	// matching via regex or glob can be exploited by users with permissions to
	// match promotion policies that weren't intended to apply to their
	// resources. For example, a user could create a resource with a name
	// deliberately crafted to match the pattern, potentially bypassing intended
	// promotion controls.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProjectConfigSpecPromotionPoliciesStageSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelector)(nil)).Elem()
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorArgs) ToProjectConfigSpecPromotionPoliciesStageSelectorOutput() ProjectConfigSpecPromotionPoliciesStageSelectorOutput {
	return i.ToProjectConfigSpecPromotionPoliciesStageSelectorOutputWithContext(context.Background())
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorArgs) ToProjectConfigSpecPromotionPoliciesStageSelectorOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPromotionPoliciesStageSelectorOutput)
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorArgs) ToProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput() ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput {
	return i.ToProjectConfigSpecPromotionPoliciesStageSelectorPtrOutputWithContext(context.Background())
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorArgs) ToProjectConfigSpecPromotionPoliciesStageSelectorPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPromotionPoliciesStageSelectorOutput).ToProjectConfigSpecPromotionPoliciesStageSelectorPtrOutputWithContext(ctx)
}

// ProjectConfigSpecPromotionPoliciesStageSelectorPtrInput is an input type that accepts ProjectConfigSpecPromotionPoliciesStageSelectorArgs, ProjectConfigSpecPromotionPoliciesStageSelectorPtr and ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPromotionPoliciesStageSelectorPtrInput` via:
//
//	        ProjectConfigSpecPromotionPoliciesStageSelectorArgs{...}
//
//	or:
//
//	        nil
type ProjectConfigSpecPromotionPoliciesStageSelectorPtrInput interface {
	pulumi.Input

	ToProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput() ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput
	ToProjectConfigSpecPromotionPoliciesStageSelectorPtrOutputWithContext(context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput
}

type projectConfigSpecPromotionPoliciesStageSelectorPtrType ProjectConfigSpecPromotionPoliciesStageSelectorArgs

func ProjectConfigSpecPromotionPoliciesStageSelectorPtr(v *ProjectConfigSpecPromotionPoliciesStageSelectorArgs) ProjectConfigSpecPromotionPoliciesStageSelectorPtrInput {
	return (*projectConfigSpecPromotionPoliciesStageSelectorPtrType)(v)
}

func (*projectConfigSpecPromotionPoliciesStageSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpecPromotionPoliciesStageSelector)(nil)).Elem()
}

func (i *projectConfigSpecPromotionPoliciesStageSelectorPtrType) ToProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput() ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput {
	return i.ToProjectConfigSpecPromotionPoliciesStageSelectorPtrOutputWithContext(context.Background())
}

func (i *projectConfigSpecPromotionPoliciesStageSelectorPtrType) ToProjectConfigSpecPromotionPoliciesStageSelectorPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput)
}

// StageSelector is a selector that matches the Stage resource to which
// this policy applies.
type ProjectConfigSpecPromotionPoliciesStageSelectorOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPromotionPoliciesStageSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelector)(nil)).Elem()
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorOutput() ProjectConfigSpecPromotionPoliciesStageSelectorOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput() ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput {
	return o.ToProjectConfigSpecPromotionPoliciesStageSelectorPtrOutputWithContext(context.Background())
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectConfigSpecPromotionPoliciesStageSelector) *ProjectConfigSpecPromotionPoliciesStageSelector {
		return &v
	}).(ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorOutput) MatchExpressions() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesStageSelector) []ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressions {
		return v.MatchExpressions
	}).(ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesStageSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

// Name is the name of the resource to which this policy applies.
//
// It can be an exact name, a regex pattern (with prefix "regex:"), or a
// glob pattern (with prefix "glob:").
//
// When both Name and LabelSelector are specified, the Name is ANDed with
// the LabelSelector. I.e., the resource must match both the Name and
// LabelSelector to be selected by this policy.
//
// NOTE: Using a specific exact name is the most secure option. Pattern
// matching via regex or glob can be exploited by users with permissions to
// match promotion policies that weren't intended to apply to their
// resources. For example, a user could create a resource with a name
// deliberately crafted to match the pattern, potentially bypassing intended
// promotion controls.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesStageSelector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpecPromotionPoliciesStageSelector)(nil)).Elem()
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput() ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput) Elem() ProjectConfigSpecPromotionPoliciesStageSelectorOutput {
	return o.ApplyT(func(v *ProjectConfigSpecPromotionPoliciesStageSelector) ProjectConfigSpecPromotionPoliciesStageSelector {
		if v != nil {
			return *v
		}
		var ret ProjectConfigSpecPromotionPoliciesStageSelector
		return ret
	}).(ProjectConfigSpecPromotionPoliciesStageSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput) MatchExpressions() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *ProjectConfigSpecPromotionPoliciesStageSelector) []ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProjectConfigSpecPromotionPoliciesStageSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// Name is the name of the resource to which this policy applies.
//
// It can be an exact name, a regex pattern (with prefix "regex:"), or a
// glob pattern (with prefix "glob:").
//
// When both Name and LabelSelector are specified, the Name is ANDed with
// the LabelSelector. I.e., the resource must match both the Name and
// LabelSelector to be selected by this policy.
//
// NOTE: Using a specific exact name is the most secure option. Pattern
// matching via regex or glob can be exploited by users with permissions to
// match promotion policies that weren't intended to apply to their
// resources. For example, a user could create a resource with a name
// deliberately crafted to match the pattern, potentially bypassing intended
// promotion controls.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectConfigSpecPromotionPoliciesStageSelector) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsInput is an input type that accepts ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArgs and ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsInput` via:
//
//	ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArgs{...}
type ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput
	ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutputWithContext(context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressions)(nil)).Elem()
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArgs) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput {
	return i.ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArgs) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput)
}

// ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayInput is an input type that accepts ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArray and ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayInput` via:
//
//	ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArray{ ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArgs{...} }
type ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput
	ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutputWithContext(context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput
}

type ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArray []ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsInput

func (ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressions)(nil)).Elem()
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArray) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput {
	return i.ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArray) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressions)(nil)).Elem()
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressions) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressions) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressions)(nil)).Elem()
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressions {
		return vs[0].([]ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressions)[vs[1].(int)]
	}).(ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatch struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchInput is an input type that accepts ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs and ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchInput` via:
//
//	ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs{...}
type ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput
	ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutputWithContext(context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput {
	return i.ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput)
}

// ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayInput is an input type that accepts ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArray and ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayInput` via:
//
//	ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArray{ ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs{...} }
type ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput
	ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput
}

type ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArray []ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchInput

func (ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArray) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput {
	return i.ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArray) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatch) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatch {
		return vs[0].([]ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput)
}

// StageSelector is a selector that matches the Stage resource to which
// this policy applies.
type ProjectConfigSpecPromotionPoliciesStageSelectorPatch struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
	// Name is the name of the resource to which this policy applies.
	//
	// It can be an exact name, a regex pattern (with prefix "regex:"), or a
	// glob pattern (with prefix "glob:").
	//
	// When both Name and LabelSelector are specified, the Name is ANDed with
	// the LabelSelector. I.e., the resource must match both the Name and
	// LabelSelector to be selected by this policy.
	//
	// NOTE: Using a specific exact name is the most secure option. Pattern
	// matching via regex or glob can be exploited by users with permissions to
	// match promotion policies that weren't intended to apply to their
	// resources. For example, a user could create a resource with a name
	// deliberately crafted to match the pattern, potentially bypassing intended
	// promotion controls.
	Name *string `pulumi:"name"`
}

// ProjectConfigSpecPromotionPoliciesStageSelectorPatchInput is an input type that accepts ProjectConfigSpecPromotionPoliciesStageSelectorPatchArgs and ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPromotionPoliciesStageSelectorPatchInput` via:
//
//	ProjectConfigSpecPromotionPoliciesStageSelectorPatchArgs{...}
type ProjectConfigSpecPromotionPoliciesStageSelectorPatchInput interface {
	pulumi.Input

	ToProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput() ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput
	ToProjectConfigSpecPromotionPoliciesStageSelectorPatchOutputWithContext(context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput
}

// StageSelector is a selector that matches the Stage resource to which
// this policy applies.
type ProjectConfigSpecPromotionPoliciesStageSelectorPatchArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
	// Name is the name of the resource to which this policy applies.
	//
	// It can be an exact name, a regex pattern (with prefix "regex:"), or a
	// glob pattern (with prefix "glob:").
	//
	// When both Name and LabelSelector are specified, the Name is ANDed with
	// the LabelSelector. I.e., the resource must match both the Name and
	// LabelSelector to be selected by this policy.
	//
	// NOTE: Using a specific exact name is the most secure option. Pattern
	// matching via regex or glob can be exploited by users with permissions to
	// match promotion policies that weren't intended to apply to their
	// resources. For example, a user could create a resource with a name
	// deliberately crafted to match the pattern, potentially bypassing intended
	// promotion controls.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProjectConfigSpecPromotionPoliciesStageSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelectorPatch)(nil)).Elem()
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorPatchArgs) ToProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput() ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput {
	return i.ToProjectConfigSpecPromotionPoliciesStageSelectorPatchOutputWithContext(context.Background())
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorPatchArgs) ToProjectConfigSpecPromotionPoliciesStageSelectorPatchOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput)
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorPatchArgs) ToProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput() ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return i.ToProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(context.Background())
}

func (i ProjectConfigSpecPromotionPoliciesStageSelectorPatchArgs) ToProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput).ToProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(ctx)
}

// ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrInput is an input type that accepts ProjectConfigSpecPromotionPoliciesStageSelectorPatchArgs, ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtr and ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput values.
// You can construct a concrete instance of `ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrInput` via:
//
//	        ProjectConfigSpecPromotionPoliciesStageSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrInput interface {
	pulumi.Input

	ToProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput() ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput
	ToProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput
}

type projectConfigSpecPromotionPoliciesStageSelectorPatchPtrType ProjectConfigSpecPromotionPoliciesStageSelectorPatchArgs

func ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtr(v *ProjectConfigSpecPromotionPoliciesStageSelectorPatchArgs) ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrInput {
	return (*projectConfigSpecPromotionPoliciesStageSelectorPatchPtrType)(v)
}

func (*projectConfigSpecPromotionPoliciesStageSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpecPromotionPoliciesStageSelectorPatch)(nil)).Elem()
}

func (i *projectConfigSpecPromotionPoliciesStageSelectorPatchPtrType) ToProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput() ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return i.ToProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *projectConfigSpecPromotionPoliciesStageSelectorPatchPtrType) ToProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput)
}

// StageSelector is a selector that matches the Stage resource to which
// this policy applies.
type ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelectorPatch)(nil)).Elem()
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput() ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorPatchOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput() ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return o.ToProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(context.Background())
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectConfigSpecPromotionPoliciesStageSelectorPatch) *ProjectConfigSpecPromotionPoliciesStageSelectorPatch {
		return &v
	}).(ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput) MatchExpressions() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesStageSelectorPatch) []ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesStageSelectorPatch) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

// Name is the name of the resource to which this policy applies.
//
// It can be an exact name, a regex pattern (with prefix "regex:"), or a
// glob pattern (with prefix "glob:").
//
// When both Name and LabelSelector are specified, the Name is ANDed with
// the LabelSelector. I.e., the resource must match both the Name and
// LabelSelector to be selected by this policy.
//
// NOTE: Using a specific exact name is the most secure option. Pattern
// matching via regex or glob can be exploited by users with permissions to
// match promotion policies that weren't intended to apply to their
// resources. For example, a user could create a resource with a name
// deliberately crafted to match the pattern, potentially bypassing intended
// promotion controls.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecPromotionPoliciesStageSelectorPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpecPromotionPoliciesStageSelectorPatch)(nil)).Elem()
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput() ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput) ToProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return o
}

func (o ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput) Elem() ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput {
	return o.ApplyT(func(v *ProjectConfigSpecPromotionPoliciesStageSelectorPatch) ProjectConfigSpecPromotionPoliciesStageSelectorPatch {
		if v != nil {
			return *v
		}
		var ret ProjectConfigSpecPromotionPoliciesStageSelectorPatch
		return ret
	}).(ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput) MatchExpressions() ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *ProjectConfigSpecPromotionPoliciesStageSelectorPatch) []ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProjectConfigSpecPromotionPoliciesStageSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// Name is the name of the resource to which this policy applies.
//
// It can be an exact name, a regex pattern (with prefix "regex:"), or a
// glob pattern (with prefix "glob:").
//
// When both Name and LabelSelector are specified, the Name is ANDed with
// the LabelSelector. I.e., the resource must match both the Name and
// LabelSelector to be selected by this policy.
//
// NOTE: Using a specific exact name is the most secure option. Pattern
// matching via regex or glob can be exploited by users with permissions to
// match promotion policies that weren't intended to apply to their
// resources. For example, a user could create a resource with a name
// deliberately crafted to match the pattern, potentially bypassing intended
// promotion controls.
func (o ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectConfigSpecPromotionPoliciesStageSelectorPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// WebhookReceiverConfig describes the configuration for a single webhook
// receiver.
type ProjectConfigSpecWebhookReceivers struct {
	Github *ProjectConfigSpecWebhookReceiversGithub `pulumi:"github"`
	// Name is the name of the webhook receiver.
	Name *string `pulumi:"name"`
}

// ProjectConfigSpecWebhookReceiversInput is an input type that accepts ProjectConfigSpecWebhookReceiversArgs and ProjectConfigSpecWebhookReceiversOutput values.
// You can construct a concrete instance of `ProjectConfigSpecWebhookReceiversInput` via:
//
//	ProjectConfigSpecWebhookReceiversArgs{...}
type ProjectConfigSpecWebhookReceiversInput interface {
	pulumi.Input

	ToProjectConfigSpecWebhookReceiversOutput() ProjectConfigSpecWebhookReceiversOutput
	ToProjectConfigSpecWebhookReceiversOutputWithContext(context.Context) ProjectConfigSpecWebhookReceiversOutput
}

// WebhookReceiverConfig describes the configuration for a single webhook
// receiver.
type ProjectConfigSpecWebhookReceiversArgs struct {
	Github ProjectConfigSpecWebhookReceiversGithubPtrInput `pulumi:"github"`
	// Name is the name of the webhook receiver.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProjectConfigSpecWebhookReceiversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecWebhookReceivers)(nil)).Elem()
}

func (i ProjectConfigSpecWebhookReceiversArgs) ToProjectConfigSpecWebhookReceiversOutput() ProjectConfigSpecWebhookReceiversOutput {
	return i.ToProjectConfigSpecWebhookReceiversOutputWithContext(context.Background())
}

func (i ProjectConfigSpecWebhookReceiversArgs) ToProjectConfigSpecWebhookReceiversOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversOutput)
}

// ProjectConfigSpecWebhookReceiversArrayInput is an input type that accepts ProjectConfigSpecWebhookReceiversArray and ProjectConfigSpecWebhookReceiversArrayOutput values.
// You can construct a concrete instance of `ProjectConfigSpecWebhookReceiversArrayInput` via:
//
//	ProjectConfigSpecWebhookReceiversArray{ ProjectConfigSpecWebhookReceiversArgs{...} }
type ProjectConfigSpecWebhookReceiversArrayInput interface {
	pulumi.Input

	ToProjectConfigSpecWebhookReceiversArrayOutput() ProjectConfigSpecWebhookReceiversArrayOutput
	ToProjectConfigSpecWebhookReceiversArrayOutputWithContext(context.Context) ProjectConfigSpecWebhookReceiversArrayOutput
}

type ProjectConfigSpecWebhookReceiversArray []ProjectConfigSpecWebhookReceiversInput

func (ProjectConfigSpecWebhookReceiversArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigSpecWebhookReceivers)(nil)).Elem()
}

func (i ProjectConfigSpecWebhookReceiversArray) ToProjectConfigSpecWebhookReceiversArrayOutput() ProjectConfigSpecWebhookReceiversArrayOutput {
	return i.ToProjectConfigSpecWebhookReceiversArrayOutputWithContext(context.Background())
}

func (i ProjectConfigSpecWebhookReceiversArray) ToProjectConfigSpecWebhookReceiversArrayOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversArrayOutput)
}

// WebhookReceiverConfig describes the configuration for a single webhook
// receiver.
type ProjectConfigSpecWebhookReceiversOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecWebhookReceiversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecWebhookReceivers)(nil)).Elem()
}

func (o ProjectConfigSpecWebhookReceiversOutput) ToProjectConfigSpecWebhookReceiversOutput() ProjectConfigSpecWebhookReceiversOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversOutput) ToProjectConfigSpecWebhookReceiversOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversOutput) Github() ProjectConfigSpecWebhookReceiversGithubPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecWebhookReceivers) *ProjectConfigSpecWebhookReceiversGithub { return v.Github }).(ProjectConfigSpecWebhookReceiversGithubPtrOutput)
}

// Name is the name of the webhook receiver.
func (o ProjectConfigSpecWebhookReceiversOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecWebhookReceivers) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProjectConfigSpecWebhookReceiversArrayOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecWebhookReceiversArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigSpecWebhookReceivers)(nil)).Elem()
}

func (o ProjectConfigSpecWebhookReceiversArrayOutput) ToProjectConfigSpecWebhookReceiversArrayOutput() ProjectConfigSpecWebhookReceiversArrayOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversArrayOutput) ToProjectConfigSpecWebhookReceiversArrayOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversArrayOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversArrayOutput) Index(i pulumi.IntInput) ProjectConfigSpecWebhookReceiversOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectConfigSpecWebhookReceivers {
		return vs[0].([]ProjectConfigSpecWebhookReceivers)[vs[1].(int)]
	}).(ProjectConfigSpecWebhookReceiversOutput)
}

// GitHub contains the configuration for a webhook receiver that is compatible with
// GitHub payloads.
type ProjectConfigSpecWebhookReceiversGithub struct {
	SecretRef *ProjectConfigSpecWebhookReceiversGithubSecretRef `pulumi:"secretRef"`
}

// ProjectConfigSpecWebhookReceiversGithubInput is an input type that accepts ProjectConfigSpecWebhookReceiversGithubArgs and ProjectConfigSpecWebhookReceiversGithubOutput values.
// You can construct a concrete instance of `ProjectConfigSpecWebhookReceiversGithubInput` via:
//
//	ProjectConfigSpecWebhookReceiversGithubArgs{...}
type ProjectConfigSpecWebhookReceiversGithubInput interface {
	pulumi.Input

	ToProjectConfigSpecWebhookReceiversGithubOutput() ProjectConfigSpecWebhookReceiversGithubOutput
	ToProjectConfigSpecWebhookReceiversGithubOutputWithContext(context.Context) ProjectConfigSpecWebhookReceiversGithubOutput
}

// GitHub contains the configuration for a webhook receiver that is compatible with
// GitHub payloads.
type ProjectConfigSpecWebhookReceiversGithubArgs struct {
	SecretRef ProjectConfigSpecWebhookReceiversGithubSecretRefPtrInput `pulumi:"secretRef"`
}

func (ProjectConfigSpecWebhookReceiversGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithub)(nil)).Elem()
}

func (i ProjectConfigSpecWebhookReceiversGithubArgs) ToProjectConfigSpecWebhookReceiversGithubOutput() ProjectConfigSpecWebhookReceiversGithubOutput {
	return i.ToProjectConfigSpecWebhookReceiversGithubOutputWithContext(context.Background())
}

func (i ProjectConfigSpecWebhookReceiversGithubArgs) ToProjectConfigSpecWebhookReceiversGithubOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversGithubOutput)
}

func (i ProjectConfigSpecWebhookReceiversGithubArgs) ToProjectConfigSpecWebhookReceiversGithubPtrOutput() ProjectConfigSpecWebhookReceiversGithubPtrOutput {
	return i.ToProjectConfigSpecWebhookReceiversGithubPtrOutputWithContext(context.Background())
}

func (i ProjectConfigSpecWebhookReceiversGithubArgs) ToProjectConfigSpecWebhookReceiversGithubPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversGithubOutput).ToProjectConfigSpecWebhookReceiversGithubPtrOutputWithContext(ctx)
}

// ProjectConfigSpecWebhookReceiversGithubPtrInput is an input type that accepts ProjectConfigSpecWebhookReceiversGithubArgs, ProjectConfigSpecWebhookReceiversGithubPtr and ProjectConfigSpecWebhookReceiversGithubPtrOutput values.
// You can construct a concrete instance of `ProjectConfigSpecWebhookReceiversGithubPtrInput` via:
//
//	        ProjectConfigSpecWebhookReceiversGithubArgs{...}
//
//	or:
//
//	        nil
type ProjectConfigSpecWebhookReceiversGithubPtrInput interface {
	pulumi.Input

	ToProjectConfigSpecWebhookReceiversGithubPtrOutput() ProjectConfigSpecWebhookReceiversGithubPtrOutput
	ToProjectConfigSpecWebhookReceiversGithubPtrOutputWithContext(context.Context) ProjectConfigSpecWebhookReceiversGithubPtrOutput
}

type projectConfigSpecWebhookReceiversGithubPtrType ProjectConfigSpecWebhookReceiversGithubArgs

func ProjectConfigSpecWebhookReceiversGithubPtr(v *ProjectConfigSpecWebhookReceiversGithubArgs) ProjectConfigSpecWebhookReceiversGithubPtrInput {
	return (*projectConfigSpecWebhookReceiversGithubPtrType)(v)
}

func (*projectConfigSpecWebhookReceiversGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpecWebhookReceiversGithub)(nil)).Elem()
}

func (i *projectConfigSpecWebhookReceiversGithubPtrType) ToProjectConfigSpecWebhookReceiversGithubPtrOutput() ProjectConfigSpecWebhookReceiversGithubPtrOutput {
	return i.ToProjectConfigSpecWebhookReceiversGithubPtrOutputWithContext(context.Background())
}

func (i *projectConfigSpecWebhookReceiversGithubPtrType) ToProjectConfigSpecWebhookReceiversGithubPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversGithubPtrOutput)
}

// GitHub contains the configuration for a webhook receiver that is compatible with
// GitHub payloads.
type ProjectConfigSpecWebhookReceiversGithubOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecWebhookReceiversGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithub)(nil)).Elem()
}

func (o ProjectConfigSpecWebhookReceiversGithubOutput) ToProjectConfigSpecWebhookReceiversGithubOutput() ProjectConfigSpecWebhookReceiversGithubOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubOutput) ToProjectConfigSpecWebhookReceiversGithubOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubOutput) ToProjectConfigSpecWebhookReceiversGithubPtrOutput() ProjectConfigSpecWebhookReceiversGithubPtrOutput {
	return o.ToProjectConfigSpecWebhookReceiversGithubPtrOutputWithContext(context.Background())
}

func (o ProjectConfigSpecWebhookReceiversGithubOutput) ToProjectConfigSpecWebhookReceiversGithubPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectConfigSpecWebhookReceiversGithub) *ProjectConfigSpecWebhookReceiversGithub {
		return &v
	}).(ProjectConfigSpecWebhookReceiversGithubPtrOutput)
}

func (o ProjectConfigSpecWebhookReceiversGithubOutput) SecretRef() ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecWebhookReceiversGithub) *ProjectConfigSpecWebhookReceiversGithubSecretRef {
		return v.SecretRef
	}).(ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput)
}

type ProjectConfigSpecWebhookReceiversGithubPtrOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecWebhookReceiversGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpecWebhookReceiversGithub)(nil)).Elem()
}

func (o ProjectConfigSpecWebhookReceiversGithubPtrOutput) ToProjectConfigSpecWebhookReceiversGithubPtrOutput() ProjectConfigSpecWebhookReceiversGithubPtrOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubPtrOutput) ToProjectConfigSpecWebhookReceiversGithubPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubPtrOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubPtrOutput) Elem() ProjectConfigSpecWebhookReceiversGithubOutput {
	return o.ApplyT(func(v *ProjectConfigSpecWebhookReceiversGithub) ProjectConfigSpecWebhookReceiversGithub {
		if v != nil {
			return *v
		}
		var ret ProjectConfigSpecWebhookReceiversGithub
		return ret
	}).(ProjectConfigSpecWebhookReceiversGithubOutput)
}

func (o ProjectConfigSpecWebhookReceiversGithubPtrOutput) SecretRef() ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput {
	return o.ApplyT(func(v *ProjectConfigSpecWebhookReceiversGithub) *ProjectConfigSpecWebhookReceiversGithubSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput)
}

// GitHub contains the configuration for a webhook receiver that is compatible with
// GitHub payloads.
type ProjectConfigSpecWebhookReceiversGithubPatch struct {
	SecretRef *ProjectConfigSpecWebhookReceiversGithubSecretRefPatch `pulumi:"secretRef"`
}

// ProjectConfigSpecWebhookReceiversGithubPatchInput is an input type that accepts ProjectConfigSpecWebhookReceiversGithubPatchArgs and ProjectConfigSpecWebhookReceiversGithubPatchOutput values.
// You can construct a concrete instance of `ProjectConfigSpecWebhookReceiversGithubPatchInput` via:
//
//	ProjectConfigSpecWebhookReceiversGithubPatchArgs{...}
type ProjectConfigSpecWebhookReceiversGithubPatchInput interface {
	pulumi.Input

	ToProjectConfigSpecWebhookReceiversGithubPatchOutput() ProjectConfigSpecWebhookReceiversGithubPatchOutput
	ToProjectConfigSpecWebhookReceiversGithubPatchOutputWithContext(context.Context) ProjectConfigSpecWebhookReceiversGithubPatchOutput
}

// GitHub contains the configuration for a webhook receiver that is compatible with
// GitHub payloads.
type ProjectConfigSpecWebhookReceiversGithubPatchArgs struct {
	SecretRef ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (ProjectConfigSpecWebhookReceiversGithubPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithubPatch)(nil)).Elem()
}

func (i ProjectConfigSpecWebhookReceiversGithubPatchArgs) ToProjectConfigSpecWebhookReceiversGithubPatchOutput() ProjectConfigSpecWebhookReceiversGithubPatchOutput {
	return i.ToProjectConfigSpecWebhookReceiversGithubPatchOutputWithContext(context.Background())
}

func (i ProjectConfigSpecWebhookReceiversGithubPatchArgs) ToProjectConfigSpecWebhookReceiversGithubPatchOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversGithubPatchOutput)
}

func (i ProjectConfigSpecWebhookReceiversGithubPatchArgs) ToProjectConfigSpecWebhookReceiversGithubPatchPtrOutput() ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput {
	return i.ToProjectConfigSpecWebhookReceiversGithubPatchPtrOutputWithContext(context.Background())
}

func (i ProjectConfigSpecWebhookReceiversGithubPatchArgs) ToProjectConfigSpecWebhookReceiversGithubPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversGithubPatchOutput).ToProjectConfigSpecWebhookReceiversGithubPatchPtrOutputWithContext(ctx)
}

// ProjectConfigSpecWebhookReceiversGithubPatchPtrInput is an input type that accepts ProjectConfigSpecWebhookReceiversGithubPatchArgs, ProjectConfigSpecWebhookReceiversGithubPatchPtr and ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput values.
// You can construct a concrete instance of `ProjectConfigSpecWebhookReceiversGithubPatchPtrInput` via:
//
//	        ProjectConfigSpecWebhookReceiversGithubPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectConfigSpecWebhookReceiversGithubPatchPtrInput interface {
	pulumi.Input

	ToProjectConfigSpecWebhookReceiversGithubPatchPtrOutput() ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput
	ToProjectConfigSpecWebhookReceiversGithubPatchPtrOutputWithContext(context.Context) ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput
}

type projectConfigSpecWebhookReceiversGithubPatchPtrType ProjectConfigSpecWebhookReceiversGithubPatchArgs

func ProjectConfigSpecWebhookReceiversGithubPatchPtr(v *ProjectConfigSpecWebhookReceiversGithubPatchArgs) ProjectConfigSpecWebhookReceiversGithubPatchPtrInput {
	return (*projectConfigSpecWebhookReceiversGithubPatchPtrType)(v)
}

func (*projectConfigSpecWebhookReceiversGithubPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpecWebhookReceiversGithubPatch)(nil)).Elem()
}

func (i *projectConfigSpecWebhookReceiversGithubPatchPtrType) ToProjectConfigSpecWebhookReceiversGithubPatchPtrOutput() ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput {
	return i.ToProjectConfigSpecWebhookReceiversGithubPatchPtrOutputWithContext(context.Background())
}

func (i *projectConfigSpecWebhookReceiversGithubPatchPtrType) ToProjectConfigSpecWebhookReceiversGithubPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput)
}

// GitHub contains the configuration for a webhook receiver that is compatible with
// GitHub payloads.
type ProjectConfigSpecWebhookReceiversGithubPatchOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecWebhookReceiversGithubPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithubPatch)(nil)).Elem()
}

func (o ProjectConfigSpecWebhookReceiversGithubPatchOutput) ToProjectConfigSpecWebhookReceiversGithubPatchOutput() ProjectConfigSpecWebhookReceiversGithubPatchOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubPatchOutput) ToProjectConfigSpecWebhookReceiversGithubPatchOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubPatchOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubPatchOutput) ToProjectConfigSpecWebhookReceiversGithubPatchPtrOutput() ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput {
	return o.ToProjectConfigSpecWebhookReceiversGithubPatchPtrOutputWithContext(context.Background())
}

func (o ProjectConfigSpecWebhookReceiversGithubPatchOutput) ToProjectConfigSpecWebhookReceiversGithubPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectConfigSpecWebhookReceiversGithubPatch) *ProjectConfigSpecWebhookReceiversGithubPatch {
		return &v
	}).(ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput)
}

func (o ProjectConfigSpecWebhookReceiversGithubPatchOutput) SecretRef() ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecWebhookReceiversGithubPatch) *ProjectConfigSpecWebhookReceiversGithubSecretRefPatch {
		return v.SecretRef
	}).(ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput)
}

type ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpecWebhookReceiversGithubPatch)(nil)).Elem()
}

func (o ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput) ToProjectConfigSpecWebhookReceiversGithubPatchPtrOutput() ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput) ToProjectConfigSpecWebhookReceiversGithubPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput) Elem() ProjectConfigSpecWebhookReceiversGithubPatchOutput {
	return o.ApplyT(func(v *ProjectConfigSpecWebhookReceiversGithubPatch) ProjectConfigSpecWebhookReceiversGithubPatch {
		if v != nil {
			return *v
		}
		var ret ProjectConfigSpecWebhookReceiversGithubPatch
		return ret
	}).(ProjectConfigSpecWebhookReceiversGithubPatchOutput)
}

func (o ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput) SecretRef() ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *ProjectConfigSpecWebhookReceiversGithubPatch) *ProjectConfigSpecWebhookReceiversGithubSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput)
}

// SecretRef contains a reference to a Secret in the same namespace as the ProjectConfig.
//
// The Secret is expected to contain a `token` key with the secret token configured for
// in GitHub for the webhook. For more information about this token, please refer to the
// GitHub documentation: https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries
//
// The value of the token key goes in the "Secret" field when registering a GitHub App or webhook in the GitHub UI.
type ProjectConfigSpecWebhookReceiversGithubSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// ProjectConfigSpecWebhookReceiversGithubSecretRefInput is an input type that accepts ProjectConfigSpecWebhookReceiversGithubSecretRefArgs and ProjectConfigSpecWebhookReceiversGithubSecretRefOutput values.
// You can construct a concrete instance of `ProjectConfigSpecWebhookReceiversGithubSecretRefInput` via:
//
//	ProjectConfigSpecWebhookReceiversGithubSecretRefArgs{...}
type ProjectConfigSpecWebhookReceiversGithubSecretRefInput interface {
	pulumi.Input

	ToProjectConfigSpecWebhookReceiversGithubSecretRefOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefOutput
	ToProjectConfigSpecWebhookReceiversGithubSecretRefOutputWithContext(context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefOutput
}

// SecretRef contains a reference to a Secret in the same namespace as the ProjectConfig.
//
// The Secret is expected to contain a `token` key with the secret token configured for
// in GitHub for the webhook. For more information about this token, please refer to the
// GitHub documentation: https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries
//
// The value of the token key goes in the "Secret" field when registering a GitHub App or webhook in the GitHub UI.
type ProjectConfigSpecWebhookReceiversGithubSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProjectConfigSpecWebhookReceiversGithubSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithubSecretRef)(nil)).Elem()
}

func (i ProjectConfigSpecWebhookReceiversGithubSecretRefArgs) ToProjectConfigSpecWebhookReceiversGithubSecretRefOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefOutput {
	return i.ToProjectConfigSpecWebhookReceiversGithubSecretRefOutputWithContext(context.Background())
}

func (i ProjectConfigSpecWebhookReceiversGithubSecretRefArgs) ToProjectConfigSpecWebhookReceiversGithubSecretRefOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversGithubSecretRefOutput)
}

func (i ProjectConfigSpecWebhookReceiversGithubSecretRefArgs) ToProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput {
	return i.ToProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(context.Background())
}

func (i ProjectConfigSpecWebhookReceiversGithubSecretRefArgs) ToProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversGithubSecretRefOutput).ToProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(ctx)
}

// ProjectConfigSpecWebhookReceiversGithubSecretRefPtrInput is an input type that accepts ProjectConfigSpecWebhookReceiversGithubSecretRefArgs, ProjectConfigSpecWebhookReceiversGithubSecretRefPtr and ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput values.
// You can construct a concrete instance of `ProjectConfigSpecWebhookReceiversGithubSecretRefPtrInput` via:
//
//	        ProjectConfigSpecWebhookReceiversGithubSecretRefArgs{...}
//
//	or:
//
//	        nil
type ProjectConfigSpecWebhookReceiversGithubSecretRefPtrInput interface {
	pulumi.Input

	ToProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput
	ToProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput
}

type projectConfigSpecWebhookReceiversGithubSecretRefPtrType ProjectConfigSpecWebhookReceiversGithubSecretRefArgs

func ProjectConfigSpecWebhookReceiversGithubSecretRefPtr(v *ProjectConfigSpecWebhookReceiversGithubSecretRefArgs) ProjectConfigSpecWebhookReceiversGithubSecretRefPtrInput {
	return (*projectConfigSpecWebhookReceiversGithubSecretRefPtrType)(v)
}

func (*projectConfigSpecWebhookReceiversGithubSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpecWebhookReceiversGithubSecretRef)(nil)).Elem()
}

func (i *projectConfigSpecWebhookReceiversGithubSecretRefPtrType) ToProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput {
	return i.ToProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(context.Background())
}

func (i *projectConfigSpecWebhookReceiversGithubSecretRefPtrType) ToProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput)
}

// SecretRef contains a reference to a Secret in the same namespace as the ProjectConfig.
//
// The Secret is expected to contain a `token` key with the secret token configured for
// in GitHub for the webhook. For more information about this token, please refer to the
// GitHub documentation: https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries
//
// The value of the token key goes in the "Secret" field when registering a GitHub App or webhook in the GitHub UI.
type ProjectConfigSpecWebhookReceiversGithubSecretRefOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecWebhookReceiversGithubSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithubSecretRef)(nil)).Elem()
}

func (o ProjectConfigSpecWebhookReceiversGithubSecretRefOutput) ToProjectConfigSpecWebhookReceiversGithubSecretRefOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubSecretRefOutput) ToProjectConfigSpecWebhookReceiversGithubSecretRefOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubSecretRefOutput) ToProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput {
	return o.ToProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(context.Background())
}

func (o ProjectConfigSpecWebhookReceiversGithubSecretRefOutput) ToProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectConfigSpecWebhookReceiversGithubSecretRef) *ProjectConfigSpecWebhookReceiversGithubSecretRef {
		return &v
	}).(ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ProjectConfigSpecWebhookReceiversGithubSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecWebhookReceiversGithubSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpecWebhookReceiversGithubSecretRef)(nil)).Elem()
}

func (o ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput) ToProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput) ToProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput) Elem() ProjectConfigSpecWebhookReceiversGithubSecretRefOutput {
	return o.ApplyT(func(v *ProjectConfigSpecWebhookReceiversGithubSecretRef) ProjectConfigSpecWebhookReceiversGithubSecretRef {
		if v != nil {
			return *v
		}
		var ret ProjectConfigSpecWebhookReceiversGithubSecretRef
		return ret
	}).(ProjectConfigSpecWebhookReceiversGithubSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectConfigSpecWebhookReceiversGithubSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// SecretRef contains a reference to a Secret in the same namespace as the ProjectConfig.
//
// The Secret is expected to contain a `token` key with the secret token configured for
// in GitHub for the webhook. For more information about this token, please refer to the
// GitHub documentation: https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries
//
// The value of the token key goes in the "Secret" field when registering a GitHub App or webhook in the GitHub UI.
type ProjectConfigSpecWebhookReceiversGithubSecretRefPatch struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// ProjectConfigSpecWebhookReceiversGithubSecretRefPatchInput is an input type that accepts ProjectConfigSpecWebhookReceiversGithubSecretRefPatchArgs and ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput values.
// You can construct a concrete instance of `ProjectConfigSpecWebhookReceiversGithubSecretRefPatchInput` via:
//
//	ProjectConfigSpecWebhookReceiversGithubSecretRefPatchArgs{...}
type ProjectConfigSpecWebhookReceiversGithubSecretRefPatchInput interface {
	pulumi.Input

	ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput
	ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutputWithContext(context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput
}

// SecretRef contains a reference to a Secret in the same namespace as the ProjectConfig.
//
// The Secret is expected to contain a `token` key with the secret token configured for
// in GitHub for the webhook. For more information about this token, please refer to the
// GitHub documentation: https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries
//
// The value of the token key goes in the "Secret" field when registering a GitHub App or webhook in the GitHub UI.
type ProjectConfigSpecWebhookReceiversGithubSecretRefPatchArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProjectConfigSpecWebhookReceiversGithubSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithubSecretRefPatch)(nil)).Elem()
}

func (i ProjectConfigSpecWebhookReceiversGithubSecretRefPatchArgs) ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput {
	return i.ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutputWithContext(context.Background())
}

func (i ProjectConfigSpecWebhookReceiversGithubSecretRefPatchArgs) ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput)
}

func (i ProjectConfigSpecWebhookReceiversGithubSecretRefPatchArgs) ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return i.ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i ProjectConfigSpecWebhookReceiversGithubSecretRefPatchArgs) ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput).ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(ctx)
}

// ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrInput is an input type that accepts ProjectConfigSpecWebhookReceiversGithubSecretRefPatchArgs, ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtr and ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrInput` via:
//
//	        ProjectConfigSpecWebhookReceiversGithubSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrInput interface {
	pulumi.Input

	ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput
	ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput
}

type projectConfigSpecWebhookReceiversGithubSecretRefPatchPtrType ProjectConfigSpecWebhookReceiversGithubSecretRefPatchArgs

func ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtr(v *ProjectConfigSpecWebhookReceiversGithubSecretRefPatchArgs) ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrInput {
	return (*projectConfigSpecWebhookReceiversGithubSecretRefPatchPtrType)(v)
}

func (*projectConfigSpecWebhookReceiversGithubSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpecWebhookReceiversGithubSecretRefPatch)(nil)).Elem()
}

func (i *projectConfigSpecWebhookReceiversGithubSecretRefPatchPtrType) ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return i.ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *projectConfigSpecWebhookReceiversGithubSecretRefPatchPtrType) ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput)
}

// SecretRef contains a reference to a Secret in the same namespace as the ProjectConfig.
//
// The Secret is expected to contain a `token` key with the secret token configured for
// in GitHub for the webhook. For more information about this token, please refer to the
// GitHub documentation: https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries
//
// The value of the token key goes in the "Secret" field when registering a GitHub App or webhook in the GitHub UI.
type ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithubSecretRefPatch)(nil)).Elem()
}

func (o ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput) ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput) ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput) ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return o.ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput) ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectConfigSpecWebhookReceiversGithubSecretRefPatch) *ProjectConfigSpecWebhookReceiversGithubSecretRefPatch {
		return &v
	}).(ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecWebhookReceiversGithubSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigSpecWebhookReceiversGithubSecretRefPatch)(nil)).Elem()
}

func (o ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput) ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput() ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput) ToProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput) Elem() ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput {
	return o.ApplyT(func(v *ProjectConfigSpecWebhookReceiversGithubSecretRefPatch) ProjectConfigSpecWebhookReceiversGithubSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret ProjectConfigSpecWebhookReceiversGithubSecretRefPatch
		return ret
	}).(ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectConfigSpecWebhookReceiversGithubSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// WebhookReceiverConfig describes the configuration for a single webhook
// receiver.
type ProjectConfigSpecWebhookReceiversPatch struct {
	Github *ProjectConfigSpecWebhookReceiversGithubPatch `pulumi:"github"`
	// Name is the name of the webhook receiver.
	Name *string `pulumi:"name"`
}

// ProjectConfigSpecWebhookReceiversPatchInput is an input type that accepts ProjectConfigSpecWebhookReceiversPatchArgs and ProjectConfigSpecWebhookReceiversPatchOutput values.
// You can construct a concrete instance of `ProjectConfigSpecWebhookReceiversPatchInput` via:
//
//	ProjectConfigSpecWebhookReceiversPatchArgs{...}
type ProjectConfigSpecWebhookReceiversPatchInput interface {
	pulumi.Input

	ToProjectConfigSpecWebhookReceiversPatchOutput() ProjectConfigSpecWebhookReceiversPatchOutput
	ToProjectConfigSpecWebhookReceiversPatchOutputWithContext(context.Context) ProjectConfigSpecWebhookReceiversPatchOutput
}

// WebhookReceiverConfig describes the configuration for a single webhook
// receiver.
type ProjectConfigSpecWebhookReceiversPatchArgs struct {
	Github ProjectConfigSpecWebhookReceiversGithubPatchPtrInput `pulumi:"github"`
	// Name is the name of the webhook receiver.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProjectConfigSpecWebhookReceiversPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecWebhookReceiversPatch)(nil)).Elem()
}

func (i ProjectConfigSpecWebhookReceiversPatchArgs) ToProjectConfigSpecWebhookReceiversPatchOutput() ProjectConfigSpecWebhookReceiversPatchOutput {
	return i.ToProjectConfigSpecWebhookReceiversPatchOutputWithContext(context.Background())
}

func (i ProjectConfigSpecWebhookReceiversPatchArgs) ToProjectConfigSpecWebhookReceiversPatchOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversPatchOutput)
}

// ProjectConfigSpecWebhookReceiversPatchArrayInput is an input type that accepts ProjectConfigSpecWebhookReceiversPatchArray and ProjectConfigSpecWebhookReceiversPatchArrayOutput values.
// You can construct a concrete instance of `ProjectConfigSpecWebhookReceiversPatchArrayInput` via:
//
//	ProjectConfigSpecWebhookReceiversPatchArray{ ProjectConfigSpecWebhookReceiversPatchArgs{...} }
type ProjectConfigSpecWebhookReceiversPatchArrayInput interface {
	pulumi.Input

	ToProjectConfigSpecWebhookReceiversPatchArrayOutput() ProjectConfigSpecWebhookReceiversPatchArrayOutput
	ToProjectConfigSpecWebhookReceiversPatchArrayOutputWithContext(context.Context) ProjectConfigSpecWebhookReceiversPatchArrayOutput
}

type ProjectConfigSpecWebhookReceiversPatchArray []ProjectConfigSpecWebhookReceiversPatchInput

func (ProjectConfigSpecWebhookReceiversPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigSpecWebhookReceiversPatch)(nil)).Elem()
}

func (i ProjectConfigSpecWebhookReceiversPatchArray) ToProjectConfigSpecWebhookReceiversPatchArrayOutput() ProjectConfigSpecWebhookReceiversPatchArrayOutput {
	return i.ToProjectConfigSpecWebhookReceiversPatchArrayOutputWithContext(context.Background())
}

func (i ProjectConfigSpecWebhookReceiversPatchArray) ToProjectConfigSpecWebhookReceiversPatchArrayOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigSpecWebhookReceiversPatchArrayOutput)
}

// WebhookReceiverConfig describes the configuration for a single webhook
// receiver.
type ProjectConfigSpecWebhookReceiversPatchOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecWebhookReceiversPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigSpecWebhookReceiversPatch)(nil)).Elem()
}

func (o ProjectConfigSpecWebhookReceiversPatchOutput) ToProjectConfigSpecWebhookReceiversPatchOutput() ProjectConfigSpecWebhookReceiversPatchOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversPatchOutput) ToProjectConfigSpecWebhookReceiversPatchOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversPatchOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversPatchOutput) Github() ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecWebhookReceiversPatch) *ProjectConfigSpecWebhookReceiversGithubPatch {
		return v.Github
	}).(ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput)
}

// Name is the name of the webhook receiver.
func (o ProjectConfigSpecWebhookReceiversPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigSpecWebhookReceiversPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProjectConfigSpecWebhookReceiversPatchArrayOutput struct{ *pulumi.OutputState }

func (ProjectConfigSpecWebhookReceiversPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigSpecWebhookReceiversPatch)(nil)).Elem()
}

func (o ProjectConfigSpecWebhookReceiversPatchArrayOutput) ToProjectConfigSpecWebhookReceiversPatchArrayOutput() ProjectConfigSpecWebhookReceiversPatchArrayOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversPatchArrayOutput) ToProjectConfigSpecWebhookReceiversPatchArrayOutputWithContext(ctx context.Context) ProjectConfigSpecWebhookReceiversPatchArrayOutput {
	return o
}

func (o ProjectConfigSpecWebhookReceiversPatchArrayOutput) Index(i pulumi.IntInput) ProjectConfigSpecWebhookReceiversPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectConfigSpecWebhookReceiversPatch {
		return vs[0].([]ProjectConfigSpecWebhookReceiversPatch)[vs[1].(int)]
	}).(ProjectConfigSpecWebhookReceiversPatchOutput)
}

// Status describes the current status of a ProjectConfig.
type ProjectConfigStatus struct {
	// Conditions contains the last observations of the Project Config's current state.
	Conditions []ProjectConfigStatusConditions `pulumi:"conditions"`
	// WebhookReceivers describes the status of Project-specific webhook receivers.
	WebhookReceivers []ProjectConfigStatusWebhookReceivers `pulumi:"webhookReceivers"`
}

// ProjectConfigStatusInput is an input type that accepts ProjectConfigStatusArgs and ProjectConfigStatusOutput values.
// You can construct a concrete instance of `ProjectConfigStatusInput` via:
//
//	ProjectConfigStatusArgs{...}
type ProjectConfigStatusInput interface {
	pulumi.Input

	ToProjectConfigStatusOutput() ProjectConfigStatusOutput
	ToProjectConfigStatusOutputWithContext(context.Context) ProjectConfigStatusOutput
}

// Status describes the current status of a ProjectConfig.
type ProjectConfigStatusArgs struct {
	// Conditions contains the last observations of the Project Config's current state.
	Conditions ProjectConfigStatusConditionsArrayInput `pulumi:"conditions"`
	// WebhookReceivers describes the status of Project-specific webhook receivers.
	WebhookReceivers ProjectConfigStatusWebhookReceiversArrayInput `pulumi:"webhookReceivers"`
}

func (ProjectConfigStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigStatus)(nil)).Elem()
}

func (i ProjectConfigStatusArgs) ToProjectConfigStatusOutput() ProjectConfigStatusOutput {
	return i.ToProjectConfigStatusOutputWithContext(context.Background())
}

func (i ProjectConfigStatusArgs) ToProjectConfigStatusOutputWithContext(ctx context.Context) ProjectConfigStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigStatusOutput)
}

func (i ProjectConfigStatusArgs) ToProjectConfigStatusPtrOutput() ProjectConfigStatusPtrOutput {
	return i.ToProjectConfigStatusPtrOutputWithContext(context.Background())
}

func (i ProjectConfigStatusArgs) ToProjectConfigStatusPtrOutputWithContext(ctx context.Context) ProjectConfigStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigStatusOutput).ToProjectConfigStatusPtrOutputWithContext(ctx)
}

// ProjectConfigStatusPtrInput is an input type that accepts ProjectConfigStatusArgs, ProjectConfigStatusPtr and ProjectConfigStatusPtrOutput values.
// You can construct a concrete instance of `ProjectConfigStatusPtrInput` via:
//
//	        ProjectConfigStatusArgs{...}
//
//	or:
//
//	        nil
type ProjectConfigStatusPtrInput interface {
	pulumi.Input

	ToProjectConfigStatusPtrOutput() ProjectConfigStatusPtrOutput
	ToProjectConfigStatusPtrOutputWithContext(context.Context) ProjectConfigStatusPtrOutput
}

type projectConfigStatusPtrType ProjectConfigStatusArgs

func ProjectConfigStatusPtr(v *ProjectConfigStatusArgs) ProjectConfigStatusPtrInput {
	return (*projectConfigStatusPtrType)(v)
}

func (*projectConfigStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigStatus)(nil)).Elem()
}

func (i *projectConfigStatusPtrType) ToProjectConfigStatusPtrOutput() ProjectConfigStatusPtrOutput {
	return i.ToProjectConfigStatusPtrOutputWithContext(context.Background())
}

func (i *projectConfigStatusPtrType) ToProjectConfigStatusPtrOutputWithContext(ctx context.Context) ProjectConfigStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigStatusPtrOutput)
}

// Status describes the current status of a ProjectConfig.
type ProjectConfigStatusOutput struct{ *pulumi.OutputState }

func (ProjectConfigStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigStatus)(nil)).Elem()
}

func (o ProjectConfigStatusOutput) ToProjectConfigStatusOutput() ProjectConfigStatusOutput {
	return o
}

func (o ProjectConfigStatusOutput) ToProjectConfigStatusOutputWithContext(ctx context.Context) ProjectConfigStatusOutput {
	return o
}

func (o ProjectConfigStatusOutput) ToProjectConfigStatusPtrOutput() ProjectConfigStatusPtrOutput {
	return o.ToProjectConfigStatusPtrOutputWithContext(context.Background())
}

func (o ProjectConfigStatusOutput) ToProjectConfigStatusPtrOutputWithContext(ctx context.Context) ProjectConfigStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectConfigStatus) *ProjectConfigStatus {
		return &v
	}).(ProjectConfigStatusPtrOutput)
}

// Conditions contains the last observations of the Project Config's current state.
func (o ProjectConfigStatusOutput) Conditions() ProjectConfigStatusConditionsArrayOutput {
	return o.ApplyT(func(v ProjectConfigStatus) []ProjectConfigStatusConditions { return v.Conditions }).(ProjectConfigStatusConditionsArrayOutput)
}

// WebhookReceivers describes the status of Project-specific webhook receivers.
func (o ProjectConfigStatusOutput) WebhookReceivers() ProjectConfigStatusWebhookReceiversArrayOutput {
	return o.ApplyT(func(v ProjectConfigStatus) []ProjectConfigStatusWebhookReceivers { return v.WebhookReceivers }).(ProjectConfigStatusWebhookReceiversArrayOutput)
}

type ProjectConfigStatusPtrOutput struct{ *pulumi.OutputState }

func (ProjectConfigStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigStatus)(nil)).Elem()
}

func (o ProjectConfigStatusPtrOutput) ToProjectConfigStatusPtrOutput() ProjectConfigStatusPtrOutput {
	return o
}

func (o ProjectConfigStatusPtrOutput) ToProjectConfigStatusPtrOutputWithContext(ctx context.Context) ProjectConfigStatusPtrOutput {
	return o
}

func (o ProjectConfigStatusPtrOutput) Elem() ProjectConfigStatusOutput {
	return o.ApplyT(func(v *ProjectConfigStatus) ProjectConfigStatus {
		if v != nil {
			return *v
		}
		var ret ProjectConfigStatus
		return ret
	}).(ProjectConfigStatusOutput)
}

// Conditions contains the last observations of the Project Config's current state.
func (o ProjectConfigStatusPtrOutput) Conditions() ProjectConfigStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ProjectConfigStatus) []ProjectConfigStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ProjectConfigStatusConditionsArrayOutput)
}

// WebhookReceivers describes the status of Project-specific webhook receivers.
func (o ProjectConfigStatusPtrOutput) WebhookReceivers() ProjectConfigStatusWebhookReceiversArrayOutput {
	return o.ApplyT(func(v *ProjectConfigStatus) []ProjectConfigStatusWebhookReceivers {
		if v == nil {
			return nil
		}
		return v.WebhookReceivers
	}).(ProjectConfigStatusWebhookReceiversArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProjectConfigStatusConditions struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message *string `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason *string `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status *string `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type *string `pulumi:"type"`
}

// ProjectConfigStatusConditionsInput is an input type that accepts ProjectConfigStatusConditionsArgs and ProjectConfigStatusConditionsOutput values.
// You can construct a concrete instance of `ProjectConfigStatusConditionsInput` via:
//
//	ProjectConfigStatusConditionsArgs{...}
type ProjectConfigStatusConditionsInput interface {
	pulumi.Input

	ToProjectConfigStatusConditionsOutput() ProjectConfigStatusConditionsOutput
	ToProjectConfigStatusConditionsOutputWithContext(context.Context) ProjectConfigStatusConditionsOutput
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProjectConfigStatusConditionsArgs struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ProjectConfigStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigStatusConditions)(nil)).Elem()
}

func (i ProjectConfigStatusConditionsArgs) ToProjectConfigStatusConditionsOutput() ProjectConfigStatusConditionsOutput {
	return i.ToProjectConfigStatusConditionsOutputWithContext(context.Background())
}

func (i ProjectConfigStatusConditionsArgs) ToProjectConfigStatusConditionsOutputWithContext(ctx context.Context) ProjectConfigStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigStatusConditionsOutput)
}

// ProjectConfigStatusConditionsArrayInput is an input type that accepts ProjectConfigStatusConditionsArray and ProjectConfigStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ProjectConfigStatusConditionsArrayInput` via:
//
//	ProjectConfigStatusConditionsArray{ ProjectConfigStatusConditionsArgs{...} }
type ProjectConfigStatusConditionsArrayInput interface {
	pulumi.Input

	ToProjectConfigStatusConditionsArrayOutput() ProjectConfigStatusConditionsArrayOutput
	ToProjectConfigStatusConditionsArrayOutputWithContext(context.Context) ProjectConfigStatusConditionsArrayOutput
}

type ProjectConfigStatusConditionsArray []ProjectConfigStatusConditionsInput

func (ProjectConfigStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigStatusConditions)(nil)).Elem()
}

func (i ProjectConfigStatusConditionsArray) ToProjectConfigStatusConditionsArrayOutput() ProjectConfigStatusConditionsArrayOutput {
	return i.ToProjectConfigStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ProjectConfigStatusConditionsArray) ToProjectConfigStatusConditionsArrayOutputWithContext(ctx context.Context) ProjectConfigStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigStatusConditionsArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProjectConfigStatusConditionsOutput struct{ *pulumi.OutputState }

func (ProjectConfigStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigStatusConditions)(nil)).Elem()
}

func (o ProjectConfigStatusConditionsOutput) ToProjectConfigStatusConditionsOutput() ProjectConfigStatusConditionsOutput {
	return o
}

func (o ProjectConfigStatusConditionsOutput) ToProjectConfigStatusConditionsOutputWithContext(ctx context.Context) ProjectConfigStatusConditionsOutput {
	return o
}

// lastTransitionTime is the last time the condition transitioned from one status to another.
// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
func (o ProjectConfigStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human readable message indicating details about the transition.
// This may be an empty string.
func (o ProjectConfigStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// observedGeneration represents the .metadata.generation that the condition was set based upon.
// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the instance.
func (o ProjectConfigStatusConditionsOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusConditions) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// reason contains a programmatic identifier indicating the reason for the condition's last transition.
// Producers of specific condition types may define expected values and meanings for this field,
// and whether the values are considered a guaranteed API.
// The value should be a CamelCase string.
// This field may not be empty.
func (o ProjectConfigStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status of the condition, one of True, False, Unknown.
func (o ProjectConfigStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of condition in CamelCase or in foo.example.com/CamelCase.
func (o ProjectConfigStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProjectConfigStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ProjectConfigStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigStatusConditions)(nil)).Elem()
}

func (o ProjectConfigStatusConditionsArrayOutput) ToProjectConfigStatusConditionsArrayOutput() ProjectConfigStatusConditionsArrayOutput {
	return o
}

func (o ProjectConfigStatusConditionsArrayOutput) ToProjectConfigStatusConditionsArrayOutputWithContext(ctx context.Context) ProjectConfigStatusConditionsArrayOutput {
	return o
}

func (o ProjectConfigStatusConditionsArrayOutput) Index(i pulumi.IntInput) ProjectConfigStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectConfigStatusConditions {
		return vs[0].([]ProjectConfigStatusConditions)[vs[1].(int)]
	}).(ProjectConfigStatusConditionsOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProjectConfigStatusConditionsPatch struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message *string `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason *string `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status *string `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type *string `pulumi:"type"`
}

// ProjectConfigStatusConditionsPatchInput is an input type that accepts ProjectConfigStatusConditionsPatchArgs and ProjectConfigStatusConditionsPatchOutput values.
// You can construct a concrete instance of `ProjectConfigStatusConditionsPatchInput` via:
//
//	ProjectConfigStatusConditionsPatchArgs{...}
type ProjectConfigStatusConditionsPatchInput interface {
	pulumi.Input

	ToProjectConfigStatusConditionsPatchOutput() ProjectConfigStatusConditionsPatchOutput
	ToProjectConfigStatusConditionsPatchOutputWithContext(context.Context) ProjectConfigStatusConditionsPatchOutput
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProjectConfigStatusConditionsPatchArgs struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ProjectConfigStatusConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigStatusConditionsPatch)(nil)).Elem()
}

func (i ProjectConfigStatusConditionsPatchArgs) ToProjectConfigStatusConditionsPatchOutput() ProjectConfigStatusConditionsPatchOutput {
	return i.ToProjectConfigStatusConditionsPatchOutputWithContext(context.Background())
}

func (i ProjectConfigStatusConditionsPatchArgs) ToProjectConfigStatusConditionsPatchOutputWithContext(ctx context.Context) ProjectConfigStatusConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigStatusConditionsPatchOutput)
}

// ProjectConfigStatusConditionsPatchArrayInput is an input type that accepts ProjectConfigStatusConditionsPatchArray and ProjectConfigStatusConditionsPatchArrayOutput values.
// You can construct a concrete instance of `ProjectConfigStatusConditionsPatchArrayInput` via:
//
//	ProjectConfigStatusConditionsPatchArray{ ProjectConfigStatusConditionsPatchArgs{...} }
type ProjectConfigStatusConditionsPatchArrayInput interface {
	pulumi.Input

	ToProjectConfigStatusConditionsPatchArrayOutput() ProjectConfigStatusConditionsPatchArrayOutput
	ToProjectConfigStatusConditionsPatchArrayOutputWithContext(context.Context) ProjectConfigStatusConditionsPatchArrayOutput
}

type ProjectConfigStatusConditionsPatchArray []ProjectConfigStatusConditionsPatchInput

func (ProjectConfigStatusConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigStatusConditionsPatch)(nil)).Elem()
}

func (i ProjectConfigStatusConditionsPatchArray) ToProjectConfigStatusConditionsPatchArrayOutput() ProjectConfigStatusConditionsPatchArrayOutput {
	return i.ToProjectConfigStatusConditionsPatchArrayOutputWithContext(context.Background())
}

func (i ProjectConfigStatusConditionsPatchArray) ToProjectConfigStatusConditionsPatchArrayOutputWithContext(ctx context.Context) ProjectConfigStatusConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigStatusConditionsPatchArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProjectConfigStatusConditionsPatchOutput struct{ *pulumi.OutputState }

func (ProjectConfigStatusConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigStatusConditionsPatch)(nil)).Elem()
}

func (o ProjectConfigStatusConditionsPatchOutput) ToProjectConfigStatusConditionsPatchOutput() ProjectConfigStatusConditionsPatchOutput {
	return o
}

func (o ProjectConfigStatusConditionsPatchOutput) ToProjectConfigStatusConditionsPatchOutputWithContext(ctx context.Context) ProjectConfigStatusConditionsPatchOutput {
	return o
}

// lastTransitionTime is the last time the condition transitioned from one status to another.
// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
func (o ProjectConfigStatusConditionsPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusConditionsPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human readable message indicating details about the transition.
// This may be an empty string.
func (o ProjectConfigStatusConditionsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusConditionsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// observedGeneration represents the .metadata.generation that the condition was set based upon.
// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the instance.
func (o ProjectConfigStatusConditionsPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusConditionsPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// reason contains a programmatic identifier indicating the reason for the condition's last transition.
// Producers of specific condition types may define expected values and meanings for this field,
// and whether the values are considered a guaranteed API.
// The value should be a CamelCase string.
// This field may not be empty.
func (o ProjectConfigStatusConditionsPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusConditionsPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status of the condition, one of True, False, Unknown.
func (o ProjectConfigStatusConditionsPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusConditionsPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of condition in CamelCase or in foo.example.com/CamelCase.
func (o ProjectConfigStatusConditionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusConditionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProjectConfigStatusConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (ProjectConfigStatusConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigStatusConditionsPatch)(nil)).Elem()
}

func (o ProjectConfigStatusConditionsPatchArrayOutput) ToProjectConfigStatusConditionsPatchArrayOutput() ProjectConfigStatusConditionsPatchArrayOutput {
	return o
}

func (o ProjectConfigStatusConditionsPatchArrayOutput) ToProjectConfigStatusConditionsPatchArrayOutputWithContext(ctx context.Context) ProjectConfigStatusConditionsPatchArrayOutput {
	return o
}

func (o ProjectConfigStatusConditionsPatchArrayOutput) Index(i pulumi.IntInput) ProjectConfigStatusConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectConfigStatusConditionsPatch {
		return vs[0].([]ProjectConfigStatusConditionsPatch)[vs[1].(int)]
	}).(ProjectConfigStatusConditionsPatchOutput)
}

// Status describes the current status of a ProjectConfig.
type ProjectConfigStatusPatch struct {
	// Conditions contains the last observations of the Project Config's current state.
	Conditions []ProjectConfigStatusConditionsPatch `pulumi:"conditions"`
	// WebhookReceivers describes the status of Project-specific webhook receivers.
	WebhookReceivers []ProjectConfigStatusWebhookReceiversPatch `pulumi:"webhookReceivers"`
}

// ProjectConfigStatusPatchInput is an input type that accepts ProjectConfigStatusPatchArgs and ProjectConfigStatusPatchOutput values.
// You can construct a concrete instance of `ProjectConfigStatusPatchInput` via:
//
//	ProjectConfigStatusPatchArgs{...}
type ProjectConfigStatusPatchInput interface {
	pulumi.Input

	ToProjectConfigStatusPatchOutput() ProjectConfigStatusPatchOutput
	ToProjectConfigStatusPatchOutputWithContext(context.Context) ProjectConfigStatusPatchOutput
}

// Status describes the current status of a ProjectConfig.
type ProjectConfigStatusPatchArgs struct {
	// Conditions contains the last observations of the Project Config's current state.
	Conditions ProjectConfigStatusConditionsPatchArrayInput `pulumi:"conditions"`
	// WebhookReceivers describes the status of Project-specific webhook receivers.
	WebhookReceivers ProjectConfigStatusWebhookReceiversPatchArrayInput `pulumi:"webhookReceivers"`
}

func (ProjectConfigStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigStatusPatch)(nil)).Elem()
}

func (i ProjectConfigStatusPatchArgs) ToProjectConfigStatusPatchOutput() ProjectConfigStatusPatchOutput {
	return i.ToProjectConfigStatusPatchOutputWithContext(context.Background())
}

func (i ProjectConfigStatusPatchArgs) ToProjectConfigStatusPatchOutputWithContext(ctx context.Context) ProjectConfigStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigStatusPatchOutput)
}

func (i ProjectConfigStatusPatchArgs) ToProjectConfigStatusPatchPtrOutput() ProjectConfigStatusPatchPtrOutput {
	return i.ToProjectConfigStatusPatchPtrOutputWithContext(context.Background())
}

func (i ProjectConfigStatusPatchArgs) ToProjectConfigStatusPatchPtrOutputWithContext(ctx context.Context) ProjectConfigStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigStatusPatchOutput).ToProjectConfigStatusPatchPtrOutputWithContext(ctx)
}

// ProjectConfigStatusPatchPtrInput is an input type that accepts ProjectConfigStatusPatchArgs, ProjectConfigStatusPatchPtr and ProjectConfigStatusPatchPtrOutput values.
// You can construct a concrete instance of `ProjectConfigStatusPatchPtrInput` via:
//
//	        ProjectConfigStatusPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectConfigStatusPatchPtrInput interface {
	pulumi.Input

	ToProjectConfigStatusPatchPtrOutput() ProjectConfigStatusPatchPtrOutput
	ToProjectConfigStatusPatchPtrOutputWithContext(context.Context) ProjectConfigStatusPatchPtrOutput
}

type projectConfigStatusPatchPtrType ProjectConfigStatusPatchArgs

func ProjectConfigStatusPatchPtr(v *ProjectConfigStatusPatchArgs) ProjectConfigStatusPatchPtrInput {
	return (*projectConfigStatusPatchPtrType)(v)
}

func (*projectConfigStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigStatusPatch)(nil)).Elem()
}

func (i *projectConfigStatusPatchPtrType) ToProjectConfigStatusPatchPtrOutput() ProjectConfigStatusPatchPtrOutput {
	return i.ToProjectConfigStatusPatchPtrOutputWithContext(context.Background())
}

func (i *projectConfigStatusPatchPtrType) ToProjectConfigStatusPatchPtrOutputWithContext(ctx context.Context) ProjectConfigStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigStatusPatchPtrOutput)
}

// Status describes the current status of a ProjectConfig.
type ProjectConfigStatusPatchOutput struct{ *pulumi.OutputState }

func (ProjectConfigStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigStatusPatch)(nil)).Elem()
}

func (o ProjectConfigStatusPatchOutput) ToProjectConfigStatusPatchOutput() ProjectConfigStatusPatchOutput {
	return o
}

func (o ProjectConfigStatusPatchOutput) ToProjectConfigStatusPatchOutputWithContext(ctx context.Context) ProjectConfigStatusPatchOutput {
	return o
}

func (o ProjectConfigStatusPatchOutput) ToProjectConfigStatusPatchPtrOutput() ProjectConfigStatusPatchPtrOutput {
	return o.ToProjectConfigStatusPatchPtrOutputWithContext(context.Background())
}

func (o ProjectConfigStatusPatchOutput) ToProjectConfigStatusPatchPtrOutputWithContext(ctx context.Context) ProjectConfigStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectConfigStatusPatch) *ProjectConfigStatusPatch {
		return &v
	}).(ProjectConfigStatusPatchPtrOutput)
}

// Conditions contains the last observations of the Project Config's current state.
func (o ProjectConfigStatusPatchOutput) Conditions() ProjectConfigStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v ProjectConfigStatusPatch) []ProjectConfigStatusConditionsPatch { return v.Conditions }).(ProjectConfigStatusConditionsPatchArrayOutput)
}

// WebhookReceivers describes the status of Project-specific webhook receivers.
func (o ProjectConfigStatusPatchOutput) WebhookReceivers() ProjectConfigStatusWebhookReceiversPatchArrayOutput {
	return o.ApplyT(func(v ProjectConfigStatusPatch) []ProjectConfigStatusWebhookReceiversPatch { return v.WebhookReceivers }).(ProjectConfigStatusWebhookReceiversPatchArrayOutput)
}

type ProjectConfigStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectConfigStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConfigStatusPatch)(nil)).Elem()
}

func (o ProjectConfigStatusPatchPtrOutput) ToProjectConfigStatusPatchPtrOutput() ProjectConfigStatusPatchPtrOutput {
	return o
}

func (o ProjectConfigStatusPatchPtrOutput) ToProjectConfigStatusPatchPtrOutputWithContext(ctx context.Context) ProjectConfigStatusPatchPtrOutput {
	return o
}

func (o ProjectConfigStatusPatchPtrOutput) Elem() ProjectConfigStatusPatchOutput {
	return o.ApplyT(func(v *ProjectConfigStatusPatch) ProjectConfigStatusPatch {
		if v != nil {
			return *v
		}
		var ret ProjectConfigStatusPatch
		return ret
	}).(ProjectConfigStatusPatchOutput)
}

// Conditions contains the last observations of the Project Config's current state.
func (o ProjectConfigStatusPatchPtrOutput) Conditions() ProjectConfigStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v *ProjectConfigStatusPatch) []ProjectConfigStatusConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ProjectConfigStatusConditionsPatchArrayOutput)
}

// WebhookReceivers describes the status of Project-specific webhook receivers.
func (o ProjectConfigStatusPatchPtrOutput) WebhookReceivers() ProjectConfigStatusWebhookReceiversPatchArrayOutput {
	return o.ApplyT(func(v *ProjectConfigStatusPatch) []ProjectConfigStatusWebhookReceiversPatch {
		if v == nil {
			return nil
		}
		return v.WebhookReceivers
	}).(ProjectConfigStatusWebhookReceiversPatchArrayOutput)
}

// WebhookReceiver describes a path used to receive webhook events.
type ProjectConfigStatusWebhookReceivers struct {
	// Name is the name of the webhook receiver.
	Name *string `pulumi:"name"`
	// Path is the path to the receiver's webhook endpoint.
	Path *string `pulumi:"path"`
	// URL includes the full address of the receiver's webhook endpoint.
	Url *string `pulumi:"url"`
}

// ProjectConfigStatusWebhookReceiversInput is an input type that accepts ProjectConfigStatusWebhookReceiversArgs and ProjectConfigStatusWebhookReceiversOutput values.
// You can construct a concrete instance of `ProjectConfigStatusWebhookReceiversInput` via:
//
//	ProjectConfigStatusWebhookReceiversArgs{...}
type ProjectConfigStatusWebhookReceiversInput interface {
	pulumi.Input

	ToProjectConfigStatusWebhookReceiversOutput() ProjectConfigStatusWebhookReceiversOutput
	ToProjectConfigStatusWebhookReceiversOutputWithContext(context.Context) ProjectConfigStatusWebhookReceiversOutput
}

// WebhookReceiver describes a path used to receive webhook events.
type ProjectConfigStatusWebhookReceiversArgs struct {
	// Name is the name of the webhook receiver.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path is the path to the receiver's webhook endpoint.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// URL includes the full address of the receiver's webhook endpoint.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ProjectConfigStatusWebhookReceiversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigStatusWebhookReceivers)(nil)).Elem()
}

func (i ProjectConfigStatusWebhookReceiversArgs) ToProjectConfigStatusWebhookReceiversOutput() ProjectConfigStatusWebhookReceiversOutput {
	return i.ToProjectConfigStatusWebhookReceiversOutputWithContext(context.Background())
}

func (i ProjectConfigStatusWebhookReceiversArgs) ToProjectConfigStatusWebhookReceiversOutputWithContext(ctx context.Context) ProjectConfigStatusWebhookReceiversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigStatusWebhookReceiversOutput)
}

// ProjectConfigStatusWebhookReceiversArrayInput is an input type that accepts ProjectConfigStatusWebhookReceiversArray and ProjectConfigStatusWebhookReceiversArrayOutput values.
// You can construct a concrete instance of `ProjectConfigStatusWebhookReceiversArrayInput` via:
//
//	ProjectConfigStatusWebhookReceiversArray{ ProjectConfigStatusWebhookReceiversArgs{...} }
type ProjectConfigStatusWebhookReceiversArrayInput interface {
	pulumi.Input

	ToProjectConfigStatusWebhookReceiversArrayOutput() ProjectConfigStatusWebhookReceiversArrayOutput
	ToProjectConfigStatusWebhookReceiversArrayOutputWithContext(context.Context) ProjectConfigStatusWebhookReceiversArrayOutput
}

type ProjectConfigStatusWebhookReceiversArray []ProjectConfigStatusWebhookReceiversInput

func (ProjectConfigStatusWebhookReceiversArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigStatusWebhookReceivers)(nil)).Elem()
}

func (i ProjectConfigStatusWebhookReceiversArray) ToProjectConfigStatusWebhookReceiversArrayOutput() ProjectConfigStatusWebhookReceiversArrayOutput {
	return i.ToProjectConfigStatusWebhookReceiversArrayOutputWithContext(context.Background())
}

func (i ProjectConfigStatusWebhookReceiversArray) ToProjectConfigStatusWebhookReceiversArrayOutputWithContext(ctx context.Context) ProjectConfigStatusWebhookReceiversArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigStatusWebhookReceiversArrayOutput)
}

// WebhookReceiver describes a path used to receive webhook events.
type ProjectConfigStatusWebhookReceiversOutput struct{ *pulumi.OutputState }

func (ProjectConfigStatusWebhookReceiversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigStatusWebhookReceivers)(nil)).Elem()
}

func (o ProjectConfigStatusWebhookReceiversOutput) ToProjectConfigStatusWebhookReceiversOutput() ProjectConfigStatusWebhookReceiversOutput {
	return o
}

func (o ProjectConfigStatusWebhookReceiversOutput) ToProjectConfigStatusWebhookReceiversOutputWithContext(ctx context.Context) ProjectConfigStatusWebhookReceiversOutput {
	return o
}

// Name is the name of the webhook receiver.
func (o ProjectConfigStatusWebhookReceiversOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusWebhookReceivers) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path is the path to the receiver's webhook endpoint.
func (o ProjectConfigStatusWebhookReceiversOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusWebhookReceivers) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// URL includes the full address of the receiver's webhook endpoint.
func (o ProjectConfigStatusWebhookReceiversOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusWebhookReceivers) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ProjectConfigStatusWebhookReceiversArrayOutput struct{ *pulumi.OutputState }

func (ProjectConfigStatusWebhookReceiversArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigStatusWebhookReceivers)(nil)).Elem()
}

func (o ProjectConfigStatusWebhookReceiversArrayOutput) ToProjectConfigStatusWebhookReceiversArrayOutput() ProjectConfigStatusWebhookReceiversArrayOutput {
	return o
}

func (o ProjectConfigStatusWebhookReceiversArrayOutput) ToProjectConfigStatusWebhookReceiversArrayOutputWithContext(ctx context.Context) ProjectConfigStatusWebhookReceiversArrayOutput {
	return o
}

func (o ProjectConfigStatusWebhookReceiversArrayOutput) Index(i pulumi.IntInput) ProjectConfigStatusWebhookReceiversOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectConfigStatusWebhookReceivers {
		return vs[0].([]ProjectConfigStatusWebhookReceivers)[vs[1].(int)]
	}).(ProjectConfigStatusWebhookReceiversOutput)
}

// WebhookReceiver describes a path used to receive webhook events.
type ProjectConfigStatusWebhookReceiversPatch struct {
	// Name is the name of the webhook receiver.
	Name *string `pulumi:"name"`
	// Path is the path to the receiver's webhook endpoint.
	Path *string `pulumi:"path"`
	// URL includes the full address of the receiver's webhook endpoint.
	Url *string `pulumi:"url"`
}

// ProjectConfigStatusWebhookReceiversPatchInput is an input type that accepts ProjectConfigStatusWebhookReceiversPatchArgs and ProjectConfigStatusWebhookReceiversPatchOutput values.
// You can construct a concrete instance of `ProjectConfigStatusWebhookReceiversPatchInput` via:
//
//	ProjectConfigStatusWebhookReceiversPatchArgs{...}
type ProjectConfigStatusWebhookReceiversPatchInput interface {
	pulumi.Input

	ToProjectConfigStatusWebhookReceiversPatchOutput() ProjectConfigStatusWebhookReceiversPatchOutput
	ToProjectConfigStatusWebhookReceiversPatchOutputWithContext(context.Context) ProjectConfigStatusWebhookReceiversPatchOutput
}

// WebhookReceiver describes a path used to receive webhook events.
type ProjectConfigStatusWebhookReceiversPatchArgs struct {
	// Name is the name of the webhook receiver.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path is the path to the receiver's webhook endpoint.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// URL includes the full address of the receiver's webhook endpoint.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ProjectConfigStatusWebhookReceiversPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigStatusWebhookReceiversPatch)(nil)).Elem()
}

func (i ProjectConfigStatusWebhookReceiversPatchArgs) ToProjectConfigStatusWebhookReceiversPatchOutput() ProjectConfigStatusWebhookReceiversPatchOutput {
	return i.ToProjectConfigStatusWebhookReceiversPatchOutputWithContext(context.Background())
}

func (i ProjectConfigStatusWebhookReceiversPatchArgs) ToProjectConfigStatusWebhookReceiversPatchOutputWithContext(ctx context.Context) ProjectConfigStatusWebhookReceiversPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigStatusWebhookReceiversPatchOutput)
}

// ProjectConfigStatusWebhookReceiversPatchArrayInput is an input type that accepts ProjectConfigStatusWebhookReceiversPatchArray and ProjectConfigStatusWebhookReceiversPatchArrayOutput values.
// You can construct a concrete instance of `ProjectConfigStatusWebhookReceiversPatchArrayInput` via:
//
//	ProjectConfigStatusWebhookReceiversPatchArray{ ProjectConfigStatusWebhookReceiversPatchArgs{...} }
type ProjectConfigStatusWebhookReceiversPatchArrayInput interface {
	pulumi.Input

	ToProjectConfigStatusWebhookReceiversPatchArrayOutput() ProjectConfigStatusWebhookReceiversPatchArrayOutput
	ToProjectConfigStatusWebhookReceiversPatchArrayOutputWithContext(context.Context) ProjectConfigStatusWebhookReceiversPatchArrayOutput
}

type ProjectConfigStatusWebhookReceiversPatchArray []ProjectConfigStatusWebhookReceiversPatchInput

func (ProjectConfigStatusWebhookReceiversPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigStatusWebhookReceiversPatch)(nil)).Elem()
}

func (i ProjectConfigStatusWebhookReceiversPatchArray) ToProjectConfigStatusWebhookReceiversPatchArrayOutput() ProjectConfigStatusWebhookReceiversPatchArrayOutput {
	return i.ToProjectConfigStatusWebhookReceiversPatchArrayOutputWithContext(context.Background())
}

func (i ProjectConfigStatusWebhookReceiversPatchArray) ToProjectConfigStatusWebhookReceiversPatchArrayOutputWithContext(ctx context.Context) ProjectConfigStatusWebhookReceiversPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConfigStatusWebhookReceiversPatchArrayOutput)
}

// WebhookReceiver describes a path used to receive webhook events.
type ProjectConfigStatusWebhookReceiversPatchOutput struct{ *pulumi.OutputState }

func (ProjectConfigStatusWebhookReceiversPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConfigStatusWebhookReceiversPatch)(nil)).Elem()
}

func (o ProjectConfigStatusWebhookReceiversPatchOutput) ToProjectConfigStatusWebhookReceiversPatchOutput() ProjectConfigStatusWebhookReceiversPatchOutput {
	return o
}

func (o ProjectConfigStatusWebhookReceiversPatchOutput) ToProjectConfigStatusWebhookReceiversPatchOutputWithContext(ctx context.Context) ProjectConfigStatusWebhookReceiversPatchOutput {
	return o
}

// Name is the name of the webhook receiver.
func (o ProjectConfigStatusWebhookReceiversPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusWebhookReceiversPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path is the path to the receiver's webhook endpoint.
func (o ProjectConfigStatusWebhookReceiversPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusWebhookReceiversPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// URL includes the full address of the receiver's webhook endpoint.
func (o ProjectConfigStatusWebhookReceiversPatchOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConfigStatusWebhookReceiversPatch) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ProjectConfigStatusWebhookReceiversPatchArrayOutput struct{ *pulumi.OutputState }

func (ProjectConfigStatusWebhookReceiversPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConfigStatusWebhookReceiversPatch)(nil)).Elem()
}

func (o ProjectConfigStatusWebhookReceiversPatchArrayOutput) ToProjectConfigStatusWebhookReceiversPatchArrayOutput() ProjectConfigStatusWebhookReceiversPatchArrayOutput {
	return o
}

func (o ProjectConfigStatusWebhookReceiversPatchArrayOutput) ToProjectConfigStatusWebhookReceiversPatchArrayOutputWithContext(ctx context.Context) ProjectConfigStatusWebhookReceiversPatchArrayOutput {
	return o
}

func (o ProjectConfigStatusWebhookReceiversPatchArrayOutput) Index(i pulumi.IntInput) ProjectConfigStatusWebhookReceiversPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectConfigStatusWebhookReceiversPatch {
		return vs[0].([]ProjectConfigStatusWebhookReceiversPatch)[vs[1].(int)]
	}).(ProjectConfigStatusWebhookReceiversPatchOutput)
}

// ProjectList is a list of Project
type ProjectListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of projects. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []ProjectType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// ProjectListTypeInput is an input type that accepts ProjectListTypeArgs and ProjectListTypeOutput values.
// You can construct a concrete instance of `ProjectListTypeInput` via:
//
//	ProjectListTypeArgs{...}
type ProjectListTypeInput interface {
	pulumi.Input

	ToProjectListTypeOutput() ProjectListTypeOutput
	ToProjectListTypeOutputWithContext(context.Context) ProjectListTypeOutput
}

// ProjectList is a list of Project
type ProjectListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of projects. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ProjectTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (ProjectListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectListType)(nil)).Elem()
}

func (i ProjectListTypeArgs) ToProjectListTypeOutput() ProjectListTypeOutput {
	return i.ToProjectListTypeOutputWithContext(context.Background())
}

func (i ProjectListTypeArgs) ToProjectListTypeOutputWithContext(ctx context.Context) ProjectListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectListTypeOutput)
}

// ProjectList is a list of Project
type ProjectListTypeOutput struct{ *pulumi.OutputState }

func (ProjectListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectListType)(nil)).Elem()
}

func (o ProjectListTypeOutput) ToProjectListTypeOutput() ProjectListTypeOutput {
	return o
}

func (o ProjectListTypeOutput) ToProjectListTypeOutputWithContext(ctx context.Context) ProjectListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProjectListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of projects. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o ProjectListTypeOutput) Items() ProjectTypeArrayOutput {
	return o.ApplyT(func(v ProjectListType) []ProjectType { return v.Items }).(ProjectTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProjectListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProjectListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v ProjectListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// Project is a resource type that reconciles to a specially labeled namespace
// and other TODO: TBD project-level resources.
type ProjectPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *ProjectSpecPatch       `pulumi:"spec"`
	Status   *ProjectStatusPatch     `pulumi:"status"`
}

// ProjectPatchTypeInput is an input type that accepts ProjectPatchTypeArgs and ProjectPatchTypeOutput values.
// You can construct a concrete instance of `ProjectPatchTypeInput` via:
//
//	ProjectPatchTypeArgs{...}
type ProjectPatchTypeInput interface {
	pulumi.Input

	ToProjectPatchTypeOutput() ProjectPatchTypeOutput
	ToProjectPatchTypeOutputWithContext(context.Context) ProjectPatchTypeOutput
}

// Project is a resource type that reconciles to a specially labeled namespace
// and other TODO: TBD project-level resources.
type ProjectPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     ProjectSpecPatchPtrInput       `pulumi:"spec"`
	Status   ProjectStatusPatchPtrInput     `pulumi:"status"`
}

func (ProjectPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectPatchType)(nil)).Elem()
}

func (i ProjectPatchTypeArgs) ToProjectPatchTypeOutput() ProjectPatchTypeOutput {
	return i.ToProjectPatchTypeOutputWithContext(context.Background())
}

func (i ProjectPatchTypeArgs) ToProjectPatchTypeOutputWithContext(ctx context.Context) ProjectPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPatchTypeOutput)
}

// Project is a resource type that reconciles to a specially labeled namespace
// and other TODO: TBD project-level resources.
type ProjectPatchTypeOutput struct{ *pulumi.OutputState }

func (ProjectPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectPatchType)(nil)).Elem()
}

func (o ProjectPatchTypeOutput) ToProjectPatchTypeOutput() ProjectPatchTypeOutput {
	return o
}

func (o ProjectPatchTypeOutput) ToProjectPatchTypeOutputWithContext(ctx context.Context) ProjectPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProjectPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProjectPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ProjectPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v ProjectPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ProjectPatchTypeOutput) Spec() ProjectSpecPatchPtrOutput {
	return o.ApplyT(func(v ProjectPatchType) *ProjectSpecPatch { return v.Spec }).(ProjectSpecPatchPtrOutput)
}

func (o ProjectPatchTypeOutput) Status() ProjectStatusPatchPtrOutput {
	return o.ApplyT(func(v ProjectPatchType) *ProjectStatusPatch { return v.Status }).(ProjectStatusPatchPtrOutput)
}

// Spec describes a Project.
//
// Deprecated: Create a ProjectConfig resource with the same name as the
// Project resource in the Project's namespace. The ProjectConfig resource
// can be used to configure the Project.
type ProjectSpec struct {
	// PromotionPolicies defines policies governing the promotion of Freight to
	// specific Stages within the Project.
	PromotionPolicies []ProjectSpecPromotionPolicies `pulumi:"promotionPolicies"`
	// WebhookReceivers describes Project-specific webhook receivers used for
	// processing events from various external platforms
	WebhookReceivers []ProjectSpecWebhookReceivers `pulumi:"webhookReceivers"`
}

// ProjectSpecInput is an input type that accepts ProjectSpecArgs and ProjectSpecOutput values.
// You can construct a concrete instance of `ProjectSpecInput` via:
//
//	ProjectSpecArgs{...}
type ProjectSpecInput interface {
	pulumi.Input

	ToProjectSpecOutput() ProjectSpecOutput
	ToProjectSpecOutputWithContext(context.Context) ProjectSpecOutput
}

// Spec describes a Project.
//
// Deprecated: Create a ProjectConfig resource with the same name as the
// Project resource in the Project's namespace. The ProjectConfig resource
// can be used to configure the Project.
type ProjectSpecArgs struct {
	// PromotionPolicies defines policies governing the promotion of Freight to
	// specific Stages within the Project.
	PromotionPolicies ProjectSpecPromotionPoliciesArrayInput `pulumi:"promotionPolicies"`
	// WebhookReceivers describes Project-specific webhook receivers used for
	// processing events from various external platforms
	WebhookReceivers ProjectSpecWebhookReceiversArrayInput `pulumi:"webhookReceivers"`
}

func (ProjectSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpec)(nil)).Elem()
}

func (i ProjectSpecArgs) ToProjectSpecOutput() ProjectSpecOutput {
	return i.ToProjectSpecOutputWithContext(context.Background())
}

func (i ProjectSpecArgs) ToProjectSpecOutputWithContext(ctx context.Context) ProjectSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecOutput)
}

func (i ProjectSpecArgs) ToProjectSpecPtrOutput() ProjectSpecPtrOutput {
	return i.ToProjectSpecPtrOutputWithContext(context.Background())
}

func (i ProjectSpecArgs) ToProjectSpecPtrOutputWithContext(ctx context.Context) ProjectSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecOutput).ToProjectSpecPtrOutputWithContext(ctx)
}

// ProjectSpecPtrInput is an input type that accepts ProjectSpecArgs, ProjectSpecPtr and ProjectSpecPtrOutput values.
// You can construct a concrete instance of `ProjectSpecPtrInput` via:
//
//	        ProjectSpecArgs{...}
//
//	or:
//
//	        nil
type ProjectSpecPtrInput interface {
	pulumi.Input

	ToProjectSpecPtrOutput() ProjectSpecPtrOutput
	ToProjectSpecPtrOutputWithContext(context.Context) ProjectSpecPtrOutput
}

type projectSpecPtrType ProjectSpecArgs

func ProjectSpecPtr(v *ProjectSpecArgs) ProjectSpecPtrInput {
	return (*projectSpecPtrType)(v)
}

func (*projectSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpec)(nil)).Elem()
}

func (i *projectSpecPtrType) ToProjectSpecPtrOutput() ProjectSpecPtrOutput {
	return i.ToProjectSpecPtrOutputWithContext(context.Background())
}

func (i *projectSpecPtrType) ToProjectSpecPtrOutputWithContext(ctx context.Context) ProjectSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPtrOutput)
}

// Spec describes a Project.
//
// Deprecated: Create a ProjectConfig resource with the same name as the
// Project resource in the Project's namespace. The ProjectConfig resource
// can be used to configure the Project.
type ProjectSpecOutput struct{ *pulumi.OutputState }

func (ProjectSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpec)(nil)).Elem()
}

func (o ProjectSpecOutput) ToProjectSpecOutput() ProjectSpecOutput {
	return o
}

func (o ProjectSpecOutput) ToProjectSpecOutputWithContext(ctx context.Context) ProjectSpecOutput {
	return o
}

func (o ProjectSpecOutput) ToProjectSpecPtrOutput() ProjectSpecPtrOutput {
	return o.ToProjectSpecPtrOutputWithContext(context.Background())
}

func (o ProjectSpecOutput) ToProjectSpecPtrOutputWithContext(ctx context.Context) ProjectSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSpec) *ProjectSpec {
		return &v
	}).(ProjectSpecPtrOutput)
}

// PromotionPolicies defines policies governing the promotion of Freight to
// specific Stages within the Project.
func (o ProjectSpecOutput) PromotionPolicies() ProjectSpecPromotionPoliciesArrayOutput {
	return o.ApplyT(func(v ProjectSpec) []ProjectSpecPromotionPolicies { return v.PromotionPolicies }).(ProjectSpecPromotionPoliciesArrayOutput)
}

// WebhookReceivers describes Project-specific webhook receivers used for
// processing events from various external platforms
func (o ProjectSpecOutput) WebhookReceivers() ProjectSpecWebhookReceiversArrayOutput {
	return o.ApplyT(func(v ProjectSpec) []ProjectSpecWebhookReceivers { return v.WebhookReceivers }).(ProjectSpecWebhookReceiversArrayOutput)
}

type ProjectSpecPtrOutput struct{ *pulumi.OutputState }

func (ProjectSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpec)(nil)).Elem()
}

func (o ProjectSpecPtrOutput) ToProjectSpecPtrOutput() ProjectSpecPtrOutput {
	return o
}

func (o ProjectSpecPtrOutput) ToProjectSpecPtrOutputWithContext(ctx context.Context) ProjectSpecPtrOutput {
	return o
}

func (o ProjectSpecPtrOutput) Elem() ProjectSpecOutput {
	return o.ApplyT(func(v *ProjectSpec) ProjectSpec {
		if v != nil {
			return *v
		}
		var ret ProjectSpec
		return ret
	}).(ProjectSpecOutput)
}

// PromotionPolicies defines policies governing the promotion of Freight to
// specific Stages within the Project.
func (o ProjectSpecPtrOutput) PromotionPolicies() ProjectSpecPromotionPoliciesArrayOutput {
	return o.ApplyT(func(v *ProjectSpec) []ProjectSpecPromotionPolicies {
		if v == nil {
			return nil
		}
		return v.PromotionPolicies
	}).(ProjectSpecPromotionPoliciesArrayOutput)
}

// WebhookReceivers describes Project-specific webhook receivers used for
// processing events from various external platforms
func (o ProjectSpecPtrOutput) WebhookReceivers() ProjectSpecWebhookReceiversArrayOutput {
	return o.ApplyT(func(v *ProjectSpec) []ProjectSpecWebhookReceivers {
		if v == nil {
			return nil
		}
		return v.WebhookReceivers
	}).(ProjectSpecWebhookReceiversArrayOutput)
}

// Spec describes a Project.
//
// Deprecated: Create a ProjectConfig resource with the same name as the
// Project resource in the Project's namespace. The ProjectConfig resource
// can be used to configure the Project.
type ProjectSpecPatch struct {
	// PromotionPolicies defines policies governing the promotion of Freight to
	// specific Stages within the Project.
	PromotionPolicies []ProjectSpecPromotionPoliciesPatch `pulumi:"promotionPolicies"`
	// WebhookReceivers describes Project-specific webhook receivers used for
	// processing events from various external platforms
	WebhookReceivers []ProjectSpecWebhookReceiversPatch `pulumi:"webhookReceivers"`
}

// ProjectSpecPatchInput is an input type that accepts ProjectSpecPatchArgs and ProjectSpecPatchOutput values.
// You can construct a concrete instance of `ProjectSpecPatchInput` via:
//
//	ProjectSpecPatchArgs{...}
type ProjectSpecPatchInput interface {
	pulumi.Input

	ToProjectSpecPatchOutput() ProjectSpecPatchOutput
	ToProjectSpecPatchOutputWithContext(context.Context) ProjectSpecPatchOutput
}

// Spec describes a Project.
//
// Deprecated: Create a ProjectConfig resource with the same name as the
// Project resource in the Project's namespace. The ProjectConfig resource
// can be used to configure the Project.
type ProjectSpecPatchArgs struct {
	// PromotionPolicies defines policies governing the promotion of Freight to
	// specific Stages within the Project.
	PromotionPolicies ProjectSpecPromotionPoliciesPatchArrayInput `pulumi:"promotionPolicies"`
	// WebhookReceivers describes Project-specific webhook receivers used for
	// processing events from various external platforms
	WebhookReceivers ProjectSpecWebhookReceiversPatchArrayInput `pulumi:"webhookReceivers"`
}

func (ProjectSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecPatch)(nil)).Elem()
}

func (i ProjectSpecPatchArgs) ToProjectSpecPatchOutput() ProjectSpecPatchOutput {
	return i.ToProjectSpecPatchOutputWithContext(context.Background())
}

func (i ProjectSpecPatchArgs) ToProjectSpecPatchOutputWithContext(ctx context.Context) ProjectSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPatchOutput)
}

func (i ProjectSpecPatchArgs) ToProjectSpecPatchPtrOutput() ProjectSpecPatchPtrOutput {
	return i.ToProjectSpecPatchPtrOutputWithContext(context.Background())
}

func (i ProjectSpecPatchArgs) ToProjectSpecPatchPtrOutputWithContext(ctx context.Context) ProjectSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPatchOutput).ToProjectSpecPatchPtrOutputWithContext(ctx)
}

// ProjectSpecPatchPtrInput is an input type that accepts ProjectSpecPatchArgs, ProjectSpecPatchPtr and ProjectSpecPatchPtrOutput values.
// You can construct a concrete instance of `ProjectSpecPatchPtrInput` via:
//
//	        ProjectSpecPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectSpecPatchPtrInput interface {
	pulumi.Input

	ToProjectSpecPatchPtrOutput() ProjectSpecPatchPtrOutput
	ToProjectSpecPatchPtrOutputWithContext(context.Context) ProjectSpecPatchPtrOutput
}

type projectSpecPatchPtrType ProjectSpecPatchArgs

func ProjectSpecPatchPtr(v *ProjectSpecPatchArgs) ProjectSpecPatchPtrInput {
	return (*projectSpecPatchPtrType)(v)
}

func (*projectSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpecPatch)(nil)).Elem()
}

func (i *projectSpecPatchPtrType) ToProjectSpecPatchPtrOutput() ProjectSpecPatchPtrOutput {
	return i.ToProjectSpecPatchPtrOutputWithContext(context.Background())
}

func (i *projectSpecPatchPtrType) ToProjectSpecPatchPtrOutputWithContext(ctx context.Context) ProjectSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPatchPtrOutput)
}

// Spec describes a Project.
//
// Deprecated: Create a ProjectConfig resource with the same name as the
// Project resource in the Project's namespace. The ProjectConfig resource
// can be used to configure the Project.
type ProjectSpecPatchOutput struct{ *pulumi.OutputState }

func (ProjectSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecPatch)(nil)).Elem()
}

func (o ProjectSpecPatchOutput) ToProjectSpecPatchOutput() ProjectSpecPatchOutput {
	return o
}

func (o ProjectSpecPatchOutput) ToProjectSpecPatchOutputWithContext(ctx context.Context) ProjectSpecPatchOutput {
	return o
}

func (o ProjectSpecPatchOutput) ToProjectSpecPatchPtrOutput() ProjectSpecPatchPtrOutput {
	return o.ToProjectSpecPatchPtrOutputWithContext(context.Background())
}

func (o ProjectSpecPatchOutput) ToProjectSpecPatchPtrOutputWithContext(ctx context.Context) ProjectSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSpecPatch) *ProjectSpecPatch {
		return &v
	}).(ProjectSpecPatchPtrOutput)
}

// PromotionPolicies defines policies governing the promotion of Freight to
// specific Stages within the Project.
func (o ProjectSpecPatchOutput) PromotionPolicies() ProjectSpecPromotionPoliciesPatchArrayOutput {
	return o.ApplyT(func(v ProjectSpecPatch) []ProjectSpecPromotionPoliciesPatch { return v.PromotionPolicies }).(ProjectSpecPromotionPoliciesPatchArrayOutput)
}

// WebhookReceivers describes Project-specific webhook receivers used for
// processing events from various external platforms
func (o ProjectSpecPatchOutput) WebhookReceivers() ProjectSpecWebhookReceiversPatchArrayOutput {
	return o.ApplyT(func(v ProjectSpecPatch) []ProjectSpecWebhookReceiversPatch { return v.WebhookReceivers }).(ProjectSpecWebhookReceiversPatchArrayOutput)
}

type ProjectSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpecPatch)(nil)).Elem()
}

func (o ProjectSpecPatchPtrOutput) ToProjectSpecPatchPtrOutput() ProjectSpecPatchPtrOutput {
	return o
}

func (o ProjectSpecPatchPtrOutput) ToProjectSpecPatchPtrOutputWithContext(ctx context.Context) ProjectSpecPatchPtrOutput {
	return o
}

func (o ProjectSpecPatchPtrOutput) Elem() ProjectSpecPatchOutput {
	return o.ApplyT(func(v *ProjectSpecPatch) ProjectSpecPatch {
		if v != nil {
			return *v
		}
		var ret ProjectSpecPatch
		return ret
	}).(ProjectSpecPatchOutput)
}

// PromotionPolicies defines policies governing the promotion of Freight to
// specific Stages within the Project.
func (o ProjectSpecPatchPtrOutput) PromotionPolicies() ProjectSpecPromotionPoliciesPatchArrayOutput {
	return o.ApplyT(func(v *ProjectSpecPatch) []ProjectSpecPromotionPoliciesPatch {
		if v == nil {
			return nil
		}
		return v.PromotionPolicies
	}).(ProjectSpecPromotionPoliciesPatchArrayOutput)
}

// WebhookReceivers describes Project-specific webhook receivers used for
// processing events from various external platforms
func (o ProjectSpecPatchPtrOutput) WebhookReceivers() ProjectSpecWebhookReceiversPatchArrayOutput {
	return o.ApplyT(func(v *ProjectSpecPatch) []ProjectSpecWebhookReceiversPatch {
		if v == nil {
			return nil
		}
		return v.WebhookReceivers
	}).(ProjectSpecWebhookReceiversPatchArrayOutput)
}

// PromotionPolicy defines policies governing the promotion of Freight to a
// specific Stage.
type ProjectSpecPromotionPolicies struct {
	// AutoPromotionEnabled indicates whether new Freight can automatically be
	// promoted into the Stage referenced by the Stage field. Note: There are may
	// be other conditions also required for an auto-promotion to occur. This
	// field defaults to false, but is commonly set to true for Stages that
	// subscribe to Warehouses instead of other, upstream Stages. This allows
	// users to define Stages that are automatically updated as soon as new
	// artifacts are detected.
	AutoPromotionEnabled *bool `pulumi:"autoPromotionEnabled"`
	// Stage is the name of the Stage to which this policy applies.
	//
	// Deprecated: Use StageSelector instead.
	Stage         *string                                    `pulumi:"stage"`
	StageSelector *ProjectSpecPromotionPoliciesStageSelector `pulumi:"stageSelector"`
}

// ProjectSpecPromotionPoliciesInput is an input type that accepts ProjectSpecPromotionPoliciesArgs and ProjectSpecPromotionPoliciesOutput values.
// You can construct a concrete instance of `ProjectSpecPromotionPoliciesInput` via:
//
//	ProjectSpecPromotionPoliciesArgs{...}
type ProjectSpecPromotionPoliciesInput interface {
	pulumi.Input

	ToProjectSpecPromotionPoliciesOutput() ProjectSpecPromotionPoliciesOutput
	ToProjectSpecPromotionPoliciesOutputWithContext(context.Context) ProjectSpecPromotionPoliciesOutput
}

// PromotionPolicy defines policies governing the promotion of Freight to a
// specific Stage.
type ProjectSpecPromotionPoliciesArgs struct {
	// AutoPromotionEnabled indicates whether new Freight can automatically be
	// promoted into the Stage referenced by the Stage field. Note: There are may
	// be other conditions also required for an auto-promotion to occur. This
	// field defaults to false, but is commonly set to true for Stages that
	// subscribe to Warehouses instead of other, upstream Stages. This allows
	// users to define Stages that are automatically updated as soon as new
	// artifacts are detected.
	AutoPromotionEnabled pulumi.BoolPtrInput `pulumi:"autoPromotionEnabled"`
	// Stage is the name of the Stage to which this policy applies.
	//
	// Deprecated: Use StageSelector instead.
	Stage         pulumi.StringPtrInput                             `pulumi:"stage"`
	StageSelector ProjectSpecPromotionPoliciesStageSelectorPtrInput `pulumi:"stageSelector"`
}

func (ProjectSpecPromotionPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecPromotionPolicies)(nil)).Elem()
}

func (i ProjectSpecPromotionPoliciesArgs) ToProjectSpecPromotionPoliciesOutput() ProjectSpecPromotionPoliciesOutput {
	return i.ToProjectSpecPromotionPoliciesOutputWithContext(context.Background())
}

func (i ProjectSpecPromotionPoliciesArgs) ToProjectSpecPromotionPoliciesOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPromotionPoliciesOutput)
}

// ProjectSpecPromotionPoliciesArrayInput is an input type that accepts ProjectSpecPromotionPoliciesArray and ProjectSpecPromotionPoliciesArrayOutput values.
// You can construct a concrete instance of `ProjectSpecPromotionPoliciesArrayInput` via:
//
//	ProjectSpecPromotionPoliciesArray{ ProjectSpecPromotionPoliciesArgs{...} }
type ProjectSpecPromotionPoliciesArrayInput interface {
	pulumi.Input

	ToProjectSpecPromotionPoliciesArrayOutput() ProjectSpecPromotionPoliciesArrayOutput
	ToProjectSpecPromotionPoliciesArrayOutputWithContext(context.Context) ProjectSpecPromotionPoliciesArrayOutput
}

type ProjectSpecPromotionPoliciesArray []ProjectSpecPromotionPoliciesInput

func (ProjectSpecPromotionPoliciesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSpecPromotionPolicies)(nil)).Elem()
}

func (i ProjectSpecPromotionPoliciesArray) ToProjectSpecPromotionPoliciesArrayOutput() ProjectSpecPromotionPoliciesArrayOutput {
	return i.ToProjectSpecPromotionPoliciesArrayOutputWithContext(context.Background())
}

func (i ProjectSpecPromotionPoliciesArray) ToProjectSpecPromotionPoliciesArrayOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPromotionPoliciesArrayOutput)
}

// PromotionPolicy defines policies governing the promotion of Freight to a
// specific Stage.
type ProjectSpecPromotionPoliciesOutput struct{ *pulumi.OutputState }

func (ProjectSpecPromotionPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecPromotionPolicies)(nil)).Elem()
}

func (o ProjectSpecPromotionPoliciesOutput) ToProjectSpecPromotionPoliciesOutput() ProjectSpecPromotionPoliciesOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesOutput) ToProjectSpecPromotionPoliciesOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesOutput {
	return o
}

// AutoPromotionEnabled indicates whether new Freight can automatically be
// promoted into the Stage referenced by the Stage field. Note: There are may
// be other conditions also required for an auto-promotion to occur. This
// field defaults to false, but is commonly set to true for Stages that
// subscribe to Warehouses instead of other, upstream Stages. This allows
// users to define Stages that are automatically updated as soon as new
// artifacts are detected.
func (o ProjectSpecPromotionPoliciesOutput) AutoPromotionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPolicies) *bool { return v.AutoPromotionEnabled }).(pulumi.BoolPtrOutput)
}

// Stage is the name of the Stage to which this policy applies.
//
// Deprecated: Use StageSelector instead.
func (o ProjectSpecPromotionPoliciesOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPolicies) *string { return v.Stage }).(pulumi.StringPtrOutput)
}

func (o ProjectSpecPromotionPoliciesOutput) StageSelector() ProjectSpecPromotionPoliciesStageSelectorPtrOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPolicies) *ProjectSpecPromotionPoliciesStageSelector {
		return v.StageSelector
	}).(ProjectSpecPromotionPoliciesStageSelectorPtrOutput)
}

type ProjectSpecPromotionPoliciesArrayOutput struct{ *pulumi.OutputState }

func (ProjectSpecPromotionPoliciesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSpecPromotionPolicies)(nil)).Elem()
}

func (o ProjectSpecPromotionPoliciesArrayOutput) ToProjectSpecPromotionPoliciesArrayOutput() ProjectSpecPromotionPoliciesArrayOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesArrayOutput) ToProjectSpecPromotionPoliciesArrayOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesArrayOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesArrayOutput) Index(i pulumi.IntInput) ProjectSpecPromotionPoliciesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSpecPromotionPolicies {
		return vs[0].([]ProjectSpecPromotionPolicies)[vs[1].(int)]
	}).(ProjectSpecPromotionPoliciesOutput)
}

// PromotionPolicy defines policies governing the promotion of Freight to a
// specific Stage.
type ProjectSpecPromotionPoliciesPatch struct {
	// AutoPromotionEnabled indicates whether new Freight can automatically be
	// promoted into the Stage referenced by the Stage field. Note: There are may
	// be other conditions also required for an auto-promotion to occur. This
	// field defaults to false, but is commonly set to true for Stages that
	// subscribe to Warehouses instead of other, upstream Stages. This allows
	// users to define Stages that are automatically updated as soon as new
	// artifacts are detected.
	AutoPromotionEnabled *bool `pulumi:"autoPromotionEnabled"`
	// Stage is the name of the Stage to which this policy applies.
	//
	// Deprecated: Use StageSelector instead.
	Stage         *string                                         `pulumi:"stage"`
	StageSelector *ProjectSpecPromotionPoliciesStageSelectorPatch `pulumi:"stageSelector"`
}

// ProjectSpecPromotionPoliciesPatchInput is an input type that accepts ProjectSpecPromotionPoliciesPatchArgs and ProjectSpecPromotionPoliciesPatchOutput values.
// You can construct a concrete instance of `ProjectSpecPromotionPoliciesPatchInput` via:
//
//	ProjectSpecPromotionPoliciesPatchArgs{...}
type ProjectSpecPromotionPoliciesPatchInput interface {
	pulumi.Input

	ToProjectSpecPromotionPoliciesPatchOutput() ProjectSpecPromotionPoliciesPatchOutput
	ToProjectSpecPromotionPoliciesPatchOutputWithContext(context.Context) ProjectSpecPromotionPoliciesPatchOutput
}

// PromotionPolicy defines policies governing the promotion of Freight to a
// specific Stage.
type ProjectSpecPromotionPoliciesPatchArgs struct {
	// AutoPromotionEnabled indicates whether new Freight can automatically be
	// promoted into the Stage referenced by the Stage field. Note: There are may
	// be other conditions also required for an auto-promotion to occur. This
	// field defaults to false, but is commonly set to true for Stages that
	// subscribe to Warehouses instead of other, upstream Stages. This allows
	// users to define Stages that are automatically updated as soon as new
	// artifacts are detected.
	AutoPromotionEnabled pulumi.BoolPtrInput `pulumi:"autoPromotionEnabled"`
	// Stage is the name of the Stage to which this policy applies.
	//
	// Deprecated: Use StageSelector instead.
	Stage         pulumi.StringPtrInput                                  `pulumi:"stage"`
	StageSelector ProjectSpecPromotionPoliciesStageSelectorPatchPtrInput `pulumi:"stageSelector"`
}

func (ProjectSpecPromotionPoliciesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecPromotionPoliciesPatch)(nil)).Elem()
}

func (i ProjectSpecPromotionPoliciesPatchArgs) ToProjectSpecPromotionPoliciesPatchOutput() ProjectSpecPromotionPoliciesPatchOutput {
	return i.ToProjectSpecPromotionPoliciesPatchOutputWithContext(context.Background())
}

func (i ProjectSpecPromotionPoliciesPatchArgs) ToProjectSpecPromotionPoliciesPatchOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPromotionPoliciesPatchOutput)
}

// ProjectSpecPromotionPoliciesPatchArrayInput is an input type that accepts ProjectSpecPromotionPoliciesPatchArray and ProjectSpecPromotionPoliciesPatchArrayOutput values.
// You can construct a concrete instance of `ProjectSpecPromotionPoliciesPatchArrayInput` via:
//
//	ProjectSpecPromotionPoliciesPatchArray{ ProjectSpecPromotionPoliciesPatchArgs{...} }
type ProjectSpecPromotionPoliciesPatchArrayInput interface {
	pulumi.Input

	ToProjectSpecPromotionPoliciesPatchArrayOutput() ProjectSpecPromotionPoliciesPatchArrayOutput
	ToProjectSpecPromotionPoliciesPatchArrayOutputWithContext(context.Context) ProjectSpecPromotionPoliciesPatchArrayOutput
}

type ProjectSpecPromotionPoliciesPatchArray []ProjectSpecPromotionPoliciesPatchInput

func (ProjectSpecPromotionPoliciesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSpecPromotionPoliciesPatch)(nil)).Elem()
}

func (i ProjectSpecPromotionPoliciesPatchArray) ToProjectSpecPromotionPoliciesPatchArrayOutput() ProjectSpecPromotionPoliciesPatchArrayOutput {
	return i.ToProjectSpecPromotionPoliciesPatchArrayOutputWithContext(context.Background())
}

func (i ProjectSpecPromotionPoliciesPatchArray) ToProjectSpecPromotionPoliciesPatchArrayOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPromotionPoliciesPatchArrayOutput)
}

// PromotionPolicy defines policies governing the promotion of Freight to a
// specific Stage.
type ProjectSpecPromotionPoliciesPatchOutput struct{ *pulumi.OutputState }

func (ProjectSpecPromotionPoliciesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecPromotionPoliciesPatch)(nil)).Elem()
}

func (o ProjectSpecPromotionPoliciesPatchOutput) ToProjectSpecPromotionPoliciesPatchOutput() ProjectSpecPromotionPoliciesPatchOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesPatchOutput) ToProjectSpecPromotionPoliciesPatchOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesPatchOutput {
	return o
}

// AutoPromotionEnabled indicates whether new Freight can automatically be
// promoted into the Stage referenced by the Stage field. Note: There are may
// be other conditions also required for an auto-promotion to occur. This
// field defaults to false, but is commonly set to true for Stages that
// subscribe to Warehouses instead of other, upstream Stages. This allows
// users to define Stages that are automatically updated as soon as new
// artifacts are detected.
func (o ProjectSpecPromotionPoliciesPatchOutput) AutoPromotionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesPatch) *bool { return v.AutoPromotionEnabled }).(pulumi.BoolPtrOutput)
}

// Stage is the name of the Stage to which this policy applies.
//
// Deprecated: Use StageSelector instead.
func (o ProjectSpecPromotionPoliciesPatchOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesPatch) *string { return v.Stage }).(pulumi.StringPtrOutput)
}

func (o ProjectSpecPromotionPoliciesPatchOutput) StageSelector() ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesPatch) *ProjectSpecPromotionPoliciesStageSelectorPatch {
		return v.StageSelector
	}).(ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput)
}

type ProjectSpecPromotionPoliciesPatchArrayOutput struct{ *pulumi.OutputState }

func (ProjectSpecPromotionPoliciesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSpecPromotionPoliciesPatch)(nil)).Elem()
}

func (o ProjectSpecPromotionPoliciesPatchArrayOutput) ToProjectSpecPromotionPoliciesPatchArrayOutput() ProjectSpecPromotionPoliciesPatchArrayOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesPatchArrayOutput) ToProjectSpecPromotionPoliciesPatchArrayOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesPatchArrayOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesPatchArrayOutput) Index(i pulumi.IntInput) ProjectSpecPromotionPoliciesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSpecPromotionPoliciesPatch {
		return vs[0].([]ProjectSpecPromotionPoliciesPatch)[vs[1].(int)]
	}).(ProjectSpecPromotionPoliciesPatchOutput)
}

// StageSelector is a selector that matches the Stage resource to which
// this policy applies.
type ProjectSpecPromotionPoliciesStageSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ProjectSpecPromotionPoliciesStageSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
	// Name is the name of the resource to which this policy applies.
	//
	// It can be an exact name, a regex pattern (with prefix "regex:"), or a
	// glob pattern (with prefix "glob:").
	//
	// When both Name and LabelSelector are specified, the Name is ANDed with
	// the LabelSelector. I.e., the resource must match both the Name and
	// LabelSelector to be selected by this policy.
	//
	// NOTE: Using a specific exact name is the most secure option. Pattern
	// matching via regex or glob can be exploited by users with permissions to
	// match promotion policies that weren't intended to apply to their
	// resources. For example, a user could create a resource with a name
	// deliberately crafted to match the pattern, potentially bypassing intended
	// promotion controls.
	Name *string `pulumi:"name"`
}

// ProjectSpecPromotionPoliciesStageSelectorInput is an input type that accepts ProjectSpecPromotionPoliciesStageSelectorArgs and ProjectSpecPromotionPoliciesStageSelectorOutput values.
// You can construct a concrete instance of `ProjectSpecPromotionPoliciesStageSelectorInput` via:
//
//	ProjectSpecPromotionPoliciesStageSelectorArgs{...}
type ProjectSpecPromotionPoliciesStageSelectorInput interface {
	pulumi.Input

	ToProjectSpecPromotionPoliciesStageSelectorOutput() ProjectSpecPromotionPoliciesStageSelectorOutput
	ToProjectSpecPromotionPoliciesStageSelectorOutputWithContext(context.Context) ProjectSpecPromotionPoliciesStageSelectorOutput
}

// StageSelector is a selector that matches the Stage resource to which
// this policy applies.
type ProjectSpecPromotionPoliciesStageSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
	// Name is the name of the resource to which this policy applies.
	//
	// It can be an exact name, a regex pattern (with prefix "regex:"), or a
	// glob pattern (with prefix "glob:").
	//
	// When both Name and LabelSelector are specified, the Name is ANDed with
	// the LabelSelector. I.e., the resource must match both the Name and
	// LabelSelector to be selected by this policy.
	//
	// NOTE: Using a specific exact name is the most secure option. Pattern
	// matching via regex or glob can be exploited by users with permissions to
	// match promotion policies that weren't intended to apply to their
	// resources. For example, a user could create a resource with a name
	// deliberately crafted to match the pattern, potentially bypassing intended
	// promotion controls.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProjectSpecPromotionPoliciesStageSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelector)(nil)).Elem()
}

func (i ProjectSpecPromotionPoliciesStageSelectorArgs) ToProjectSpecPromotionPoliciesStageSelectorOutput() ProjectSpecPromotionPoliciesStageSelectorOutput {
	return i.ToProjectSpecPromotionPoliciesStageSelectorOutputWithContext(context.Background())
}

func (i ProjectSpecPromotionPoliciesStageSelectorArgs) ToProjectSpecPromotionPoliciesStageSelectorOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPromotionPoliciesStageSelectorOutput)
}

func (i ProjectSpecPromotionPoliciesStageSelectorArgs) ToProjectSpecPromotionPoliciesStageSelectorPtrOutput() ProjectSpecPromotionPoliciesStageSelectorPtrOutput {
	return i.ToProjectSpecPromotionPoliciesStageSelectorPtrOutputWithContext(context.Background())
}

func (i ProjectSpecPromotionPoliciesStageSelectorArgs) ToProjectSpecPromotionPoliciesStageSelectorPtrOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPromotionPoliciesStageSelectorOutput).ToProjectSpecPromotionPoliciesStageSelectorPtrOutputWithContext(ctx)
}

// ProjectSpecPromotionPoliciesStageSelectorPtrInput is an input type that accepts ProjectSpecPromotionPoliciesStageSelectorArgs, ProjectSpecPromotionPoliciesStageSelectorPtr and ProjectSpecPromotionPoliciesStageSelectorPtrOutput values.
// You can construct a concrete instance of `ProjectSpecPromotionPoliciesStageSelectorPtrInput` via:
//
//	        ProjectSpecPromotionPoliciesStageSelectorArgs{...}
//
//	or:
//
//	        nil
type ProjectSpecPromotionPoliciesStageSelectorPtrInput interface {
	pulumi.Input

	ToProjectSpecPromotionPoliciesStageSelectorPtrOutput() ProjectSpecPromotionPoliciesStageSelectorPtrOutput
	ToProjectSpecPromotionPoliciesStageSelectorPtrOutputWithContext(context.Context) ProjectSpecPromotionPoliciesStageSelectorPtrOutput
}

type projectSpecPromotionPoliciesStageSelectorPtrType ProjectSpecPromotionPoliciesStageSelectorArgs

func ProjectSpecPromotionPoliciesStageSelectorPtr(v *ProjectSpecPromotionPoliciesStageSelectorArgs) ProjectSpecPromotionPoliciesStageSelectorPtrInput {
	return (*projectSpecPromotionPoliciesStageSelectorPtrType)(v)
}

func (*projectSpecPromotionPoliciesStageSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpecPromotionPoliciesStageSelector)(nil)).Elem()
}

func (i *projectSpecPromotionPoliciesStageSelectorPtrType) ToProjectSpecPromotionPoliciesStageSelectorPtrOutput() ProjectSpecPromotionPoliciesStageSelectorPtrOutput {
	return i.ToProjectSpecPromotionPoliciesStageSelectorPtrOutputWithContext(context.Background())
}

func (i *projectSpecPromotionPoliciesStageSelectorPtrType) ToProjectSpecPromotionPoliciesStageSelectorPtrOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPromotionPoliciesStageSelectorPtrOutput)
}

// StageSelector is a selector that matches the Stage resource to which
// this policy applies.
type ProjectSpecPromotionPoliciesStageSelectorOutput struct{ *pulumi.OutputState }

func (ProjectSpecPromotionPoliciesStageSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelector)(nil)).Elem()
}

func (o ProjectSpecPromotionPoliciesStageSelectorOutput) ToProjectSpecPromotionPoliciesStageSelectorOutput() ProjectSpecPromotionPoliciesStageSelectorOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesStageSelectorOutput) ToProjectSpecPromotionPoliciesStageSelectorOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesStageSelectorOutput) ToProjectSpecPromotionPoliciesStageSelectorPtrOutput() ProjectSpecPromotionPoliciesStageSelectorPtrOutput {
	return o.ToProjectSpecPromotionPoliciesStageSelectorPtrOutputWithContext(context.Background())
}

func (o ProjectSpecPromotionPoliciesStageSelectorOutput) ToProjectSpecPromotionPoliciesStageSelectorPtrOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSpecPromotionPoliciesStageSelector) *ProjectSpecPromotionPoliciesStageSelector {
		return &v
	}).(ProjectSpecPromotionPoliciesStageSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ProjectSpecPromotionPoliciesStageSelectorOutput) MatchExpressions() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesStageSelector) []ProjectSpecPromotionPoliciesStageSelectorMatchExpressions {
		return v.MatchExpressions
	}).(ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ProjectSpecPromotionPoliciesStageSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesStageSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

// Name is the name of the resource to which this policy applies.
//
// It can be an exact name, a regex pattern (with prefix "regex:"), or a
// glob pattern (with prefix "glob:").
//
// When both Name and LabelSelector are specified, the Name is ANDed with
// the LabelSelector. I.e., the resource must match both the Name and
// LabelSelector to be selected by this policy.
//
// NOTE: Using a specific exact name is the most secure option. Pattern
// matching via regex or glob can be exploited by users with permissions to
// match promotion policies that weren't intended to apply to their
// resources. For example, a user could create a resource with a name
// deliberately crafted to match the pattern, potentially bypassing intended
// promotion controls.
func (o ProjectSpecPromotionPoliciesStageSelectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesStageSelector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProjectSpecPromotionPoliciesStageSelectorPtrOutput struct{ *pulumi.OutputState }

func (ProjectSpecPromotionPoliciesStageSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpecPromotionPoliciesStageSelector)(nil)).Elem()
}

func (o ProjectSpecPromotionPoliciesStageSelectorPtrOutput) ToProjectSpecPromotionPoliciesStageSelectorPtrOutput() ProjectSpecPromotionPoliciesStageSelectorPtrOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesStageSelectorPtrOutput) ToProjectSpecPromotionPoliciesStageSelectorPtrOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorPtrOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesStageSelectorPtrOutput) Elem() ProjectSpecPromotionPoliciesStageSelectorOutput {
	return o.ApplyT(func(v *ProjectSpecPromotionPoliciesStageSelector) ProjectSpecPromotionPoliciesStageSelector {
		if v != nil {
			return *v
		}
		var ret ProjectSpecPromotionPoliciesStageSelector
		return ret
	}).(ProjectSpecPromotionPoliciesStageSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ProjectSpecPromotionPoliciesStageSelectorPtrOutput) MatchExpressions() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *ProjectSpecPromotionPoliciesStageSelector) []ProjectSpecPromotionPoliciesStageSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ProjectSpecPromotionPoliciesStageSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProjectSpecPromotionPoliciesStageSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// Name is the name of the resource to which this policy applies.
//
// It can be an exact name, a regex pattern (with prefix "regex:"), or a
// glob pattern (with prefix "glob:").
//
// When both Name and LabelSelector are specified, the Name is ANDed with
// the LabelSelector. I.e., the resource must match both the Name and
// LabelSelector to be selected by this policy.
//
// NOTE: Using a specific exact name is the most secure option. Pattern
// matching via regex or glob can be exploited by users with permissions to
// match promotion policies that weren't intended to apply to their
// resources. For example, a user could create a resource with a name
// deliberately crafted to match the pattern, potentially bypassing intended
// promotion controls.
func (o ProjectSpecPromotionPoliciesStageSelectorPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSpecPromotionPoliciesStageSelector) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type ProjectSpecPromotionPoliciesStageSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsInput is an input type that accepts ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArgs and ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsInput` via:
//
//	ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArgs{...}
type ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput
	ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutputWithContext(context.Context) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelectorMatchExpressions)(nil)).Elem()
}

func (i ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArgs) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput {
	return i.ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArgs) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput)
}

// ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayInput is an input type that accepts ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArray and ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayInput` via:
//
//	ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArray{ ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArgs{...} }
type ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput
	ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutputWithContext(context.Context) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput
}

type ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArray []ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsInput

func (ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSpecPromotionPoliciesStageSelectorMatchExpressions)(nil)).Elem()
}

func (i ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArray) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput {
	return i.ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArray) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelectorMatchExpressions)(nil)).Elem()
}

func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesStageSelectorMatchExpressions) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesStageSelectorMatchExpressions) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesStageSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSpecPromotionPoliciesStageSelectorMatchExpressions)(nil)).Elem()
}

func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSpecPromotionPoliciesStageSelectorMatchExpressions {
		return vs[0].([]ProjectSpecPromotionPoliciesStageSelectorMatchExpressions)[vs[1].(int)]
	}).(ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatch struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchInput is an input type that accepts ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs and ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchInput` via:
//
//	ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs{...}
type ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput
	ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutputWithContext(context.Context) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput {
	return i.ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput)
}

// ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayInput is an input type that accepts ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArray and ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayInput` via:
//
//	ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArray{ ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs{...} }
type ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput
	ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput
}

type ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArray []ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchInput

func (ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArray) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput {
	return i.ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArray) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatch) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatch) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput) ToProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatch {
		return vs[0].([]ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput)
}

// StageSelector is a selector that matches the Stage resource to which
// this policy applies.
type ProjectSpecPromotionPoliciesStageSelectorPatch struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
	// Name is the name of the resource to which this policy applies.
	//
	// It can be an exact name, a regex pattern (with prefix "regex:"), or a
	// glob pattern (with prefix "glob:").
	//
	// When both Name and LabelSelector are specified, the Name is ANDed with
	// the LabelSelector. I.e., the resource must match both the Name and
	// LabelSelector to be selected by this policy.
	//
	// NOTE: Using a specific exact name is the most secure option. Pattern
	// matching via regex or glob can be exploited by users with permissions to
	// match promotion policies that weren't intended to apply to their
	// resources. For example, a user could create a resource with a name
	// deliberately crafted to match the pattern, potentially bypassing intended
	// promotion controls.
	Name *string `pulumi:"name"`
}

// ProjectSpecPromotionPoliciesStageSelectorPatchInput is an input type that accepts ProjectSpecPromotionPoliciesStageSelectorPatchArgs and ProjectSpecPromotionPoliciesStageSelectorPatchOutput values.
// You can construct a concrete instance of `ProjectSpecPromotionPoliciesStageSelectorPatchInput` via:
//
//	ProjectSpecPromotionPoliciesStageSelectorPatchArgs{...}
type ProjectSpecPromotionPoliciesStageSelectorPatchInput interface {
	pulumi.Input

	ToProjectSpecPromotionPoliciesStageSelectorPatchOutput() ProjectSpecPromotionPoliciesStageSelectorPatchOutput
	ToProjectSpecPromotionPoliciesStageSelectorPatchOutputWithContext(context.Context) ProjectSpecPromotionPoliciesStageSelectorPatchOutput
}

// StageSelector is a selector that matches the Stage resource to which
// this policy applies.
type ProjectSpecPromotionPoliciesStageSelectorPatchArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
	// Name is the name of the resource to which this policy applies.
	//
	// It can be an exact name, a regex pattern (with prefix "regex:"), or a
	// glob pattern (with prefix "glob:").
	//
	// When both Name and LabelSelector are specified, the Name is ANDed with
	// the LabelSelector. I.e., the resource must match both the Name and
	// LabelSelector to be selected by this policy.
	//
	// NOTE: Using a specific exact name is the most secure option. Pattern
	// matching via regex or glob can be exploited by users with permissions to
	// match promotion policies that weren't intended to apply to their
	// resources. For example, a user could create a resource with a name
	// deliberately crafted to match the pattern, potentially bypassing intended
	// promotion controls.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProjectSpecPromotionPoliciesStageSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelectorPatch)(nil)).Elem()
}

func (i ProjectSpecPromotionPoliciesStageSelectorPatchArgs) ToProjectSpecPromotionPoliciesStageSelectorPatchOutput() ProjectSpecPromotionPoliciesStageSelectorPatchOutput {
	return i.ToProjectSpecPromotionPoliciesStageSelectorPatchOutputWithContext(context.Background())
}

func (i ProjectSpecPromotionPoliciesStageSelectorPatchArgs) ToProjectSpecPromotionPoliciesStageSelectorPatchOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPromotionPoliciesStageSelectorPatchOutput)
}

func (i ProjectSpecPromotionPoliciesStageSelectorPatchArgs) ToProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput() ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return i.ToProjectSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(context.Background())
}

func (i ProjectSpecPromotionPoliciesStageSelectorPatchArgs) ToProjectSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPromotionPoliciesStageSelectorPatchOutput).ToProjectSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(ctx)
}

// ProjectSpecPromotionPoliciesStageSelectorPatchPtrInput is an input type that accepts ProjectSpecPromotionPoliciesStageSelectorPatchArgs, ProjectSpecPromotionPoliciesStageSelectorPatchPtr and ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput values.
// You can construct a concrete instance of `ProjectSpecPromotionPoliciesStageSelectorPatchPtrInput` via:
//
//	        ProjectSpecPromotionPoliciesStageSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectSpecPromotionPoliciesStageSelectorPatchPtrInput interface {
	pulumi.Input

	ToProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput() ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput
	ToProjectSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(context.Context) ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput
}

type projectSpecPromotionPoliciesStageSelectorPatchPtrType ProjectSpecPromotionPoliciesStageSelectorPatchArgs

func ProjectSpecPromotionPoliciesStageSelectorPatchPtr(v *ProjectSpecPromotionPoliciesStageSelectorPatchArgs) ProjectSpecPromotionPoliciesStageSelectorPatchPtrInput {
	return (*projectSpecPromotionPoliciesStageSelectorPatchPtrType)(v)
}

func (*projectSpecPromotionPoliciesStageSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpecPromotionPoliciesStageSelectorPatch)(nil)).Elem()
}

func (i *projectSpecPromotionPoliciesStageSelectorPatchPtrType) ToProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput() ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return i.ToProjectSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *projectSpecPromotionPoliciesStageSelectorPatchPtrType) ToProjectSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput)
}

// StageSelector is a selector that matches the Stage resource to which
// this policy applies.
type ProjectSpecPromotionPoliciesStageSelectorPatchOutput struct{ *pulumi.OutputState }

func (ProjectSpecPromotionPoliciesStageSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelectorPatch)(nil)).Elem()
}

func (o ProjectSpecPromotionPoliciesStageSelectorPatchOutput) ToProjectSpecPromotionPoliciesStageSelectorPatchOutput() ProjectSpecPromotionPoliciesStageSelectorPatchOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesStageSelectorPatchOutput) ToProjectSpecPromotionPoliciesStageSelectorPatchOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorPatchOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesStageSelectorPatchOutput) ToProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput() ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return o.ToProjectSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(context.Background())
}

func (o ProjectSpecPromotionPoliciesStageSelectorPatchOutput) ToProjectSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSpecPromotionPoliciesStageSelectorPatch) *ProjectSpecPromotionPoliciesStageSelectorPatch {
		return &v
	}).(ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ProjectSpecPromotionPoliciesStageSelectorPatchOutput) MatchExpressions() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesStageSelectorPatch) []ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ProjectSpecPromotionPoliciesStageSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesStageSelectorPatch) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

// Name is the name of the resource to which this policy applies.
//
// It can be an exact name, a regex pattern (with prefix "regex:"), or a
// glob pattern (with prefix "glob:").
//
// When both Name and LabelSelector are specified, the Name is ANDed with
// the LabelSelector. I.e., the resource must match both the Name and
// LabelSelector to be selected by this policy.
//
// NOTE: Using a specific exact name is the most secure option. Pattern
// matching via regex or glob can be exploited by users with permissions to
// match promotion policies that weren't intended to apply to their
// resources. For example, a user could create a resource with a name
// deliberately crafted to match the pattern, potentially bypassing intended
// promotion controls.
func (o ProjectSpecPromotionPoliciesStageSelectorPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSpecPromotionPoliciesStageSelectorPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpecPromotionPoliciesStageSelectorPatch)(nil)).Elem()
}

func (o ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput) ToProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput() ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput) ToProjectSpecPromotionPoliciesStageSelectorPatchPtrOutputWithContext(ctx context.Context) ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput {
	return o
}

func (o ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput) Elem() ProjectSpecPromotionPoliciesStageSelectorPatchOutput {
	return o.ApplyT(func(v *ProjectSpecPromotionPoliciesStageSelectorPatch) ProjectSpecPromotionPoliciesStageSelectorPatch {
		if v != nil {
			return *v
		}
		var ret ProjectSpecPromotionPoliciesStageSelectorPatch
		return ret
	}).(ProjectSpecPromotionPoliciesStageSelectorPatchOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput) MatchExpressions() ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *ProjectSpecPromotionPoliciesStageSelectorPatch) []ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProjectSpecPromotionPoliciesStageSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// Name is the name of the resource to which this policy applies.
//
// It can be an exact name, a regex pattern (with prefix "regex:"), or a
// glob pattern (with prefix "glob:").
//
// When both Name and LabelSelector are specified, the Name is ANDed with
// the LabelSelector. I.e., the resource must match both the Name and
// LabelSelector to be selected by this policy.
//
// NOTE: Using a specific exact name is the most secure option. Pattern
// matching via regex or glob can be exploited by users with permissions to
// match promotion policies that weren't intended to apply to their
// resources. For example, a user could create a resource with a name
// deliberately crafted to match the pattern, potentially bypassing intended
// promotion controls.
func (o ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSpecPromotionPoliciesStageSelectorPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// WebhookReceiverConfig describes the configuration for a single webhook
// receiver.
type ProjectSpecWebhookReceivers struct {
	Github *ProjectSpecWebhookReceiversGithub `pulumi:"github"`
	// Name is the name of the webhook receiver.
	Name *string `pulumi:"name"`
}

// ProjectSpecWebhookReceiversInput is an input type that accepts ProjectSpecWebhookReceiversArgs and ProjectSpecWebhookReceiversOutput values.
// You can construct a concrete instance of `ProjectSpecWebhookReceiversInput` via:
//
//	ProjectSpecWebhookReceiversArgs{...}
type ProjectSpecWebhookReceiversInput interface {
	pulumi.Input

	ToProjectSpecWebhookReceiversOutput() ProjectSpecWebhookReceiversOutput
	ToProjectSpecWebhookReceiversOutputWithContext(context.Context) ProjectSpecWebhookReceiversOutput
}

// WebhookReceiverConfig describes the configuration for a single webhook
// receiver.
type ProjectSpecWebhookReceiversArgs struct {
	Github ProjectSpecWebhookReceiversGithubPtrInput `pulumi:"github"`
	// Name is the name of the webhook receiver.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProjectSpecWebhookReceiversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecWebhookReceivers)(nil)).Elem()
}

func (i ProjectSpecWebhookReceiversArgs) ToProjectSpecWebhookReceiversOutput() ProjectSpecWebhookReceiversOutput {
	return i.ToProjectSpecWebhookReceiversOutputWithContext(context.Background())
}

func (i ProjectSpecWebhookReceiversArgs) ToProjectSpecWebhookReceiversOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversOutput)
}

// ProjectSpecWebhookReceiversArrayInput is an input type that accepts ProjectSpecWebhookReceiversArray and ProjectSpecWebhookReceiversArrayOutput values.
// You can construct a concrete instance of `ProjectSpecWebhookReceiversArrayInput` via:
//
//	ProjectSpecWebhookReceiversArray{ ProjectSpecWebhookReceiversArgs{...} }
type ProjectSpecWebhookReceiversArrayInput interface {
	pulumi.Input

	ToProjectSpecWebhookReceiversArrayOutput() ProjectSpecWebhookReceiversArrayOutput
	ToProjectSpecWebhookReceiversArrayOutputWithContext(context.Context) ProjectSpecWebhookReceiversArrayOutput
}

type ProjectSpecWebhookReceiversArray []ProjectSpecWebhookReceiversInput

func (ProjectSpecWebhookReceiversArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSpecWebhookReceivers)(nil)).Elem()
}

func (i ProjectSpecWebhookReceiversArray) ToProjectSpecWebhookReceiversArrayOutput() ProjectSpecWebhookReceiversArrayOutput {
	return i.ToProjectSpecWebhookReceiversArrayOutputWithContext(context.Background())
}

func (i ProjectSpecWebhookReceiversArray) ToProjectSpecWebhookReceiversArrayOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversArrayOutput)
}

// WebhookReceiverConfig describes the configuration for a single webhook
// receiver.
type ProjectSpecWebhookReceiversOutput struct{ *pulumi.OutputState }

func (ProjectSpecWebhookReceiversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecWebhookReceivers)(nil)).Elem()
}

func (o ProjectSpecWebhookReceiversOutput) ToProjectSpecWebhookReceiversOutput() ProjectSpecWebhookReceiversOutput {
	return o
}

func (o ProjectSpecWebhookReceiversOutput) ToProjectSpecWebhookReceiversOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversOutput {
	return o
}

func (o ProjectSpecWebhookReceiversOutput) Github() ProjectSpecWebhookReceiversGithubPtrOutput {
	return o.ApplyT(func(v ProjectSpecWebhookReceivers) *ProjectSpecWebhookReceiversGithub { return v.Github }).(ProjectSpecWebhookReceiversGithubPtrOutput)
}

// Name is the name of the webhook receiver.
func (o ProjectSpecWebhookReceiversOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSpecWebhookReceivers) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProjectSpecWebhookReceiversArrayOutput struct{ *pulumi.OutputState }

func (ProjectSpecWebhookReceiversArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSpecWebhookReceivers)(nil)).Elem()
}

func (o ProjectSpecWebhookReceiversArrayOutput) ToProjectSpecWebhookReceiversArrayOutput() ProjectSpecWebhookReceiversArrayOutput {
	return o
}

func (o ProjectSpecWebhookReceiversArrayOutput) ToProjectSpecWebhookReceiversArrayOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversArrayOutput {
	return o
}

func (o ProjectSpecWebhookReceiversArrayOutput) Index(i pulumi.IntInput) ProjectSpecWebhookReceiversOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSpecWebhookReceivers {
		return vs[0].([]ProjectSpecWebhookReceivers)[vs[1].(int)]
	}).(ProjectSpecWebhookReceiversOutput)
}

// GitHub contains the configuration for a webhook receiver that is compatible with
// GitHub payloads.
type ProjectSpecWebhookReceiversGithub struct {
	SecretRef *ProjectSpecWebhookReceiversGithubSecretRef `pulumi:"secretRef"`
}

// ProjectSpecWebhookReceiversGithubInput is an input type that accepts ProjectSpecWebhookReceiversGithubArgs and ProjectSpecWebhookReceiversGithubOutput values.
// You can construct a concrete instance of `ProjectSpecWebhookReceiversGithubInput` via:
//
//	ProjectSpecWebhookReceiversGithubArgs{...}
type ProjectSpecWebhookReceiversGithubInput interface {
	pulumi.Input

	ToProjectSpecWebhookReceiversGithubOutput() ProjectSpecWebhookReceiversGithubOutput
	ToProjectSpecWebhookReceiversGithubOutputWithContext(context.Context) ProjectSpecWebhookReceiversGithubOutput
}

// GitHub contains the configuration for a webhook receiver that is compatible with
// GitHub payloads.
type ProjectSpecWebhookReceiversGithubArgs struct {
	SecretRef ProjectSpecWebhookReceiversGithubSecretRefPtrInput `pulumi:"secretRef"`
}

func (ProjectSpecWebhookReceiversGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecWebhookReceiversGithub)(nil)).Elem()
}

func (i ProjectSpecWebhookReceiversGithubArgs) ToProjectSpecWebhookReceiversGithubOutput() ProjectSpecWebhookReceiversGithubOutput {
	return i.ToProjectSpecWebhookReceiversGithubOutputWithContext(context.Background())
}

func (i ProjectSpecWebhookReceiversGithubArgs) ToProjectSpecWebhookReceiversGithubOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversGithubOutput)
}

func (i ProjectSpecWebhookReceiversGithubArgs) ToProjectSpecWebhookReceiversGithubPtrOutput() ProjectSpecWebhookReceiversGithubPtrOutput {
	return i.ToProjectSpecWebhookReceiversGithubPtrOutputWithContext(context.Background())
}

func (i ProjectSpecWebhookReceiversGithubArgs) ToProjectSpecWebhookReceiversGithubPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversGithubOutput).ToProjectSpecWebhookReceiversGithubPtrOutputWithContext(ctx)
}

// ProjectSpecWebhookReceiversGithubPtrInput is an input type that accepts ProjectSpecWebhookReceiversGithubArgs, ProjectSpecWebhookReceiversGithubPtr and ProjectSpecWebhookReceiversGithubPtrOutput values.
// You can construct a concrete instance of `ProjectSpecWebhookReceiversGithubPtrInput` via:
//
//	        ProjectSpecWebhookReceiversGithubArgs{...}
//
//	or:
//
//	        nil
type ProjectSpecWebhookReceiversGithubPtrInput interface {
	pulumi.Input

	ToProjectSpecWebhookReceiversGithubPtrOutput() ProjectSpecWebhookReceiversGithubPtrOutput
	ToProjectSpecWebhookReceiversGithubPtrOutputWithContext(context.Context) ProjectSpecWebhookReceiversGithubPtrOutput
}

type projectSpecWebhookReceiversGithubPtrType ProjectSpecWebhookReceiversGithubArgs

func ProjectSpecWebhookReceiversGithubPtr(v *ProjectSpecWebhookReceiversGithubArgs) ProjectSpecWebhookReceiversGithubPtrInput {
	return (*projectSpecWebhookReceiversGithubPtrType)(v)
}

func (*projectSpecWebhookReceiversGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpecWebhookReceiversGithub)(nil)).Elem()
}

func (i *projectSpecWebhookReceiversGithubPtrType) ToProjectSpecWebhookReceiversGithubPtrOutput() ProjectSpecWebhookReceiversGithubPtrOutput {
	return i.ToProjectSpecWebhookReceiversGithubPtrOutputWithContext(context.Background())
}

func (i *projectSpecWebhookReceiversGithubPtrType) ToProjectSpecWebhookReceiversGithubPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversGithubPtrOutput)
}

// GitHub contains the configuration for a webhook receiver that is compatible with
// GitHub payloads.
type ProjectSpecWebhookReceiversGithubOutput struct{ *pulumi.OutputState }

func (ProjectSpecWebhookReceiversGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecWebhookReceiversGithub)(nil)).Elem()
}

func (o ProjectSpecWebhookReceiversGithubOutput) ToProjectSpecWebhookReceiversGithubOutput() ProjectSpecWebhookReceiversGithubOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubOutput) ToProjectSpecWebhookReceiversGithubOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubOutput) ToProjectSpecWebhookReceiversGithubPtrOutput() ProjectSpecWebhookReceiversGithubPtrOutput {
	return o.ToProjectSpecWebhookReceiversGithubPtrOutputWithContext(context.Background())
}

func (o ProjectSpecWebhookReceiversGithubOutput) ToProjectSpecWebhookReceiversGithubPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSpecWebhookReceiversGithub) *ProjectSpecWebhookReceiversGithub {
		return &v
	}).(ProjectSpecWebhookReceiversGithubPtrOutput)
}

func (o ProjectSpecWebhookReceiversGithubOutput) SecretRef() ProjectSpecWebhookReceiversGithubSecretRefPtrOutput {
	return o.ApplyT(func(v ProjectSpecWebhookReceiversGithub) *ProjectSpecWebhookReceiversGithubSecretRef {
		return v.SecretRef
	}).(ProjectSpecWebhookReceiversGithubSecretRefPtrOutput)
}

type ProjectSpecWebhookReceiversGithubPtrOutput struct{ *pulumi.OutputState }

func (ProjectSpecWebhookReceiversGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpecWebhookReceiversGithub)(nil)).Elem()
}

func (o ProjectSpecWebhookReceiversGithubPtrOutput) ToProjectSpecWebhookReceiversGithubPtrOutput() ProjectSpecWebhookReceiversGithubPtrOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubPtrOutput) ToProjectSpecWebhookReceiversGithubPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubPtrOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubPtrOutput) Elem() ProjectSpecWebhookReceiversGithubOutput {
	return o.ApplyT(func(v *ProjectSpecWebhookReceiversGithub) ProjectSpecWebhookReceiversGithub {
		if v != nil {
			return *v
		}
		var ret ProjectSpecWebhookReceiversGithub
		return ret
	}).(ProjectSpecWebhookReceiversGithubOutput)
}

func (o ProjectSpecWebhookReceiversGithubPtrOutput) SecretRef() ProjectSpecWebhookReceiversGithubSecretRefPtrOutput {
	return o.ApplyT(func(v *ProjectSpecWebhookReceiversGithub) *ProjectSpecWebhookReceiversGithubSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ProjectSpecWebhookReceiversGithubSecretRefPtrOutput)
}

// GitHub contains the configuration for a webhook receiver that is compatible with
// GitHub payloads.
type ProjectSpecWebhookReceiversGithubPatch struct {
	SecretRef *ProjectSpecWebhookReceiversGithubSecretRefPatch `pulumi:"secretRef"`
}

// ProjectSpecWebhookReceiversGithubPatchInput is an input type that accepts ProjectSpecWebhookReceiversGithubPatchArgs and ProjectSpecWebhookReceiversGithubPatchOutput values.
// You can construct a concrete instance of `ProjectSpecWebhookReceiversGithubPatchInput` via:
//
//	ProjectSpecWebhookReceiversGithubPatchArgs{...}
type ProjectSpecWebhookReceiversGithubPatchInput interface {
	pulumi.Input

	ToProjectSpecWebhookReceiversGithubPatchOutput() ProjectSpecWebhookReceiversGithubPatchOutput
	ToProjectSpecWebhookReceiversGithubPatchOutputWithContext(context.Context) ProjectSpecWebhookReceiversGithubPatchOutput
}

// GitHub contains the configuration for a webhook receiver that is compatible with
// GitHub payloads.
type ProjectSpecWebhookReceiversGithubPatchArgs struct {
	SecretRef ProjectSpecWebhookReceiversGithubSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (ProjectSpecWebhookReceiversGithubPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecWebhookReceiversGithubPatch)(nil)).Elem()
}

func (i ProjectSpecWebhookReceiversGithubPatchArgs) ToProjectSpecWebhookReceiversGithubPatchOutput() ProjectSpecWebhookReceiversGithubPatchOutput {
	return i.ToProjectSpecWebhookReceiversGithubPatchOutputWithContext(context.Background())
}

func (i ProjectSpecWebhookReceiversGithubPatchArgs) ToProjectSpecWebhookReceiversGithubPatchOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversGithubPatchOutput)
}

func (i ProjectSpecWebhookReceiversGithubPatchArgs) ToProjectSpecWebhookReceiversGithubPatchPtrOutput() ProjectSpecWebhookReceiversGithubPatchPtrOutput {
	return i.ToProjectSpecWebhookReceiversGithubPatchPtrOutputWithContext(context.Background())
}

func (i ProjectSpecWebhookReceiversGithubPatchArgs) ToProjectSpecWebhookReceiversGithubPatchPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversGithubPatchOutput).ToProjectSpecWebhookReceiversGithubPatchPtrOutputWithContext(ctx)
}

// ProjectSpecWebhookReceiversGithubPatchPtrInput is an input type that accepts ProjectSpecWebhookReceiversGithubPatchArgs, ProjectSpecWebhookReceiversGithubPatchPtr and ProjectSpecWebhookReceiversGithubPatchPtrOutput values.
// You can construct a concrete instance of `ProjectSpecWebhookReceiversGithubPatchPtrInput` via:
//
//	        ProjectSpecWebhookReceiversGithubPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectSpecWebhookReceiversGithubPatchPtrInput interface {
	pulumi.Input

	ToProjectSpecWebhookReceiversGithubPatchPtrOutput() ProjectSpecWebhookReceiversGithubPatchPtrOutput
	ToProjectSpecWebhookReceiversGithubPatchPtrOutputWithContext(context.Context) ProjectSpecWebhookReceiversGithubPatchPtrOutput
}

type projectSpecWebhookReceiversGithubPatchPtrType ProjectSpecWebhookReceiversGithubPatchArgs

func ProjectSpecWebhookReceiversGithubPatchPtr(v *ProjectSpecWebhookReceiversGithubPatchArgs) ProjectSpecWebhookReceiversGithubPatchPtrInput {
	return (*projectSpecWebhookReceiversGithubPatchPtrType)(v)
}

func (*projectSpecWebhookReceiversGithubPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpecWebhookReceiversGithubPatch)(nil)).Elem()
}

func (i *projectSpecWebhookReceiversGithubPatchPtrType) ToProjectSpecWebhookReceiversGithubPatchPtrOutput() ProjectSpecWebhookReceiversGithubPatchPtrOutput {
	return i.ToProjectSpecWebhookReceiversGithubPatchPtrOutputWithContext(context.Background())
}

func (i *projectSpecWebhookReceiversGithubPatchPtrType) ToProjectSpecWebhookReceiversGithubPatchPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversGithubPatchPtrOutput)
}

// GitHub contains the configuration for a webhook receiver that is compatible with
// GitHub payloads.
type ProjectSpecWebhookReceiversGithubPatchOutput struct{ *pulumi.OutputState }

func (ProjectSpecWebhookReceiversGithubPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecWebhookReceiversGithubPatch)(nil)).Elem()
}

func (o ProjectSpecWebhookReceiversGithubPatchOutput) ToProjectSpecWebhookReceiversGithubPatchOutput() ProjectSpecWebhookReceiversGithubPatchOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubPatchOutput) ToProjectSpecWebhookReceiversGithubPatchOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubPatchOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubPatchOutput) ToProjectSpecWebhookReceiversGithubPatchPtrOutput() ProjectSpecWebhookReceiversGithubPatchPtrOutput {
	return o.ToProjectSpecWebhookReceiversGithubPatchPtrOutputWithContext(context.Background())
}

func (o ProjectSpecWebhookReceiversGithubPatchOutput) ToProjectSpecWebhookReceiversGithubPatchPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSpecWebhookReceiversGithubPatch) *ProjectSpecWebhookReceiversGithubPatch {
		return &v
	}).(ProjectSpecWebhookReceiversGithubPatchPtrOutput)
}

func (o ProjectSpecWebhookReceiversGithubPatchOutput) SecretRef() ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return o.ApplyT(func(v ProjectSpecWebhookReceiversGithubPatch) *ProjectSpecWebhookReceiversGithubSecretRefPatch {
		return v.SecretRef
	}).(ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput)
}

type ProjectSpecWebhookReceiversGithubPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectSpecWebhookReceiversGithubPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpecWebhookReceiversGithubPatch)(nil)).Elem()
}

func (o ProjectSpecWebhookReceiversGithubPatchPtrOutput) ToProjectSpecWebhookReceiversGithubPatchPtrOutput() ProjectSpecWebhookReceiversGithubPatchPtrOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubPatchPtrOutput) ToProjectSpecWebhookReceiversGithubPatchPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubPatchPtrOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubPatchPtrOutput) Elem() ProjectSpecWebhookReceiversGithubPatchOutput {
	return o.ApplyT(func(v *ProjectSpecWebhookReceiversGithubPatch) ProjectSpecWebhookReceiversGithubPatch {
		if v != nil {
			return *v
		}
		var ret ProjectSpecWebhookReceiversGithubPatch
		return ret
	}).(ProjectSpecWebhookReceiversGithubPatchOutput)
}

func (o ProjectSpecWebhookReceiversGithubPatchPtrOutput) SecretRef() ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *ProjectSpecWebhookReceiversGithubPatch) *ProjectSpecWebhookReceiversGithubSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput)
}

// SecretRef contains a reference to a Secret in the same namespace as the ProjectConfig.
//
// The Secret is expected to contain a `token` key with the secret token configured for
// in GitHub for the webhook. For more information about this token, please refer to the
// GitHub documentation: https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries
//
// The value of the token key goes in the "Secret" field when registering a GitHub App or webhook in the GitHub UI.
type ProjectSpecWebhookReceiversGithubSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// ProjectSpecWebhookReceiversGithubSecretRefInput is an input type that accepts ProjectSpecWebhookReceiversGithubSecretRefArgs and ProjectSpecWebhookReceiversGithubSecretRefOutput values.
// You can construct a concrete instance of `ProjectSpecWebhookReceiversGithubSecretRefInput` via:
//
//	ProjectSpecWebhookReceiversGithubSecretRefArgs{...}
type ProjectSpecWebhookReceiversGithubSecretRefInput interface {
	pulumi.Input

	ToProjectSpecWebhookReceiversGithubSecretRefOutput() ProjectSpecWebhookReceiversGithubSecretRefOutput
	ToProjectSpecWebhookReceiversGithubSecretRefOutputWithContext(context.Context) ProjectSpecWebhookReceiversGithubSecretRefOutput
}

// SecretRef contains a reference to a Secret in the same namespace as the ProjectConfig.
//
// The Secret is expected to contain a `token` key with the secret token configured for
// in GitHub for the webhook. For more information about this token, please refer to the
// GitHub documentation: https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries
//
// The value of the token key goes in the "Secret" field when registering a GitHub App or webhook in the GitHub UI.
type ProjectSpecWebhookReceiversGithubSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProjectSpecWebhookReceiversGithubSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecWebhookReceiversGithubSecretRef)(nil)).Elem()
}

func (i ProjectSpecWebhookReceiversGithubSecretRefArgs) ToProjectSpecWebhookReceiversGithubSecretRefOutput() ProjectSpecWebhookReceiversGithubSecretRefOutput {
	return i.ToProjectSpecWebhookReceiversGithubSecretRefOutputWithContext(context.Background())
}

func (i ProjectSpecWebhookReceiversGithubSecretRefArgs) ToProjectSpecWebhookReceiversGithubSecretRefOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversGithubSecretRefOutput)
}

func (i ProjectSpecWebhookReceiversGithubSecretRefArgs) ToProjectSpecWebhookReceiversGithubSecretRefPtrOutput() ProjectSpecWebhookReceiversGithubSecretRefPtrOutput {
	return i.ToProjectSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(context.Background())
}

func (i ProjectSpecWebhookReceiversGithubSecretRefArgs) ToProjectSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversGithubSecretRefOutput).ToProjectSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(ctx)
}

// ProjectSpecWebhookReceiversGithubSecretRefPtrInput is an input type that accepts ProjectSpecWebhookReceiversGithubSecretRefArgs, ProjectSpecWebhookReceiversGithubSecretRefPtr and ProjectSpecWebhookReceiversGithubSecretRefPtrOutput values.
// You can construct a concrete instance of `ProjectSpecWebhookReceiversGithubSecretRefPtrInput` via:
//
//	        ProjectSpecWebhookReceiversGithubSecretRefArgs{...}
//
//	or:
//
//	        nil
type ProjectSpecWebhookReceiversGithubSecretRefPtrInput interface {
	pulumi.Input

	ToProjectSpecWebhookReceiversGithubSecretRefPtrOutput() ProjectSpecWebhookReceiversGithubSecretRefPtrOutput
	ToProjectSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(context.Context) ProjectSpecWebhookReceiversGithubSecretRefPtrOutput
}

type projectSpecWebhookReceiversGithubSecretRefPtrType ProjectSpecWebhookReceiversGithubSecretRefArgs

func ProjectSpecWebhookReceiversGithubSecretRefPtr(v *ProjectSpecWebhookReceiversGithubSecretRefArgs) ProjectSpecWebhookReceiversGithubSecretRefPtrInput {
	return (*projectSpecWebhookReceiversGithubSecretRefPtrType)(v)
}

func (*projectSpecWebhookReceiversGithubSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpecWebhookReceiversGithubSecretRef)(nil)).Elem()
}

func (i *projectSpecWebhookReceiversGithubSecretRefPtrType) ToProjectSpecWebhookReceiversGithubSecretRefPtrOutput() ProjectSpecWebhookReceiversGithubSecretRefPtrOutput {
	return i.ToProjectSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(context.Background())
}

func (i *projectSpecWebhookReceiversGithubSecretRefPtrType) ToProjectSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversGithubSecretRefPtrOutput)
}

// SecretRef contains a reference to a Secret in the same namespace as the ProjectConfig.
//
// The Secret is expected to contain a `token` key with the secret token configured for
// in GitHub for the webhook. For more information about this token, please refer to the
// GitHub documentation: https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries
//
// The value of the token key goes in the "Secret" field when registering a GitHub App or webhook in the GitHub UI.
type ProjectSpecWebhookReceiversGithubSecretRefOutput struct{ *pulumi.OutputState }

func (ProjectSpecWebhookReceiversGithubSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecWebhookReceiversGithubSecretRef)(nil)).Elem()
}

func (o ProjectSpecWebhookReceiversGithubSecretRefOutput) ToProjectSpecWebhookReceiversGithubSecretRefOutput() ProjectSpecWebhookReceiversGithubSecretRefOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubSecretRefOutput) ToProjectSpecWebhookReceiversGithubSecretRefOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubSecretRefOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubSecretRefOutput) ToProjectSpecWebhookReceiversGithubSecretRefPtrOutput() ProjectSpecWebhookReceiversGithubSecretRefPtrOutput {
	return o.ToProjectSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(context.Background())
}

func (o ProjectSpecWebhookReceiversGithubSecretRefOutput) ToProjectSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSpecWebhookReceiversGithubSecretRef) *ProjectSpecWebhookReceiversGithubSecretRef {
		return &v
	}).(ProjectSpecWebhookReceiversGithubSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ProjectSpecWebhookReceiversGithubSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSpecWebhookReceiversGithubSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProjectSpecWebhookReceiversGithubSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ProjectSpecWebhookReceiversGithubSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpecWebhookReceiversGithubSecretRef)(nil)).Elem()
}

func (o ProjectSpecWebhookReceiversGithubSecretRefPtrOutput) ToProjectSpecWebhookReceiversGithubSecretRefPtrOutput() ProjectSpecWebhookReceiversGithubSecretRefPtrOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubSecretRefPtrOutput) ToProjectSpecWebhookReceiversGithubSecretRefPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubSecretRefPtrOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubSecretRefPtrOutput) Elem() ProjectSpecWebhookReceiversGithubSecretRefOutput {
	return o.ApplyT(func(v *ProjectSpecWebhookReceiversGithubSecretRef) ProjectSpecWebhookReceiversGithubSecretRef {
		if v != nil {
			return *v
		}
		var ret ProjectSpecWebhookReceiversGithubSecretRef
		return ret
	}).(ProjectSpecWebhookReceiversGithubSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ProjectSpecWebhookReceiversGithubSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSpecWebhookReceiversGithubSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// SecretRef contains a reference to a Secret in the same namespace as the ProjectConfig.
//
// The Secret is expected to contain a `token` key with the secret token configured for
// in GitHub for the webhook. For more information about this token, please refer to the
// GitHub documentation: https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries
//
// The value of the token key goes in the "Secret" field when registering a GitHub App or webhook in the GitHub UI.
type ProjectSpecWebhookReceiversGithubSecretRefPatch struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
}

// ProjectSpecWebhookReceiversGithubSecretRefPatchInput is an input type that accepts ProjectSpecWebhookReceiversGithubSecretRefPatchArgs and ProjectSpecWebhookReceiversGithubSecretRefPatchOutput values.
// You can construct a concrete instance of `ProjectSpecWebhookReceiversGithubSecretRefPatchInput` via:
//
//	ProjectSpecWebhookReceiversGithubSecretRefPatchArgs{...}
type ProjectSpecWebhookReceiversGithubSecretRefPatchInput interface {
	pulumi.Input

	ToProjectSpecWebhookReceiversGithubSecretRefPatchOutput() ProjectSpecWebhookReceiversGithubSecretRefPatchOutput
	ToProjectSpecWebhookReceiversGithubSecretRefPatchOutputWithContext(context.Context) ProjectSpecWebhookReceiversGithubSecretRefPatchOutput
}

// SecretRef contains a reference to a Secret in the same namespace as the ProjectConfig.
//
// The Secret is expected to contain a `token` key with the secret token configured for
// in GitHub for the webhook. For more information about this token, please refer to the
// GitHub documentation: https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries
//
// The value of the token key goes in the "Secret" field when registering a GitHub App or webhook in the GitHub UI.
type ProjectSpecWebhookReceiversGithubSecretRefPatchArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProjectSpecWebhookReceiversGithubSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecWebhookReceiversGithubSecretRefPatch)(nil)).Elem()
}

func (i ProjectSpecWebhookReceiversGithubSecretRefPatchArgs) ToProjectSpecWebhookReceiversGithubSecretRefPatchOutput() ProjectSpecWebhookReceiversGithubSecretRefPatchOutput {
	return i.ToProjectSpecWebhookReceiversGithubSecretRefPatchOutputWithContext(context.Background())
}

func (i ProjectSpecWebhookReceiversGithubSecretRefPatchArgs) ToProjectSpecWebhookReceiversGithubSecretRefPatchOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversGithubSecretRefPatchOutput)
}

func (i ProjectSpecWebhookReceiversGithubSecretRefPatchArgs) ToProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput() ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return i.ToProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i ProjectSpecWebhookReceiversGithubSecretRefPatchArgs) ToProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversGithubSecretRefPatchOutput).ToProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(ctx)
}

// ProjectSpecWebhookReceiversGithubSecretRefPatchPtrInput is an input type that accepts ProjectSpecWebhookReceiversGithubSecretRefPatchArgs, ProjectSpecWebhookReceiversGithubSecretRefPatchPtr and ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `ProjectSpecWebhookReceiversGithubSecretRefPatchPtrInput` via:
//
//	        ProjectSpecWebhookReceiversGithubSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectSpecWebhookReceiversGithubSecretRefPatchPtrInput interface {
	pulumi.Input

	ToProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput() ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput
	ToProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(context.Context) ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput
}

type projectSpecWebhookReceiversGithubSecretRefPatchPtrType ProjectSpecWebhookReceiversGithubSecretRefPatchArgs

func ProjectSpecWebhookReceiversGithubSecretRefPatchPtr(v *ProjectSpecWebhookReceiversGithubSecretRefPatchArgs) ProjectSpecWebhookReceiversGithubSecretRefPatchPtrInput {
	return (*projectSpecWebhookReceiversGithubSecretRefPatchPtrType)(v)
}

func (*projectSpecWebhookReceiversGithubSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpecWebhookReceiversGithubSecretRefPatch)(nil)).Elem()
}

func (i *projectSpecWebhookReceiversGithubSecretRefPatchPtrType) ToProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput() ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return i.ToProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *projectSpecWebhookReceiversGithubSecretRefPatchPtrType) ToProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput)
}

// SecretRef contains a reference to a Secret in the same namespace as the ProjectConfig.
//
// The Secret is expected to contain a `token` key with the secret token configured for
// in GitHub for the webhook. For more information about this token, please refer to the
// GitHub documentation: https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries
//
// The value of the token key goes in the "Secret" field when registering a GitHub App or webhook in the GitHub UI.
type ProjectSpecWebhookReceiversGithubSecretRefPatchOutput struct{ *pulumi.OutputState }

func (ProjectSpecWebhookReceiversGithubSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecWebhookReceiversGithubSecretRefPatch)(nil)).Elem()
}

func (o ProjectSpecWebhookReceiversGithubSecretRefPatchOutput) ToProjectSpecWebhookReceiversGithubSecretRefPatchOutput() ProjectSpecWebhookReceiversGithubSecretRefPatchOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubSecretRefPatchOutput) ToProjectSpecWebhookReceiversGithubSecretRefPatchOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubSecretRefPatchOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubSecretRefPatchOutput) ToProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput() ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return o.ToProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o ProjectSpecWebhookReceiversGithubSecretRefPatchOutput) ToProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSpecWebhookReceiversGithubSecretRefPatch) *ProjectSpecWebhookReceiversGithubSecretRefPatch {
		return &v
	}).(ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ProjectSpecWebhookReceiversGithubSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSpecWebhookReceiversGithubSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSpecWebhookReceiversGithubSecretRefPatch)(nil)).Elem()
}

func (o ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput) ToProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput() ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput) ToProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput {
	return o
}

func (o ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput) Elem() ProjectSpecWebhookReceiversGithubSecretRefPatchOutput {
	return o.ApplyT(func(v *ProjectSpecWebhookReceiversGithubSecretRefPatch) ProjectSpecWebhookReceiversGithubSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret ProjectSpecWebhookReceiversGithubSecretRefPatch
		return ret
	}).(ProjectSpecWebhookReceiversGithubSecretRefPatchOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSpecWebhookReceiversGithubSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// WebhookReceiverConfig describes the configuration for a single webhook
// receiver.
type ProjectSpecWebhookReceiversPatch struct {
	Github *ProjectSpecWebhookReceiversGithubPatch `pulumi:"github"`
	// Name is the name of the webhook receiver.
	Name *string `pulumi:"name"`
}

// ProjectSpecWebhookReceiversPatchInput is an input type that accepts ProjectSpecWebhookReceiversPatchArgs and ProjectSpecWebhookReceiversPatchOutput values.
// You can construct a concrete instance of `ProjectSpecWebhookReceiversPatchInput` via:
//
//	ProjectSpecWebhookReceiversPatchArgs{...}
type ProjectSpecWebhookReceiversPatchInput interface {
	pulumi.Input

	ToProjectSpecWebhookReceiversPatchOutput() ProjectSpecWebhookReceiversPatchOutput
	ToProjectSpecWebhookReceiversPatchOutputWithContext(context.Context) ProjectSpecWebhookReceiversPatchOutput
}

// WebhookReceiverConfig describes the configuration for a single webhook
// receiver.
type ProjectSpecWebhookReceiversPatchArgs struct {
	Github ProjectSpecWebhookReceiversGithubPatchPtrInput `pulumi:"github"`
	// Name is the name of the webhook receiver.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProjectSpecWebhookReceiversPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecWebhookReceiversPatch)(nil)).Elem()
}

func (i ProjectSpecWebhookReceiversPatchArgs) ToProjectSpecWebhookReceiversPatchOutput() ProjectSpecWebhookReceiversPatchOutput {
	return i.ToProjectSpecWebhookReceiversPatchOutputWithContext(context.Background())
}

func (i ProjectSpecWebhookReceiversPatchArgs) ToProjectSpecWebhookReceiversPatchOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversPatchOutput)
}

// ProjectSpecWebhookReceiversPatchArrayInput is an input type that accepts ProjectSpecWebhookReceiversPatchArray and ProjectSpecWebhookReceiversPatchArrayOutput values.
// You can construct a concrete instance of `ProjectSpecWebhookReceiversPatchArrayInput` via:
//
//	ProjectSpecWebhookReceiversPatchArray{ ProjectSpecWebhookReceiversPatchArgs{...} }
type ProjectSpecWebhookReceiversPatchArrayInput interface {
	pulumi.Input

	ToProjectSpecWebhookReceiversPatchArrayOutput() ProjectSpecWebhookReceiversPatchArrayOutput
	ToProjectSpecWebhookReceiversPatchArrayOutputWithContext(context.Context) ProjectSpecWebhookReceiversPatchArrayOutput
}

type ProjectSpecWebhookReceiversPatchArray []ProjectSpecWebhookReceiversPatchInput

func (ProjectSpecWebhookReceiversPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSpecWebhookReceiversPatch)(nil)).Elem()
}

func (i ProjectSpecWebhookReceiversPatchArray) ToProjectSpecWebhookReceiversPatchArrayOutput() ProjectSpecWebhookReceiversPatchArrayOutput {
	return i.ToProjectSpecWebhookReceiversPatchArrayOutputWithContext(context.Background())
}

func (i ProjectSpecWebhookReceiversPatchArray) ToProjectSpecWebhookReceiversPatchArrayOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSpecWebhookReceiversPatchArrayOutput)
}

// WebhookReceiverConfig describes the configuration for a single webhook
// receiver.
type ProjectSpecWebhookReceiversPatchOutput struct{ *pulumi.OutputState }

func (ProjectSpecWebhookReceiversPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSpecWebhookReceiversPatch)(nil)).Elem()
}

func (o ProjectSpecWebhookReceiversPatchOutput) ToProjectSpecWebhookReceiversPatchOutput() ProjectSpecWebhookReceiversPatchOutput {
	return o
}

func (o ProjectSpecWebhookReceiversPatchOutput) ToProjectSpecWebhookReceiversPatchOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversPatchOutput {
	return o
}

func (o ProjectSpecWebhookReceiversPatchOutput) Github() ProjectSpecWebhookReceiversGithubPatchPtrOutput {
	return o.ApplyT(func(v ProjectSpecWebhookReceiversPatch) *ProjectSpecWebhookReceiversGithubPatch { return v.Github }).(ProjectSpecWebhookReceiversGithubPatchPtrOutput)
}

// Name is the name of the webhook receiver.
func (o ProjectSpecWebhookReceiversPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSpecWebhookReceiversPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProjectSpecWebhookReceiversPatchArrayOutput struct{ *pulumi.OutputState }

func (ProjectSpecWebhookReceiversPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSpecWebhookReceiversPatch)(nil)).Elem()
}

func (o ProjectSpecWebhookReceiversPatchArrayOutput) ToProjectSpecWebhookReceiversPatchArrayOutput() ProjectSpecWebhookReceiversPatchArrayOutput {
	return o
}

func (o ProjectSpecWebhookReceiversPatchArrayOutput) ToProjectSpecWebhookReceiversPatchArrayOutputWithContext(ctx context.Context) ProjectSpecWebhookReceiversPatchArrayOutput {
	return o
}

func (o ProjectSpecWebhookReceiversPatchArrayOutput) Index(i pulumi.IntInput) ProjectSpecWebhookReceiversPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSpecWebhookReceiversPatch {
		return vs[0].([]ProjectSpecWebhookReceiversPatch)[vs[1].(int)]
	}).(ProjectSpecWebhookReceiversPatchOutput)
}

// Status describes the Project's current status.
type ProjectStatus struct {
	// Conditions contains the last observations of the Project's current
	// state.
	Conditions []ProjectStatusConditions `pulumi:"conditions"`
	Stats      *ProjectStatusStats       `pulumi:"stats"`
}

// ProjectStatusInput is an input type that accepts ProjectStatusArgs and ProjectStatusOutput values.
// You can construct a concrete instance of `ProjectStatusInput` via:
//
//	ProjectStatusArgs{...}
type ProjectStatusInput interface {
	pulumi.Input

	ToProjectStatusOutput() ProjectStatusOutput
	ToProjectStatusOutputWithContext(context.Context) ProjectStatusOutput
}

// Status describes the Project's current status.
type ProjectStatusArgs struct {
	// Conditions contains the last observations of the Project's current
	// state.
	Conditions ProjectStatusConditionsArrayInput `pulumi:"conditions"`
	Stats      ProjectStatusStatsPtrInput        `pulumi:"stats"`
}

func (ProjectStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatus)(nil)).Elem()
}

func (i ProjectStatusArgs) ToProjectStatusOutput() ProjectStatusOutput {
	return i.ToProjectStatusOutputWithContext(context.Background())
}

func (i ProjectStatusArgs) ToProjectStatusOutputWithContext(ctx context.Context) ProjectStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusOutput)
}

func (i ProjectStatusArgs) ToProjectStatusPtrOutput() ProjectStatusPtrOutput {
	return i.ToProjectStatusPtrOutputWithContext(context.Background())
}

func (i ProjectStatusArgs) ToProjectStatusPtrOutputWithContext(ctx context.Context) ProjectStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusOutput).ToProjectStatusPtrOutputWithContext(ctx)
}

// ProjectStatusPtrInput is an input type that accepts ProjectStatusArgs, ProjectStatusPtr and ProjectStatusPtrOutput values.
// You can construct a concrete instance of `ProjectStatusPtrInput` via:
//
//	        ProjectStatusArgs{...}
//
//	or:
//
//	        nil
type ProjectStatusPtrInput interface {
	pulumi.Input

	ToProjectStatusPtrOutput() ProjectStatusPtrOutput
	ToProjectStatusPtrOutputWithContext(context.Context) ProjectStatusPtrOutput
}

type projectStatusPtrType ProjectStatusArgs

func ProjectStatusPtr(v *ProjectStatusArgs) ProjectStatusPtrInput {
	return (*projectStatusPtrType)(v)
}

func (*projectStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatus)(nil)).Elem()
}

func (i *projectStatusPtrType) ToProjectStatusPtrOutput() ProjectStatusPtrOutput {
	return i.ToProjectStatusPtrOutputWithContext(context.Background())
}

func (i *projectStatusPtrType) ToProjectStatusPtrOutputWithContext(ctx context.Context) ProjectStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusPtrOutput)
}

// Status describes the Project's current status.
type ProjectStatusOutput struct{ *pulumi.OutputState }

func (ProjectStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatus)(nil)).Elem()
}

func (o ProjectStatusOutput) ToProjectStatusOutput() ProjectStatusOutput {
	return o
}

func (o ProjectStatusOutput) ToProjectStatusOutputWithContext(ctx context.Context) ProjectStatusOutput {
	return o
}

func (o ProjectStatusOutput) ToProjectStatusPtrOutput() ProjectStatusPtrOutput {
	return o.ToProjectStatusPtrOutputWithContext(context.Background())
}

func (o ProjectStatusOutput) ToProjectStatusPtrOutputWithContext(ctx context.Context) ProjectStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectStatus) *ProjectStatus {
		return &v
	}).(ProjectStatusPtrOutput)
}

// Conditions contains the last observations of the Project's current
// state.
func (o ProjectStatusOutput) Conditions() ProjectStatusConditionsArrayOutput {
	return o.ApplyT(func(v ProjectStatus) []ProjectStatusConditions { return v.Conditions }).(ProjectStatusConditionsArrayOutput)
}

func (o ProjectStatusOutput) Stats() ProjectStatusStatsPtrOutput {
	return o.ApplyT(func(v ProjectStatus) *ProjectStatusStats { return v.Stats }).(ProjectStatusStatsPtrOutput)
}

type ProjectStatusPtrOutput struct{ *pulumi.OutputState }

func (ProjectStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatus)(nil)).Elem()
}

func (o ProjectStatusPtrOutput) ToProjectStatusPtrOutput() ProjectStatusPtrOutput {
	return o
}

func (o ProjectStatusPtrOutput) ToProjectStatusPtrOutputWithContext(ctx context.Context) ProjectStatusPtrOutput {
	return o
}

func (o ProjectStatusPtrOutput) Elem() ProjectStatusOutput {
	return o.ApplyT(func(v *ProjectStatus) ProjectStatus {
		if v != nil {
			return *v
		}
		var ret ProjectStatus
		return ret
	}).(ProjectStatusOutput)
}

// Conditions contains the last observations of the Project's current
// state.
func (o ProjectStatusPtrOutput) Conditions() ProjectStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ProjectStatus) []ProjectStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ProjectStatusConditionsArrayOutput)
}

func (o ProjectStatusPtrOutput) Stats() ProjectStatusStatsPtrOutput {
	return o.ApplyT(func(v *ProjectStatus) *ProjectStatusStats {
		if v == nil {
			return nil
		}
		return v.Stats
	}).(ProjectStatusStatsPtrOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProjectStatusConditions struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message *string `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason *string `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status *string `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type *string `pulumi:"type"`
}

// ProjectStatusConditionsInput is an input type that accepts ProjectStatusConditionsArgs and ProjectStatusConditionsOutput values.
// You can construct a concrete instance of `ProjectStatusConditionsInput` via:
//
//	ProjectStatusConditionsArgs{...}
type ProjectStatusConditionsInput interface {
	pulumi.Input

	ToProjectStatusConditionsOutput() ProjectStatusConditionsOutput
	ToProjectStatusConditionsOutputWithContext(context.Context) ProjectStatusConditionsOutput
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProjectStatusConditionsArgs struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ProjectStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusConditions)(nil)).Elem()
}

func (i ProjectStatusConditionsArgs) ToProjectStatusConditionsOutput() ProjectStatusConditionsOutput {
	return i.ToProjectStatusConditionsOutputWithContext(context.Background())
}

func (i ProjectStatusConditionsArgs) ToProjectStatusConditionsOutputWithContext(ctx context.Context) ProjectStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusConditionsOutput)
}

// ProjectStatusConditionsArrayInput is an input type that accepts ProjectStatusConditionsArray and ProjectStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ProjectStatusConditionsArrayInput` via:
//
//	ProjectStatusConditionsArray{ ProjectStatusConditionsArgs{...} }
type ProjectStatusConditionsArrayInput interface {
	pulumi.Input

	ToProjectStatusConditionsArrayOutput() ProjectStatusConditionsArrayOutput
	ToProjectStatusConditionsArrayOutputWithContext(context.Context) ProjectStatusConditionsArrayOutput
}

type ProjectStatusConditionsArray []ProjectStatusConditionsInput

func (ProjectStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectStatusConditions)(nil)).Elem()
}

func (i ProjectStatusConditionsArray) ToProjectStatusConditionsArrayOutput() ProjectStatusConditionsArrayOutput {
	return i.ToProjectStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ProjectStatusConditionsArray) ToProjectStatusConditionsArrayOutputWithContext(ctx context.Context) ProjectStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusConditionsArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProjectStatusConditionsOutput struct{ *pulumi.OutputState }

func (ProjectStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusConditions)(nil)).Elem()
}

func (o ProjectStatusConditionsOutput) ToProjectStatusConditionsOutput() ProjectStatusConditionsOutput {
	return o
}

func (o ProjectStatusConditionsOutput) ToProjectStatusConditionsOutputWithContext(ctx context.Context) ProjectStatusConditionsOutput {
	return o
}

// lastTransitionTime is the last time the condition transitioned from one status to another.
// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
func (o ProjectStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human readable message indicating details about the transition.
// This may be an empty string.
func (o ProjectStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// observedGeneration represents the .metadata.generation that the condition was set based upon.
// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the instance.
func (o ProjectStatusConditionsOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectStatusConditions) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// reason contains a programmatic identifier indicating the reason for the condition's last transition.
// Producers of specific condition types may define expected values and meanings for this field,
// and whether the values are considered a guaranteed API.
// The value should be a CamelCase string.
// This field may not be empty.
func (o ProjectStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status of the condition, one of True, False, Unknown.
func (o ProjectStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of condition in CamelCase or in foo.example.com/CamelCase.
func (o ProjectStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProjectStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ProjectStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectStatusConditions)(nil)).Elem()
}

func (o ProjectStatusConditionsArrayOutput) ToProjectStatusConditionsArrayOutput() ProjectStatusConditionsArrayOutput {
	return o
}

func (o ProjectStatusConditionsArrayOutput) ToProjectStatusConditionsArrayOutputWithContext(ctx context.Context) ProjectStatusConditionsArrayOutput {
	return o
}

func (o ProjectStatusConditionsArrayOutput) Index(i pulumi.IntInput) ProjectStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectStatusConditions {
		return vs[0].([]ProjectStatusConditions)[vs[1].(int)]
	}).(ProjectStatusConditionsOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProjectStatusConditionsPatch struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message *string `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason *string `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status *string `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type *string `pulumi:"type"`
}

// ProjectStatusConditionsPatchInput is an input type that accepts ProjectStatusConditionsPatchArgs and ProjectStatusConditionsPatchOutput values.
// You can construct a concrete instance of `ProjectStatusConditionsPatchInput` via:
//
//	ProjectStatusConditionsPatchArgs{...}
type ProjectStatusConditionsPatchInput interface {
	pulumi.Input

	ToProjectStatusConditionsPatchOutput() ProjectStatusConditionsPatchOutput
	ToProjectStatusConditionsPatchOutputWithContext(context.Context) ProjectStatusConditionsPatchOutput
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProjectStatusConditionsPatchArgs struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ProjectStatusConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusConditionsPatch)(nil)).Elem()
}

func (i ProjectStatusConditionsPatchArgs) ToProjectStatusConditionsPatchOutput() ProjectStatusConditionsPatchOutput {
	return i.ToProjectStatusConditionsPatchOutputWithContext(context.Background())
}

func (i ProjectStatusConditionsPatchArgs) ToProjectStatusConditionsPatchOutputWithContext(ctx context.Context) ProjectStatusConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusConditionsPatchOutput)
}

// ProjectStatusConditionsPatchArrayInput is an input type that accepts ProjectStatusConditionsPatchArray and ProjectStatusConditionsPatchArrayOutput values.
// You can construct a concrete instance of `ProjectStatusConditionsPatchArrayInput` via:
//
//	ProjectStatusConditionsPatchArray{ ProjectStatusConditionsPatchArgs{...} }
type ProjectStatusConditionsPatchArrayInput interface {
	pulumi.Input

	ToProjectStatusConditionsPatchArrayOutput() ProjectStatusConditionsPatchArrayOutput
	ToProjectStatusConditionsPatchArrayOutputWithContext(context.Context) ProjectStatusConditionsPatchArrayOutput
}

type ProjectStatusConditionsPatchArray []ProjectStatusConditionsPatchInput

func (ProjectStatusConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectStatusConditionsPatch)(nil)).Elem()
}

func (i ProjectStatusConditionsPatchArray) ToProjectStatusConditionsPatchArrayOutput() ProjectStatusConditionsPatchArrayOutput {
	return i.ToProjectStatusConditionsPatchArrayOutputWithContext(context.Background())
}

func (i ProjectStatusConditionsPatchArray) ToProjectStatusConditionsPatchArrayOutputWithContext(ctx context.Context) ProjectStatusConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusConditionsPatchArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProjectStatusConditionsPatchOutput struct{ *pulumi.OutputState }

func (ProjectStatusConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusConditionsPatch)(nil)).Elem()
}

func (o ProjectStatusConditionsPatchOutput) ToProjectStatusConditionsPatchOutput() ProjectStatusConditionsPatchOutput {
	return o
}

func (o ProjectStatusConditionsPatchOutput) ToProjectStatusConditionsPatchOutputWithContext(ctx context.Context) ProjectStatusConditionsPatchOutput {
	return o
}

// lastTransitionTime is the last time the condition transitioned from one status to another.
// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
func (o ProjectStatusConditionsPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectStatusConditionsPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human readable message indicating details about the transition.
// This may be an empty string.
func (o ProjectStatusConditionsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectStatusConditionsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// observedGeneration represents the .metadata.generation that the condition was set based upon.
// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the instance.
func (o ProjectStatusConditionsPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectStatusConditionsPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// reason contains a programmatic identifier indicating the reason for the condition's last transition.
// Producers of specific condition types may define expected values and meanings for this field,
// and whether the values are considered a guaranteed API.
// The value should be a CamelCase string.
// This field may not be empty.
func (o ProjectStatusConditionsPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectStatusConditionsPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status of the condition, one of True, False, Unknown.
func (o ProjectStatusConditionsPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectStatusConditionsPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of condition in CamelCase or in foo.example.com/CamelCase.
func (o ProjectStatusConditionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectStatusConditionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProjectStatusConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (ProjectStatusConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectStatusConditionsPatch)(nil)).Elem()
}

func (o ProjectStatusConditionsPatchArrayOutput) ToProjectStatusConditionsPatchArrayOutput() ProjectStatusConditionsPatchArrayOutput {
	return o
}

func (o ProjectStatusConditionsPatchArrayOutput) ToProjectStatusConditionsPatchArrayOutputWithContext(ctx context.Context) ProjectStatusConditionsPatchArrayOutput {
	return o
}

func (o ProjectStatusConditionsPatchArrayOutput) Index(i pulumi.IntInput) ProjectStatusConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectStatusConditionsPatch {
		return vs[0].([]ProjectStatusConditionsPatch)[vs[1].(int)]
	}).(ProjectStatusConditionsPatchOutput)
}

// Status describes the Project's current status.
type ProjectStatusPatch struct {
	// Conditions contains the last observations of the Project's current
	// state.
	Conditions []ProjectStatusConditionsPatch `pulumi:"conditions"`
	Stats      *ProjectStatusStatsPatch       `pulumi:"stats"`
}

// ProjectStatusPatchInput is an input type that accepts ProjectStatusPatchArgs and ProjectStatusPatchOutput values.
// You can construct a concrete instance of `ProjectStatusPatchInput` via:
//
//	ProjectStatusPatchArgs{...}
type ProjectStatusPatchInput interface {
	pulumi.Input

	ToProjectStatusPatchOutput() ProjectStatusPatchOutput
	ToProjectStatusPatchOutputWithContext(context.Context) ProjectStatusPatchOutput
}

// Status describes the Project's current status.
type ProjectStatusPatchArgs struct {
	// Conditions contains the last observations of the Project's current
	// state.
	Conditions ProjectStatusConditionsPatchArrayInput `pulumi:"conditions"`
	Stats      ProjectStatusStatsPatchPtrInput        `pulumi:"stats"`
}

func (ProjectStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusPatch)(nil)).Elem()
}

func (i ProjectStatusPatchArgs) ToProjectStatusPatchOutput() ProjectStatusPatchOutput {
	return i.ToProjectStatusPatchOutputWithContext(context.Background())
}

func (i ProjectStatusPatchArgs) ToProjectStatusPatchOutputWithContext(ctx context.Context) ProjectStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusPatchOutput)
}

func (i ProjectStatusPatchArgs) ToProjectStatusPatchPtrOutput() ProjectStatusPatchPtrOutput {
	return i.ToProjectStatusPatchPtrOutputWithContext(context.Background())
}

func (i ProjectStatusPatchArgs) ToProjectStatusPatchPtrOutputWithContext(ctx context.Context) ProjectStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusPatchOutput).ToProjectStatusPatchPtrOutputWithContext(ctx)
}

// ProjectStatusPatchPtrInput is an input type that accepts ProjectStatusPatchArgs, ProjectStatusPatchPtr and ProjectStatusPatchPtrOutput values.
// You can construct a concrete instance of `ProjectStatusPatchPtrInput` via:
//
//	        ProjectStatusPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectStatusPatchPtrInput interface {
	pulumi.Input

	ToProjectStatusPatchPtrOutput() ProjectStatusPatchPtrOutput
	ToProjectStatusPatchPtrOutputWithContext(context.Context) ProjectStatusPatchPtrOutput
}

type projectStatusPatchPtrType ProjectStatusPatchArgs

func ProjectStatusPatchPtr(v *ProjectStatusPatchArgs) ProjectStatusPatchPtrInput {
	return (*projectStatusPatchPtrType)(v)
}

func (*projectStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusPatch)(nil)).Elem()
}

func (i *projectStatusPatchPtrType) ToProjectStatusPatchPtrOutput() ProjectStatusPatchPtrOutput {
	return i.ToProjectStatusPatchPtrOutputWithContext(context.Background())
}

func (i *projectStatusPatchPtrType) ToProjectStatusPatchPtrOutputWithContext(ctx context.Context) ProjectStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusPatchPtrOutput)
}

// Status describes the Project's current status.
type ProjectStatusPatchOutput struct{ *pulumi.OutputState }

func (ProjectStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusPatch)(nil)).Elem()
}

func (o ProjectStatusPatchOutput) ToProjectStatusPatchOutput() ProjectStatusPatchOutput {
	return o
}

func (o ProjectStatusPatchOutput) ToProjectStatusPatchOutputWithContext(ctx context.Context) ProjectStatusPatchOutput {
	return o
}

func (o ProjectStatusPatchOutput) ToProjectStatusPatchPtrOutput() ProjectStatusPatchPtrOutput {
	return o.ToProjectStatusPatchPtrOutputWithContext(context.Background())
}

func (o ProjectStatusPatchOutput) ToProjectStatusPatchPtrOutputWithContext(ctx context.Context) ProjectStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectStatusPatch) *ProjectStatusPatch {
		return &v
	}).(ProjectStatusPatchPtrOutput)
}

// Conditions contains the last observations of the Project's current
// state.
func (o ProjectStatusPatchOutput) Conditions() ProjectStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v ProjectStatusPatch) []ProjectStatusConditionsPatch { return v.Conditions }).(ProjectStatusConditionsPatchArrayOutput)
}

func (o ProjectStatusPatchOutput) Stats() ProjectStatusStatsPatchPtrOutput {
	return o.ApplyT(func(v ProjectStatusPatch) *ProjectStatusStatsPatch { return v.Stats }).(ProjectStatusStatsPatchPtrOutput)
}

type ProjectStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusPatch)(nil)).Elem()
}

func (o ProjectStatusPatchPtrOutput) ToProjectStatusPatchPtrOutput() ProjectStatusPatchPtrOutput {
	return o
}

func (o ProjectStatusPatchPtrOutput) ToProjectStatusPatchPtrOutputWithContext(ctx context.Context) ProjectStatusPatchPtrOutput {
	return o
}

func (o ProjectStatusPatchPtrOutput) Elem() ProjectStatusPatchOutput {
	return o.ApplyT(func(v *ProjectStatusPatch) ProjectStatusPatch {
		if v != nil {
			return *v
		}
		var ret ProjectStatusPatch
		return ret
	}).(ProjectStatusPatchOutput)
}

// Conditions contains the last observations of the Project's current
// state.
func (o ProjectStatusPatchPtrOutput) Conditions() ProjectStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v *ProjectStatusPatch) []ProjectStatusConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ProjectStatusConditionsPatchArrayOutput)
}

func (o ProjectStatusPatchPtrOutput) Stats() ProjectStatusStatsPatchPtrOutput {
	return o.ApplyT(func(v *ProjectStatusPatch) *ProjectStatusStatsPatch {
		if v == nil {
			return nil
		}
		return v.Stats
	}).(ProjectStatusStatsPatchPtrOutput)
}

// Stats contains a summary of the collective state of a Project's
// constituent resources.
type ProjectStatusStats struct {
	Stages     *ProjectStatusStatsStages     `pulumi:"stages"`
	Warehouses *ProjectStatusStatsWarehouses `pulumi:"warehouses"`
}

// ProjectStatusStatsInput is an input type that accepts ProjectStatusStatsArgs and ProjectStatusStatsOutput values.
// You can construct a concrete instance of `ProjectStatusStatsInput` via:
//
//	ProjectStatusStatsArgs{...}
type ProjectStatusStatsInput interface {
	pulumi.Input

	ToProjectStatusStatsOutput() ProjectStatusStatsOutput
	ToProjectStatusStatsOutputWithContext(context.Context) ProjectStatusStatsOutput
}

// Stats contains a summary of the collective state of a Project's
// constituent resources.
type ProjectStatusStatsArgs struct {
	Stages     ProjectStatusStatsStagesPtrInput     `pulumi:"stages"`
	Warehouses ProjectStatusStatsWarehousesPtrInput `pulumi:"warehouses"`
}

func (ProjectStatusStatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStats)(nil)).Elem()
}

func (i ProjectStatusStatsArgs) ToProjectStatusStatsOutput() ProjectStatusStatsOutput {
	return i.ToProjectStatusStatsOutputWithContext(context.Background())
}

func (i ProjectStatusStatsArgs) ToProjectStatusStatsOutputWithContext(ctx context.Context) ProjectStatusStatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsOutput)
}

func (i ProjectStatusStatsArgs) ToProjectStatusStatsPtrOutput() ProjectStatusStatsPtrOutput {
	return i.ToProjectStatusStatsPtrOutputWithContext(context.Background())
}

func (i ProjectStatusStatsArgs) ToProjectStatusStatsPtrOutputWithContext(ctx context.Context) ProjectStatusStatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsOutput).ToProjectStatusStatsPtrOutputWithContext(ctx)
}

// ProjectStatusStatsPtrInput is an input type that accepts ProjectStatusStatsArgs, ProjectStatusStatsPtr and ProjectStatusStatsPtrOutput values.
// You can construct a concrete instance of `ProjectStatusStatsPtrInput` via:
//
//	        ProjectStatusStatsArgs{...}
//
//	or:
//
//	        nil
type ProjectStatusStatsPtrInput interface {
	pulumi.Input

	ToProjectStatusStatsPtrOutput() ProjectStatusStatsPtrOutput
	ToProjectStatusStatsPtrOutputWithContext(context.Context) ProjectStatusStatsPtrOutput
}

type projectStatusStatsPtrType ProjectStatusStatsArgs

func ProjectStatusStatsPtr(v *ProjectStatusStatsArgs) ProjectStatusStatsPtrInput {
	return (*projectStatusStatsPtrType)(v)
}

func (*projectStatusStatsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStats)(nil)).Elem()
}

func (i *projectStatusStatsPtrType) ToProjectStatusStatsPtrOutput() ProjectStatusStatsPtrOutput {
	return i.ToProjectStatusStatsPtrOutputWithContext(context.Background())
}

func (i *projectStatusStatsPtrType) ToProjectStatusStatsPtrOutputWithContext(ctx context.Context) ProjectStatusStatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsPtrOutput)
}

// Stats contains a summary of the collective state of a Project's
// constituent resources.
type ProjectStatusStatsOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStats)(nil)).Elem()
}

func (o ProjectStatusStatsOutput) ToProjectStatusStatsOutput() ProjectStatusStatsOutput {
	return o
}

func (o ProjectStatusStatsOutput) ToProjectStatusStatsOutputWithContext(ctx context.Context) ProjectStatusStatsOutput {
	return o
}

func (o ProjectStatusStatsOutput) ToProjectStatusStatsPtrOutput() ProjectStatusStatsPtrOutput {
	return o.ToProjectStatusStatsPtrOutputWithContext(context.Background())
}

func (o ProjectStatusStatsOutput) ToProjectStatusStatsPtrOutputWithContext(ctx context.Context) ProjectStatusStatsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectStatusStats) *ProjectStatusStats {
		return &v
	}).(ProjectStatusStatsPtrOutput)
}

func (o ProjectStatusStatsOutput) Stages() ProjectStatusStatsStagesPtrOutput {
	return o.ApplyT(func(v ProjectStatusStats) *ProjectStatusStatsStages { return v.Stages }).(ProjectStatusStatsStagesPtrOutput)
}

func (o ProjectStatusStatsOutput) Warehouses() ProjectStatusStatsWarehousesPtrOutput {
	return o.ApplyT(func(v ProjectStatusStats) *ProjectStatusStatsWarehouses { return v.Warehouses }).(ProjectStatusStatsWarehousesPtrOutput)
}

type ProjectStatusStatsPtrOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStats)(nil)).Elem()
}

func (o ProjectStatusStatsPtrOutput) ToProjectStatusStatsPtrOutput() ProjectStatusStatsPtrOutput {
	return o
}

func (o ProjectStatusStatsPtrOutput) ToProjectStatusStatsPtrOutputWithContext(ctx context.Context) ProjectStatusStatsPtrOutput {
	return o
}

func (o ProjectStatusStatsPtrOutput) Elem() ProjectStatusStatsOutput {
	return o.ApplyT(func(v *ProjectStatusStats) ProjectStatusStats {
		if v != nil {
			return *v
		}
		var ret ProjectStatusStats
		return ret
	}).(ProjectStatusStatsOutput)
}

func (o ProjectStatusStatsPtrOutput) Stages() ProjectStatusStatsStagesPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStats) *ProjectStatusStatsStages {
		if v == nil {
			return nil
		}
		return v.Stages
	}).(ProjectStatusStatsStagesPtrOutput)
}

func (o ProjectStatusStatsPtrOutput) Warehouses() ProjectStatusStatsWarehousesPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStats) *ProjectStatusStatsWarehouses {
		if v == nil {
			return nil
		}
		return v.Warehouses
	}).(ProjectStatusStatsWarehousesPtrOutput)
}

// Stats contains a summary of the collective state of a Project's
// constituent resources.
type ProjectStatusStatsPatch struct {
	Stages     *ProjectStatusStatsStagesPatch     `pulumi:"stages"`
	Warehouses *ProjectStatusStatsWarehousesPatch `pulumi:"warehouses"`
}

// ProjectStatusStatsPatchInput is an input type that accepts ProjectStatusStatsPatchArgs and ProjectStatusStatsPatchOutput values.
// You can construct a concrete instance of `ProjectStatusStatsPatchInput` via:
//
//	ProjectStatusStatsPatchArgs{...}
type ProjectStatusStatsPatchInput interface {
	pulumi.Input

	ToProjectStatusStatsPatchOutput() ProjectStatusStatsPatchOutput
	ToProjectStatusStatsPatchOutputWithContext(context.Context) ProjectStatusStatsPatchOutput
}

// Stats contains a summary of the collective state of a Project's
// constituent resources.
type ProjectStatusStatsPatchArgs struct {
	Stages     ProjectStatusStatsStagesPatchPtrInput     `pulumi:"stages"`
	Warehouses ProjectStatusStatsWarehousesPatchPtrInput `pulumi:"warehouses"`
}

func (ProjectStatusStatsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsPatch)(nil)).Elem()
}

func (i ProjectStatusStatsPatchArgs) ToProjectStatusStatsPatchOutput() ProjectStatusStatsPatchOutput {
	return i.ToProjectStatusStatsPatchOutputWithContext(context.Background())
}

func (i ProjectStatusStatsPatchArgs) ToProjectStatusStatsPatchOutputWithContext(ctx context.Context) ProjectStatusStatsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsPatchOutput)
}

func (i ProjectStatusStatsPatchArgs) ToProjectStatusStatsPatchPtrOutput() ProjectStatusStatsPatchPtrOutput {
	return i.ToProjectStatusStatsPatchPtrOutputWithContext(context.Background())
}

func (i ProjectStatusStatsPatchArgs) ToProjectStatusStatsPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsPatchOutput).ToProjectStatusStatsPatchPtrOutputWithContext(ctx)
}

// ProjectStatusStatsPatchPtrInput is an input type that accepts ProjectStatusStatsPatchArgs, ProjectStatusStatsPatchPtr and ProjectStatusStatsPatchPtrOutput values.
// You can construct a concrete instance of `ProjectStatusStatsPatchPtrInput` via:
//
//	        ProjectStatusStatsPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectStatusStatsPatchPtrInput interface {
	pulumi.Input

	ToProjectStatusStatsPatchPtrOutput() ProjectStatusStatsPatchPtrOutput
	ToProjectStatusStatsPatchPtrOutputWithContext(context.Context) ProjectStatusStatsPatchPtrOutput
}

type projectStatusStatsPatchPtrType ProjectStatusStatsPatchArgs

func ProjectStatusStatsPatchPtr(v *ProjectStatusStatsPatchArgs) ProjectStatusStatsPatchPtrInput {
	return (*projectStatusStatsPatchPtrType)(v)
}

func (*projectStatusStatsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsPatch)(nil)).Elem()
}

func (i *projectStatusStatsPatchPtrType) ToProjectStatusStatsPatchPtrOutput() ProjectStatusStatsPatchPtrOutput {
	return i.ToProjectStatusStatsPatchPtrOutputWithContext(context.Background())
}

func (i *projectStatusStatsPatchPtrType) ToProjectStatusStatsPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsPatchPtrOutput)
}

// Stats contains a summary of the collective state of a Project's
// constituent resources.
type ProjectStatusStatsPatchOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsPatch)(nil)).Elem()
}

func (o ProjectStatusStatsPatchOutput) ToProjectStatusStatsPatchOutput() ProjectStatusStatsPatchOutput {
	return o
}

func (o ProjectStatusStatsPatchOutput) ToProjectStatusStatsPatchOutputWithContext(ctx context.Context) ProjectStatusStatsPatchOutput {
	return o
}

func (o ProjectStatusStatsPatchOutput) ToProjectStatusStatsPatchPtrOutput() ProjectStatusStatsPatchPtrOutput {
	return o.ToProjectStatusStatsPatchPtrOutputWithContext(context.Background())
}

func (o ProjectStatusStatsPatchOutput) ToProjectStatusStatsPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectStatusStatsPatch) *ProjectStatusStatsPatch {
		return &v
	}).(ProjectStatusStatsPatchPtrOutput)
}

func (o ProjectStatusStatsPatchOutput) Stages() ProjectStatusStatsStagesPatchPtrOutput {
	return o.ApplyT(func(v ProjectStatusStatsPatch) *ProjectStatusStatsStagesPatch { return v.Stages }).(ProjectStatusStatsStagesPatchPtrOutput)
}

func (o ProjectStatusStatsPatchOutput) Warehouses() ProjectStatusStatsWarehousesPatchPtrOutput {
	return o.ApplyT(func(v ProjectStatusStatsPatch) *ProjectStatusStatsWarehousesPatch { return v.Warehouses }).(ProjectStatusStatsWarehousesPatchPtrOutput)
}

type ProjectStatusStatsPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsPatch)(nil)).Elem()
}

func (o ProjectStatusStatsPatchPtrOutput) ToProjectStatusStatsPatchPtrOutput() ProjectStatusStatsPatchPtrOutput {
	return o
}

func (o ProjectStatusStatsPatchPtrOutput) ToProjectStatusStatsPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsPatchPtrOutput {
	return o
}

func (o ProjectStatusStatsPatchPtrOutput) Elem() ProjectStatusStatsPatchOutput {
	return o.ApplyT(func(v *ProjectStatusStatsPatch) ProjectStatusStatsPatch {
		if v != nil {
			return *v
		}
		var ret ProjectStatusStatsPatch
		return ret
	}).(ProjectStatusStatsPatchOutput)
}

func (o ProjectStatusStatsPatchPtrOutput) Stages() ProjectStatusStatsStagesPatchPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStatsPatch) *ProjectStatusStatsStagesPatch {
		if v == nil {
			return nil
		}
		return v.Stages
	}).(ProjectStatusStatsStagesPatchPtrOutput)
}

func (o ProjectStatusStatsPatchPtrOutput) Warehouses() ProjectStatusStatsWarehousesPatchPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStatsPatch) *ProjectStatusStatsWarehousesPatch {
		if v == nil {
			return nil
		}
		return v.Warehouses
	}).(ProjectStatusStatsWarehousesPatchPtrOutput)
}

// Stages contains a summary of the collective state of the Project's Stages.
type ProjectStatusStatsStages struct {
	// Count contains the total number of Stages in the Project.
	Count  *int                            `pulumi:"count"`
	Health *ProjectStatusStatsStagesHealth `pulumi:"health"`
}

// ProjectStatusStatsStagesInput is an input type that accepts ProjectStatusStatsStagesArgs and ProjectStatusStatsStagesOutput values.
// You can construct a concrete instance of `ProjectStatusStatsStagesInput` via:
//
//	ProjectStatusStatsStagesArgs{...}
type ProjectStatusStatsStagesInput interface {
	pulumi.Input

	ToProjectStatusStatsStagesOutput() ProjectStatusStatsStagesOutput
	ToProjectStatusStatsStagesOutputWithContext(context.Context) ProjectStatusStatsStagesOutput
}

// Stages contains a summary of the collective state of the Project's Stages.
type ProjectStatusStatsStagesArgs struct {
	// Count contains the total number of Stages in the Project.
	Count  pulumi.IntPtrInput                     `pulumi:"count"`
	Health ProjectStatusStatsStagesHealthPtrInput `pulumi:"health"`
}

func (ProjectStatusStatsStagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsStages)(nil)).Elem()
}

func (i ProjectStatusStatsStagesArgs) ToProjectStatusStatsStagesOutput() ProjectStatusStatsStagesOutput {
	return i.ToProjectStatusStatsStagesOutputWithContext(context.Background())
}

func (i ProjectStatusStatsStagesArgs) ToProjectStatusStatsStagesOutputWithContext(ctx context.Context) ProjectStatusStatsStagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsStagesOutput)
}

func (i ProjectStatusStatsStagesArgs) ToProjectStatusStatsStagesPtrOutput() ProjectStatusStatsStagesPtrOutput {
	return i.ToProjectStatusStatsStagesPtrOutputWithContext(context.Background())
}

func (i ProjectStatusStatsStagesArgs) ToProjectStatusStatsStagesPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsStagesOutput).ToProjectStatusStatsStagesPtrOutputWithContext(ctx)
}

// ProjectStatusStatsStagesPtrInput is an input type that accepts ProjectStatusStatsStagesArgs, ProjectStatusStatsStagesPtr and ProjectStatusStatsStagesPtrOutput values.
// You can construct a concrete instance of `ProjectStatusStatsStagesPtrInput` via:
//
//	        ProjectStatusStatsStagesArgs{...}
//
//	or:
//
//	        nil
type ProjectStatusStatsStagesPtrInput interface {
	pulumi.Input

	ToProjectStatusStatsStagesPtrOutput() ProjectStatusStatsStagesPtrOutput
	ToProjectStatusStatsStagesPtrOutputWithContext(context.Context) ProjectStatusStatsStagesPtrOutput
}

type projectStatusStatsStagesPtrType ProjectStatusStatsStagesArgs

func ProjectStatusStatsStagesPtr(v *ProjectStatusStatsStagesArgs) ProjectStatusStatsStagesPtrInput {
	return (*projectStatusStatsStagesPtrType)(v)
}

func (*projectStatusStatsStagesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsStages)(nil)).Elem()
}

func (i *projectStatusStatsStagesPtrType) ToProjectStatusStatsStagesPtrOutput() ProjectStatusStatsStagesPtrOutput {
	return i.ToProjectStatusStatsStagesPtrOutputWithContext(context.Background())
}

func (i *projectStatusStatsStagesPtrType) ToProjectStatusStatsStagesPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsStagesPtrOutput)
}

// Stages contains a summary of the collective state of the Project's Stages.
type ProjectStatusStatsStagesOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsStagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsStages)(nil)).Elem()
}

func (o ProjectStatusStatsStagesOutput) ToProjectStatusStatsStagesOutput() ProjectStatusStatsStagesOutput {
	return o
}

func (o ProjectStatusStatsStagesOutput) ToProjectStatusStatsStagesOutputWithContext(ctx context.Context) ProjectStatusStatsStagesOutput {
	return o
}

func (o ProjectStatusStatsStagesOutput) ToProjectStatusStatsStagesPtrOutput() ProjectStatusStatsStagesPtrOutput {
	return o.ToProjectStatusStatsStagesPtrOutputWithContext(context.Background())
}

func (o ProjectStatusStatsStagesOutput) ToProjectStatusStatsStagesPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectStatusStatsStages) *ProjectStatusStatsStages {
		return &v
	}).(ProjectStatusStatsStagesPtrOutput)
}

// Count contains the total number of Stages in the Project.
func (o ProjectStatusStatsStagesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectStatusStatsStages) *int { return v.Count }).(pulumi.IntPtrOutput)
}

func (o ProjectStatusStatsStagesOutput) Health() ProjectStatusStatsStagesHealthPtrOutput {
	return o.ApplyT(func(v ProjectStatusStatsStages) *ProjectStatusStatsStagesHealth { return v.Health }).(ProjectStatusStatsStagesHealthPtrOutput)
}

type ProjectStatusStatsStagesPtrOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsStagesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsStages)(nil)).Elem()
}

func (o ProjectStatusStatsStagesPtrOutput) ToProjectStatusStatsStagesPtrOutput() ProjectStatusStatsStagesPtrOutput {
	return o
}

func (o ProjectStatusStatsStagesPtrOutput) ToProjectStatusStatsStagesPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesPtrOutput {
	return o
}

func (o ProjectStatusStatsStagesPtrOutput) Elem() ProjectStatusStatsStagesOutput {
	return o.ApplyT(func(v *ProjectStatusStatsStages) ProjectStatusStatsStages {
		if v != nil {
			return *v
		}
		var ret ProjectStatusStatsStages
		return ret
	}).(ProjectStatusStatsStagesOutput)
}

// Count contains the total number of Stages in the Project.
func (o ProjectStatusStatsStagesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStatsStages) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

func (o ProjectStatusStatsStagesPtrOutput) Health() ProjectStatusStatsStagesHealthPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStatsStages) *ProjectStatusStatsStagesHealth {
		if v == nil {
			return nil
		}
		return v.Health
	}).(ProjectStatusStatsStagesHealthPtrOutput)
}

// Health contains a summary of the collective health of a Project's Stages.
type ProjectStatusStatsStagesHealth struct {
	// Healthy contains the number of resources that are explicitly healthy.
	Healthy *int `pulumi:"healthy"`
}

// ProjectStatusStatsStagesHealthInput is an input type that accepts ProjectStatusStatsStagesHealthArgs and ProjectStatusStatsStagesHealthOutput values.
// You can construct a concrete instance of `ProjectStatusStatsStagesHealthInput` via:
//
//	ProjectStatusStatsStagesHealthArgs{...}
type ProjectStatusStatsStagesHealthInput interface {
	pulumi.Input

	ToProjectStatusStatsStagesHealthOutput() ProjectStatusStatsStagesHealthOutput
	ToProjectStatusStatsStagesHealthOutputWithContext(context.Context) ProjectStatusStatsStagesHealthOutput
}

// Health contains a summary of the collective health of a Project's Stages.
type ProjectStatusStatsStagesHealthArgs struct {
	// Healthy contains the number of resources that are explicitly healthy.
	Healthy pulumi.IntPtrInput `pulumi:"healthy"`
}

func (ProjectStatusStatsStagesHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsStagesHealth)(nil)).Elem()
}

func (i ProjectStatusStatsStagesHealthArgs) ToProjectStatusStatsStagesHealthOutput() ProjectStatusStatsStagesHealthOutput {
	return i.ToProjectStatusStatsStagesHealthOutputWithContext(context.Background())
}

func (i ProjectStatusStatsStagesHealthArgs) ToProjectStatusStatsStagesHealthOutputWithContext(ctx context.Context) ProjectStatusStatsStagesHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsStagesHealthOutput)
}

func (i ProjectStatusStatsStagesHealthArgs) ToProjectStatusStatsStagesHealthPtrOutput() ProjectStatusStatsStagesHealthPtrOutput {
	return i.ToProjectStatusStatsStagesHealthPtrOutputWithContext(context.Background())
}

func (i ProjectStatusStatsStagesHealthArgs) ToProjectStatusStatsStagesHealthPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsStagesHealthOutput).ToProjectStatusStatsStagesHealthPtrOutputWithContext(ctx)
}

// ProjectStatusStatsStagesHealthPtrInput is an input type that accepts ProjectStatusStatsStagesHealthArgs, ProjectStatusStatsStagesHealthPtr and ProjectStatusStatsStagesHealthPtrOutput values.
// You can construct a concrete instance of `ProjectStatusStatsStagesHealthPtrInput` via:
//
//	        ProjectStatusStatsStagesHealthArgs{...}
//
//	or:
//
//	        nil
type ProjectStatusStatsStagesHealthPtrInput interface {
	pulumi.Input

	ToProjectStatusStatsStagesHealthPtrOutput() ProjectStatusStatsStagesHealthPtrOutput
	ToProjectStatusStatsStagesHealthPtrOutputWithContext(context.Context) ProjectStatusStatsStagesHealthPtrOutput
}

type projectStatusStatsStagesHealthPtrType ProjectStatusStatsStagesHealthArgs

func ProjectStatusStatsStagesHealthPtr(v *ProjectStatusStatsStagesHealthArgs) ProjectStatusStatsStagesHealthPtrInput {
	return (*projectStatusStatsStagesHealthPtrType)(v)
}

func (*projectStatusStatsStagesHealthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsStagesHealth)(nil)).Elem()
}

func (i *projectStatusStatsStagesHealthPtrType) ToProjectStatusStatsStagesHealthPtrOutput() ProjectStatusStatsStagesHealthPtrOutput {
	return i.ToProjectStatusStatsStagesHealthPtrOutputWithContext(context.Background())
}

func (i *projectStatusStatsStagesHealthPtrType) ToProjectStatusStatsStagesHealthPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsStagesHealthPtrOutput)
}

// Health contains a summary of the collective health of a Project's Stages.
type ProjectStatusStatsStagesHealthOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsStagesHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsStagesHealth)(nil)).Elem()
}

func (o ProjectStatusStatsStagesHealthOutput) ToProjectStatusStatsStagesHealthOutput() ProjectStatusStatsStagesHealthOutput {
	return o
}

func (o ProjectStatusStatsStagesHealthOutput) ToProjectStatusStatsStagesHealthOutputWithContext(ctx context.Context) ProjectStatusStatsStagesHealthOutput {
	return o
}

func (o ProjectStatusStatsStagesHealthOutput) ToProjectStatusStatsStagesHealthPtrOutput() ProjectStatusStatsStagesHealthPtrOutput {
	return o.ToProjectStatusStatsStagesHealthPtrOutputWithContext(context.Background())
}

func (o ProjectStatusStatsStagesHealthOutput) ToProjectStatusStatsStagesHealthPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesHealthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectStatusStatsStagesHealth) *ProjectStatusStatsStagesHealth {
		return &v
	}).(ProjectStatusStatsStagesHealthPtrOutput)
}

// Healthy contains the number of resources that are explicitly healthy.
func (o ProjectStatusStatsStagesHealthOutput) Healthy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectStatusStatsStagesHealth) *int { return v.Healthy }).(pulumi.IntPtrOutput)
}

type ProjectStatusStatsStagesHealthPtrOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsStagesHealthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsStagesHealth)(nil)).Elem()
}

func (o ProjectStatusStatsStagesHealthPtrOutput) ToProjectStatusStatsStagesHealthPtrOutput() ProjectStatusStatsStagesHealthPtrOutput {
	return o
}

func (o ProjectStatusStatsStagesHealthPtrOutput) ToProjectStatusStatsStagesHealthPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesHealthPtrOutput {
	return o
}

func (o ProjectStatusStatsStagesHealthPtrOutput) Elem() ProjectStatusStatsStagesHealthOutput {
	return o.ApplyT(func(v *ProjectStatusStatsStagesHealth) ProjectStatusStatsStagesHealth {
		if v != nil {
			return *v
		}
		var ret ProjectStatusStatsStagesHealth
		return ret
	}).(ProjectStatusStatsStagesHealthOutput)
}

// Healthy contains the number of resources that are explicitly healthy.
func (o ProjectStatusStatsStagesHealthPtrOutput) Healthy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStatsStagesHealth) *int {
		if v == nil {
			return nil
		}
		return v.Healthy
	}).(pulumi.IntPtrOutput)
}

// Health contains a summary of the collective health of a Project's Stages.
type ProjectStatusStatsStagesHealthPatch struct {
	// Healthy contains the number of resources that are explicitly healthy.
	Healthy *int `pulumi:"healthy"`
}

// ProjectStatusStatsStagesHealthPatchInput is an input type that accepts ProjectStatusStatsStagesHealthPatchArgs and ProjectStatusStatsStagesHealthPatchOutput values.
// You can construct a concrete instance of `ProjectStatusStatsStagesHealthPatchInput` via:
//
//	ProjectStatusStatsStagesHealthPatchArgs{...}
type ProjectStatusStatsStagesHealthPatchInput interface {
	pulumi.Input

	ToProjectStatusStatsStagesHealthPatchOutput() ProjectStatusStatsStagesHealthPatchOutput
	ToProjectStatusStatsStagesHealthPatchOutputWithContext(context.Context) ProjectStatusStatsStagesHealthPatchOutput
}

// Health contains a summary of the collective health of a Project's Stages.
type ProjectStatusStatsStagesHealthPatchArgs struct {
	// Healthy contains the number of resources that are explicitly healthy.
	Healthy pulumi.IntPtrInput `pulumi:"healthy"`
}

func (ProjectStatusStatsStagesHealthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsStagesHealthPatch)(nil)).Elem()
}

func (i ProjectStatusStatsStagesHealthPatchArgs) ToProjectStatusStatsStagesHealthPatchOutput() ProjectStatusStatsStagesHealthPatchOutput {
	return i.ToProjectStatusStatsStagesHealthPatchOutputWithContext(context.Background())
}

func (i ProjectStatusStatsStagesHealthPatchArgs) ToProjectStatusStatsStagesHealthPatchOutputWithContext(ctx context.Context) ProjectStatusStatsStagesHealthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsStagesHealthPatchOutput)
}

func (i ProjectStatusStatsStagesHealthPatchArgs) ToProjectStatusStatsStagesHealthPatchPtrOutput() ProjectStatusStatsStagesHealthPatchPtrOutput {
	return i.ToProjectStatusStatsStagesHealthPatchPtrOutputWithContext(context.Background())
}

func (i ProjectStatusStatsStagesHealthPatchArgs) ToProjectStatusStatsStagesHealthPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesHealthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsStagesHealthPatchOutput).ToProjectStatusStatsStagesHealthPatchPtrOutputWithContext(ctx)
}

// ProjectStatusStatsStagesHealthPatchPtrInput is an input type that accepts ProjectStatusStatsStagesHealthPatchArgs, ProjectStatusStatsStagesHealthPatchPtr and ProjectStatusStatsStagesHealthPatchPtrOutput values.
// You can construct a concrete instance of `ProjectStatusStatsStagesHealthPatchPtrInput` via:
//
//	        ProjectStatusStatsStagesHealthPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectStatusStatsStagesHealthPatchPtrInput interface {
	pulumi.Input

	ToProjectStatusStatsStagesHealthPatchPtrOutput() ProjectStatusStatsStagesHealthPatchPtrOutput
	ToProjectStatusStatsStagesHealthPatchPtrOutputWithContext(context.Context) ProjectStatusStatsStagesHealthPatchPtrOutput
}

type projectStatusStatsStagesHealthPatchPtrType ProjectStatusStatsStagesHealthPatchArgs

func ProjectStatusStatsStagesHealthPatchPtr(v *ProjectStatusStatsStagesHealthPatchArgs) ProjectStatusStatsStagesHealthPatchPtrInput {
	return (*projectStatusStatsStagesHealthPatchPtrType)(v)
}

func (*projectStatusStatsStagesHealthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsStagesHealthPatch)(nil)).Elem()
}

func (i *projectStatusStatsStagesHealthPatchPtrType) ToProjectStatusStatsStagesHealthPatchPtrOutput() ProjectStatusStatsStagesHealthPatchPtrOutput {
	return i.ToProjectStatusStatsStagesHealthPatchPtrOutputWithContext(context.Background())
}

func (i *projectStatusStatsStagesHealthPatchPtrType) ToProjectStatusStatsStagesHealthPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesHealthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsStagesHealthPatchPtrOutput)
}

// Health contains a summary of the collective health of a Project's Stages.
type ProjectStatusStatsStagesHealthPatchOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsStagesHealthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsStagesHealthPatch)(nil)).Elem()
}

func (o ProjectStatusStatsStagesHealthPatchOutput) ToProjectStatusStatsStagesHealthPatchOutput() ProjectStatusStatsStagesHealthPatchOutput {
	return o
}

func (o ProjectStatusStatsStagesHealthPatchOutput) ToProjectStatusStatsStagesHealthPatchOutputWithContext(ctx context.Context) ProjectStatusStatsStagesHealthPatchOutput {
	return o
}

func (o ProjectStatusStatsStagesHealthPatchOutput) ToProjectStatusStatsStagesHealthPatchPtrOutput() ProjectStatusStatsStagesHealthPatchPtrOutput {
	return o.ToProjectStatusStatsStagesHealthPatchPtrOutputWithContext(context.Background())
}

func (o ProjectStatusStatsStagesHealthPatchOutput) ToProjectStatusStatsStagesHealthPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesHealthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectStatusStatsStagesHealthPatch) *ProjectStatusStatsStagesHealthPatch {
		return &v
	}).(ProjectStatusStatsStagesHealthPatchPtrOutput)
}

// Healthy contains the number of resources that are explicitly healthy.
func (o ProjectStatusStatsStagesHealthPatchOutput) Healthy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectStatusStatsStagesHealthPatch) *int { return v.Healthy }).(pulumi.IntPtrOutput)
}

type ProjectStatusStatsStagesHealthPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsStagesHealthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsStagesHealthPatch)(nil)).Elem()
}

func (o ProjectStatusStatsStagesHealthPatchPtrOutput) ToProjectStatusStatsStagesHealthPatchPtrOutput() ProjectStatusStatsStagesHealthPatchPtrOutput {
	return o
}

func (o ProjectStatusStatsStagesHealthPatchPtrOutput) ToProjectStatusStatsStagesHealthPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesHealthPatchPtrOutput {
	return o
}

func (o ProjectStatusStatsStagesHealthPatchPtrOutput) Elem() ProjectStatusStatsStagesHealthPatchOutput {
	return o.ApplyT(func(v *ProjectStatusStatsStagesHealthPatch) ProjectStatusStatsStagesHealthPatch {
		if v != nil {
			return *v
		}
		var ret ProjectStatusStatsStagesHealthPatch
		return ret
	}).(ProjectStatusStatsStagesHealthPatchOutput)
}

// Healthy contains the number of resources that are explicitly healthy.
func (o ProjectStatusStatsStagesHealthPatchPtrOutput) Healthy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStatsStagesHealthPatch) *int {
		if v == nil {
			return nil
		}
		return v.Healthy
	}).(pulumi.IntPtrOutput)
}

// Stages contains a summary of the collective state of the Project's Stages.
type ProjectStatusStatsStagesPatch struct {
	// Count contains the total number of Stages in the Project.
	Count  *int                                 `pulumi:"count"`
	Health *ProjectStatusStatsStagesHealthPatch `pulumi:"health"`
}

// ProjectStatusStatsStagesPatchInput is an input type that accepts ProjectStatusStatsStagesPatchArgs and ProjectStatusStatsStagesPatchOutput values.
// You can construct a concrete instance of `ProjectStatusStatsStagesPatchInput` via:
//
//	ProjectStatusStatsStagesPatchArgs{...}
type ProjectStatusStatsStagesPatchInput interface {
	pulumi.Input

	ToProjectStatusStatsStagesPatchOutput() ProjectStatusStatsStagesPatchOutput
	ToProjectStatusStatsStagesPatchOutputWithContext(context.Context) ProjectStatusStatsStagesPatchOutput
}

// Stages contains a summary of the collective state of the Project's Stages.
type ProjectStatusStatsStagesPatchArgs struct {
	// Count contains the total number of Stages in the Project.
	Count  pulumi.IntPtrInput                          `pulumi:"count"`
	Health ProjectStatusStatsStagesHealthPatchPtrInput `pulumi:"health"`
}

func (ProjectStatusStatsStagesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsStagesPatch)(nil)).Elem()
}

func (i ProjectStatusStatsStagesPatchArgs) ToProjectStatusStatsStagesPatchOutput() ProjectStatusStatsStagesPatchOutput {
	return i.ToProjectStatusStatsStagesPatchOutputWithContext(context.Background())
}

func (i ProjectStatusStatsStagesPatchArgs) ToProjectStatusStatsStagesPatchOutputWithContext(ctx context.Context) ProjectStatusStatsStagesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsStagesPatchOutput)
}

func (i ProjectStatusStatsStagesPatchArgs) ToProjectStatusStatsStagesPatchPtrOutput() ProjectStatusStatsStagesPatchPtrOutput {
	return i.ToProjectStatusStatsStagesPatchPtrOutputWithContext(context.Background())
}

func (i ProjectStatusStatsStagesPatchArgs) ToProjectStatusStatsStagesPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsStagesPatchOutput).ToProjectStatusStatsStagesPatchPtrOutputWithContext(ctx)
}

// ProjectStatusStatsStagesPatchPtrInput is an input type that accepts ProjectStatusStatsStagesPatchArgs, ProjectStatusStatsStagesPatchPtr and ProjectStatusStatsStagesPatchPtrOutput values.
// You can construct a concrete instance of `ProjectStatusStatsStagesPatchPtrInput` via:
//
//	        ProjectStatusStatsStagesPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectStatusStatsStagesPatchPtrInput interface {
	pulumi.Input

	ToProjectStatusStatsStagesPatchPtrOutput() ProjectStatusStatsStagesPatchPtrOutput
	ToProjectStatusStatsStagesPatchPtrOutputWithContext(context.Context) ProjectStatusStatsStagesPatchPtrOutput
}

type projectStatusStatsStagesPatchPtrType ProjectStatusStatsStagesPatchArgs

func ProjectStatusStatsStagesPatchPtr(v *ProjectStatusStatsStagesPatchArgs) ProjectStatusStatsStagesPatchPtrInput {
	return (*projectStatusStatsStagesPatchPtrType)(v)
}

func (*projectStatusStatsStagesPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsStagesPatch)(nil)).Elem()
}

func (i *projectStatusStatsStagesPatchPtrType) ToProjectStatusStatsStagesPatchPtrOutput() ProjectStatusStatsStagesPatchPtrOutput {
	return i.ToProjectStatusStatsStagesPatchPtrOutputWithContext(context.Background())
}

func (i *projectStatusStatsStagesPatchPtrType) ToProjectStatusStatsStagesPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsStagesPatchPtrOutput)
}

// Stages contains a summary of the collective state of the Project's Stages.
type ProjectStatusStatsStagesPatchOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsStagesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsStagesPatch)(nil)).Elem()
}

func (o ProjectStatusStatsStagesPatchOutput) ToProjectStatusStatsStagesPatchOutput() ProjectStatusStatsStagesPatchOutput {
	return o
}

func (o ProjectStatusStatsStagesPatchOutput) ToProjectStatusStatsStagesPatchOutputWithContext(ctx context.Context) ProjectStatusStatsStagesPatchOutput {
	return o
}

func (o ProjectStatusStatsStagesPatchOutput) ToProjectStatusStatsStagesPatchPtrOutput() ProjectStatusStatsStagesPatchPtrOutput {
	return o.ToProjectStatusStatsStagesPatchPtrOutputWithContext(context.Background())
}

func (o ProjectStatusStatsStagesPatchOutput) ToProjectStatusStatsStagesPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectStatusStatsStagesPatch) *ProjectStatusStatsStagesPatch {
		return &v
	}).(ProjectStatusStatsStagesPatchPtrOutput)
}

// Count contains the total number of Stages in the Project.
func (o ProjectStatusStatsStagesPatchOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectStatusStatsStagesPatch) *int { return v.Count }).(pulumi.IntPtrOutput)
}

func (o ProjectStatusStatsStagesPatchOutput) Health() ProjectStatusStatsStagesHealthPatchPtrOutput {
	return o.ApplyT(func(v ProjectStatusStatsStagesPatch) *ProjectStatusStatsStagesHealthPatch { return v.Health }).(ProjectStatusStatsStagesHealthPatchPtrOutput)
}

type ProjectStatusStatsStagesPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsStagesPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsStagesPatch)(nil)).Elem()
}

func (o ProjectStatusStatsStagesPatchPtrOutput) ToProjectStatusStatsStagesPatchPtrOutput() ProjectStatusStatsStagesPatchPtrOutput {
	return o
}

func (o ProjectStatusStatsStagesPatchPtrOutput) ToProjectStatusStatsStagesPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsStagesPatchPtrOutput {
	return o
}

func (o ProjectStatusStatsStagesPatchPtrOutput) Elem() ProjectStatusStatsStagesPatchOutput {
	return o.ApplyT(func(v *ProjectStatusStatsStagesPatch) ProjectStatusStatsStagesPatch {
		if v != nil {
			return *v
		}
		var ret ProjectStatusStatsStagesPatch
		return ret
	}).(ProjectStatusStatsStagesPatchOutput)
}

// Count contains the total number of Stages in the Project.
func (o ProjectStatusStatsStagesPatchPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStatsStagesPatch) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

func (o ProjectStatusStatsStagesPatchPtrOutput) Health() ProjectStatusStatsStagesHealthPatchPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStatsStagesPatch) *ProjectStatusStatsStagesHealthPatch {
		if v == nil {
			return nil
		}
		return v.Health
	}).(ProjectStatusStatsStagesHealthPatchPtrOutput)
}

// Warehouses contains a summary of the collective state of the Project's
// Warehouses.
type ProjectStatusStatsWarehouses struct {
	// Count contains the total number of Warehouses in the Project.
	Count  *int                                `pulumi:"count"`
	Health *ProjectStatusStatsWarehousesHealth `pulumi:"health"`
}

// ProjectStatusStatsWarehousesInput is an input type that accepts ProjectStatusStatsWarehousesArgs and ProjectStatusStatsWarehousesOutput values.
// You can construct a concrete instance of `ProjectStatusStatsWarehousesInput` via:
//
//	ProjectStatusStatsWarehousesArgs{...}
type ProjectStatusStatsWarehousesInput interface {
	pulumi.Input

	ToProjectStatusStatsWarehousesOutput() ProjectStatusStatsWarehousesOutput
	ToProjectStatusStatsWarehousesOutputWithContext(context.Context) ProjectStatusStatsWarehousesOutput
}

// Warehouses contains a summary of the collective state of the Project's
// Warehouses.
type ProjectStatusStatsWarehousesArgs struct {
	// Count contains the total number of Warehouses in the Project.
	Count  pulumi.IntPtrInput                         `pulumi:"count"`
	Health ProjectStatusStatsWarehousesHealthPtrInput `pulumi:"health"`
}

func (ProjectStatusStatsWarehousesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsWarehouses)(nil)).Elem()
}

func (i ProjectStatusStatsWarehousesArgs) ToProjectStatusStatsWarehousesOutput() ProjectStatusStatsWarehousesOutput {
	return i.ToProjectStatusStatsWarehousesOutputWithContext(context.Background())
}

func (i ProjectStatusStatsWarehousesArgs) ToProjectStatusStatsWarehousesOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsWarehousesOutput)
}

func (i ProjectStatusStatsWarehousesArgs) ToProjectStatusStatsWarehousesPtrOutput() ProjectStatusStatsWarehousesPtrOutput {
	return i.ToProjectStatusStatsWarehousesPtrOutputWithContext(context.Background())
}

func (i ProjectStatusStatsWarehousesArgs) ToProjectStatusStatsWarehousesPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsWarehousesOutput).ToProjectStatusStatsWarehousesPtrOutputWithContext(ctx)
}

// ProjectStatusStatsWarehousesPtrInput is an input type that accepts ProjectStatusStatsWarehousesArgs, ProjectStatusStatsWarehousesPtr and ProjectStatusStatsWarehousesPtrOutput values.
// You can construct a concrete instance of `ProjectStatusStatsWarehousesPtrInput` via:
//
//	        ProjectStatusStatsWarehousesArgs{...}
//
//	or:
//
//	        nil
type ProjectStatusStatsWarehousesPtrInput interface {
	pulumi.Input

	ToProjectStatusStatsWarehousesPtrOutput() ProjectStatusStatsWarehousesPtrOutput
	ToProjectStatusStatsWarehousesPtrOutputWithContext(context.Context) ProjectStatusStatsWarehousesPtrOutput
}

type projectStatusStatsWarehousesPtrType ProjectStatusStatsWarehousesArgs

func ProjectStatusStatsWarehousesPtr(v *ProjectStatusStatsWarehousesArgs) ProjectStatusStatsWarehousesPtrInput {
	return (*projectStatusStatsWarehousesPtrType)(v)
}

func (*projectStatusStatsWarehousesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsWarehouses)(nil)).Elem()
}

func (i *projectStatusStatsWarehousesPtrType) ToProjectStatusStatsWarehousesPtrOutput() ProjectStatusStatsWarehousesPtrOutput {
	return i.ToProjectStatusStatsWarehousesPtrOutputWithContext(context.Background())
}

func (i *projectStatusStatsWarehousesPtrType) ToProjectStatusStatsWarehousesPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsWarehousesPtrOutput)
}

// Warehouses contains a summary of the collective state of the Project's
// Warehouses.
type ProjectStatusStatsWarehousesOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsWarehousesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsWarehouses)(nil)).Elem()
}

func (o ProjectStatusStatsWarehousesOutput) ToProjectStatusStatsWarehousesOutput() ProjectStatusStatsWarehousesOutput {
	return o
}

func (o ProjectStatusStatsWarehousesOutput) ToProjectStatusStatsWarehousesOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesOutput {
	return o
}

func (o ProjectStatusStatsWarehousesOutput) ToProjectStatusStatsWarehousesPtrOutput() ProjectStatusStatsWarehousesPtrOutput {
	return o.ToProjectStatusStatsWarehousesPtrOutputWithContext(context.Background())
}

func (o ProjectStatusStatsWarehousesOutput) ToProjectStatusStatsWarehousesPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectStatusStatsWarehouses) *ProjectStatusStatsWarehouses {
		return &v
	}).(ProjectStatusStatsWarehousesPtrOutput)
}

// Count contains the total number of Warehouses in the Project.
func (o ProjectStatusStatsWarehousesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectStatusStatsWarehouses) *int { return v.Count }).(pulumi.IntPtrOutput)
}

func (o ProjectStatusStatsWarehousesOutput) Health() ProjectStatusStatsWarehousesHealthPtrOutput {
	return o.ApplyT(func(v ProjectStatusStatsWarehouses) *ProjectStatusStatsWarehousesHealth { return v.Health }).(ProjectStatusStatsWarehousesHealthPtrOutput)
}

type ProjectStatusStatsWarehousesPtrOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsWarehousesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsWarehouses)(nil)).Elem()
}

func (o ProjectStatusStatsWarehousesPtrOutput) ToProjectStatusStatsWarehousesPtrOutput() ProjectStatusStatsWarehousesPtrOutput {
	return o
}

func (o ProjectStatusStatsWarehousesPtrOutput) ToProjectStatusStatsWarehousesPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesPtrOutput {
	return o
}

func (o ProjectStatusStatsWarehousesPtrOutput) Elem() ProjectStatusStatsWarehousesOutput {
	return o.ApplyT(func(v *ProjectStatusStatsWarehouses) ProjectStatusStatsWarehouses {
		if v != nil {
			return *v
		}
		var ret ProjectStatusStatsWarehouses
		return ret
	}).(ProjectStatusStatsWarehousesOutput)
}

// Count contains the total number of Warehouses in the Project.
func (o ProjectStatusStatsWarehousesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStatsWarehouses) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

func (o ProjectStatusStatsWarehousesPtrOutput) Health() ProjectStatusStatsWarehousesHealthPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStatsWarehouses) *ProjectStatusStatsWarehousesHealth {
		if v == nil {
			return nil
		}
		return v.Health
	}).(ProjectStatusStatsWarehousesHealthPtrOutput)
}

// Health contains a summary of the collective health of a Project's
// Warehouses.
type ProjectStatusStatsWarehousesHealth struct {
	// Healthy contains the number of resources that are explicitly healthy.
	Healthy *int `pulumi:"healthy"`
}

// ProjectStatusStatsWarehousesHealthInput is an input type that accepts ProjectStatusStatsWarehousesHealthArgs and ProjectStatusStatsWarehousesHealthOutput values.
// You can construct a concrete instance of `ProjectStatusStatsWarehousesHealthInput` via:
//
//	ProjectStatusStatsWarehousesHealthArgs{...}
type ProjectStatusStatsWarehousesHealthInput interface {
	pulumi.Input

	ToProjectStatusStatsWarehousesHealthOutput() ProjectStatusStatsWarehousesHealthOutput
	ToProjectStatusStatsWarehousesHealthOutputWithContext(context.Context) ProjectStatusStatsWarehousesHealthOutput
}

// Health contains a summary of the collective health of a Project's
// Warehouses.
type ProjectStatusStatsWarehousesHealthArgs struct {
	// Healthy contains the number of resources that are explicitly healthy.
	Healthy pulumi.IntPtrInput `pulumi:"healthy"`
}

func (ProjectStatusStatsWarehousesHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsWarehousesHealth)(nil)).Elem()
}

func (i ProjectStatusStatsWarehousesHealthArgs) ToProjectStatusStatsWarehousesHealthOutput() ProjectStatusStatsWarehousesHealthOutput {
	return i.ToProjectStatusStatsWarehousesHealthOutputWithContext(context.Background())
}

func (i ProjectStatusStatsWarehousesHealthArgs) ToProjectStatusStatsWarehousesHealthOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsWarehousesHealthOutput)
}

func (i ProjectStatusStatsWarehousesHealthArgs) ToProjectStatusStatsWarehousesHealthPtrOutput() ProjectStatusStatsWarehousesHealthPtrOutput {
	return i.ToProjectStatusStatsWarehousesHealthPtrOutputWithContext(context.Background())
}

func (i ProjectStatusStatsWarehousesHealthArgs) ToProjectStatusStatsWarehousesHealthPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsWarehousesHealthOutput).ToProjectStatusStatsWarehousesHealthPtrOutputWithContext(ctx)
}

// ProjectStatusStatsWarehousesHealthPtrInput is an input type that accepts ProjectStatusStatsWarehousesHealthArgs, ProjectStatusStatsWarehousesHealthPtr and ProjectStatusStatsWarehousesHealthPtrOutput values.
// You can construct a concrete instance of `ProjectStatusStatsWarehousesHealthPtrInput` via:
//
//	        ProjectStatusStatsWarehousesHealthArgs{...}
//
//	or:
//
//	        nil
type ProjectStatusStatsWarehousesHealthPtrInput interface {
	pulumi.Input

	ToProjectStatusStatsWarehousesHealthPtrOutput() ProjectStatusStatsWarehousesHealthPtrOutput
	ToProjectStatusStatsWarehousesHealthPtrOutputWithContext(context.Context) ProjectStatusStatsWarehousesHealthPtrOutput
}

type projectStatusStatsWarehousesHealthPtrType ProjectStatusStatsWarehousesHealthArgs

func ProjectStatusStatsWarehousesHealthPtr(v *ProjectStatusStatsWarehousesHealthArgs) ProjectStatusStatsWarehousesHealthPtrInput {
	return (*projectStatusStatsWarehousesHealthPtrType)(v)
}

func (*projectStatusStatsWarehousesHealthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsWarehousesHealth)(nil)).Elem()
}

func (i *projectStatusStatsWarehousesHealthPtrType) ToProjectStatusStatsWarehousesHealthPtrOutput() ProjectStatusStatsWarehousesHealthPtrOutput {
	return i.ToProjectStatusStatsWarehousesHealthPtrOutputWithContext(context.Background())
}

func (i *projectStatusStatsWarehousesHealthPtrType) ToProjectStatusStatsWarehousesHealthPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsWarehousesHealthPtrOutput)
}

// Health contains a summary of the collective health of a Project's
// Warehouses.
type ProjectStatusStatsWarehousesHealthOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsWarehousesHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsWarehousesHealth)(nil)).Elem()
}

func (o ProjectStatusStatsWarehousesHealthOutput) ToProjectStatusStatsWarehousesHealthOutput() ProjectStatusStatsWarehousesHealthOutput {
	return o
}

func (o ProjectStatusStatsWarehousesHealthOutput) ToProjectStatusStatsWarehousesHealthOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesHealthOutput {
	return o
}

func (o ProjectStatusStatsWarehousesHealthOutput) ToProjectStatusStatsWarehousesHealthPtrOutput() ProjectStatusStatsWarehousesHealthPtrOutput {
	return o.ToProjectStatusStatsWarehousesHealthPtrOutputWithContext(context.Background())
}

func (o ProjectStatusStatsWarehousesHealthOutput) ToProjectStatusStatsWarehousesHealthPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesHealthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectStatusStatsWarehousesHealth) *ProjectStatusStatsWarehousesHealth {
		return &v
	}).(ProjectStatusStatsWarehousesHealthPtrOutput)
}

// Healthy contains the number of resources that are explicitly healthy.
func (o ProjectStatusStatsWarehousesHealthOutput) Healthy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectStatusStatsWarehousesHealth) *int { return v.Healthy }).(pulumi.IntPtrOutput)
}

type ProjectStatusStatsWarehousesHealthPtrOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsWarehousesHealthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsWarehousesHealth)(nil)).Elem()
}

func (o ProjectStatusStatsWarehousesHealthPtrOutput) ToProjectStatusStatsWarehousesHealthPtrOutput() ProjectStatusStatsWarehousesHealthPtrOutput {
	return o
}

func (o ProjectStatusStatsWarehousesHealthPtrOutput) ToProjectStatusStatsWarehousesHealthPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesHealthPtrOutput {
	return o
}

func (o ProjectStatusStatsWarehousesHealthPtrOutput) Elem() ProjectStatusStatsWarehousesHealthOutput {
	return o.ApplyT(func(v *ProjectStatusStatsWarehousesHealth) ProjectStatusStatsWarehousesHealth {
		if v != nil {
			return *v
		}
		var ret ProjectStatusStatsWarehousesHealth
		return ret
	}).(ProjectStatusStatsWarehousesHealthOutput)
}

// Healthy contains the number of resources that are explicitly healthy.
func (o ProjectStatusStatsWarehousesHealthPtrOutput) Healthy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStatsWarehousesHealth) *int {
		if v == nil {
			return nil
		}
		return v.Healthy
	}).(pulumi.IntPtrOutput)
}

// Health contains a summary of the collective health of a Project's
// Warehouses.
type ProjectStatusStatsWarehousesHealthPatch struct {
	// Healthy contains the number of resources that are explicitly healthy.
	Healthy *int `pulumi:"healthy"`
}

// ProjectStatusStatsWarehousesHealthPatchInput is an input type that accepts ProjectStatusStatsWarehousesHealthPatchArgs and ProjectStatusStatsWarehousesHealthPatchOutput values.
// You can construct a concrete instance of `ProjectStatusStatsWarehousesHealthPatchInput` via:
//
//	ProjectStatusStatsWarehousesHealthPatchArgs{...}
type ProjectStatusStatsWarehousesHealthPatchInput interface {
	pulumi.Input

	ToProjectStatusStatsWarehousesHealthPatchOutput() ProjectStatusStatsWarehousesHealthPatchOutput
	ToProjectStatusStatsWarehousesHealthPatchOutputWithContext(context.Context) ProjectStatusStatsWarehousesHealthPatchOutput
}

// Health contains a summary of the collective health of a Project's
// Warehouses.
type ProjectStatusStatsWarehousesHealthPatchArgs struct {
	// Healthy contains the number of resources that are explicitly healthy.
	Healthy pulumi.IntPtrInput `pulumi:"healthy"`
}

func (ProjectStatusStatsWarehousesHealthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsWarehousesHealthPatch)(nil)).Elem()
}

func (i ProjectStatusStatsWarehousesHealthPatchArgs) ToProjectStatusStatsWarehousesHealthPatchOutput() ProjectStatusStatsWarehousesHealthPatchOutput {
	return i.ToProjectStatusStatsWarehousesHealthPatchOutputWithContext(context.Background())
}

func (i ProjectStatusStatsWarehousesHealthPatchArgs) ToProjectStatusStatsWarehousesHealthPatchOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesHealthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsWarehousesHealthPatchOutput)
}

func (i ProjectStatusStatsWarehousesHealthPatchArgs) ToProjectStatusStatsWarehousesHealthPatchPtrOutput() ProjectStatusStatsWarehousesHealthPatchPtrOutput {
	return i.ToProjectStatusStatsWarehousesHealthPatchPtrOutputWithContext(context.Background())
}

func (i ProjectStatusStatsWarehousesHealthPatchArgs) ToProjectStatusStatsWarehousesHealthPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesHealthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsWarehousesHealthPatchOutput).ToProjectStatusStatsWarehousesHealthPatchPtrOutputWithContext(ctx)
}

// ProjectStatusStatsWarehousesHealthPatchPtrInput is an input type that accepts ProjectStatusStatsWarehousesHealthPatchArgs, ProjectStatusStatsWarehousesHealthPatchPtr and ProjectStatusStatsWarehousesHealthPatchPtrOutput values.
// You can construct a concrete instance of `ProjectStatusStatsWarehousesHealthPatchPtrInput` via:
//
//	        ProjectStatusStatsWarehousesHealthPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectStatusStatsWarehousesHealthPatchPtrInput interface {
	pulumi.Input

	ToProjectStatusStatsWarehousesHealthPatchPtrOutput() ProjectStatusStatsWarehousesHealthPatchPtrOutput
	ToProjectStatusStatsWarehousesHealthPatchPtrOutputWithContext(context.Context) ProjectStatusStatsWarehousesHealthPatchPtrOutput
}

type projectStatusStatsWarehousesHealthPatchPtrType ProjectStatusStatsWarehousesHealthPatchArgs

func ProjectStatusStatsWarehousesHealthPatchPtr(v *ProjectStatusStatsWarehousesHealthPatchArgs) ProjectStatusStatsWarehousesHealthPatchPtrInput {
	return (*projectStatusStatsWarehousesHealthPatchPtrType)(v)
}

func (*projectStatusStatsWarehousesHealthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsWarehousesHealthPatch)(nil)).Elem()
}

func (i *projectStatusStatsWarehousesHealthPatchPtrType) ToProjectStatusStatsWarehousesHealthPatchPtrOutput() ProjectStatusStatsWarehousesHealthPatchPtrOutput {
	return i.ToProjectStatusStatsWarehousesHealthPatchPtrOutputWithContext(context.Background())
}

func (i *projectStatusStatsWarehousesHealthPatchPtrType) ToProjectStatusStatsWarehousesHealthPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesHealthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsWarehousesHealthPatchPtrOutput)
}

// Health contains a summary of the collective health of a Project's
// Warehouses.
type ProjectStatusStatsWarehousesHealthPatchOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsWarehousesHealthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsWarehousesHealthPatch)(nil)).Elem()
}

func (o ProjectStatusStatsWarehousesHealthPatchOutput) ToProjectStatusStatsWarehousesHealthPatchOutput() ProjectStatusStatsWarehousesHealthPatchOutput {
	return o
}

func (o ProjectStatusStatsWarehousesHealthPatchOutput) ToProjectStatusStatsWarehousesHealthPatchOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesHealthPatchOutput {
	return o
}

func (o ProjectStatusStatsWarehousesHealthPatchOutput) ToProjectStatusStatsWarehousesHealthPatchPtrOutput() ProjectStatusStatsWarehousesHealthPatchPtrOutput {
	return o.ToProjectStatusStatsWarehousesHealthPatchPtrOutputWithContext(context.Background())
}

func (o ProjectStatusStatsWarehousesHealthPatchOutput) ToProjectStatusStatsWarehousesHealthPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesHealthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectStatusStatsWarehousesHealthPatch) *ProjectStatusStatsWarehousesHealthPatch {
		return &v
	}).(ProjectStatusStatsWarehousesHealthPatchPtrOutput)
}

// Healthy contains the number of resources that are explicitly healthy.
func (o ProjectStatusStatsWarehousesHealthPatchOutput) Healthy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectStatusStatsWarehousesHealthPatch) *int { return v.Healthy }).(pulumi.IntPtrOutput)
}

type ProjectStatusStatsWarehousesHealthPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsWarehousesHealthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsWarehousesHealthPatch)(nil)).Elem()
}

func (o ProjectStatusStatsWarehousesHealthPatchPtrOutput) ToProjectStatusStatsWarehousesHealthPatchPtrOutput() ProjectStatusStatsWarehousesHealthPatchPtrOutput {
	return o
}

func (o ProjectStatusStatsWarehousesHealthPatchPtrOutput) ToProjectStatusStatsWarehousesHealthPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesHealthPatchPtrOutput {
	return o
}

func (o ProjectStatusStatsWarehousesHealthPatchPtrOutput) Elem() ProjectStatusStatsWarehousesHealthPatchOutput {
	return o.ApplyT(func(v *ProjectStatusStatsWarehousesHealthPatch) ProjectStatusStatsWarehousesHealthPatch {
		if v != nil {
			return *v
		}
		var ret ProjectStatusStatsWarehousesHealthPatch
		return ret
	}).(ProjectStatusStatsWarehousesHealthPatchOutput)
}

// Healthy contains the number of resources that are explicitly healthy.
func (o ProjectStatusStatsWarehousesHealthPatchPtrOutput) Healthy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStatsWarehousesHealthPatch) *int {
		if v == nil {
			return nil
		}
		return v.Healthy
	}).(pulumi.IntPtrOutput)
}

// Warehouses contains a summary of the collective state of the Project's
// Warehouses.
type ProjectStatusStatsWarehousesPatch struct {
	// Count contains the total number of Warehouses in the Project.
	Count  *int                                     `pulumi:"count"`
	Health *ProjectStatusStatsWarehousesHealthPatch `pulumi:"health"`
}

// ProjectStatusStatsWarehousesPatchInput is an input type that accepts ProjectStatusStatsWarehousesPatchArgs and ProjectStatusStatsWarehousesPatchOutput values.
// You can construct a concrete instance of `ProjectStatusStatsWarehousesPatchInput` via:
//
//	ProjectStatusStatsWarehousesPatchArgs{...}
type ProjectStatusStatsWarehousesPatchInput interface {
	pulumi.Input

	ToProjectStatusStatsWarehousesPatchOutput() ProjectStatusStatsWarehousesPatchOutput
	ToProjectStatusStatsWarehousesPatchOutputWithContext(context.Context) ProjectStatusStatsWarehousesPatchOutput
}

// Warehouses contains a summary of the collective state of the Project's
// Warehouses.
type ProjectStatusStatsWarehousesPatchArgs struct {
	// Count contains the total number of Warehouses in the Project.
	Count  pulumi.IntPtrInput                              `pulumi:"count"`
	Health ProjectStatusStatsWarehousesHealthPatchPtrInput `pulumi:"health"`
}

func (ProjectStatusStatsWarehousesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsWarehousesPatch)(nil)).Elem()
}

func (i ProjectStatusStatsWarehousesPatchArgs) ToProjectStatusStatsWarehousesPatchOutput() ProjectStatusStatsWarehousesPatchOutput {
	return i.ToProjectStatusStatsWarehousesPatchOutputWithContext(context.Background())
}

func (i ProjectStatusStatsWarehousesPatchArgs) ToProjectStatusStatsWarehousesPatchOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsWarehousesPatchOutput)
}

func (i ProjectStatusStatsWarehousesPatchArgs) ToProjectStatusStatsWarehousesPatchPtrOutput() ProjectStatusStatsWarehousesPatchPtrOutput {
	return i.ToProjectStatusStatsWarehousesPatchPtrOutputWithContext(context.Background())
}

func (i ProjectStatusStatsWarehousesPatchArgs) ToProjectStatusStatsWarehousesPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsWarehousesPatchOutput).ToProjectStatusStatsWarehousesPatchPtrOutputWithContext(ctx)
}

// ProjectStatusStatsWarehousesPatchPtrInput is an input type that accepts ProjectStatusStatsWarehousesPatchArgs, ProjectStatusStatsWarehousesPatchPtr and ProjectStatusStatsWarehousesPatchPtrOutput values.
// You can construct a concrete instance of `ProjectStatusStatsWarehousesPatchPtrInput` via:
//
//	        ProjectStatusStatsWarehousesPatchArgs{...}
//
//	or:
//
//	        nil
type ProjectStatusStatsWarehousesPatchPtrInput interface {
	pulumi.Input

	ToProjectStatusStatsWarehousesPatchPtrOutput() ProjectStatusStatsWarehousesPatchPtrOutput
	ToProjectStatusStatsWarehousesPatchPtrOutputWithContext(context.Context) ProjectStatusStatsWarehousesPatchPtrOutput
}

type projectStatusStatsWarehousesPatchPtrType ProjectStatusStatsWarehousesPatchArgs

func ProjectStatusStatsWarehousesPatchPtr(v *ProjectStatusStatsWarehousesPatchArgs) ProjectStatusStatsWarehousesPatchPtrInput {
	return (*projectStatusStatsWarehousesPatchPtrType)(v)
}

func (*projectStatusStatsWarehousesPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsWarehousesPatch)(nil)).Elem()
}

func (i *projectStatusStatsWarehousesPatchPtrType) ToProjectStatusStatsWarehousesPatchPtrOutput() ProjectStatusStatsWarehousesPatchPtrOutput {
	return i.ToProjectStatusStatsWarehousesPatchPtrOutputWithContext(context.Background())
}

func (i *projectStatusStatsWarehousesPatchPtrType) ToProjectStatusStatsWarehousesPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectStatusStatsWarehousesPatchPtrOutput)
}

// Warehouses contains a summary of the collective state of the Project's
// Warehouses.
type ProjectStatusStatsWarehousesPatchOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsWarehousesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatusStatsWarehousesPatch)(nil)).Elem()
}

func (o ProjectStatusStatsWarehousesPatchOutput) ToProjectStatusStatsWarehousesPatchOutput() ProjectStatusStatsWarehousesPatchOutput {
	return o
}

func (o ProjectStatusStatsWarehousesPatchOutput) ToProjectStatusStatsWarehousesPatchOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesPatchOutput {
	return o
}

func (o ProjectStatusStatsWarehousesPatchOutput) ToProjectStatusStatsWarehousesPatchPtrOutput() ProjectStatusStatsWarehousesPatchPtrOutput {
	return o.ToProjectStatusStatsWarehousesPatchPtrOutputWithContext(context.Background())
}

func (o ProjectStatusStatsWarehousesPatchOutput) ToProjectStatusStatsWarehousesPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectStatusStatsWarehousesPatch) *ProjectStatusStatsWarehousesPatch {
		return &v
	}).(ProjectStatusStatsWarehousesPatchPtrOutput)
}

// Count contains the total number of Warehouses in the Project.
func (o ProjectStatusStatsWarehousesPatchOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectStatusStatsWarehousesPatch) *int { return v.Count }).(pulumi.IntPtrOutput)
}

func (o ProjectStatusStatsWarehousesPatchOutput) Health() ProjectStatusStatsWarehousesHealthPatchPtrOutput {
	return o.ApplyT(func(v ProjectStatusStatsWarehousesPatch) *ProjectStatusStatsWarehousesHealthPatch { return v.Health }).(ProjectStatusStatsWarehousesHealthPatchPtrOutput)
}

type ProjectStatusStatsWarehousesPatchPtrOutput struct{ *pulumi.OutputState }

func (ProjectStatusStatsWarehousesPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatusStatsWarehousesPatch)(nil)).Elem()
}

func (o ProjectStatusStatsWarehousesPatchPtrOutput) ToProjectStatusStatsWarehousesPatchPtrOutput() ProjectStatusStatsWarehousesPatchPtrOutput {
	return o
}

func (o ProjectStatusStatsWarehousesPatchPtrOutput) ToProjectStatusStatsWarehousesPatchPtrOutputWithContext(ctx context.Context) ProjectStatusStatsWarehousesPatchPtrOutput {
	return o
}

func (o ProjectStatusStatsWarehousesPatchPtrOutput) Elem() ProjectStatusStatsWarehousesPatchOutput {
	return o.ApplyT(func(v *ProjectStatusStatsWarehousesPatch) ProjectStatusStatsWarehousesPatch {
		if v != nil {
			return *v
		}
		var ret ProjectStatusStatsWarehousesPatch
		return ret
	}).(ProjectStatusStatsWarehousesPatchOutput)
}

// Count contains the total number of Warehouses in the Project.
func (o ProjectStatusStatsWarehousesPatchPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStatsWarehousesPatch) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

func (o ProjectStatusStatsWarehousesPatchPtrOutput) Health() ProjectStatusStatsWarehousesHealthPatchPtrOutput {
	return o.ApplyT(func(v *ProjectStatusStatsWarehousesPatch) *ProjectStatusStatsWarehousesHealthPatch {
		if v == nil {
			return nil
		}
		return v.Health
	}).(ProjectStatusStatsWarehousesHealthPatchPtrOutput)
}

// Promotion represents a request to transition a particular Stage into a
// particular Freight.
type PromotionType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *PromotionSpec     `pulumi:"spec"`
	Status   *PromotionStatus   `pulumi:"status"`
}

// PromotionTypeInput is an input type that accepts PromotionTypeArgs and PromotionTypeOutput values.
// You can construct a concrete instance of `PromotionTypeInput` via:
//
//	PromotionTypeArgs{...}
type PromotionTypeInput interface {
	pulumi.Input

	ToPromotionTypeOutput() PromotionTypeOutput
	ToPromotionTypeOutputWithContext(context.Context) PromotionTypeOutput
}

// Promotion represents a request to transition a particular Stage into a
// particular Freight.
type PromotionTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     PromotionSpecPtrInput     `pulumi:"spec"`
	Status   PromotionStatusPtrInput   `pulumi:"status"`
}

func (PromotionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionType)(nil)).Elem()
}

func (i PromotionTypeArgs) ToPromotionTypeOutput() PromotionTypeOutput {
	return i.ToPromotionTypeOutputWithContext(context.Background())
}

func (i PromotionTypeArgs) ToPromotionTypeOutputWithContext(ctx context.Context) PromotionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTypeOutput)
}

// PromotionTypeArrayInput is an input type that accepts PromotionTypeArray and PromotionTypeArrayOutput values.
// You can construct a concrete instance of `PromotionTypeArrayInput` via:
//
//	PromotionTypeArray{ PromotionTypeArgs{...} }
type PromotionTypeArrayInput interface {
	pulumi.Input

	ToPromotionTypeArrayOutput() PromotionTypeArrayOutput
	ToPromotionTypeArrayOutputWithContext(context.Context) PromotionTypeArrayOutput
}

type PromotionTypeArray []PromotionTypeInput

func (PromotionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionType)(nil)).Elem()
}

func (i PromotionTypeArray) ToPromotionTypeArrayOutput() PromotionTypeArrayOutput {
	return i.ToPromotionTypeArrayOutputWithContext(context.Background())
}

func (i PromotionTypeArray) ToPromotionTypeArrayOutputWithContext(ctx context.Context) PromotionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTypeArrayOutput)
}

// Promotion represents a request to transition a particular Stage into a
// particular Freight.
type PromotionTypeOutput struct{ *pulumi.OutputState }

func (PromotionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionType)(nil)).Elem()
}

func (o PromotionTypeOutput) ToPromotionTypeOutput() PromotionTypeOutput {
	return o
}

func (o PromotionTypeOutput) ToPromotionTypeOutputWithContext(ctx context.Context) PromotionTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PromotionTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PromotionTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v PromotionType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o PromotionTypeOutput) Spec() PromotionSpecPtrOutput {
	return o.ApplyT(func(v PromotionType) *PromotionSpec { return v.Spec }).(PromotionSpecPtrOutput)
}

func (o PromotionTypeOutput) Status() PromotionStatusPtrOutput {
	return o.ApplyT(func(v PromotionType) *PromotionStatus { return v.Status }).(PromotionStatusPtrOutput)
}

type PromotionTypeArrayOutput struct{ *pulumi.OutputState }

func (PromotionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionType)(nil)).Elem()
}

func (o PromotionTypeArrayOutput) ToPromotionTypeArrayOutput() PromotionTypeArrayOutput {
	return o
}

func (o PromotionTypeArrayOutput) ToPromotionTypeArrayOutputWithContext(ctx context.Context) PromotionTypeArrayOutput {
	return o
}

func (o PromotionTypeArrayOutput) Index(i pulumi.IntInput) PromotionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionType {
		return vs[0].([]PromotionType)[vs[1].(int)]
	}).(PromotionTypeOutput)
}

// PromotionList is a list of Promotion
type PromotionListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of promotions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PromotionType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// PromotionListTypeInput is an input type that accepts PromotionListTypeArgs and PromotionListTypeOutput values.
// You can construct a concrete instance of `PromotionListTypeInput` via:
//
//	PromotionListTypeArgs{...}
type PromotionListTypeInput interface {
	pulumi.Input

	ToPromotionListTypeOutput() PromotionListTypeOutput
	ToPromotionListTypeOutputWithContext(context.Context) PromotionListTypeOutput
}

// PromotionList is a list of Promotion
type PromotionListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of promotions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PromotionTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (PromotionListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionListType)(nil)).Elem()
}

func (i PromotionListTypeArgs) ToPromotionListTypeOutput() PromotionListTypeOutput {
	return i.ToPromotionListTypeOutputWithContext(context.Background())
}

func (i PromotionListTypeArgs) ToPromotionListTypeOutputWithContext(ctx context.Context) PromotionListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionListTypeOutput)
}

// PromotionList is a list of Promotion
type PromotionListTypeOutput struct{ *pulumi.OutputState }

func (PromotionListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionListType)(nil)).Elem()
}

func (o PromotionListTypeOutput) ToPromotionListTypeOutput() PromotionListTypeOutput {
	return o
}

func (o PromotionListTypeOutput) ToPromotionListTypeOutputWithContext(ctx context.Context) PromotionListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PromotionListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of promotions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PromotionListTypeOutput) Items() PromotionTypeArrayOutput {
	return o.ApplyT(func(v PromotionListType) []PromotionType { return v.Items }).(PromotionTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v PromotionListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// Promotion represents a request to transition a particular Stage into a
// particular Freight.
type PromotionPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *PromotionSpecPatch     `pulumi:"spec"`
	Status   *PromotionStatusPatch   `pulumi:"status"`
}

// PromotionPatchTypeInput is an input type that accepts PromotionPatchTypeArgs and PromotionPatchTypeOutput values.
// You can construct a concrete instance of `PromotionPatchTypeInput` via:
//
//	PromotionPatchTypeArgs{...}
type PromotionPatchTypeInput interface {
	pulumi.Input

	ToPromotionPatchTypeOutput() PromotionPatchTypeOutput
	ToPromotionPatchTypeOutputWithContext(context.Context) PromotionPatchTypeOutput
}

// Promotion represents a request to transition a particular Stage into a
// particular Freight.
type PromotionPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     PromotionSpecPatchPtrInput     `pulumi:"spec"`
	Status   PromotionStatusPatchPtrInput   `pulumi:"status"`
}

func (PromotionPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionPatchType)(nil)).Elem()
}

func (i PromotionPatchTypeArgs) ToPromotionPatchTypeOutput() PromotionPatchTypeOutput {
	return i.ToPromotionPatchTypeOutputWithContext(context.Background())
}

func (i PromotionPatchTypeArgs) ToPromotionPatchTypeOutputWithContext(ctx context.Context) PromotionPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionPatchTypeOutput)
}

// Promotion represents a request to transition a particular Stage into a
// particular Freight.
type PromotionPatchTypeOutput struct{ *pulumi.OutputState }

func (PromotionPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionPatchType)(nil)).Elem()
}

func (o PromotionPatchTypeOutput) ToPromotionPatchTypeOutput() PromotionPatchTypeOutput {
	return o
}

func (o PromotionPatchTypeOutput) ToPromotionPatchTypeOutputWithContext(ctx context.Context) PromotionPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PromotionPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PromotionPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v PromotionPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o PromotionPatchTypeOutput) Spec() PromotionSpecPatchPtrOutput {
	return o.ApplyT(func(v PromotionPatchType) *PromotionSpecPatch { return v.Spec }).(PromotionSpecPatchPtrOutput)
}

func (o PromotionPatchTypeOutput) Status() PromotionStatusPatchPtrOutput {
	return o.ApplyT(func(v PromotionPatchType) *PromotionStatusPatch { return v.Status }).(PromotionStatusPatchPtrOutput)
}

// Spec describes the desired transition of a specific Stage into a specific
// Freight.
type PromotionSpec struct {
	// Freight specifies the piece of Freight to be promoted into the Stage
	// referenced by the Stage field.
	Freight *string `pulumi:"freight"`
	// Stage specifies the name of the Stage to which this Promotion
	// applies. The Stage referenced by this field MUST be in the same
	// namespace as the Promotion.
	Stage *string `pulumi:"stage"`
	// Steps specifies the directives to be executed as part of this Promotion.
	// The order in which the directives are executed is the order in which they
	// are listed in this field.
	Steps []PromotionSpecSteps `pulumi:"steps"`
	// Vars is a list of variables that can be referenced by expressions in
	// promotion steps.
	Vars []PromotionSpecVars `pulumi:"vars"`
}

// PromotionSpecInput is an input type that accepts PromotionSpecArgs and PromotionSpecOutput values.
// You can construct a concrete instance of `PromotionSpecInput` via:
//
//	PromotionSpecArgs{...}
type PromotionSpecInput interface {
	pulumi.Input

	ToPromotionSpecOutput() PromotionSpecOutput
	ToPromotionSpecOutputWithContext(context.Context) PromotionSpecOutput
}

// Spec describes the desired transition of a specific Stage into a specific
// Freight.
type PromotionSpecArgs struct {
	// Freight specifies the piece of Freight to be promoted into the Stage
	// referenced by the Stage field.
	Freight pulumi.StringPtrInput `pulumi:"freight"`
	// Stage specifies the name of the Stage to which this Promotion
	// applies. The Stage referenced by this field MUST be in the same
	// namespace as the Promotion.
	Stage pulumi.StringPtrInput `pulumi:"stage"`
	// Steps specifies the directives to be executed as part of this Promotion.
	// The order in which the directives are executed is the order in which they
	// are listed in this field.
	Steps PromotionSpecStepsArrayInput `pulumi:"steps"`
	// Vars is a list of variables that can be referenced by expressions in
	// promotion steps.
	Vars PromotionSpecVarsArrayInput `pulumi:"vars"`
}

func (PromotionSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpec)(nil)).Elem()
}

func (i PromotionSpecArgs) ToPromotionSpecOutput() PromotionSpecOutput {
	return i.ToPromotionSpecOutputWithContext(context.Background())
}

func (i PromotionSpecArgs) ToPromotionSpecOutputWithContext(ctx context.Context) PromotionSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecOutput)
}

func (i PromotionSpecArgs) ToPromotionSpecPtrOutput() PromotionSpecPtrOutput {
	return i.ToPromotionSpecPtrOutputWithContext(context.Background())
}

func (i PromotionSpecArgs) ToPromotionSpecPtrOutputWithContext(ctx context.Context) PromotionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecOutput).ToPromotionSpecPtrOutputWithContext(ctx)
}

// PromotionSpecPtrInput is an input type that accepts PromotionSpecArgs, PromotionSpecPtr and PromotionSpecPtrOutput values.
// You can construct a concrete instance of `PromotionSpecPtrInput` via:
//
//	        PromotionSpecArgs{...}
//
//	or:
//
//	        nil
type PromotionSpecPtrInput interface {
	pulumi.Input

	ToPromotionSpecPtrOutput() PromotionSpecPtrOutput
	ToPromotionSpecPtrOutputWithContext(context.Context) PromotionSpecPtrOutput
}

type promotionSpecPtrType PromotionSpecArgs

func PromotionSpecPtr(v *PromotionSpecArgs) PromotionSpecPtrInput {
	return (*promotionSpecPtrType)(v)
}

func (*promotionSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionSpec)(nil)).Elem()
}

func (i *promotionSpecPtrType) ToPromotionSpecPtrOutput() PromotionSpecPtrOutput {
	return i.ToPromotionSpecPtrOutputWithContext(context.Background())
}

func (i *promotionSpecPtrType) ToPromotionSpecPtrOutputWithContext(ctx context.Context) PromotionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecPtrOutput)
}

// Spec describes the desired transition of a specific Stage into a specific
// Freight.
type PromotionSpecOutput struct{ *pulumi.OutputState }

func (PromotionSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpec)(nil)).Elem()
}

func (o PromotionSpecOutput) ToPromotionSpecOutput() PromotionSpecOutput {
	return o
}

func (o PromotionSpecOutput) ToPromotionSpecOutputWithContext(ctx context.Context) PromotionSpecOutput {
	return o
}

func (o PromotionSpecOutput) ToPromotionSpecPtrOutput() PromotionSpecPtrOutput {
	return o.ToPromotionSpecPtrOutputWithContext(context.Background())
}

func (o PromotionSpecOutput) ToPromotionSpecPtrOutputWithContext(ctx context.Context) PromotionSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionSpec) *PromotionSpec {
		return &v
	}).(PromotionSpecPtrOutput)
}

// Freight specifies the piece of Freight to be promoted into the Stage
// referenced by the Stage field.
func (o PromotionSpecOutput) Freight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpec) *string { return v.Freight }).(pulumi.StringPtrOutput)
}

// Stage specifies the name of the Stage to which this Promotion
// applies. The Stage referenced by this field MUST be in the same
// namespace as the Promotion.
func (o PromotionSpecOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpec) *string { return v.Stage }).(pulumi.StringPtrOutput)
}

// Steps specifies the directives to be executed as part of this Promotion.
// The order in which the directives are executed is the order in which they
// are listed in this field.
func (o PromotionSpecOutput) Steps() PromotionSpecStepsArrayOutput {
	return o.ApplyT(func(v PromotionSpec) []PromotionSpecSteps { return v.Steps }).(PromotionSpecStepsArrayOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// promotion steps.
func (o PromotionSpecOutput) Vars() PromotionSpecVarsArrayOutput {
	return o.ApplyT(func(v PromotionSpec) []PromotionSpecVars { return v.Vars }).(PromotionSpecVarsArrayOutput)
}

type PromotionSpecPtrOutput struct{ *pulumi.OutputState }

func (PromotionSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionSpec)(nil)).Elem()
}

func (o PromotionSpecPtrOutput) ToPromotionSpecPtrOutput() PromotionSpecPtrOutput {
	return o
}

func (o PromotionSpecPtrOutput) ToPromotionSpecPtrOutputWithContext(ctx context.Context) PromotionSpecPtrOutput {
	return o
}

func (o PromotionSpecPtrOutput) Elem() PromotionSpecOutput {
	return o.ApplyT(func(v *PromotionSpec) PromotionSpec {
		if v != nil {
			return *v
		}
		var ret PromotionSpec
		return ret
	}).(PromotionSpecOutput)
}

// Freight specifies the piece of Freight to be promoted into the Stage
// referenced by the Stage field.
func (o PromotionSpecPtrOutput) Freight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionSpec) *string {
		if v == nil {
			return nil
		}
		return v.Freight
	}).(pulumi.StringPtrOutput)
}

// Stage specifies the name of the Stage to which this Promotion
// applies. The Stage referenced by this field MUST be in the same
// namespace as the Promotion.
func (o PromotionSpecPtrOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionSpec) *string {
		if v == nil {
			return nil
		}
		return v.Stage
	}).(pulumi.StringPtrOutput)
}

// Steps specifies the directives to be executed as part of this Promotion.
// The order in which the directives are executed is the order in which they
// are listed in this field.
func (o PromotionSpecPtrOutput) Steps() PromotionSpecStepsArrayOutput {
	return o.ApplyT(func(v *PromotionSpec) []PromotionSpecSteps {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(PromotionSpecStepsArrayOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// promotion steps.
func (o PromotionSpecPtrOutput) Vars() PromotionSpecVarsArrayOutput {
	return o.ApplyT(func(v *PromotionSpec) []PromotionSpecVars {
		if v == nil {
			return nil
		}
		return v.Vars
	}).(PromotionSpecVarsArrayOutput)
}

// Spec describes the desired transition of a specific Stage into a specific
// Freight.
type PromotionSpecPatch struct {
	// Freight specifies the piece of Freight to be promoted into the Stage
	// referenced by the Stage field.
	Freight *string `pulumi:"freight"`
	// Stage specifies the name of the Stage to which this Promotion
	// applies. The Stage referenced by this field MUST be in the same
	// namespace as the Promotion.
	Stage *string `pulumi:"stage"`
	// Steps specifies the directives to be executed as part of this Promotion.
	// The order in which the directives are executed is the order in which they
	// are listed in this field.
	Steps []PromotionSpecStepsPatch `pulumi:"steps"`
	// Vars is a list of variables that can be referenced by expressions in
	// promotion steps.
	Vars []PromotionSpecVarsPatch `pulumi:"vars"`
}

// PromotionSpecPatchInput is an input type that accepts PromotionSpecPatchArgs and PromotionSpecPatchOutput values.
// You can construct a concrete instance of `PromotionSpecPatchInput` via:
//
//	PromotionSpecPatchArgs{...}
type PromotionSpecPatchInput interface {
	pulumi.Input

	ToPromotionSpecPatchOutput() PromotionSpecPatchOutput
	ToPromotionSpecPatchOutputWithContext(context.Context) PromotionSpecPatchOutput
}

// Spec describes the desired transition of a specific Stage into a specific
// Freight.
type PromotionSpecPatchArgs struct {
	// Freight specifies the piece of Freight to be promoted into the Stage
	// referenced by the Stage field.
	Freight pulumi.StringPtrInput `pulumi:"freight"`
	// Stage specifies the name of the Stage to which this Promotion
	// applies. The Stage referenced by this field MUST be in the same
	// namespace as the Promotion.
	Stage pulumi.StringPtrInput `pulumi:"stage"`
	// Steps specifies the directives to be executed as part of this Promotion.
	// The order in which the directives are executed is the order in which they
	// are listed in this field.
	Steps PromotionSpecStepsPatchArrayInput `pulumi:"steps"`
	// Vars is a list of variables that can be referenced by expressions in
	// promotion steps.
	Vars PromotionSpecVarsPatchArrayInput `pulumi:"vars"`
}

func (PromotionSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecPatch)(nil)).Elem()
}

func (i PromotionSpecPatchArgs) ToPromotionSpecPatchOutput() PromotionSpecPatchOutput {
	return i.ToPromotionSpecPatchOutputWithContext(context.Background())
}

func (i PromotionSpecPatchArgs) ToPromotionSpecPatchOutputWithContext(ctx context.Context) PromotionSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecPatchOutput)
}

func (i PromotionSpecPatchArgs) ToPromotionSpecPatchPtrOutput() PromotionSpecPatchPtrOutput {
	return i.ToPromotionSpecPatchPtrOutputWithContext(context.Background())
}

func (i PromotionSpecPatchArgs) ToPromotionSpecPatchPtrOutputWithContext(ctx context.Context) PromotionSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecPatchOutput).ToPromotionSpecPatchPtrOutputWithContext(ctx)
}

// PromotionSpecPatchPtrInput is an input type that accepts PromotionSpecPatchArgs, PromotionSpecPatchPtr and PromotionSpecPatchPtrOutput values.
// You can construct a concrete instance of `PromotionSpecPatchPtrInput` via:
//
//	        PromotionSpecPatchArgs{...}
//
//	or:
//
//	        nil
type PromotionSpecPatchPtrInput interface {
	pulumi.Input

	ToPromotionSpecPatchPtrOutput() PromotionSpecPatchPtrOutput
	ToPromotionSpecPatchPtrOutputWithContext(context.Context) PromotionSpecPatchPtrOutput
}

type promotionSpecPatchPtrType PromotionSpecPatchArgs

func PromotionSpecPatchPtr(v *PromotionSpecPatchArgs) PromotionSpecPatchPtrInput {
	return (*promotionSpecPatchPtrType)(v)
}

func (*promotionSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionSpecPatch)(nil)).Elem()
}

func (i *promotionSpecPatchPtrType) ToPromotionSpecPatchPtrOutput() PromotionSpecPatchPtrOutput {
	return i.ToPromotionSpecPatchPtrOutputWithContext(context.Background())
}

func (i *promotionSpecPatchPtrType) ToPromotionSpecPatchPtrOutputWithContext(ctx context.Context) PromotionSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecPatchPtrOutput)
}

// Spec describes the desired transition of a specific Stage into a specific
// Freight.
type PromotionSpecPatchOutput struct{ *pulumi.OutputState }

func (PromotionSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecPatch)(nil)).Elem()
}

func (o PromotionSpecPatchOutput) ToPromotionSpecPatchOutput() PromotionSpecPatchOutput {
	return o
}

func (o PromotionSpecPatchOutput) ToPromotionSpecPatchOutputWithContext(ctx context.Context) PromotionSpecPatchOutput {
	return o
}

func (o PromotionSpecPatchOutput) ToPromotionSpecPatchPtrOutput() PromotionSpecPatchPtrOutput {
	return o.ToPromotionSpecPatchPtrOutputWithContext(context.Background())
}

func (o PromotionSpecPatchOutput) ToPromotionSpecPatchPtrOutputWithContext(ctx context.Context) PromotionSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionSpecPatch) *PromotionSpecPatch {
		return &v
	}).(PromotionSpecPatchPtrOutput)
}

// Freight specifies the piece of Freight to be promoted into the Stage
// referenced by the Stage field.
func (o PromotionSpecPatchOutput) Freight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecPatch) *string { return v.Freight }).(pulumi.StringPtrOutput)
}

// Stage specifies the name of the Stage to which this Promotion
// applies. The Stage referenced by this field MUST be in the same
// namespace as the Promotion.
func (o PromotionSpecPatchOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecPatch) *string { return v.Stage }).(pulumi.StringPtrOutput)
}

// Steps specifies the directives to be executed as part of this Promotion.
// The order in which the directives are executed is the order in which they
// are listed in this field.
func (o PromotionSpecPatchOutput) Steps() PromotionSpecStepsPatchArrayOutput {
	return o.ApplyT(func(v PromotionSpecPatch) []PromotionSpecStepsPatch { return v.Steps }).(PromotionSpecStepsPatchArrayOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// promotion steps.
func (o PromotionSpecPatchOutput) Vars() PromotionSpecVarsPatchArrayOutput {
	return o.ApplyT(func(v PromotionSpecPatch) []PromotionSpecVarsPatch { return v.Vars }).(PromotionSpecVarsPatchArrayOutput)
}

type PromotionSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (PromotionSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionSpecPatch)(nil)).Elem()
}

func (o PromotionSpecPatchPtrOutput) ToPromotionSpecPatchPtrOutput() PromotionSpecPatchPtrOutput {
	return o
}

func (o PromotionSpecPatchPtrOutput) ToPromotionSpecPatchPtrOutputWithContext(ctx context.Context) PromotionSpecPatchPtrOutput {
	return o
}

func (o PromotionSpecPatchPtrOutput) Elem() PromotionSpecPatchOutput {
	return o.ApplyT(func(v *PromotionSpecPatch) PromotionSpecPatch {
		if v != nil {
			return *v
		}
		var ret PromotionSpecPatch
		return ret
	}).(PromotionSpecPatchOutput)
}

// Freight specifies the piece of Freight to be promoted into the Stage
// referenced by the Stage field.
func (o PromotionSpecPatchPtrOutput) Freight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Freight
	}).(pulumi.StringPtrOutput)
}

// Stage specifies the name of the Stage to which this Promotion
// applies. The Stage referenced by this field MUST be in the same
// namespace as the Promotion.
func (o PromotionSpecPatchPtrOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Stage
	}).(pulumi.StringPtrOutput)
}

// Steps specifies the directives to be executed as part of this Promotion.
// The order in which the directives are executed is the order in which they
// are listed in this field.
func (o PromotionSpecPatchPtrOutput) Steps() PromotionSpecStepsPatchArrayOutput {
	return o.ApplyT(func(v *PromotionSpecPatch) []PromotionSpecStepsPatch {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(PromotionSpecStepsPatchArrayOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// promotion steps.
func (o PromotionSpecPatchPtrOutput) Vars() PromotionSpecVarsPatchArrayOutput {
	return o.ApplyT(func(v *PromotionSpecPatch) []PromotionSpecVarsPatch {
		if v == nil {
			return nil
		}
		return v.Vars
	}).(PromotionSpecVarsPatchArrayOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type PromotionSpecSteps struct {
	// As is the alias this step can be referred to as.
	As *string `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config map[string]interface{} `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    *string                  `pulumi:"if"`
	Retry *PromotionSpecStepsRetry `pulumi:"retry"`
	Task  *PromotionSpecStepsTask  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses *string `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars []PromotionSpecStepsVars `pulumi:"vars"`
}

// PromotionSpecStepsInput is an input type that accepts PromotionSpecStepsArgs and PromotionSpecStepsOutput values.
// You can construct a concrete instance of `PromotionSpecStepsInput` via:
//
//	PromotionSpecStepsArgs{...}
type PromotionSpecStepsInput interface {
	pulumi.Input

	ToPromotionSpecStepsOutput() PromotionSpecStepsOutput
	ToPromotionSpecStepsOutputWithContext(context.Context) PromotionSpecStepsOutput
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type PromotionSpecStepsArgs struct {
	// As is the alias this step can be referred to as.
	As pulumi.StringPtrInput `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config pulumi.MapInput `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError pulumi.BoolPtrInput `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    pulumi.StringPtrInput           `pulumi:"if"`
	Retry PromotionSpecStepsRetryPtrInput `pulumi:"retry"`
	Task  PromotionSpecStepsTaskPtrInput  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses pulumi.StringPtrInput `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars PromotionSpecStepsVarsArrayInput `pulumi:"vars"`
}

func (PromotionSpecStepsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecSteps)(nil)).Elem()
}

func (i PromotionSpecStepsArgs) ToPromotionSpecStepsOutput() PromotionSpecStepsOutput {
	return i.ToPromotionSpecStepsOutputWithContext(context.Background())
}

func (i PromotionSpecStepsArgs) ToPromotionSpecStepsOutputWithContext(ctx context.Context) PromotionSpecStepsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsOutput)
}

// PromotionSpecStepsArrayInput is an input type that accepts PromotionSpecStepsArray and PromotionSpecStepsArrayOutput values.
// You can construct a concrete instance of `PromotionSpecStepsArrayInput` via:
//
//	PromotionSpecStepsArray{ PromotionSpecStepsArgs{...} }
type PromotionSpecStepsArrayInput interface {
	pulumi.Input

	ToPromotionSpecStepsArrayOutput() PromotionSpecStepsArrayOutput
	ToPromotionSpecStepsArrayOutputWithContext(context.Context) PromotionSpecStepsArrayOutput
}

type PromotionSpecStepsArray []PromotionSpecStepsInput

func (PromotionSpecStepsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionSpecSteps)(nil)).Elem()
}

func (i PromotionSpecStepsArray) ToPromotionSpecStepsArrayOutput() PromotionSpecStepsArrayOutput {
	return i.ToPromotionSpecStepsArrayOutputWithContext(context.Background())
}

func (i PromotionSpecStepsArray) ToPromotionSpecStepsArrayOutputWithContext(ctx context.Context) PromotionSpecStepsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsArrayOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type PromotionSpecStepsOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecSteps)(nil)).Elem()
}

func (o PromotionSpecStepsOutput) ToPromotionSpecStepsOutput() PromotionSpecStepsOutput {
	return o
}

func (o PromotionSpecStepsOutput) ToPromotionSpecStepsOutputWithContext(ctx context.Context) PromotionSpecStepsOutput {
	return o
}

// As is the alias this step can be referred to as.
func (o PromotionSpecStepsOutput) As() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecSteps) *string { return v.As }).(pulumi.StringPtrOutput)
}

// Config is opaque configuration for the PromotionStep that is understood
// only by each PromotionStep's implementation. It is legal to utilize
// expressions in defining values at any level of this block.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o PromotionSpecStepsOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v PromotionSpecSteps) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// ContinueOnError is a boolean value that, if set to true, will cause the
// Promotion to continue executing the next step even if this step fails. It
// also will not permit this failure to impact the overall status of the
// Promotion.
func (o PromotionSpecStepsOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PromotionSpecSteps) *bool { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// If is an optional expression that, if present, must evaluate to a boolean
// value. If the expression evaluates to false, the step will be skipped.
// If the expression does not evaluate to a boolean value, the step will be
// considered to have failed.
func (o PromotionSpecStepsOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecSteps) *string { return v.If }).(pulumi.StringPtrOutput)
}

func (o PromotionSpecStepsOutput) Retry() PromotionSpecStepsRetryPtrOutput {
	return o.ApplyT(func(v PromotionSpecSteps) *PromotionSpecStepsRetry { return v.Retry }).(PromotionSpecStepsRetryPtrOutput)
}

func (o PromotionSpecStepsOutput) Task() PromotionSpecStepsTaskPtrOutput {
	return o.ApplyT(func(v PromotionSpecSteps) *PromotionSpecStepsTask { return v.Task }).(PromotionSpecStepsTaskPtrOutput)
}

// Uses identifies a runner that can execute this step.
func (o PromotionSpecStepsOutput) Uses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecSteps) *string { return v.Uses }).(pulumi.StringPtrOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// the step's Config. The values override the values specified in the
// PromotionSpec.
func (o PromotionSpecStepsOutput) Vars() PromotionSpecStepsVarsArrayOutput {
	return o.ApplyT(func(v PromotionSpecSteps) []PromotionSpecStepsVars { return v.Vars }).(PromotionSpecStepsVarsArrayOutput)
}

type PromotionSpecStepsArrayOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionSpecSteps)(nil)).Elem()
}

func (o PromotionSpecStepsArrayOutput) ToPromotionSpecStepsArrayOutput() PromotionSpecStepsArrayOutput {
	return o
}

func (o PromotionSpecStepsArrayOutput) ToPromotionSpecStepsArrayOutputWithContext(ctx context.Context) PromotionSpecStepsArrayOutput {
	return o
}

func (o PromotionSpecStepsArrayOutput) Index(i pulumi.IntInput) PromotionSpecStepsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionSpecSteps {
		return vs[0].([]PromotionSpecSteps)[vs[1].(int)]
	}).(PromotionSpecStepsOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type PromotionSpecStepsPatch struct {
	// As is the alias this step can be referred to as.
	As *string `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config map[string]interface{} `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    *string                       `pulumi:"if"`
	Retry *PromotionSpecStepsRetryPatch `pulumi:"retry"`
	Task  *PromotionSpecStepsTaskPatch  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses *string `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars []PromotionSpecStepsVarsPatch `pulumi:"vars"`
}

// PromotionSpecStepsPatchInput is an input type that accepts PromotionSpecStepsPatchArgs and PromotionSpecStepsPatchOutput values.
// You can construct a concrete instance of `PromotionSpecStepsPatchInput` via:
//
//	PromotionSpecStepsPatchArgs{...}
type PromotionSpecStepsPatchInput interface {
	pulumi.Input

	ToPromotionSpecStepsPatchOutput() PromotionSpecStepsPatchOutput
	ToPromotionSpecStepsPatchOutputWithContext(context.Context) PromotionSpecStepsPatchOutput
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type PromotionSpecStepsPatchArgs struct {
	// As is the alias this step can be referred to as.
	As pulumi.StringPtrInput `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config pulumi.MapInput `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError pulumi.BoolPtrInput `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    pulumi.StringPtrInput                `pulumi:"if"`
	Retry PromotionSpecStepsRetryPatchPtrInput `pulumi:"retry"`
	Task  PromotionSpecStepsTaskPatchPtrInput  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses pulumi.StringPtrInput `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars PromotionSpecStepsVarsPatchArrayInput `pulumi:"vars"`
}

func (PromotionSpecStepsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecStepsPatch)(nil)).Elem()
}

func (i PromotionSpecStepsPatchArgs) ToPromotionSpecStepsPatchOutput() PromotionSpecStepsPatchOutput {
	return i.ToPromotionSpecStepsPatchOutputWithContext(context.Background())
}

func (i PromotionSpecStepsPatchArgs) ToPromotionSpecStepsPatchOutputWithContext(ctx context.Context) PromotionSpecStepsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsPatchOutput)
}

// PromotionSpecStepsPatchArrayInput is an input type that accepts PromotionSpecStepsPatchArray and PromotionSpecStepsPatchArrayOutput values.
// You can construct a concrete instance of `PromotionSpecStepsPatchArrayInput` via:
//
//	PromotionSpecStepsPatchArray{ PromotionSpecStepsPatchArgs{...} }
type PromotionSpecStepsPatchArrayInput interface {
	pulumi.Input

	ToPromotionSpecStepsPatchArrayOutput() PromotionSpecStepsPatchArrayOutput
	ToPromotionSpecStepsPatchArrayOutputWithContext(context.Context) PromotionSpecStepsPatchArrayOutput
}

type PromotionSpecStepsPatchArray []PromotionSpecStepsPatchInput

func (PromotionSpecStepsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionSpecStepsPatch)(nil)).Elem()
}

func (i PromotionSpecStepsPatchArray) ToPromotionSpecStepsPatchArrayOutput() PromotionSpecStepsPatchArrayOutput {
	return i.ToPromotionSpecStepsPatchArrayOutputWithContext(context.Background())
}

func (i PromotionSpecStepsPatchArray) ToPromotionSpecStepsPatchArrayOutputWithContext(ctx context.Context) PromotionSpecStepsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsPatchArrayOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type PromotionSpecStepsPatchOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecStepsPatch)(nil)).Elem()
}

func (o PromotionSpecStepsPatchOutput) ToPromotionSpecStepsPatchOutput() PromotionSpecStepsPatchOutput {
	return o
}

func (o PromotionSpecStepsPatchOutput) ToPromotionSpecStepsPatchOutputWithContext(ctx context.Context) PromotionSpecStepsPatchOutput {
	return o
}

// As is the alias this step can be referred to as.
func (o PromotionSpecStepsPatchOutput) As() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsPatch) *string { return v.As }).(pulumi.StringPtrOutput)
}

// Config is opaque configuration for the PromotionStep that is understood
// only by each PromotionStep's implementation. It is legal to utilize
// expressions in defining values at any level of this block.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o PromotionSpecStepsPatchOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v PromotionSpecStepsPatch) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// ContinueOnError is a boolean value that, if set to true, will cause the
// Promotion to continue executing the next step even if this step fails. It
// also will not permit this failure to impact the overall status of the
// Promotion.
func (o PromotionSpecStepsPatchOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsPatch) *bool { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// If is an optional expression that, if present, must evaluate to a boolean
// value. If the expression evaluates to false, the step will be skipped.
// If the expression does not evaluate to a boolean value, the step will be
// considered to have failed.
func (o PromotionSpecStepsPatchOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsPatch) *string { return v.If }).(pulumi.StringPtrOutput)
}

func (o PromotionSpecStepsPatchOutput) Retry() PromotionSpecStepsRetryPatchPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsPatch) *PromotionSpecStepsRetryPatch { return v.Retry }).(PromotionSpecStepsRetryPatchPtrOutput)
}

func (o PromotionSpecStepsPatchOutput) Task() PromotionSpecStepsTaskPatchPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsPatch) *PromotionSpecStepsTaskPatch { return v.Task }).(PromotionSpecStepsTaskPatchPtrOutput)
}

// Uses identifies a runner that can execute this step.
func (o PromotionSpecStepsPatchOutput) Uses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsPatch) *string { return v.Uses }).(pulumi.StringPtrOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// the step's Config. The values override the values specified in the
// PromotionSpec.
func (o PromotionSpecStepsPatchOutput) Vars() PromotionSpecStepsVarsPatchArrayOutput {
	return o.ApplyT(func(v PromotionSpecStepsPatch) []PromotionSpecStepsVarsPatch { return v.Vars }).(PromotionSpecStepsVarsPatchArrayOutput)
}

type PromotionSpecStepsPatchArrayOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionSpecStepsPatch)(nil)).Elem()
}

func (o PromotionSpecStepsPatchArrayOutput) ToPromotionSpecStepsPatchArrayOutput() PromotionSpecStepsPatchArrayOutput {
	return o
}

func (o PromotionSpecStepsPatchArrayOutput) ToPromotionSpecStepsPatchArrayOutputWithContext(ctx context.Context) PromotionSpecStepsPatchArrayOutput {
	return o
}

func (o PromotionSpecStepsPatchArrayOutput) Index(i pulumi.IntInput) PromotionSpecStepsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionSpecStepsPatch {
		return vs[0].([]PromotionSpecStepsPatch)[vs[1].(int)]
	}).(PromotionSpecStepsPatchOutput)
}

// Retry is the retry policy for this step.
type PromotionSpecStepsRetry struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold *int `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout *string `pulumi:"timeout"`
}

// PromotionSpecStepsRetryInput is an input type that accepts PromotionSpecStepsRetryArgs and PromotionSpecStepsRetryOutput values.
// You can construct a concrete instance of `PromotionSpecStepsRetryInput` via:
//
//	PromotionSpecStepsRetryArgs{...}
type PromotionSpecStepsRetryInput interface {
	pulumi.Input

	ToPromotionSpecStepsRetryOutput() PromotionSpecStepsRetryOutput
	ToPromotionSpecStepsRetryOutputWithContext(context.Context) PromotionSpecStepsRetryOutput
}

// Retry is the retry policy for this step.
type PromotionSpecStepsRetryArgs struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold pulumi.IntPtrInput `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (PromotionSpecStepsRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecStepsRetry)(nil)).Elem()
}

func (i PromotionSpecStepsRetryArgs) ToPromotionSpecStepsRetryOutput() PromotionSpecStepsRetryOutput {
	return i.ToPromotionSpecStepsRetryOutputWithContext(context.Background())
}

func (i PromotionSpecStepsRetryArgs) ToPromotionSpecStepsRetryOutputWithContext(ctx context.Context) PromotionSpecStepsRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsRetryOutput)
}

func (i PromotionSpecStepsRetryArgs) ToPromotionSpecStepsRetryPtrOutput() PromotionSpecStepsRetryPtrOutput {
	return i.ToPromotionSpecStepsRetryPtrOutputWithContext(context.Background())
}

func (i PromotionSpecStepsRetryArgs) ToPromotionSpecStepsRetryPtrOutputWithContext(ctx context.Context) PromotionSpecStepsRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsRetryOutput).ToPromotionSpecStepsRetryPtrOutputWithContext(ctx)
}

// PromotionSpecStepsRetryPtrInput is an input type that accepts PromotionSpecStepsRetryArgs, PromotionSpecStepsRetryPtr and PromotionSpecStepsRetryPtrOutput values.
// You can construct a concrete instance of `PromotionSpecStepsRetryPtrInput` via:
//
//	        PromotionSpecStepsRetryArgs{...}
//
//	or:
//
//	        nil
type PromotionSpecStepsRetryPtrInput interface {
	pulumi.Input

	ToPromotionSpecStepsRetryPtrOutput() PromotionSpecStepsRetryPtrOutput
	ToPromotionSpecStepsRetryPtrOutputWithContext(context.Context) PromotionSpecStepsRetryPtrOutput
}

type promotionSpecStepsRetryPtrType PromotionSpecStepsRetryArgs

func PromotionSpecStepsRetryPtr(v *PromotionSpecStepsRetryArgs) PromotionSpecStepsRetryPtrInput {
	return (*promotionSpecStepsRetryPtrType)(v)
}

func (*promotionSpecStepsRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionSpecStepsRetry)(nil)).Elem()
}

func (i *promotionSpecStepsRetryPtrType) ToPromotionSpecStepsRetryPtrOutput() PromotionSpecStepsRetryPtrOutput {
	return i.ToPromotionSpecStepsRetryPtrOutputWithContext(context.Background())
}

func (i *promotionSpecStepsRetryPtrType) ToPromotionSpecStepsRetryPtrOutputWithContext(ctx context.Context) PromotionSpecStepsRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsRetryPtrOutput)
}

// Retry is the retry policy for this step.
type PromotionSpecStepsRetryOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecStepsRetry)(nil)).Elem()
}

func (o PromotionSpecStepsRetryOutput) ToPromotionSpecStepsRetryOutput() PromotionSpecStepsRetryOutput {
	return o
}

func (o PromotionSpecStepsRetryOutput) ToPromotionSpecStepsRetryOutputWithContext(ctx context.Context) PromotionSpecStepsRetryOutput {
	return o
}

func (o PromotionSpecStepsRetryOutput) ToPromotionSpecStepsRetryPtrOutput() PromotionSpecStepsRetryPtrOutput {
	return o.ToPromotionSpecStepsRetryPtrOutputWithContext(context.Background())
}

func (o PromotionSpecStepsRetryOutput) ToPromotionSpecStepsRetryPtrOutputWithContext(ctx context.Context) PromotionSpecStepsRetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionSpecStepsRetry) *PromotionSpecStepsRetry {
		return &v
	}).(PromotionSpecStepsRetryPtrOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o PromotionSpecStepsRetryOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsRetry) *int { return v.ErrorThreshold }).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o PromotionSpecStepsRetryOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsRetry) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type PromotionSpecStepsRetryPtrOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionSpecStepsRetry)(nil)).Elem()
}

func (o PromotionSpecStepsRetryPtrOutput) ToPromotionSpecStepsRetryPtrOutput() PromotionSpecStepsRetryPtrOutput {
	return o
}

func (o PromotionSpecStepsRetryPtrOutput) ToPromotionSpecStepsRetryPtrOutputWithContext(ctx context.Context) PromotionSpecStepsRetryPtrOutput {
	return o
}

func (o PromotionSpecStepsRetryPtrOutput) Elem() PromotionSpecStepsRetryOutput {
	return o.ApplyT(func(v *PromotionSpecStepsRetry) PromotionSpecStepsRetry {
		if v != nil {
			return *v
		}
		var ret PromotionSpecStepsRetry
		return ret
	}).(PromotionSpecStepsRetryOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o PromotionSpecStepsRetryPtrOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PromotionSpecStepsRetry) *int {
		if v == nil {
			return nil
		}
		return v.ErrorThreshold
	}).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o PromotionSpecStepsRetryPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionSpecStepsRetry) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Retry is the retry policy for this step.
type PromotionSpecStepsRetryPatch struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold *int `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout *string `pulumi:"timeout"`
}

// PromotionSpecStepsRetryPatchInput is an input type that accepts PromotionSpecStepsRetryPatchArgs and PromotionSpecStepsRetryPatchOutput values.
// You can construct a concrete instance of `PromotionSpecStepsRetryPatchInput` via:
//
//	PromotionSpecStepsRetryPatchArgs{...}
type PromotionSpecStepsRetryPatchInput interface {
	pulumi.Input

	ToPromotionSpecStepsRetryPatchOutput() PromotionSpecStepsRetryPatchOutput
	ToPromotionSpecStepsRetryPatchOutputWithContext(context.Context) PromotionSpecStepsRetryPatchOutput
}

// Retry is the retry policy for this step.
type PromotionSpecStepsRetryPatchArgs struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold pulumi.IntPtrInput `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (PromotionSpecStepsRetryPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecStepsRetryPatch)(nil)).Elem()
}

func (i PromotionSpecStepsRetryPatchArgs) ToPromotionSpecStepsRetryPatchOutput() PromotionSpecStepsRetryPatchOutput {
	return i.ToPromotionSpecStepsRetryPatchOutputWithContext(context.Background())
}

func (i PromotionSpecStepsRetryPatchArgs) ToPromotionSpecStepsRetryPatchOutputWithContext(ctx context.Context) PromotionSpecStepsRetryPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsRetryPatchOutput)
}

func (i PromotionSpecStepsRetryPatchArgs) ToPromotionSpecStepsRetryPatchPtrOutput() PromotionSpecStepsRetryPatchPtrOutput {
	return i.ToPromotionSpecStepsRetryPatchPtrOutputWithContext(context.Background())
}

func (i PromotionSpecStepsRetryPatchArgs) ToPromotionSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) PromotionSpecStepsRetryPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsRetryPatchOutput).ToPromotionSpecStepsRetryPatchPtrOutputWithContext(ctx)
}

// PromotionSpecStepsRetryPatchPtrInput is an input type that accepts PromotionSpecStepsRetryPatchArgs, PromotionSpecStepsRetryPatchPtr and PromotionSpecStepsRetryPatchPtrOutput values.
// You can construct a concrete instance of `PromotionSpecStepsRetryPatchPtrInput` via:
//
//	        PromotionSpecStepsRetryPatchArgs{...}
//
//	or:
//
//	        nil
type PromotionSpecStepsRetryPatchPtrInput interface {
	pulumi.Input

	ToPromotionSpecStepsRetryPatchPtrOutput() PromotionSpecStepsRetryPatchPtrOutput
	ToPromotionSpecStepsRetryPatchPtrOutputWithContext(context.Context) PromotionSpecStepsRetryPatchPtrOutput
}

type promotionSpecStepsRetryPatchPtrType PromotionSpecStepsRetryPatchArgs

func PromotionSpecStepsRetryPatchPtr(v *PromotionSpecStepsRetryPatchArgs) PromotionSpecStepsRetryPatchPtrInput {
	return (*promotionSpecStepsRetryPatchPtrType)(v)
}

func (*promotionSpecStepsRetryPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionSpecStepsRetryPatch)(nil)).Elem()
}

func (i *promotionSpecStepsRetryPatchPtrType) ToPromotionSpecStepsRetryPatchPtrOutput() PromotionSpecStepsRetryPatchPtrOutput {
	return i.ToPromotionSpecStepsRetryPatchPtrOutputWithContext(context.Background())
}

func (i *promotionSpecStepsRetryPatchPtrType) ToPromotionSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) PromotionSpecStepsRetryPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsRetryPatchPtrOutput)
}

// Retry is the retry policy for this step.
type PromotionSpecStepsRetryPatchOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsRetryPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecStepsRetryPatch)(nil)).Elem()
}

func (o PromotionSpecStepsRetryPatchOutput) ToPromotionSpecStepsRetryPatchOutput() PromotionSpecStepsRetryPatchOutput {
	return o
}

func (o PromotionSpecStepsRetryPatchOutput) ToPromotionSpecStepsRetryPatchOutputWithContext(ctx context.Context) PromotionSpecStepsRetryPatchOutput {
	return o
}

func (o PromotionSpecStepsRetryPatchOutput) ToPromotionSpecStepsRetryPatchPtrOutput() PromotionSpecStepsRetryPatchPtrOutput {
	return o.ToPromotionSpecStepsRetryPatchPtrOutputWithContext(context.Background())
}

func (o PromotionSpecStepsRetryPatchOutput) ToPromotionSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) PromotionSpecStepsRetryPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionSpecStepsRetryPatch) *PromotionSpecStepsRetryPatch {
		return &v
	}).(PromotionSpecStepsRetryPatchPtrOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o PromotionSpecStepsRetryPatchOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsRetryPatch) *int { return v.ErrorThreshold }).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o PromotionSpecStepsRetryPatchOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsRetryPatch) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type PromotionSpecStepsRetryPatchPtrOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsRetryPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionSpecStepsRetryPatch)(nil)).Elem()
}

func (o PromotionSpecStepsRetryPatchPtrOutput) ToPromotionSpecStepsRetryPatchPtrOutput() PromotionSpecStepsRetryPatchPtrOutput {
	return o
}

func (o PromotionSpecStepsRetryPatchPtrOutput) ToPromotionSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) PromotionSpecStepsRetryPatchPtrOutput {
	return o
}

func (o PromotionSpecStepsRetryPatchPtrOutput) Elem() PromotionSpecStepsRetryPatchOutput {
	return o.ApplyT(func(v *PromotionSpecStepsRetryPatch) PromotionSpecStepsRetryPatch {
		if v != nil {
			return *v
		}
		var ret PromotionSpecStepsRetryPatch
		return ret
	}).(PromotionSpecStepsRetryPatchOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o PromotionSpecStepsRetryPatchPtrOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PromotionSpecStepsRetryPatch) *int {
		if v == nil {
			return nil
		}
		return v.ErrorThreshold
	}).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o PromotionSpecStepsRetryPatchPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionSpecStepsRetryPatch) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type PromotionSpecStepsTask struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind *string `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name *string `pulumi:"name"`
}

// PromotionSpecStepsTaskInput is an input type that accepts PromotionSpecStepsTaskArgs and PromotionSpecStepsTaskOutput values.
// You can construct a concrete instance of `PromotionSpecStepsTaskInput` via:
//
//	PromotionSpecStepsTaskArgs{...}
type PromotionSpecStepsTaskInput interface {
	pulumi.Input

	ToPromotionSpecStepsTaskOutput() PromotionSpecStepsTaskOutput
	ToPromotionSpecStepsTaskOutputWithContext(context.Context) PromotionSpecStepsTaskOutput
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type PromotionSpecStepsTaskArgs struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PromotionSpecStepsTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecStepsTask)(nil)).Elem()
}

func (i PromotionSpecStepsTaskArgs) ToPromotionSpecStepsTaskOutput() PromotionSpecStepsTaskOutput {
	return i.ToPromotionSpecStepsTaskOutputWithContext(context.Background())
}

func (i PromotionSpecStepsTaskArgs) ToPromotionSpecStepsTaskOutputWithContext(ctx context.Context) PromotionSpecStepsTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsTaskOutput)
}

func (i PromotionSpecStepsTaskArgs) ToPromotionSpecStepsTaskPtrOutput() PromotionSpecStepsTaskPtrOutput {
	return i.ToPromotionSpecStepsTaskPtrOutputWithContext(context.Background())
}

func (i PromotionSpecStepsTaskArgs) ToPromotionSpecStepsTaskPtrOutputWithContext(ctx context.Context) PromotionSpecStepsTaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsTaskOutput).ToPromotionSpecStepsTaskPtrOutputWithContext(ctx)
}

// PromotionSpecStepsTaskPtrInput is an input type that accepts PromotionSpecStepsTaskArgs, PromotionSpecStepsTaskPtr and PromotionSpecStepsTaskPtrOutput values.
// You can construct a concrete instance of `PromotionSpecStepsTaskPtrInput` via:
//
//	        PromotionSpecStepsTaskArgs{...}
//
//	or:
//
//	        nil
type PromotionSpecStepsTaskPtrInput interface {
	pulumi.Input

	ToPromotionSpecStepsTaskPtrOutput() PromotionSpecStepsTaskPtrOutput
	ToPromotionSpecStepsTaskPtrOutputWithContext(context.Context) PromotionSpecStepsTaskPtrOutput
}

type promotionSpecStepsTaskPtrType PromotionSpecStepsTaskArgs

func PromotionSpecStepsTaskPtr(v *PromotionSpecStepsTaskArgs) PromotionSpecStepsTaskPtrInput {
	return (*promotionSpecStepsTaskPtrType)(v)
}

func (*promotionSpecStepsTaskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionSpecStepsTask)(nil)).Elem()
}

func (i *promotionSpecStepsTaskPtrType) ToPromotionSpecStepsTaskPtrOutput() PromotionSpecStepsTaskPtrOutput {
	return i.ToPromotionSpecStepsTaskPtrOutputWithContext(context.Background())
}

func (i *promotionSpecStepsTaskPtrType) ToPromotionSpecStepsTaskPtrOutputWithContext(ctx context.Context) PromotionSpecStepsTaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsTaskPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type PromotionSpecStepsTaskOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecStepsTask)(nil)).Elem()
}

func (o PromotionSpecStepsTaskOutput) ToPromotionSpecStepsTaskOutput() PromotionSpecStepsTaskOutput {
	return o
}

func (o PromotionSpecStepsTaskOutput) ToPromotionSpecStepsTaskOutputWithContext(ctx context.Context) PromotionSpecStepsTaskOutput {
	return o
}

func (o PromotionSpecStepsTaskOutput) ToPromotionSpecStepsTaskPtrOutput() PromotionSpecStepsTaskPtrOutput {
	return o.ToPromotionSpecStepsTaskPtrOutputWithContext(context.Background())
}

func (o PromotionSpecStepsTaskOutput) ToPromotionSpecStepsTaskPtrOutputWithContext(ctx context.Context) PromotionSpecStepsTaskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionSpecStepsTask) *PromotionSpecStepsTask {
		return &v
	}).(PromotionSpecStepsTaskPtrOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o PromotionSpecStepsTaskOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsTask) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o PromotionSpecStepsTaskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsTask) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PromotionSpecStepsTaskPtrOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsTaskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionSpecStepsTask)(nil)).Elem()
}

func (o PromotionSpecStepsTaskPtrOutput) ToPromotionSpecStepsTaskPtrOutput() PromotionSpecStepsTaskPtrOutput {
	return o
}

func (o PromotionSpecStepsTaskPtrOutput) ToPromotionSpecStepsTaskPtrOutputWithContext(ctx context.Context) PromotionSpecStepsTaskPtrOutput {
	return o
}

func (o PromotionSpecStepsTaskPtrOutput) Elem() PromotionSpecStepsTaskOutput {
	return o.ApplyT(func(v *PromotionSpecStepsTask) PromotionSpecStepsTask {
		if v != nil {
			return *v
		}
		var ret PromotionSpecStepsTask
		return ret
	}).(PromotionSpecStepsTaskOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o PromotionSpecStepsTaskPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionSpecStepsTask) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o PromotionSpecStepsTaskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionSpecStepsTask) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type PromotionSpecStepsTaskPatch struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind *string `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name *string `pulumi:"name"`
}

// PromotionSpecStepsTaskPatchInput is an input type that accepts PromotionSpecStepsTaskPatchArgs and PromotionSpecStepsTaskPatchOutput values.
// You can construct a concrete instance of `PromotionSpecStepsTaskPatchInput` via:
//
//	PromotionSpecStepsTaskPatchArgs{...}
type PromotionSpecStepsTaskPatchInput interface {
	pulumi.Input

	ToPromotionSpecStepsTaskPatchOutput() PromotionSpecStepsTaskPatchOutput
	ToPromotionSpecStepsTaskPatchOutputWithContext(context.Context) PromotionSpecStepsTaskPatchOutput
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type PromotionSpecStepsTaskPatchArgs struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PromotionSpecStepsTaskPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecStepsTaskPatch)(nil)).Elem()
}

func (i PromotionSpecStepsTaskPatchArgs) ToPromotionSpecStepsTaskPatchOutput() PromotionSpecStepsTaskPatchOutput {
	return i.ToPromotionSpecStepsTaskPatchOutputWithContext(context.Background())
}

func (i PromotionSpecStepsTaskPatchArgs) ToPromotionSpecStepsTaskPatchOutputWithContext(ctx context.Context) PromotionSpecStepsTaskPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsTaskPatchOutput)
}

func (i PromotionSpecStepsTaskPatchArgs) ToPromotionSpecStepsTaskPatchPtrOutput() PromotionSpecStepsTaskPatchPtrOutput {
	return i.ToPromotionSpecStepsTaskPatchPtrOutputWithContext(context.Background())
}

func (i PromotionSpecStepsTaskPatchArgs) ToPromotionSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) PromotionSpecStepsTaskPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsTaskPatchOutput).ToPromotionSpecStepsTaskPatchPtrOutputWithContext(ctx)
}

// PromotionSpecStepsTaskPatchPtrInput is an input type that accepts PromotionSpecStepsTaskPatchArgs, PromotionSpecStepsTaskPatchPtr and PromotionSpecStepsTaskPatchPtrOutput values.
// You can construct a concrete instance of `PromotionSpecStepsTaskPatchPtrInput` via:
//
//	        PromotionSpecStepsTaskPatchArgs{...}
//
//	or:
//
//	        nil
type PromotionSpecStepsTaskPatchPtrInput interface {
	pulumi.Input

	ToPromotionSpecStepsTaskPatchPtrOutput() PromotionSpecStepsTaskPatchPtrOutput
	ToPromotionSpecStepsTaskPatchPtrOutputWithContext(context.Context) PromotionSpecStepsTaskPatchPtrOutput
}

type promotionSpecStepsTaskPatchPtrType PromotionSpecStepsTaskPatchArgs

func PromotionSpecStepsTaskPatchPtr(v *PromotionSpecStepsTaskPatchArgs) PromotionSpecStepsTaskPatchPtrInput {
	return (*promotionSpecStepsTaskPatchPtrType)(v)
}

func (*promotionSpecStepsTaskPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionSpecStepsTaskPatch)(nil)).Elem()
}

func (i *promotionSpecStepsTaskPatchPtrType) ToPromotionSpecStepsTaskPatchPtrOutput() PromotionSpecStepsTaskPatchPtrOutput {
	return i.ToPromotionSpecStepsTaskPatchPtrOutputWithContext(context.Background())
}

func (i *promotionSpecStepsTaskPatchPtrType) ToPromotionSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) PromotionSpecStepsTaskPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsTaskPatchPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type PromotionSpecStepsTaskPatchOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsTaskPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecStepsTaskPatch)(nil)).Elem()
}

func (o PromotionSpecStepsTaskPatchOutput) ToPromotionSpecStepsTaskPatchOutput() PromotionSpecStepsTaskPatchOutput {
	return o
}

func (o PromotionSpecStepsTaskPatchOutput) ToPromotionSpecStepsTaskPatchOutputWithContext(ctx context.Context) PromotionSpecStepsTaskPatchOutput {
	return o
}

func (o PromotionSpecStepsTaskPatchOutput) ToPromotionSpecStepsTaskPatchPtrOutput() PromotionSpecStepsTaskPatchPtrOutput {
	return o.ToPromotionSpecStepsTaskPatchPtrOutputWithContext(context.Background())
}

func (o PromotionSpecStepsTaskPatchOutput) ToPromotionSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) PromotionSpecStepsTaskPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionSpecStepsTaskPatch) *PromotionSpecStepsTaskPatch {
		return &v
	}).(PromotionSpecStepsTaskPatchPtrOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o PromotionSpecStepsTaskPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsTaskPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o PromotionSpecStepsTaskPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsTaskPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PromotionSpecStepsTaskPatchPtrOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsTaskPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionSpecStepsTaskPatch)(nil)).Elem()
}

func (o PromotionSpecStepsTaskPatchPtrOutput) ToPromotionSpecStepsTaskPatchPtrOutput() PromotionSpecStepsTaskPatchPtrOutput {
	return o
}

func (o PromotionSpecStepsTaskPatchPtrOutput) ToPromotionSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) PromotionSpecStepsTaskPatchPtrOutput {
	return o
}

func (o PromotionSpecStepsTaskPatchPtrOutput) Elem() PromotionSpecStepsTaskPatchOutput {
	return o.ApplyT(func(v *PromotionSpecStepsTaskPatch) PromotionSpecStepsTaskPatch {
		if v != nil {
			return *v
		}
		var ret PromotionSpecStepsTaskPatch
		return ret
	}).(PromotionSpecStepsTaskPatchOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o PromotionSpecStepsTaskPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionSpecStepsTaskPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o PromotionSpecStepsTaskPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionSpecStepsTaskPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionSpecStepsVars struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// PromotionSpecStepsVarsInput is an input type that accepts PromotionSpecStepsVarsArgs and PromotionSpecStepsVarsOutput values.
// You can construct a concrete instance of `PromotionSpecStepsVarsInput` via:
//
//	PromotionSpecStepsVarsArgs{...}
type PromotionSpecStepsVarsInput interface {
	pulumi.Input

	ToPromotionSpecStepsVarsOutput() PromotionSpecStepsVarsOutput
	ToPromotionSpecStepsVarsOutputWithContext(context.Context) PromotionSpecStepsVarsOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionSpecStepsVarsArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PromotionSpecStepsVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecStepsVars)(nil)).Elem()
}

func (i PromotionSpecStepsVarsArgs) ToPromotionSpecStepsVarsOutput() PromotionSpecStepsVarsOutput {
	return i.ToPromotionSpecStepsVarsOutputWithContext(context.Background())
}

func (i PromotionSpecStepsVarsArgs) ToPromotionSpecStepsVarsOutputWithContext(ctx context.Context) PromotionSpecStepsVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsVarsOutput)
}

// PromotionSpecStepsVarsArrayInput is an input type that accepts PromotionSpecStepsVarsArray and PromotionSpecStepsVarsArrayOutput values.
// You can construct a concrete instance of `PromotionSpecStepsVarsArrayInput` via:
//
//	PromotionSpecStepsVarsArray{ PromotionSpecStepsVarsArgs{...} }
type PromotionSpecStepsVarsArrayInput interface {
	pulumi.Input

	ToPromotionSpecStepsVarsArrayOutput() PromotionSpecStepsVarsArrayOutput
	ToPromotionSpecStepsVarsArrayOutputWithContext(context.Context) PromotionSpecStepsVarsArrayOutput
}

type PromotionSpecStepsVarsArray []PromotionSpecStepsVarsInput

func (PromotionSpecStepsVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionSpecStepsVars)(nil)).Elem()
}

func (i PromotionSpecStepsVarsArray) ToPromotionSpecStepsVarsArrayOutput() PromotionSpecStepsVarsArrayOutput {
	return i.ToPromotionSpecStepsVarsArrayOutputWithContext(context.Background())
}

func (i PromotionSpecStepsVarsArray) ToPromotionSpecStepsVarsArrayOutputWithContext(ctx context.Context) PromotionSpecStepsVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsVarsArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionSpecStepsVarsOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecStepsVars)(nil)).Elem()
}

func (o PromotionSpecStepsVarsOutput) ToPromotionSpecStepsVarsOutput() PromotionSpecStepsVarsOutput {
	return o
}

func (o PromotionSpecStepsVarsOutput) ToPromotionSpecStepsVarsOutputWithContext(ctx context.Context) PromotionSpecStepsVarsOutput {
	return o
}

// Name is the name of the variable.
func (o PromotionSpecStepsVarsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsVars) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o PromotionSpecStepsVarsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsVars) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PromotionSpecStepsVarsArrayOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionSpecStepsVars)(nil)).Elem()
}

func (o PromotionSpecStepsVarsArrayOutput) ToPromotionSpecStepsVarsArrayOutput() PromotionSpecStepsVarsArrayOutput {
	return o
}

func (o PromotionSpecStepsVarsArrayOutput) ToPromotionSpecStepsVarsArrayOutputWithContext(ctx context.Context) PromotionSpecStepsVarsArrayOutput {
	return o
}

func (o PromotionSpecStepsVarsArrayOutput) Index(i pulumi.IntInput) PromotionSpecStepsVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionSpecStepsVars {
		return vs[0].([]PromotionSpecStepsVars)[vs[1].(int)]
	}).(PromotionSpecStepsVarsOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionSpecStepsVarsPatch struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// PromotionSpecStepsVarsPatchInput is an input type that accepts PromotionSpecStepsVarsPatchArgs and PromotionSpecStepsVarsPatchOutput values.
// You can construct a concrete instance of `PromotionSpecStepsVarsPatchInput` via:
//
//	PromotionSpecStepsVarsPatchArgs{...}
type PromotionSpecStepsVarsPatchInput interface {
	pulumi.Input

	ToPromotionSpecStepsVarsPatchOutput() PromotionSpecStepsVarsPatchOutput
	ToPromotionSpecStepsVarsPatchOutputWithContext(context.Context) PromotionSpecStepsVarsPatchOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionSpecStepsVarsPatchArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PromotionSpecStepsVarsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecStepsVarsPatch)(nil)).Elem()
}

func (i PromotionSpecStepsVarsPatchArgs) ToPromotionSpecStepsVarsPatchOutput() PromotionSpecStepsVarsPatchOutput {
	return i.ToPromotionSpecStepsVarsPatchOutputWithContext(context.Background())
}

func (i PromotionSpecStepsVarsPatchArgs) ToPromotionSpecStepsVarsPatchOutputWithContext(ctx context.Context) PromotionSpecStepsVarsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsVarsPatchOutput)
}

// PromotionSpecStepsVarsPatchArrayInput is an input type that accepts PromotionSpecStepsVarsPatchArray and PromotionSpecStepsVarsPatchArrayOutput values.
// You can construct a concrete instance of `PromotionSpecStepsVarsPatchArrayInput` via:
//
//	PromotionSpecStepsVarsPatchArray{ PromotionSpecStepsVarsPatchArgs{...} }
type PromotionSpecStepsVarsPatchArrayInput interface {
	pulumi.Input

	ToPromotionSpecStepsVarsPatchArrayOutput() PromotionSpecStepsVarsPatchArrayOutput
	ToPromotionSpecStepsVarsPatchArrayOutputWithContext(context.Context) PromotionSpecStepsVarsPatchArrayOutput
}

type PromotionSpecStepsVarsPatchArray []PromotionSpecStepsVarsPatchInput

func (PromotionSpecStepsVarsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionSpecStepsVarsPatch)(nil)).Elem()
}

func (i PromotionSpecStepsVarsPatchArray) ToPromotionSpecStepsVarsPatchArrayOutput() PromotionSpecStepsVarsPatchArrayOutput {
	return i.ToPromotionSpecStepsVarsPatchArrayOutputWithContext(context.Background())
}

func (i PromotionSpecStepsVarsPatchArray) ToPromotionSpecStepsVarsPatchArrayOutputWithContext(ctx context.Context) PromotionSpecStepsVarsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecStepsVarsPatchArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionSpecStepsVarsPatchOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsVarsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecStepsVarsPatch)(nil)).Elem()
}

func (o PromotionSpecStepsVarsPatchOutput) ToPromotionSpecStepsVarsPatchOutput() PromotionSpecStepsVarsPatchOutput {
	return o
}

func (o PromotionSpecStepsVarsPatchOutput) ToPromotionSpecStepsVarsPatchOutputWithContext(ctx context.Context) PromotionSpecStepsVarsPatchOutput {
	return o
}

// Name is the name of the variable.
func (o PromotionSpecStepsVarsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsVarsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o PromotionSpecStepsVarsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecStepsVarsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PromotionSpecStepsVarsPatchArrayOutput struct{ *pulumi.OutputState }

func (PromotionSpecStepsVarsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionSpecStepsVarsPatch)(nil)).Elem()
}

func (o PromotionSpecStepsVarsPatchArrayOutput) ToPromotionSpecStepsVarsPatchArrayOutput() PromotionSpecStepsVarsPatchArrayOutput {
	return o
}

func (o PromotionSpecStepsVarsPatchArrayOutput) ToPromotionSpecStepsVarsPatchArrayOutputWithContext(ctx context.Context) PromotionSpecStepsVarsPatchArrayOutput {
	return o
}

func (o PromotionSpecStepsVarsPatchArrayOutput) Index(i pulumi.IntInput) PromotionSpecStepsVarsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionSpecStepsVarsPatch {
		return vs[0].([]PromotionSpecStepsVarsPatch)[vs[1].(int)]
	}).(PromotionSpecStepsVarsPatchOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionSpecVars struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// PromotionSpecVarsInput is an input type that accepts PromotionSpecVarsArgs and PromotionSpecVarsOutput values.
// You can construct a concrete instance of `PromotionSpecVarsInput` via:
//
//	PromotionSpecVarsArgs{...}
type PromotionSpecVarsInput interface {
	pulumi.Input

	ToPromotionSpecVarsOutput() PromotionSpecVarsOutput
	ToPromotionSpecVarsOutputWithContext(context.Context) PromotionSpecVarsOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionSpecVarsArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PromotionSpecVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecVars)(nil)).Elem()
}

func (i PromotionSpecVarsArgs) ToPromotionSpecVarsOutput() PromotionSpecVarsOutput {
	return i.ToPromotionSpecVarsOutputWithContext(context.Background())
}

func (i PromotionSpecVarsArgs) ToPromotionSpecVarsOutputWithContext(ctx context.Context) PromotionSpecVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecVarsOutput)
}

// PromotionSpecVarsArrayInput is an input type that accepts PromotionSpecVarsArray and PromotionSpecVarsArrayOutput values.
// You can construct a concrete instance of `PromotionSpecVarsArrayInput` via:
//
//	PromotionSpecVarsArray{ PromotionSpecVarsArgs{...} }
type PromotionSpecVarsArrayInput interface {
	pulumi.Input

	ToPromotionSpecVarsArrayOutput() PromotionSpecVarsArrayOutput
	ToPromotionSpecVarsArrayOutputWithContext(context.Context) PromotionSpecVarsArrayOutput
}

type PromotionSpecVarsArray []PromotionSpecVarsInput

func (PromotionSpecVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionSpecVars)(nil)).Elem()
}

func (i PromotionSpecVarsArray) ToPromotionSpecVarsArrayOutput() PromotionSpecVarsArrayOutput {
	return i.ToPromotionSpecVarsArrayOutputWithContext(context.Background())
}

func (i PromotionSpecVarsArray) ToPromotionSpecVarsArrayOutputWithContext(ctx context.Context) PromotionSpecVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecVarsArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionSpecVarsOutput struct{ *pulumi.OutputState }

func (PromotionSpecVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecVars)(nil)).Elem()
}

func (o PromotionSpecVarsOutput) ToPromotionSpecVarsOutput() PromotionSpecVarsOutput {
	return o
}

func (o PromotionSpecVarsOutput) ToPromotionSpecVarsOutputWithContext(ctx context.Context) PromotionSpecVarsOutput {
	return o
}

// Name is the name of the variable.
func (o PromotionSpecVarsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecVars) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o PromotionSpecVarsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecVars) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PromotionSpecVarsArrayOutput struct{ *pulumi.OutputState }

func (PromotionSpecVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionSpecVars)(nil)).Elem()
}

func (o PromotionSpecVarsArrayOutput) ToPromotionSpecVarsArrayOutput() PromotionSpecVarsArrayOutput {
	return o
}

func (o PromotionSpecVarsArrayOutput) ToPromotionSpecVarsArrayOutputWithContext(ctx context.Context) PromotionSpecVarsArrayOutput {
	return o
}

func (o PromotionSpecVarsArrayOutput) Index(i pulumi.IntInput) PromotionSpecVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionSpecVars {
		return vs[0].([]PromotionSpecVars)[vs[1].(int)]
	}).(PromotionSpecVarsOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionSpecVarsPatch struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// PromotionSpecVarsPatchInput is an input type that accepts PromotionSpecVarsPatchArgs and PromotionSpecVarsPatchOutput values.
// You can construct a concrete instance of `PromotionSpecVarsPatchInput` via:
//
//	PromotionSpecVarsPatchArgs{...}
type PromotionSpecVarsPatchInput interface {
	pulumi.Input

	ToPromotionSpecVarsPatchOutput() PromotionSpecVarsPatchOutput
	ToPromotionSpecVarsPatchOutputWithContext(context.Context) PromotionSpecVarsPatchOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionSpecVarsPatchArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PromotionSpecVarsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecVarsPatch)(nil)).Elem()
}

func (i PromotionSpecVarsPatchArgs) ToPromotionSpecVarsPatchOutput() PromotionSpecVarsPatchOutput {
	return i.ToPromotionSpecVarsPatchOutputWithContext(context.Background())
}

func (i PromotionSpecVarsPatchArgs) ToPromotionSpecVarsPatchOutputWithContext(ctx context.Context) PromotionSpecVarsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecVarsPatchOutput)
}

// PromotionSpecVarsPatchArrayInput is an input type that accepts PromotionSpecVarsPatchArray and PromotionSpecVarsPatchArrayOutput values.
// You can construct a concrete instance of `PromotionSpecVarsPatchArrayInput` via:
//
//	PromotionSpecVarsPatchArray{ PromotionSpecVarsPatchArgs{...} }
type PromotionSpecVarsPatchArrayInput interface {
	pulumi.Input

	ToPromotionSpecVarsPatchArrayOutput() PromotionSpecVarsPatchArrayOutput
	ToPromotionSpecVarsPatchArrayOutputWithContext(context.Context) PromotionSpecVarsPatchArrayOutput
}

type PromotionSpecVarsPatchArray []PromotionSpecVarsPatchInput

func (PromotionSpecVarsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionSpecVarsPatch)(nil)).Elem()
}

func (i PromotionSpecVarsPatchArray) ToPromotionSpecVarsPatchArrayOutput() PromotionSpecVarsPatchArrayOutput {
	return i.ToPromotionSpecVarsPatchArrayOutputWithContext(context.Background())
}

func (i PromotionSpecVarsPatchArray) ToPromotionSpecVarsPatchArrayOutputWithContext(ctx context.Context) PromotionSpecVarsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionSpecVarsPatchArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionSpecVarsPatchOutput struct{ *pulumi.OutputState }

func (PromotionSpecVarsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionSpecVarsPatch)(nil)).Elem()
}

func (o PromotionSpecVarsPatchOutput) ToPromotionSpecVarsPatchOutput() PromotionSpecVarsPatchOutput {
	return o
}

func (o PromotionSpecVarsPatchOutput) ToPromotionSpecVarsPatchOutputWithContext(ctx context.Context) PromotionSpecVarsPatchOutput {
	return o
}

// Name is the name of the variable.
func (o PromotionSpecVarsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecVarsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o PromotionSpecVarsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionSpecVarsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PromotionSpecVarsPatchArrayOutput struct{ *pulumi.OutputState }

func (PromotionSpecVarsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionSpecVarsPatch)(nil)).Elem()
}

func (o PromotionSpecVarsPatchArrayOutput) ToPromotionSpecVarsPatchArrayOutput() PromotionSpecVarsPatchArrayOutput {
	return o
}

func (o PromotionSpecVarsPatchArrayOutput) ToPromotionSpecVarsPatchArrayOutputWithContext(ctx context.Context) PromotionSpecVarsPatchArrayOutput {
	return o
}

func (o PromotionSpecVarsPatchArrayOutput) Index(i pulumi.IntInput) PromotionSpecVarsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionSpecVarsPatch {
		return vs[0].([]PromotionSpecVarsPatch)[vs[1].(int)]
	}).(PromotionSpecVarsPatchOutput)
}

// Status describes the current state of the transition represented by this
// Promotion.
type PromotionStatus struct {
	// CurrentStep is the index of the current promotion step being executed. This
	// permits steps that have already run successfully to be skipped on
	// subsequent reconciliations attempts.
	CurrentStep *int `pulumi:"currentStep"`
	// FinishedAt is the time when the promotion was completed.
	FinishedAt        *string                           `pulumi:"finishedAt"`
	Freight           *PromotionStatusFreight           `pulumi:"freight"`
	FreightCollection *PromotionStatusFreightCollection `pulumi:"freightCollection"`
	// HealthChecks contains the health check directives to be executed after
	// the Promotion has completed.
	HealthChecks []PromotionStatusHealthChecks `pulumi:"healthChecks"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh *string `pulumi:"lastHandledRefresh"`
	// Message is a display message about the promotion, including any errors
	// preventing the Promotion controller from executing this Promotion.
	// i.e. If the Phase field has a value of Failed, this field can be expected
	// to explain why.
	Message *string `pulumi:"message"`
	// Phase describes where the Promotion currently is in its lifecycle.
	Phase *string `pulumi:"phase"`
	// State stores the state of the promotion process between reconciliation
	// attempts.
	State map[string]interface{} `pulumi:"state"`
	// StepExecutionMetadata tracks metadata pertaining to the execution
	// of individual promotion steps.
	StepExecutionMetadata []PromotionStatusStepExecutionMetadata `pulumi:"stepExecutionMetadata"`
}

// PromotionStatusInput is an input type that accepts PromotionStatusArgs and PromotionStatusOutput values.
// You can construct a concrete instance of `PromotionStatusInput` via:
//
//	PromotionStatusArgs{...}
type PromotionStatusInput interface {
	pulumi.Input

	ToPromotionStatusOutput() PromotionStatusOutput
	ToPromotionStatusOutputWithContext(context.Context) PromotionStatusOutput
}

// Status describes the current state of the transition represented by this
// Promotion.
type PromotionStatusArgs struct {
	// CurrentStep is the index of the current promotion step being executed. This
	// permits steps that have already run successfully to be skipped on
	// subsequent reconciliations attempts.
	CurrentStep pulumi.IntPtrInput `pulumi:"currentStep"`
	// FinishedAt is the time when the promotion was completed.
	FinishedAt        pulumi.StringPtrInput                    `pulumi:"finishedAt"`
	Freight           PromotionStatusFreightPtrInput           `pulumi:"freight"`
	FreightCollection PromotionStatusFreightCollectionPtrInput `pulumi:"freightCollection"`
	// HealthChecks contains the health check directives to be executed after
	// the Promotion has completed.
	HealthChecks PromotionStatusHealthChecksArrayInput `pulumi:"healthChecks"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh pulumi.StringPtrInput `pulumi:"lastHandledRefresh"`
	// Message is a display message about the promotion, including any errors
	// preventing the Promotion controller from executing this Promotion.
	// i.e. If the Phase field has a value of Failed, this field can be expected
	// to explain why.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Phase describes where the Promotion currently is in its lifecycle.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// State stores the state of the promotion process between reconciliation
	// attempts.
	State pulumi.MapInput `pulumi:"state"`
	// StepExecutionMetadata tracks metadata pertaining to the execution
	// of individual promotion steps.
	StepExecutionMetadata PromotionStatusStepExecutionMetadataArrayInput `pulumi:"stepExecutionMetadata"`
}

func (PromotionStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatus)(nil)).Elem()
}

func (i PromotionStatusArgs) ToPromotionStatusOutput() PromotionStatusOutput {
	return i.ToPromotionStatusOutputWithContext(context.Background())
}

func (i PromotionStatusArgs) ToPromotionStatusOutputWithContext(ctx context.Context) PromotionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusOutput)
}

func (i PromotionStatusArgs) ToPromotionStatusPtrOutput() PromotionStatusPtrOutput {
	return i.ToPromotionStatusPtrOutputWithContext(context.Background())
}

func (i PromotionStatusArgs) ToPromotionStatusPtrOutputWithContext(ctx context.Context) PromotionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusOutput).ToPromotionStatusPtrOutputWithContext(ctx)
}

// PromotionStatusPtrInput is an input type that accepts PromotionStatusArgs, PromotionStatusPtr and PromotionStatusPtrOutput values.
// You can construct a concrete instance of `PromotionStatusPtrInput` via:
//
//	        PromotionStatusArgs{...}
//
//	or:
//
//	        nil
type PromotionStatusPtrInput interface {
	pulumi.Input

	ToPromotionStatusPtrOutput() PromotionStatusPtrOutput
	ToPromotionStatusPtrOutputWithContext(context.Context) PromotionStatusPtrOutput
}

type promotionStatusPtrType PromotionStatusArgs

func PromotionStatusPtr(v *PromotionStatusArgs) PromotionStatusPtrInput {
	return (*promotionStatusPtrType)(v)
}

func (*promotionStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatus)(nil)).Elem()
}

func (i *promotionStatusPtrType) ToPromotionStatusPtrOutput() PromotionStatusPtrOutput {
	return i.ToPromotionStatusPtrOutputWithContext(context.Background())
}

func (i *promotionStatusPtrType) ToPromotionStatusPtrOutputWithContext(ctx context.Context) PromotionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusPtrOutput)
}

// Status describes the current state of the transition represented by this
// Promotion.
type PromotionStatusOutput struct{ *pulumi.OutputState }

func (PromotionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatus)(nil)).Elem()
}

func (o PromotionStatusOutput) ToPromotionStatusOutput() PromotionStatusOutput {
	return o
}

func (o PromotionStatusOutput) ToPromotionStatusOutputWithContext(ctx context.Context) PromotionStatusOutput {
	return o
}

func (o PromotionStatusOutput) ToPromotionStatusPtrOutput() PromotionStatusPtrOutput {
	return o.ToPromotionStatusPtrOutputWithContext(context.Background())
}

func (o PromotionStatusOutput) ToPromotionStatusPtrOutputWithContext(ctx context.Context) PromotionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionStatus) *PromotionStatus {
		return &v
	}).(PromotionStatusPtrOutput)
}

// CurrentStep is the index of the current promotion step being executed. This
// permits steps that have already run successfully to be skipped on
// subsequent reconciliations attempts.
func (o PromotionStatusOutput) CurrentStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PromotionStatus) *int { return v.CurrentStep }).(pulumi.IntPtrOutput)
}

// FinishedAt is the time when the promotion was completed.
func (o PromotionStatusOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatus) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

func (o PromotionStatusOutput) Freight() PromotionStatusFreightPtrOutput {
	return o.ApplyT(func(v PromotionStatus) *PromotionStatusFreight { return v.Freight }).(PromotionStatusFreightPtrOutput)
}

func (o PromotionStatusOutput) FreightCollection() PromotionStatusFreightCollectionPtrOutput {
	return o.ApplyT(func(v PromotionStatus) *PromotionStatusFreightCollection { return v.FreightCollection }).(PromotionStatusFreightCollectionPtrOutput)
}

// HealthChecks contains the health check directives to be executed after
// the Promotion has completed.
func (o PromotionStatusOutput) HealthChecks() PromotionStatusHealthChecksArrayOutput {
	return o.ApplyT(func(v PromotionStatus) []PromotionStatusHealthChecks { return v.HealthChecks }).(PromotionStatusHealthChecksArrayOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o PromotionStatusOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatus) *string { return v.LastHandledRefresh }).(pulumi.StringPtrOutput)
}

// Message is a display message about the promotion, including any errors
// preventing the Promotion controller from executing this Promotion.
// i.e. If the Phase field has a value of Failed, this field can be expected
// to explain why.
func (o PromotionStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Phase describes where the Promotion currently is in its lifecycle.
func (o PromotionStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// State stores the state of the promotion process between reconciliation
// attempts.
func (o PromotionStatusOutput) State() pulumi.MapOutput {
	return o.ApplyT(func(v PromotionStatus) map[string]interface{} { return v.State }).(pulumi.MapOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution
// of individual promotion steps.
func (o PromotionStatusOutput) StepExecutionMetadata() PromotionStatusStepExecutionMetadataArrayOutput {
	return o.ApplyT(func(v PromotionStatus) []PromotionStatusStepExecutionMetadata { return v.StepExecutionMetadata }).(PromotionStatusStepExecutionMetadataArrayOutput)
}

type PromotionStatusPtrOutput struct{ *pulumi.OutputState }

func (PromotionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatus)(nil)).Elem()
}

func (o PromotionStatusPtrOutput) ToPromotionStatusPtrOutput() PromotionStatusPtrOutput {
	return o
}

func (o PromotionStatusPtrOutput) ToPromotionStatusPtrOutputWithContext(ctx context.Context) PromotionStatusPtrOutput {
	return o
}

func (o PromotionStatusPtrOutput) Elem() PromotionStatusOutput {
	return o.ApplyT(func(v *PromotionStatus) PromotionStatus {
		if v != nil {
			return *v
		}
		var ret PromotionStatus
		return ret
	}).(PromotionStatusOutput)
}

// CurrentStep is the index of the current promotion step being executed. This
// permits steps that have already run successfully to be skipped on
// subsequent reconciliations attempts.
func (o PromotionStatusPtrOutput) CurrentStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PromotionStatus) *int {
		if v == nil {
			return nil
		}
		return v.CurrentStep
	}).(pulumi.IntPtrOutput)
}

// FinishedAt is the time when the promotion was completed.
func (o PromotionStatusPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatus) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

func (o PromotionStatusPtrOutput) Freight() PromotionStatusFreightPtrOutput {
	return o.ApplyT(func(v *PromotionStatus) *PromotionStatusFreight {
		if v == nil {
			return nil
		}
		return v.Freight
	}).(PromotionStatusFreightPtrOutput)
}

func (o PromotionStatusPtrOutput) FreightCollection() PromotionStatusFreightCollectionPtrOutput {
	return o.ApplyT(func(v *PromotionStatus) *PromotionStatusFreightCollection {
		if v == nil {
			return nil
		}
		return v.FreightCollection
	}).(PromotionStatusFreightCollectionPtrOutput)
}

// HealthChecks contains the health check directives to be executed after
// the Promotion has completed.
func (o PromotionStatusPtrOutput) HealthChecks() PromotionStatusHealthChecksArrayOutput {
	return o.ApplyT(func(v *PromotionStatus) []PromotionStatusHealthChecks {
		if v == nil {
			return nil
		}
		return v.HealthChecks
	}).(PromotionStatusHealthChecksArrayOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o PromotionStatusPtrOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastHandledRefresh
	}).(pulumi.StringPtrOutput)
}

// Message is a display message about the promotion, including any errors
// preventing the Promotion controller from executing this Promotion.
// i.e. If the Phase field has a value of Failed, this field can be expected
// to explain why.
func (o PromotionStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Phase describes where the Promotion currently is in its lifecycle.
func (o PromotionStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// State stores the state of the promotion process between reconciliation
// attempts.
func (o PromotionStatusPtrOutput) State() pulumi.MapOutput {
	return o.ApplyT(func(v *PromotionStatus) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.MapOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution
// of individual promotion steps.
func (o PromotionStatusPtrOutput) StepExecutionMetadata() PromotionStatusStepExecutionMetadataArrayOutput {
	return o.ApplyT(func(v *PromotionStatus) []PromotionStatusStepExecutionMetadata {
		if v == nil {
			return nil
		}
		return v.StepExecutionMetadata
	}).(PromotionStatusStepExecutionMetadataArrayOutput)
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type PromotionStatusFreight struct {
	// Charts describes specific versions of specific Helm charts.
	Charts []PromotionStatusFreightCharts `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits []PromotionStatusFreightCommits `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images []PromotionStatusFreightImages `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   *string                       `pulumi:"name"`
	Origin *PromotionStatusFreightOrigin `pulumi:"origin"`
}

// PromotionStatusFreightInput is an input type that accepts PromotionStatusFreightArgs and PromotionStatusFreightOutput values.
// You can construct a concrete instance of `PromotionStatusFreightInput` via:
//
//	PromotionStatusFreightArgs{...}
type PromotionStatusFreightInput interface {
	pulumi.Input

	ToPromotionStatusFreightOutput() PromotionStatusFreightOutput
	ToPromotionStatusFreightOutputWithContext(context.Context) PromotionStatusFreightOutput
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type PromotionStatusFreightArgs struct {
	// Charts describes specific versions of specific Helm charts.
	Charts PromotionStatusFreightChartsArrayInput `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits PromotionStatusFreightCommitsArrayInput `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images PromotionStatusFreightImagesArrayInput `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   pulumi.StringPtrInput                `pulumi:"name"`
	Origin PromotionStatusFreightOriginPtrInput `pulumi:"origin"`
}

func (PromotionStatusFreightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreight)(nil)).Elem()
}

func (i PromotionStatusFreightArgs) ToPromotionStatusFreightOutput() PromotionStatusFreightOutput {
	return i.ToPromotionStatusFreightOutputWithContext(context.Background())
}

func (i PromotionStatusFreightArgs) ToPromotionStatusFreightOutputWithContext(ctx context.Context) PromotionStatusFreightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightOutput)
}

func (i PromotionStatusFreightArgs) ToPromotionStatusFreightPtrOutput() PromotionStatusFreightPtrOutput {
	return i.ToPromotionStatusFreightPtrOutputWithContext(context.Background())
}

func (i PromotionStatusFreightArgs) ToPromotionStatusFreightPtrOutputWithContext(ctx context.Context) PromotionStatusFreightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightOutput).ToPromotionStatusFreightPtrOutputWithContext(ctx)
}

// PromotionStatusFreightPtrInput is an input type that accepts PromotionStatusFreightArgs, PromotionStatusFreightPtr and PromotionStatusFreightPtrOutput values.
// You can construct a concrete instance of `PromotionStatusFreightPtrInput` via:
//
//	        PromotionStatusFreightArgs{...}
//
//	or:
//
//	        nil
type PromotionStatusFreightPtrInput interface {
	pulumi.Input

	ToPromotionStatusFreightPtrOutput() PromotionStatusFreightPtrOutput
	ToPromotionStatusFreightPtrOutputWithContext(context.Context) PromotionStatusFreightPtrOutput
}

type promotionStatusFreightPtrType PromotionStatusFreightArgs

func PromotionStatusFreightPtr(v *PromotionStatusFreightArgs) PromotionStatusFreightPtrInput {
	return (*promotionStatusFreightPtrType)(v)
}

func (*promotionStatusFreightPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreight)(nil)).Elem()
}

func (i *promotionStatusFreightPtrType) ToPromotionStatusFreightPtrOutput() PromotionStatusFreightPtrOutput {
	return i.ToPromotionStatusFreightPtrOutputWithContext(context.Background())
}

func (i *promotionStatusFreightPtrType) ToPromotionStatusFreightPtrOutputWithContext(ctx context.Context) PromotionStatusFreightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightPtrOutput)
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type PromotionStatusFreightOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreight)(nil)).Elem()
}

func (o PromotionStatusFreightOutput) ToPromotionStatusFreightOutput() PromotionStatusFreightOutput {
	return o
}

func (o PromotionStatusFreightOutput) ToPromotionStatusFreightOutputWithContext(ctx context.Context) PromotionStatusFreightOutput {
	return o
}

func (o PromotionStatusFreightOutput) ToPromotionStatusFreightPtrOutput() PromotionStatusFreightPtrOutput {
	return o.ToPromotionStatusFreightPtrOutputWithContext(context.Background())
}

func (o PromotionStatusFreightOutput) ToPromotionStatusFreightPtrOutputWithContext(ctx context.Context) PromotionStatusFreightPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionStatusFreight) *PromotionStatusFreight {
		return &v
	}).(PromotionStatusFreightPtrOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o PromotionStatusFreightOutput) Charts() PromotionStatusFreightChartsArrayOutput {
	return o.ApplyT(func(v PromotionStatusFreight) []PromotionStatusFreightCharts { return v.Charts }).(PromotionStatusFreightChartsArrayOutput)
}

// Commits describes specific Git repository commits.
func (o PromotionStatusFreightOutput) Commits() PromotionStatusFreightCommitsArrayOutput {
	return o.ApplyT(func(v PromotionStatusFreight) []PromotionStatusFreightCommits { return v.Commits }).(PromotionStatusFreightCommitsArrayOutput)
}

// Images describes specific versions of specific container images.
func (o PromotionStatusFreightOutput) Images() PromotionStatusFreightImagesArrayOutput {
	return o.ApplyT(func(v PromotionStatusFreight) []PromotionStatusFreightImages { return v.Images }).(PromotionStatusFreightImagesArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o PromotionStatusFreightOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreight) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PromotionStatusFreightOutput) Origin() PromotionStatusFreightOriginPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreight) *PromotionStatusFreightOrigin { return v.Origin }).(PromotionStatusFreightOriginPtrOutput)
}

type PromotionStatusFreightPtrOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreight)(nil)).Elem()
}

func (o PromotionStatusFreightPtrOutput) ToPromotionStatusFreightPtrOutput() PromotionStatusFreightPtrOutput {
	return o
}

func (o PromotionStatusFreightPtrOutput) ToPromotionStatusFreightPtrOutputWithContext(ctx context.Context) PromotionStatusFreightPtrOutput {
	return o
}

func (o PromotionStatusFreightPtrOutput) Elem() PromotionStatusFreightOutput {
	return o.ApplyT(func(v *PromotionStatusFreight) PromotionStatusFreight {
		if v != nil {
			return *v
		}
		var ret PromotionStatusFreight
		return ret
	}).(PromotionStatusFreightOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o PromotionStatusFreightPtrOutput) Charts() PromotionStatusFreightChartsArrayOutput {
	return o.ApplyT(func(v *PromotionStatusFreight) []PromotionStatusFreightCharts {
		if v == nil {
			return nil
		}
		return v.Charts
	}).(PromotionStatusFreightChartsArrayOutput)
}

// Commits describes specific Git repository commits.
func (o PromotionStatusFreightPtrOutput) Commits() PromotionStatusFreightCommitsArrayOutput {
	return o.ApplyT(func(v *PromotionStatusFreight) []PromotionStatusFreightCommits {
		if v == nil {
			return nil
		}
		return v.Commits
	}).(PromotionStatusFreightCommitsArrayOutput)
}

// Images describes specific versions of specific container images.
func (o PromotionStatusFreightPtrOutput) Images() PromotionStatusFreightImagesArrayOutput {
	return o.ApplyT(func(v *PromotionStatusFreight) []PromotionStatusFreightImages {
		if v == nil {
			return nil
		}
		return v.Images
	}).(PromotionStatusFreightImagesArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o PromotionStatusFreightPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreight) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o PromotionStatusFreightPtrOutput) Origin() PromotionStatusFreightOriginPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreight) *PromotionStatusFreightOrigin {
		if v == nil {
			return nil
		}
		return v.Origin
	}).(PromotionStatusFreightOriginPtrOutput)
}

// Chart describes a specific version of a Helm chart.
type PromotionStatusFreightCharts struct {
	// Name specifies the name of the chart.
	Name *string `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL *string `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version *string `pulumi:"version"`
}

// PromotionStatusFreightChartsInput is an input type that accepts PromotionStatusFreightChartsArgs and PromotionStatusFreightChartsOutput values.
// You can construct a concrete instance of `PromotionStatusFreightChartsInput` via:
//
//	PromotionStatusFreightChartsArgs{...}
type PromotionStatusFreightChartsInput interface {
	pulumi.Input

	ToPromotionStatusFreightChartsOutput() PromotionStatusFreightChartsOutput
	ToPromotionStatusFreightChartsOutputWithContext(context.Context) PromotionStatusFreightChartsOutput
}

// Chart describes a specific version of a Helm chart.
type PromotionStatusFreightChartsArgs struct {
	// Name specifies the name of the chart.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PromotionStatusFreightChartsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCharts)(nil)).Elem()
}

func (i PromotionStatusFreightChartsArgs) ToPromotionStatusFreightChartsOutput() PromotionStatusFreightChartsOutput {
	return i.ToPromotionStatusFreightChartsOutputWithContext(context.Background())
}

func (i PromotionStatusFreightChartsArgs) ToPromotionStatusFreightChartsOutputWithContext(ctx context.Context) PromotionStatusFreightChartsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightChartsOutput)
}

// PromotionStatusFreightChartsArrayInput is an input type that accepts PromotionStatusFreightChartsArray and PromotionStatusFreightChartsArrayOutput values.
// You can construct a concrete instance of `PromotionStatusFreightChartsArrayInput` via:
//
//	PromotionStatusFreightChartsArray{ PromotionStatusFreightChartsArgs{...} }
type PromotionStatusFreightChartsArrayInput interface {
	pulumi.Input

	ToPromotionStatusFreightChartsArrayOutput() PromotionStatusFreightChartsArrayOutput
	ToPromotionStatusFreightChartsArrayOutputWithContext(context.Context) PromotionStatusFreightChartsArrayOutput
}

type PromotionStatusFreightChartsArray []PromotionStatusFreightChartsInput

func (PromotionStatusFreightChartsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightCharts)(nil)).Elem()
}

func (i PromotionStatusFreightChartsArray) ToPromotionStatusFreightChartsArrayOutput() PromotionStatusFreightChartsArrayOutput {
	return i.ToPromotionStatusFreightChartsArrayOutputWithContext(context.Background())
}

func (i PromotionStatusFreightChartsArray) ToPromotionStatusFreightChartsArrayOutputWithContext(ctx context.Context) PromotionStatusFreightChartsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightChartsArrayOutput)
}

// Chart describes a specific version of a Helm chart.
type PromotionStatusFreightChartsOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightChartsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCharts)(nil)).Elem()
}

func (o PromotionStatusFreightChartsOutput) ToPromotionStatusFreightChartsOutput() PromotionStatusFreightChartsOutput {
	return o
}

func (o PromotionStatusFreightChartsOutput) ToPromotionStatusFreightChartsOutputWithContext(ctx context.Context) PromotionStatusFreightChartsOutput {
	return o
}

// Name specifies the name of the chart.
func (o PromotionStatusFreightChartsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCharts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. Classic chart
// repositories (using HTTP/S) can contain differently named charts. When this
// field points to such a repository, the Name field will specify the name of
// the chart within the repository. In the case of a repository within an OCI
// registry, the URL implicitly points to a specific chart and the Name field
// will be empty.
func (o PromotionStatusFreightChartsOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCharts) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Version specifies a particular version of the chart.
func (o PromotionStatusFreightChartsOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCharts) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PromotionStatusFreightChartsArrayOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightChartsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightCharts)(nil)).Elem()
}

func (o PromotionStatusFreightChartsArrayOutput) ToPromotionStatusFreightChartsArrayOutput() PromotionStatusFreightChartsArrayOutput {
	return o
}

func (o PromotionStatusFreightChartsArrayOutput) ToPromotionStatusFreightChartsArrayOutputWithContext(ctx context.Context) PromotionStatusFreightChartsArrayOutput {
	return o
}

func (o PromotionStatusFreightChartsArrayOutput) Index(i pulumi.IntInput) PromotionStatusFreightChartsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionStatusFreightCharts {
		return vs[0].([]PromotionStatusFreightCharts)[vs[1].(int)]
	}).(PromotionStatusFreightChartsOutput)
}

// Chart describes a specific version of a Helm chart.
type PromotionStatusFreightChartsPatch struct {
	// Name specifies the name of the chart.
	Name *string `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL *string `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version *string `pulumi:"version"`
}

// PromotionStatusFreightChartsPatchInput is an input type that accepts PromotionStatusFreightChartsPatchArgs and PromotionStatusFreightChartsPatchOutput values.
// You can construct a concrete instance of `PromotionStatusFreightChartsPatchInput` via:
//
//	PromotionStatusFreightChartsPatchArgs{...}
type PromotionStatusFreightChartsPatchInput interface {
	pulumi.Input

	ToPromotionStatusFreightChartsPatchOutput() PromotionStatusFreightChartsPatchOutput
	ToPromotionStatusFreightChartsPatchOutputWithContext(context.Context) PromotionStatusFreightChartsPatchOutput
}

// Chart describes a specific version of a Helm chart.
type PromotionStatusFreightChartsPatchArgs struct {
	// Name specifies the name of the chart.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PromotionStatusFreightChartsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightChartsPatch)(nil)).Elem()
}

func (i PromotionStatusFreightChartsPatchArgs) ToPromotionStatusFreightChartsPatchOutput() PromotionStatusFreightChartsPatchOutput {
	return i.ToPromotionStatusFreightChartsPatchOutputWithContext(context.Background())
}

func (i PromotionStatusFreightChartsPatchArgs) ToPromotionStatusFreightChartsPatchOutputWithContext(ctx context.Context) PromotionStatusFreightChartsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightChartsPatchOutput)
}

// PromotionStatusFreightChartsPatchArrayInput is an input type that accepts PromotionStatusFreightChartsPatchArray and PromotionStatusFreightChartsPatchArrayOutput values.
// You can construct a concrete instance of `PromotionStatusFreightChartsPatchArrayInput` via:
//
//	PromotionStatusFreightChartsPatchArray{ PromotionStatusFreightChartsPatchArgs{...} }
type PromotionStatusFreightChartsPatchArrayInput interface {
	pulumi.Input

	ToPromotionStatusFreightChartsPatchArrayOutput() PromotionStatusFreightChartsPatchArrayOutput
	ToPromotionStatusFreightChartsPatchArrayOutputWithContext(context.Context) PromotionStatusFreightChartsPatchArrayOutput
}

type PromotionStatusFreightChartsPatchArray []PromotionStatusFreightChartsPatchInput

func (PromotionStatusFreightChartsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightChartsPatch)(nil)).Elem()
}

func (i PromotionStatusFreightChartsPatchArray) ToPromotionStatusFreightChartsPatchArrayOutput() PromotionStatusFreightChartsPatchArrayOutput {
	return i.ToPromotionStatusFreightChartsPatchArrayOutputWithContext(context.Background())
}

func (i PromotionStatusFreightChartsPatchArray) ToPromotionStatusFreightChartsPatchArrayOutputWithContext(ctx context.Context) PromotionStatusFreightChartsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightChartsPatchArrayOutput)
}

// Chart describes a specific version of a Helm chart.
type PromotionStatusFreightChartsPatchOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightChartsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightChartsPatch)(nil)).Elem()
}

func (o PromotionStatusFreightChartsPatchOutput) ToPromotionStatusFreightChartsPatchOutput() PromotionStatusFreightChartsPatchOutput {
	return o
}

func (o PromotionStatusFreightChartsPatchOutput) ToPromotionStatusFreightChartsPatchOutputWithContext(ctx context.Context) PromotionStatusFreightChartsPatchOutput {
	return o
}

// Name specifies the name of the chart.
func (o PromotionStatusFreightChartsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightChartsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. Classic chart
// repositories (using HTTP/S) can contain differently named charts. When this
// field points to such a repository, the Name field will specify the name of
// the chart within the repository. In the case of a repository within an OCI
// registry, the URL implicitly points to a specific chart and the Name field
// will be empty.
func (o PromotionStatusFreightChartsPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightChartsPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Version specifies a particular version of the chart.
func (o PromotionStatusFreightChartsPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightChartsPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PromotionStatusFreightChartsPatchArrayOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightChartsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightChartsPatch)(nil)).Elem()
}

func (o PromotionStatusFreightChartsPatchArrayOutput) ToPromotionStatusFreightChartsPatchArrayOutput() PromotionStatusFreightChartsPatchArrayOutput {
	return o
}

func (o PromotionStatusFreightChartsPatchArrayOutput) ToPromotionStatusFreightChartsPatchArrayOutputWithContext(ctx context.Context) PromotionStatusFreightChartsPatchArrayOutput {
	return o
}

func (o PromotionStatusFreightChartsPatchArrayOutput) Index(i pulumi.IntInput) PromotionStatusFreightChartsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionStatusFreightChartsPatch {
		return vs[0].([]PromotionStatusFreightChartsPatch)[vs[1].(int)]
	}).(PromotionStatusFreightChartsPatchOutput)
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type PromotionStatusFreightCollection struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id *string `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items map[string]map[string]string `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory []PromotionStatusFreightCollectionVerificationHistory `pulumi:"verificationHistory"`
}

// PromotionStatusFreightCollectionInput is an input type that accepts PromotionStatusFreightCollectionArgs and PromotionStatusFreightCollectionOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCollectionInput` via:
//
//	PromotionStatusFreightCollectionArgs{...}
type PromotionStatusFreightCollectionInput interface {
	pulumi.Input

	ToPromotionStatusFreightCollectionOutput() PromotionStatusFreightCollectionOutput
	ToPromotionStatusFreightCollectionOutputWithContext(context.Context) PromotionStatusFreightCollectionOutput
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type PromotionStatusFreightCollectionArgs struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items pulumi.StringMapMapInput `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory PromotionStatusFreightCollectionVerificationHistoryArrayInput `pulumi:"verificationHistory"`
}

func (PromotionStatusFreightCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCollection)(nil)).Elem()
}

func (i PromotionStatusFreightCollectionArgs) ToPromotionStatusFreightCollectionOutput() PromotionStatusFreightCollectionOutput {
	return i.ToPromotionStatusFreightCollectionOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCollectionArgs) ToPromotionStatusFreightCollectionOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionOutput)
}

func (i PromotionStatusFreightCollectionArgs) ToPromotionStatusFreightCollectionPtrOutput() PromotionStatusFreightCollectionPtrOutput {
	return i.ToPromotionStatusFreightCollectionPtrOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCollectionArgs) ToPromotionStatusFreightCollectionPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionOutput).ToPromotionStatusFreightCollectionPtrOutputWithContext(ctx)
}

// PromotionStatusFreightCollectionPtrInput is an input type that accepts PromotionStatusFreightCollectionArgs, PromotionStatusFreightCollectionPtr and PromotionStatusFreightCollectionPtrOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCollectionPtrInput` via:
//
//	        PromotionStatusFreightCollectionArgs{...}
//
//	or:
//
//	        nil
type PromotionStatusFreightCollectionPtrInput interface {
	pulumi.Input

	ToPromotionStatusFreightCollectionPtrOutput() PromotionStatusFreightCollectionPtrOutput
	ToPromotionStatusFreightCollectionPtrOutputWithContext(context.Context) PromotionStatusFreightCollectionPtrOutput
}

type promotionStatusFreightCollectionPtrType PromotionStatusFreightCollectionArgs

func PromotionStatusFreightCollectionPtr(v *PromotionStatusFreightCollectionArgs) PromotionStatusFreightCollectionPtrInput {
	return (*promotionStatusFreightCollectionPtrType)(v)
}

func (*promotionStatusFreightCollectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreightCollection)(nil)).Elem()
}

func (i *promotionStatusFreightCollectionPtrType) ToPromotionStatusFreightCollectionPtrOutput() PromotionStatusFreightCollectionPtrOutput {
	return i.ToPromotionStatusFreightCollectionPtrOutputWithContext(context.Background())
}

func (i *promotionStatusFreightCollectionPtrType) ToPromotionStatusFreightCollectionPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionPtrOutput)
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type PromotionStatusFreightCollectionOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCollection)(nil)).Elem()
}

func (o PromotionStatusFreightCollectionOutput) ToPromotionStatusFreightCollectionOutput() PromotionStatusFreightCollectionOutput {
	return o
}

func (o PromotionStatusFreightCollectionOutput) ToPromotionStatusFreightCollectionOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionOutput {
	return o
}

func (o PromotionStatusFreightCollectionOutput) ToPromotionStatusFreightCollectionPtrOutput() PromotionStatusFreightCollectionPtrOutput {
	return o.ToPromotionStatusFreightCollectionPtrOutputWithContext(context.Background())
}

func (o PromotionStatusFreightCollectionOutput) ToPromotionStatusFreightCollectionPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionStatusFreightCollection) *PromotionStatusFreightCollection {
		return &v
	}).(PromotionStatusFreightCollectionPtrOutput)
}

// ID is a unique and deterministically calculated identifier for the
// FreightCollection. It is updated on each use of the UpdateOrPush method.
func (o PromotionStatusFreightCollectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Freight is a map of FreightReference objects, indexed by their Warehouse
// origin.
func (o PromotionStatusFreightCollectionOutput) Items() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollection) map[string]map[string]string { return v.Items }).(pulumi.StringMapMapOutput)
}

// VerificationHistory is a stack of recent VerificationInfo. By default,
// the last ten VerificationInfo are stored.
func (o PromotionStatusFreightCollectionOutput) VerificationHistory() PromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollection) []PromotionStatusFreightCollectionVerificationHistory {
		return v.VerificationHistory
	}).(PromotionStatusFreightCollectionVerificationHistoryArrayOutput)
}

type PromotionStatusFreightCollectionPtrOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCollectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreightCollection)(nil)).Elem()
}

func (o PromotionStatusFreightCollectionPtrOutput) ToPromotionStatusFreightCollectionPtrOutput() PromotionStatusFreightCollectionPtrOutput {
	return o
}

func (o PromotionStatusFreightCollectionPtrOutput) ToPromotionStatusFreightCollectionPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionPtrOutput {
	return o
}

func (o PromotionStatusFreightCollectionPtrOutput) Elem() PromotionStatusFreightCollectionOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollection) PromotionStatusFreightCollection {
		if v != nil {
			return *v
		}
		var ret PromotionStatusFreightCollection
		return ret
	}).(PromotionStatusFreightCollectionOutput)
}

// ID is a unique and deterministically calculated identifier for the
// FreightCollection. It is updated on each use of the UpdateOrPush method.
func (o PromotionStatusFreightCollectionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollection) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Freight is a map of FreightReference objects, indexed by their Warehouse
// origin.
func (o PromotionStatusFreightCollectionPtrOutput) Items() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollection) map[string]map[string]string {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.StringMapMapOutput)
}

// VerificationHistory is a stack of recent VerificationInfo. By default,
// the last ten VerificationInfo are stored.
func (o PromotionStatusFreightCollectionPtrOutput) VerificationHistory() PromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollection) []PromotionStatusFreightCollectionVerificationHistory {
		if v == nil {
			return nil
		}
		return v.VerificationHistory
	}).(PromotionStatusFreightCollectionVerificationHistoryArrayOutput)
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type PromotionStatusFreightCollectionPatch struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id *string `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items map[string]map[string]string `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory []PromotionStatusFreightCollectionVerificationHistoryPatch `pulumi:"verificationHistory"`
}

// PromotionStatusFreightCollectionPatchInput is an input type that accepts PromotionStatusFreightCollectionPatchArgs and PromotionStatusFreightCollectionPatchOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCollectionPatchInput` via:
//
//	PromotionStatusFreightCollectionPatchArgs{...}
type PromotionStatusFreightCollectionPatchInput interface {
	pulumi.Input

	ToPromotionStatusFreightCollectionPatchOutput() PromotionStatusFreightCollectionPatchOutput
	ToPromotionStatusFreightCollectionPatchOutputWithContext(context.Context) PromotionStatusFreightCollectionPatchOutput
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type PromotionStatusFreightCollectionPatchArgs struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items pulumi.StringMapMapInput `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory PromotionStatusFreightCollectionVerificationHistoryPatchArrayInput `pulumi:"verificationHistory"`
}

func (PromotionStatusFreightCollectionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCollectionPatch)(nil)).Elem()
}

func (i PromotionStatusFreightCollectionPatchArgs) ToPromotionStatusFreightCollectionPatchOutput() PromotionStatusFreightCollectionPatchOutput {
	return i.ToPromotionStatusFreightCollectionPatchOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCollectionPatchArgs) ToPromotionStatusFreightCollectionPatchOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionPatchOutput)
}

func (i PromotionStatusFreightCollectionPatchArgs) ToPromotionStatusFreightCollectionPatchPtrOutput() PromotionStatusFreightCollectionPatchPtrOutput {
	return i.ToPromotionStatusFreightCollectionPatchPtrOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCollectionPatchArgs) ToPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionPatchOutput).ToPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx)
}

// PromotionStatusFreightCollectionPatchPtrInput is an input type that accepts PromotionStatusFreightCollectionPatchArgs, PromotionStatusFreightCollectionPatchPtr and PromotionStatusFreightCollectionPatchPtrOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCollectionPatchPtrInput` via:
//
//	        PromotionStatusFreightCollectionPatchArgs{...}
//
//	or:
//
//	        nil
type PromotionStatusFreightCollectionPatchPtrInput interface {
	pulumi.Input

	ToPromotionStatusFreightCollectionPatchPtrOutput() PromotionStatusFreightCollectionPatchPtrOutput
	ToPromotionStatusFreightCollectionPatchPtrOutputWithContext(context.Context) PromotionStatusFreightCollectionPatchPtrOutput
}

type promotionStatusFreightCollectionPatchPtrType PromotionStatusFreightCollectionPatchArgs

func PromotionStatusFreightCollectionPatchPtr(v *PromotionStatusFreightCollectionPatchArgs) PromotionStatusFreightCollectionPatchPtrInput {
	return (*promotionStatusFreightCollectionPatchPtrType)(v)
}

func (*promotionStatusFreightCollectionPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreightCollectionPatch)(nil)).Elem()
}

func (i *promotionStatusFreightCollectionPatchPtrType) ToPromotionStatusFreightCollectionPatchPtrOutput() PromotionStatusFreightCollectionPatchPtrOutput {
	return i.ToPromotionStatusFreightCollectionPatchPtrOutputWithContext(context.Background())
}

func (i *promotionStatusFreightCollectionPatchPtrType) ToPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionPatchPtrOutput)
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type PromotionStatusFreightCollectionPatchOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCollectionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCollectionPatch)(nil)).Elem()
}

func (o PromotionStatusFreightCollectionPatchOutput) ToPromotionStatusFreightCollectionPatchOutput() PromotionStatusFreightCollectionPatchOutput {
	return o
}

func (o PromotionStatusFreightCollectionPatchOutput) ToPromotionStatusFreightCollectionPatchOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionPatchOutput {
	return o
}

func (o PromotionStatusFreightCollectionPatchOutput) ToPromotionStatusFreightCollectionPatchPtrOutput() PromotionStatusFreightCollectionPatchPtrOutput {
	return o.ToPromotionStatusFreightCollectionPatchPtrOutputWithContext(context.Background())
}

func (o PromotionStatusFreightCollectionPatchOutput) ToPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionStatusFreightCollectionPatch) *PromotionStatusFreightCollectionPatch {
		return &v
	}).(PromotionStatusFreightCollectionPatchPtrOutput)
}

// ID is a unique and deterministically calculated identifier for the
// FreightCollection. It is updated on each use of the UpdateOrPush method.
func (o PromotionStatusFreightCollectionPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Freight is a map of FreightReference objects, indexed by their Warehouse
// origin.
func (o PromotionStatusFreightCollectionPatchOutput) Items() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionPatch) map[string]map[string]string { return v.Items }).(pulumi.StringMapMapOutput)
}

// VerificationHistory is a stack of recent VerificationInfo. By default,
// the last ten VerificationInfo are stored.
func (o PromotionStatusFreightCollectionPatchOutput) VerificationHistory() PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionPatch) []PromotionStatusFreightCollectionVerificationHistoryPatch {
		return v.VerificationHistory
	}).(PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput)
}

type PromotionStatusFreightCollectionPatchPtrOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCollectionPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreightCollectionPatch)(nil)).Elem()
}

func (o PromotionStatusFreightCollectionPatchPtrOutput) ToPromotionStatusFreightCollectionPatchPtrOutput() PromotionStatusFreightCollectionPatchPtrOutput {
	return o
}

func (o PromotionStatusFreightCollectionPatchPtrOutput) ToPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionPatchPtrOutput {
	return o
}

func (o PromotionStatusFreightCollectionPatchPtrOutput) Elem() PromotionStatusFreightCollectionPatchOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollectionPatch) PromotionStatusFreightCollectionPatch {
		if v != nil {
			return *v
		}
		var ret PromotionStatusFreightCollectionPatch
		return ret
	}).(PromotionStatusFreightCollectionPatchOutput)
}

// ID is a unique and deterministically calculated identifier for the
// FreightCollection. It is updated on each use of the UpdateOrPush method.
func (o PromotionStatusFreightCollectionPatchPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollectionPatch) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Freight is a map of FreightReference objects, indexed by their Warehouse
// origin.
func (o PromotionStatusFreightCollectionPatchPtrOutput) Items() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollectionPatch) map[string]map[string]string {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.StringMapMapOutput)
}

// VerificationHistory is a stack of recent VerificationInfo. By default,
// the last ten VerificationInfo are stored.
func (o PromotionStatusFreightCollectionPatchPtrOutput) VerificationHistory() PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollectionPatch) []PromotionStatusFreightCollectionVerificationHistoryPatch {
		if v == nil {
			return nil
		}
		return v.VerificationHistory
	}).(PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type PromotionStatusFreightCollectionVerificationHistory struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       *string                                                         `pulumi:"actor"`
	AnalysisRun *PromotionStatusFreightCollectionVerificationHistoryAnalysisRun `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime *string `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id *string `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message *string `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase *string `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime *string `pulumi:"startTime"`
}

// PromotionStatusFreightCollectionVerificationHistoryInput is an input type that accepts PromotionStatusFreightCollectionVerificationHistoryArgs and PromotionStatusFreightCollectionVerificationHistoryOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCollectionVerificationHistoryInput` via:
//
//	PromotionStatusFreightCollectionVerificationHistoryArgs{...}
type PromotionStatusFreightCollectionVerificationHistoryInput interface {
	pulumi.Input

	ToPromotionStatusFreightCollectionVerificationHistoryOutput() PromotionStatusFreightCollectionVerificationHistoryOutput
	ToPromotionStatusFreightCollectionVerificationHistoryOutputWithContext(context.Context) PromotionStatusFreightCollectionVerificationHistoryOutput
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type PromotionStatusFreightCollectionVerificationHistoryArgs struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       pulumi.StringPtrInput                                                  `pulumi:"actor"`
	AnalysisRun PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime pulumi.StringPtrInput `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (PromotionStatusFreightCollectionVerificationHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistory)(nil)).Elem()
}

func (i PromotionStatusFreightCollectionVerificationHistoryArgs) ToPromotionStatusFreightCollectionVerificationHistoryOutput() PromotionStatusFreightCollectionVerificationHistoryOutput {
	return i.ToPromotionStatusFreightCollectionVerificationHistoryOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCollectionVerificationHistoryArgs) ToPromotionStatusFreightCollectionVerificationHistoryOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionVerificationHistoryOutput)
}

// PromotionStatusFreightCollectionVerificationHistoryArrayInput is an input type that accepts PromotionStatusFreightCollectionVerificationHistoryArray and PromotionStatusFreightCollectionVerificationHistoryArrayOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCollectionVerificationHistoryArrayInput` via:
//
//	PromotionStatusFreightCollectionVerificationHistoryArray{ PromotionStatusFreightCollectionVerificationHistoryArgs{...} }
type PromotionStatusFreightCollectionVerificationHistoryArrayInput interface {
	pulumi.Input

	ToPromotionStatusFreightCollectionVerificationHistoryArrayOutput() PromotionStatusFreightCollectionVerificationHistoryArrayOutput
	ToPromotionStatusFreightCollectionVerificationHistoryArrayOutputWithContext(context.Context) PromotionStatusFreightCollectionVerificationHistoryArrayOutput
}

type PromotionStatusFreightCollectionVerificationHistoryArray []PromotionStatusFreightCollectionVerificationHistoryInput

func (PromotionStatusFreightCollectionVerificationHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightCollectionVerificationHistory)(nil)).Elem()
}

func (i PromotionStatusFreightCollectionVerificationHistoryArray) ToPromotionStatusFreightCollectionVerificationHistoryArrayOutput() PromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return i.ToPromotionStatusFreightCollectionVerificationHistoryArrayOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCollectionVerificationHistoryArray) ToPromotionStatusFreightCollectionVerificationHistoryArrayOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionVerificationHistoryArrayOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type PromotionStatusFreightCollectionVerificationHistoryOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCollectionVerificationHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistory)(nil)).Elem()
}

func (o PromotionStatusFreightCollectionVerificationHistoryOutput) ToPromotionStatusFreightCollectionVerificationHistoryOutput() PromotionStatusFreightCollectionVerificationHistoryOutput {
	return o
}

func (o PromotionStatusFreightCollectionVerificationHistoryOutput) ToPromotionStatusFreightCollectionVerificationHistoryOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryOutput {
	return o
}

// Actor is the name of the entity that initiated or aborted the
// Verification process.
func (o PromotionStatusFreightCollectionVerificationHistoryOutput) Actor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistory) *string { return v.Actor }).(pulumi.StringPtrOutput)
}

func (o PromotionStatusFreightCollectionVerificationHistoryOutput) AnalysisRun() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistory) *PromotionStatusFreightCollectionVerificationHistoryAnalysisRun {
		return v.AnalysisRun
	}).(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput)
}

// FinishTime is the time at which the Verification process finished.
func (o PromotionStatusFreightCollectionVerificationHistoryOutput) FinishTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistory) *string { return v.FinishTime }).(pulumi.StringPtrOutput)
}

// ID is the identifier of the Verification process.
func (o PromotionStatusFreightCollectionVerificationHistoryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistory) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message may contain additional information about why the verification
// process is in its current phase.
func (o PromotionStatusFreightCollectionVerificationHistoryOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistory) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Phase describes the current phase of the Verification process. Generally,
// this will be a reflection of the underlying AnalysisRun's phase, however,
// there are exceptions to this, such as in the case where an AnalysisRun
// cannot be launched successfully.
func (o PromotionStatusFreightCollectionVerificationHistoryOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistory) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// StartTime is the time at which the Verification process was started.
func (o PromotionStatusFreightCollectionVerificationHistoryOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistory) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type PromotionStatusFreightCollectionVerificationHistoryArrayOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCollectionVerificationHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightCollectionVerificationHistory)(nil)).Elem()
}

func (o PromotionStatusFreightCollectionVerificationHistoryArrayOutput) ToPromotionStatusFreightCollectionVerificationHistoryArrayOutput() PromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return o
}

func (o PromotionStatusFreightCollectionVerificationHistoryArrayOutput) ToPromotionStatusFreightCollectionVerificationHistoryArrayOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return o
}

func (o PromotionStatusFreightCollectionVerificationHistoryArrayOutput) Index(i pulumi.IntInput) PromotionStatusFreightCollectionVerificationHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionStatusFreightCollectionVerificationHistory {
		return vs[0].([]PromotionStatusFreightCollectionVerificationHistory)[vs[1].(int)]
	}).(PromotionStatusFreightCollectionVerificationHistoryOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type PromotionStatusFreightCollectionVerificationHistoryAnalysisRun struct {
	// Name is the name of the AnalysisRun.
	Name *string `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace *string `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase *string `pulumi:"phase"`
}

// PromotionStatusFreightCollectionVerificationHistoryAnalysisRunInput is an input type that accepts PromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs and PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCollectionVerificationHistoryAnalysisRunInput` via:
//
//	PromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs{...}
type PromotionStatusFreightCollectionVerificationHistoryAnalysisRunInput interface {
	pulumi.Input

	ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput
	ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutputWithContext(context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type PromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs struct {
	// Name is the name of the AnalysisRun.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
}

func (PromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (i PromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return i.ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput)
}

func (i PromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return i.ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput).ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx)
}

// PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput is an input type that accepts PromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs, PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtr and PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput` via:
//
//	        PromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs{...}
//
//	or:
//
//	        nil
type PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput interface {
	pulumi.Input

	ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput
	ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput
}

type promotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType PromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs

func PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtr(v *PromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput {
	return (*promotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType)(v)
}

func (*promotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreightCollectionVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (i *promotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return i.ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(context.Background())
}

func (i *promotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return o
}

func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return o
}

func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o.ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(context.Background())
}

func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *PromotionStatusFreightCollectionVerificationHistoryAnalysisRun {
		return &v
	}).(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput)
}

// Name is the name of the AnalysisRun.
func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

type PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreightCollectionVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o
}

func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o
}

func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) Elem() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollectionVerificationHistoryAnalysisRun) PromotionStatusFreightCollectionVerificationHistoryAnalysisRun {
		if v != nil {
			return *v
		}
		var ret PromotionStatusFreightCollectionVerificationHistoryAnalysisRun
		return ret
	}).(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput)
}

// Name is the name of the AnalysisRun.
func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch struct {
	// Name is the name of the AnalysisRun.
	Name *string `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace *string `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase *string `pulumi:"phase"`
}

// PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchInput is an input type that accepts PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs and PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchInput` via:
//
//	PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs{...}
type PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchInput interface {
	pulumi.Input

	ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput
	ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutputWithContext(context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs struct {
	// Name is the name of the AnalysisRun.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
}

func (PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (i PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return i.ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput)
}

func (i PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return i.ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput).ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx)
}

// PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput is an input type that accepts PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs, PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtr and PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput` via:
//
//	        PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs{...}
//
//	or:
//
//	        nil
type PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput interface {
	pulumi.Input

	ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput
	ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput
}

type promotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs

func PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtr(v *PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput {
	return (*promotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType)(v)
}

func (*promotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (i *promotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return i.ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Background())
}

func (i *promotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return o
}

func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return o
}

func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o.ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Background())
}

func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch {
		return &v
	}).(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput)
}

// Name is the name of the AnalysisRun.
func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

type PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o
}

func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) ToPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o
}

func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) Elem() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch {
		if v != nil {
			return *v
		}
		var ret PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch
		return ret
	}).(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput)
}

// Name is the name of the AnalysisRun.
func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type PromotionStatusFreightCollectionVerificationHistoryPatch struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       *string                                                              `pulumi:"actor"`
	AnalysisRun *PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime *string `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id *string `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message *string `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase *string `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime *string `pulumi:"startTime"`
}

// PromotionStatusFreightCollectionVerificationHistoryPatchInput is an input type that accepts PromotionStatusFreightCollectionVerificationHistoryPatchArgs and PromotionStatusFreightCollectionVerificationHistoryPatchOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCollectionVerificationHistoryPatchInput` via:
//
//	PromotionStatusFreightCollectionVerificationHistoryPatchArgs{...}
type PromotionStatusFreightCollectionVerificationHistoryPatchInput interface {
	pulumi.Input

	ToPromotionStatusFreightCollectionVerificationHistoryPatchOutput() PromotionStatusFreightCollectionVerificationHistoryPatchOutput
	ToPromotionStatusFreightCollectionVerificationHistoryPatchOutputWithContext(context.Context) PromotionStatusFreightCollectionVerificationHistoryPatchOutput
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type PromotionStatusFreightCollectionVerificationHistoryPatchArgs struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       pulumi.StringPtrInput                                                       `pulumi:"actor"`
	AnalysisRun PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime pulumi.StringPtrInput `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (PromotionStatusFreightCollectionVerificationHistoryPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistoryPatch)(nil)).Elem()
}

func (i PromotionStatusFreightCollectionVerificationHistoryPatchArgs) ToPromotionStatusFreightCollectionVerificationHistoryPatchOutput() PromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return i.ToPromotionStatusFreightCollectionVerificationHistoryPatchOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCollectionVerificationHistoryPatchArgs) ToPromotionStatusFreightCollectionVerificationHistoryPatchOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionVerificationHistoryPatchOutput)
}

// PromotionStatusFreightCollectionVerificationHistoryPatchArrayInput is an input type that accepts PromotionStatusFreightCollectionVerificationHistoryPatchArray and PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCollectionVerificationHistoryPatchArrayInput` via:
//
//	PromotionStatusFreightCollectionVerificationHistoryPatchArray{ PromotionStatusFreightCollectionVerificationHistoryPatchArgs{...} }
type PromotionStatusFreightCollectionVerificationHistoryPatchArrayInput interface {
	pulumi.Input

	ToPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput() PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput
	ToPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutputWithContext(context.Context) PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput
}

type PromotionStatusFreightCollectionVerificationHistoryPatchArray []PromotionStatusFreightCollectionVerificationHistoryPatchInput

func (PromotionStatusFreightCollectionVerificationHistoryPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightCollectionVerificationHistoryPatch)(nil)).Elem()
}

func (i PromotionStatusFreightCollectionVerificationHistoryPatchArray) ToPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput() PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return i.ToPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCollectionVerificationHistoryPatchArray) ToPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type PromotionStatusFreightCollectionVerificationHistoryPatchOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCollectionVerificationHistoryPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistoryPatch)(nil)).Elem()
}

func (o PromotionStatusFreightCollectionVerificationHistoryPatchOutput) ToPromotionStatusFreightCollectionVerificationHistoryPatchOutput() PromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return o
}

func (o PromotionStatusFreightCollectionVerificationHistoryPatchOutput) ToPromotionStatusFreightCollectionVerificationHistoryPatchOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return o
}

// Actor is the name of the entity that initiated or aborted the
// Verification process.
func (o PromotionStatusFreightCollectionVerificationHistoryPatchOutput) Actor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistoryPatch) *string { return v.Actor }).(pulumi.StringPtrOutput)
}

func (o PromotionStatusFreightCollectionVerificationHistoryPatchOutput) AnalysisRun() PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistoryPatch) *PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch {
		return v.AnalysisRun
	}).(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput)
}

// FinishTime is the time at which the Verification process finished.
func (o PromotionStatusFreightCollectionVerificationHistoryPatchOutput) FinishTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistoryPatch) *string { return v.FinishTime }).(pulumi.StringPtrOutput)
}

// ID is the identifier of the Verification process.
func (o PromotionStatusFreightCollectionVerificationHistoryPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistoryPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message may contain additional information about why the verification
// process is in its current phase.
func (o PromotionStatusFreightCollectionVerificationHistoryPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistoryPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Phase describes the current phase of the Verification process. Generally,
// this will be a reflection of the underlying AnalysisRun's phase, however,
// there are exceptions to this, such as in the case where an AnalysisRun
// cannot be launched successfully.
func (o PromotionStatusFreightCollectionVerificationHistoryPatchOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistoryPatch) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// StartTime is the time at which the Verification process was started.
func (o PromotionStatusFreightCollectionVerificationHistoryPatchOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCollectionVerificationHistoryPatch) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightCollectionVerificationHistoryPatch)(nil)).Elem()
}

func (o PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput) ToPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput() PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return o
}

func (o PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput) ToPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutputWithContext(ctx context.Context) PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return o
}

func (o PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput) Index(i pulumi.IntInput) PromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionStatusFreightCollectionVerificationHistoryPatch {
		return vs[0].([]PromotionStatusFreightCollectionVerificationHistoryPatch)[vs[1].(int)]
	}).(PromotionStatusFreightCollectionVerificationHistoryPatchOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type PromotionStatusFreightCommits struct {
	// Author is the author of the commit.
	Author *string `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch *string `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer *string `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id *string `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message *string `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL *string `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag *string `pulumi:"tag"`
}

// PromotionStatusFreightCommitsInput is an input type that accepts PromotionStatusFreightCommitsArgs and PromotionStatusFreightCommitsOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCommitsInput` via:
//
//	PromotionStatusFreightCommitsArgs{...}
type PromotionStatusFreightCommitsInput interface {
	pulumi.Input

	ToPromotionStatusFreightCommitsOutput() PromotionStatusFreightCommitsOutput
	ToPromotionStatusFreightCommitsOutputWithContext(context.Context) PromotionStatusFreightCommitsOutput
}

// GitCommit describes a specific commit from a specific Git repository.
type PromotionStatusFreightCommitsArgs struct {
	// Author is the author of the commit.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer pulumi.StringPtrInput `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (PromotionStatusFreightCommitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCommits)(nil)).Elem()
}

func (i PromotionStatusFreightCommitsArgs) ToPromotionStatusFreightCommitsOutput() PromotionStatusFreightCommitsOutput {
	return i.ToPromotionStatusFreightCommitsOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCommitsArgs) ToPromotionStatusFreightCommitsOutputWithContext(ctx context.Context) PromotionStatusFreightCommitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCommitsOutput)
}

// PromotionStatusFreightCommitsArrayInput is an input type that accepts PromotionStatusFreightCommitsArray and PromotionStatusFreightCommitsArrayOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCommitsArrayInput` via:
//
//	PromotionStatusFreightCommitsArray{ PromotionStatusFreightCommitsArgs{...} }
type PromotionStatusFreightCommitsArrayInput interface {
	pulumi.Input

	ToPromotionStatusFreightCommitsArrayOutput() PromotionStatusFreightCommitsArrayOutput
	ToPromotionStatusFreightCommitsArrayOutputWithContext(context.Context) PromotionStatusFreightCommitsArrayOutput
}

type PromotionStatusFreightCommitsArray []PromotionStatusFreightCommitsInput

func (PromotionStatusFreightCommitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightCommits)(nil)).Elem()
}

func (i PromotionStatusFreightCommitsArray) ToPromotionStatusFreightCommitsArrayOutput() PromotionStatusFreightCommitsArrayOutput {
	return i.ToPromotionStatusFreightCommitsArrayOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCommitsArray) ToPromotionStatusFreightCommitsArrayOutputWithContext(ctx context.Context) PromotionStatusFreightCommitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCommitsArrayOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type PromotionStatusFreightCommitsOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCommitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCommits)(nil)).Elem()
}

func (o PromotionStatusFreightCommitsOutput) ToPromotionStatusFreightCommitsOutput() PromotionStatusFreightCommitsOutput {
	return o
}

func (o PromotionStatusFreightCommitsOutput) ToPromotionStatusFreightCommitsOutputWithContext(ctx context.Context) PromotionStatusFreightCommitsOutput {
	return o
}

// Author is the author of the commit.
func (o PromotionStatusFreightCommitsOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCommits) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Branch denotes the branch of the repository where this commit was found.
func (o PromotionStatusFreightCommitsOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCommits) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Committer is the person who committed the commit.
func (o PromotionStatusFreightCommitsOutput) Committer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCommits) *string { return v.Committer }).(pulumi.StringPtrOutput)
}

// ID is the ID of a specific commit in the Git repository specified by
// RepoURL.
func (o PromotionStatusFreightCommitsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCommits) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message is the message associated with the commit. At present, this only
// contains the first line (subject) of the commit message.
func (o PromotionStatusFreightCommitsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCommits) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// RepoURL is the URL of a Git repository.
func (o PromotionStatusFreightCommitsOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCommits) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag denotes a tag in the repository that matched selection criteria and
// resolved to this commit.
func (o PromotionStatusFreightCommitsOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCommits) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PromotionStatusFreightCommitsArrayOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCommitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightCommits)(nil)).Elem()
}

func (o PromotionStatusFreightCommitsArrayOutput) ToPromotionStatusFreightCommitsArrayOutput() PromotionStatusFreightCommitsArrayOutput {
	return o
}

func (o PromotionStatusFreightCommitsArrayOutput) ToPromotionStatusFreightCommitsArrayOutputWithContext(ctx context.Context) PromotionStatusFreightCommitsArrayOutput {
	return o
}

func (o PromotionStatusFreightCommitsArrayOutput) Index(i pulumi.IntInput) PromotionStatusFreightCommitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionStatusFreightCommits {
		return vs[0].([]PromotionStatusFreightCommits)[vs[1].(int)]
	}).(PromotionStatusFreightCommitsOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type PromotionStatusFreightCommitsPatch struct {
	// Author is the author of the commit.
	Author *string `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch *string `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer *string `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id *string `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message *string `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL *string `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag *string `pulumi:"tag"`
}

// PromotionStatusFreightCommitsPatchInput is an input type that accepts PromotionStatusFreightCommitsPatchArgs and PromotionStatusFreightCommitsPatchOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCommitsPatchInput` via:
//
//	PromotionStatusFreightCommitsPatchArgs{...}
type PromotionStatusFreightCommitsPatchInput interface {
	pulumi.Input

	ToPromotionStatusFreightCommitsPatchOutput() PromotionStatusFreightCommitsPatchOutput
	ToPromotionStatusFreightCommitsPatchOutputWithContext(context.Context) PromotionStatusFreightCommitsPatchOutput
}

// GitCommit describes a specific commit from a specific Git repository.
type PromotionStatusFreightCommitsPatchArgs struct {
	// Author is the author of the commit.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer pulumi.StringPtrInput `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (PromotionStatusFreightCommitsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCommitsPatch)(nil)).Elem()
}

func (i PromotionStatusFreightCommitsPatchArgs) ToPromotionStatusFreightCommitsPatchOutput() PromotionStatusFreightCommitsPatchOutput {
	return i.ToPromotionStatusFreightCommitsPatchOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCommitsPatchArgs) ToPromotionStatusFreightCommitsPatchOutputWithContext(ctx context.Context) PromotionStatusFreightCommitsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCommitsPatchOutput)
}

// PromotionStatusFreightCommitsPatchArrayInput is an input type that accepts PromotionStatusFreightCommitsPatchArray and PromotionStatusFreightCommitsPatchArrayOutput values.
// You can construct a concrete instance of `PromotionStatusFreightCommitsPatchArrayInput` via:
//
//	PromotionStatusFreightCommitsPatchArray{ PromotionStatusFreightCommitsPatchArgs{...} }
type PromotionStatusFreightCommitsPatchArrayInput interface {
	pulumi.Input

	ToPromotionStatusFreightCommitsPatchArrayOutput() PromotionStatusFreightCommitsPatchArrayOutput
	ToPromotionStatusFreightCommitsPatchArrayOutputWithContext(context.Context) PromotionStatusFreightCommitsPatchArrayOutput
}

type PromotionStatusFreightCommitsPatchArray []PromotionStatusFreightCommitsPatchInput

func (PromotionStatusFreightCommitsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightCommitsPatch)(nil)).Elem()
}

func (i PromotionStatusFreightCommitsPatchArray) ToPromotionStatusFreightCommitsPatchArrayOutput() PromotionStatusFreightCommitsPatchArrayOutput {
	return i.ToPromotionStatusFreightCommitsPatchArrayOutputWithContext(context.Background())
}

func (i PromotionStatusFreightCommitsPatchArray) ToPromotionStatusFreightCommitsPatchArrayOutputWithContext(ctx context.Context) PromotionStatusFreightCommitsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightCommitsPatchArrayOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type PromotionStatusFreightCommitsPatchOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCommitsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightCommitsPatch)(nil)).Elem()
}

func (o PromotionStatusFreightCommitsPatchOutput) ToPromotionStatusFreightCommitsPatchOutput() PromotionStatusFreightCommitsPatchOutput {
	return o
}

func (o PromotionStatusFreightCommitsPatchOutput) ToPromotionStatusFreightCommitsPatchOutputWithContext(ctx context.Context) PromotionStatusFreightCommitsPatchOutput {
	return o
}

// Author is the author of the commit.
func (o PromotionStatusFreightCommitsPatchOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCommitsPatch) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Branch denotes the branch of the repository where this commit was found.
func (o PromotionStatusFreightCommitsPatchOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCommitsPatch) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Committer is the person who committed the commit.
func (o PromotionStatusFreightCommitsPatchOutput) Committer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCommitsPatch) *string { return v.Committer }).(pulumi.StringPtrOutput)
}

// ID is the ID of a specific commit in the Git repository specified by
// RepoURL.
func (o PromotionStatusFreightCommitsPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCommitsPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message is the message associated with the commit. At present, this only
// contains the first line (subject) of the commit message.
func (o PromotionStatusFreightCommitsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCommitsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// RepoURL is the URL of a Git repository.
func (o PromotionStatusFreightCommitsPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCommitsPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag denotes a tag in the repository that matched selection criteria and
// resolved to this commit.
func (o PromotionStatusFreightCommitsPatchOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightCommitsPatch) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PromotionStatusFreightCommitsPatchArrayOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightCommitsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightCommitsPatch)(nil)).Elem()
}

func (o PromotionStatusFreightCommitsPatchArrayOutput) ToPromotionStatusFreightCommitsPatchArrayOutput() PromotionStatusFreightCommitsPatchArrayOutput {
	return o
}

func (o PromotionStatusFreightCommitsPatchArrayOutput) ToPromotionStatusFreightCommitsPatchArrayOutputWithContext(ctx context.Context) PromotionStatusFreightCommitsPatchArrayOutput {
	return o
}

func (o PromotionStatusFreightCommitsPatchArrayOutput) Index(i pulumi.IntInput) PromotionStatusFreightCommitsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionStatusFreightCommitsPatch {
		return vs[0].([]PromotionStatusFreightCommitsPatch)[vs[1].(int)]
	}).(PromotionStatusFreightCommitsPatchOutput)
}

// Image describes a specific version of a container image.
type PromotionStatusFreightImages struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations map[string]string `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest *string `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL *string `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag *string `pulumi:"tag"`
}

// PromotionStatusFreightImagesInput is an input type that accepts PromotionStatusFreightImagesArgs and PromotionStatusFreightImagesOutput values.
// You can construct a concrete instance of `PromotionStatusFreightImagesInput` via:
//
//	PromotionStatusFreightImagesArgs{...}
type PromotionStatusFreightImagesInput interface {
	pulumi.Input

	ToPromotionStatusFreightImagesOutput() PromotionStatusFreightImagesOutput
	ToPromotionStatusFreightImagesOutputWithContext(context.Context) PromotionStatusFreightImagesOutput
}

// Image describes a specific version of a container image.
type PromotionStatusFreightImagesArgs struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (PromotionStatusFreightImagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightImages)(nil)).Elem()
}

func (i PromotionStatusFreightImagesArgs) ToPromotionStatusFreightImagesOutput() PromotionStatusFreightImagesOutput {
	return i.ToPromotionStatusFreightImagesOutputWithContext(context.Background())
}

func (i PromotionStatusFreightImagesArgs) ToPromotionStatusFreightImagesOutputWithContext(ctx context.Context) PromotionStatusFreightImagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightImagesOutput)
}

// PromotionStatusFreightImagesArrayInput is an input type that accepts PromotionStatusFreightImagesArray and PromotionStatusFreightImagesArrayOutput values.
// You can construct a concrete instance of `PromotionStatusFreightImagesArrayInput` via:
//
//	PromotionStatusFreightImagesArray{ PromotionStatusFreightImagesArgs{...} }
type PromotionStatusFreightImagesArrayInput interface {
	pulumi.Input

	ToPromotionStatusFreightImagesArrayOutput() PromotionStatusFreightImagesArrayOutput
	ToPromotionStatusFreightImagesArrayOutputWithContext(context.Context) PromotionStatusFreightImagesArrayOutput
}

type PromotionStatusFreightImagesArray []PromotionStatusFreightImagesInput

func (PromotionStatusFreightImagesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightImages)(nil)).Elem()
}

func (i PromotionStatusFreightImagesArray) ToPromotionStatusFreightImagesArrayOutput() PromotionStatusFreightImagesArrayOutput {
	return i.ToPromotionStatusFreightImagesArrayOutputWithContext(context.Background())
}

func (i PromotionStatusFreightImagesArray) ToPromotionStatusFreightImagesArrayOutputWithContext(ctx context.Context) PromotionStatusFreightImagesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightImagesArrayOutput)
}

// Image describes a specific version of a container image.
type PromotionStatusFreightImagesOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightImagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightImages)(nil)).Elem()
}

func (o PromotionStatusFreightImagesOutput) ToPromotionStatusFreightImagesOutput() PromotionStatusFreightImagesOutput {
	return o
}

func (o PromotionStatusFreightImagesOutput) ToPromotionStatusFreightImagesOutputWithContext(ctx context.Context) PromotionStatusFreightImagesOutput {
	return o
}

// Annotations is a map of arbitrary metadata for the image.
func (o PromotionStatusFreightImagesOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v PromotionStatusFreightImages) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Digest identifies a specific version of the image in the repository
// specified by RepoURL. This is a more precise identifier than Tag.
func (o PromotionStatusFreightImagesOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightImages) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// GitRepoURL specifies the URL of a Git repository that contains the source
// code for the image repository referenced by the RepoURL field if Kargo was
// able to infer it.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o PromotionStatusFreightImagesOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightImages) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// RepoURL describes the repository in which the image can be found.
func (o PromotionStatusFreightImagesOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightImages) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag identifies a specific version of the image in the repository specified
// by RepoURL.
func (o PromotionStatusFreightImagesOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightImages) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PromotionStatusFreightImagesArrayOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightImagesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightImages)(nil)).Elem()
}

func (o PromotionStatusFreightImagesArrayOutput) ToPromotionStatusFreightImagesArrayOutput() PromotionStatusFreightImagesArrayOutput {
	return o
}

func (o PromotionStatusFreightImagesArrayOutput) ToPromotionStatusFreightImagesArrayOutputWithContext(ctx context.Context) PromotionStatusFreightImagesArrayOutput {
	return o
}

func (o PromotionStatusFreightImagesArrayOutput) Index(i pulumi.IntInput) PromotionStatusFreightImagesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionStatusFreightImages {
		return vs[0].([]PromotionStatusFreightImages)[vs[1].(int)]
	}).(PromotionStatusFreightImagesOutput)
}

// Image describes a specific version of a container image.
type PromotionStatusFreightImagesPatch struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations map[string]string `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest *string `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL *string `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag *string `pulumi:"tag"`
}

// PromotionStatusFreightImagesPatchInput is an input type that accepts PromotionStatusFreightImagesPatchArgs and PromotionStatusFreightImagesPatchOutput values.
// You can construct a concrete instance of `PromotionStatusFreightImagesPatchInput` via:
//
//	PromotionStatusFreightImagesPatchArgs{...}
type PromotionStatusFreightImagesPatchInput interface {
	pulumi.Input

	ToPromotionStatusFreightImagesPatchOutput() PromotionStatusFreightImagesPatchOutput
	ToPromotionStatusFreightImagesPatchOutputWithContext(context.Context) PromotionStatusFreightImagesPatchOutput
}

// Image describes a specific version of a container image.
type PromotionStatusFreightImagesPatchArgs struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (PromotionStatusFreightImagesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightImagesPatch)(nil)).Elem()
}

func (i PromotionStatusFreightImagesPatchArgs) ToPromotionStatusFreightImagesPatchOutput() PromotionStatusFreightImagesPatchOutput {
	return i.ToPromotionStatusFreightImagesPatchOutputWithContext(context.Background())
}

func (i PromotionStatusFreightImagesPatchArgs) ToPromotionStatusFreightImagesPatchOutputWithContext(ctx context.Context) PromotionStatusFreightImagesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightImagesPatchOutput)
}

// PromotionStatusFreightImagesPatchArrayInput is an input type that accepts PromotionStatusFreightImagesPatchArray and PromotionStatusFreightImagesPatchArrayOutput values.
// You can construct a concrete instance of `PromotionStatusFreightImagesPatchArrayInput` via:
//
//	PromotionStatusFreightImagesPatchArray{ PromotionStatusFreightImagesPatchArgs{...} }
type PromotionStatusFreightImagesPatchArrayInput interface {
	pulumi.Input

	ToPromotionStatusFreightImagesPatchArrayOutput() PromotionStatusFreightImagesPatchArrayOutput
	ToPromotionStatusFreightImagesPatchArrayOutputWithContext(context.Context) PromotionStatusFreightImagesPatchArrayOutput
}

type PromotionStatusFreightImagesPatchArray []PromotionStatusFreightImagesPatchInput

func (PromotionStatusFreightImagesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightImagesPatch)(nil)).Elem()
}

func (i PromotionStatusFreightImagesPatchArray) ToPromotionStatusFreightImagesPatchArrayOutput() PromotionStatusFreightImagesPatchArrayOutput {
	return i.ToPromotionStatusFreightImagesPatchArrayOutputWithContext(context.Background())
}

func (i PromotionStatusFreightImagesPatchArray) ToPromotionStatusFreightImagesPatchArrayOutputWithContext(ctx context.Context) PromotionStatusFreightImagesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightImagesPatchArrayOutput)
}

// Image describes a specific version of a container image.
type PromotionStatusFreightImagesPatchOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightImagesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightImagesPatch)(nil)).Elem()
}

func (o PromotionStatusFreightImagesPatchOutput) ToPromotionStatusFreightImagesPatchOutput() PromotionStatusFreightImagesPatchOutput {
	return o
}

func (o PromotionStatusFreightImagesPatchOutput) ToPromotionStatusFreightImagesPatchOutputWithContext(ctx context.Context) PromotionStatusFreightImagesPatchOutput {
	return o
}

// Annotations is a map of arbitrary metadata for the image.
func (o PromotionStatusFreightImagesPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v PromotionStatusFreightImagesPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Digest identifies a specific version of the image in the repository
// specified by RepoURL. This is a more precise identifier than Tag.
func (o PromotionStatusFreightImagesPatchOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightImagesPatch) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// GitRepoURL specifies the URL of a Git repository that contains the source
// code for the image repository referenced by the RepoURL field if Kargo was
// able to infer it.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o PromotionStatusFreightImagesPatchOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightImagesPatch) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// RepoURL describes the repository in which the image can be found.
func (o PromotionStatusFreightImagesPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightImagesPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag identifies a specific version of the image in the repository specified
// by RepoURL.
func (o PromotionStatusFreightImagesPatchOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightImagesPatch) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PromotionStatusFreightImagesPatchArrayOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightImagesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusFreightImagesPatch)(nil)).Elem()
}

func (o PromotionStatusFreightImagesPatchArrayOutput) ToPromotionStatusFreightImagesPatchArrayOutput() PromotionStatusFreightImagesPatchArrayOutput {
	return o
}

func (o PromotionStatusFreightImagesPatchArrayOutput) ToPromotionStatusFreightImagesPatchArrayOutputWithContext(ctx context.Context) PromotionStatusFreightImagesPatchArrayOutput {
	return o
}

func (o PromotionStatusFreightImagesPatchArrayOutput) Index(i pulumi.IntInput) PromotionStatusFreightImagesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionStatusFreightImagesPatch {
		return vs[0].([]PromotionStatusFreightImagesPatch)[vs[1].(int)]
	}).(PromotionStatusFreightImagesPatchOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type PromotionStatusFreightOrigin struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name *string `pulumi:"name"`
}

// PromotionStatusFreightOriginInput is an input type that accepts PromotionStatusFreightOriginArgs and PromotionStatusFreightOriginOutput values.
// You can construct a concrete instance of `PromotionStatusFreightOriginInput` via:
//
//	PromotionStatusFreightOriginArgs{...}
type PromotionStatusFreightOriginInput interface {
	pulumi.Input

	ToPromotionStatusFreightOriginOutput() PromotionStatusFreightOriginOutput
	ToPromotionStatusFreightOriginOutputWithContext(context.Context) PromotionStatusFreightOriginOutput
}

// Origin describes a kind of Freight in terms of its origin.
type PromotionStatusFreightOriginArgs struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PromotionStatusFreightOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightOrigin)(nil)).Elem()
}

func (i PromotionStatusFreightOriginArgs) ToPromotionStatusFreightOriginOutput() PromotionStatusFreightOriginOutput {
	return i.ToPromotionStatusFreightOriginOutputWithContext(context.Background())
}

func (i PromotionStatusFreightOriginArgs) ToPromotionStatusFreightOriginOutputWithContext(ctx context.Context) PromotionStatusFreightOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightOriginOutput)
}

func (i PromotionStatusFreightOriginArgs) ToPromotionStatusFreightOriginPtrOutput() PromotionStatusFreightOriginPtrOutput {
	return i.ToPromotionStatusFreightOriginPtrOutputWithContext(context.Background())
}

func (i PromotionStatusFreightOriginArgs) ToPromotionStatusFreightOriginPtrOutputWithContext(ctx context.Context) PromotionStatusFreightOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightOriginOutput).ToPromotionStatusFreightOriginPtrOutputWithContext(ctx)
}

// PromotionStatusFreightOriginPtrInput is an input type that accepts PromotionStatusFreightOriginArgs, PromotionStatusFreightOriginPtr and PromotionStatusFreightOriginPtrOutput values.
// You can construct a concrete instance of `PromotionStatusFreightOriginPtrInput` via:
//
//	        PromotionStatusFreightOriginArgs{...}
//
//	or:
//
//	        nil
type PromotionStatusFreightOriginPtrInput interface {
	pulumi.Input

	ToPromotionStatusFreightOriginPtrOutput() PromotionStatusFreightOriginPtrOutput
	ToPromotionStatusFreightOriginPtrOutputWithContext(context.Context) PromotionStatusFreightOriginPtrOutput
}

type promotionStatusFreightOriginPtrType PromotionStatusFreightOriginArgs

func PromotionStatusFreightOriginPtr(v *PromotionStatusFreightOriginArgs) PromotionStatusFreightOriginPtrInput {
	return (*promotionStatusFreightOriginPtrType)(v)
}

func (*promotionStatusFreightOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreightOrigin)(nil)).Elem()
}

func (i *promotionStatusFreightOriginPtrType) ToPromotionStatusFreightOriginPtrOutput() PromotionStatusFreightOriginPtrOutput {
	return i.ToPromotionStatusFreightOriginPtrOutputWithContext(context.Background())
}

func (i *promotionStatusFreightOriginPtrType) ToPromotionStatusFreightOriginPtrOutputWithContext(ctx context.Context) PromotionStatusFreightOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightOriginPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type PromotionStatusFreightOriginOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightOrigin)(nil)).Elem()
}

func (o PromotionStatusFreightOriginOutput) ToPromotionStatusFreightOriginOutput() PromotionStatusFreightOriginOutput {
	return o
}

func (o PromotionStatusFreightOriginOutput) ToPromotionStatusFreightOriginOutputWithContext(ctx context.Context) PromotionStatusFreightOriginOutput {
	return o
}

func (o PromotionStatusFreightOriginOutput) ToPromotionStatusFreightOriginPtrOutput() PromotionStatusFreightOriginPtrOutput {
	return o.ToPromotionStatusFreightOriginPtrOutputWithContext(context.Background())
}

func (o PromotionStatusFreightOriginOutput) ToPromotionStatusFreightOriginPtrOutputWithContext(ctx context.Context) PromotionStatusFreightOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionStatusFreightOrigin) *PromotionStatusFreightOrigin {
		return &v
	}).(PromotionStatusFreightOriginPtrOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o PromotionStatusFreightOriginOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightOrigin) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o PromotionStatusFreightOriginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightOrigin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PromotionStatusFreightOriginPtrOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreightOrigin)(nil)).Elem()
}

func (o PromotionStatusFreightOriginPtrOutput) ToPromotionStatusFreightOriginPtrOutput() PromotionStatusFreightOriginPtrOutput {
	return o
}

func (o PromotionStatusFreightOriginPtrOutput) ToPromotionStatusFreightOriginPtrOutputWithContext(ctx context.Context) PromotionStatusFreightOriginPtrOutput {
	return o
}

func (o PromotionStatusFreightOriginPtrOutput) Elem() PromotionStatusFreightOriginOutput {
	return o.ApplyT(func(v *PromotionStatusFreightOrigin) PromotionStatusFreightOrigin {
		if v != nil {
			return *v
		}
		var ret PromotionStatusFreightOrigin
		return ret
	}).(PromotionStatusFreightOriginOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o PromotionStatusFreightOriginPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreightOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o PromotionStatusFreightOriginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreightOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type PromotionStatusFreightOriginPatch struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name *string `pulumi:"name"`
}

// PromotionStatusFreightOriginPatchInput is an input type that accepts PromotionStatusFreightOriginPatchArgs and PromotionStatusFreightOriginPatchOutput values.
// You can construct a concrete instance of `PromotionStatusFreightOriginPatchInput` via:
//
//	PromotionStatusFreightOriginPatchArgs{...}
type PromotionStatusFreightOriginPatchInput interface {
	pulumi.Input

	ToPromotionStatusFreightOriginPatchOutput() PromotionStatusFreightOriginPatchOutput
	ToPromotionStatusFreightOriginPatchOutputWithContext(context.Context) PromotionStatusFreightOriginPatchOutput
}

// Origin describes a kind of Freight in terms of its origin.
type PromotionStatusFreightOriginPatchArgs struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PromotionStatusFreightOriginPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightOriginPatch)(nil)).Elem()
}

func (i PromotionStatusFreightOriginPatchArgs) ToPromotionStatusFreightOriginPatchOutput() PromotionStatusFreightOriginPatchOutput {
	return i.ToPromotionStatusFreightOriginPatchOutputWithContext(context.Background())
}

func (i PromotionStatusFreightOriginPatchArgs) ToPromotionStatusFreightOriginPatchOutputWithContext(ctx context.Context) PromotionStatusFreightOriginPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightOriginPatchOutput)
}

func (i PromotionStatusFreightOriginPatchArgs) ToPromotionStatusFreightOriginPatchPtrOutput() PromotionStatusFreightOriginPatchPtrOutput {
	return i.ToPromotionStatusFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (i PromotionStatusFreightOriginPatchArgs) ToPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightOriginPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightOriginPatchOutput).ToPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx)
}

// PromotionStatusFreightOriginPatchPtrInput is an input type that accepts PromotionStatusFreightOriginPatchArgs, PromotionStatusFreightOriginPatchPtr and PromotionStatusFreightOriginPatchPtrOutput values.
// You can construct a concrete instance of `PromotionStatusFreightOriginPatchPtrInput` via:
//
//	        PromotionStatusFreightOriginPatchArgs{...}
//
//	or:
//
//	        nil
type PromotionStatusFreightOriginPatchPtrInput interface {
	pulumi.Input

	ToPromotionStatusFreightOriginPatchPtrOutput() PromotionStatusFreightOriginPatchPtrOutput
	ToPromotionStatusFreightOriginPatchPtrOutputWithContext(context.Context) PromotionStatusFreightOriginPatchPtrOutput
}

type promotionStatusFreightOriginPatchPtrType PromotionStatusFreightOriginPatchArgs

func PromotionStatusFreightOriginPatchPtr(v *PromotionStatusFreightOriginPatchArgs) PromotionStatusFreightOriginPatchPtrInput {
	return (*promotionStatusFreightOriginPatchPtrType)(v)
}

func (*promotionStatusFreightOriginPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreightOriginPatch)(nil)).Elem()
}

func (i *promotionStatusFreightOriginPatchPtrType) ToPromotionStatusFreightOriginPatchPtrOutput() PromotionStatusFreightOriginPatchPtrOutput {
	return i.ToPromotionStatusFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (i *promotionStatusFreightOriginPatchPtrType) ToPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightOriginPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightOriginPatchPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type PromotionStatusFreightOriginPatchOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightOriginPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightOriginPatch)(nil)).Elem()
}

func (o PromotionStatusFreightOriginPatchOutput) ToPromotionStatusFreightOriginPatchOutput() PromotionStatusFreightOriginPatchOutput {
	return o
}

func (o PromotionStatusFreightOriginPatchOutput) ToPromotionStatusFreightOriginPatchOutputWithContext(ctx context.Context) PromotionStatusFreightOriginPatchOutput {
	return o
}

func (o PromotionStatusFreightOriginPatchOutput) ToPromotionStatusFreightOriginPatchPtrOutput() PromotionStatusFreightOriginPatchPtrOutput {
	return o.ToPromotionStatusFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (o PromotionStatusFreightOriginPatchOutput) ToPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightOriginPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionStatusFreightOriginPatch) *PromotionStatusFreightOriginPatch {
		return &v
	}).(PromotionStatusFreightOriginPatchPtrOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o PromotionStatusFreightOriginPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightOriginPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o PromotionStatusFreightOriginPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightOriginPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PromotionStatusFreightOriginPatchPtrOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightOriginPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreightOriginPatch)(nil)).Elem()
}

func (o PromotionStatusFreightOriginPatchPtrOutput) ToPromotionStatusFreightOriginPatchPtrOutput() PromotionStatusFreightOriginPatchPtrOutput {
	return o
}

func (o PromotionStatusFreightOriginPatchPtrOutput) ToPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightOriginPatchPtrOutput {
	return o
}

func (o PromotionStatusFreightOriginPatchPtrOutput) Elem() PromotionStatusFreightOriginPatchOutput {
	return o.ApplyT(func(v *PromotionStatusFreightOriginPatch) PromotionStatusFreightOriginPatch {
		if v != nil {
			return *v
		}
		var ret PromotionStatusFreightOriginPatch
		return ret
	}).(PromotionStatusFreightOriginPatchOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o PromotionStatusFreightOriginPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreightOriginPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o PromotionStatusFreightOriginPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreightOriginPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type PromotionStatusFreightPatch struct {
	// Charts describes specific versions of specific Helm charts.
	Charts []PromotionStatusFreightChartsPatch `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits []PromotionStatusFreightCommitsPatch `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images []PromotionStatusFreightImagesPatch `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   *string                            `pulumi:"name"`
	Origin *PromotionStatusFreightOriginPatch `pulumi:"origin"`
}

// PromotionStatusFreightPatchInput is an input type that accepts PromotionStatusFreightPatchArgs and PromotionStatusFreightPatchOutput values.
// You can construct a concrete instance of `PromotionStatusFreightPatchInput` via:
//
//	PromotionStatusFreightPatchArgs{...}
type PromotionStatusFreightPatchInput interface {
	pulumi.Input

	ToPromotionStatusFreightPatchOutput() PromotionStatusFreightPatchOutput
	ToPromotionStatusFreightPatchOutputWithContext(context.Context) PromotionStatusFreightPatchOutput
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type PromotionStatusFreightPatchArgs struct {
	// Charts describes specific versions of specific Helm charts.
	Charts PromotionStatusFreightChartsPatchArrayInput `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits PromotionStatusFreightCommitsPatchArrayInput `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images PromotionStatusFreightImagesPatchArrayInput `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   pulumi.StringPtrInput                     `pulumi:"name"`
	Origin PromotionStatusFreightOriginPatchPtrInput `pulumi:"origin"`
}

func (PromotionStatusFreightPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightPatch)(nil)).Elem()
}

func (i PromotionStatusFreightPatchArgs) ToPromotionStatusFreightPatchOutput() PromotionStatusFreightPatchOutput {
	return i.ToPromotionStatusFreightPatchOutputWithContext(context.Background())
}

func (i PromotionStatusFreightPatchArgs) ToPromotionStatusFreightPatchOutputWithContext(ctx context.Context) PromotionStatusFreightPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightPatchOutput)
}

func (i PromotionStatusFreightPatchArgs) ToPromotionStatusFreightPatchPtrOutput() PromotionStatusFreightPatchPtrOutput {
	return i.ToPromotionStatusFreightPatchPtrOutputWithContext(context.Background())
}

func (i PromotionStatusFreightPatchArgs) ToPromotionStatusFreightPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightPatchOutput).ToPromotionStatusFreightPatchPtrOutputWithContext(ctx)
}

// PromotionStatusFreightPatchPtrInput is an input type that accepts PromotionStatusFreightPatchArgs, PromotionStatusFreightPatchPtr and PromotionStatusFreightPatchPtrOutput values.
// You can construct a concrete instance of `PromotionStatusFreightPatchPtrInput` via:
//
//	        PromotionStatusFreightPatchArgs{...}
//
//	or:
//
//	        nil
type PromotionStatusFreightPatchPtrInput interface {
	pulumi.Input

	ToPromotionStatusFreightPatchPtrOutput() PromotionStatusFreightPatchPtrOutput
	ToPromotionStatusFreightPatchPtrOutputWithContext(context.Context) PromotionStatusFreightPatchPtrOutput
}

type promotionStatusFreightPatchPtrType PromotionStatusFreightPatchArgs

func PromotionStatusFreightPatchPtr(v *PromotionStatusFreightPatchArgs) PromotionStatusFreightPatchPtrInput {
	return (*promotionStatusFreightPatchPtrType)(v)
}

func (*promotionStatusFreightPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreightPatch)(nil)).Elem()
}

func (i *promotionStatusFreightPatchPtrType) ToPromotionStatusFreightPatchPtrOutput() PromotionStatusFreightPatchPtrOutput {
	return i.ToPromotionStatusFreightPatchPtrOutputWithContext(context.Background())
}

func (i *promotionStatusFreightPatchPtrType) ToPromotionStatusFreightPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusFreightPatchPtrOutput)
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type PromotionStatusFreightPatchOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusFreightPatch)(nil)).Elem()
}

func (o PromotionStatusFreightPatchOutput) ToPromotionStatusFreightPatchOutput() PromotionStatusFreightPatchOutput {
	return o
}

func (o PromotionStatusFreightPatchOutput) ToPromotionStatusFreightPatchOutputWithContext(ctx context.Context) PromotionStatusFreightPatchOutput {
	return o
}

func (o PromotionStatusFreightPatchOutput) ToPromotionStatusFreightPatchPtrOutput() PromotionStatusFreightPatchPtrOutput {
	return o.ToPromotionStatusFreightPatchPtrOutputWithContext(context.Background())
}

func (o PromotionStatusFreightPatchOutput) ToPromotionStatusFreightPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionStatusFreightPatch) *PromotionStatusFreightPatch {
		return &v
	}).(PromotionStatusFreightPatchPtrOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o PromotionStatusFreightPatchOutput) Charts() PromotionStatusFreightChartsPatchArrayOutput {
	return o.ApplyT(func(v PromotionStatusFreightPatch) []PromotionStatusFreightChartsPatch { return v.Charts }).(PromotionStatusFreightChartsPatchArrayOutput)
}

// Commits describes specific Git repository commits.
func (o PromotionStatusFreightPatchOutput) Commits() PromotionStatusFreightCommitsPatchArrayOutput {
	return o.ApplyT(func(v PromotionStatusFreightPatch) []PromotionStatusFreightCommitsPatch { return v.Commits }).(PromotionStatusFreightCommitsPatchArrayOutput)
}

// Images describes specific versions of specific container images.
func (o PromotionStatusFreightPatchOutput) Images() PromotionStatusFreightImagesPatchArrayOutput {
	return o.ApplyT(func(v PromotionStatusFreightPatch) []PromotionStatusFreightImagesPatch { return v.Images }).(PromotionStatusFreightImagesPatchArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o PromotionStatusFreightPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PromotionStatusFreightPatchOutput) Origin() PromotionStatusFreightOriginPatchPtrOutput {
	return o.ApplyT(func(v PromotionStatusFreightPatch) *PromotionStatusFreightOriginPatch { return v.Origin }).(PromotionStatusFreightOriginPatchPtrOutput)
}

type PromotionStatusFreightPatchPtrOutput struct{ *pulumi.OutputState }

func (PromotionStatusFreightPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusFreightPatch)(nil)).Elem()
}

func (o PromotionStatusFreightPatchPtrOutput) ToPromotionStatusFreightPatchPtrOutput() PromotionStatusFreightPatchPtrOutput {
	return o
}

func (o PromotionStatusFreightPatchPtrOutput) ToPromotionStatusFreightPatchPtrOutputWithContext(ctx context.Context) PromotionStatusFreightPatchPtrOutput {
	return o
}

func (o PromotionStatusFreightPatchPtrOutput) Elem() PromotionStatusFreightPatchOutput {
	return o.ApplyT(func(v *PromotionStatusFreightPatch) PromotionStatusFreightPatch {
		if v != nil {
			return *v
		}
		var ret PromotionStatusFreightPatch
		return ret
	}).(PromotionStatusFreightPatchOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o PromotionStatusFreightPatchPtrOutput) Charts() PromotionStatusFreightChartsPatchArrayOutput {
	return o.ApplyT(func(v *PromotionStatusFreightPatch) []PromotionStatusFreightChartsPatch {
		if v == nil {
			return nil
		}
		return v.Charts
	}).(PromotionStatusFreightChartsPatchArrayOutput)
}

// Commits describes specific Git repository commits.
func (o PromotionStatusFreightPatchPtrOutput) Commits() PromotionStatusFreightCommitsPatchArrayOutput {
	return o.ApplyT(func(v *PromotionStatusFreightPatch) []PromotionStatusFreightCommitsPatch {
		if v == nil {
			return nil
		}
		return v.Commits
	}).(PromotionStatusFreightCommitsPatchArrayOutput)
}

// Images describes specific versions of specific container images.
func (o PromotionStatusFreightPatchPtrOutput) Images() PromotionStatusFreightImagesPatchArrayOutput {
	return o.ApplyT(func(v *PromotionStatusFreightPatch) []PromotionStatusFreightImagesPatch {
		if v == nil {
			return nil
		}
		return v.Images
	}).(PromotionStatusFreightImagesPatchArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o PromotionStatusFreightPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreightPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o PromotionStatusFreightPatchPtrOutput) Origin() PromotionStatusFreightOriginPatchPtrOutput {
	return o.ApplyT(func(v *PromotionStatusFreightPatch) *PromotionStatusFreightOriginPatch {
		if v == nil {
			return nil
		}
		return v.Origin
	}).(PromotionStatusFreightOriginPatchPtrOutput)
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type PromotionStatusHealthChecks struct {
	// Config is the configuration for the directive.
	Config map[string]interface{} `pulumi:"config"`
	// Uses identifies a runner that can execute this step.
	Uses *string `pulumi:"uses"`
}

// PromotionStatusHealthChecksInput is an input type that accepts PromotionStatusHealthChecksArgs and PromotionStatusHealthChecksOutput values.
// You can construct a concrete instance of `PromotionStatusHealthChecksInput` via:
//
//	PromotionStatusHealthChecksArgs{...}
type PromotionStatusHealthChecksInput interface {
	pulumi.Input

	ToPromotionStatusHealthChecksOutput() PromotionStatusHealthChecksOutput
	ToPromotionStatusHealthChecksOutputWithContext(context.Context) PromotionStatusHealthChecksOutput
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type PromotionStatusHealthChecksArgs struct {
	// Config is the configuration for the directive.
	Config pulumi.MapInput `pulumi:"config"`
	// Uses identifies a runner that can execute this step.
	Uses pulumi.StringPtrInput `pulumi:"uses"`
}

func (PromotionStatusHealthChecksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusHealthChecks)(nil)).Elem()
}

func (i PromotionStatusHealthChecksArgs) ToPromotionStatusHealthChecksOutput() PromotionStatusHealthChecksOutput {
	return i.ToPromotionStatusHealthChecksOutputWithContext(context.Background())
}

func (i PromotionStatusHealthChecksArgs) ToPromotionStatusHealthChecksOutputWithContext(ctx context.Context) PromotionStatusHealthChecksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusHealthChecksOutput)
}

// PromotionStatusHealthChecksArrayInput is an input type that accepts PromotionStatusHealthChecksArray and PromotionStatusHealthChecksArrayOutput values.
// You can construct a concrete instance of `PromotionStatusHealthChecksArrayInput` via:
//
//	PromotionStatusHealthChecksArray{ PromotionStatusHealthChecksArgs{...} }
type PromotionStatusHealthChecksArrayInput interface {
	pulumi.Input

	ToPromotionStatusHealthChecksArrayOutput() PromotionStatusHealthChecksArrayOutput
	ToPromotionStatusHealthChecksArrayOutputWithContext(context.Context) PromotionStatusHealthChecksArrayOutput
}

type PromotionStatusHealthChecksArray []PromotionStatusHealthChecksInput

func (PromotionStatusHealthChecksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusHealthChecks)(nil)).Elem()
}

func (i PromotionStatusHealthChecksArray) ToPromotionStatusHealthChecksArrayOutput() PromotionStatusHealthChecksArrayOutput {
	return i.ToPromotionStatusHealthChecksArrayOutputWithContext(context.Background())
}

func (i PromotionStatusHealthChecksArray) ToPromotionStatusHealthChecksArrayOutputWithContext(ctx context.Context) PromotionStatusHealthChecksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusHealthChecksArrayOutput)
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type PromotionStatusHealthChecksOutput struct{ *pulumi.OutputState }

func (PromotionStatusHealthChecksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusHealthChecks)(nil)).Elem()
}

func (o PromotionStatusHealthChecksOutput) ToPromotionStatusHealthChecksOutput() PromotionStatusHealthChecksOutput {
	return o
}

func (o PromotionStatusHealthChecksOutput) ToPromotionStatusHealthChecksOutputWithContext(ctx context.Context) PromotionStatusHealthChecksOutput {
	return o
}

// Config is the configuration for the directive.
func (o PromotionStatusHealthChecksOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v PromotionStatusHealthChecks) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// Uses identifies a runner that can execute this step.
func (o PromotionStatusHealthChecksOutput) Uses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusHealthChecks) *string { return v.Uses }).(pulumi.StringPtrOutput)
}

type PromotionStatusHealthChecksArrayOutput struct{ *pulumi.OutputState }

func (PromotionStatusHealthChecksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusHealthChecks)(nil)).Elem()
}

func (o PromotionStatusHealthChecksArrayOutput) ToPromotionStatusHealthChecksArrayOutput() PromotionStatusHealthChecksArrayOutput {
	return o
}

func (o PromotionStatusHealthChecksArrayOutput) ToPromotionStatusHealthChecksArrayOutputWithContext(ctx context.Context) PromotionStatusHealthChecksArrayOutput {
	return o
}

func (o PromotionStatusHealthChecksArrayOutput) Index(i pulumi.IntInput) PromotionStatusHealthChecksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionStatusHealthChecks {
		return vs[0].([]PromotionStatusHealthChecks)[vs[1].(int)]
	}).(PromotionStatusHealthChecksOutput)
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type PromotionStatusHealthChecksPatch struct {
	// Config is the configuration for the directive.
	Config map[string]interface{} `pulumi:"config"`
	// Uses identifies a runner that can execute this step.
	Uses *string `pulumi:"uses"`
}

// PromotionStatusHealthChecksPatchInput is an input type that accepts PromotionStatusHealthChecksPatchArgs and PromotionStatusHealthChecksPatchOutput values.
// You can construct a concrete instance of `PromotionStatusHealthChecksPatchInput` via:
//
//	PromotionStatusHealthChecksPatchArgs{...}
type PromotionStatusHealthChecksPatchInput interface {
	pulumi.Input

	ToPromotionStatusHealthChecksPatchOutput() PromotionStatusHealthChecksPatchOutput
	ToPromotionStatusHealthChecksPatchOutputWithContext(context.Context) PromotionStatusHealthChecksPatchOutput
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type PromotionStatusHealthChecksPatchArgs struct {
	// Config is the configuration for the directive.
	Config pulumi.MapInput `pulumi:"config"`
	// Uses identifies a runner that can execute this step.
	Uses pulumi.StringPtrInput `pulumi:"uses"`
}

func (PromotionStatusHealthChecksPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusHealthChecksPatch)(nil)).Elem()
}

func (i PromotionStatusHealthChecksPatchArgs) ToPromotionStatusHealthChecksPatchOutput() PromotionStatusHealthChecksPatchOutput {
	return i.ToPromotionStatusHealthChecksPatchOutputWithContext(context.Background())
}

func (i PromotionStatusHealthChecksPatchArgs) ToPromotionStatusHealthChecksPatchOutputWithContext(ctx context.Context) PromotionStatusHealthChecksPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusHealthChecksPatchOutput)
}

// PromotionStatusHealthChecksPatchArrayInput is an input type that accepts PromotionStatusHealthChecksPatchArray and PromotionStatusHealthChecksPatchArrayOutput values.
// You can construct a concrete instance of `PromotionStatusHealthChecksPatchArrayInput` via:
//
//	PromotionStatusHealthChecksPatchArray{ PromotionStatusHealthChecksPatchArgs{...} }
type PromotionStatusHealthChecksPatchArrayInput interface {
	pulumi.Input

	ToPromotionStatusHealthChecksPatchArrayOutput() PromotionStatusHealthChecksPatchArrayOutput
	ToPromotionStatusHealthChecksPatchArrayOutputWithContext(context.Context) PromotionStatusHealthChecksPatchArrayOutput
}

type PromotionStatusHealthChecksPatchArray []PromotionStatusHealthChecksPatchInput

func (PromotionStatusHealthChecksPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusHealthChecksPatch)(nil)).Elem()
}

func (i PromotionStatusHealthChecksPatchArray) ToPromotionStatusHealthChecksPatchArrayOutput() PromotionStatusHealthChecksPatchArrayOutput {
	return i.ToPromotionStatusHealthChecksPatchArrayOutputWithContext(context.Background())
}

func (i PromotionStatusHealthChecksPatchArray) ToPromotionStatusHealthChecksPatchArrayOutputWithContext(ctx context.Context) PromotionStatusHealthChecksPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusHealthChecksPatchArrayOutput)
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type PromotionStatusHealthChecksPatchOutput struct{ *pulumi.OutputState }

func (PromotionStatusHealthChecksPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusHealthChecksPatch)(nil)).Elem()
}

func (o PromotionStatusHealthChecksPatchOutput) ToPromotionStatusHealthChecksPatchOutput() PromotionStatusHealthChecksPatchOutput {
	return o
}

func (o PromotionStatusHealthChecksPatchOutput) ToPromotionStatusHealthChecksPatchOutputWithContext(ctx context.Context) PromotionStatusHealthChecksPatchOutput {
	return o
}

// Config is the configuration for the directive.
func (o PromotionStatusHealthChecksPatchOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v PromotionStatusHealthChecksPatch) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// Uses identifies a runner that can execute this step.
func (o PromotionStatusHealthChecksPatchOutput) Uses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusHealthChecksPatch) *string { return v.Uses }).(pulumi.StringPtrOutput)
}

type PromotionStatusHealthChecksPatchArrayOutput struct{ *pulumi.OutputState }

func (PromotionStatusHealthChecksPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusHealthChecksPatch)(nil)).Elem()
}

func (o PromotionStatusHealthChecksPatchArrayOutput) ToPromotionStatusHealthChecksPatchArrayOutput() PromotionStatusHealthChecksPatchArrayOutput {
	return o
}

func (o PromotionStatusHealthChecksPatchArrayOutput) ToPromotionStatusHealthChecksPatchArrayOutputWithContext(ctx context.Context) PromotionStatusHealthChecksPatchArrayOutput {
	return o
}

func (o PromotionStatusHealthChecksPatchArrayOutput) Index(i pulumi.IntInput) PromotionStatusHealthChecksPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionStatusHealthChecksPatch {
		return vs[0].([]PromotionStatusHealthChecksPatch)[vs[1].(int)]
	}).(PromotionStatusHealthChecksPatchOutput)
}

// Status describes the current state of the transition represented by this
// Promotion.
type PromotionStatusPatch struct {
	// CurrentStep is the index of the current promotion step being executed. This
	// permits steps that have already run successfully to be skipped on
	// subsequent reconciliations attempts.
	CurrentStep *int `pulumi:"currentStep"`
	// FinishedAt is the time when the promotion was completed.
	FinishedAt        *string                                `pulumi:"finishedAt"`
	Freight           *PromotionStatusFreightPatch           `pulumi:"freight"`
	FreightCollection *PromotionStatusFreightCollectionPatch `pulumi:"freightCollection"`
	// HealthChecks contains the health check directives to be executed after
	// the Promotion has completed.
	HealthChecks []PromotionStatusHealthChecksPatch `pulumi:"healthChecks"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh *string `pulumi:"lastHandledRefresh"`
	// Message is a display message about the promotion, including any errors
	// preventing the Promotion controller from executing this Promotion.
	// i.e. If the Phase field has a value of Failed, this field can be expected
	// to explain why.
	Message *string `pulumi:"message"`
	// Phase describes where the Promotion currently is in its lifecycle.
	Phase *string `pulumi:"phase"`
	// State stores the state of the promotion process between reconciliation
	// attempts.
	State map[string]interface{} `pulumi:"state"`
	// StepExecutionMetadata tracks metadata pertaining to the execution
	// of individual promotion steps.
	StepExecutionMetadata []PromotionStatusStepExecutionMetadataPatch `pulumi:"stepExecutionMetadata"`
}

// PromotionStatusPatchInput is an input type that accepts PromotionStatusPatchArgs and PromotionStatusPatchOutput values.
// You can construct a concrete instance of `PromotionStatusPatchInput` via:
//
//	PromotionStatusPatchArgs{...}
type PromotionStatusPatchInput interface {
	pulumi.Input

	ToPromotionStatusPatchOutput() PromotionStatusPatchOutput
	ToPromotionStatusPatchOutputWithContext(context.Context) PromotionStatusPatchOutput
}

// Status describes the current state of the transition represented by this
// Promotion.
type PromotionStatusPatchArgs struct {
	// CurrentStep is the index of the current promotion step being executed. This
	// permits steps that have already run successfully to be skipped on
	// subsequent reconciliations attempts.
	CurrentStep pulumi.IntPtrInput `pulumi:"currentStep"`
	// FinishedAt is the time when the promotion was completed.
	FinishedAt        pulumi.StringPtrInput                         `pulumi:"finishedAt"`
	Freight           PromotionStatusFreightPatchPtrInput           `pulumi:"freight"`
	FreightCollection PromotionStatusFreightCollectionPatchPtrInput `pulumi:"freightCollection"`
	// HealthChecks contains the health check directives to be executed after
	// the Promotion has completed.
	HealthChecks PromotionStatusHealthChecksPatchArrayInput `pulumi:"healthChecks"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh pulumi.StringPtrInput `pulumi:"lastHandledRefresh"`
	// Message is a display message about the promotion, including any errors
	// preventing the Promotion controller from executing this Promotion.
	// i.e. If the Phase field has a value of Failed, this field can be expected
	// to explain why.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Phase describes where the Promotion currently is in its lifecycle.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// State stores the state of the promotion process between reconciliation
	// attempts.
	State pulumi.MapInput `pulumi:"state"`
	// StepExecutionMetadata tracks metadata pertaining to the execution
	// of individual promotion steps.
	StepExecutionMetadata PromotionStatusStepExecutionMetadataPatchArrayInput `pulumi:"stepExecutionMetadata"`
}

func (PromotionStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusPatch)(nil)).Elem()
}

func (i PromotionStatusPatchArgs) ToPromotionStatusPatchOutput() PromotionStatusPatchOutput {
	return i.ToPromotionStatusPatchOutputWithContext(context.Background())
}

func (i PromotionStatusPatchArgs) ToPromotionStatusPatchOutputWithContext(ctx context.Context) PromotionStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusPatchOutput)
}

func (i PromotionStatusPatchArgs) ToPromotionStatusPatchPtrOutput() PromotionStatusPatchPtrOutput {
	return i.ToPromotionStatusPatchPtrOutputWithContext(context.Background())
}

func (i PromotionStatusPatchArgs) ToPromotionStatusPatchPtrOutputWithContext(ctx context.Context) PromotionStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusPatchOutput).ToPromotionStatusPatchPtrOutputWithContext(ctx)
}

// PromotionStatusPatchPtrInput is an input type that accepts PromotionStatusPatchArgs, PromotionStatusPatchPtr and PromotionStatusPatchPtrOutput values.
// You can construct a concrete instance of `PromotionStatusPatchPtrInput` via:
//
//	        PromotionStatusPatchArgs{...}
//
//	or:
//
//	        nil
type PromotionStatusPatchPtrInput interface {
	pulumi.Input

	ToPromotionStatusPatchPtrOutput() PromotionStatusPatchPtrOutput
	ToPromotionStatusPatchPtrOutputWithContext(context.Context) PromotionStatusPatchPtrOutput
}

type promotionStatusPatchPtrType PromotionStatusPatchArgs

func PromotionStatusPatchPtr(v *PromotionStatusPatchArgs) PromotionStatusPatchPtrInput {
	return (*promotionStatusPatchPtrType)(v)
}

func (*promotionStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusPatch)(nil)).Elem()
}

func (i *promotionStatusPatchPtrType) ToPromotionStatusPatchPtrOutput() PromotionStatusPatchPtrOutput {
	return i.ToPromotionStatusPatchPtrOutputWithContext(context.Background())
}

func (i *promotionStatusPatchPtrType) ToPromotionStatusPatchPtrOutputWithContext(ctx context.Context) PromotionStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusPatchPtrOutput)
}

// Status describes the current state of the transition represented by this
// Promotion.
type PromotionStatusPatchOutput struct{ *pulumi.OutputState }

func (PromotionStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusPatch)(nil)).Elem()
}

func (o PromotionStatusPatchOutput) ToPromotionStatusPatchOutput() PromotionStatusPatchOutput {
	return o
}

func (o PromotionStatusPatchOutput) ToPromotionStatusPatchOutputWithContext(ctx context.Context) PromotionStatusPatchOutput {
	return o
}

func (o PromotionStatusPatchOutput) ToPromotionStatusPatchPtrOutput() PromotionStatusPatchPtrOutput {
	return o.ToPromotionStatusPatchPtrOutputWithContext(context.Background())
}

func (o PromotionStatusPatchOutput) ToPromotionStatusPatchPtrOutputWithContext(ctx context.Context) PromotionStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionStatusPatch) *PromotionStatusPatch {
		return &v
	}).(PromotionStatusPatchPtrOutput)
}

// CurrentStep is the index of the current promotion step being executed. This
// permits steps that have already run successfully to be skipped on
// subsequent reconciliations attempts.
func (o PromotionStatusPatchOutput) CurrentStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PromotionStatusPatch) *int { return v.CurrentStep }).(pulumi.IntPtrOutput)
}

// FinishedAt is the time when the promotion was completed.
func (o PromotionStatusPatchOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusPatch) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

func (o PromotionStatusPatchOutput) Freight() PromotionStatusFreightPatchPtrOutput {
	return o.ApplyT(func(v PromotionStatusPatch) *PromotionStatusFreightPatch { return v.Freight }).(PromotionStatusFreightPatchPtrOutput)
}

func (o PromotionStatusPatchOutput) FreightCollection() PromotionStatusFreightCollectionPatchPtrOutput {
	return o.ApplyT(func(v PromotionStatusPatch) *PromotionStatusFreightCollectionPatch { return v.FreightCollection }).(PromotionStatusFreightCollectionPatchPtrOutput)
}

// HealthChecks contains the health check directives to be executed after
// the Promotion has completed.
func (o PromotionStatusPatchOutput) HealthChecks() PromotionStatusHealthChecksPatchArrayOutput {
	return o.ApplyT(func(v PromotionStatusPatch) []PromotionStatusHealthChecksPatch { return v.HealthChecks }).(PromotionStatusHealthChecksPatchArrayOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o PromotionStatusPatchOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusPatch) *string { return v.LastHandledRefresh }).(pulumi.StringPtrOutput)
}

// Message is a display message about the promotion, including any errors
// preventing the Promotion controller from executing this Promotion.
// i.e. If the Phase field has a value of Failed, this field can be expected
// to explain why.
func (o PromotionStatusPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Phase describes where the Promotion currently is in its lifecycle.
func (o PromotionStatusPatchOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusPatch) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// State stores the state of the promotion process between reconciliation
// attempts.
func (o PromotionStatusPatchOutput) State() pulumi.MapOutput {
	return o.ApplyT(func(v PromotionStatusPatch) map[string]interface{} { return v.State }).(pulumi.MapOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution
// of individual promotion steps.
func (o PromotionStatusPatchOutput) StepExecutionMetadata() PromotionStatusStepExecutionMetadataPatchArrayOutput {
	return o.ApplyT(func(v PromotionStatusPatch) []PromotionStatusStepExecutionMetadataPatch {
		return v.StepExecutionMetadata
	}).(PromotionStatusStepExecutionMetadataPatchArrayOutput)
}

type PromotionStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (PromotionStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionStatusPatch)(nil)).Elem()
}

func (o PromotionStatusPatchPtrOutput) ToPromotionStatusPatchPtrOutput() PromotionStatusPatchPtrOutput {
	return o
}

func (o PromotionStatusPatchPtrOutput) ToPromotionStatusPatchPtrOutputWithContext(ctx context.Context) PromotionStatusPatchPtrOutput {
	return o
}

func (o PromotionStatusPatchPtrOutput) Elem() PromotionStatusPatchOutput {
	return o.ApplyT(func(v *PromotionStatusPatch) PromotionStatusPatch {
		if v != nil {
			return *v
		}
		var ret PromotionStatusPatch
		return ret
	}).(PromotionStatusPatchOutput)
}

// CurrentStep is the index of the current promotion step being executed. This
// permits steps that have already run successfully to be skipped on
// subsequent reconciliations attempts.
func (o PromotionStatusPatchPtrOutput) CurrentStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PromotionStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.CurrentStep
	}).(pulumi.IntPtrOutput)
}

// FinishedAt is the time when the promotion was completed.
func (o PromotionStatusPatchPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

func (o PromotionStatusPatchPtrOutput) Freight() PromotionStatusFreightPatchPtrOutput {
	return o.ApplyT(func(v *PromotionStatusPatch) *PromotionStatusFreightPatch {
		if v == nil {
			return nil
		}
		return v.Freight
	}).(PromotionStatusFreightPatchPtrOutput)
}

func (o PromotionStatusPatchPtrOutput) FreightCollection() PromotionStatusFreightCollectionPatchPtrOutput {
	return o.ApplyT(func(v *PromotionStatusPatch) *PromotionStatusFreightCollectionPatch {
		if v == nil {
			return nil
		}
		return v.FreightCollection
	}).(PromotionStatusFreightCollectionPatchPtrOutput)
}

// HealthChecks contains the health check directives to be executed after
// the Promotion has completed.
func (o PromotionStatusPatchPtrOutput) HealthChecks() PromotionStatusHealthChecksPatchArrayOutput {
	return o.ApplyT(func(v *PromotionStatusPatch) []PromotionStatusHealthChecksPatch {
		if v == nil {
			return nil
		}
		return v.HealthChecks
	}).(PromotionStatusHealthChecksPatchArrayOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o PromotionStatusPatchPtrOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.LastHandledRefresh
	}).(pulumi.StringPtrOutput)
}

// Message is a display message about the promotion, including any errors
// preventing the Promotion controller from executing this Promotion.
// i.e. If the Phase field has a value of Failed, this field can be expected
// to explain why.
func (o PromotionStatusPatchPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Phase describes where the Promotion currently is in its lifecycle.
func (o PromotionStatusPatchPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// State stores the state of the promotion process between reconciliation
// attempts.
func (o PromotionStatusPatchPtrOutput) State() pulumi.MapOutput {
	return o.ApplyT(func(v *PromotionStatusPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.MapOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution
// of individual promotion steps.
func (o PromotionStatusPatchPtrOutput) StepExecutionMetadata() PromotionStatusStepExecutionMetadataPatchArrayOutput {
	return o.ApplyT(func(v *PromotionStatusPatch) []PromotionStatusStepExecutionMetadataPatch {
		if v == nil {
			return nil
		}
		return v.StepExecutionMetadata
	}).(PromotionStatusStepExecutionMetadataPatchArrayOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type PromotionStatusStepExecutionMetadata struct {
	// Alias is the alias of the step.
	Alias *string `pulumi:"alias"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// ErrorCount tracks consecutive failed attempts to execute the step.
	ErrorCount *int `pulumi:"errorCount"`
	// FinishedAt is the time at which the final attempt to execute the step
	// completed.
	FinishedAt *string `pulumi:"finishedAt"`
	// Message is a display message about the step, including any errors.
	Message *string `pulumi:"message"`
	// StartedAt is the time at which the first attempt to execute the step
	// began.
	StartedAt *string `pulumi:"startedAt"`
	// Status is the high-level outcome of the step.
	Status *string `pulumi:"status"`
}

// PromotionStatusStepExecutionMetadataInput is an input type that accepts PromotionStatusStepExecutionMetadataArgs and PromotionStatusStepExecutionMetadataOutput values.
// You can construct a concrete instance of `PromotionStatusStepExecutionMetadataInput` via:
//
//	PromotionStatusStepExecutionMetadataArgs{...}
type PromotionStatusStepExecutionMetadataInput interface {
	pulumi.Input

	ToPromotionStatusStepExecutionMetadataOutput() PromotionStatusStepExecutionMetadataOutput
	ToPromotionStatusStepExecutionMetadataOutputWithContext(context.Context) PromotionStatusStepExecutionMetadataOutput
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type PromotionStatusStepExecutionMetadataArgs struct {
	// Alias is the alias of the step.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError pulumi.BoolPtrInput `pulumi:"continueOnError"`
	// ErrorCount tracks consecutive failed attempts to execute the step.
	ErrorCount pulumi.IntPtrInput `pulumi:"errorCount"`
	// FinishedAt is the time at which the final attempt to execute the step
	// completed.
	FinishedAt pulumi.StringPtrInput `pulumi:"finishedAt"`
	// Message is a display message about the step, including any errors.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// StartedAt is the time at which the first attempt to execute the step
	// began.
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
	// Status is the high-level outcome of the step.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PromotionStatusStepExecutionMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusStepExecutionMetadata)(nil)).Elem()
}

func (i PromotionStatusStepExecutionMetadataArgs) ToPromotionStatusStepExecutionMetadataOutput() PromotionStatusStepExecutionMetadataOutput {
	return i.ToPromotionStatusStepExecutionMetadataOutputWithContext(context.Background())
}

func (i PromotionStatusStepExecutionMetadataArgs) ToPromotionStatusStepExecutionMetadataOutputWithContext(ctx context.Context) PromotionStatusStepExecutionMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusStepExecutionMetadataOutput)
}

// PromotionStatusStepExecutionMetadataArrayInput is an input type that accepts PromotionStatusStepExecutionMetadataArray and PromotionStatusStepExecutionMetadataArrayOutput values.
// You can construct a concrete instance of `PromotionStatusStepExecutionMetadataArrayInput` via:
//
//	PromotionStatusStepExecutionMetadataArray{ PromotionStatusStepExecutionMetadataArgs{...} }
type PromotionStatusStepExecutionMetadataArrayInput interface {
	pulumi.Input

	ToPromotionStatusStepExecutionMetadataArrayOutput() PromotionStatusStepExecutionMetadataArrayOutput
	ToPromotionStatusStepExecutionMetadataArrayOutputWithContext(context.Context) PromotionStatusStepExecutionMetadataArrayOutput
}

type PromotionStatusStepExecutionMetadataArray []PromotionStatusStepExecutionMetadataInput

func (PromotionStatusStepExecutionMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusStepExecutionMetadata)(nil)).Elem()
}

func (i PromotionStatusStepExecutionMetadataArray) ToPromotionStatusStepExecutionMetadataArrayOutput() PromotionStatusStepExecutionMetadataArrayOutput {
	return i.ToPromotionStatusStepExecutionMetadataArrayOutputWithContext(context.Background())
}

func (i PromotionStatusStepExecutionMetadataArray) ToPromotionStatusStepExecutionMetadataArrayOutputWithContext(ctx context.Context) PromotionStatusStepExecutionMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusStepExecutionMetadataArrayOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type PromotionStatusStepExecutionMetadataOutput struct{ *pulumi.OutputState }

func (PromotionStatusStepExecutionMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusStepExecutionMetadata)(nil)).Elem()
}

func (o PromotionStatusStepExecutionMetadataOutput) ToPromotionStatusStepExecutionMetadataOutput() PromotionStatusStepExecutionMetadataOutput {
	return o
}

func (o PromotionStatusStepExecutionMetadataOutput) ToPromotionStatusStepExecutionMetadataOutputWithContext(ctx context.Context) PromotionStatusStepExecutionMetadataOutput {
	return o
}

// Alias is the alias of the step.
func (o PromotionStatusStepExecutionMetadataOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusStepExecutionMetadata) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// ContinueOnError is a boolean value that, if set to true, will cause the
// Promotion to continue executing the next step even if this step fails. It
// also will not permit this failure to impact the overall status of the
// Promotion.
func (o PromotionStatusStepExecutionMetadataOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PromotionStatusStepExecutionMetadata) *bool { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// ErrorCount tracks consecutive failed attempts to execute the step.
func (o PromotionStatusStepExecutionMetadataOutput) ErrorCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PromotionStatusStepExecutionMetadata) *int { return v.ErrorCount }).(pulumi.IntPtrOutput)
}

// FinishedAt is the time at which the final attempt to execute the step
// completed.
func (o PromotionStatusStepExecutionMetadataOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusStepExecutionMetadata) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

// Message is a display message about the step, including any errors.
func (o PromotionStatusStepExecutionMetadataOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusStepExecutionMetadata) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// StartedAt is the time at which the first attempt to execute the step
// began.
func (o PromotionStatusStepExecutionMetadataOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusStepExecutionMetadata) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

// Status is the high-level outcome of the step.
func (o PromotionStatusStepExecutionMetadataOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusStepExecutionMetadata) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PromotionStatusStepExecutionMetadataArrayOutput struct{ *pulumi.OutputState }

func (PromotionStatusStepExecutionMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusStepExecutionMetadata)(nil)).Elem()
}

func (o PromotionStatusStepExecutionMetadataArrayOutput) ToPromotionStatusStepExecutionMetadataArrayOutput() PromotionStatusStepExecutionMetadataArrayOutput {
	return o
}

func (o PromotionStatusStepExecutionMetadataArrayOutput) ToPromotionStatusStepExecutionMetadataArrayOutputWithContext(ctx context.Context) PromotionStatusStepExecutionMetadataArrayOutput {
	return o
}

func (o PromotionStatusStepExecutionMetadataArrayOutput) Index(i pulumi.IntInput) PromotionStatusStepExecutionMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionStatusStepExecutionMetadata {
		return vs[0].([]PromotionStatusStepExecutionMetadata)[vs[1].(int)]
	}).(PromotionStatusStepExecutionMetadataOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type PromotionStatusStepExecutionMetadataPatch struct {
	// Alias is the alias of the step.
	Alias *string `pulumi:"alias"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// ErrorCount tracks consecutive failed attempts to execute the step.
	ErrorCount *int `pulumi:"errorCount"`
	// FinishedAt is the time at which the final attempt to execute the step
	// completed.
	FinishedAt *string `pulumi:"finishedAt"`
	// Message is a display message about the step, including any errors.
	Message *string `pulumi:"message"`
	// StartedAt is the time at which the first attempt to execute the step
	// began.
	StartedAt *string `pulumi:"startedAt"`
	// Status is the high-level outcome of the step.
	Status *string `pulumi:"status"`
}

// PromotionStatusStepExecutionMetadataPatchInput is an input type that accepts PromotionStatusStepExecutionMetadataPatchArgs and PromotionStatusStepExecutionMetadataPatchOutput values.
// You can construct a concrete instance of `PromotionStatusStepExecutionMetadataPatchInput` via:
//
//	PromotionStatusStepExecutionMetadataPatchArgs{...}
type PromotionStatusStepExecutionMetadataPatchInput interface {
	pulumi.Input

	ToPromotionStatusStepExecutionMetadataPatchOutput() PromotionStatusStepExecutionMetadataPatchOutput
	ToPromotionStatusStepExecutionMetadataPatchOutputWithContext(context.Context) PromotionStatusStepExecutionMetadataPatchOutput
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type PromotionStatusStepExecutionMetadataPatchArgs struct {
	// Alias is the alias of the step.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError pulumi.BoolPtrInput `pulumi:"continueOnError"`
	// ErrorCount tracks consecutive failed attempts to execute the step.
	ErrorCount pulumi.IntPtrInput `pulumi:"errorCount"`
	// FinishedAt is the time at which the final attempt to execute the step
	// completed.
	FinishedAt pulumi.StringPtrInput `pulumi:"finishedAt"`
	// Message is a display message about the step, including any errors.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// StartedAt is the time at which the first attempt to execute the step
	// began.
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
	// Status is the high-level outcome of the step.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PromotionStatusStepExecutionMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusStepExecutionMetadataPatch)(nil)).Elem()
}

func (i PromotionStatusStepExecutionMetadataPatchArgs) ToPromotionStatusStepExecutionMetadataPatchOutput() PromotionStatusStepExecutionMetadataPatchOutput {
	return i.ToPromotionStatusStepExecutionMetadataPatchOutputWithContext(context.Background())
}

func (i PromotionStatusStepExecutionMetadataPatchArgs) ToPromotionStatusStepExecutionMetadataPatchOutputWithContext(ctx context.Context) PromotionStatusStepExecutionMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusStepExecutionMetadataPatchOutput)
}

// PromotionStatusStepExecutionMetadataPatchArrayInput is an input type that accepts PromotionStatusStepExecutionMetadataPatchArray and PromotionStatusStepExecutionMetadataPatchArrayOutput values.
// You can construct a concrete instance of `PromotionStatusStepExecutionMetadataPatchArrayInput` via:
//
//	PromotionStatusStepExecutionMetadataPatchArray{ PromotionStatusStepExecutionMetadataPatchArgs{...} }
type PromotionStatusStepExecutionMetadataPatchArrayInput interface {
	pulumi.Input

	ToPromotionStatusStepExecutionMetadataPatchArrayOutput() PromotionStatusStepExecutionMetadataPatchArrayOutput
	ToPromotionStatusStepExecutionMetadataPatchArrayOutputWithContext(context.Context) PromotionStatusStepExecutionMetadataPatchArrayOutput
}

type PromotionStatusStepExecutionMetadataPatchArray []PromotionStatusStepExecutionMetadataPatchInput

func (PromotionStatusStepExecutionMetadataPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusStepExecutionMetadataPatch)(nil)).Elem()
}

func (i PromotionStatusStepExecutionMetadataPatchArray) ToPromotionStatusStepExecutionMetadataPatchArrayOutput() PromotionStatusStepExecutionMetadataPatchArrayOutput {
	return i.ToPromotionStatusStepExecutionMetadataPatchArrayOutputWithContext(context.Background())
}

func (i PromotionStatusStepExecutionMetadataPatchArray) ToPromotionStatusStepExecutionMetadataPatchArrayOutputWithContext(ctx context.Context) PromotionStatusStepExecutionMetadataPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionStatusStepExecutionMetadataPatchArrayOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type PromotionStatusStepExecutionMetadataPatchOutput struct{ *pulumi.OutputState }

func (PromotionStatusStepExecutionMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionStatusStepExecutionMetadataPatch)(nil)).Elem()
}

func (o PromotionStatusStepExecutionMetadataPatchOutput) ToPromotionStatusStepExecutionMetadataPatchOutput() PromotionStatusStepExecutionMetadataPatchOutput {
	return o
}

func (o PromotionStatusStepExecutionMetadataPatchOutput) ToPromotionStatusStepExecutionMetadataPatchOutputWithContext(ctx context.Context) PromotionStatusStepExecutionMetadataPatchOutput {
	return o
}

// Alias is the alias of the step.
func (o PromotionStatusStepExecutionMetadataPatchOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusStepExecutionMetadataPatch) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// ContinueOnError is a boolean value that, if set to true, will cause the
// Promotion to continue executing the next step even if this step fails. It
// also will not permit this failure to impact the overall status of the
// Promotion.
func (o PromotionStatusStepExecutionMetadataPatchOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PromotionStatusStepExecutionMetadataPatch) *bool { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// ErrorCount tracks consecutive failed attempts to execute the step.
func (o PromotionStatusStepExecutionMetadataPatchOutput) ErrorCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PromotionStatusStepExecutionMetadataPatch) *int { return v.ErrorCount }).(pulumi.IntPtrOutput)
}

// FinishedAt is the time at which the final attempt to execute the step
// completed.
func (o PromotionStatusStepExecutionMetadataPatchOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusStepExecutionMetadataPatch) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

// Message is a display message about the step, including any errors.
func (o PromotionStatusStepExecutionMetadataPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusStepExecutionMetadataPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// StartedAt is the time at which the first attempt to execute the step
// began.
func (o PromotionStatusStepExecutionMetadataPatchOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusStepExecutionMetadataPatch) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

// Status is the high-level outcome of the step.
func (o PromotionStatusStepExecutionMetadataPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionStatusStepExecutionMetadataPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PromotionStatusStepExecutionMetadataPatchArrayOutput struct{ *pulumi.OutputState }

func (PromotionStatusStepExecutionMetadataPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionStatusStepExecutionMetadataPatch)(nil)).Elem()
}

func (o PromotionStatusStepExecutionMetadataPatchArrayOutput) ToPromotionStatusStepExecutionMetadataPatchArrayOutput() PromotionStatusStepExecutionMetadataPatchArrayOutput {
	return o
}

func (o PromotionStatusStepExecutionMetadataPatchArrayOutput) ToPromotionStatusStepExecutionMetadataPatchArrayOutputWithContext(ctx context.Context) PromotionStatusStepExecutionMetadataPatchArrayOutput {
	return o
}

func (o PromotionStatusStepExecutionMetadataPatchArrayOutput) Index(i pulumi.IntInput) PromotionStatusStepExecutionMetadataPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionStatusStepExecutionMetadataPatch {
		return vs[0].([]PromotionStatusStepExecutionMetadataPatch)[vs[1].(int)]
	}).(PromotionStatusStepExecutionMetadataPatchOutput)
}

type PromotionTaskType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *PromotionTaskSpec `pulumi:"spec"`
}

// PromotionTaskTypeInput is an input type that accepts PromotionTaskTypeArgs and PromotionTaskTypeOutput values.
// You can construct a concrete instance of `PromotionTaskTypeInput` via:
//
//	PromotionTaskTypeArgs{...}
type PromotionTaskTypeInput interface {
	pulumi.Input

	ToPromotionTaskTypeOutput() PromotionTaskTypeOutput
	ToPromotionTaskTypeOutputWithContext(context.Context) PromotionTaskTypeOutput
}

type PromotionTaskTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     PromotionTaskSpecPtrInput `pulumi:"spec"`
}

func (PromotionTaskTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskType)(nil)).Elem()
}

func (i PromotionTaskTypeArgs) ToPromotionTaskTypeOutput() PromotionTaskTypeOutput {
	return i.ToPromotionTaskTypeOutputWithContext(context.Background())
}

func (i PromotionTaskTypeArgs) ToPromotionTaskTypeOutputWithContext(ctx context.Context) PromotionTaskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskTypeOutput)
}

// PromotionTaskTypeArrayInput is an input type that accepts PromotionTaskTypeArray and PromotionTaskTypeArrayOutput values.
// You can construct a concrete instance of `PromotionTaskTypeArrayInput` via:
//
//	PromotionTaskTypeArray{ PromotionTaskTypeArgs{...} }
type PromotionTaskTypeArrayInput interface {
	pulumi.Input

	ToPromotionTaskTypeArrayOutput() PromotionTaskTypeArrayOutput
	ToPromotionTaskTypeArrayOutputWithContext(context.Context) PromotionTaskTypeArrayOutput
}

type PromotionTaskTypeArray []PromotionTaskTypeInput

func (PromotionTaskTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionTaskType)(nil)).Elem()
}

func (i PromotionTaskTypeArray) ToPromotionTaskTypeArrayOutput() PromotionTaskTypeArrayOutput {
	return i.ToPromotionTaskTypeArrayOutputWithContext(context.Background())
}

func (i PromotionTaskTypeArray) ToPromotionTaskTypeArrayOutputWithContext(ctx context.Context) PromotionTaskTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskTypeArrayOutput)
}

type PromotionTaskTypeOutput struct{ *pulumi.OutputState }

func (PromotionTaskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskType)(nil)).Elem()
}

func (o PromotionTaskTypeOutput) ToPromotionTaskTypeOutput() PromotionTaskTypeOutput {
	return o
}

func (o PromotionTaskTypeOutput) ToPromotionTaskTypeOutputWithContext(ctx context.Context) PromotionTaskTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PromotionTaskTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionTaskTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PromotionTaskTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v PromotionTaskType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o PromotionTaskTypeOutput) Spec() PromotionTaskSpecPtrOutput {
	return o.ApplyT(func(v PromotionTaskType) *PromotionTaskSpec { return v.Spec }).(PromotionTaskSpecPtrOutput)
}

type PromotionTaskTypeArrayOutput struct{ *pulumi.OutputState }

func (PromotionTaskTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionTaskType)(nil)).Elem()
}

func (o PromotionTaskTypeArrayOutput) ToPromotionTaskTypeArrayOutput() PromotionTaskTypeArrayOutput {
	return o
}

func (o PromotionTaskTypeArrayOutput) ToPromotionTaskTypeArrayOutputWithContext(ctx context.Context) PromotionTaskTypeArrayOutput {
	return o
}

func (o PromotionTaskTypeArrayOutput) Index(i pulumi.IntInput) PromotionTaskTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionTaskType {
		return vs[0].([]PromotionTaskType)[vs[1].(int)]
	}).(PromotionTaskTypeOutput)
}

// PromotionTaskList is a list of PromotionTask
type PromotionTaskListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of promotiontasks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PromotionTaskType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// PromotionTaskListTypeInput is an input type that accepts PromotionTaskListTypeArgs and PromotionTaskListTypeOutput values.
// You can construct a concrete instance of `PromotionTaskListTypeInput` via:
//
//	PromotionTaskListTypeArgs{...}
type PromotionTaskListTypeInput interface {
	pulumi.Input

	ToPromotionTaskListTypeOutput() PromotionTaskListTypeOutput
	ToPromotionTaskListTypeOutputWithContext(context.Context) PromotionTaskListTypeOutput
}

// PromotionTaskList is a list of PromotionTask
type PromotionTaskListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of promotiontasks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PromotionTaskTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (PromotionTaskListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskListType)(nil)).Elem()
}

func (i PromotionTaskListTypeArgs) ToPromotionTaskListTypeOutput() PromotionTaskListTypeOutput {
	return i.ToPromotionTaskListTypeOutputWithContext(context.Background())
}

func (i PromotionTaskListTypeArgs) ToPromotionTaskListTypeOutputWithContext(ctx context.Context) PromotionTaskListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskListTypeOutput)
}

// PromotionTaskList is a list of PromotionTask
type PromotionTaskListTypeOutput struct{ *pulumi.OutputState }

func (PromotionTaskListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskListType)(nil)).Elem()
}

func (o PromotionTaskListTypeOutput) ToPromotionTaskListTypeOutput() PromotionTaskListTypeOutput {
	return o
}

func (o PromotionTaskListTypeOutput) ToPromotionTaskListTypeOutputWithContext(ctx context.Context) PromotionTaskListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PromotionTaskListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of promotiontasks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PromotionTaskListTypeOutput) Items() PromotionTaskTypeArrayOutput {
	return o.ApplyT(func(v PromotionTaskListType) []PromotionTaskType { return v.Items }).(PromotionTaskTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionTaskListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionTaskListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v PromotionTaskListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type PromotionTaskPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *PromotionTaskSpecPatch `pulumi:"spec"`
}

// PromotionTaskPatchTypeInput is an input type that accepts PromotionTaskPatchTypeArgs and PromotionTaskPatchTypeOutput values.
// You can construct a concrete instance of `PromotionTaskPatchTypeInput` via:
//
//	PromotionTaskPatchTypeArgs{...}
type PromotionTaskPatchTypeInput interface {
	pulumi.Input

	ToPromotionTaskPatchTypeOutput() PromotionTaskPatchTypeOutput
	ToPromotionTaskPatchTypeOutputWithContext(context.Context) PromotionTaskPatchTypeOutput
}

type PromotionTaskPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     PromotionTaskSpecPatchPtrInput `pulumi:"spec"`
}

func (PromotionTaskPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskPatchType)(nil)).Elem()
}

func (i PromotionTaskPatchTypeArgs) ToPromotionTaskPatchTypeOutput() PromotionTaskPatchTypeOutput {
	return i.ToPromotionTaskPatchTypeOutputWithContext(context.Background())
}

func (i PromotionTaskPatchTypeArgs) ToPromotionTaskPatchTypeOutputWithContext(ctx context.Context) PromotionTaskPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskPatchTypeOutput)
}

type PromotionTaskPatchTypeOutput struct{ *pulumi.OutputState }

func (PromotionTaskPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskPatchType)(nil)).Elem()
}

func (o PromotionTaskPatchTypeOutput) ToPromotionTaskPatchTypeOutput() PromotionTaskPatchTypeOutput {
	return o
}

func (o PromotionTaskPatchTypeOutput) ToPromotionTaskPatchTypeOutputWithContext(ctx context.Context) PromotionTaskPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PromotionTaskPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionTaskPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PromotionTaskPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v PromotionTaskPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o PromotionTaskPatchTypeOutput) Spec() PromotionTaskSpecPatchPtrOutput {
	return o.ApplyT(func(v PromotionTaskPatchType) *PromotionTaskSpecPatch { return v.Spec }).(PromotionTaskSpecPatchPtrOutput)
}

// Spec describes the composition of a PromotionTask, including the
// variables available to the task and the steps.
type PromotionTaskSpec struct {
	// Steps specifies the directives to be executed as part of this
	// PromotionTask. The steps as defined here are inflated into a
	// Promotion when it is built from a PromotionTemplate.
	Steps []PromotionTaskSpecSteps `pulumi:"steps"`
	// Vars specifies the variables available to the PromotionTask. The
	// values of these variables are the default values that can be
	// overridden by the step referencing the task.
	Vars []PromotionTaskSpecVars `pulumi:"vars"`
}

// PromotionTaskSpecInput is an input type that accepts PromotionTaskSpecArgs and PromotionTaskSpecOutput values.
// You can construct a concrete instance of `PromotionTaskSpecInput` via:
//
//	PromotionTaskSpecArgs{...}
type PromotionTaskSpecInput interface {
	pulumi.Input

	ToPromotionTaskSpecOutput() PromotionTaskSpecOutput
	ToPromotionTaskSpecOutputWithContext(context.Context) PromotionTaskSpecOutput
}

// Spec describes the composition of a PromotionTask, including the
// variables available to the task and the steps.
type PromotionTaskSpecArgs struct {
	// Steps specifies the directives to be executed as part of this
	// PromotionTask. The steps as defined here are inflated into a
	// Promotion when it is built from a PromotionTemplate.
	Steps PromotionTaskSpecStepsArrayInput `pulumi:"steps"`
	// Vars specifies the variables available to the PromotionTask. The
	// values of these variables are the default values that can be
	// overridden by the step referencing the task.
	Vars PromotionTaskSpecVarsArrayInput `pulumi:"vars"`
}

func (PromotionTaskSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpec)(nil)).Elem()
}

func (i PromotionTaskSpecArgs) ToPromotionTaskSpecOutput() PromotionTaskSpecOutput {
	return i.ToPromotionTaskSpecOutputWithContext(context.Background())
}

func (i PromotionTaskSpecArgs) ToPromotionTaskSpecOutputWithContext(ctx context.Context) PromotionTaskSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecOutput)
}

func (i PromotionTaskSpecArgs) ToPromotionTaskSpecPtrOutput() PromotionTaskSpecPtrOutput {
	return i.ToPromotionTaskSpecPtrOutputWithContext(context.Background())
}

func (i PromotionTaskSpecArgs) ToPromotionTaskSpecPtrOutputWithContext(ctx context.Context) PromotionTaskSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecOutput).ToPromotionTaskSpecPtrOutputWithContext(ctx)
}

// PromotionTaskSpecPtrInput is an input type that accepts PromotionTaskSpecArgs, PromotionTaskSpecPtr and PromotionTaskSpecPtrOutput values.
// You can construct a concrete instance of `PromotionTaskSpecPtrInput` via:
//
//	        PromotionTaskSpecArgs{...}
//
//	or:
//
//	        nil
type PromotionTaskSpecPtrInput interface {
	pulumi.Input

	ToPromotionTaskSpecPtrOutput() PromotionTaskSpecPtrOutput
	ToPromotionTaskSpecPtrOutputWithContext(context.Context) PromotionTaskSpecPtrOutput
}

type promotionTaskSpecPtrType PromotionTaskSpecArgs

func PromotionTaskSpecPtr(v *PromotionTaskSpecArgs) PromotionTaskSpecPtrInput {
	return (*promotionTaskSpecPtrType)(v)
}

func (*promotionTaskSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskSpec)(nil)).Elem()
}

func (i *promotionTaskSpecPtrType) ToPromotionTaskSpecPtrOutput() PromotionTaskSpecPtrOutput {
	return i.ToPromotionTaskSpecPtrOutputWithContext(context.Background())
}

func (i *promotionTaskSpecPtrType) ToPromotionTaskSpecPtrOutputWithContext(ctx context.Context) PromotionTaskSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecPtrOutput)
}

// Spec describes the composition of a PromotionTask, including the
// variables available to the task and the steps.
type PromotionTaskSpecOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpec)(nil)).Elem()
}

func (o PromotionTaskSpecOutput) ToPromotionTaskSpecOutput() PromotionTaskSpecOutput {
	return o
}

func (o PromotionTaskSpecOutput) ToPromotionTaskSpecOutputWithContext(ctx context.Context) PromotionTaskSpecOutput {
	return o
}

func (o PromotionTaskSpecOutput) ToPromotionTaskSpecPtrOutput() PromotionTaskSpecPtrOutput {
	return o.ToPromotionTaskSpecPtrOutputWithContext(context.Background())
}

func (o PromotionTaskSpecOutput) ToPromotionTaskSpecPtrOutputWithContext(ctx context.Context) PromotionTaskSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionTaskSpec) *PromotionTaskSpec {
		return &v
	}).(PromotionTaskSpecPtrOutput)
}

// Steps specifies the directives to be executed as part of this
// PromotionTask. The steps as defined here are inflated into a
// Promotion when it is built from a PromotionTemplate.
func (o PromotionTaskSpecOutput) Steps() PromotionTaskSpecStepsArrayOutput {
	return o.ApplyT(func(v PromotionTaskSpec) []PromotionTaskSpecSteps { return v.Steps }).(PromotionTaskSpecStepsArrayOutput)
}

// Vars specifies the variables available to the PromotionTask. The
// values of these variables are the default values that can be
// overridden by the step referencing the task.
func (o PromotionTaskSpecOutput) Vars() PromotionTaskSpecVarsArrayOutput {
	return o.ApplyT(func(v PromotionTaskSpec) []PromotionTaskSpecVars { return v.Vars }).(PromotionTaskSpecVarsArrayOutput)
}

type PromotionTaskSpecPtrOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskSpec)(nil)).Elem()
}

func (o PromotionTaskSpecPtrOutput) ToPromotionTaskSpecPtrOutput() PromotionTaskSpecPtrOutput {
	return o
}

func (o PromotionTaskSpecPtrOutput) ToPromotionTaskSpecPtrOutputWithContext(ctx context.Context) PromotionTaskSpecPtrOutput {
	return o
}

func (o PromotionTaskSpecPtrOutput) Elem() PromotionTaskSpecOutput {
	return o.ApplyT(func(v *PromotionTaskSpec) PromotionTaskSpec {
		if v != nil {
			return *v
		}
		var ret PromotionTaskSpec
		return ret
	}).(PromotionTaskSpecOutput)
}

// Steps specifies the directives to be executed as part of this
// PromotionTask. The steps as defined here are inflated into a
// Promotion when it is built from a PromotionTemplate.
func (o PromotionTaskSpecPtrOutput) Steps() PromotionTaskSpecStepsArrayOutput {
	return o.ApplyT(func(v *PromotionTaskSpec) []PromotionTaskSpecSteps {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(PromotionTaskSpecStepsArrayOutput)
}

// Vars specifies the variables available to the PromotionTask. The
// values of these variables are the default values that can be
// overridden by the step referencing the task.
func (o PromotionTaskSpecPtrOutput) Vars() PromotionTaskSpecVarsArrayOutput {
	return o.ApplyT(func(v *PromotionTaskSpec) []PromotionTaskSpecVars {
		if v == nil {
			return nil
		}
		return v.Vars
	}).(PromotionTaskSpecVarsArrayOutput)
}

// Spec describes the composition of a PromotionTask, including the
// variables available to the task and the steps.
type PromotionTaskSpecPatch struct {
	// Steps specifies the directives to be executed as part of this
	// PromotionTask. The steps as defined here are inflated into a
	// Promotion when it is built from a PromotionTemplate.
	Steps []PromotionTaskSpecStepsPatch `pulumi:"steps"`
	// Vars specifies the variables available to the PromotionTask. The
	// values of these variables are the default values that can be
	// overridden by the step referencing the task.
	Vars []PromotionTaskSpecVarsPatch `pulumi:"vars"`
}

// PromotionTaskSpecPatchInput is an input type that accepts PromotionTaskSpecPatchArgs and PromotionTaskSpecPatchOutput values.
// You can construct a concrete instance of `PromotionTaskSpecPatchInput` via:
//
//	PromotionTaskSpecPatchArgs{...}
type PromotionTaskSpecPatchInput interface {
	pulumi.Input

	ToPromotionTaskSpecPatchOutput() PromotionTaskSpecPatchOutput
	ToPromotionTaskSpecPatchOutputWithContext(context.Context) PromotionTaskSpecPatchOutput
}

// Spec describes the composition of a PromotionTask, including the
// variables available to the task and the steps.
type PromotionTaskSpecPatchArgs struct {
	// Steps specifies the directives to be executed as part of this
	// PromotionTask. The steps as defined here are inflated into a
	// Promotion when it is built from a PromotionTemplate.
	Steps PromotionTaskSpecStepsPatchArrayInput `pulumi:"steps"`
	// Vars specifies the variables available to the PromotionTask. The
	// values of these variables are the default values that can be
	// overridden by the step referencing the task.
	Vars PromotionTaskSpecVarsPatchArrayInput `pulumi:"vars"`
}

func (PromotionTaskSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecPatch)(nil)).Elem()
}

func (i PromotionTaskSpecPatchArgs) ToPromotionTaskSpecPatchOutput() PromotionTaskSpecPatchOutput {
	return i.ToPromotionTaskSpecPatchOutputWithContext(context.Background())
}

func (i PromotionTaskSpecPatchArgs) ToPromotionTaskSpecPatchOutputWithContext(ctx context.Context) PromotionTaskSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecPatchOutput)
}

func (i PromotionTaskSpecPatchArgs) ToPromotionTaskSpecPatchPtrOutput() PromotionTaskSpecPatchPtrOutput {
	return i.ToPromotionTaskSpecPatchPtrOutputWithContext(context.Background())
}

func (i PromotionTaskSpecPatchArgs) ToPromotionTaskSpecPatchPtrOutputWithContext(ctx context.Context) PromotionTaskSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecPatchOutput).ToPromotionTaskSpecPatchPtrOutputWithContext(ctx)
}

// PromotionTaskSpecPatchPtrInput is an input type that accepts PromotionTaskSpecPatchArgs, PromotionTaskSpecPatchPtr and PromotionTaskSpecPatchPtrOutput values.
// You can construct a concrete instance of `PromotionTaskSpecPatchPtrInput` via:
//
//	        PromotionTaskSpecPatchArgs{...}
//
//	or:
//
//	        nil
type PromotionTaskSpecPatchPtrInput interface {
	pulumi.Input

	ToPromotionTaskSpecPatchPtrOutput() PromotionTaskSpecPatchPtrOutput
	ToPromotionTaskSpecPatchPtrOutputWithContext(context.Context) PromotionTaskSpecPatchPtrOutput
}

type promotionTaskSpecPatchPtrType PromotionTaskSpecPatchArgs

func PromotionTaskSpecPatchPtr(v *PromotionTaskSpecPatchArgs) PromotionTaskSpecPatchPtrInput {
	return (*promotionTaskSpecPatchPtrType)(v)
}

func (*promotionTaskSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskSpecPatch)(nil)).Elem()
}

func (i *promotionTaskSpecPatchPtrType) ToPromotionTaskSpecPatchPtrOutput() PromotionTaskSpecPatchPtrOutput {
	return i.ToPromotionTaskSpecPatchPtrOutputWithContext(context.Background())
}

func (i *promotionTaskSpecPatchPtrType) ToPromotionTaskSpecPatchPtrOutputWithContext(ctx context.Context) PromotionTaskSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecPatchPtrOutput)
}

// Spec describes the composition of a PromotionTask, including the
// variables available to the task and the steps.
type PromotionTaskSpecPatchOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecPatch)(nil)).Elem()
}

func (o PromotionTaskSpecPatchOutput) ToPromotionTaskSpecPatchOutput() PromotionTaskSpecPatchOutput {
	return o
}

func (o PromotionTaskSpecPatchOutput) ToPromotionTaskSpecPatchOutputWithContext(ctx context.Context) PromotionTaskSpecPatchOutput {
	return o
}

func (o PromotionTaskSpecPatchOutput) ToPromotionTaskSpecPatchPtrOutput() PromotionTaskSpecPatchPtrOutput {
	return o.ToPromotionTaskSpecPatchPtrOutputWithContext(context.Background())
}

func (o PromotionTaskSpecPatchOutput) ToPromotionTaskSpecPatchPtrOutputWithContext(ctx context.Context) PromotionTaskSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionTaskSpecPatch) *PromotionTaskSpecPatch {
		return &v
	}).(PromotionTaskSpecPatchPtrOutput)
}

// Steps specifies the directives to be executed as part of this
// PromotionTask. The steps as defined here are inflated into a
// Promotion when it is built from a PromotionTemplate.
func (o PromotionTaskSpecPatchOutput) Steps() PromotionTaskSpecStepsPatchArrayOutput {
	return o.ApplyT(func(v PromotionTaskSpecPatch) []PromotionTaskSpecStepsPatch { return v.Steps }).(PromotionTaskSpecStepsPatchArrayOutput)
}

// Vars specifies the variables available to the PromotionTask. The
// values of these variables are the default values that can be
// overridden by the step referencing the task.
func (o PromotionTaskSpecPatchOutput) Vars() PromotionTaskSpecVarsPatchArrayOutput {
	return o.ApplyT(func(v PromotionTaskSpecPatch) []PromotionTaskSpecVarsPatch { return v.Vars }).(PromotionTaskSpecVarsPatchArrayOutput)
}

type PromotionTaskSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskSpecPatch)(nil)).Elem()
}

func (o PromotionTaskSpecPatchPtrOutput) ToPromotionTaskSpecPatchPtrOutput() PromotionTaskSpecPatchPtrOutput {
	return o
}

func (o PromotionTaskSpecPatchPtrOutput) ToPromotionTaskSpecPatchPtrOutputWithContext(ctx context.Context) PromotionTaskSpecPatchPtrOutput {
	return o
}

func (o PromotionTaskSpecPatchPtrOutput) Elem() PromotionTaskSpecPatchOutput {
	return o.ApplyT(func(v *PromotionTaskSpecPatch) PromotionTaskSpecPatch {
		if v != nil {
			return *v
		}
		var ret PromotionTaskSpecPatch
		return ret
	}).(PromotionTaskSpecPatchOutput)
}

// Steps specifies the directives to be executed as part of this
// PromotionTask. The steps as defined here are inflated into a
// Promotion when it is built from a PromotionTemplate.
func (o PromotionTaskSpecPatchPtrOutput) Steps() PromotionTaskSpecStepsPatchArrayOutput {
	return o.ApplyT(func(v *PromotionTaskSpecPatch) []PromotionTaskSpecStepsPatch {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(PromotionTaskSpecStepsPatchArrayOutput)
}

// Vars specifies the variables available to the PromotionTask. The
// values of these variables are the default values that can be
// overridden by the step referencing the task.
func (o PromotionTaskSpecPatchPtrOutput) Vars() PromotionTaskSpecVarsPatchArrayOutput {
	return o.ApplyT(func(v *PromotionTaskSpecPatch) []PromotionTaskSpecVarsPatch {
		if v == nil {
			return nil
		}
		return v.Vars
	}).(PromotionTaskSpecVarsPatchArrayOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type PromotionTaskSpecSteps struct {
	// As is the alias this step can be referred to as.
	As *string `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config map[string]interface{} `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    *string                      `pulumi:"if"`
	Retry *PromotionTaskSpecStepsRetry `pulumi:"retry"`
	Task  *PromotionTaskSpecStepsTask  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses *string `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars []PromotionTaskSpecStepsVars `pulumi:"vars"`
}

// PromotionTaskSpecStepsInput is an input type that accepts PromotionTaskSpecStepsArgs and PromotionTaskSpecStepsOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsInput` via:
//
//	PromotionTaskSpecStepsArgs{...}
type PromotionTaskSpecStepsInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsOutput() PromotionTaskSpecStepsOutput
	ToPromotionTaskSpecStepsOutputWithContext(context.Context) PromotionTaskSpecStepsOutput
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type PromotionTaskSpecStepsArgs struct {
	// As is the alias this step can be referred to as.
	As pulumi.StringPtrInput `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config pulumi.MapInput `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError pulumi.BoolPtrInput `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    pulumi.StringPtrInput               `pulumi:"if"`
	Retry PromotionTaskSpecStepsRetryPtrInput `pulumi:"retry"`
	Task  PromotionTaskSpecStepsTaskPtrInput  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses pulumi.StringPtrInput `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars PromotionTaskSpecStepsVarsArrayInput `pulumi:"vars"`
}

func (PromotionTaskSpecStepsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecSteps)(nil)).Elem()
}

func (i PromotionTaskSpecStepsArgs) ToPromotionTaskSpecStepsOutput() PromotionTaskSpecStepsOutput {
	return i.ToPromotionTaskSpecStepsOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsArgs) ToPromotionTaskSpecStepsOutputWithContext(ctx context.Context) PromotionTaskSpecStepsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsOutput)
}

// PromotionTaskSpecStepsArrayInput is an input type that accepts PromotionTaskSpecStepsArray and PromotionTaskSpecStepsArrayOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsArrayInput` via:
//
//	PromotionTaskSpecStepsArray{ PromotionTaskSpecStepsArgs{...} }
type PromotionTaskSpecStepsArrayInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsArrayOutput() PromotionTaskSpecStepsArrayOutput
	ToPromotionTaskSpecStepsArrayOutputWithContext(context.Context) PromotionTaskSpecStepsArrayOutput
}

type PromotionTaskSpecStepsArray []PromotionTaskSpecStepsInput

func (PromotionTaskSpecStepsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionTaskSpecSteps)(nil)).Elem()
}

func (i PromotionTaskSpecStepsArray) ToPromotionTaskSpecStepsArrayOutput() PromotionTaskSpecStepsArrayOutput {
	return i.ToPromotionTaskSpecStepsArrayOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsArray) ToPromotionTaskSpecStepsArrayOutputWithContext(ctx context.Context) PromotionTaskSpecStepsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsArrayOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type PromotionTaskSpecStepsOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecSteps)(nil)).Elem()
}

func (o PromotionTaskSpecStepsOutput) ToPromotionTaskSpecStepsOutput() PromotionTaskSpecStepsOutput {
	return o
}

func (o PromotionTaskSpecStepsOutput) ToPromotionTaskSpecStepsOutputWithContext(ctx context.Context) PromotionTaskSpecStepsOutput {
	return o
}

// As is the alias this step can be referred to as.
func (o PromotionTaskSpecStepsOutput) As() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecSteps) *string { return v.As }).(pulumi.StringPtrOutput)
}

// Config is opaque configuration for the PromotionStep that is understood
// only by each PromotionStep's implementation. It is legal to utilize
// expressions in defining values at any level of this block.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o PromotionTaskSpecStepsOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v PromotionTaskSpecSteps) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// ContinueOnError is a boolean value that, if set to true, will cause the
// Promotion to continue executing the next step even if this step fails. It
// also will not permit this failure to impact the overall status of the
// Promotion.
func (o PromotionTaskSpecStepsOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecSteps) *bool { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// If is an optional expression that, if present, must evaluate to a boolean
// value. If the expression evaluates to false, the step will be skipped.
// If the expression does not evaluate to a boolean value, the step will be
// considered to have failed.
func (o PromotionTaskSpecStepsOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecSteps) *string { return v.If }).(pulumi.StringPtrOutput)
}

func (o PromotionTaskSpecStepsOutput) Retry() PromotionTaskSpecStepsRetryPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecSteps) *PromotionTaskSpecStepsRetry { return v.Retry }).(PromotionTaskSpecStepsRetryPtrOutput)
}

func (o PromotionTaskSpecStepsOutput) Task() PromotionTaskSpecStepsTaskPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecSteps) *PromotionTaskSpecStepsTask { return v.Task }).(PromotionTaskSpecStepsTaskPtrOutput)
}

// Uses identifies a runner that can execute this step.
func (o PromotionTaskSpecStepsOutput) Uses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecSteps) *string { return v.Uses }).(pulumi.StringPtrOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// the step's Config. The values override the values specified in the
// PromotionSpec.
func (o PromotionTaskSpecStepsOutput) Vars() PromotionTaskSpecStepsVarsArrayOutput {
	return o.ApplyT(func(v PromotionTaskSpecSteps) []PromotionTaskSpecStepsVars { return v.Vars }).(PromotionTaskSpecStepsVarsArrayOutput)
}

type PromotionTaskSpecStepsArrayOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionTaskSpecSteps)(nil)).Elem()
}

func (o PromotionTaskSpecStepsArrayOutput) ToPromotionTaskSpecStepsArrayOutput() PromotionTaskSpecStepsArrayOutput {
	return o
}

func (o PromotionTaskSpecStepsArrayOutput) ToPromotionTaskSpecStepsArrayOutputWithContext(ctx context.Context) PromotionTaskSpecStepsArrayOutput {
	return o
}

func (o PromotionTaskSpecStepsArrayOutput) Index(i pulumi.IntInput) PromotionTaskSpecStepsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionTaskSpecSteps {
		return vs[0].([]PromotionTaskSpecSteps)[vs[1].(int)]
	}).(PromotionTaskSpecStepsOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type PromotionTaskSpecStepsPatch struct {
	// As is the alias this step can be referred to as.
	As *string `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config map[string]interface{} `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    *string                           `pulumi:"if"`
	Retry *PromotionTaskSpecStepsRetryPatch `pulumi:"retry"`
	Task  *PromotionTaskSpecStepsTaskPatch  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses *string `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars []PromotionTaskSpecStepsVarsPatch `pulumi:"vars"`
}

// PromotionTaskSpecStepsPatchInput is an input type that accepts PromotionTaskSpecStepsPatchArgs and PromotionTaskSpecStepsPatchOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsPatchInput` via:
//
//	PromotionTaskSpecStepsPatchArgs{...}
type PromotionTaskSpecStepsPatchInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsPatchOutput() PromotionTaskSpecStepsPatchOutput
	ToPromotionTaskSpecStepsPatchOutputWithContext(context.Context) PromotionTaskSpecStepsPatchOutput
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type PromotionTaskSpecStepsPatchArgs struct {
	// As is the alias this step can be referred to as.
	As pulumi.StringPtrInput `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config pulumi.MapInput `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError pulumi.BoolPtrInput `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    pulumi.StringPtrInput                    `pulumi:"if"`
	Retry PromotionTaskSpecStepsRetryPatchPtrInput `pulumi:"retry"`
	Task  PromotionTaskSpecStepsTaskPatchPtrInput  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses pulumi.StringPtrInput `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars PromotionTaskSpecStepsVarsPatchArrayInput `pulumi:"vars"`
}

func (PromotionTaskSpecStepsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecStepsPatch)(nil)).Elem()
}

func (i PromotionTaskSpecStepsPatchArgs) ToPromotionTaskSpecStepsPatchOutput() PromotionTaskSpecStepsPatchOutput {
	return i.ToPromotionTaskSpecStepsPatchOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsPatchArgs) ToPromotionTaskSpecStepsPatchOutputWithContext(ctx context.Context) PromotionTaskSpecStepsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsPatchOutput)
}

// PromotionTaskSpecStepsPatchArrayInput is an input type that accepts PromotionTaskSpecStepsPatchArray and PromotionTaskSpecStepsPatchArrayOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsPatchArrayInput` via:
//
//	PromotionTaskSpecStepsPatchArray{ PromotionTaskSpecStepsPatchArgs{...} }
type PromotionTaskSpecStepsPatchArrayInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsPatchArrayOutput() PromotionTaskSpecStepsPatchArrayOutput
	ToPromotionTaskSpecStepsPatchArrayOutputWithContext(context.Context) PromotionTaskSpecStepsPatchArrayOutput
}

type PromotionTaskSpecStepsPatchArray []PromotionTaskSpecStepsPatchInput

func (PromotionTaskSpecStepsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionTaskSpecStepsPatch)(nil)).Elem()
}

func (i PromotionTaskSpecStepsPatchArray) ToPromotionTaskSpecStepsPatchArrayOutput() PromotionTaskSpecStepsPatchArrayOutput {
	return i.ToPromotionTaskSpecStepsPatchArrayOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsPatchArray) ToPromotionTaskSpecStepsPatchArrayOutputWithContext(ctx context.Context) PromotionTaskSpecStepsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsPatchArrayOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type PromotionTaskSpecStepsPatchOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecStepsPatch)(nil)).Elem()
}

func (o PromotionTaskSpecStepsPatchOutput) ToPromotionTaskSpecStepsPatchOutput() PromotionTaskSpecStepsPatchOutput {
	return o
}

func (o PromotionTaskSpecStepsPatchOutput) ToPromotionTaskSpecStepsPatchOutputWithContext(ctx context.Context) PromotionTaskSpecStepsPatchOutput {
	return o
}

// As is the alias this step can be referred to as.
func (o PromotionTaskSpecStepsPatchOutput) As() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsPatch) *string { return v.As }).(pulumi.StringPtrOutput)
}

// Config is opaque configuration for the PromotionStep that is understood
// only by each PromotionStep's implementation. It is legal to utilize
// expressions in defining values at any level of this block.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o PromotionTaskSpecStepsPatchOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsPatch) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// ContinueOnError is a boolean value that, if set to true, will cause the
// Promotion to continue executing the next step even if this step fails. It
// also will not permit this failure to impact the overall status of the
// Promotion.
func (o PromotionTaskSpecStepsPatchOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsPatch) *bool { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// If is an optional expression that, if present, must evaluate to a boolean
// value. If the expression evaluates to false, the step will be skipped.
// If the expression does not evaluate to a boolean value, the step will be
// considered to have failed.
func (o PromotionTaskSpecStepsPatchOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsPatch) *string { return v.If }).(pulumi.StringPtrOutput)
}

func (o PromotionTaskSpecStepsPatchOutput) Retry() PromotionTaskSpecStepsRetryPatchPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsPatch) *PromotionTaskSpecStepsRetryPatch { return v.Retry }).(PromotionTaskSpecStepsRetryPatchPtrOutput)
}

func (o PromotionTaskSpecStepsPatchOutput) Task() PromotionTaskSpecStepsTaskPatchPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsPatch) *PromotionTaskSpecStepsTaskPatch { return v.Task }).(PromotionTaskSpecStepsTaskPatchPtrOutput)
}

// Uses identifies a runner that can execute this step.
func (o PromotionTaskSpecStepsPatchOutput) Uses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsPatch) *string { return v.Uses }).(pulumi.StringPtrOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// the step's Config. The values override the values specified in the
// PromotionSpec.
func (o PromotionTaskSpecStepsPatchOutput) Vars() PromotionTaskSpecStepsVarsPatchArrayOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsPatch) []PromotionTaskSpecStepsVarsPatch { return v.Vars }).(PromotionTaskSpecStepsVarsPatchArrayOutput)
}

type PromotionTaskSpecStepsPatchArrayOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionTaskSpecStepsPatch)(nil)).Elem()
}

func (o PromotionTaskSpecStepsPatchArrayOutput) ToPromotionTaskSpecStepsPatchArrayOutput() PromotionTaskSpecStepsPatchArrayOutput {
	return o
}

func (o PromotionTaskSpecStepsPatchArrayOutput) ToPromotionTaskSpecStepsPatchArrayOutputWithContext(ctx context.Context) PromotionTaskSpecStepsPatchArrayOutput {
	return o
}

func (o PromotionTaskSpecStepsPatchArrayOutput) Index(i pulumi.IntInput) PromotionTaskSpecStepsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionTaskSpecStepsPatch {
		return vs[0].([]PromotionTaskSpecStepsPatch)[vs[1].(int)]
	}).(PromotionTaskSpecStepsPatchOutput)
}

// Retry is the retry policy for this step.
type PromotionTaskSpecStepsRetry struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold *int `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout *string `pulumi:"timeout"`
}

// PromotionTaskSpecStepsRetryInput is an input type that accepts PromotionTaskSpecStepsRetryArgs and PromotionTaskSpecStepsRetryOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsRetryInput` via:
//
//	PromotionTaskSpecStepsRetryArgs{...}
type PromotionTaskSpecStepsRetryInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsRetryOutput() PromotionTaskSpecStepsRetryOutput
	ToPromotionTaskSpecStepsRetryOutputWithContext(context.Context) PromotionTaskSpecStepsRetryOutput
}

// Retry is the retry policy for this step.
type PromotionTaskSpecStepsRetryArgs struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold pulumi.IntPtrInput `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (PromotionTaskSpecStepsRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecStepsRetry)(nil)).Elem()
}

func (i PromotionTaskSpecStepsRetryArgs) ToPromotionTaskSpecStepsRetryOutput() PromotionTaskSpecStepsRetryOutput {
	return i.ToPromotionTaskSpecStepsRetryOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsRetryArgs) ToPromotionTaskSpecStepsRetryOutputWithContext(ctx context.Context) PromotionTaskSpecStepsRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsRetryOutput)
}

func (i PromotionTaskSpecStepsRetryArgs) ToPromotionTaskSpecStepsRetryPtrOutput() PromotionTaskSpecStepsRetryPtrOutput {
	return i.ToPromotionTaskSpecStepsRetryPtrOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsRetryArgs) ToPromotionTaskSpecStepsRetryPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsRetryOutput).ToPromotionTaskSpecStepsRetryPtrOutputWithContext(ctx)
}

// PromotionTaskSpecStepsRetryPtrInput is an input type that accepts PromotionTaskSpecStepsRetryArgs, PromotionTaskSpecStepsRetryPtr and PromotionTaskSpecStepsRetryPtrOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsRetryPtrInput` via:
//
//	        PromotionTaskSpecStepsRetryArgs{...}
//
//	or:
//
//	        nil
type PromotionTaskSpecStepsRetryPtrInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsRetryPtrOutput() PromotionTaskSpecStepsRetryPtrOutput
	ToPromotionTaskSpecStepsRetryPtrOutputWithContext(context.Context) PromotionTaskSpecStepsRetryPtrOutput
}

type promotionTaskSpecStepsRetryPtrType PromotionTaskSpecStepsRetryArgs

func PromotionTaskSpecStepsRetryPtr(v *PromotionTaskSpecStepsRetryArgs) PromotionTaskSpecStepsRetryPtrInput {
	return (*promotionTaskSpecStepsRetryPtrType)(v)
}

func (*promotionTaskSpecStepsRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskSpecStepsRetry)(nil)).Elem()
}

func (i *promotionTaskSpecStepsRetryPtrType) ToPromotionTaskSpecStepsRetryPtrOutput() PromotionTaskSpecStepsRetryPtrOutput {
	return i.ToPromotionTaskSpecStepsRetryPtrOutputWithContext(context.Background())
}

func (i *promotionTaskSpecStepsRetryPtrType) ToPromotionTaskSpecStepsRetryPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsRetryPtrOutput)
}

// Retry is the retry policy for this step.
type PromotionTaskSpecStepsRetryOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecStepsRetry)(nil)).Elem()
}

func (o PromotionTaskSpecStepsRetryOutput) ToPromotionTaskSpecStepsRetryOutput() PromotionTaskSpecStepsRetryOutput {
	return o
}

func (o PromotionTaskSpecStepsRetryOutput) ToPromotionTaskSpecStepsRetryOutputWithContext(ctx context.Context) PromotionTaskSpecStepsRetryOutput {
	return o
}

func (o PromotionTaskSpecStepsRetryOutput) ToPromotionTaskSpecStepsRetryPtrOutput() PromotionTaskSpecStepsRetryPtrOutput {
	return o.ToPromotionTaskSpecStepsRetryPtrOutputWithContext(context.Background())
}

func (o PromotionTaskSpecStepsRetryOutput) ToPromotionTaskSpecStepsRetryPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsRetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionTaskSpecStepsRetry) *PromotionTaskSpecStepsRetry {
		return &v
	}).(PromotionTaskSpecStepsRetryPtrOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o PromotionTaskSpecStepsRetryOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsRetry) *int { return v.ErrorThreshold }).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o PromotionTaskSpecStepsRetryOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsRetry) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type PromotionTaskSpecStepsRetryPtrOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskSpecStepsRetry)(nil)).Elem()
}

func (o PromotionTaskSpecStepsRetryPtrOutput) ToPromotionTaskSpecStepsRetryPtrOutput() PromotionTaskSpecStepsRetryPtrOutput {
	return o
}

func (o PromotionTaskSpecStepsRetryPtrOutput) ToPromotionTaskSpecStepsRetryPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsRetryPtrOutput {
	return o
}

func (o PromotionTaskSpecStepsRetryPtrOutput) Elem() PromotionTaskSpecStepsRetryOutput {
	return o.ApplyT(func(v *PromotionTaskSpecStepsRetry) PromotionTaskSpecStepsRetry {
		if v != nil {
			return *v
		}
		var ret PromotionTaskSpecStepsRetry
		return ret
	}).(PromotionTaskSpecStepsRetryOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o PromotionTaskSpecStepsRetryPtrOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PromotionTaskSpecStepsRetry) *int {
		if v == nil {
			return nil
		}
		return v.ErrorThreshold
	}).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o PromotionTaskSpecStepsRetryPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionTaskSpecStepsRetry) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Retry is the retry policy for this step.
type PromotionTaskSpecStepsRetryPatch struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold *int `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout *string `pulumi:"timeout"`
}

// PromotionTaskSpecStepsRetryPatchInput is an input type that accepts PromotionTaskSpecStepsRetryPatchArgs and PromotionTaskSpecStepsRetryPatchOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsRetryPatchInput` via:
//
//	PromotionTaskSpecStepsRetryPatchArgs{...}
type PromotionTaskSpecStepsRetryPatchInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsRetryPatchOutput() PromotionTaskSpecStepsRetryPatchOutput
	ToPromotionTaskSpecStepsRetryPatchOutputWithContext(context.Context) PromotionTaskSpecStepsRetryPatchOutput
}

// Retry is the retry policy for this step.
type PromotionTaskSpecStepsRetryPatchArgs struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold pulumi.IntPtrInput `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (PromotionTaskSpecStepsRetryPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecStepsRetryPatch)(nil)).Elem()
}

func (i PromotionTaskSpecStepsRetryPatchArgs) ToPromotionTaskSpecStepsRetryPatchOutput() PromotionTaskSpecStepsRetryPatchOutput {
	return i.ToPromotionTaskSpecStepsRetryPatchOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsRetryPatchArgs) ToPromotionTaskSpecStepsRetryPatchOutputWithContext(ctx context.Context) PromotionTaskSpecStepsRetryPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsRetryPatchOutput)
}

func (i PromotionTaskSpecStepsRetryPatchArgs) ToPromotionTaskSpecStepsRetryPatchPtrOutput() PromotionTaskSpecStepsRetryPatchPtrOutput {
	return i.ToPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsRetryPatchArgs) ToPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsRetryPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsRetryPatchOutput).ToPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(ctx)
}

// PromotionTaskSpecStepsRetryPatchPtrInput is an input type that accepts PromotionTaskSpecStepsRetryPatchArgs, PromotionTaskSpecStepsRetryPatchPtr and PromotionTaskSpecStepsRetryPatchPtrOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsRetryPatchPtrInput` via:
//
//	        PromotionTaskSpecStepsRetryPatchArgs{...}
//
//	or:
//
//	        nil
type PromotionTaskSpecStepsRetryPatchPtrInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsRetryPatchPtrOutput() PromotionTaskSpecStepsRetryPatchPtrOutput
	ToPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(context.Context) PromotionTaskSpecStepsRetryPatchPtrOutput
}

type promotionTaskSpecStepsRetryPatchPtrType PromotionTaskSpecStepsRetryPatchArgs

func PromotionTaskSpecStepsRetryPatchPtr(v *PromotionTaskSpecStepsRetryPatchArgs) PromotionTaskSpecStepsRetryPatchPtrInput {
	return (*promotionTaskSpecStepsRetryPatchPtrType)(v)
}

func (*promotionTaskSpecStepsRetryPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskSpecStepsRetryPatch)(nil)).Elem()
}

func (i *promotionTaskSpecStepsRetryPatchPtrType) ToPromotionTaskSpecStepsRetryPatchPtrOutput() PromotionTaskSpecStepsRetryPatchPtrOutput {
	return i.ToPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(context.Background())
}

func (i *promotionTaskSpecStepsRetryPatchPtrType) ToPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsRetryPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsRetryPatchPtrOutput)
}

// Retry is the retry policy for this step.
type PromotionTaskSpecStepsRetryPatchOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsRetryPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecStepsRetryPatch)(nil)).Elem()
}

func (o PromotionTaskSpecStepsRetryPatchOutput) ToPromotionTaskSpecStepsRetryPatchOutput() PromotionTaskSpecStepsRetryPatchOutput {
	return o
}

func (o PromotionTaskSpecStepsRetryPatchOutput) ToPromotionTaskSpecStepsRetryPatchOutputWithContext(ctx context.Context) PromotionTaskSpecStepsRetryPatchOutput {
	return o
}

func (o PromotionTaskSpecStepsRetryPatchOutput) ToPromotionTaskSpecStepsRetryPatchPtrOutput() PromotionTaskSpecStepsRetryPatchPtrOutput {
	return o.ToPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(context.Background())
}

func (o PromotionTaskSpecStepsRetryPatchOutput) ToPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsRetryPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionTaskSpecStepsRetryPatch) *PromotionTaskSpecStepsRetryPatch {
		return &v
	}).(PromotionTaskSpecStepsRetryPatchPtrOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o PromotionTaskSpecStepsRetryPatchOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsRetryPatch) *int { return v.ErrorThreshold }).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o PromotionTaskSpecStepsRetryPatchOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsRetryPatch) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type PromotionTaskSpecStepsRetryPatchPtrOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsRetryPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskSpecStepsRetryPatch)(nil)).Elem()
}

func (o PromotionTaskSpecStepsRetryPatchPtrOutput) ToPromotionTaskSpecStepsRetryPatchPtrOutput() PromotionTaskSpecStepsRetryPatchPtrOutput {
	return o
}

func (o PromotionTaskSpecStepsRetryPatchPtrOutput) ToPromotionTaskSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsRetryPatchPtrOutput {
	return o
}

func (o PromotionTaskSpecStepsRetryPatchPtrOutput) Elem() PromotionTaskSpecStepsRetryPatchOutput {
	return o.ApplyT(func(v *PromotionTaskSpecStepsRetryPatch) PromotionTaskSpecStepsRetryPatch {
		if v != nil {
			return *v
		}
		var ret PromotionTaskSpecStepsRetryPatch
		return ret
	}).(PromotionTaskSpecStepsRetryPatchOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o PromotionTaskSpecStepsRetryPatchPtrOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PromotionTaskSpecStepsRetryPatch) *int {
		if v == nil {
			return nil
		}
		return v.ErrorThreshold
	}).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o PromotionTaskSpecStepsRetryPatchPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionTaskSpecStepsRetryPatch) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type PromotionTaskSpecStepsTask struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind *string `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name *string `pulumi:"name"`
}

// PromotionTaskSpecStepsTaskInput is an input type that accepts PromotionTaskSpecStepsTaskArgs and PromotionTaskSpecStepsTaskOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsTaskInput` via:
//
//	PromotionTaskSpecStepsTaskArgs{...}
type PromotionTaskSpecStepsTaskInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsTaskOutput() PromotionTaskSpecStepsTaskOutput
	ToPromotionTaskSpecStepsTaskOutputWithContext(context.Context) PromotionTaskSpecStepsTaskOutput
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type PromotionTaskSpecStepsTaskArgs struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PromotionTaskSpecStepsTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecStepsTask)(nil)).Elem()
}

func (i PromotionTaskSpecStepsTaskArgs) ToPromotionTaskSpecStepsTaskOutput() PromotionTaskSpecStepsTaskOutput {
	return i.ToPromotionTaskSpecStepsTaskOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsTaskArgs) ToPromotionTaskSpecStepsTaskOutputWithContext(ctx context.Context) PromotionTaskSpecStepsTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsTaskOutput)
}

func (i PromotionTaskSpecStepsTaskArgs) ToPromotionTaskSpecStepsTaskPtrOutput() PromotionTaskSpecStepsTaskPtrOutput {
	return i.ToPromotionTaskSpecStepsTaskPtrOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsTaskArgs) ToPromotionTaskSpecStepsTaskPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsTaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsTaskOutput).ToPromotionTaskSpecStepsTaskPtrOutputWithContext(ctx)
}

// PromotionTaskSpecStepsTaskPtrInput is an input type that accepts PromotionTaskSpecStepsTaskArgs, PromotionTaskSpecStepsTaskPtr and PromotionTaskSpecStepsTaskPtrOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsTaskPtrInput` via:
//
//	        PromotionTaskSpecStepsTaskArgs{...}
//
//	or:
//
//	        nil
type PromotionTaskSpecStepsTaskPtrInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsTaskPtrOutput() PromotionTaskSpecStepsTaskPtrOutput
	ToPromotionTaskSpecStepsTaskPtrOutputWithContext(context.Context) PromotionTaskSpecStepsTaskPtrOutput
}

type promotionTaskSpecStepsTaskPtrType PromotionTaskSpecStepsTaskArgs

func PromotionTaskSpecStepsTaskPtr(v *PromotionTaskSpecStepsTaskArgs) PromotionTaskSpecStepsTaskPtrInput {
	return (*promotionTaskSpecStepsTaskPtrType)(v)
}

func (*promotionTaskSpecStepsTaskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskSpecStepsTask)(nil)).Elem()
}

func (i *promotionTaskSpecStepsTaskPtrType) ToPromotionTaskSpecStepsTaskPtrOutput() PromotionTaskSpecStepsTaskPtrOutput {
	return i.ToPromotionTaskSpecStepsTaskPtrOutputWithContext(context.Background())
}

func (i *promotionTaskSpecStepsTaskPtrType) ToPromotionTaskSpecStepsTaskPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsTaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsTaskPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type PromotionTaskSpecStepsTaskOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecStepsTask)(nil)).Elem()
}

func (o PromotionTaskSpecStepsTaskOutput) ToPromotionTaskSpecStepsTaskOutput() PromotionTaskSpecStepsTaskOutput {
	return o
}

func (o PromotionTaskSpecStepsTaskOutput) ToPromotionTaskSpecStepsTaskOutputWithContext(ctx context.Context) PromotionTaskSpecStepsTaskOutput {
	return o
}

func (o PromotionTaskSpecStepsTaskOutput) ToPromotionTaskSpecStepsTaskPtrOutput() PromotionTaskSpecStepsTaskPtrOutput {
	return o.ToPromotionTaskSpecStepsTaskPtrOutputWithContext(context.Background())
}

func (o PromotionTaskSpecStepsTaskOutput) ToPromotionTaskSpecStepsTaskPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsTaskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionTaskSpecStepsTask) *PromotionTaskSpecStepsTask {
		return &v
	}).(PromotionTaskSpecStepsTaskPtrOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o PromotionTaskSpecStepsTaskOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsTask) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o PromotionTaskSpecStepsTaskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsTask) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PromotionTaskSpecStepsTaskPtrOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsTaskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskSpecStepsTask)(nil)).Elem()
}

func (o PromotionTaskSpecStepsTaskPtrOutput) ToPromotionTaskSpecStepsTaskPtrOutput() PromotionTaskSpecStepsTaskPtrOutput {
	return o
}

func (o PromotionTaskSpecStepsTaskPtrOutput) ToPromotionTaskSpecStepsTaskPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsTaskPtrOutput {
	return o
}

func (o PromotionTaskSpecStepsTaskPtrOutput) Elem() PromotionTaskSpecStepsTaskOutput {
	return o.ApplyT(func(v *PromotionTaskSpecStepsTask) PromotionTaskSpecStepsTask {
		if v != nil {
			return *v
		}
		var ret PromotionTaskSpecStepsTask
		return ret
	}).(PromotionTaskSpecStepsTaskOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o PromotionTaskSpecStepsTaskPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionTaskSpecStepsTask) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o PromotionTaskSpecStepsTaskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionTaskSpecStepsTask) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type PromotionTaskSpecStepsTaskPatch struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind *string `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name *string `pulumi:"name"`
}

// PromotionTaskSpecStepsTaskPatchInput is an input type that accepts PromotionTaskSpecStepsTaskPatchArgs and PromotionTaskSpecStepsTaskPatchOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsTaskPatchInput` via:
//
//	PromotionTaskSpecStepsTaskPatchArgs{...}
type PromotionTaskSpecStepsTaskPatchInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsTaskPatchOutput() PromotionTaskSpecStepsTaskPatchOutput
	ToPromotionTaskSpecStepsTaskPatchOutputWithContext(context.Context) PromotionTaskSpecStepsTaskPatchOutput
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type PromotionTaskSpecStepsTaskPatchArgs struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PromotionTaskSpecStepsTaskPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecStepsTaskPatch)(nil)).Elem()
}

func (i PromotionTaskSpecStepsTaskPatchArgs) ToPromotionTaskSpecStepsTaskPatchOutput() PromotionTaskSpecStepsTaskPatchOutput {
	return i.ToPromotionTaskSpecStepsTaskPatchOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsTaskPatchArgs) ToPromotionTaskSpecStepsTaskPatchOutputWithContext(ctx context.Context) PromotionTaskSpecStepsTaskPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsTaskPatchOutput)
}

func (i PromotionTaskSpecStepsTaskPatchArgs) ToPromotionTaskSpecStepsTaskPatchPtrOutput() PromotionTaskSpecStepsTaskPatchPtrOutput {
	return i.ToPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsTaskPatchArgs) ToPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsTaskPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsTaskPatchOutput).ToPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(ctx)
}

// PromotionTaskSpecStepsTaskPatchPtrInput is an input type that accepts PromotionTaskSpecStepsTaskPatchArgs, PromotionTaskSpecStepsTaskPatchPtr and PromotionTaskSpecStepsTaskPatchPtrOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsTaskPatchPtrInput` via:
//
//	        PromotionTaskSpecStepsTaskPatchArgs{...}
//
//	or:
//
//	        nil
type PromotionTaskSpecStepsTaskPatchPtrInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsTaskPatchPtrOutput() PromotionTaskSpecStepsTaskPatchPtrOutput
	ToPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(context.Context) PromotionTaskSpecStepsTaskPatchPtrOutput
}

type promotionTaskSpecStepsTaskPatchPtrType PromotionTaskSpecStepsTaskPatchArgs

func PromotionTaskSpecStepsTaskPatchPtr(v *PromotionTaskSpecStepsTaskPatchArgs) PromotionTaskSpecStepsTaskPatchPtrInput {
	return (*promotionTaskSpecStepsTaskPatchPtrType)(v)
}

func (*promotionTaskSpecStepsTaskPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskSpecStepsTaskPatch)(nil)).Elem()
}

func (i *promotionTaskSpecStepsTaskPatchPtrType) ToPromotionTaskSpecStepsTaskPatchPtrOutput() PromotionTaskSpecStepsTaskPatchPtrOutput {
	return i.ToPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(context.Background())
}

func (i *promotionTaskSpecStepsTaskPatchPtrType) ToPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsTaskPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsTaskPatchPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type PromotionTaskSpecStepsTaskPatchOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsTaskPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecStepsTaskPatch)(nil)).Elem()
}

func (o PromotionTaskSpecStepsTaskPatchOutput) ToPromotionTaskSpecStepsTaskPatchOutput() PromotionTaskSpecStepsTaskPatchOutput {
	return o
}

func (o PromotionTaskSpecStepsTaskPatchOutput) ToPromotionTaskSpecStepsTaskPatchOutputWithContext(ctx context.Context) PromotionTaskSpecStepsTaskPatchOutput {
	return o
}

func (o PromotionTaskSpecStepsTaskPatchOutput) ToPromotionTaskSpecStepsTaskPatchPtrOutput() PromotionTaskSpecStepsTaskPatchPtrOutput {
	return o.ToPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(context.Background())
}

func (o PromotionTaskSpecStepsTaskPatchOutput) ToPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsTaskPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionTaskSpecStepsTaskPatch) *PromotionTaskSpecStepsTaskPatch {
		return &v
	}).(PromotionTaskSpecStepsTaskPatchPtrOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o PromotionTaskSpecStepsTaskPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsTaskPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o PromotionTaskSpecStepsTaskPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsTaskPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PromotionTaskSpecStepsTaskPatchPtrOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsTaskPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTaskSpecStepsTaskPatch)(nil)).Elem()
}

func (o PromotionTaskSpecStepsTaskPatchPtrOutput) ToPromotionTaskSpecStepsTaskPatchPtrOutput() PromotionTaskSpecStepsTaskPatchPtrOutput {
	return o
}

func (o PromotionTaskSpecStepsTaskPatchPtrOutput) ToPromotionTaskSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) PromotionTaskSpecStepsTaskPatchPtrOutput {
	return o
}

func (o PromotionTaskSpecStepsTaskPatchPtrOutput) Elem() PromotionTaskSpecStepsTaskPatchOutput {
	return o.ApplyT(func(v *PromotionTaskSpecStepsTaskPatch) PromotionTaskSpecStepsTaskPatch {
		if v != nil {
			return *v
		}
		var ret PromotionTaskSpecStepsTaskPatch
		return ret
	}).(PromotionTaskSpecStepsTaskPatchOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o PromotionTaskSpecStepsTaskPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionTaskSpecStepsTaskPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o PromotionTaskSpecStepsTaskPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionTaskSpecStepsTaskPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionTaskSpecStepsVars struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// PromotionTaskSpecStepsVarsInput is an input type that accepts PromotionTaskSpecStepsVarsArgs and PromotionTaskSpecStepsVarsOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsVarsInput` via:
//
//	PromotionTaskSpecStepsVarsArgs{...}
type PromotionTaskSpecStepsVarsInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsVarsOutput() PromotionTaskSpecStepsVarsOutput
	ToPromotionTaskSpecStepsVarsOutputWithContext(context.Context) PromotionTaskSpecStepsVarsOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionTaskSpecStepsVarsArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PromotionTaskSpecStepsVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecStepsVars)(nil)).Elem()
}

func (i PromotionTaskSpecStepsVarsArgs) ToPromotionTaskSpecStepsVarsOutput() PromotionTaskSpecStepsVarsOutput {
	return i.ToPromotionTaskSpecStepsVarsOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsVarsArgs) ToPromotionTaskSpecStepsVarsOutputWithContext(ctx context.Context) PromotionTaskSpecStepsVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsVarsOutput)
}

// PromotionTaskSpecStepsVarsArrayInput is an input type that accepts PromotionTaskSpecStepsVarsArray and PromotionTaskSpecStepsVarsArrayOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsVarsArrayInput` via:
//
//	PromotionTaskSpecStepsVarsArray{ PromotionTaskSpecStepsVarsArgs{...} }
type PromotionTaskSpecStepsVarsArrayInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsVarsArrayOutput() PromotionTaskSpecStepsVarsArrayOutput
	ToPromotionTaskSpecStepsVarsArrayOutputWithContext(context.Context) PromotionTaskSpecStepsVarsArrayOutput
}

type PromotionTaskSpecStepsVarsArray []PromotionTaskSpecStepsVarsInput

func (PromotionTaskSpecStepsVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionTaskSpecStepsVars)(nil)).Elem()
}

func (i PromotionTaskSpecStepsVarsArray) ToPromotionTaskSpecStepsVarsArrayOutput() PromotionTaskSpecStepsVarsArrayOutput {
	return i.ToPromotionTaskSpecStepsVarsArrayOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsVarsArray) ToPromotionTaskSpecStepsVarsArrayOutputWithContext(ctx context.Context) PromotionTaskSpecStepsVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsVarsArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionTaskSpecStepsVarsOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecStepsVars)(nil)).Elem()
}

func (o PromotionTaskSpecStepsVarsOutput) ToPromotionTaskSpecStepsVarsOutput() PromotionTaskSpecStepsVarsOutput {
	return o
}

func (o PromotionTaskSpecStepsVarsOutput) ToPromotionTaskSpecStepsVarsOutputWithContext(ctx context.Context) PromotionTaskSpecStepsVarsOutput {
	return o
}

// Name is the name of the variable.
func (o PromotionTaskSpecStepsVarsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsVars) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o PromotionTaskSpecStepsVarsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsVars) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PromotionTaskSpecStepsVarsArrayOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionTaskSpecStepsVars)(nil)).Elem()
}

func (o PromotionTaskSpecStepsVarsArrayOutput) ToPromotionTaskSpecStepsVarsArrayOutput() PromotionTaskSpecStepsVarsArrayOutput {
	return o
}

func (o PromotionTaskSpecStepsVarsArrayOutput) ToPromotionTaskSpecStepsVarsArrayOutputWithContext(ctx context.Context) PromotionTaskSpecStepsVarsArrayOutput {
	return o
}

func (o PromotionTaskSpecStepsVarsArrayOutput) Index(i pulumi.IntInput) PromotionTaskSpecStepsVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionTaskSpecStepsVars {
		return vs[0].([]PromotionTaskSpecStepsVars)[vs[1].(int)]
	}).(PromotionTaskSpecStepsVarsOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionTaskSpecStepsVarsPatch struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// PromotionTaskSpecStepsVarsPatchInput is an input type that accepts PromotionTaskSpecStepsVarsPatchArgs and PromotionTaskSpecStepsVarsPatchOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsVarsPatchInput` via:
//
//	PromotionTaskSpecStepsVarsPatchArgs{...}
type PromotionTaskSpecStepsVarsPatchInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsVarsPatchOutput() PromotionTaskSpecStepsVarsPatchOutput
	ToPromotionTaskSpecStepsVarsPatchOutputWithContext(context.Context) PromotionTaskSpecStepsVarsPatchOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionTaskSpecStepsVarsPatchArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PromotionTaskSpecStepsVarsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecStepsVarsPatch)(nil)).Elem()
}

func (i PromotionTaskSpecStepsVarsPatchArgs) ToPromotionTaskSpecStepsVarsPatchOutput() PromotionTaskSpecStepsVarsPatchOutput {
	return i.ToPromotionTaskSpecStepsVarsPatchOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsVarsPatchArgs) ToPromotionTaskSpecStepsVarsPatchOutputWithContext(ctx context.Context) PromotionTaskSpecStepsVarsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsVarsPatchOutput)
}

// PromotionTaskSpecStepsVarsPatchArrayInput is an input type that accepts PromotionTaskSpecStepsVarsPatchArray and PromotionTaskSpecStepsVarsPatchArrayOutput values.
// You can construct a concrete instance of `PromotionTaskSpecStepsVarsPatchArrayInput` via:
//
//	PromotionTaskSpecStepsVarsPatchArray{ PromotionTaskSpecStepsVarsPatchArgs{...} }
type PromotionTaskSpecStepsVarsPatchArrayInput interface {
	pulumi.Input

	ToPromotionTaskSpecStepsVarsPatchArrayOutput() PromotionTaskSpecStepsVarsPatchArrayOutput
	ToPromotionTaskSpecStepsVarsPatchArrayOutputWithContext(context.Context) PromotionTaskSpecStepsVarsPatchArrayOutput
}

type PromotionTaskSpecStepsVarsPatchArray []PromotionTaskSpecStepsVarsPatchInput

func (PromotionTaskSpecStepsVarsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionTaskSpecStepsVarsPatch)(nil)).Elem()
}

func (i PromotionTaskSpecStepsVarsPatchArray) ToPromotionTaskSpecStepsVarsPatchArrayOutput() PromotionTaskSpecStepsVarsPatchArrayOutput {
	return i.ToPromotionTaskSpecStepsVarsPatchArrayOutputWithContext(context.Background())
}

func (i PromotionTaskSpecStepsVarsPatchArray) ToPromotionTaskSpecStepsVarsPatchArrayOutputWithContext(ctx context.Context) PromotionTaskSpecStepsVarsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecStepsVarsPatchArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionTaskSpecStepsVarsPatchOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsVarsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecStepsVarsPatch)(nil)).Elem()
}

func (o PromotionTaskSpecStepsVarsPatchOutput) ToPromotionTaskSpecStepsVarsPatchOutput() PromotionTaskSpecStepsVarsPatchOutput {
	return o
}

func (o PromotionTaskSpecStepsVarsPatchOutput) ToPromotionTaskSpecStepsVarsPatchOutputWithContext(ctx context.Context) PromotionTaskSpecStepsVarsPatchOutput {
	return o
}

// Name is the name of the variable.
func (o PromotionTaskSpecStepsVarsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsVarsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o PromotionTaskSpecStepsVarsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecStepsVarsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PromotionTaskSpecStepsVarsPatchArrayOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecStepsVarsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionTaskSpecStepsVarsPatch)(nil)).Elem()
}

func (o PromotionTaskSpecStepsVarsPatchArrayOutput) ToPromotionTaskSpecStepsVarsPatchArrayOutput() PromotionTaskSpecStepsVarsPatchArrayOutput {
	return o
}

func (o PromotionTaskSpecStepsVarsPatchArrayOutput) ToPromotionTaskSpecStepsVarsPatchArrayOutputWithContext(ctx context.Context) PromotionTaskSpecStepsVarsPatchArrayOutput {
	return o
}

func (o PromotionTaskSpecStepsVarsPatchArrayOutput) Index(i pulumi.IntInput) PromotionTaskSpecStepsVarsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionTaskSpecStepsVarsPatch {
		return vs[0].([]PromotionTaskSpecStepsVarsPatch)[vs[1].(int)]
	}).(PromotionTaskSpecStepsVarsPatchOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionTaskSpecVars struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// PromotionTaskSpecVarsInput is an input type that accepts PromotionTaskSpecVarsArgs and PromotionTaskSpecVarsOutput values.
// You can construct a concrete instance of `PromotionTaskSpecVarsInput` via:
//
//	PromotionTaskSpecVarsArgs{...}
type PromotionTaskSpecVarsInput interface {
	pulumi.Input

	ToPromotionTaskSpecVarsOutput() PromotionTaskSpecVarsOutput
	ToPromotionTaskSpecVarsOutputWithContext(context.Context) PromotionTaskSpecVarsOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionTaskSpecVarsArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PromotionTaskSpecVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecVars)(nil)).Elem()
}

func (i PromotionTaskSpecVarsArgs) ToPromotionTaskSpecVarsOutput() PromotionTaskSpecVarsOutput {
	return i.ToPromotionTaskSpecVarsOutputWithContext(context.Background())
}

func (i PromotionTaskSpecVarsArgs) ToPromotionTaskSpecVarsOutputWithContext(ctx context.Context) PromotionTaskSpecVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecVarsOutput)
}

// PromotionTaskSpecVarsArrayInput is an input type that accepts PromotionTaskSpecVarsArray and PromotionTaskSpecVarsArrayOutput values.
// You can construct a concrete instance of `PromotionTaskSpecVarsArrayInput` via:
//
//	PromotionTaskSpecVarsArray{ PromotionTaskSpecVarsArgs{...} }
type PromotionTaskSpecVarsArrayInput interface {
	pulumi.Input

	ToPromotionTaskSpecVarsArrayOutput() PromotionTaskSpecVarsArrayOutput
	ToPromotionTaskSpecVarsArrayOutputWithContext(context.Context) PromotionTaskSpecVarsArrayOutput
}

type PromotionTaskSpecVarsArray []PromotionTaskSpecVarsInput

func (PromotionTaskSpecVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionTaskSpecVars)(nil)).Elem()
}

func (i PromotionTaskSpecVarsArray) ToPromotionTaskSpecVarsArrayOutput() PromotionTaskSpecVarsArrayOutput {
	return i.ToPromotionTaskSpecVarsArrayOutputWithContext(context.Background())
}

func (i PromotionTaskSpecVarsArray) ToPromotionTaskSpecVarsArrayOutputWithContext(ctx context.Context) PromotionTaskSpecVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecVarsArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionTaskSpecVarsOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecVars)(nil)).Elem()
}

func (o PromotionTaskSpecVarsOutput) ToPromotionTaskSpecVarsOutput() PromotionTaskSpecVarsOutput {
	return o
}

func (o PromotionTaskSpecVarsOutput) ToPromotionTaskSpecVarsOutputWithContext(ctx context.Context) PromotionTaskSpecVarsOutput {
	return o
}

// Name is the name of the variable.
func (o PromotionTaskSpecVarsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecVars) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o PromotionTaskSpecVarsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecVars) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PromotionTaskSpecVarsArrayOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionTaskSpecVars)(nil)).Elem()
}

func (o PromotionTaskSpecVarsArrayOutput) ToPromotionTaskSpecVarsArrayOutput() PromotionTaskSpecVarsArrayOutput {
	return o
}

func (o PromotionTaskSpecVarsArrayOutput) ToPromotionTaskSpecVarsArrayOutputWithContext(ctx context.Context) PromotionTaskSpecVarsArrayOutput {
	return o
}

func (o PromotionTaskSpecVarsArrayOutput) Index(i pulumi.IntInput) PromotionTaskSpecVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionTaskSpecVars {
		return vs[0].([]PromotionTaskSpecVars)[vs[1].(int)]
	}).(PromotionTaskSpecVarsOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionTaskSpecVarsPatch struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// PromotionTaskSpecVarsPatchInput is an input type that accepts PromotionTaskSpecVarsPatchArgs and PromotionTaskSpecVarsPatchOutput values.
// You can construct a concrete instance of `PromotionTaskSpecVarsPatchInput` via:
//
//	PromotionTaskSpecVarsPatchArgs{...}
type PromotionTaskSpecVarsPatchInput interface {
	pulumi.Input

	ToPromotionTaskSpecVarsPatchOutput() PromotionTaskSpecVarsPatchOutput
	ToPromotionTaskSpecVarsPatchOutputWithContext(context.Context) PromotionTaskSpecVarsPatchOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionTaskSpecVarsPatchArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PromotionTaskSpecVarsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecVarsPatch)(nil)).Elem()
}

func (i PromotionTaskSpecVarsPatchArgs) ToPromotionTaskSpecVarsPatchOutput() PromotionTaskSpecVarsPatchOutput {
	return i.ToPromotionTaskSpecVarsPatchOutputWithContext(context.Background())
}

func (i PromotionTaskSpecVarsPatchArgs) ToPromotionTaskSpecVarsPatchOutputWithContext(ctx context.Context) PromotionTaskSpecVarsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecVarsPatchOutput)
}

// PromotionTaskSpecVarsPatchArrayInput is an input type that accepts PromotionTaskSpecVarsPatchArray and PromotionTaskSpecVarsPatchArrayOutput values.
// You can construct a concrete instance of `PromotionTaskSpecVarsPatchArrayInput` via:
//
//	PromotionTaskSpecVarsPatchArray{ PromotionTaskSpecVarsPatchArgs{...} }
type PromotionTaskSpecVarsPatchArrayInput interface {
	pulumi.Input

	ToPromotionTaskSpecVarsPatchArrayOutput() PromotionTaskSpecVarsPatchArrayOutput
	ToPromotionTaskSpecVarsPatchArrayOutputWithContext(context.Context) PromotionTaskSpecVarsPatchArrayOutput
}

type PromotionTaskSpecVarsPatchArray []PromotionTaskSpecVarsPatchInput

func (PromotionTaskSpecVarsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionTaskSpecVarsPatch)(nil)).Elem()
}

func (i PromotionTaskSpecVarsPatchArray) ToPromotionTaskSpecVarsPatchArrayOutput() PromotionTaskSpecVarsPatchArrayOutput {
	return i.ToPromotionTaskSpecVarsPatchArrayOutputWithContext(context.Background())
}

func (i PromotionTaskSpecVarsPatchArray) ToPromotionTaskSpecVarsPatchArrayOutputWithContext(ctx context.Context) PromotionTaskSpecVarsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskSpecVarsPatchArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type PromotionTaskSpecVarsPatchOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecVarsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionTaskSpecVarsPatch)(nil)).Elem()
}

func (o PromotionTaskSpecVarsPatchOutput) ToPromotionTaskSpecVarsPatchOutput() PromotionTaskSpecVarsPatchOutput {
	return o
}

func (o PromotionTaskSpecVarsPatchOutput) ToPromotionTaskSpecVarsPatchOutputWithContext(ctx context.Context) PromotionTaskSpecVarsPatchOutput {
	return o
}

// Name is the name of the variable.
func (o PromotionTaskSpecVarsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecVarsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o PromotionTaskSpecVarsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromotionTaskSpecVarsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PromotionTaskSpecVarsPatchArrayOutput struct{ *pulumi.OutputState }

func (PromotionTaskSpecVarsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromotionTaskSpecVarsPatch)(nil)).Elem()
}

func (o PromotionTaskSpecVarsPatchArrayOutput) ToPromotionTaskSpecVarsPatchArrayOutput() PromotionTaskSpecVarsPatchArrayOutput {
	return o
}

func (o PromotionTaskSpecVarsPatchArrayOutput) ToPromotionTaskSpecVarsPatchArrayOutputWithContext(ctx context.Context) PromotionTaskSpecVarsPatchArrayOutput {
	return o
}

func (o PromotionTaskSpecVarsPatchArrayOutput) Index(i pulumi.IntInput) PromotionTaskSpecVarsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromotionTaskSpecVarsPatch {
		return vs[0].([]PromotionTaskSpecVarsPatch)[vs[1].(int)]
	}).(PromotionTaskSpecVarsPatchOutput)
}

// Stage is the Kargo API's main type.
type StageType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *StageSpec         `pulumi:"spec"`
	Status   *StageStatus       `pulumi:"status"`
}

// StageTypeInput is an input type that accepts StageTypeArgs and StageTypeOutput values.
// You can construct a concrete instance of `StageTypeInput` via:
//
//	StageTypeArgs{...}
type StageTypeInput interface {
	pulumi.Input

	ToStageTypeOutput() StageTypeOutput
	ToStageTypeOutputWithContext(context.Context) StageTypeOutput
}

// Stage is the Kargo API's main type.
type StageTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     StageSpecPtrInput         `pulumi:"spec"`
	Status   StageStatusPtrInput       `pulumi:"status"`
}

func (StageTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageType)(nil)).Elem()
}

func (i StageTypeArgs) ToStageTypeOutput() StageTypeOutput {
	return i.ToStageTypeOutputWithContext(context.Background())
}

func (i StageTypeArgs) ToStageTypeOutputWithContext(ctx context.Context) StageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageTypeOutput)
}

// StageTypeArrayInput is an input type that accepts StageTypeArray and StageTypeArrayOutput values.
// You can construct a concrete instance of `StageTypeArrayInput` via:
//
//	StageTypeArray{ StageTypeArgs{...} }
type StageTypeArrayInput interface {
	pulumi.Input

	ToStageTypeArrayOutput() StageTypeArrayOutput
	ToStageTypeArrayOutputWithContext(context.Context) StageTypeArrayOutput
}

type StageTypeArray []StageTypeInput

func (StageTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageType)(nil)).Elem()
}

func (i StageTypeArray) ToStageTypeArrayOutput() StageTypeArrayOutput {
	return i.ToStageTypeArrayOutputWithContext(context.Background())
}

func (i StageTypeArray) ToStageTypeArrayOutputWithContext(ctx context.Context) StageTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageTypeArrayOutput)
}

// Stage is the Kargo API's main type.
type StageTypeOutput struct{ *pulumi.OutputState }

func (StageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageType)(nil)).Elem()
}

func (o StageTypeOutput) ToStageTypeOutput() StageTypeOutput {
	return o
}

func (o StageTypeOutput) ToStageTypeOutputWithContext(ctx context.Context) StageTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o StageTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o StageTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o StageTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v StageType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o StageTypeOutput) Spec() StageSpecPtrOutput {
	return o.ApplyT(func(v StageType) *StageSpec { return v.Spec }).(StageSpecPtrOutput)
}

func (o StageTypeOutput) Status() StageStatusPtrOutput {
	return o.ApplyT(func(v StageType) *StageStatus { return v.Status }).(StageStatusPtrOutput)
}

type StageTypeArrayOutput struct{ *pulumi.OutputState }

func (StageTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageType)(nil)).Elem()
}

func (o StageTypeArrayOutput) ToStageTypeArrayOutput() StageTypeArrayOutput {
	return o
}

func (o StageTypeArrayOutput) ToStageTypeArrayOutputWithContext(ctx context.Context) StageTypeArrayOutput {
	return o
}

func (o StageTypeArrayOutput) Index(i pulumi.IntInput) StageTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageType {
		return vs[0].([]StageType)[vs[1].(int)]
	}).(StageTypeOutput)
}

// StageList is a list of Stage
type StageListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of stages. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []StageType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// StageListTypeInput is an input type that accepts StageListTypeArgs and StageListTypeOutput values.
// You can construct a concrete instance of `StageListTypeInput` via:
//
//	StageListTypeArgs{...}
type StageListTypeInput interface {
	pulumi.Input

	ToStageListTypeOutput() StageListTypeOutput
	ToStageListTypeOutputWithContext(context.Context) StageListTypeOutput
}

// StageList is a list of Stage
type StageListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of stages. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items StageTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (StageListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageListType)(nil)).Elem()
}

func (i StageListTypeArgs) ToStageListTypeOutput() StageListTypeOutput {
	return i.ToStageListTypeOutputWithContext(context.Background())
}

func (i StageListTypeArgs) ToStageListTypeOutputWithContext(ctx context.Context) StageListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageListTypeOutput)
}

// StageList is a list of Stage
type StageListTypeOutput struct{ *pulumi.OutputState }

func (StageListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageListType)(nil)).Elem()
}

func (o StageListTypeOutput) ToStageListTypeOutput() StageListTypeOutput {
	return o
}

func (o StageListTypeOutput) ToStageListTypeOutputWithContext(ctx context.Context) StageListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o StageListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of stages. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o StageListTypeOutput) Items() StageTypeArrayOutput {
	return o.ApplyT(func(v StageListType) []StageType { return v.Items }).(StageTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o StageListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o StageListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v StageListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// Stage is the Kargo API's main type.
type StagePatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *StageSpecPatch         `pulumi:"spec"`
	Status   *StageStatusPatch       `pulumi:"status"`
}

// StagePatchTypeInput is an input type that accepts StagePatchTypeArgs and StagePatchTypeOutput values.
// You can construct a concrete instance of `StagePatchTypeInput` via:
//
//	StagePatchTypeArgs{...}
type StagePatchTypeInput interface {
	pulumi.Input

	ToStagePatchTypeOutput() StagePatchTypeOutput
	ToStagePatchTypeOutputWithContext(context.Context) StagePatchTypeOutput
}

// Stage is the Kargo API's main type.
type StagePatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     StageSpecPatchPtrInput         `pulumi:"spec"`
	Status   StageStatusPatchPtrInput       `pulumi:"status"`
}

func (StagePatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StagePatchType)(nil)).Elem()
}

func (i StagePatchTypeArgs) ToStagePatchTypeOutput() StagePatchTypeOutput {
	return i.ToStagePatchTypeOutputWithContext(context.Background())
}

func (i StagePatchTypeArgs) ToStagePatchTypeOutputWithContext(ctx context.Context) StagePatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StagePatchTypeOutput)
}

// Stage is the Kargo API's main type.
type StagePatchTypeOutput struct{ *pulumi.OutputState }

func (StagePatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StagePatchType)(nil)).Elem()
}

func (o StagePatchTypeOutput) ToStagePatchTypeOutput() StagePatchTypeOutput {
	return o
}

func (o StagePatchTypeOutput) ToStagePatchTypeOutputWithContext(ctx context.Context) StagePatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o StagePatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StagePatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o StagePatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StagePatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o StagePatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v StagePatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o StagePatchTypeOutput) Spec() StageSpecPatchPtrOutput {
	return o.ApplyT(func(v StagePatchType) *StageSpecPatch { return v.Spec }).(StageSpecPatchPtrOutput)
}

func (o StagePatchTypeOutput) Status() StageStatusPatchPtrOutput {
	return o.ApplyT(func(v StagePatchType) *StageStatusPatch { return v.Status }).(StageStatusPatchPtrOutput)
}

// Spec describes sources of Freight used by the Stage and how to incorporate
// Freight into the Stage.
type StageSpec struct {
	PromotionTemplate *StageSpecPromotionTemplate `pulumi:"promotionTemplate"`
	// RequestedFreight expresses the Stage's need for certain pieces of Freight,
	// each having originated from a particular Warehouse. This list must be
	// non-empty. In the common case, a Stage will request Freight having
	// originated from just one specific Warehouse. In advanced cases, requesting
	// Freight from multiple Warehouses provides a method of advancing new
	// artifacts of different types through parallel pipelines at different
	// speeds. This can be useful, for instance, if a Stage is home to multiple
	// microservices that are independently versioned.
	RequestedFreight []StageSpecRequestedFreight `pulumi:"requestedFreight"`
	// Shard is the name of the shard that this Stage belongs to. This is an
	// optional field. If not specified, the Stage will belong to the default
	// shard. A defaulting webhook will sync the value of the
	// kargo.akuity.io/shard label with the value of this field. When this field
	// is empty, the webhook will ensure that label is absent.
	Shard *string `pulumi:"shard"`
	// Vars is a list of variables that can be referenced anywhere in the
	// StageSpec that supports expressions. For example, the PromotionTemplate
	// and arguments of the Verification.
	Vars         []StageSpecVars        `pulumi:"vars"`
	Verification *StageSpecVerification `pulumi:"verification"`
}

// StageSpecInput is an input type that accepts StageSpecArgs and StageSpecOutput values.
// You can construct a concrete instance of `StageSpecInput` via:
//
//	StageSpecArgs{...}
type StageSpecInput interface {
	pulumi.Input

	ToStageSpecOutput() StageSpecOutput
	ToStageSpecOutputWithContext(context.Context) StageSpecOutput
}

// Spec describes sources of Freight used by the Stage and how to incorporate
// Freight into the Stage.
type StageSpecArgs struct {
	PromotionTemplate StageSpecPromotionTemplatePtrInput `pulumi:"promotionTemplate"`
	// RequestedFreight expresses the Stage's need for certain pieces of Freight,
	// each having originated from a particular Warehouse. This list must be
	// non-empty. In the common case, a Stage will request Freight having
	// originated from just one specific Warehouse. In advanced cases, requesting
	// Freight from multiple Warehouses provides a method of advancing new
	// artifacts of different types through parallel pipelines at different
	// speeds. This can be useful, for instance, if a Stage is home to multiple
	// microservices that are independently versioned.
	RequestedFreight StageSpecRequestedFreightArrayInput `pulumi:"requestedFreight"`
	// Shard is the name of the shard that this Stage belongs to. This is an
	// optional field. If not specified, the Stage will belong to the default
	// shard. A defaulting webhook will sync the value of the
	// kargo.akuity.io/shard label with the value of this field. When this field
	// is empty, the webhook will ensure that label is absent.
	Shard pulumi.StringPtrInput `pulumi:"shard"`
	// Vars is a list of variables that can be referenced anywhere in the
	// StageSpec that supports expressions. For example, the PromotionTemplate
	// and arguments of the Verification.
	Vars         StageSpecVarsArrayInput       `pulumi:"vars"`
	Verification StageSpecVerificationPtrInput `pulumi:"verification"`
}

func (StageSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpec)(nil)).Elem()
}

func (i StageSpecArgs) ToStageSpecOutput() StageSpecOutput {
	return i.ToStageSpecOutputWithContext(context.Background())
}

func (i StageSpecArgs) ToStageSpecOutputWithContext(ctx context.Context) StageSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecOutput)
}

func (i StageSpecArgs) ToStageSpecPtrOutput() StageSpecPtrOutput {
	return i.ToStageSpecPtrOutputWithContext(context.Background())
}

func (i StageSpecArgs) ToStageSpecPtrOutputWithContext(ctx context.Context) StageSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecOutput).ToStageSpecPtrOutputWithContext(ctx)
}

// StageSpecPtrInput is an input type that accepts StageSpecArgs, StageSpecPtr and StageSpecPtrOutput values.
// You can construct a concrete instance of `StageSpecPtrInput` via:
//
//	        StageSpecArgs{...}
//
//	or:
//
//	        nil
type StageSpecPtrInput interface {
	pulumi.Input

	ToStageSpecPtrOutput() StageSpecPtrOutput
	ToStageSpecPtrOutputWithContext(context.Context) StageSpecPtrOutput
}

type stageSpecPtrType StageSpecArgs

func StageSpecPtr(v *StageSpecArgs) StageSpecPtrInput {
	return (*stageSpecPtrType)(v)
}

func (*stageSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpec)(nil)).Elem()
}

func (i *stageSpecPtrType) ToStageSpecPtrOutput() StageSpecPtrOutput {
	return i.ToStageSpecPtrOutputWithContext(context.Background())
}

func (i *stageSpecPtrType) ToStageSpecPtrOutputWithContext(ctx context.Context) StageSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPtrOutput)
}

// Spec describes sources of Freight used by the Stage and how to incorporate
// Freight into the Stage.
type StageSpecOutput struct{ *pulumi.OutputState }

func (StageSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpec)(nil)).Elem()
}

func (o StageSpecOutput) ToStageSpecOutput() StageSpecOutput {
	return o
}

func (o StageSpecOutput) ToStageSpecOutputWithContext(ctx context.Context) StageSpecOutput {
	return o
}

func (o StageSpecOutput) ToStageSpecPtrOutput() StageSpecPtrOutput {
	return o.ToStageSpecPtrOutputWithContext(context.Background())
}

func (o StageSpecOutput) ToStageSpecPtrOutputWithContext(ctx context.Context) StageSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpec) *StageSpec {
		return &v
	}).(StageSpecPtrOutput)
}

func (o StageSpecOutput) PromotionTemplate() StageSpecPromotionTemplatePtrOutput {
	return o.ApplyT(func(v StageSpec) *StageSpecPromotionTemplate { return v.PromotionTemplate }).(StageSpecPromotionTemplatePtrOutput)
}

// RequestedFreight expresses the Stage's need for certain pieces of Freight,
// each having originated from a particular Warehouse. This list must be
// non-empty. In the common case, a Stage will request Freight having
// originated from just one specific Warehouse. In advanced cases, requesting
// Freight from multiple Warehouses provides a method of advancing new
// artifacts of different types through parallel pipelines at different
// speeds. This can be useful, for instance, if a Stage is home to multiple
// microservices that are independently versioned.
func (o StageSpecOutput) RequestedFreight() StageSpecRequestedFreightArrayOutput {
	return o.ApplyT(func(v StageSpec) []StageSpecRequestedFreight { return v.RequestedFreight }).(StageSpecRequestedFreightArrayOutput)
}

// Shard is the name of the shard that this Stage belongs to. This is an
// optional field. If not specified, the Stage will belong to the default
// shard. A defaulting webhook will sync the value of the
// kargo.akuity.io/shard label with the value of this field. When this field
// is empty, the webhook will ensure that label is absent.
func (o StageSpecOutput) Shard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpec) *string { return v.Shard }).(pulumi.StringPtrOutput)
}

// Vars is a list of variables that can be referenced anywhere in the
// StageSpec that supports expressions. For example, the PromotionTemplate
// and arguments of the Verification.
func (o StageSpecOutput) Vars() StageSpecVarsArrayOutput {
	return o.ApplyT(func(v StageSpec) []StageSpecVars { return v.Vars }).(StageSpecVarsArrayOutput)
}

func (o StageSpecOutput) Verification() StageSpecVerificationPtrOutput {
	return o.ApplyT(func(v StageSpec) *StageSpecVerification { return v.Verification }).(StageSpecVerificationPtrOutput)
}

type StageSpecPtrOutput struct{ *pulumi.OutputState }

func (StageSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpec)(nil)).Elem()
}

func (o StageSpecPtrOutput) ToStageSpecPtrOutput() StageSpecPtrOutput {
	return o
}

func (o StageSpecPtrOutput) ToStageSpecPtrOutputWithContext(ctx context.Context) StageSpecPtrOutput {
	return o
}

func (o StageSpecPtrOutput) Elem() StageSpecOutput {
	return o.ApplyT(func(v *StageSpec) StageSpec {
		if v != nil {
			return *v
		}
		var ret StageSpec
		return ret
	}).(StageSpecOutput)
}

func (o StageSpecPtrOutput) PromotionTemplate() StageSpecPromotionTemplatePtrOutput {
	return o.ApplyT(func(v *StageSpec) *StageSpecPromotionTemplate {
		if v == nil {
			return nil
		}
		return v.PromotionTemplate
	}).(StageSpecPromotionTemplatePtrOutput)
}

// RequestedFreight expresses the Stage's need for certain pieces of Freight,
// each having originated from a particular Warehouse. This list must be
// non-empty. In the common case, a Stage will request Freight having
// originated from just one specific Warehouse. In advanced cases, requesting
// Freight from multiple Warehouses provides a method of advancing new
// artifacts of different types through parallel pipelines at different
// speeds. This can be useful, for instance, if a Stage is home to multiple
// microservices that are independently versioned.
func (o StageSpecPtrOutput) RequestedFreight() StageSpecRequestedFreightArrayOutput {
	return o.ApplyT(func(v *StageSpec) []StageSpecRequestedFreight {
		if v == nil {
			return nil
		}
		return v.RequestedFreight
	}).(StageSpecRequestedFreightArrayOutput)
}

// Shard is the name of the shard that this Stage belongs to. This is an
// optional field. If not specified, the Stage will belong to the default
// shard. A defaulting webhook will sync the value of the
// kargo.akuity.io/shard label with the value of this field. When this field
// is empty, the webhook will ensure that label is absent.
func (o StageSpecPtrOutput) Shard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpec) *string {
		if v == nil {
			return nil
		}
		return v.Shard
	}).(pulumi.StringPtrOutput)
}

// Vars is a list of variables that can be referenced anywhere in the
// StageSpec that supports expressions. For example, the PromotionTemplate
// and arguments of the Verification.
func (o StageSpecPtrOutput) Vars() StageSpecVarsArrayOutput {
	return o.ApplyT(func(v *StageSpec) []StageSpecVars {
		if v == nil {
			return nil
		}
		return v.Vars
	}).(StageSpecVarsArrayOutput)
}

func (o StageSpecPtrOutput) Verification() StageSpecVerificationPtrOutput {
	return o.ApplyT(func(v *StageSpec) *StageSpecVerification {
		if v == nil {
			return nil
		}
		return v.Verification
	}).(StageSpecVerificationPtrOutput)
}

// Spec describes sources of Freight used by the Stage and how to incorporate
// Freight into the Stage.
type StageSpecPatch struct {
	PromotionTemplate *StageSpecPromotionTemplatePatch `pulumi:"promotionTemplate"`
	// RequestedFreight expresses the Stage's need for certain pieces of Freight,
	// each having originated from a particular Warehouse. This list must be
	// non-empty. In the common case, a Stage will request Freight having
	// originated from just one specific Warehouse. In advanced cases, requesting
	// Freight from multiple Warehouses provides a method of advancing new
	// artifacts of different types through parallel pipelines at different
	// speeds. This can be useful, for instance, if a Stage is home to multiple
	// microservices that are independently versioned.
	RequestedFreight []StageSpecRequestedFreightPatch `pulumi:"requestedFreight"`
	// Shard is the name of the shard that this Stage belongs to. This is an
	// optional field. If not specified, the Stage will belong to the default
	// shard. A defaulting webhook will sync the value of the
	// kargo.akuity.io/shard label with the value of this field. When this field
	// is empty, the webhook will ensure that label is absent.
	Shard *string `pulumi:"shard"`
	// Vars is a list of variables that can be referenced anywhere in the
	// StageSpec that supports expressions. For example, the PromotionTemplate
	// and arguments of the Verification.
	Vars         []StageSpecVarsPatch        `pulumi:"vars"`
	Verification *StageSpecVerificationPatch `pulumi:"verification"`
}

// StageSpecPatchInput is an input type that accepts StageSpecPatchArgs and StageSpecPatchOutput values.
// You can construct a concrete instance of `StageSpecPatchInput` via:
//
//	StageSpecPatchArgs{...}
type StageSpecPatchInput interface {
	pulumi.Input

	ToStageSpecPatchOutput() StageSpecPatchOutput
	ToStageSpecPatchOutputWithContext(context.Context) StageSpecPatchOutput
}

// Spec describes sources of Freight used by the Stage and how to incorporate
// Freight into the Stage.
type StageSpecPatchArgs struct {
	PromotionTemplate StageSpecPromotionTemplatePatchPtrInput `pulumi:"promotionTemplate"`
	// RequestedFreight expresses the Stage's need for certain pieces of Freight,
	// each having originated from a particular Warehouse. This list must be
	// non-empty. In the common case, a Stage will request Freight having
	// originated from just one specific Warehouse. In advanced cases, requesting
	// Freight from multiple Warehouses provides a method of advancing new
	// artifacts of different types through parallel pipelines at different
	// speeds. This can be useful, for instance, if a Stage is home to multiple
	// microservices that are independently versioned.
	RequestedFreight StageSpecRequestedFreightPatchArrayInput `pulumi:"requestedFreight"`
	// Shard is the name of the shard that this Stage belongs to. This is an
	// optional field. If not specified, the Stage will belong to the default
	// shard. A defaulting webhook will sync the value of the
	// kargo.akuity.io/shard label with the value of this field. When this field
	// is empty, the webhook will ensure that label is absent.
	Shard pulumi.StringPtrInput `pulumi:"shard"`
	// Vars is a list of variables that can be referenced anywhere in the
	// StageSpec that supports expressions. For example, the PromotionTemplate
	// and arguments of the Verification.
	Vars         StageSpecVarsPatchArrayInput       `pulumi:"vars"`
	Verification StageSpecVerificationPatchPtrInput `pulumi:"verification"`
}

func (StageSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPatch)(nil)).Elem()
}

func (i StageSpecPatchArgs) ToStageSpecPatchOutput() StageSpecPatchOutput {
	return i.ToStageSpecPatchOutputWithContext(context.Background())
}

func (i StageSpecPatchArgs) ToStageSpecPatchOutputWithContext(ctx context.Context) StageSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPatchOutput)
}

func (i StageSpecPatchArgs) ToStageSpecPatchPtrOutput() StageSpecPatchPtrOutput {
	return i.ToStageSpecPatchPtrOutputWithContext(context.Background())
}

func (i StageSpecPatchArgs) ToStageSpecPatchPtrOutputWithContext(ctx context.Context) StageSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPatchOutput).ToStageSpecPatchPtrOutputWithContext(ctx)
}

// StageSpecPatchPtrInput is an input type that accepts StageSpecPatchArgs, StageSpecPatchPtr and StageSpecPatchPtrOutput values.
// You can construct a concrete instance of `StageSpecPatchPtrInput` via:
//
//	        StageSpecPatchArgs{...}
//
//	or:
//
//	        nil
type StageSpecPatchPtrInput interface {
	pulumi.Input

	ToStageSpecPatchPtrOutput() StageSpecPatchPtrOutput
	ToStageSpecPatchPtrOutputWithContext(context.Context) StageSpecPatchPtrOutput
}

type stageSpecPatchPtrType StageSpecPatchArgs

func StageSpecPatchPtr(v *StageSpecPatchArgs) StageSpecPatchPtrInput {
	return (*stageSpecPatchPtrType)(v)
}

func (*stageSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPatch)(nil)).Elem()
}

func (i *stageSpecPatchPtrType) ToStageSpecPatchPtrOutput() StageSpecPatchPtrOutput {
	return i.ToStageSpecPatchPtrOutputWithContext(context.Background())
}

func (i *stageSpecPatchPtrType) ToStageSpecPatchPtrOutputWithContext(ctx context.Context) StageSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPatchPtrOutput)
}

// Spec describes sources of Freight used by the Stage and how to incorporate
// Freight into the Stage.
type StageSpecPatchOutput struct{ *pulumi.OutputState }

func (StageSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPatch)(nil)).Elem()
}

func (o StageSpecPatchOutput) ToStageSpecPatchOutput() StageSpecPatchOutput {
	return o
}

func (o StageSpecPatchOutput) ToStageSpecPatchOutputWithContext(ctx context.Context) StageSpecPatchOutput {
	return o
}

func (o StageSpecPatchOutput) ToStageSpecPatchPtrOutput() StageSpecPatchPtrOutput {
	return o.ToStageSpecPatchPtrOutputWithContext(context.Background())
}

func (o StageSpecPatchOutput) ToStageSpecPatchPtrOutputWithContext(ctx context.Context) StageSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecPatch) *StageSpecPatch {
		return &v
	}).(StageSpecPatchPtrOutput)
}

func (o StageSpecPatchOutput) PromotionTemplate() StageSpecPromotionTemplatePatchPtrOutput {
	return o.ApplyT(func(v StageSpecPatch) *StageSpecPromotionTemplatePatch { return v.PromotionTemplate }).(StageSpecPromotionTemplatePatchPtrOutput)
}

// RequestedFreight expresses the Stage's need for certain pieces of Freight,
// each having originated from a particular Warehouse. This list must be
// non-empty. In the common case, a Stage will request Freight having
// originated from just one specific Warehouse. In advanced cases, requesting
// Freight from multiple Warehouses provides a method of advancing new
// artifacts of different types through parallel pipelines at different
// speeds. This can be useful, for instance, if a Stage is home to multiple
// microservices that are independently versioned.
func (o StageSpecPatchOutput) RequestedFreight() StageSpecRequestedFreightPatchArrayOutput {
	return o.ApplyT(func(v StageSpecPatch) []StageSpecRequestedFreightPatch { return v.RequestedFreight }).(StageSpecRequestedFreightPatchArrayOutput)
}

// Shard is the name of the shard that this Stage belongs to. This is an
// optional field. If not specified, the Stage will belong to the default
// shard. A defaulting webhook will sync the value of the
// kargo.akuity.io/shard label with the value of this field. When this field
// is empty, the webhook will ensure that label is absent.
func (o StageSpecPatchOutput) Shard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPatch) *string { return v.Shard }).(pulumi.StringPtrOutput)
}

// Vars is a list of variables that can be referenced anywhere in the
// StageSpec that supports expressions. For example, the PromotionTemplate
// and arguments of the Verification.
func (o StageSpecPatchOutput) Vars() StageSpecVarsPatchArrayOutput {
	return o.ApplyT(func(v StageSpecPatch) []StageSpecVarsPatch { return v.Vars }).(StageSpecVarsPatchArrayOutput)
}

func (o StageSpecPatchOutput) Verification() StageSpecVerificationPatchPtrOutput {
	return o.ApplyT(func(v StageSpecPatch) *StageSpecVerificationPatch { return v.Verification }).(StageSpecVerificationPatchPtrOutput)
}

type StageSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (StageSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPatch)(nil)).Elem()
}

func (o StageSpecPatchPtrOutput) ToStageSpecPatchPtrOutput() StageSpecPatchPtrOutput {
	return o
}

func (o StageSpecPatchPtrOutput) ToStageSpecPatchPtrOutputWithContext(ctx context.Context) StageSpecPatchPtrOutput {
	return o
}

func (o StageSpecPatchPtrOutput) Elem() StageSpecPatchOutput {
	return o.ApplyT(func(v *StageSpecPatch) StageSpecPatch {
		if v != nil {
			return *v
		}
		var ret StageSpecPatch
		return ret
	}).(StageSpecPatchOutput)
}

func (o StageSpecPatchPtrOutput) PromotionTemplate() StageSpecPromotionTemplatePatchPtrOutput {
	return o.ApplyT(func(v *StageSpecPatch) *StageSpecPromotionTemplatePatch {
		if v == nil {
			return nil
		}
		return v.PromotionTemplate
	}).(StageSpecPromotionTemplatePatchPtrOutput)
}

// RequestedFreight expresses the Stage's need for certain pieces of Freight,
// each having originated from a particular Warehouse. This list must be
// non-empty. In the common case, a Stage will request Freight having
// originated from just one specific Warehouse. In advanced cases, requesting
// Freight from multiple Warehouses provides a method of advancing new
// artifacts of different types through parallel pipelines at different
// speeds. This can be useful, for instance, if a Stage is home to multiple
// microservices that are independently versioned.
func (o StageSpecPatchPtrOutput) RequestedFreight() StageSpecRequestedFreightPatchArrayOutput {
	return o.ApplyT(func(v *StageSpecPatch) []StageSpecRequestedFreightPatch {
		if v == nil {
			return nil
		}
		return v.RequestedFreight
	}).(StageSpecRequestedFreightPatchArrayOutput)
}

// Shard is the name of the shard that this Stage belongs to. This is an
// optional field. If not specified, the Stage will belong to the default
// shard. A defaulting webhook will sync the value of the
// kargo.akuity.io/shard label with the value of this field. When this field
// is empty, the webhook will ensure that label is absent.
func (o StageSpecPatchPtrOutput) Shard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Shard
	}).(pulumi.StringPtrOutput)
}

// Vars is a list of variables that can be referenced anywhere in the
// StageSpec that supports expressions. For example, the PromotionTemplate
// and arguments of the Verification.
func (o StageSpecPatchPtrOutput) Vars() StageSpecVarsPatchArrayOutput {
	return o.ApplyT(func(v *StageSpecPatch) []StageSpecVarsPatch {
		if v == nil {
			return nil
		}
		return v.Vars
	}).(StageSpecVarsPatchArrayOutput)
}

func (o StageSpecPatchPtrOutput) Verification() StageSpecVerificationPatchPtrOutput {
	return o.ApplyT(func(v *StageSpecPatch) *StageSpecVerificationPatch {
		if v == nil {
			return nil
		}
		return v.Verification
	}).(StageSpecVerificationPatchPtrOutput)
}

// PromotionTemplate describes how to incorporate Freight into the Stage
// using a Promotion.
type StageSpecPromotionTemplate struct {
	Spec *StageSpecPromotionTemplateSpec `pulumi:"spec"`
}

// StageSpecPromotionTemplateInput is an input type that accepts StageSpecPromotionTemplateArgs and StageSpecPromotionTemplateOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateInput` via:
//
//	StageSpecPromotionTemplateArgs{...}
type StageSpecPromotionTemplateInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateOutput() StageSpecPromotionTemplateOutput
	ToStageSpecPromotionTemplateOutputWithContext(context.Context) StageSpecPromotionTemplateOutput
}

// PromotionTemplate describes how to incorporate Freight into the Stage
// using a Promotion.
type StageSpecPromotionTemplateArgs struct {
	Spec StageSpecPromotionTemplateSpecPtrInput `pulumi:"spec"`
}

func (StageSpecPromotionTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplate)(nil)).Elem()
}

func (i StageSpecPromotionTemplateArgs) ToStageSpecPromotionTemplateOutput() StageSpecPromotionTemplateOutput {
	return i.ToStageSpecPromotionTemplateOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateArgs) ToStageSpecPromotionTemplateOutputWithContext(ctx context.Context) StageSpecPromotionTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateOutput)
}

func (i StageSpecPromotionTemplateArgs) ToStageSpecPromotionTemplatePtrOutput() StageSpecPromotionTemplatePtrOutput {
	return i.ToStageSpecPromotionTemplatePtrOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateArgs) ToStageSpecPromotionTemplatePtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateOutput).ToStageSpecPromotionTemplatePtrOutputWithContext(ctx)
}

// StageSpecPromotionTemplatePtrInput is an input type that accepts StageSpecPromotionTemplateArgs, StageSpecPromotionTemplatePtr and StageSpecPromotionTemplatePtrOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplatePtrInput` via:
//
//	        StageSpecPromotionTemplateArgs{...}
//
//	or:
//
//	        nil
type StageSpecPromotionTemplatePtrInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplatePtrOutput() StageSpecPromotionTemplatePtrOutput
	ToStageSpecPromotionTemplatePtrOutputWithContext(context.Context) StageSpecPromotionTemplatePtrOutput
}

type stageSpecPromotionTemplatePtrType StageSpecPromotionTemplateArgs

func StageSpecPromotionTemplatePtr(v *StageSpecPromotionTemplateArgs) StageSpecPromotionTemplatePtrInput {
	return (*stageSpecPromotionTemplatePtrType)(v)
}

func (*stageSpecPromotionTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplate)(nil)).Elem()
}

func (i *stageSpecPromotionTemplatePtrType) ToStageSpecPromotionTemplatePtrOutput() StageSpecPromotionTemplatePtrOutput {
	return i.ToStageSpecPromotionTemplatePtrOutputWithContext(context.Background())
}

func (i *stageSpecPromotionTemplatePtrType) ToStageSpecPromotionTemplatePtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplatePtrOutput)
}

// PromotionTemplate describes how to incorporate Freight into the Stage
// using a Promotion.
type StageSpecPromotionTemplateOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplate)(nil)).Elem()
}

func (o StageSpecPromotionTemplateOutput) ToStageSpecPromotionTemplateOutput() StageSpecPromotionTemplateOutput {
	return o
}

func (o StageSpecPromotionTemplateOutput) ToStageSpecPromotionTemplateOutputWithContext(ctx context.Context) StageSpecPromotionTemplateOutput {
	return o
}

func (o StageSpecPromotionTemplateOutput) ToStageSpecPromotionTemplatePtrOutput() StageSpecPromotionTemplatePtrOutput {
	return o.ToStageSpecPromotionTemplatePtrOutputWithContext(context.Background())
}

func (o StageSpecPromotionTemplateOutput) ToStageSpecPromotionTemplatePtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecPromotionTemplate) *StageSpecPromotionTemplate {
		return &v
	}).(StageSpecPromotionTemplatePtrOutput)
}

func (o StageSpecPromotionTemplateOutput) Spec() StageSpecPromotionTemplateSpecPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplate) *StageSpecPromotionTemplateSpec { return v.Spec }).(StageSpecPromotionTemplateSpecPtrOutput)
}

type StageSpecPromotionTemplatePtrOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplate)(nil)).Elem()
}

func (o StageSpecPromotionTemplatePtrOutput) ToStageSpecPromotionTemplatePtrOutput() StageSpecPromotionTemplatePtrOutput {
	return o
}

func (o StageSpecPromotionTemplatePtrOutput) ToStageSpecPromotionTemplatePtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplatePtrOutput {
	return o
}

func (o StageSpecPromotionTemplatePtrOutput) Elem() StageSpecPromotionTemplateOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplate) StageSpecPromotionTemplate {
		if v != nil {
			return *v
		}
		var ret StageSpecPromotionTemplate
		return ret
	}).(StageSpecPromotionTemplateOutput)
}

func (o StageSpecPromotionTemplatePtrOutput) Spec() StageSpecPromotionTemplateSpecPtrOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplate) *StageSpecPromotionTemplateSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(StageSpecPromotionTemplateSpecPtrOutput)
}

// PromotionTemplate describes how to incorporate Freight into the Stage
// using a Promotion.
type StageSpecPromotionTemplatePatch struct {
	Spec *StageSpecPromotionTemplateSpecPatch `pulumi:"spec"`
}

// StageSpecPromotionTemplatePatchInput is an input type that accepts StageSpecPromotionTemplatePatchArgs and StageSpecPromotionTemplatePatchOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplatePatchInput` via:
//
//	StageSpecPromotionTemplatePatchArgs{...}
type StageSpecPromotionTemplatePatchInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplatePatchOutput() StageSpecPromotionTemplatePatchOutput
	ToStageSpecPromotionTemplatePatchOutputWithContext(context.Context) StageSpecPromotionTemplatePatchOutput
}

// PromotionTemplate describes how to incorporate Freight into the Stage
// using a Promotion.
type StageSpecPromotionTemplatePatchArgs struct {
	Spec StageSpecPromotionTemplateSpecPatchPtrInput `pulumi:"spec"`
}

func (StageSpecPromotionTemplatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplatePatch)(nil)).Elem()
}

func (i StageSpecPromotionTemplatePatchArgs) ToStageSpecPromotionTemplatePatchOutput() StageSpecPromotionTemplatePatchOutput {
	return i.ToStageSpecPromotionTemplatePatchOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplatePatchArgs) ToStageSpecPromotionTemplatePatchOutputWithContext(ctx context.Context) StageSpecPromotionTemplatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplatePatchOutput)
}

func (i StageSpecPromotionTemplatePatchArgs) ToStageSpecPromotionTemplatePatchPtrOutput() StageSpecPromotionTemplatePatchPtrOutput {
	return i.ToStageSpecPromotionTemplatePatchPtrOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplatePatchArgs) ToStageSpecPromotionTemplatePatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplatePatchOutput).ToStageSpecPromotionTemplatePatchPtrOutputWithContext(ctx)
}

// StageSpecPromotionTemplatePatchPtrInput is an input type that accepts StageSpecPromotionTemplatePatchArgs, StageSpecPromotionTemplatePatchPtr and StageSpecPromotionTemplatePatchPtrOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplatePatchPtrInput` via:
//
//	        StageSpecPromotionTemplatePatchArgs{...}
//
//	or:
//
//	        nil
type StageSpecPromotionTemplatePatchPtrInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplatePatchPtrOutput() StageSpecPromotionTemplatePatchPtrOutput
	ToStageSpecPromotionTemplatePatchPtrOutputWithContext(context.Context) StageSpecPromotionTemplatePatchPtrOutput
}

type stageSpecPromotionTemplatePatchPtrType StageSpecPromotionTemplatePatchArgs

func StageSpecPromotionTemplatePatchPtr(v *StageSpecPromotionTemplatePatchArgs) StageSpecPromotionTemplatePatchPtrInput {
	return (*stageSpecPromotionTemplatePatchPtrType)(v)
}

func (*stageSpecPromotionTemplatePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplatePatch)(nil)).Elem()
}

func (i *stageSpecPromotionTemplatePatchPtrType) ToStageSpecPromotionTemplatePatchPtrOutput() StageSpecPromotionTemplatePatchPtrOutput {
	return i.ToStageSpecPromotionTemplatePatchPtrOutputWithContext(context.Background())
}

func (i *stageSpecPromotionTemplatePatchPtrType) ToStageSpecPromotionTemplatePatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplatePatchPtrOutput)
}

// PromotionTemplate describes how to incorporate Freight into the Stage
// using a Promotion.
type StageSpecPromotionTemplatePatchOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplatePatch)(nil)).Elem()
}

func (o StageSpecPromotionTemplatePatchOutput) ToStageSpecPromotionTemplatePatchOutput() StageSpecPromotionTemplatePatchOutput {
	return o
}

func (o StageSpecPromotionTemplatePatchOutput) ToStageSpecPromotionTemplatePatchOutputWithContext(ctx context.Context) StageSpecPromotionTemplatePatchOutput {
	return o
}

func (o StageSpecPromotionTemplatePatchOutput) ToStageSpecPromotionTemplatePatchPtrOutput() StageSpecPromotionTemplatePatchPtrOutput {
	return o.ToStageSpecPromotionTemplatePatchPtrOutputWithContext(context.Background())
}

func (o StageSpecPromotionTemplatePatchOutput) ToStageSpecPromotionTemplatePatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplatePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecPromotionTemplatePatch) *StageSpecPromotionTemplatePatch {
		return &v
	}).(StageSpecPromotionTemplatePatchPtrOutput)
}

func (o StageSpecPromotionTemplatePatchOutput) Spec() StageSpecPromotionTemplateSpecPatchPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplatePatch) *StageSpecPromotionTemplateSpecPatch { return v.Spec }).(StageSpecPromotionTemplateSpecPatchPtrOutput)
}

type StageSpecPromotionTemplatePatchPtrOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplatePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplatePatch)(nil)).Elem()
}

func (o StageSpecPromotionTemplatePatchPtrOutput) ToStageSpecPromotionTemplatePatchPtrOutput() StageSpecPromotionTemplatePatchPtrOutput {
	return o
}

func (o StageSpecPromotionTemplatePatchPtrOutput) ToStageSpecPromotionTemplatePatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplatePatchPtrOutput {
	return o
}

func (o StageSpecPromotionTemplatePatchPtrOutput) Elem() StageSpecPromotionTemplatePatchOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplatePatch) StageSpecPromotionTemplatePatch {
		if v != nil {
			return *v
		}
		var ret StageSpecPromotionTemplatePatch
		return ret
	}).(StageSpecPromotionTemplatePatchOutput)
}

func (o StageSpecPromotionTemplatePatchPtrOutput) Spec() StageSpecPromotionTemplateSpecPatchPtrOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplatePatch) *StageSpecPromotionTemplateSpecPatch {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(StageSpecPromotionTemplateSpecPatchPtrOutput)
}

// PromotionTemplateSpec describes the (partial) specification of a Promotion
// for a Stage. This is a template that can be used to create a Promotion for a
// Stage.
type StageSpecPromotionTemplateSpec struct {
	// Steps specifies the directives to be executed as part of a Promotion.
	// The order in which the directives are executed is the order in which they
	// are listed in this field.
	Steps []StageSpecPromotionTemplateSpecSteps `pulumi:"steps"`
	// Vars is a list of variables that can be referenced by expressions in
	// promotion steps.
	Vars []StageSpecPromotionTemplateSpecVars `pulumi:"vars"`
}

// StageSpecPromotionTemplateSpecInput is an input type that accepts StageSpecPromotionTemplateSpecArgs and StageSpecPromotionTemplateSpecOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecInput` via:
//
//	StageSpecPromotionTemplateSpecArgs{...}
type StageSpecPromotionTemplateSpecInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecOutput() StageSpecPromotionTemplateSpecOutput
	ToStageSpecPromotionTemplateSpecOutputWithContext(context.Context) StageSpecPromotionTemplateSpecOutput
}

// PromotionTemplateSpec describes the (partial) specification of a Promotion
// for a Stage. This is a template that can be used to create a Promotion for a
// Stage.
type StageSpecPromotionTemplateSpecArgs struct {
	// Steps specifies the directives to be executed as part of a Promotion.
	// The order in which the directives are executed is the order in which they
	// are listed in this field.
	Steps StageSpecPromotionTemplateSpecStepsArrayInput `pulumi:"steps"`
	// Vars is a list of variables that can be referenced by expressions in
	// promotion steps.
	Vars StageSpecPromotionTemplateSpecVarsArrayInput `pulumi:"vars"`
}

func (StageSpecPromotionTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpec)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecArgs) ToStageSpecPromotionTemplateSpecOutput() StageSpecPromotionTemplateSpecOutput {
	return i.ToStageSpecPromotionTemplateSpecOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecArgs) ToStageSpecPromotionTemplateSpecOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecOutput)
}

func (i StageSpecPromotionTemplateSpecArgs) ToStageSpecPromotionTemplateSpecPtrOutput() StageSpecPromotionTemplateSpecPtrOutput {
	return i.ToStageSpecPromotionTemplateSpecPtrOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecArgs) ToStageSpecPromotionTemplateSpecPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecOutput).ToStageSpecPromotionTemplateSpecPtrOutputWithContext(ctx)
}

// StageSpecPromotionTemplateSpecPtrInput is an input type that accepts StageSpecPromotionTemplateSpecArgs, StageSpecPromotionTemplateSpecPtr and StageSpecPromotionTemplateSpecPtrOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecPtrInput` via:
//
//	        StageSpecPromotionTemplateSpecArgs{...}
//
//	or:
//
//	        nil
type StageSpecPromotionTemplateSpecPtrInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecPtrOutput() StageSpecPromotionTemplateSpecPtrOutput
	ToStageSpecPromotionTemplateSpecPtrOutputWithContext(context.Context) StageSpecPromotionTemplateSpecPtrOutput
}

type stageSpecPromotionTemplateSpecPtrType StageSpecPromotionTemplateSpecArgs

func StageSpecPromotionTemplateSpecPtr(v *StageSpecPromotionTemplateSpecArgs) StageSpecPromotionTemplateSpecPtrInput {
	return (*stageSpecPromotionTemplateSpecPtrType)(v)
}

func (*stageSpecPromotionTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplateSpec)(nil)).Elem()
}

func (i *stageSpecPromotionTemplateSpecPtrType) ToStageSpecPromotionTemplateSpecPtrOutput() StageSpecPromotionTemplateSpecPtrOutput {
	return i.ToStageSpecPromotionTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *stageSpecPromotionTemplateSpecPtrType) ToStageSpecPromotionTemplateSpecPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecPtrOutput)
}

// PromotionTemplateSpec describes the (partial) specification of a Promotion
// for a Stage. This is a template that can be used to create a Promotion for a
// Stage.
type StageSpecPromotionTemplateSpecOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpec)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecOutput) ToStageSpecPromotionTemplateSpecOutput() StageSpecPromotionTemplateSpecOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecOutput) ToStageSpecPromotionTemplateSpecOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecOutput) ToStageSpecPromotionTemplateSpecPtrOutput() StageSpecPromotionTemplateSpecPtrOutput {
	return o.ToStageSpecPromotionTemplateSpecPtrOutputWithContext(context.Background())
}

func (o StageSpecPromotionTemplateSpecOutput) ToStageSpecPromotionTemplateSpecPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecPromotionTemplateSpec) *StageSpecPromotionTemplateSpec {
		return &v
	}).(StageSpecPromotionTemplateSpecPtrOutput)
}

// Steps specifies the directives to be executed as part of a Promotion.
// The order in which the directives are executed is the order in which they
// are listed in this field.
func (o StageSpecPromotionTemplateSpecOutput) Steps() StageSpecPromotionTemplateSpecStepsArrayOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpec) []StageSpecPromotionTemplateSpecSteps { return v.Steps }).(StageSpecPromotionTemplateSpecStepsArrayOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// promotion steps.
func (o StageSpecPromotionTemplateSpecOutput) Vars() StageSpecPromotionTemplateSpecVarsArrayOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpec) []StageSpecPromotionTemplateSpecVars { return v.Vars }).(StageSpecPromotionTemplateSpecVarsArrayOutput)
}

type StageSpecPromotionTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplateSpec)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecPtrOutput) ToStageSpecPromotionTemplateSpecPtrOutput() StageSpecPromotionTemplateSpecPtrOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecPtrOutput) ToStageSpecPromotionTemplateSpecPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecPtrOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecPtrOutput) Elem() StageSpecPromotionTemplateSpecOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpec) StageSpecPromotionTemplateSpec {
		if v != nil {
			return *v
		}
		var ret StageSpecPromotionTemplateSpec
		return ret
	}).(StageSpecPromotionTemplateSpecOutput)
}

// Steps specifies the directives to be executed as part of a Promotion.
// The order in which the directives are executed is the order in which they
// are listed in this field.
func (o StageSpecPromotionTemplateSpecPtrOutput) Steps() StageSpecPromotionTemplateSpecStepsArrayOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpec) []StageSpecPromotionTemplateSpecSteps {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(StageSpecPromotionTemplateSpecStepsArrayOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// promotion steps.
func (o StageSpecPromotionTemplateSpecPtrOutput) Vars() StageSpecPromotionTemplateSpecVarsArrayOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpec) []StageSpecPromotionTemplateSpecVars {
		if v == nil {
			return nil
		}
		return v.Vars
	}).(StageSpecPromotionTemplateSpecVarsArrayOutput)
}

// PromotionTemplateSpec describes the (partial) specification of a Promotion
// for a Stage. This is a template that can be used to create a Promotion for a
// Stage.
type StageSpecPromotionTemplateSpecPatch struct {
	// Steps specifies the directives to be executed as part of a Promotion.
	// The order in which the directives are executed is the order in which they
	// are listed in this field.
	Steps []StageSpecPromotionTemplateSpecStepsPatch `pulumi:"steps"`
	// Vars is a list of variables that can be referenced by expressions in
	// promotion steps.
	Vars []StageSpecPromotionTemplateSpecVarsPatch `pulumi:"vars"`
}

// StageSpecPromotionTemplateSpecPatchInput is an input type that accepts StageSpecPromotionTemplateSpecPatchArgs and StageSpecPromotionTemplateSpecPatchOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecPatchInput` via:
//
//	StageSpecPromotionTemplateSpecPatchArgs{...}
type StageSpecPromotionTemplateSpecPatchInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecPatchOutput() StageSpecPromotionTemplateSpecPatchOutput
	ToStageSpecPromotionTemplateSpecPatchOutputWithContext(context.Context) StageSpecPromotionTemplateSpecPatchOutput
}

// PromotionTemplateSpec describes the (partial) specification of a Promotion
// for a Stage. This is a template that can be used to create a Promotion for a
// Stage.
type StageSpecPromotionTemplateSpecPatchArgs struct {
	// Steps specifies the directives to be executed as part of a Promotion.
	// The order in which the directives are executed is the order in which they
	// are listed in this field.
	Steps StageSpecPromotionTemplateSpecStepsPatchArrayInput `pulumi:"steps"`
	// Vars is a list of variables that can be referenced by expressions in
	// promotion steps.
	Vars StageSpecPromotionTemplateSpecVarsPatchArrayInput `pulumi:"vars"`
}

func (StageSpecPromotionTemplateSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecPatch)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecPatchArgs) ToStageSpecPromotionTemplateSpecPatchOutput() StageSpecPromotionTemplateSpecPatchOutput {
	return i.ToStageSpecPromotionTemplateSpecPatchOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecPatchArgs) ToStageSpecPromotionTemplateSpecPatchOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecPatchOutput)
}

func (i StageSpecPromotionTemplateSpecPatchArgs) ToStageSpecPromotionTemplateSpecPatchPtrOutput() StageSpecPromotionTemplateSpecPatchPtrOutput {
	return i.ToStageSpecPromotionTemplateSpecPatchPtrOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecPatchArgs) ToStageSpecPromotionTemplateSpecPatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecPatchOutput).ToStageSpecPromotionTemplateSpecPatchPtrOutputWithContext(ctx)
}

// StageSpecPromotionTemplateSpecPatchPtrInput is an input type that accepts StageSpecPromotionTemplateSpecPatchArgs, StageSpecPromotionTemplateSpecPatchPtr and StageSpecPromotionTemplateSpecPatchPtrOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecPatchPtrInput` via:
//
//	        StageSpecPromotionTemplateSpecPatchArgs{...}
//
//	or:
//
//	        nil
type StageSpecPromotionTemplateSpecPatchPtrInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecPatchPtrOutput() StageSpecPromotionTemplateSpecPatchPtrOutput
	ToStageSpecPromotionTemplateSpecPatchPtrOutputWithContext(context.Context) StageSpecPromotionTemplateSpecPatchPtrOutput
}

type stageSpecPromotionTemplateSpecPatchPtrType StageSpecPromotionTemplateSpecPatchArgs

func StageSpecPromotionTemplateSpecPatchPtr(v *StageSpecPromotionTemplateSpecPatchArgs) StageSpecPromotionTemplateSpecPatchPtrInput {
	return (*stageSpecPromotionTemplateSpecPatchPtrType)(v)
}

func (*stageSpecPromotionTemplateSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplateSpecPatch)(nil)).Elem()
}

func (i *stageSpecPromotionTemplateSpecPatchPtrType) ToStageSpecPromotionTemplateSpecPatchPtrOutput() StageSpecPromotionTemplateSpecPatchPtrOutput {
	return i.ToStageSpecPromotionTemplateSpecPatchPtrOutputWithContext(context.Background())
}

func (i *stageSpecPromotionTemplateSpecPatchPtrType) ToStageSpecPromotionTemplateSpecPatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecPatchPtrOutput)
}

// PromotionTemplateSpec describes the (partial) specification of a Promotion
// for a Stage. This is a template that can be used to create a Promotion for a
// Stage.
type StageSpecPromotionTemplateSpecPatchOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecPatch)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecPatchOutput) ToStageSpecPromotionTemplateSpecPatchOutput() StageSpecPromotionTemplateSpecPatchOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecPatchOutput) ToStageSpecPromotionTemplateSpecPatchOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecPatchOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecPatchOutput) ToStageSpecPromotionTemplateSpecPatchPtrOutput() StageSpecPromotionTemplateSpecPatchPtrOutput {
	return o.ToStageSpecPromotionTemplateSpecPatchPtrOutputWithContext(context.Background())
}

func (o StageSpecPromotionTemplateSpecPatchOutput) ToStageSpecPromotionTemplateSpecPatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecPromotionTemplateSpecPatch) *StageSpecPromotionTemplateSpecPatch {
		return &v
	}).(StageSpecPromotionTemplateSpecPatchPtrOutput)
}

// Steps specifies the directives to be executed as part of a Promotion.
// The order in which the directives are executed is the order in which they
// are listed in this field.
func (o StageSpecPromotionTemplateSpecPatchOutput) Steps() StageSpecPromotionTemplateSpecStepsPatchArrayOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecPatch) []StageSpecPromotionTemplateSpecStepsPatch { return v.Steps }).(StageSpecPromotionTemplateSpecStepsPatchArrayOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// promotion steps.
func (o StageSpecPromotionTemplateSpecPatchOutput) Vars() StageSpecPromotionTemplateSpecVarsPatchArrayOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecPatch) []StageSpecPromotionTemplateSpecVarsPatch { return v.Vars }).(StageSpecPromotionTemplateSpecVarsPatchArrayOutput)
}

type StageSpecPromotionTemplateSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplateSpecPatch)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecPatchPtrOutput) ToStageSpecPromotionTemplateSpecPatchPtrOutput() StageSpecPromotionTemplateSpecPatchPtrOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecPatchPtrOutput) ToStageSpecPromotionTemplateSpecPatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecPatchPtrOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecPatchPtrOutput) Elem() StageSpecPromotionTemplateSpecPatchOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecPatch) StageSpecPromotionTemplateSpecPatch {
		if v != nil {
			return *v
		}
		var ret StageSpecPromotionTemplateSpecPatch
		return ret
	}).(StageSpecPromotionTemplateSpecPatchOutput)
}

// Steps specifies the directives to be executed as part of a Promotion.
// The order in which the directives are executed is the order in which they
// are listed in this field.
func (o StageSpecPromotionTemplateSpecPatchPtrOutput) Steps() StageSpecPromotionTemplateSpecStepsPatchArrayOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecPatch) []StageSpecPromotionTemplateSpecStepsPatch {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(StageSpecPromotionTemplateSpecStepsPatchArrayOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// promotion steps.
func (o StageSpecPromotionTemplateSpecPatchPtrOutput) Vars() StageSpecPromotionTemplateSpecVarsPatchArrayOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecPatch) []StageSpecPromotionTemplateSpecVarsPatch {
		if v == nil {
			return nil
		}
		return v.Vars
	}).(StageSpecPromotionTemplateSpecVarsPatchArrayOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type StageSpecPromotionTemplateSpecSteps struct {
	// As is the alias this step can be referred to as.
	As *string `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config map[string]interface{} `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    *string                                   `pulumi:"if"`
	Retry *StageSpecPromotionTemplateSpecStepsRetry `pulumi:"retry"`
	Task  *StageSpecPromotionTemplateSpecStepsTask  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses *string `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars []StageSpecPromotionTemplateSpecStepsVars `pulumi:"vars"`
}

// StageSpecPromotionTemplateSpecStepsInput is an input type that accepts StageSpecPromotionTemplateSpecStepsArgs and StageSpecPromotionTemplateSpecStepsOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsInput` via:
//
//	StageSpecPromotionTemplateSpecStepsArgs{...}
type StageSpecPromotionTemplateSpecStepsInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsOutput() StageSpecPromotionTemplateSpecStepsOutput
	ToStageSpecPromotionTemplateSpecStepsOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsOutput
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type StageSpecPromotionTemplateSpecStepsArgs struct {
	// As is the alias this step can be referred to as.
	As pulumi.StringPtrInput `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config pulumi.MapInput `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError pulumi.BoolPtrInput `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    pulumi.StringPtrInput                            `pulumi:"if"`
	Retry StageSpecPromotionTemplateSpecStepsRetryPtrInput `pulumi:"retry"`
	Task  StageSpecPromotionTemplateSpecStepsTaskPtrInput  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses pulumi.StringPtrInput `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars StageSpecPromotionTemplateSpecStepsVarsArrayInput `pulumi:"vars"`
}

func (StageSpecPromotionTemplateSpecStepsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecSteps)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecStepsArgs) ToStageSpecPromotionTemplateSpecStepsOutput() StageSpecPromotionTemplateSpecStepsOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsArgs) ToStageSpecPromotionTemplateSpecStepsOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsOutput)
}

// StageSpecPromotionTemplateSpecStepsArrayInput is an input type that accepts StageSpecPromotionTemplateSpecStepsArray and StageSpecPromotionTemplateSpecStepsArrayOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsArrayInput` via:
//
//	StageSpecPromotionTemplateSpecStepsArray{ StageSpecPromotionTemplateSpecStepsArgs{...} }
type StageSpecPromotionTemplateSpecStepsArrayInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsArrayOutput() StageSpecPromotionTemplateSpecStepsArrayOutput
	ToStageSpecPromotionTemplateSpecStepsArrayOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsArrayOutput
}

type StageSpecPromotionTemplateSpecStepsArray []StageSpecPromotionTemplateSpecStepsInput

func (StageSpecPromotionTemplateSpecStepsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecPromotionTemplateSpecSteps)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecStepsArray) ToStageSpecPromotionTemplateSpecStepsArrayOutput() StageSpecPromotionTemplateSpecStepsArrayOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsArrayOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsArray) ToStageSpecPromotionTemplateSpecStepsArrayOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsArrayOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type StageSpecPromotionTemplateSpecStepsOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecSteps)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsOutput) ToStageSpecPromotionTemplateSpecStepsOutput() StageSpecPromotionTemplateSpecStepsOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsOutput) ToStageSpecPromotionTemplateSpecStepsOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsOutput {
	return o
}

// As is the alias this step can be referred to as.
func (o StageSpecPromotionTemplateSpecStepsOutput) As() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecSteps) *string { return v.As }).(pulumi.StringPtrOutput)
}

// Config is opaque configuration for the PromotionStep that is understood
// only by each PromotionStep's implementation. It is legal to utilize
// expressions in defining values at any level of this block.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o StageSpecPromotionTemplateSpecStepsOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecSteps) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// ContinueOnError is a boolean value that, if set to true, will cause the
// Promotion to continue executing the next step even if this step fails. It
// also will not permit this failure to impact the overall status of the
// Promotion.
func (o StageSpecPromotionTemplateSpecStepsOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecSteps) *bool { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// If is an optional expression that, if present, must evaluate to a boolean
// value. If the expression evaluates to false, the step will be skipped.
// If the expression does not evaluate to a boolean value, the step will be
// considered to have failed.
func (o StageSpecPromotionTemplateSpecStepsOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecSteps) *string { return v.If }).(pulumi.StringPtrOutput)
}

func (o StageSpecPromotionTemplateSpecStepsOutput) Retry() StageSpecPromotionTemplateSpecStepsRetryPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecSteps) *StageSpecPromotionTemplateSpecStepsRetry { return v.Retry }).(StageSpecPromotionTemplateSpecStepsRetryPtrOutput)
}

func (o StageSpecPromotionTemplateSpecStepsOutput) Task() StageSpecPromotionTemplateSpecStepsTaskPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecSteps) *StageSpecPromotionTemplateSpecStepsTask { return v.Task }).(StageSpecPromotionTemplateSpecStepsTaskPtrOutput)
}

// Uses identifies a runner that can execute this step.
func (o StageSpecPromotionTemplateSpecStepsOutput) Uses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecSteps) *string { return v.Uses }).(pulumi.StringPtrOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// the step's Config. The values override the values specified in the
// PromotionSpec.
func (o StageSpecPromotionTemplateSpecStepsOutput) Vars() StageSpecPromotionTemplateSpecStepsVarsArrayOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecSteps) []StageSpecPromotionTemplateSpecStepsVars { return v.Vars }).(StageSpecPromotionTemplateSpecStepsVarsArrayOutput)
}

type StageSpecPromotionTemplateSpecStepsArrayOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecPromotionTemplateSpecSteps)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsArrayOutput) ToStageSpecPromotionTemplateSpecStepsArrayOutput() StageSpecPromotionTemplateSpecStepsArrayOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsArrayOutput) ToStageSpecPromotionTemplateSpecStepsArrayOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsArrayOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsArrayOutput) Index(i pulumi.IntInput) StageSpecPromotionTemplateSpecStepsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecPromotionTemplateSpecSteps {
		return vs[0].([]StageSpecPromotionTemplateSpecSteps)[vs[1].(int)]
	}).(StageSpecPromotionTemplateSpecStepsOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type StageSpecPromotionTemplateSpecStepsPatch struct {
	// As is the alias this step can be referred to as.
	As *string `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config map[string]interface{} `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    *string                                        `pulumi:"if"`
	Retry *StageSpecPromotionTemplateSpecStepsRetryPatch `pulumi:"retry"`
	Task  *StageSpecPromotionTemplateSpecStepsTaskPatch  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses *string `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars []StageSpecPromotionTemplateSpecStepsVarsPatch `pulumi:"vars"`
}

// StageSpecPromotionTemplateSpecStepsPatchInput is an input type that accepts StageSpecPromotionTemplateSpecStepsPatchArgs and StageSpecPromotionTemplateSpecStepsPatchOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsPatchInput` via:
//
//	StageSpecPromotionTemplateSpecStepsPatchArgs{...}
type StageSpecPromotionTemplateSpecStepsPatchInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsPatchOutput() StageSpecPromotionTemplateSpecStepsPatchOutput
	ToStageSpecPromotionTemplateSpecStepsPatchOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsPatchOutput
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type StageSpecPromotionTemplateSpecStepsPatchArgs struct {
	// As is the alias this step can be referred to as.
	As pulumi.StringPtrInput `pulumi:"as"`
	// Config is opaque configuration for the PromotionStep that is understood
	// only by each PromotionStep's implementation. It is legal to utilize
	// expressions in defining values at any level of this block.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Config pulumi.MapInput `pulumi:"config"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError pulumi.BoolPtrInput `pulumi:"continueOnError"`
	// If is an optional expression that, if present, must evaluate to a boolean
	// value. If the expression evaluates to false, the step will be skipped.
	// If the expression does not evaluate to a boolean value, the step will be
	// considered to have failed.
	If    pulumi.StringPtrInput                                 `pulumi:"if"`
	Retry StageSpecPromotionTemplateSpecStepsRetryPatchPtrInput `pulumi:"retry"`
	Task  StageSpecPromotionTemplateSpecStepsTaskPatchPtrInput  `pulumi:"task"`
	// Uses identifies a runner that can execute this step.
	Uses pulumi.StringPtrInput `pulumi:"uses"`
	// Vars is a list of variables that can be referenced by expressions in
	// the step's Config. The values override the values specified in the
	// PromotionSpec.
	Vars StageSpecPromotionTemplateSpecStepsVarsPatchArrayInput `pulumi:"vars"`
}

func (StageSpecPromotionTemplateSpecStepsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsPatch)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecStepsPatchArgs) ToStageSpecPromotionTemplateSpecStepsPatchOutput() StageSpecPromotionTemplateSpecStepsPatchOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsPatchOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsPatchArgs) ToStageSpecPromotionTemplateSpecStepsPatchOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsPatchOutput)
}

// StageSpecPromotionTemplateSpecStepsPatchArrayInput is an input type that accepts StageSpecPromotionTemplateSpecStepsPatchArray and StageSpecPromotionTemplateSpecStepsPatchArrayOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsPatchArrayInput` via:
//
//	StageSpecPromotionTemplateSpecStepsPatchArray{ StageSpecPromotionTemplateSpecStepsPatchArgs{...} }
type StageSpecPromotionTemplateSpecStepsPatchArrayInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsPatchArrayOutput() StageSpecPromotionTemplateSpecStepsPatchArrayOutput
	ToStageSpecPromotionTemplateSpecStepsPatchArrayOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsPatchArrayOutput
}

type StageSpecPromotionTemplateSpecStepsPatchArray []StageSpecPromotionTemplateSpecStepsPatchInput

func (StageSpecPromotionTemplateSpecStepsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecPromotionTemplateSpecStepsPatch)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecStepsPatchArray) ToStageSpecPromotionTemplateSpecStepsPatchArrayOutput() StageSpecPromotionTemplateSpecStepsPatchArrayOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsPatchArrayOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsPatchArray) ToStageSpecPromotionTemplateSpecStepsPatchArrayOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsPatchArrayOutput)
}

// PromotionStep describes a directive to be executed as part of a Promotion.
type StageSpecPromotionTemplateSpecStepsPatchOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsPatch)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsPatchOutput) ToStageSpecPromotionTemplateSpecStepsPatchOutput() StageSpecPromotionTemplateSpecStepsPatchOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsPatchOutput) ToStageSpecPromotionTemplateSpecStepsPatchOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsPatchOutput {
	return o
}

// As is the alias this step can be referred to as.
func (o StageSpecPromotionTemplateSpecStepsPatchOutput) As() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsPatch) *string { return v.As }).(pulumi.StringPtrOutput)
}

// Config is opaque configuration for the PromotionStep that is understood
// only by each PromotionStep's implementation. It is legal to utilize
// expressions in defining values at any level of this block.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o StageSpecPromotionTemplateSpecStepsPatchOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsPatch) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// ContinueOnError is a boolean value that, if set to true, will cause the
// Promotion to continue executing the next step even if this step fails. It
// also will not permit this failure to impact the overall status of the
// Promotion.
func (o StageSpecPromotionTemplateSpecStepsPatchOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsPatch) *bool { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// If is an optional expression that, if present, must evaluate to a boolean
// value. If the expression evaluates to false, the step will be skipped.
// If the expression does not evaluate to a boolean value, the step will be
// considered to have failed.
func (o StageSpecPromotionTemplateSpecStepsPatchOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsPatch) *string { return v.If }).(pulumi.StringPtrOutput)
}

func (o StageSpecPromotionTemplateSpecStepsPatchOutput) Retry() StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsPatch) *StageSpecPromotionTemplateSpecStepsRetryPatch {
		return v.Retry
	}).(StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput)
}

func (o StageSpecPromotionTemplateSpecStepsPatchOutput) Task() StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsPatch) *StageSpecPromotionTemplateSpecStepsTaskPatch {
		return v.Task
	}).(StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput)
}

// Uses identifies a runner that can execute this step.
func (o StageSpecPromotionTemplateSpecStepsPatchOutput) Uses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsPatch) *string { return v.Uses }).(pulumi.StringPtrOutput)
}

// Vars is a list of variables that can be referenced by expressions in
// the step's Config. The values override the values specified in the
// PromotionSpec.
func (o StageSpecPromotionTemplateSpecStepsPatchOutput) Vars() StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsPatch) []StageSpecPromotionTemplateSpecStepsVarsPatch {
		return v.Vars
	}).(StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput)
}

type StageSpecPromotionTemplateSpecStepsPatchArrayOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecPromotionTemplateSpecStepsPatch)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsPatchArrayOutput) ToStageSpecPromotionTemplateSpecStepsPatchArrayOutput() StageSpecPromotionTemplateSpecStepsPatchArrayOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsPatchArrayOutput) ToStageSpecPromotionTemplateSpecStepsPatchArrayOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsPatchArrayOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsPatchArrayOutput) Index(i pulumi.IntInput) StageSpecPromotionTemplateSpecStepsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecPromotionTemplateSpecStepsPatch {
		return vs[0].([]StageSpecPromotionTemplateSpecStepsPatch)[vs[1].(int)]
	}).(StageSpecPromotionTemplateSpecStepsPatchOutput)
}

// Retry is the retry policy for this step.
type StageSpecPromotionTemplateSpecStepsRetry struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold *int `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout *string `pulumi:"timeout"`
}

// StageSpecPromotionTemplateSpecStepsRetryInput is an input type that accepts StageSpecPromotionTemplateSpecStepsRetryArgs and StageSpecPromotionTemplateSpecStepsRetryOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsRetryInput` via:
//
//	StageSpecPromotionTemplateSpecStepsRetryArgs{...}
type StageSpecPromotionTemplateSpecStepsRetryInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsRetryOutput() StageSpecPromotionTemplateSpecStepsRetryOutput
	ToStageSpecPromotionTemplateSpecStepsRetryOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsRetryOutput
}

// Retry is the retry policy for this step.
type StageSpecPromotionTemplateSpecStepsRetryArgs struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold pulumi.IntPtrInput `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (StageSpecPromotionTemplateSpecStepsRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsRetry)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecStepsRetryArgs) ToStageSpecPromotionTemplateSpecStepsRetryOutput() StageSpecPromotionTemplateSpecStepsRetryOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsRetryOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsRetryArgs) ToStageSpecPromotionTemplateSpecStepsRetryOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsRetryOutput)
}

func (i StageSpecPromotionTemplateSpecStepsRetryArgs) ToStageSpecPromotionTemplateSpecStepsRetryPtrOutput() StageSpecPromotionTemplateSpecStepsRetryPtrOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsRetryPtrOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsRetryArgs) ToStageSpecPromotionTemplateSpecStepsRetryPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsRetryOutput).ToStageSpecPromotionTemplateSpecStepsRetryPtrOutputWithContext(ctx)
}

// StageSpecPromotionTemplateSpecStepsRetryPtrInput is an input type that accepts StageSpecPromotionTemplateSpecStepsRetryArgs, StageSpecPromotionTemplateSpecStepsRetryPtr and StageSpecPromotionTemplateSpecStepsRetryPtrOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsRetryPtrInput` via:
//
//	        StageSpecPromotionTemplateSpecStepsRetryArgs{...}
//
//	or:
//
//	        nil
type StageSpecPromotionTemplateSpecStepsRetryPtrInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsRetryPtrOutput() StageSpecPromotionTemplateSpecStepsRetryPtrOutput
	ToStageSpecPromotionTemplateSpecStepsRetryPtrOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsRetryPtrOutput
}

type stageSpecPromotionTemplateSpecStepsRetryPtrType StageSpecPromotionTemplateSpecStepsRetryArgs

func StageSpecPromotionTemplateSpecStepsRetryPtr(v *StageSpecPromotionTemplateSpecStepsRetryArgs) StageSpecPromotionTemplateSpecStepsRetryPtrInput {
	return (*stageSpecPromotionTemplateSpecStepsRetryPtrType)(v)
}

func (*stageSpecPromotionTemplateSpecStepsRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplateSpecStepsRetry)(nil)).Elem()
}

func (i *stageSpecPromotionTemplateSpecStepsRetryPtrType) ToStageSpecPromotionTemplateSpecStepsRetryPtrOutput() StageSpecPromotionTemplateSpecStepsRetryPtrOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsRetryPtrOutputWithContext(context.Background())
}

func (i *stageSpecPromotionTemplateSpecStepsRetryPtrType) ToStageSpecPromotionTemplateSpecStepsRetryPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsRetryPtrOutput)
}

// Retry is the retry policy for this step.
type StageSpecPromotionTemplateSpecStepsRetryOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsRetry)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsRetryOutput) ToStageSpecPromotionTemplateSpecStepsRetryOutput() StageSpecPromotionTemplateSpecStepsRetryOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsRetryOutput) ToStageSpecPromotionTemplateSpecStepsRetryOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsRetryOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsRetryOutput) ToStageSpecPromotionTemplateSpecStepsRetryPtrOutput() StageSpecPromotionTemplateSpecStepsRetryPtrOutput {
	return o.ToStageSpecPromotionTemplateSpecStepsRetryPtrOutputWithContext(context.Background())
}

func (o StageSpecPromotionTemplateSpecStepsRetryOutput) ToStageSpecPromotionTemplateSpecStepsRetryPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsRetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecPromotionTemplateSpecStepsRetry) *StageSpecPromotionTemplateSpecStepsRetry {
		return &v
	}).(StageSpecPromotionTemplateSpecStepsRetryPtrOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o StageSpecPromotionTemplateSpecStepsRetryOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsRetry) *int { return v.ErrorThreshold }).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o StageSpecPromotionTemplateSpecStepsRetryOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsRetry) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type StageSpecPromotionTemplateSpecStepsRetryPtrOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplateSpecStepsRetry)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsRetryPtrOutput) ToStageSpecPromotionTemplateSpecStepsRetryPtrOutput() StageSpecPromotionTemplateSpecStepsRetryPtrOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsRetryPtrOutput) ToStageSpecPromotionTemplateSpecStepsRetryPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsRetryPtrOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsRetryPtrOutput) Elem() StageSpecPromotionTemplateSpecStepsRetryOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecStepsRetry) StageSpecPromotionTemplateSpecStepsRetry {
		if v != nil {
			return *v
		}
		var ret StageSpecPromotionTemplateSpecStepsRetry
		return ret
	}).(StageSpecPromotionTemplateSpecStepsRetryOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o StageSpecPromotionTemplateSpecStepsRetryPtrOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecStepsRetry) *int {
		if v == nil {
			return nil
		}
		return v.ErrorThreshold
	}).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o StageSpecPromotionTemplateSpecStepsRetryPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecStepsRetry) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Retry is the retry policy for this step.
type StageSpecPromotionTemplateSpecStepsRetryPatch struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold *int `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout *string `pulumi:"timeout"`
}

// StageSpecPromotionTemplateSpecStepsRetryPatchInput is an input type that accepts StageSpecPromotionTemplateSpecStepsRetryPatchArgs and StageSpecPromotionTemplateSpecStepsRetryPatchOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsRetryPatchInput` via:
//
//	StageSpecPromotionTemplateSpecStepsRetryPatchArgs{...}
type StageSpecPromotionTemplateSpecStepsRetryPatchInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsRetryPatchOutput() StageSpecPromotionTemplateSpecStepsRetryPatchOutput
	ToStageSpecPromotionTemplateSpecStepsRetryPatchOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsRetryPatchOutput
}

// Retry is the retry policy for this step.
type StageSpecPromotionTemplateSpecStepsRetryPatchArgs struct {
	// ErrorThreshold is the number of consecutive times the step must fail (for
	// any reason) before retries are abandoned and the entire Promotion is marked
	// as failed.
	//
	// If this field is set to 0, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also 0), the effective
	// default will be the system-wide default of 1.
	//
	// A value of 1 will cause the Promotion to be marked as failed after just
	// a single failure; i.e. no retries will be attempted.
	//
	// There is no option to specify an infinite number of retries using a value
	// such as -1.
	//
	// In a future release, Kargo is likely to become capable of distinguishing
	// between recoverable and non-recoverable step failures. At that time, it is
	// planned that unrecoverable failures will not be subject to this threshold
	// and will immediately cause the Promotion to be marked as failed without
	// further condition.
	ErrorThreshold pulumi.IntPtrInput `pulumi:"errorThreshold"`
	// Timeout is the soft maximum interval in which a step that returns a Running
	// status (which typically indicates it's waiting for something to happen)
	// may be retried.
	//
	// The maximum is a soft one because the check for whether the interval has
	// elapsed occurs AFTER the step has run. This effectively means a step may
	// run ONCE beyond the close of the interval.
	//
	// If this field is set to nil, the effective default will be a step-specific
	// one. If no step-specific default exists (i.e. is also nil), the effective
	// default will be the system-wide default of 0.
	//
	// A value of 0 will cause the step to be retried indefinitely unless the
	// ErrorThreshold is reached.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (StageSpecPromotionTemplateSpecStepsRetryPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsRetryPatch)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecStepsRetryPatchArgs) ToStageSpecPromotionTemplateSpecStepsRetryPatchOutput() StageSpecPromotionTemplateSpecStepsRetryPatchOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsRetryPatchOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsRetryPatchArgs) ToStageSpecPromotionTemplateSpecStepsRetryPatchOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsRetryPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsRetryPatchOutput)
}

func (i StageSpecPromotionTemplateSpecStepsRetryPatchArgs) ToStageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput() StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsRetryPatchPtrOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsRetryPatchArgs) ToStageSpecPromotionTemplateSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsRetryPatchOutput).ToStageSpecPromotionTemplateSpecStepsRetryPatchPtrOutputWithContext(ctx)
}

// StageSpecPromotionTemplateSpecStepsRetryPatchPtrInput is an input type that accepts StageSpecPromotionTemplateSpecStepsRetryPatchArgs, StageSpecPromotionTemplateSpecStepsRetryPatchPtr and StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsRetryPatchPtrInput` via:
//
//	        StageSpecPromotionTemplateSpecStepsRetryPatchArgs{...}
//
//	or:
//
//	        nil
type StageSpecPromotionTemplateSpecStepsRetryPatchPtrInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput() StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput
	ToStageSpecPromotionTemplateSpecStepsRetryPatchPtrOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput
}

type stageSpecPromotionTemplateSpecStepsRetryPatchPtrType StageSpecPromotionTemplateSpecStepsRetryPatchArgs

func StageSpecPromotionTemplateSpecStepsRetryPatchPtr(v *StageSpecPromotionTemplateSpecStepsRetryPatchArgs) StageSpecPromotionTemplateSpecStepsRetryPatchPtrInput {
	return (*stageSpecPromotionTemplateSpecStepsRetryPatchPtrType)(v)
}

func (*stageSpecPromotionTemplateSpecStepsRetryPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplateSpecStepsRetryPatch)(nil)).Elem()
}

func (i *stageSpecPromotionTemplateSpecStepsRetryPatchPtrType) ToStageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput() StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsRetryPatchPtrOutputWithContext(context.Background())
}

func (i *stageSpecPromotionTemplateSpecStepsRetryPatchPtrType) ToStageSpecPromotionTemplateSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput)
}

// Retry is the retry policy for this step.
type StageSpecPromotionTemplateSpecStepsRetryPatchOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsRetryPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsRetryPatch)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsRetryPatchOutput) ToStageSpecPromotionTemplateSpecStepsRetryPatchOutput() StageSpecPromotionTemplateSpecStepsRetryPatchOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsRetryPatchOutput) ToStageSpecPromotionTemplateSpecStepsRetryPatchOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsRetryPatchOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsRetryPatchOutput) ToStageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput() StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput {
	return o.ToStageSpecPromotionTemplateSpecStepsRetryPatchPtrOutputWithContext(context.Background())
}

func (o StageSpecPromotionTemplateSpecStepsRetryPatchOutput) ToStageSpecPromotionTemplateSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecPromotionTemplateSpecStepsRetryPatch) *StageSpecPromotionTemplateSpecStepsRetryPatch {
		return &v
	}).(StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o StageSpecPromotionTemplateSpecStepsRetryPatchOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsRetryPatch) *int { return v.ErrorThreshold }).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o StageSpecPromotionTemplateSpecStepsRetryPatchOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsRetryPatch) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplateSpecStepsRetryPatch)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput) ToStageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput() StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput) ToStageSpecPromotionTemplateSpecStepsRetryPatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput) Elem() StageSpecPromotionTemplateSpecStepsRetryPatchOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecStepsRetryPatch) StageSpecPromotionTemplateSpecStepsRetryPatch {
		if v != nil {
			return *v
		}
		var ret StageSpecPromotionTemplateSpecStepsRetryPatch
		return ret
	}).(StageSpecPromotionTemplateSpecStepsRetryPatchOutput)
}

// ErrorThreshold is the number of consecutive times the step must fail (for
// any reason) before retries are abandoned and the entire Promotion is marked
// as failed.
//
// If this field is set to 0, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also 0), the effective
// default will be the system-wide default of 1.
//
// A value of 1 will cause the Promotion to be marked as failed after just
// a single failure; i.e. no retries will be attempted.
//
// There is no option to specify an infinite number of retries using a value
// such as -1.
//
// In a future release, Kargo is likely to become capable of distinguishing
// between recoverable and non-recoverable step failures. At that time, it is
// planned that unrecoverable failures will not be subject to this threshold
// and will immediately cause the Promotion to be marked as failed without
// further condition.
func (o StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecStepsRetryPatch) *int {
		if v == nil {
			return nil
		}
		return v.ErrorThreshold
	}).(pulumi.IntPtrOutput)
}

// Timeout is the soft maximum interval in which a step that returns a Running
// status (which typically indicates it's waiting for something to happen)
// may be retried.
//
// The maximum is a soft one because the check for whether the interval has
// elapsed occurs AFTER the step has run. This effectively means a step may
// run ONCE beyond the close of the interval.
//
// If this field is set to nil, the effective default will be a step-specific
// one. If no step-specific default exists (i.e. is also nil), the effective
// default will be the system-wide default of 0.
//
// A value of 0 will cause the step to be retried indefinitely unless the
// ErrorThreshold is reached.
func (o StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecStepsRetryPatch) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type StageSpecPromotionTemplateSpecStepsTask struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind *string `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name *string `pulumi:"name"`
}

// StageSpecPromotionTemplateSpecStepsTaskInput is an input type that accepts StageSpecPromotionTemplateSpecStepsTaskArgs and StageSpecPromotionTemplateSpecStepsTaskOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsTaskInput` via:
//
//	StageSpecPromotionTemplateSpecStepsTaskArgs{...}
type StageSpecPromotionTemplateSpecStepsTaskInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsTaskOutput() StageSpecPromotionTemplateSpecStepsTaskOutput
	ToStageSpecPromotionTemplateSpecStepsTaskOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsTaskOutput
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type StageSpecPromotionTemplateSpecStepsTaskArgs struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StageSpecPromotionTemplateSpecStepsTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsTask)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecStepsTaskArgs) ToStageSpecPromotionTemplateSpecStepsTaskOutput() StageSpecPromotionTemplateSpecStepsTaskOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsTaskOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsTaskArgs) ToStageSpecPromotionTemplateSpecStepsTaskOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsTaskOutput)
}

func (i StageSpecPromotionTemplateSpecStepsTaskArgs) ToStageSpecPromotionTemplateSpecStepsTaskPtrOutput() StageSpecPromotionTemplateSpecStepsTaskPtrOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsTaskPtrOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsTaskArgs) ToStageSpecPromotionTemplateSpecStepsTaskPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsTaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsTaskOutput).ToStageSpecPromotionTemplateSpecStepsTaskPtrOutputWithContext(ctx)
}

// StageSpecPromotionTemplateSpecStepsTaskPtrInput is an input type that accepts StageSpecPromotionTemplateSpecStepsTaskArgs, StageSpecPromotionTemplateSpecStepsTaskPtr and StageSpecPromotionTemplateSpecStepsTaskPtrOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsTaskPtrInput` via:
//
//	        StageSpecPromotionTemplateSpecStepsTaskArgs{...}
//
//	or:
//
//	        nil
type StageSpecPromotionTemplateSpecStepsTaskPtrInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsTaskPtrOutput() StageSpecPromotionTemplateSpecStepsTaskPtrOutput
	ToStageSpecPromotionTemplateSpecStepsTaskPtrOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsTaskPtrOutput
}

type stageSpecPromotionTemplateSpecStepsTaskPtrType StageSpecPromotionTemplateSpecStepsTaskArgs

func StageSpecPromotionTemplateSpecStepsTaskPtr(v *StageSpecPromotionTemplateSpecStepsTaskArgs) StageSpecPromotionTemplateSpecStepsTaskPtrInput {
	return (*stageSpecPromotionTemplateSpecStepsTaskPtrType)(v)
}

func (*stageSpecPromotionTemplateSpecStepsTaskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplateSpecStepsTask)(nil)).Elem()
}

func (i *stageSpecPromotionTemplateSpecStepsTaskPtrType) ToStageSpecPromotionTemplateSpecStepsTaskPtrOutput() StageSpecPromotionTemplateSpecStepsTaskPtrOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsTaskPtrOutputWithContext(context.Background())
}

func (i *stageSpecPromotionTemplateSpecStepsTaskPtrType) ToStageSpecPromotionTemplateSpecStepsTaskPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsTaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsTaskPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type StageSpecPromotionTemplateSpecStepsTaskOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsTask)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsTaskOutput) ToStageSpecPromotionTemplateSpecStepsTaskOutput() StageSpecPromotionTemplateSpecStepsTaskOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsTaskOutput) ToStageSpecPromotionTemplateSpecStepsTaskOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsTaskOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsTaskOutput) ToStageSpecPromotionTemplateSpecStepsTaskPtrOutput() StageSpecPromotionTemplateSpecStepsTaskPtrOutput {
	return o.ToStageSpecPromotionTemplateSpecStepsTaskPtrOutputWithContext(context.Background())
}

func (o StageSpecPromotionTemplateSpecStepsTaskOutput) ToStageSpecPromotionTemplateSpecStepsTaskPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsTaskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecPromotionTemplateSpecStepsTask) *StageSpecPromotionTemplateSpecStepsTask {
		return &v
	}).(StageSpecPromotionTemplateSpecStepsTaskPtrOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o StageSpecPromotionTemplateSpecStepsTaskOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsTask) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o StageSpecPromotionTemplateSpecStepsTaskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsTask) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StageSpecPromotionTemplateSpecStepsTaskPtrOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsTaskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplateSpecStepsTask)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsTaskPtrOutput) ToStageSpecPromotionTemplateSpecStepsTaskPtrOutput() StageSpecPromotionTemplateSpecStepsTaskPtrOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsTaskPtrOutput) ToStageSpecPromotionTemplateSpecStepsTaskPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsTaskPtrOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsTaskPtrOutput) Elem() StageSpecPromotionTemplateSpecStepsTaskOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecStepsTask) StageSpecPromotionTemplateSpecStepsTask {
		if v != nil {
			return *v
		}
		var ret StageSpecPromotionTemplateSpecStepsTask
		return ret
	}).(StageSpecPromotionTemplateSpecStepsTaskOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o StageSpecPromotionTemplateSpecStepsTaskPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecStepsTask) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o StageSpecPromotionTemplateSpecStepsTaskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecStepsTask) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type StageSpecPromotionTemplateSpecStepsTaskPatch struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind *string `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name *string `pulumi:"name"`
}

// StageSpecPromotionTemplateSpecStepsTaskPatchInput is an input type that accepts StageSpecPromotionTemplateSpecStepsTaskPatchArgs and StageSpecPromotionTemplateSpecStepsTaskPatchOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsTaskPatchInput` via:
//
//	StageSpecPromotionTemplateSpecStepsTaskPatchArgs{...}
type StageSpecPromotionTemplateSpecStepsTaskPatchInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsTaskPatchOutput() StageSpecPromotionTemplateSpecStepsTaskPatchOutput
	ToStageSpecPromotionTemplateSpecStepsTaskPatchOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsTaskPatchOutput
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type StageSpecPromotionTemplateSpecStepsTaskPatchArgs struct {
	// Kind is the type of the PromotionTask. Can be either PromotionTask or
	// ClusterPromotionTask, default is PromotionTask.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the (Cluster)PromotionTask.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StageSpecPromotionTemplateSpecStepsTaskPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsTaskPatch)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecStepsTaskPatchArgs) ToStageSpecPromotionTemplateSpecStepsTaskPatchOutput() StageSpecPromotionTemplateSpecStepsTaskPatchOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsTaskPatchOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsTaskPatchArgs) ToStageSpecPromotionTemplateSpecStepsTaskPatchOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsTaskPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsTaskPatchOutput)
}

func (i StageSpecPromotionTemplateSpecStepsTaskPatchArgs) ToStageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput() StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsTaskPatchPtrOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsTaskPatchArgs) ToStageSpecPromotionTemplateSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsTaskPatchOutput).ToStageSpecPromotionTemplateSpecStepsTaskPatchPtrOutputWithContext(ctx)
}

// StageSpecPromotionTemplateSpecStepsTaskPatchPtrInput is an input type that accepts StageSpecPromotionTemplateSpecStepsTaskPatchArgs, StageSpecPromotionTemplateSpecStepsTaskPatchPtr and StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsTaskPatchPtrInput` via:
//
//	        StageSpecPromotionTemplateSpecStepsTaskPatchArgs{...}
//
//	or:
//
//	        nil
type StageSpecPromotionTemplateSpecStepsTaskPatchPtrInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput() StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput
	ToStageSpecPromotionTemplateSpecStepsTaskPatchPtrOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput
}

type stageSpecPromotionTemplateSpecStepsTaskPatchPtrType StageSpecPromotionTemplateSpecStepsTaskPatchArgs

func StageSpecPromotionTemplateSpecStepsTaskPatchPtr(v *StageSpecPromotionTemplateSpecStepsTaskPatchArgs) StageSpecPromotionTemplateSpecStepsTaskPatchPtrInput {
	return (*stageSpecPromotionTemplateSpecStepsTaskPatchPtrType)(v)
}

func (*stageSpecPromotionTemplateSpecStepsTaskPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplateSpecStepsTaskPatch)(nil)).Elem()
}

func (i *stageSpecPromotionTemplateSpecStepsTaskPatchPtrType) ToStageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput() StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsTaskPatchPtrOutputWithContext(context.Background())
}

func (i *stageSpecPromotionTemplateSpecStepsTaskPatchPtrType) ToStageSpecPromotionTemplateSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput)
}

// Task is a reference to a PromotionTask that should be inflated into a
// Promotion when it is built from a PromotionTemplate.
type StageSpecPromotionTemplateSpecStepsTaskPatchOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsTaskPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsTaskPatch)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsTaskPatchOutput) ToStageSpecPromotionTemplateSpecStepsTaskPatchOutput() StageSpecPromotionTemplateSpecStepsTaskPatchOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsTaskPatchOutput) ToStageSpecPromotionTemplateSpecStepsTaskPatchOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsTaskPatchOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsTaskPatchOutput) ToStageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput() StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput {
	return o.ToStageSpecPromotionTemplateSpecStepsTaskPatchPtrOutputWithContext(context.Background())
}

func (o StageSpecPromotionTemplateSpecStepsTaskPatchOutput) ToStageSpecPromotionTemplateSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecPromotionTemplateSpecStepsTaskPatch) *StageSpecPromotionTemplateSpecStepsTaskPatch {
		return &v
	}).(StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o StageSpecPromotionTemplateSpecStepsTaskPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsTaskPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o StageSpecPromotionTemplateSpecStepsTaskPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsTaskPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecPromotionTemplateSpecStepsTaskPatch)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput) ToStageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput() StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput) ToStageSpecPromotionTemplateSpecStepsTaskPatchPtrOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput) Elem() StageSpecPromotionTemplateSpecStepsTaskPatchOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecStepsTaskPatch) StageSpecPromotionTemplateSpecStepsTaskPatch {
		if v != nil {
			return *v
		}
		var ret StageSpecPromotionTemplateSpecStepsTaskPatch
		return ret
	}).(StageSpecPromotionTemplateSpecStepsTaskPatchOutput)
}

// Kind is the type of the PromotionTask. Can be either PromotionTask or
// ClusterPromotionTask, default is PromotionTask.
func (o StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecStepsTaskPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the (Cluster)PromotionTask.
func (o StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecPromotionTemplateSpecStepsTaskPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecPromotionTemplateSpecStepsVars struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// StageSpecPromotionTemplateSpecStepsVarsInput is an input type that accepts StageSpecPromotionTemplateSpecStepsVarsArgs and StageSpecPromotionTemplateSpecStepsVarsOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsVarsInput` via:
//
//	StageSpecPromotionTemplateSpecStepsVarsArgs{...}
type StageSpecPromotionTemplateSpecStepsVarsInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsVarsOutput() StageSpecPromotionTemplateSpecStepsVarsOutput
	ToStageSpecPromotionTemplateSpecStepsVarsOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsVarsOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecPromotionTemplateSpecStepsVarsArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StageSpecPromotionTemplateSpecStepsVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsVars)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecStepsVarsArgs) ToStageSpecPromotionTemplateSpecStepsVarsOutput() StageSpecPromotionTemplateSpecStepsVarsOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsVarsOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsVarsArgs) ToStageSpecPromotionTemplateSpecStepsVarsOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsVarsOutput)
}

// StageSpecPromotionTemplateSpecStepsVarsArrayInput is an input type that accepts StageSpecPromotionTemplateSpecStepsVarsArray and StageSpecPromotionTemplateSpecStepsVarsArrayOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsVarsArrayInput` via:
//
//	StageSpecPromotionTemplateSpecStepsVarsArray{ StageSpecPromotionTemplateSpecStepsVarsArgs{...} }
type StageSpecPromotionTemplateSpecStepsVarsArrayInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsVarsArrayOutput() StageSpecPromotionTemplateSpecStepsVarsArrayOutput
	ToStageSpecPromotionTemplateSpecStepsVarsArrayOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsVarsArrayOutput
}

type StageSpecPromotionTemplateSpecStepsVarsArray []StageSpecPromotionTemplateSpecStepsVarsInput

func (StageSpecPromotionTemplateSpecStepsVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecPromotionTemplateSpecStepsVars)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecStepsVarsArray) ToStageSpecPromotionTemplateSpecStepsVarsArrayOutput() StageSpecPromotionTemplateSpecStepsVarsArrayOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsVarsArrayOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsVarsArray) ToStageSpecPromotionTemplateSpecStepsVarsArrayOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsVarsArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecPromotionTemplateSpecStepsVarsOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsVars)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsVarsOutput) ToStageSpecPromotionTemplateSpecStepsVarsOutput() StageSpecPromotionTemplateSpecStepsVarsOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsVarsOutput) ToStageSpecPromotionTemplateSpecStepsVarsOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsVarsOutput {
	return o
}

// Name is the name of the variable.
func (o StageSpecPromotionTemplateSpecStepsVarsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsVars) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o StageSpecPromotionTemplateSpecStepsVarsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsVars) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StageSpecPromotionTemplateSpecStepsVarsArrayOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecPromotionTemplateSpecStepsVars)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsVarsArrayOutput) ToStageSpecPromotionTemplateSpecStepsVarsArrayOutput() StageSpecPromotionTemplateSpecStepsVarsArrayOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsVarsArrayOutput) ToStageSpecPromotionTemplateSpecStepsVarsArrayOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsVarsArrayOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsVarsArrayOutput) Index(i pulumi.IntInput) StageSpecPromotionTemplateSpecStepsVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecPromotionTemplateSpecStepsVars {
		return vs[0].([]StageSpecPromotionTemplateSpecStepsVars)[vs[1].(int)]
	}).(StageSpecPromotionTemplateSpecStepsVarsOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecPromotionTemplateSpecStepsVarsPatch struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// StageSpecPromotionTemplateSpecStepsVarsPatchInput is an input type that accepts StageSpecPromotionTemplateSpecStepsVarsPatchArgs and StageSpecPromotionTemplateSpecStepsVarsPatchOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsVarsPatchInput` via:
//
//	StageSpecPromotionTemplateSpecStepsVarsPatchArgs{...}
type StageSpecPromotionTemplateSpecStepsVarsPatchInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsVarsPatchOutput() StageSpecPromotionTemplateSpecStepsVarsPatchOutput
	ToStageSpecPromotionTemplateSpecStepsVarsPatchOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsVarsPatchOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecPromotionTemplateSpecStepsVarsPatchArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StageSpecPromotionTemplateSpecStepsVarsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsVarsPatch)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecStepsVarsPatchArgs) ToStageSpecPromotionTemplateSpecStepsVarsPatchOutput() StageSpecPromotionTemplateSpecStepsVarsPatchOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsVarsPatchOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsVarsPatchArgs) ToStageSpecPromotionTemplateSpecStepsVarsPatchOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsVarsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsVarsPatchOutput)
}

// StageSpecPromotionTemplateSpecStepsVarsPatchArrayInput is an input type that accepts StageSpecPromotionTemplateSpecStepsVarsPatchArray and StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecStepsVarsPatchArrayInput` via:
//
//	StageSpecPromotionTemplateSpecStepsVarsPatchArray{ StageSpecPromotionTemplateSpecStepsVarsPatchArgs{...} }
type StageSpecPromotionTemplateSpecStepsVarsPatchArrayInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput() StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput
	ToStageSpecPromotionTemplateSpecStepsVarsPatchArrayOutputWithContext(context.Context) StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput
}

type StageSpecPromotionTemplateSpecStepsVarsPatchArray []StageSpecPromotionTemplateSpecStepsVarsPatchInput

func (StageSpecPromotionTemplateSpecStepsVarsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecPromotionTemplateSpecStepsVarsPatch)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecStepsVarsPatchArray) ToStageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput() StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput {
	return i.ToStageSpecPromotionTemplateSpecStepsVarsPatchArrayOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecStepsVarsPatchArray) ToStageSpecPromotionTemplateSpecStepsVarsPatchArrayOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecPromotionTemplateSpecStepsVarsPatchOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsVarsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsVarsPatch)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsVarsPatchOutput) ToStageSpecPromotionTemplateSpecStepsVarsPatchOutput() StageSpecPromotionTemplateSpecStepsVarsPatchOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsVarsPatchOutput) ToStageSpecPromotionTemplateSpecStepsVarsPatchOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsVarsPatchOutput {
	return o
}

// Name is the name of the variable.
func (o StageSpecPromotionTemplateSpecStepsVarsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsVarsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o StageSpecPromotionTemplateSpecStepsVarsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecStepsVarsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecPromotionTemplateSpecStepsVarsPatch)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput) ToStageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput() StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput) ToStageSpecPromotionTemplateSpecStepsVarsPatchArrayOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput) Index(i pulumi.IntInput) StageSpecPromotionTemplateSpecStepsVarsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecPromotionTemplateSpecStepsVarsPatch {
		return vs[0].([]StageSpecPromotionTemplateSpecStepsVarsPatch)[vs[1].(int)]
	}).(StageSpecPromotionTemplateSpecStepsVarsPatchOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecPromotionTemplateSpecVars struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// StageSpecPromotionTemplateSpecVarsInput is an input type that accepts StageSpecPromotionTemplateSpecVarsArgs and StageSpecPromotionTemplateSpecVarsOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecVarsInput` via:
//
//	StageSpecPromotionTemplateSpecVarsArgs{...}
type StageSpecPromotionTemplateSpecVarsInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecVarsOutput() StageSpecPromotionTemplateSpecVarsOutput
	ToStageSpecPromotionTemplateSpecVarsOutputWithContext(context.Context) StageSpecPromotionTemplateSpecVarsOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecPromotionTemplateSpecVarsArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StageSpecPromotionTemplateSpecVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecVars)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecVarsArgs) ToStageSpecPromotionTemplateSpecVarsOutput() StageSpecPromotionTemplateSpecVarsOutput {
	return i.ToStageSpecPromotionTemplateSpecVarsOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecVarsArgs) ToStageSpecPromotionTemplateSpecVarsOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecVarsOutput)
}

// StageSpecPromotionTemplateSpecVarsArrayInput is an input type that accepts StageSpecPromotionTemplateSpecVarsArray and StageSpecPromotionTemplateSpecVarsArrayOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecVarsArrayInput` via:
//
//	StageSpecPromotionTemplateSpecVarsArray{ StageSpecPromotionTemplateSpecVarsArgs{...} }
type StageSpecPromotionTemplateSpecVarsArrayInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecVarsArrayOutput() StageSpecPromotionTemplateSpecVarsArrayOutput
	ToStageSpecPromotionTemplateSpecVarsArrayOutputWithContext(context.Context) StageSpecPromotionTemplateSpecVarsArrayOutput
}

type StageSpecPromotionTemplateSpecVarsArray []StageSpecPromotionTemplateSpecVarsInput

func (StageSpecPromotionTemplateSpecVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecPromotionTemplateSpecVars)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecVarsArray) ToStageSpecPromotionTemplateSpecVarsArrayOutput() StageSpecPromotionTemplateSpecVarsArrayOutput {
	return i.ToStageSpecPromotionTemplateSpecVarsArrayOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecVarsArray) ToStageSpecPromotionTemplateSpecVarsArrayOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecVarsArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecPromotionTemplateSpecVarsOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecVars)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecVarsOutput) ToStageSpecPromotionTemplateSpecVarsOutput() StageSpecPromotionTemplateSpecVarsOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecVarsOutput) ToStageSpecPromotionTemplateSpecVarsOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecVarsOutput {
	return o
}

// Name is the name of the variable.
func (o StageSpecPromotionTemplateSpecVarsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecVars) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o StageSpecPromotionTemplateSpecVarsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecVars) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StageSpecPromotionTemplateSpecVarsArrayOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecPromotionTemplateSpecVars)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecVarsArrayOutput) ToStageSpecPromotionTemplateSpecVarsArrayOutput() StageSpecPromotionTemplateSpecVarsArrayOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecVarsArrayOutput) ToStageSpecPromotionTemplateSpecVarsArrayOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecVarsArrayOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecVarsArrayOutput) Index(i pulumi.IntInput) StageSpecPromotionTemplateSpecVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecPromotionTemplateSpecVars {
		return vs[0].([]StageSpecPromotionTemplateSpecVars)[vs[1].(int)]
	}).(StageSpecPromotionTemplateSpecVarsOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecPromotionTemplateSpecVarsPatch struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// StageSpecPromotionTemplateSpecVarsPatchInput is an input type that accepts StageSpecPromotionTemplateSpecVarsPatchArgs and StageSpecPromotionTemplateSpecVarsPatchOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecVarsPatchInput` via:
//
//	StageSpecPromotionTemplateSpecVarsPatchArgs{...}
type StageSpecPromotionTemplateSpecVarsPatchInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecVarsPatchOutput() StageSpecPromotionTemplateSpecVarsPatchOutput
	ToStageSpecPromotionTemplateSpecVarsPatchOutputWithContext(context.Context) StageSpecPromotionTemplateSpecVarsPatchOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecPromotionTemplateSpecVarsPatchArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StageSpecPromotionTemplateSpecVarsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecVarsPatch)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecVarsPatchArgs) ToStageSpecPromotionTemplateSpecVarsPatchOutput() StageSpecPromotionTemplateSpecVarsPatchOutput {
	return i.ToStageSpecPromotionTemplateSpecVarsPatchOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecVarsPatchArgs) ToStageSpecPromotionTemplateSpecVarsPatchOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecVarsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecVarsPatchOutput)
}

// StageSpecPromotionTemplateSpecVarsPatchArrayInput is an input type that accepts StageSpecPromotionTemplateSpecVarsPatchArray and StageSpecPromotionTemplateSpecVarsPatchArrayOutput values.
// You can construct a concrete instance of `StageSpecPromotionTemplateSpecVarsPatchArrayInput` via:
//
//	StageSpecPromotionTemplateSpecVarsPatchArray{ StageSpecPromotionTemplateSpecVarsPatchArgs{...} }
type StageSpecPromotionTemplateSpecVarsPatchArrayInput interface {
	pulumi.Input

	ToStageSpecPromotionTemplateSpecVarsPatchArrayOutput() StageSpecPromotionTemplateSpecVarsPatchArrayOutput
	ToStageSpecPromotionTemplateSpecVarsPatchArrayOutputWithContext(context.Context) StageSpecPromotionTemplateSpecVarsPatchArrayOutput
}

type StageSpecPromotionTemplateSpecVarsPatchArray []StageSpecPromotionTemplateSpecVarsPatchInput

func (StageSpecPromotionTemplateSpecVarsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecPromotionTemplateSpecVarsPatch)(nil)).Elem()
}

func (i StageSpecPromotionTemplateSpecVarsPatchArray) ToStageSpecPromotionTemplateSpecVarsPatchArrayOutput() StageSpecPromotionTemplateSpecVarsPatchArrayOutput {
	return i.ToStageSpecPromotionTemplateSpecVarsPatchArrayOutputWithContext(context.Background())
}

func (i StageSpecPromotionTemplateSpecVarsPatchArray) ToStageSpecPromotionTemplateSpecVarsPatchArrayOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecVarsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecPromotionTemplateSpecVarsPatchArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecPromotionTemplateSpecVarsPatchOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecVarsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecPromotionTemplateSpecVarsPatch)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecVarsPatchOutput) ToStageSpecPromotionTemplateSpecVarsPatchOutput() StageSpecPromotionTemplateSpecVarsPatchOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecVarsPatchOutput) ToStageSpecPromotionTemplateSpecVarsPatchOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecVarsPatchOutput {
	return o
}

// Name is the name of the variable.
func (o StageSpecPromotionTemplateSpecVarsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecVarsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o StageSpecPromotionTemplateSpecVarsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecPromotionTemplateSpecVarsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StageSpecPromotionTemplateSpecVarsPatchArrayOutput struct{ *pulumi.OutputState }

func (StageSpecPromotionTemplateSpecVarsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecPromotionTemplateSpecVarsPatch)(nil)).Elem()
}

func (o StageSpecPromotionTemplateSpecVarsPatchArrayOutput) ToStageSpecPromotionTemplateSpecVarsPatchArrayOutput() StageSpecPromotionTemplateSpecVarsPatchArrayOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecVarsPatchArrayOutput) ToStageSpecPromotionTemplateSpecVarsPatchArrayOutputWithContext(ctx context.Context) StageSpecPromotionTemplateSpecVarsPatchArrayOutput {
	return o
}

func (o StageSpecPromotionTemplateSpecVarsPatchArrayOutput) Index(i pulumi.IntInput) StageSpecPromotionTemplateSpecVarsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecPromotionTemplateSpecVarsPatch {
		return vs[0].([]StageSpecPromotionTemplateSpecVarsPatch)[vs[1].(int)]
	}).(StageSpecPromotionTemplateSpecVarsPatchOutput)
}

// FreightRequest expresses a Stage's need for Freight having originated from a
// particular Warehouse.
type StageSpecRequestedFreight struct {
	Origin  *StageSpecRequestedFreightOrigin  `pulumi:"origin"`
	Sources *StageSpecRequestedFreightSources `pulumi:"sources"`
}

// StageSpecRequestedFreightInput is an input type that accepts StageSpecRequestedFreightArgs and StageSpecRequestedFreightOutput values.
// You can construct a concrete instance of `StageSpecRequestedFreightInput` via:
//
//	StageSpecRequestedFreightArgs{...}
type StageSpecRequestedFreightInput interface {
	pulumi.Input

	ToStageSpecRequestedFreightOutput() StageSpecRequestedFreightOutput
	ToStageSpecRequestedFreightOutputWithContext(context.Context) StageSpecRequestedFreightOutput
}

// FreightRequest expresses a Stage's need for Freight having originated from a
// particular Warehouse.
type StageSpecRequestedFreightArgs struct {
	Origin  StageSpecRequestedFreightOriginPtrInput  `pulumi:"origin"`
	Sources StageSpecRequestedFreightSourcesPtrInput `pulumi:"sources"`
}

func (StageSpecRequestedFreightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecRequestedFreight)(nil)).Elem()
}

func (i StageSpecRequestedFreightArgs) ToStageSpecRequestedFreightOutput() StageSpecRequestedFreightOutput {
	return i.ToStageSpecRequestedFreightOutputWithContext(context.Background())
}

func (i StageSpecRequestedFreightArgs) ToStageSpecRequestedFreightOutputWithContext(ctx context.Context) StageSpecRequestedFreightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightOutput)
}

// StageSpecRequestedFreightArrayInput is an input type that accepts StageSpecRequestedFreightArray and StageSpecRequestedFreightArrayOutput values.
// You can construct a concrete instance of `StageSpecRequestedFreightArrayInput` via:
//
//	StageSpecRequestedFreightArray{ StageSpecRequestedFreightArgs{...} }
type StageSpecRequestedFreightArrayInput interface {
	pulumi.Input

	ToStageSpecRequestedFreightArrayOutput() StageSpecRequestedFreightArrayOutput
	ToStageSpecRequestedFreightArrayOutputWithContext(context.Context) StageSpecRequestedFreightArrayOutput
}

type StageSpecRequestedFreightArray []StageSpecRequestedFreightInput

func (StageSpecRequestedFreightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecRequestedFreight)(nil)).Elem()
}

func (i StageSpecRequestedFreightArray) ToStageSpecRequestedFreightArrayOutput() StageSpecRequestedFreightArrayOutput {
	return i.ToStageSpecRequestedFreightArrayOutputWithContext(context.Background())
}

func (i StageSpecRequestedFreightArray) ToStageSpecRequestedFreightArrayOutputWithContext(ctx context.Context) StageSpecRequestedFreightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightArrayOutput)
}

// FreightRequest expresses a Stage's need for Freight having originated from a
// particular Warehouse.
type StageSpecRequestedFreightOutput struct{ *pulumi.OutputState }

func (StageSpecRequestedFreightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecRequestedFreight)(nil)).Elem()
}

func (o StageSpecRequestedFreightOutput) ToStageSpecRequestedFreightOutput() StageSpecRequestedFreightOutput {
	return o
}

func (o StageSpecRequestedFreightOutput) ToStageSpecRequestedFreightOutputWithContext(ctx context.Context) StageSpecRequestedFreightOutput {
	return o
}

func (o StageSpecRequestedFreightOutput) Origin() StageSpecRequestedFreightOriginPtrOutput {
	return o.ApplyT(func(v StageSpecRequestedFreight) *StageSpecRequestedFreightOrigin { return v.Origin }).(StageSpecRequestedFreightOriginPtrOutput)
}

func (o StageSpecRequestedFreightOutput) Sources() StageSpecRequestedFreightSourcesPtrOutput {
	return o.ApplyT(func(v StageSpecRequestedFreight) *StageSpecRequestedFreightSources { return v.Sources }).(StageSpecRequestedFreightSourcesPtrOutput)
}

type StageSpecRequestedFreightArrayOutput struct{ *pulumi.OutputState }

func (StageSpecRequestedFreightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecRequestedFreight)(nil)).Elem()
}

func (o StageSpecRequestedFreightArrayOutput) ToStageSpecRequestedFreightArrayOutput() StageSpecRequestedFreightArrayOutput {
	return o
}

func (o StageSpecRequestedFreightArrayOutput) ToStageSpecRequestedFreightArrayOutputWithContext(ctx context.Context) StageSpecRequestedFreightArrayOutput {
	return o
}

func (o StageSpecRequestedFreightArrayOutput) Index(i pulumi.IntInput) StageSpecRequestedFreightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecRequestedFreight {
		return vs[0].([]StageSpecRequestedFreight)[vs[1].(int)]
	}).(StageSpecRequestedFreightOutput)
}

// Origin specifies from where the requested Freight must have originated.
// This is a required field.
type StageSpecRequestedFreightOrigin struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name *string `pulumi:"name"`
}

// StageSpecRequestedFreightOriginInput is an input type that accepts StageSpecRequestedFreightOriginArgs and StageSpecRequestedFreightOriginOutput values.
// You can construct a concrete instance of `StageSpecRequestedFreightOriginInput` via:
//
//	StageSpecRequestedFreightOriginArgs{...}
type StageSpecRequestedFreightOriginInput interface {
	pulumi.Input

	ToStageSpecRequestedFreightOriginOutput() StageSpecRequestedFreightOriginOutput
	ToStageSpecRequestedFreightOriginOutputWithContext(context.Context) StageSpecRequestedFreightOriginOutput
}

// Origin specifies from where the requested Freight must have originated.
// This is a required field.
type StageSpecRequestedFreightOriginArgs struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StageSpecRequestedFreightOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecRequestedFreightOrigin)(nil)).Elem()
}

func (i StageSpecRequestedFreightOriginArgs) ToStageSpecRequestedFreightOriginOutput() StageSpecRequestedFreightOriginOutput {
	return i.ToStageSpecRequestedFreightOriginOutputWithContext(context.Background())
}

func (i StageSpecRequestedFreightOriginArgs) ToStageSpecRequestedFreightOriginOutputWithContext(ctx context.Context) StageSpecRequestedFreightOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightOriginOutput)
}

func (i StageSpecRequestedFreightOriginArgs) ToStageSpecRequestedFreightOriginPtrOutput() StageSpecRequestedFreightOriginPtrOutput {
	return i.ToStageSpecRequestedFreightOriginPtrOutputWithContext(context.Background())
}

func (i StageSpecRequestedFreightOriginArgs) ToStageSpecRequestedFreightOriginPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightOriginOutput).ToStageSpecRequestedFreightOriginPtrOutputWithContext(ctx)
}

// StageSpecRequestedFreightOriginPtrInput is an input type that accepts StageSpecRequestedFreightOriginArgs, StageSpecRequestedFreightOriginPtr and StageSpecRequestedFreightOriginPtrOutput values.
// You can construct a concrete instance of `StageSpecRequestedFreightOriginPtrInput` via:
//
//	        StageSpecRequestedFreightOriginArgs{...}
//
//	or:
//
//	        nil
type StageSpecRequestedFreightOriginPtrInput interface {
	pulumi.Input

	ToStageSpecRequestedFreightOriginPtrOutput() StageSpecRequestedFreightOriginPtrOutput
	ToStageSpecRequestedFreightOriginPtrOutputWithContext(context.Context) StageSpecRequestedFreightOriginPtrOutput
}

type stageSpecRequestedFreightOriginPtrType StageSpecRequestedFreightOriginArgs

func StageSpecRequestedFreightOriginPtr(v *StageSpecRequestedFreightOriginArgs) StageSpecRequestedFreightOriginPtrInput {
	return (*stageSpecRequestedFreightOriginPtrType)(v)
}

func (*stageSpecRequestedFreightOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecRequestedFreightOrigin)(nil)).Elem()
}

func (i *stageSpecRequestedFreightOriginPtrType) ToStageSpecRequestedFreightOriginPtrOutput() StageSpecRequestedFreightOriginPtrOutput {
	return i.ToStageSpecRequestedFreightOriginPtrOutputWithContext(context.Background())
}

func (i *stageSpecRequestedFreightOriginPtrType) ToStageSpecRequestedFreightOriginPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightOriginPtrOutput)
}

// Origin specifies from where the requested Freight must have originated.
// This is a required field.
type StageSpecRequestedFreightOriginOutput struct{ *pulumi.OutputState }

func (StageSpecRequestedFreightOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecRequestedFreightOrigin)(nil)).Elem()
}

func (o StageSpecRequestedFreightOriginOutput) ToStageSpecRequestedFreightOriginOutput() StageSpecRequestedFreightOriginOutput {
	return o
}

func (o StageSpecRequestedFreightOriginOutput) ToStageSpecRequestedFreightOriginOutputWithContext(ctx context.Context) StageSpecRequestedFreightOriginOutput {
	return o
}

func (o StageSpecRequestedFreightOriginOutput) ToStageSpecRequestedFreightOriginPtrOutput() StageSpecRequestedFreightOriginPtrOutput {
	return o.ToStageSpecRequestedFreightOriginPtrOutputWithContext(context.Background())
}

func (o StageSpecRequestedFreightOriginOutput) ToStageSpecRequestedFreightOriginPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecRequestedFreightOrigin) *StageSpecRequestedFreightOrigin {
		return &v
	}).(StageSpecRequestedFreightOriginPtrOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageSpecRequestedFreightOriginOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecRequestedFreightOrigin) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageSpecRequestedFreightOriginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecRequestedFreightOrigin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StageSpecRequestedFreightOriginPtrOutput struct{ *pulumi.OutputState }

func (StageSpecRequestedFreightOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecRequestedFreightOrigin)(nil)).Elem()
}

func (o StageSpecRequestedFreightOriginPtrOutput) ToStageSpecRequestedFreightOriginPtrOutput() StageSpecRequestedFreightOriginPtrOutput {
	return o
}

func (o StageSpecRequestedFreightOriginPtrOutput) ToStageSpecRequestedFreightOriginPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightOriginPtrOutput {
	return o
}

func (o StageSpecRequestedFreightOriginPtrOutput) Elem() StageSpecRequestedFreightOriginOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightOrigin) StageSpecRequestedFreightOrigin {
		if v != nil {
			return *v
		}
		var ret StageSpecRequestedFreightOrigin
		return ret
	}).(StageSpecRequestedFreightOriginOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageSpecRequestedFreightOriginPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageSpecRequestedFreightOriginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Origin specifies from where the requested Freight must have originated.
// This is a required field.
type StageSpecRequestedFreightOriginPatch struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name *string `pulumi:"name"`
}

// StageSpecRequestedFreightOriginPatchInput is an input type that accepts StageSpecRequestedFreightOriginPatchArgs and StageSpecRequestedFreightOriginPatchOutput values.
// You can construct a concrete instance of `StageSpecRequestedFreightOriginPatchInput` via:
//
//	StageSpecRequestedFreightOriginPatchArgs{...}
type StageSpecRequestedFreightOriginPatchInput interface {
	pulumi.Input

	ToStageSpecRequestedFreightOriginPatchOutput() StageSpecRequestedFreightOriginPatchOutput
	ToStageSpecRequestedFreightOriginPatchOutputWithContext(context.Context) StageSpecRequestedFreightOriginPatchOutput
}

// Origin specifies from where the requested Freight must have originated.
// This is a required field.
type StageSpecRequestedFreightOriginPatchArgs struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StageSpecRequestedFreightOriginPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecRequestedFreightOriginPatch)(nil)).Elem()
}

func (i StageSpecRequestedFreightOriginPatchArgs) ToStageSpecRequestedFreightOriginPatchOutput() StageSpecRequestedFreightOriginPatchOutput {
	return i.ToStageSpecRequestedFreightOriginPatchOutputWithContext(context.Background())
}

func (i StageSpecRequestedFreightOriginPatchArgs) ToStageSpecRequestedFreightOriginPatchOutputWithContext(ctx context.Context) StageSpecRequestedFreightOriginPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightOriginPatchOutput)
}

func (i StageSpecRequestedFreightOriginPatchArgs) ToStageSpecRequestedFreightOriginPatchPtrOutput() StageSpecRequestedFreightOriginPatchPtrOutput {
	return i.ToStageSpecRequestedFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (i StageSpecRequestedFreightOriginPatchArgs) ToStageSpecRequestedFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightOriginPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightOriginPatchOutput).ToStageSpecRequestedFreightOriginPatchPtrOutputWithContext(ctx)
}

// StageSpecRequestedFreightOriginPatchPtrInput is an input type that accepts StageSpecRequestedFreightOriginPatchArgs, StageSpecRequestedFreightOriginPatchPtr and StageSpecRequestedFreightOriginPatchPtrOutput values.
// You can construct a concrete instance of `StageSpecRequestedFreightOriginPatchPtrInput` via:
//
//	        StageSpecRequestedFreightOriginPatchArgs{...}
//
//	or:
//
//	        nil
type StageSpecRequestedFreightOriginPatchPtrInput interface {
	pulumi.Input

	ToStageSpecRequestedFreightOriginPatchPtrOutput() StageSpecRequestedFreightOriginPatchPtrOutput
	ToStageSpecRequestedFreightOriginPatchPtrOutputWithContext(context.Context) StageSpecRequestedFreightOriginPatchPtrOutput
}

type stageSpecRequestedFreightOriginPatchPtrType StageSpecRequestedFreightOriginPatchArgs

func StageSpecRequestedFreightOriginPatchPtr(v *StageSpecRequestedFreightOriginPatchArgs) StageSpecRequestedFreightOriginPatchPtrInput {
	return (*stageSpecRequestedFreightOriginPatchPtrType)(v)
}

func (*stageSpecRequestedFreightOriginPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecRequestedFreightOriginPatch)(nil)).Elem()
}

func (i *stageSpecRequestedFreightOriginPatchPtrType) ToStageSpecRequestedFreightOriginPatchPtrOutput() StageSpecRequestedFreightOriginPatchPtrOutput {
	return i.ToStageSpecRequestedFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (i *stageSpecRequestedFreightOriginPatchPtrType) ToStageSpecRequestedFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightOriginPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightOriginPatchPtrOutput)
}

// Origin specifies from where the requested Freight must have originated.
// This is a required field.
type StageSpecRequestedFreightOriginPatchOutput struct{ *pulumi.OutputState }

func (StageSpecRequestedFreightOriginPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecRequestedFreightOriginPatch)(nil)).Elem()
}

func (o StageSpecRequestedFreightOriginPatchOutput) ToStageSpecRequestedFreightOriginPatchOutput() StageSpecRequestedFreightOriginPatchOutput {
	return o
}

func (o StageSpecRequestedFreightOriginPatchOutput) ToStageSpecRequestedFreightOriginPatchOutputWithContext(ctx context.Context) StageSpecRequestedFreightOriginPatchOutput {
	return o
}

func (o StageSpecRequestedFreightOriginPatchOutput) ToStageSpecRequestedFreightOriginPatchPtrOutput() StageSpecRequestedFreightOriginPatchPtrOutput {
	return o.ToStageSpecRequestedFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (o StageSpecRequestedFreightOriginPatchOutput) ToStageSpecRequestedFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightOriginPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecRequestedFreightOriginPatch) *StageSpecRequestedFreightOriginPatch {
		return &v
	}).(StageSpecRequestedFreightOriginPatchPtrOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageSpecRequestedFreightOriginPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecRequestedFreightOriginPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageSpecRequestedFreightOriginPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecRequestedFreightOriginPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StageSpecRequestedFreightOriginPatchPtrOutput struct{ *pulumi.OutputState }

func (StageSpecRequestedFreightOriginPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecRequestedFreightOriginPatch)(nil)).Elem()
}

func (o StageSpecRequestedFreightOriginPatchPtrOutput) ToStageSpecRequestedFreightOriginPatchPtrOutput() StageSpecRequestedFreightOriginPatchPtrOutput {
	return o
}

func (o StageSpecRequestedFreightOriginPatchPtrOutput) ToStageSpecRequestedFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightOriginPatchPtrOutput {
	return o
}

func (o StageSpecRequestedFreightOriginPatchPtrOutput) Elem() StageSpecRequestedFreightOriginPatchOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightOriginPatch) StageSpecRequestedFreightOriginPatch {
		if v != nil {
			return *v
		}
		var ret StageSpecRequestedFreightOriginPatch
		return ret
	}).(StageSpecRequestedFreightOriginPatchOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageSpecRequestedFreightOriginPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightOriginPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageSpecRequestedFreightOriginPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightOriginPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// FreightRequest expresses a Stage's need for Freight having originated from a
// particular Warehouse.
type StageSpecRequestedFreightPatch struct {
	Origin  *StageSpecRequestedFreightOriginPatch  `pulumi:"origin"`
	Sources *StageSpecRequestedFreightSourcesPatch `pulumi:"sources"`
}

// StageSpecRequestedFreightPatchInput is an input type that accepts StageSpecRequestedFreightPatchArgs and StageSpecRequestedFreightPatchOutput values.
// You can construct a concrete instance of `StageSpecRequestedFreightPatchInput` via:
//
//	StageSpecRequestedFreightPatchArgs{...}
type StageSpecRequestedFreightPatchInput interface {
	pulumi.Input

	ToStageSpecRequestedFreightPatchOutput() StageSpecRequestedFreightPatchOutput
	ToStageSpecRequestedFreightPatchOutputWithContext(context.Context) StageSpecRequestedFreightPatchOutput
}

// FreightRequest expresses a Stage's need for Freight having originated from a
// particular Warehouse.
type StageSpecRequestedFreightPatchArgs struct {
	Origin  StageSpecRequestedFreightOriginPatchPtrInput  `pulumi:"origin"`
	Sources StageSpecRequestedFreightSourcesPatchPtrInput `pulumi:"sources"`
}

func (StageSpecRequestedFreightPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecRequestedFreightPatch)(nil)).Elem()
}

func (i StageSpecRequestedFreightPatchArgs) ToStageSpecRequestedFreightPatchOutput() StageSpecRequestedFreightPatchOutput {
	return i.ToStageSpecRequestedFreightPatchOutputWithContext(context.Background())
}

func (i StageSpecRequestedFreightPatchArgs) ToStageSpecRequestedFreightPatchOutputWithContext(ctx context.Context) StageSpecRequestedFreightPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightPatchOutput)
}

// StageSpecRequestedFreightPatchArrayInput is an input type that accepts StageSpecRequestedFreightPatchArray and StageSpecRequestedFreightPatchArrayOutput values.
// You can construct a concrete instance of `StageSpecRequestedFreightPatchArrayInput` via:
//
//	StageSpecRequestedFreightPatchArray{ StageSpecRequestedFreightPatchArgs{...} }
type StageSpecRequestedFreightPatchArrayInput interface {
	pulumi.Input

	ToStageSpecRequestedFreightPatchArrayOutput() StageSpecRequestedFreightPatchArrayOutput
	ToStageSpecRequestedFreightPatchArrayOutputWithContext(context.Context) StageSpecRequestedFreightPatchArrayOutput
}

type StageSpecRequestedFreightPatchArray []StageSpecRequestedFreightPatchInput

func (StageSpecRequestedFreightPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecRequestedFreightPatch)(nil)).Elem()
}

func (i StageSpecRequestedFreightPatchArray) ToStageSpecRequestedFreightPatchArrayOutput() StageSpecRequestedFreightPatchArrayOutput {
	return i.ToStageSpecRequestedFreightPatchArrayOutputWithContext(context.Background())
}

func (i StageSpecRequestedFreightPatchArray) ToStageSpecRequestedFreightPatchArrayOutputWithContext(ctx context.Context) StageSpecRequestedFreightPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightPatchArrayOutput)
}

// FreightRequest expresses a Stage's need for Freight having originated from a
// particular Warehouse.
type StageSpecRequestedFreightPatchOutput struct{ *pulumi.OutputState }

func (StageSpecRequestedFreightPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecRequestedFreightPatch)(nil)).Elem()
}

func (o StageSpecRequestedFreightPatchOutput) ToStageSpecRequestedFreightPatchOutput() StageSpecRequestedFreightPatchOutput {
	return o
}

func (o StageSpecRequestedFreightPatchOutput) ToStageSpecRequestedFreightPatchOutputWithContext(ctx context.Context) StageSpecRequestedFreightPatchOutput {
	return o
}

func (o StageSpecRequestedFreightPatchOutput) Origin() StageSpecRequestedFreightOriginPatchPtrOutput {
	return o.ApplyT(func(v StageSpecRequestedFreightPatch) *StageSpecRequestedFreightOriginPatch { return v.Origin }).(StageSpecRequestedFreightOriginPatchPtrOutput)
}

func (o StageSpecRequestedFreightPatchOutput) Sources() StageSpecRequestedFreightSourcesPatchPtrOutput {
	return o.ApplyT(func(v StageSpecRequestedFreightPatch) *StageSpecRequestedFreightSourcesPatch { return v.Sources }).(StageSpecRequestedFreightSourcesPatchPtrOutput)
}

type StageSpecRequestedFreightPatchArrayOutput struct{ *pulumi.OutputState }

func (StageSpecRequestedFreightPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecRequestedFreightPatch)(nil)).Elem()
}

func (o StageSpecRequestedFreightPatchArrayOutput) ToStageSpecRequestedFreightPatchArrayOutput() StageSpecRequestedFreightPatchArrayOutput {
	return o
}

func (o StageSpecRequestedFreightPatchArrayOutput) ToStageSpecRequestedFreightPatchArrayOutputWithContext(ctx context.Context) StageSpecRequestedFreightPatchArrayOutput {
	return o
}

func (o StageSpecRequestedFreightPatchArrayOutput) Index(i pulumi.IntInput) StageSpecRequestedFreightPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecRequestedFreightPatch {
		return vs[0].([]StageSpecRequestedFreightPatch)[vs[1].(int)]
	}).(StageSpecRequestedFreightPatchOutput)
}

// Sources describes where the requested Freight may be obtained from. This is
// a required field.
type StageSpecRequestedFreightSources struct {
	// AvailabilityStrategy specifies the semantics for how requested Freight is
	// made available to the Stage. This field is optional. When left unspecified,
	// the field is implicitly treated as if its value were "OneOf".
	//
	// Accepted Values:
	//
	// - "All": Freight must be be verified and, if applicable, soaked in all
	//   upstream Stages to be considered available for promotion.
	// - "OneOf": Freight must be verified and, if applicable, soaked in at least
	//    one upstream Stage to be considered available for promotion.
	// - "": Treated the same as "OneOf".
	AvailabilityStrategy *string `pulumi:"availabilityStrategy"`
	// Direct indicates the requested Freight may be obtained directly from the
	// Warehouse from which it originated. If this field's value is false, then
	// the value of the Stages field must be non-empty. i.e. Between the two
	// fields, at least one source must be specified.
	Direct *bool `pulumi:"direct"`
	// RequiredSoakTime specifies a minimum duration for which the requested
	// Freight must have continuously occupied ("soaked in") in an upstream Stage
	// before becoming available for promotion to this Stage. This is an optional
	// field. If nil or zero, no soak time is required. Any soak time requirement
	// is in ADDITION to the requirement that Freight be verified in an upstream
	// Stage to become available for promotion to this Stage, although a manual
	// approval for promotion to this Stage will supersede any soak time
	// requirement.
	RequiredSoakTime *string `pulumi:"requiredSoakTime"`
	// Stages identifies other "upstream" Stages as potential sources of the
	// requested Freight. If this field's value is empty, then the value of the
	// Direct field must be true. i.e. Between the two fields, at least on source
	// must be specified.
	Stages []string `pulumi:"stages"`
}

// StageSpecRequestedFreightSourcesInput is an input type that accepts StageSpecRequestedFreightSourcesArgs and StageSpecRequestedFreightSourcesOutput values.
// You can construct a concrete instance of `StageSpecRequestedFreightSourcesInput` via:
//
//	StageSpecRequestedFreightSourcesArgs{...}
type StageSpecRequestedFreightSourcesInput interface {
	pulumi.Input

	ToStageSpecRequestedFreightSourcesOutput() StageSpecRequestedFreightSourcesOutput
	ToStageSpecRequestedFreightSourcesOutputWithContext(context.Context) StageSpecRequestedFreightSourcesOutput
}

// Sources describes where the requested Freight may be obtained from. This is
// a required field.
type StageSpecRequestedFreightSourcesArgs struct {
	// AvailabilityStrategy specifies the semantics for how requested Freight is
	// made available to the Stage. This field is optional. When left unspecified,
	// the field is implicitly treated as if its value were "OneOf".
	//
	// Accepted Values:
	//
	// - "All": Freight must be be verified and, if applicable, soaked in all
	//   upstream Stages to be considered available for promotion.
	// - "OneOf": Freight must be verified and, if applicable, soaked in at least
	//    one upstream Stage to be considered available for promotion.
	// - "": Treated the same as "OneOf".
	AvailabilityStrategy pulumi.StringPtrInput `pulumi:"availabilityStrategy"`
	// Direct indicates the requested Freight may be obtained directly from the
	// Warehouse from which it originated. If this field's value is false, then
	// the value of the Stages field must be non-empty. i.e. Between the two
	// fields, at least one source must be specified.
	Direct pulumi.BoolPtrInput `pulumi:"direct"`
	// RequiredSoakTime specifies a minimum duration for which the requested
	// Freight must have continuously occupied ("soaked in") in an upstream Stage
	// before becoming available for promotion to this Stage. This is an optional
	// field. If nil or zero, no soak time is required. Any soak time requirement
	// is in ADDITION to the requirement that Freight be verified in an upstream
	// Stage to become available for promotion to this Stage, although a manual
	// approval for promotion to this Stage will supersede any soak time
	// requirement.
	RequiredSoakTime pulumi.StringPtrInput `pulumi:"requiredSoakTime"`
	// Stages identifies other "upstream" Stages as potential sources of the
	// requested Freight. If this field's value is empty, then the value of the
	// Direct field must be true. i.e. Between the two fields, at least on source
	// must be specified.
	Stages pulumi.StringArrayInput `pulumi:"stages"`
}

func (StageSpecRequestedFreightSourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecRequestedFreightSources)(nil)).Elem()
}

func (i StageSpecRequestedFreightSourcesArgs) ToStageSpecRequestedFreightSourcesOutput() StageSpecRequestedFreightSourcesOutput {
	return i.ToStageSpecRequestedFreightSourcesOutputWithContext(context.Background())
}

func (i StageSpecRequestedFreightSourcesArgs) ToStageSpecRequestedFreightSourcesOutputWithContext(ctx context.Context) StageSpecRequestedFreightSourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightSourcesOutput)
}

func (i StageSpecRequestedFreightSourcesArgs) ToStageSpecRequestedFreightSourcesPtrOutput() StageSpecRequestedFreightSourcesPtrOutput {
	return i.ToStageSpecRequestedFreightSourcesPtrOutputWithContext(context.Background())
}

func (i StageSpecRequestedFreightSourcesArgs) ToStageSpecRequestedFreightSourcesPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightSourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightSourcesOutput).ToStageSpecRequestedFreightSourcesPtrOutputWithContext(ctx)
}

// StageSpecRequestedFreightSourcesPtrInput is an input type that accepts StageSpecRequestedFreightSourcesArgs, StageSpecRequestedFreightSourcesPtr and StageSpecRequestedFreightSourcesPtrOutput values.
// You can construct a concrete instance of `StageSpecRequestedFreightSourcesPtrInput` via:
//
//	        StageSpecRequestedFreightSourcesArgs{...}
//
//	or:
//
//	        nil
type StageSpecRequestedFreightSourcesPtrInput interface {
	pulumi.Input

	ToStageSpecRequestedFreightSourcesPtrOutput() StageSpecRequestedFreightSourcesPtrOutput
	ToStageSpecRequestedFreightSourcesPtrOutputWithContext(context.Context) StageSpecRequestedFreightSourcesPtrOutput
}

type stageSpecRequestedFreightSourcesPtrType StageSpecRequestedFreightSourcesArgs

func StageSpecRequestedFreightSourcesPtr(v *StageSpecRequestedFreightSourcesArgs) StageSpecRequestedFreightSourcesPtrInput {
	return (*stageSpecRequestedFreightSourcesPtrType)(v)
}

func (*stageSpecRequestedFreightSourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecRequestedFreightSources)(nil)).Elem()
}

func (i *stageSpecRequestedFreightSourcesPtrType) ToStageSpecRequestedFreightSourcesPtrOutput() StageSpecRequestedFreightSourcesPtrOutput {
	return i.ToStageSpecRequestedFreightSourcesPtrOutputWithContext(context.Background())
}

func (i *stageSpecRequestedFreightSourcesPtrType) ToStageSpecRequestedFreightSourcesPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightSourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightSourcesPtrOutput)
}

// Sources describes where the requested Freight may be obtained from. This is
// a required field.
type StageSpecRequestedFreightSourcesOutput struct{ *pulumi.OutputState }

func (StageSpecRequestedFreightSourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecRequestedFreightSources)(nil)).Elem()
}

func (o StageSpecRequestedFreightSourcesOutput) ToStageSpecRequestedFreightSourcesOutput() StageSpecRequestedFreightSourcesOutput {
	return o
}

func (o StageSpecRequestedFreightSourcesOutput) ToStageSpecRequestedFreightSourcesOutputWithContext(ctx context.Context) StageSpecRequestedFreightSourcesOutput {
	return o
}

func (o StageSpecRequestedFreightSourcesOutput) ToStageSpecRequestedFreightSourcesPtrOutput() StageSpecRequestedFreightSourcesPtrOutput {
	return o.ToStageSpecRequestedFreightSourcesPtrOutputWithContext(context.Background())
}

func (o StageSpecRequestedFreightSourcesOutput) ToStageSpecRequestedFreightSourcesPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightSourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecRequestedFreightSources) *StageSpecRequestedFreightSources {
		return &v
	}).(StageSpecRequestedFreightSourcesPtrOutput)
}

// AvailabilityStrategy specifies the semantics for how requested Freight is
// made available to the Stage. This field is optional. When left unspecified,
// the field is implicitly treated as if its value were "OneOf".
//
// Accepted Values:
//
//   - "All": Freight must be be verified and, if applicable, soaked in all
//     upstream Stages to be considered available for promotion.
//   - "OneOf": Freight must be verified and, if applicable, soaked in at least
//     one upstream Stage to be considered available for promotion.
//   - "": Treated the same as "OneOf".
func (o StageSpecRequestedFreightSourcesOutput) AvailabilityStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecRequestedFreightSources) *string { return v.AvailabilityStrategy }).(pulumi.StringPtrOutput)
}

// Direct indicates the requested Freight may be obtained directly from the
// Warehouse from which it originated. If this field's value is false, then
// the value of the Stages field must be non-empty. i.e. Between the two
// fields, at least one source must be specified.
func (o StageSpecRequestedFreightSourcesOutput) Direct() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageSpecRequestedFreightSources) *bool { return v.Direct }).(pulumi.BoolPtrOutput)
}

// RequiredSoakTime specifies a minimum duration for which the requested
// Freight must have continuously occupied ("soaked in") in an upstream Stage
// before becoming available for promotion to this Stage. This is an optional
// field. If nil or zero, no soak time is required. Any soak time requirement
// is in ADDITION to the requirement that Freight be verified in an upstream
// Stage to become available for promotion to this Stage, although a manual
// approval for promotion to this Stage will supersede any soak time
// requirement.
func (o StageSpecRequestedFreightSourcesOutput) RequiredSoakTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecRequestedFreightSources) *string { return v.RequiredSoakTime }).(pulumi.StringPtrOutput)
}

// Stages identifies other "upstream" Stages as potential sources of the
// requested Freight. If this field's value is empty, then the value of the
// Direct field must be true. i.e. Between the two fields, at least on source
// must be specified.
func (o StageSpecRequestedFreightSourcesOutput) Stages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StageSpecRequestedFreightSources) []string { return v.Stages }).(pulumi.StringArrayOutput)
}

type StageSpecRequestedFreightSourcesPtrOutput struct{ *pulumi.OutputState }

func (StageSpecRequestedFreightSourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecRequestedFreightSources)(nil)).Elem()
}

func (o StageSpecRequestedFreightSourcesPtrOutput) ToStageSpecRequestedFreightSourcesPtrOutput() StageSpecRequestedFreightSourcesPtrOutput {
	return o
}

func (o StageSpecRequestedFreightSourcesPtrOutput) ToStageSpecRequestedFreightSourcesPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightSourcesPtrOutput {
	return o
}

func (o StageSpecRequestedFreightSourcesPtrOutput) Elem() StageSpecRequestedFreightSourcesOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightSources) StageSpecRequestedFreightSources {
		if v != nil {
			return *v
		}
		var ret StageSpecRequestedFreightSources
		return ret
	}).(StageSpecRequestedFreightSourcesOutput)
}

// AvailabilityStrategy specifies the semantics for how requested Freight is
// made available to the Stage. This field is optional. When left unspecified,
// the field is implicitly treated as if its value were "OneOf".
//
// Accepted Values:
//
//   - "All": Freight must be be verified and, if applicable, soaked in all
//     upstream Stages to be considered available for promotion.
//   - "OneOf": Freight must be verified and, if applicable, soaked in at least
//     one upstream Stage to be considered available for promotion.
//   - "": Treated the same as "OneOf".
func (o StageSpecRequestedFreightSourcesPtrOutput) AvailabilityStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightSources) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityStrategy
	}).(pulumi.StringPtrOutput)
}

// Direct indicates the requested Freight may be obtained directly from the
// Warehouse from which it originated. If this field's value is false, then
// the value of the Stages field must be non-empty. i.e. Between the two
// fields, at least one source must be specified.
func (o StageSpecRequestedFreightSourcesPtrOutput) Direct() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightSources) *bool {
		if v == nil {
			return nil
		}
		return v.Direct
	}).(pulumi.BoolPtrOutput)
}

// RequiredSoakTime specifies a minimum duration for which the requested
// Freight must have continuously occupied ("soaked in") in an upstream Stage
// before becoming available for promotion to this Stage. This is an optional
// field. If nil or zero, no soak time is required. Any soak time requirement
// is in ADDITION to the requirement that Freight be verified in an upstream
// Stage to become available for promotion to this Stage, although a manual
// approval for promotion to this Stage will supersede any soak time
// requirement.
func (o StageSpecRequestedFreightSourcesPtrOutput) RequiredSoakTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightSources) *string {
		if v == nil {
			return nil
		}
		return v.RequiredSoakTime
	}).(pulumi.StringPtrOutput)
}

// Stages identifies other "upstream" Stages as potential sources of the
// requested Freight. If this field's value is empty, then the value of the
// Direct field must be true. i.e. Between the two fields, at least on source
// must be specified.
func (o StageSpecRequestedFreightSourcesPtrOutput) Stages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightSources) []string {
		if v == nil {
			return nil
		}
		return v.Stages
	}).(pulumi.StringArrayOutput)
}

// Sources describes where the requested Freight may be obtained from. This is
// a required field.
type StageSpecRequestedFreightSourcesPatch struct {
	// AvailabilityStrategy specifies the semantics for how requested Freight is
	// made available to the Stage. This field is optional. When left unspecified,
	// the field is implicitly treated as if its value were "OneOf".
	//
	// Accepted Values:
	//
	// - "All": Freight must be be verified and, if applicable, soaked in all
	//   upstream Stages to be considered available for promotion.
	// - "OneOf": Freight must be verified and, if applicable, soaked in at least
	//    one upstream Stage to be considered available for promotion.
	// - "": Treated the same as "OneOf".
	AvailabilityStrategy *string `pulumi:"availabilityStrategy"`
	// Direct indicates the requested Freight may be obtained directly from the
	// Warehouse from which it originated. If this field's value is false, then
	// the value of the Stages field must be non-empty. i.e. Between the two
	// fields, at least one source must be specified.
	Direct *bool `pulumi:"direct"`
	// RequiredSoakTime specifies a minimum duration for which the requested
	// Freight must have continuously occupied ("soaked in") in an upstream Stage
	// before becoming available for promotion to this Stage. This is an optional
	// field. If nil or zero, no soak time is required. Any soak time requirement
	// is in ADDITION to the requirement that Freight be verified in an upstream
	// Stage to become available for promotion to this Stage, although a manual
	// approval for promotion to this Stage will supersede any soak time
	// requirement.
	RequiredSoakTime *string `pulumi:"requiredSoakTime"`
	// Stages identifies other "upstream" Stages as potential sources of the
	// requested Freight. If this field's value is empty, then the value of the
	// Direct field must be true. i.e. Between the two fields, at least on source
	// must be specified.
	Stages []string `pulumi:"stages"`
}

// StageSpecRequestedFreightSourcesPatchInput is an input type that accepts StageSpecRequestedFreightSourcesPatchArgs and StageSpecRequestedFreightSourcesPatchOutput values.
// You can construct a concrete instance of `StageSpecRequestedFreightSourcesPatchInput` via:
//
//	StageSpecRequestedFreightSourcesPatchArgs{...}
type StageSpecRequestedFreightSourcesPatchInput interface {
	pulumi.Input

	ToStageSpecRequestedFreightSourcesPatchOutput() StageSpecRequestedFreightSourcesPatchOutput
	ToStageSpecRequestedFreightSourcesPatchOutputWithContext(context.Context) StageSpecRequestedFreightSourcesPatchOutput
}

// Sources describes where the requested Freight may be obtained from. This is
// a required field.
type StageSpecRequestedFreightSourcesPatchArgs struct {
	// AvailabilityStrategy specifies the semantics for how requested Freight is
	// made available to the Stage. This field is optional. When left unspecified,
	// the field is implicitly treated as if its value were "OneOf".
	//
	// Accepted Values:
	//
	// - "All": Freight must be be verified and, if applicable, soaked in all
	//   upstream Stages to be considered available for promotion.
	// - "OneOf": Freight must be verified and, if applicable, soaked in at least
	//    one upstream Stage to be considered available for promotion.
	// - "": Treated the same as "OneOf".
	AvailabilityStrategy pulumi.StringPtrInput `pulumi:"availabilityStrategy"`
	// Direct indicates the requested Freight may be obtained directly from the
	// Warehouse from which it originated. If this field's value is false, then
	// the value of the Stages field must be non-empty. i.e. Between the two
	// fields, at least one source must be specified.
	Direct pulumi.BoolPtrInput `pulumi:"direct"`
	// RequiredSoakTime specifies a minimum duration for which the requested
	// Freight must have continuously occupied ("soaked in") in an upstream Stage
	// before becoming available for promotion to this Stage. This is an optional
	// field. If nil or zero, no soak time is required. Any soak time requirement
	// is in ADDITION to the requirement that Freight be verified in an upstream
	// Stage to become available for promotion to this Stage, although a manual
	// approval for promotion to this Stage will supersede any soak time
	// requirement.
	RequiredSoakTime pulumi.StringPtrInput `pulumi:"requiredSoakTime"`
	// Stages identifies other "upstream" Stages as potential sources of the
	// requested Freight. If this field's value is empty, then the value of the
	// Direct field must be true. i.e. Between the two fields, at least on source
	// must be specified.
	Stages pulumi.StringArrayInput `pulumi:"stages"`
}

func (StageSpecRequestedFreightSourcesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecRequestedFreightSourcesPatch)(nil)).Elem()
}

func (i StageSpecRequestedFreightSourcesPatchArgs) ToStageSpecRequestedFreightSourcesPatchOutput() StageSpecRequestedFreightSourcesPatchOutput {
	return i.ToStageSpecRequestedFreightSourcesPatchOutputWithContext(context.Background())
}

func (i StageSpecRequestedFreightSourcesPatchArgs) ToStageSpecRequestedFreightSourcesPatchOutputWithContext(ctx context.Context) StageSpecRequestedFreightSourcesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightSourcesPatchOutput)
}

func (i StageSpecRequestedFreightSourcesPatchArgs) ToStageSpecRequestedFreightSourcesPatchPtrOutput() StageSpecRequestedFreightSourcesPatchPtrOutput {
	return i.ToStageSpecRequestedFreightSourcesPatchPtrOutputWithContext(context.Background())
}

func (i StageSpecRequestedFreightSourcesPatchArgs) ToStageSpecRequestedFreightSourcesPatchPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightSourcesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightSourcesPatchOutput).ToStageSpecRequestedFreightSourcesPatchPtrOutputWithContext(ctx)
}

// StageSpecRequestedFreightSourcesPatchPtrInput is an input type that accepts StageSpecRequestedFreightSourcesPatchArgs, StageSpecRequestedFreightSourcesPatchPtr and StageSpecRequestedFreightSourcesPatchPtrOutput values.
// You can construct a concrete instance of `StageSpecRequestedFreightSourcesPatchPtrInput` via:
//
//	        StageSpecRequestedFreightSourcesPatchArgs{...}
//
//	or:
//
//	        nil
type StageSpecRequestedFreightSourcesPatchPtrInput interface {
	pulumi.Input

	ToStageSpecRequestedFreightSourcesPatchPtrOutput() StageSpecRequestedFreightSourcesPatchPtrOutput
	ToStageSpecRequestedFreightSourcesPatchPtrOutputWithContext(context.Context) StageSpecRequestedFreightSourcesPatchPtrOutput
}

type stageSpecRequestedFreightSourcesPatchPtrType StageSpecRequestedFreightSourcesPatchArgs

func StageSpecRequestedFreightSourcesPatchPtr(v *StageSpecRequestedFreightSourcesPatchArgs) StageSpecRequestedFreightSourcesPatchPtrInput {
	return (*stageSpecRequestedFreightSourcesPatchPtrType)(v)
}

func (*stageSpecRequestedFreightSourcesPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecRequestedFreightSourcesPatch)(nil)).Elem()
}

func (i *stageSpecRequestedFreightSourcesPatchPtrType) ToStageSpecRequestedFreightSourcesPatchPtrOutput() StageSpecRequestedFreightSourcesPatchPtrOutput {
	return i.ToStageSpecRequestedFreightSourcesPatchPtrOutputWithContext(context.Background())
}

func (i *stageSpecRequestedFreightSourcesPatchPtrType) ToStageSpecRequestedFreightSourcesPatchPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightSourcesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecRequestedFreightSourcesPatchPtrOutput)
}

// Sources describes where the requested Freight may be obtained from. This is
// a required field.
type StageSpecRequestedFreightSourcesPatchOutput struct{ *pulumi.OutputState }

func (StageSpecRequestedFreightSourcesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecRequestedFreightSourcesPatch)(nil)).Elem()
}

func (o StageSpecRequestedFreightSourcesPatchOutput) ToStageSpecRequestedFreightSourcesPatchOutput() StageSpecRequestedFreightSourcesPatchOutput {
	return o
}

func (o StageSpecRequestedFreightSourcesPatchOutput) ToStageSpecRequestedFreightSourcesPatchOutputWithContext(ctx context.Context) StageSpecRequestedFreightSourcesPatchOutput {
	return o
}

func (o StageSpecRequestedFreightSourcesPatchOutput) ToStageSpecRequestedFreightSourcesPatchPtrOutput() StageSpecRequestedFreightSourcesPatchPtrOutput {
	return o.ToStageSpecRequestedFreightSourcesPatchPtrOutputWithContext(context.Background())
}

func (o StageSpecRequestedFreightSourcesPatchOutput) ToStageSpecRequestedFreightSourcesPatchPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightSourcesPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecRequestedFreightSourcesPatch) *StageSpecRequestedFreightSourcesPatch {
		return &v
	}).(StageSpecRequestedFreightSourcesPatchPtrOutput)
}

// AvailabilityStrategy specifies the semantics for how requested Freight is
// made available to the Stage. This field is optional. When left unspecified,
// the field is implicitly treated as if its value were "OneOf".
//
// Accepted Values:
//
//   - "All": Freight must be be verified and, if applicable, soaked in all
//     upstream Stages to be considered available for promotion.
//   - "OneOf": Freight must be verified and, if applicable, soaked in at least
//     one upstream Stage to be considered available for promotion.
//   - "": Treated the same as "OneOf".
func (o StageSpecRequestedFreightSourcesPatchOutput) AvailabilityStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecRequestedFreightSourcesPatch) *string { return v.AvailabilityStrategy }).(pulumi.StringPtrOutput)
}

// Direct indicates the requested Freight may be obtained directly from the
// Warehouse from which it originated. If this field's value is false, then
// the value of the Stages field must be non-empty. i.e. Between the two
// fields, at least one source must be specified.
func (o StageSpecRequestedFreightSourcesPatchOutput) Direct() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageSpecRequestedFreightSourcesPatch) *bool { return v.Direct }).(pulumi.BoolPtrOutput)
}

// RequiredSoakTime specifies a minimum duration for which the requested
// Freight must have continuously occupied ("soaked in") in an upstream Stage
// before becoming available for promotion to this Stage. This is an optional
// field. If nil or zero, no soak time is required. Any soak time requirement
// is in ADDITION to the requirement that Freight be verified in an upstream
// Stage to become available for promotion to this Stage, although a manual
// approval for promotion to this Stage will supersede any soak time
// requirement.
func (o StageSpecRequestedFreightSourcesPatchOutput) RequiredSoakTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecRequestedFreightSourcesPatch) *string { return v.RequiredSoakTime }).(pulumi.StringPtrOutput)
}

// Stages identifies other "upstream" Stages as potential sources of the
// requested Freight. If this field's value is empty, then the value of the
// Direct field must be true. i.e. Between the two fields, at least on source
// must be specified.
func (o StageSpecRequestedFreightSourcesPatchOutput) Stages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StageSpecRequestedFreightSourcesPatch) []string { return v.Stages }).(pulumi.StringArrayOutput)
}

type StageSpecRequestedFreightSourcesPatchPtrOutput struct{ *pulumi.OutputState }

func (StageSpecRequestedFreightSourcesPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecRequestedFreightSourcesPatch)(nil)).Elem()
}

func (o StageSpecRequestedFreightSourcesPatchPtrOutput) ToStageSpecRequestedFreightSourcesPatchPtrOutput() StageSpecRequestedFreightSourcesPatchPtrOutput {
	return o
}

func (o StageSpecRequestedFreightSourcesPatchPtrOutput) ToStageSpecRequestedFreightSourcesPatchPtrOutputWithContext(ctx context.Context) StageSpecRequestedFreightSourcesPatchPtrOutput {
	return o
}

func (o StageSpecRequestedFreightSourcesPatchPtrOutput) Elem() StageSpecRequestedFreightSourcesPatchOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightSourcesPatch) StageSpecRequestedFreightSourcesPatch {
		if v != nil {
			return *v
		}
		var ret StageSpecRequestedFreightSourcesPatch
		return ret
	}).(StageSpecRequestedFreightSourcesPatchOutput)
}

// AvailabilityStrategy specifies the semantics for how requested Freight is
// made available to the Stage. This field is optional. When left unspecified,
// the field is implicitly treated as if its value were "OneOf".
//
// Accepted Values:
//
//   - "All": Freight must be be verified and, if applicable, soaked in all
//     upstream Stages to be considered available for promotion.
//   - "OneOf": Freight must be verified and, if applicable, soaked in at least
//     one upstream Stage to be considered available for promotion.
//   - "": Treated the same as "OneOf".
func (o StageSpecRequestedFreightSourcesPatchPtrOutput) AvailabilityStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightSourcesPatch) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityStrategy
	}).(pulumi.StringPtrOutput)
}

// Direct indicates the requested Freight may be obtained directly from the
// Warehouse from which it originated. If this field's value is false, then
// the value of the Stages field must be non-empty. i.e. Between the two
// fields, at least one source must be specified.
func (o StageSpecRequestedFreightSourcesPatchPtrOutput) Direct() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightSourcesPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Direct
	}).(pulumi.BoolPtrOutput)
}

// RequiredSoakTime specifies a minimum duration for which the requested
// Freight must have continuously occupied ("soaked in") in an upstream Stage
// before becoming available for promotion to this Stage. This is an optional
// field. If nil or zero, no soak time is required. Any soak time requirement
// is in ADDITION to the requirement that Freight be verified in an upstream
// Stage to become available for promotion to this Stage, although a manual
// approval for promotion to this Stage will supersede any soak time
// requirement.
func (o StageSpecRequestedFreightSourcesPatchPtrOutput) RequiredSoakTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightSourcesPatch) *string {
		if v == nil {
			return nil
		}
		return v.RequiredSoakTime
	}).(pulumi.StringPtrOutput)
}

// Stages identifies other "upstream" Stages as potential sources of the
// requested Freight. If this field's value is empty, then the value of the
// Direct field must be true. i.e. Between the two fields, at least on source
// must be specified.
func (o StageSpecRequestedFreightSourcesPatchPtrOutput) Stages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StageSpecRequestedFreightSourcesPatch) []string {
		if v == nil {
			return nil
		}
		return v.Stages
	}).(pulumi.StringArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecVars struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// StageSpecVarsInput is an input type that accepts StageSpecVarsArgs and StageSpecVarsOutput values.
// You can construct a concrete instance of `StageSpecVarsInput` via:
//
//	StageSpecVarsArgs{...}
type StageSpecVarsInput interface {
	pulumi.Input

	ToStageSpecVarsOutput() StageSpecVarsOutput
	ToStageSpecVarsOutputWithContext(context.Context) StageSpecVarsOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecVarsArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StageSpecVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVars)(nil)).Elem()
}

func (i StageSpecVarsArgs) ToStageSpecVarsOutput() StageSpecVarsOutput {
	return i.ToStageSpecVarsOutputWithContext(context.Background())
}

func (i StageSpecVarsArgs) ToStageSpecVarsOutputWithContext(ctx context.Context) StageSpecVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVarsOutput)
}

// StageSpecVarsArrayInput is an input type that accepts StageSpecVarsArray and StageSpecVarsArrayOutput values.
// You can construct a concrete instance of `StageSpecVarsArrayInput` via:
//
//	StageSpecVarsArray{ StageSpecVarsArgs{...} }
type StageSpecVarsArrayInput interface {
	pulumi.Input

	ToStageSpecVarsArrayOutput() StageSpecVarsArrayOutput
	ToStageSpecVarsArrayOutputWithContext(context.Context) StageSpecVarsArrayOutput
}

type StageSpecVarsArray []StageSpecVarsInput

func (StageSpecVarsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecVars)(nil)).Elem()
}

func (i StageSpecVarsArray) ToStageSpecVarsArrayOutput() StageSpecVarsArrayOutput {
	return i.ToStageSpecVarsArrayOutputWithContext(context.Background())
}

func (i StageSpecVarsArray) ToStageSpecVarsArrayOutputWithContext(ctx context.Context) StageSpecVarsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVarsArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecVarsOutput struct{ *pulumi.OutputState }

func (StageSpecVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVars)(nil)).Elem()
}

func (o StageSpecVarsOutput) ToStageSpecVarsOutput() StageSpecVarsOutput {
	return o
}

func (o StageSpecVarsOutput) ToStageSpecVarsOutputWithContext(ctx context.Context) StageSpecVarsOutput {
	return o
}

// Name is the name of the variable.
func (o StageSpecVarsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecVars) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o StageSpecVarsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecVars) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StageSpecVarsArrayOutput struct{ *pulumi.OutputState }

func (StageSpecVarsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecVars)(nil)).Elem()
}

func (o StageSpecVarsArrayOutput) ToStageSpecVarsArrayOutput() StageSpecVarsArrayOutput {
	return o
}

func (o StageSpecVarsArrayOutput) ToStageSpecVarsArrayOutputWithContext(ctx context.Context) StageSpecVarsArrayOutput {
	return o
}

func (o StageSpecVarsArrayOutput) Index(i pulumi.IntInput) StageSpecVarsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecVars {
		return vs[0].([]StageSpecVars)[vs[1].(int)]
	}).(StageSpecVarsOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecVarsPatch struct {
	// Name is the name of the variable.
	Name *string `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value *string `pulumi:"value"`
}

// StageSpecVarsPatchInput is an input type that accepts StageSpecVarsPatchArgs and StageSpecVarsPatchOutput values.
// You can construct a concrete instance of `StageSpecVarsPatchInput` via:
//
//	StageSpecVarsPatchArgs{...}
type StageSpecVarsPatchInput interface {
	pulumi.Input

	ToStageSpecVarsPatchOutput() StageSpecVarsPatchOutput
	ToStageSpecVarsPatchOutputWithContext(context.Context) StageSpecVarsPatchOutput
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecVarsPatchArgs struct {
	// Name is the name of the variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the variable. It is allowed to utilize expressions
	// in the value.
	// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StageSpecVarsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVarsPatch)(nil)).Elem()
}

func (i StageSpecVarsPatchArgs) ToStageSpecVarsPatchOutput() StageSpecVarsPatchOutput {
	return i.ToStageSpecVarsPatchOutputWithContext(context.Background())
}

func (i StageSpecVarsPatchArgs) ToStageSpecVarsPatchOutputWithContext(ctx context.Context) StageSpecVarsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVarsPatchOutput)
}

// StageSpecVarsPatchArrayInput is an input type that accepts StageSpecVarsPatchArray and StageSpecVarsPatchArrayOutput values.
// You can construct a concrete instance of `StageSpecVarsPatchArrayInput` via:
//
//	StageSpecVarsPatchArray{ StageSpecVarsPatchArgs{...} }
type StageSpecVarsPatchArrayInput interface {
	pulumi.Input

	ToStageSpecVarsPatchArrayOutput() StageSpecVarsPatchArrayOutput
	ToStageSpecVarsPatchArrayOutputWithContext(context.Context) StageSpecVarsPatchArrayOutput
}

type StageSpecVarsPatchArray []StageSpecVarsPatchInput

func (StageSpecVarsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecVarsPatch)(nil)).Elem()
}

func (i StageSpecVarsPatchArray) ToStageSpecVarsPatchArrayOutput() StageSpecVarsPatchArrayOutput {
	return i.ToStageSpecVarsPatchArrayOutputWithContext(context.Background())
}

func (i StageSpecVarsPatchArray) ToStageSpecVarsPatchArrayOutputWithContext(ctx context.Context) StageSpecVarsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVarsPatchArrayOutput)
}

// ExpressionVariable describes a single variable that may be referenced by
// expressions in the context of a ClusterPromotionTask, PromotionTask,
// Promotion, AnalysisRun arguments, or other objects that support expressions.
//
// It is used to pass information to the expression evaluation engine, and to
// allow for dynamic evaluation of expressions based on the variable values.
type StageSpecVarsPatchOutput struct{ *pulumi.OutputState }

func (StageSpecVarsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVarsPatch)(nil)).Elem()
}

func (o StageSpecVarsPatchOutput) ToStageSpecVarsPatchOutput() StageSpecVarsPatchOutput {
	return o
}

func (o StageSpecVarsPatchOutput) ToStageSpecVarsPatchOutputWithContext(ctx context.Context) StageSpecVarsPatchOutput {
	return o
}

// Name is the name of the variable.
func (o StageSpecVarsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecVarsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the variable. It is allowed to utilize expressions
// in the value.
// See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
func (o StageSpecVarsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecVarsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StageSpecVarsPatchArrayOutput struct{ *pulumi.OutputState }

func (StageSpecVarsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecVarsPatch)(nil)).Elem()
}

func (o StageSpecVarsPatchArrayOutput) ToStageSpecVarsPatchArrayOutput() StageSpecVarsPatchArrayOutput {
	return o
}

func (o StageSpecVarsPatchArrayOutput) ToStageSpecVarsPatchArrayOutputWithContext(ctx context.Context) StageSpecVarsPatchArrayOutput {
	return o
}

func (o StageSpecVarsPatchArrayOutput) Index(i pulumi.IntInput) StageSpecVarsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecVarsPatch {
		return vs[0].([]StageSpecVarsPatch)[vs[1].(int)]
	}).(StageSpecVarsPatchOutput)
}

// Verification describes how to verify a Stage's current Freight is fit for
// promotion downstream.
type StageSpecVerification struct {
	AnalysisRunMetadata *StageSpecVerificationAnalysisRunMetadata `pulumi:"analysisRunMetadata"`
	// AnalysisTemplates is a list of AnalysisTemplates from which AnalysisRuns
	// should be created to verify a Stage's current Freight is fit to be promoted
	// downstream.
	AnalysisTemplates []StageSpecVerificationAnalysisTemplates `pulumi:"analysisTemplates"`
	// Args lists arguments that should be added to all AnalysisRuns.
	Args []StageSpecVerificationArguments `pulumi:"args"`
}

// StageSpecVerificationInput is an input type that accepts StageSpecVerificationArgs and StageSpecVerificationOutput values.
// You can construct a concrete instance of `StageSpecVerificationInput` via:
//
//	StageSpecVerificationArgs{...}
type StageSpecVerificationInput interface {
	pulumi.Input

	ToStageSpecVerificationOutput() StageSpecVerificationOutput
	ToStageSpecVerificationOutputWithContext(context.Context) StageSpecVerificationOutput
}

// Verification describes how to verify a Stage's current Freight is fit for
// promotion downstream.
type StageSpecVerificationArgs struct {
	AnalysisRunMetadata StageSpecVerificationAnalysisRunMetadataPtrInput `pulumi:"analysisRunMetadata"`
	// AnalysisTemplates is a list of AnalysisTemplates from which AnalysisRuns
	// should be created to verify a Stage's current Freight is fit to be promoted
	// downstream.
	AnalysisTemplates StageSpecVerificationAnalysisTemplatesArrayInput `pulumi:"analysisTemplates"`
	// Args lists arguments that should be added to all AnalysisRuns.
	Args StageSpecVerificationArgumentsArrayInput `pulumi:"args"`
}

func (StageSpecVerificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerification)(nil)).Elem()
}

func (i StageSpecVerificationArgs) ToStageSpecVerificationOutput() StageSpecVerificationOutput {
	return i.ToStageSpecVerificationOutputWithContext(context.Background())
}

func (i StageSpecVerificationArgs) ToStageSpecVerificationOutputWithContext(ctx context.Context) StageSpecVerificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationOutput)
}

func (i StageSpecVerificationArgs) ToStageSpecVerificationPtrOutput() StageSpecVerificationPtrOutput {
	return i.ToStageSpecVerificationPtrOutputWithContext(context.Background())
}

func (i StageSpecVerificationArgs) ToStageSpecVerificationPtrOutputWithContext(ctx context.Context) StageSpecVerificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationOutput).ToStageSpecVerificationPtrOutputWithContext(ctx)
}

// StageSpecVerificationPtrInput is an input type that accepts StageSpecVerificationArgs, StageSpecVerificationPtr and StageSpecVerificationPtrOutput values.
// You can construct a concrete instance of `StageSpecVerificationPtrInput` via:
//
//	        StageSpecVerificationArgs{...}
//
//	or:
//
//	        nil
type StageSpecVerificationPtrInput interface {
	pulumi.Input

	ToStageSpecVerificationPtrOutput() StageSpecVerificationPtrOutput
	ToStageSpecVerificationPtrOutputWithContext(context.Context) StageSpecVerificationPtrOutput
}

type stageSpecVerificationPtrType StageSpecVerificationArgs

func StageSpecVerificationPtr(v *StageSpecVerificationArgs) StageSpecVerificationPtrInput {
	return (*stageSpecVerificationPtrType)(v)
}

func (*stageSpecVerificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecVerification)(nil)).Elem()
}

func (i *stageSpecVerificationPtrType) ToStageSpecVerificationPtrOutput() StageSpecVerificationPtrOutput {
	return i.ToStageSpecVerificationPtrOutputWithContext(context.Background())
}

func (i *stageSpecVerificationPtrType) ToStageSpecVerificationPtrOutputWithContext(ctx context.Context) StageSpecVerificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationPtrOutput)
}

// Verification describes how to verify a Stage's current Freight is fit for
// promotion downstream.
type StageSpecVerificationOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerification)(nil)).Elem()
}

func (o StageSpecVerificationOutput) ToStageSpecVerificationOutput() StageSpecVerificationOutput {
	return o
}

func (o StageSpecVerificationOutput) ToStageSpecVerificationOutputWithContext(ctx context.Context) StageSpecVerificationOutput {
	return o
}

func (o StageSpecVerificationOutput) ToStageSpecVerificationPtrOutput() StageSpecVerificationPtrOutput {
	return o.ToStageSpecVerificationPtrOutputWithContext(context.Background())
}

func (o StageSpecVerificationOutput) ToStageSpecVerificationPtrOutputWithContext(ctx context.Context) StageSpecVerificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecVerification) *StageSpecVerification {
		return &v
	}).(StageSpecVerificationPtrOutput)
}

func (o StageSpecVerificationOutput) AnalysisRunMetadata() StageSpecVerificationAnalysisRunMetadataPtrOutput {
	return o.ApplyT(func(v StageSpecVerification) *StageSpecVerificationAnalysisRunMetadata { return v.AnalysisRunMetadata }).(StageSpecVerificationAnalysisRunMetadataPtrOutput)
}

// AnalysisTemplates is a list of AnalysisTemplates from which AnalysisRuns
// should be created to verify a Stage's current Freight is fit to be promoted
// downstream.
func (o StageSpecVerificationOutput) AnalysisTemplates() StageSpecVerificationAnalysisTemplatesArrayOutput {
	return o.ApplyT(func(v StageSpecVerification) []StageSpecVerificationAnalysisTemplates { return v.AnalysisTemplates }).(StageSpecVerificationAnalysisTemplatesArrayOutput)
}

// Args lists arguments that should be added to all AnalysisRuns.
func (o StageSpecVerificationOutput) Args() StageSpecVerificationArgumentsArrayOutput {
	return o.ApplyT(func(v StageSpecVerification) []StageSpecVerificationArguments { return v.Args }).(StageSpecVerificationArgumentsArrayOutput)
}

type StageSpecVerificationPtrOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecVerification)(nil)).Elem()
}

func (o StageSpecVerificationPtrOutput) ToStageSpecVerificationPtrOutput() StageSpecVerificationPtrOutput {
	return o
}

func (o StageSpecVerificationPtrOutput) ToStageSpecVerificationPtrOutputWithContext(ctx context.Context) StageSpecVerificationPtrOutput {
	return o
}

func (o StageSpecVerificationPtrOutput) Elem() StageSpecVerificationOutput {
	return o.ApplyT(func(v *StageSpecVerification) StageSpecVerification {
		if v != nil {
			return *v
		}
		var ret StageSpecVerification
		return ret
	}).(StageSpecVerificationOutput)
}

func (o StageSpecVerificationPtrOutput) AnalysisRunMetadata() StageSpecVerificationAnalysisRunMetadataPtrOutput {
	return o.ApplyT(func(v *StageSpecVerification) *StageSpecVerificationAnalysisRunMetadata {
		if v == nil {
			return nil
		}
		return v.AnalysisRunMetadata
	}).(StageSpecVerificationAnalysisRunMetadataPtrOutput)
}

// AnalysisTemplates is a list of AnalysisTemplates from which AnalysisRuns
// should be created to verify a Stage's current Freight is fit to be promoted
// downstream.
func (o StageSpecVerificationPtrOutput) AnalysisTemplates() StageSpecVerificationAnalysisTemplatesArrayOutput {
	return o.ApplyT(func(v *StageSpecVerification) []StageSpecVerificationAnalysisTemplates {
		if v == nil {
			return nil
		}
		return v.AnalysisTemplates
	}).(StageSpecVerificationAnalysisTemplatesArrayOutput)
}

// Args lists arguments that should be added to all AnalysisRuns.
func (o StageSpecVerificationPtrOutput) Args() StageSpecVerificationArgumentsArrayOutput {
	return o.ApplyT(func(v *StageSpecVerification) []StageSpecVerificationArguments {
		if v == nil {
			return nil
		}
		return v.Args
	}).(StageSpecVerificationArgumentsArrayOutput)
}

// AnalysisRunMetadata contains optional metadata that should be applied to
// all AnalysisRuns.
type StageSpecVerificationAnalysisRunMetadata struct {
	// Additional annotations to apply to an AnalysisRun.
	Annotations map[string]string `pulumi:"annotations"`
	// Additional labels to apply to an AnalysisRun.
	Labels map[string]string `pulumi:"labels"`
}

// StageSpecVerificationAnalysisRunMetadataInput is an input type that accepts StageSpecVerificationAnalysisRunMetadataArgs and StageSpecVerificationAnalysisRunMetadataOutput values.
// You can construct a concrete instance of `StageSpecVerificationAnalysisRunMetadataInput` via:
//
//	StageSpecVerificationAnalysisRunMetadataArgs{...}
type StageSpecVerificationAnalysisRunMetadataInput interface {
	pulumi.Input

	ToStageSpecVerificationAnalysisRunMetadataOutput() StageSpecVerificationAnalysisRunMetadataOutput
	ToStageSpecVerificationAnalysisRunMetadataOutputWithContext(context.Context) StageSpecVerificationAnalysisRunMetadataOutput
}

// AnalysisRunMetadata contains optional metadata that should be applied to
// all AnalysisRuns.
type StageSpecVerificationAnalysisRunMetadataArgs struct {
	// Additional annotations to apply to an AnalysisRun.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Additional labels to apply to an AnalysisRun.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (StageSpecVerificationAnalysisRunMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerificationAnalysisRunMetadata)(nil)).Elem()
}

func (i StageSpecVerificationAnalysisRunMetadataArgs) ToStageSpecVerificationAnalysisRunMetadataOutput() StageSpecVerificationAnalysisRunMetadataOutput {
	return i.ToStageSpecVerificationAnalysisRunMetadataOutputWithContext(context.Background())
}

func (i StageSpecVerificationAnalysisRunMetadataArgs) ToStageSpecVerificationAnalysisRunMetadataOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisRunMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationAnalysisRunMetadataOutput)
}

func (i StageSpecVerificationAnalysisRunMetadataArgs) ToStageSpecVerificationAnalysisRunMetadataPtrOutput() StageSpecVerificationAnalysisRunMetadataPtrOutput {
	return i.ToStageSpecVerificationAnalysisRunMetadataPtrOutputWithContext(context.Background())
}

func (i StageSpecVerificationAnalysisRunMetadataArgs) ToStageSpecVerificationAnalysisRunMetadataPtrOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisRunMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationAnalysisRunMetadataOutput).ToStageSpecVerificationAnalysisRunMetadataPtrOutputWithContext(ctx)
}

// StageSpecVerificationAnalysisRunMetadataPtrInput is an input type that accepts StageSpecVerificationAnalysisRunMetadataArgs, StageSpecVerificationAnalysisRunMetadataPtr and StageSpecVerificationAnalysisRunMetadataPtrOutput values.
// You can construct a concrete instance of `StageSpecVerificationAnalysisRunMetadataPtrInput` via:
//
//	        StageSpecVerificationAnalysisRunMetadataArgs{...}
//
//	or:
//
//	        nil
type StageSpecVerificationAnalysisRunMetadataPtrInput interface {
	pulumi.Input

	ToStageSpecVerificationAnalysisRunMetadataPtrOutput() StageSpecVerificationAnalysisRunMetadataPtrOutput
	ToStageSpecVerificationAnalysisRunMetadataPtrOutputWithContext(context.Context) StageSpecVerificationAnalysisRunMetadataPtrOutput
}

type stageSpecVerificationAnalysisRunMetadataPtrType StageSpecVerificationAnalysisRunMetadataArgs

func StageSpecVerificationAnalysisRunMetadataPtr(v *StageSpecVerificationAnalysisRunMetadataArgs) StageSpecVerificationAnalysisRunMetadataPtrInput {
	return (*stageSpecVerificationAnalysisRunMetadataPtrType)(v)
}

func (*stageSpecVerificationAnalysisRunMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecVerificationAnalysisRunMetadata)(nil)).Elem()
}

func (i *stageSpecVerificationAnalysisRunMetadataPtrType) ToStageSpecVerificationAnalysisRunMetadataPtrOutput() StageSpecVerificationAnalysisRunMetadataPtrOutput {
	return i.ToStageSpecVerificationAnalysisRunMetadataPtrOutputWithContext(context.Background())
}

func (i *stageSpecVerificationAnalysisRunMetadataPtrType) ToStageSpecVerificationAnalysisRunMetadataPtrOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisRunMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationAnalysisRunMetadataPtrOutput)
}

// AnalysisRunMetadata contains optional metadata that should be applied to
// all AnalysisRuns.
type StageSpecVerificationAnalysisRunMetadataOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationAnalysisRunMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerificationAnalysisRunMetadata)(nil)).Elem()
}

func (o StageSpecVerificationAnalysisRunMetadataOutput) ToStageSpecVerificationAnalysisRunMetadataOutput() StageSpecVerificationAnalysisRunMetadataOutput {
	return o
}

func (o StageSpecVerificationAnalysisRunMetadataOutput) ToStageSpecVerificationAnalysisRunMetadataOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisRunMetadataOutput {
	return o
}

func (o StageSpecVerificationAnalysisRunMetadataOutput) ToStageSpecVerificationAnalysisRunMetadataPtrOutput() StageSpecVerificationAnalysisRunMetadataPtrOutput {
	return o.ToStageSpecVerificationAnalysisRunMetadataPtrOutputWithContext(context.Background())
}

func (o StageSpecVerificationAnalysisRunMetadataOutput) ToStageSpecVerificationAnalysisRunMetadataPtrOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisRunMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecVerificationAnalysisRunMetadata) *StageSpecVerificationAnalysisRunMetadata {
		return &v
	}).(StageSpecVerificationAnalysisRunMetadataPtrOutput)
}

// Additional annotations to apply to an AnalysisRun.
func (o StageSpecVerificationAnalysisRunMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v StageSpecVerificationAnalysisRunMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Additional labels to apply to an AnalysisRun.
func (o StageSpecVerificationAnalysisRunMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v StageSpecVerificationAnalysisRunMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type StageSpecVerificationAnalysisRunMetadataPtrOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationAnalysisRunMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecVerificationAnalysisRunMetadata)(nil)).Elem()
}

func (o StageSpecVerificationAnalysisRunMetadataPtrOutput) ToStageSpecVerificationAnalysisRunMetadataPtrOutput() StageSpecVerificationAnalysisRunMetadataPtrOutput {
	return o
}

func (o StageSpecVerificationAnalysisRunMetadataPtrOutput) ToStageSpecVerificationAnalysisRunMetadataPtrOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisRunMetadataPtrOutput {
	return o
}

func (o StageSpecVerificationAnalysisRunMetadataPtrOutput) Elem() StageSpecVerificationAnalysisRunMetadataOutput {
	return o.ApplyT(func(v *StageSpecVerificationAnalysisRunMetadata) StageSpecVerificationAnalysisRunMetadata {
		if v != nil {
			return *v
		}
		var ret StageSpecVerificationAnalysisRunMetadata
		return ret
	}).(StageSpecVerificationAnalysisRunMetadataOutput)
}

// Additional annotations to apply to an AnalysisRun.
func (o StageSpecVerificationAnalysisRunMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StageSpecVerificationAnalysisRunMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Additional labels to apply to an AnalysisRun.
func (o StageSpecVerificationAnalysisRunMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StageSpecVerificationAnalysisRunMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// AnalysisRunMetadata contains optional metadata that should be applied to
// all AnalysisRuns.
type StageSpecVerificationAnalysisRunMetadataPatch struct {
	// Additional annotations to apply to an AnalysisRun.
	Annotations map[string]string `pulumi:"annotations"`
	// Additional labels to apply to an AnalysisRun.
	Labels map[string]string `pulumi:"labels"`
}

// StageSpecVerificationAnalysisRunMetadataPatchInput is an input type that accepts StageSpecVerificationAnalysisRunMetadataPatchArgs and StageSpecVerificationAnalysisRunMetadataPatchOutput values.
// You can construct a concrete instance of `StageSpecVerificationAnalysisRunMetadataPatchInput` via:
//
//	StageSpecVerificationAnalysisRunMetadataPatchArgs{...}
type StageSpecVerificationAnalysisRunMetadataPatchInput interface {
	pulumi.Input

	ToStageSpecVerificationAnalysisRunMetadataPatchOutput() StageSpecVerificationAnalysisRunMetadataPatchOutput
	ToStageSpecVerificationAnalysisRunMetadataPatchOutputWithContext(context.Context) StageSpecVerificationAnalysisRunMetadataPatchOutput
}

// AnalysisRunMetadata contains optional metadata that should be applied to
// all AnalysisRuns.
type StageSpecVerificationAnalysisRunMetadataPatchArgs struct {
	// Additional annotations to apply to an AnalysisRun.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Additional labels to apply to an AnalysisRun.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (StageSpecVerificationAnalysisRunMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerificationAnalysisRunMetadataPatch)(nil)).Elem()
}

func (i StageSpecVerificationAnalysisRunMetadataPatchArgs) ToStageSpecVerificationAnalysisRunMetadataPatchOutput() StageSpecVerificationAnalysisRunMetadataPatchOutput {
	return i.ToStageSpecVerificationAnalysisRunMetadataPatchOutputWithContext(context.Background())
}

func (i StageSpecVerificationAnalysisRunMetadataPatchArgs) ToStageSpecVerificationAnalysisRunMetadataPatchOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisRunMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationAnalysisRunMetadataPatchOutput)
}

func (i StageSpecVerificationAnalysisRunMetadataPatchArgs) ToStageSpecVerificationAnalysisRunMetadataPatchPtrOutput() StageSpecVerificationAnalysisRunMetadataPatchPtrOutput {
	return i.ToStageSpecVerificationAnalysisRunMetadataPatchPtrOutputWithContext(context.Background())
}

func (i StageSpecVerificationAnalysisRunMetadataPatchArgs) ToStageSpecVerificationAnalysisRunMetadataPatchPtrOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisRunMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationAnalysisRunMetadataPatchOutput).ToStageSpecVerificationAnalysisRunMetadataPatchPtrOutputWithContext(ctx)
}

// StageSpecVerificationAnalysisRunMetadataPatchPtrInput is an input type that accepts StageSpecVerificationAnalysisRunMetadataPatchArgs, StageSpecVerificationAnalysisRunMetadataPatchPtr and StageSpecVerificationAnalysisRunMetadataPatchPtrOutput values.
// You can construct a concrete instance of `StageSpecVerificationAnalysisRunMetadataPatchPtrInput` via:
//
//	        StageSpecVerificationAnalysisRunMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type StageSpecVerificationAnalysisRunMetadataPatchPtrInput interface {
	pulumi.Input

	ToStageSpecVerificationAnalysisRunMetadataPatchPtrOutput() StageSpecVerificationAnalysisRunMetadataPatchPtrOutput
	ToStageSpecVerificationAnalysisRunMetadataPatchPtrOutputWithContext(context.Context) StageSpecVerificationAnalysisRunMetadataPatchPtrOutput
}

type stageSpecVerificationAnalysisRunMetadataPatchPtrType StageSpecVerificationAnalysisRunMetadataPatchArgs

func StageSpecVerificationAnalysisRunMetadataPatchPtr(v *StageSpecVerificationAnalysisRunMetadataPatchArgs) StageSpecVerificationAnalysisRunMetadataPatchPtrInput {
	return (*stageSpecVerificationAnalysisRunMetadataPatchPtrType)(v)
}

func (*stageSpecVerificationAnalysisRunMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecVerificationAnalysisRunMetadataPatch)(nil)).Elem()
}

func (i *stageSpecVerificationAnalysisRunMetadataPatchPtrType) ToStageSpecVerificationAnalysisRunMetadataPatchPtrOutput() StageSpecVerificationAnalysisRunMetadataPatchPtrOutput {
	return i.ToStageSpecVerificationAnalysisRunMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *stageSpecVerificationAnalysisRunMetadataPatchPtrType) ToStageSpecVerificationAnalysisRunMetadataPatchPtrOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisRunMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationAnalysisRunMetadataPatchPtrOutput)
}

// AnalysisRunMetadata contains optional metadata that should be applied to
// all AnalysisRuns.
type StageSpecVerificationAnalysisRunMetadataPatchOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationAnalysisRunMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerificationAnalysisRunMetadataPatch)(nil)).Elem()
}

func (o StageSpecVerificationAnalysisRunMetadataPatchOutput) ToStageSpecVerificationAnalysisRunMetadataPatchOutput() StageSpecVerificationAnalysisRunMetadataPatchOutput {
	return o
}

func (o StageSpecVerificationAnalysisRunMetadataPatchOutput) ToStageSpecVerificationAnalysisRunMetadataPatchOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisRunMetadataPatchOutput {
	return o
}

func (o StageSpecVerificationAnalysisRunMetadataPatchOutput) ToStageSpecVerificationAnalysisRunMetadataPatchPtrOutput() StageSpecVerificationAnalysisRunMetadataPatchPtrOutput {
	return o.ToStageSpecVerificationAnalysisRunMetadataPatchPtrOutputWithContext(context.Background())
}

func (o StageSpecVerificationAnalysisRunMetadataPatchOutput) ToStageSpecVerificationAnalysisRunMetadataPatchPtrOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisRunMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecVerificationAnalysisRunMetadataPatch) *StageSpecVerificationAnalysisRunMetadataPatch {
		return &v
	}).(StageSpecVerificationAnalysisRunMetadataPatchPtrOutput)
}

// Additional annotations to apply to an AnalysisRun.
func (o StageSpecVerificationAnalysisRunMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v StageSpecVerificationAnalysisRunMetadataPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Additional labels to apply to an AnalysisRun.
func (o StageSpecVerificationAnalysisRunMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v StageSpecVerificationAnalysisRunMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type StageSpecVerificationAnalysisRunMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationAnalysisRunMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecVerificationAnalysisRunMetadataPatch)(nil)).Elem()
}

func (o StageSpecVerificationAnalysisRunMetadataPatchPtrOutput) ToStageSpecVerificationAnalysisRunMetadataPatchPtrOutput() StageSpecVerificationAnalysisRunMetadataPatchPtrOutput {
	return o
}

func (o StageSpecVerificationAnalysisRunMetadataPatchPtrOutput) ToStageSpecVerificationAnalysisRunMetadataPatchPtrOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisRunMetadataPatchPtrOutput {
	return o
}

func (o StageSpecVerificationAnalysisRunMetadataPatchPtrOutput) Elem() StageSpecVerificationAnalysisRunMetadataPatchOutput {
	return o.ApplyT(func(v *StageSpecVerificationAnalysisRunMetadataPatch) StageSpecVerificationAnalysisRunMetadataPatch {
		if v != nil {
			return *v
		}
		var ret StageSpecVerificationAnalysisRunMetadataPatch
		return ret
	}).(StageSpecVerificationAnalysisRunMetadataPatchOutput)
}

// Additional annotations to apply to an AnalysisRun.
func (o StageSpecVerificationAnalysisRunMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StageSpecVerificationAnalysisRunMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Additional labels to apply to an AnalysisRun.
func (o StageSpecVerificationAnalysisRunMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StageSpecVerificationAnalysisRunMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// AnalysisTemplateReference is a reference to an AnalysisTemplate.
type StageSpecVerificationAnalysisTemplates struct {
	// Kind is the type of the AnalysisTemplate. Can be either AnalysisTemplate or
	// ClusterAnalysisTemplate, default is AnalysisTemplate.
	Kind *string `pulumi:"kind"`
	// Name is the name of the AnalysisTemplate in the same project/namespace as
	// the Stage.
	Name *string `pulumi:"name"`
}

// StageSpecVerificationAnalysisTemplatesInput is an input type that accepts StageSpecVerificationAnalysisTemplatesArgs and StageSpecVerificationAnalysisTemplatesOutput values.
// You can construct a concrete instance of `StageSpecVerificationAnalysisTemplatesInput` via:
//
//	StageSpecVerificationAnalysisTemplatesArgs{...}
type StageSpecVerificationAnalysisTemplatesInput interface {
	pulumi.Input

	ToStageSpecVerificationAnalysisTemplatesOutput() StageSpecVerificationAnalysisTemplatesOutput
	ToStageSpecVerificationAnalysisTemplatesOutputWithContext(context.Context) StageSpecVerificationAnalysisTemplatesOutput
}

// AnalysisTemplateReference is a reference to an AnalysisTemplate.
type StageSpecVerificationAnalysisTemplatesArgs struct {
	// Kind is the type of the AnalysisTemplate. Can be either AnalysisTemplate or
	// ClusterAnalysisTemplate, default is AnalysisTemplate.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the AnalysisTemplate in the same project/namespace as
	// the Stage.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StageSpecVerificationAnalysisTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerificationAnalysisTemplates)(nil)).Elem()
}

func (i StageSpecVerificationAnalysisTemplatesArgs) ToStageSpecVerificationAnalysisTemplatesOutput() StageSpecVerificationAnalysisTemplatesOutput {
	return i.ToStageSpecVerificationAnalysisTemplatesOutputWithContext(context.Background())
}

func (i StageSpecVerificationAnalysisTemplatesArgs) ToStageSpecVerificationAnalysisTemplatesOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationAnalysisTemplatesOutput)
}

// StageSpecVerificationAnalysisTemplatesArrayInput is an input type that accepts StageSpecVerificationAnalysisTemplatesArray and StageSpecVerificationAnalysisTemplatesArrayOutput values.
// You can construct a concrete instance of `StageSpecVerificationAnalysisTemplatesArrayInput` via:
//
//	StageSpecVerificationAnalysisTemplatesArray{ StageSpecVerificationAnalysisTemplatesArgs{...} }
type StageSpecVerificationAnalysisTemplatesArrayInput interface {
	pulumi.Input

	ToStageSpecVerificationAnalysisTemplatesArrayOutput() StageSpecVerificationAnalysisTemplatesArrayOutput
	ToStageSpecVerificationAnalysisTemplatesArrayOutputWithContext(context.Context) StageSpecVerificationAnalysisTemplatesArrayOutput
}

type StageSpecVerificationAnalysisTemplatesArray []StageSpecVerificationAnalysisTemplatesInput

func (StageSpecVerificationAnalysisTemplatesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecVerificationAnalysisTemplates)(nil)).Elem()
}

func (i StageSpecVerificationAnalysisTemplatesArray) ToStageSpecVerificationAnalysisTemplatesArrayOutput() StageSpecVerificationAnalysisTemplatesArrayOutput {
	return i.ToStageSpecVerificationAnalysisTemplatesArrayOutputWithContext(context.Background())
}

func (i StageSpecVerificationAnalysisTemplatesArray) ToStageSpecVerificationAnalysisTemplatesArrayOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisTemplatesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationAnalysisTemplatesArrayOutput)
}

// AnalysisTemplateReference is a reference to an AnalysisTemplate.
type StageSpecVerificationAnalysisTemplatesOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationAnalysisTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerificationAnalysisTemplates)(nil)).Elem()
}

func (o StageSpecVerificationAnalysisTemplatesOutput) ToStageSpecVerificationAnalysisTemplatesOutput() StageSpecVerificationAnalysisTemplatesOutput {
	return o
}

func (o StageSpecVerificationAnalysisTemplatesOutput) ToStageSpecVerificationAnalysisTemplatesOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisTemplatesOutput {
	return o
}

// Kind is the type of the AnalysisTemplate. Can be either AnalysisTemplate or
// ClusterAnalysisTemplate, default is AnalysisTemplate.
func (o StageSpecVerificationAnalysisTemplatesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecVerificationAnalysisTemplates) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the AnalysisTemplate in the same project/namespace as
// the Stage.
func (o StageSpecVerificationAnalysisTemplatesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecVerificationAnalysisTemplates) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StageSpecVerificationAnalysisTemplatesArrayOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationAnalysisTemplatesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecVerificationAnalysisTemplates)(nil)).Elem()
}

func (o StageSpecVerificationAnalysisTemplatesArrayOutput) ToStageSpecVerificationAnalysisTemplatesArrayOutput() StageSpecVerificationAnalysisTemplatesArrayOutput {
	return o
}

func (o StageSpecVerificationAnalysisTemplatesArrayOutput) ToStageSpecVerificationAnalysisTemplatesArrayOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisTemplatesArrayOutput {
	return o
}

func (o StageSpecVerificationAnalysisTemplatesArrayOutput) Index(i pulumi.IntInput) StageSpecVerificationAnalysisTemplatesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecVerificationAnalysisTemplates {
		return vs[0].([]StageSpecVerificationAnalysisTemplates)[vs[1].(int)]
	}).(StageSpecVerificationAnalysisTemplatesOutput)
}

// AnalysisTemplateReference is a reference to an AnalysisTemplate.
type StageSpecVerificationAnalysisTemplatesPatch struct {
	// Kind is the type of the AnalysisTemplate. Can be either AnalysisTemplate or
	// ClusterAnalysisTemplate, default is AnalysisTemplate.
	Kind *string `pulumi:"kind"`
	// Name is the name of the AnalysisTemplate in the same project/namespace as
	// the Stage.
	Name *string `pulumi:"name"`
}

// StageSpecVerificationAnalysisTemplatesPatchInput is an input type that accepts StageSpecVerificationAnalysisTemplatesPatchArgs and StageSpecVerificationAnalysisTemplatesPatchOutput values.
// You can construct a concrete instance of `StageSpecVerificationAnalysisTemplatesPatchInput` via:
//
//	StageSpecVerificationAnalysisTemplatesPatchArgs{...}
type StageSpecVerificationAnalysisTemplatesPatchInput interface {
	pulumi.Input

	ToStageSpecVerificationAnalysisTemplatesPatchOutput() StageSpecVerificationAnalysisTemplatesPatchOutput
	ToStageSpecVerificationAnalysisTemplatesPatchOutputWithContext(context.Context) StageSpecVerificationAnalysisTemplatesPatchOutput
}

// AnalysisTemplateReference is a reference to an AnalysisTemplate.
type StageSpecVerificationAnalysisTemplatesPatchArgs struct {
	// Kind is the type of the AnalysisTemplate. Can be either AnalysisTemplate or
	// ClusterAnalysisTemplate, default is AnalysisTemplate.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the AnalysisTemplate in the same project/namespace as
	// the Stage.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StageSpecVerificationAnalysisTemplatesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerificationAnalysisTemplatesPatch)(nil)).Elem()
}

func (i StageSpecVerificationAnalysisTemplatesPatchArgs) ToStageSpecVerificationAnalysisTemplatesPatchOutput() StageSpecVerificationAnalysisTemplatesPatchOutput {
	return i.ToStageSpecVerificationAnalysisTemplatesPatchOutputWithContext(context.Background())
}

func (i StageSpecVerificationAnalysisTemplatesPatchArgs) ToStageSpecVerificationAnalysisTemplatesPatchOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisTemplatesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationAnalysisTemplatesPatchOutput)
}

// StageSpecVerificationAnalysisTemplatesPatchArrayInput is an input type that accepts StageSpecVerificationAnalysisTemplatesPatchArray and StageSpecVerificationAnalysisTemplatesPatchArrayOutput values.
// You can construct a concrete instance of `StageSpecVerificationAnalysisTemplatesPatchArrayInput` via:
//
//	StageSpecVerificationAnalysisTemplatesPatchArray{ StageSpecVerificationAnalysisTemplatesPatchArgs{...} }
type StageSpecVerificationAnalysisTemplatesPatchArrayInput interface {
	pulumi.Input

	ToStageSpecVerificationAnalysisTemplatesPatchArrayOutput() StageSpecVerificationAnalysisTemplatesPatchArrayOutput
	ToStageSpecVerificationAnalysisTemplatesPatchArrayOutputWithContext(context.Context) StageSpecVerificationAnalysisTemplatesPatchArrayOutput
}

type StageSpecVerificationAnalysisTemplatesPatchArray []StageSpecVerificationAnalysisTemplatesPatchInput

func (StageSpecVerificationAnalysisTemplatesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecVerificationAnalysisTemplatesPatch)(nil)).Elem()
}

func (i StageSpecVerificationAnalysisTemplatesPatchArray) ToStageSpecVerificationAnalysisTemplatesPatchArrayOutput() StageSpecVerificationAnalysisTemplatesPatchArrayOutput {
	return i.ToStageSpecVerificationAnalysisTemplatesPatchArrayOutputWithContext(context.Background())
}

func (i StageSpecVerificationAnalysisTemplatesPatchArray) ToStageSpecVerificationAnalysisTemplatesPatchArrayOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisTemplatesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationAnalysisTemplatesPatchArrayOutput)
}

// AnalysisTemplateReference is a reference to an AnalysisTemplate.
type StageSpecVerificationAnalysisTemplatesPatchOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationAnalysisTemplatesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerificationAnalysisTemplatesPatch)(nil)).Elem()
}

func (o StageSpecVerificationAnalysisTemplatesPatchOutput) ToStageSpecVerificationAnalysisTemplatesPatchOutput() StageSpecVerificationAnalysisTemplatesPatchOutput {
	return o
}

func (o StageSpecVerificationAnalysisTemplatesPatchOutput) ToStageSpecVerificationAnalysisTemplatesPatchOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisTemplatesPatchOutput {
	return o
}

// Kind is the type of the AnalysisTemplate. Can be either AnalysisTemplate or
// ClusterAnalysisTemplate, default is AnalysisTemplate.
func (o StageSpecVerificationAnalysisTemplatesPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecVerificationAnalysisTemplatesPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the AnalysisTemplate in the same project/namespace as
// the Stage.
func (o StageSpecVerificationAnalysisTemplatesPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecVerificationAnalysisTemplatesPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StageSpecVerificationAnalysisTemplatesPatchArrayOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationAnalysisTemplatesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecVerificationAnalysisTemplatesPatch)(nil)).Elem()
}

func (o StageSpecVerificationAnalysisTemplatesPatchArrayOutput) ToStageSpecVerificationAnalysisTemplatesPatchArrayOutput() StageSpecVerificationAnalysisTemplatesPatchArrayOutput {
	return o
}

func (o StageSpecVerificationAnalysisTemplatesPatchArrayOutput) ToStageSpecVerificationAnalysisTemplatesPatchArrayOutputWithContext(ctx context.Context) StageSpecVerificationAnalysisTemplatesPatchArrayOutput {
	return o
}

func (o StageSpecVerificationAnalysisTemplatesPatchArrayOutput) Index(i pulumi.IntInput) StageSpecVerificationAnalysisTemplatesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecVerificationAnalysisTemplatesPatch {
		return vs[0].([]StageSpecVerificationAnalysisTemplatesPatch)[vs[1].(int)]
	}).(StageSpecVerificationAnalysisTemplatesPatchOutput)
}

// AnalysisRunArgument represents an argument to be added to an AnalysisRun.
type StageSpecVerificationArguments struct {
	// Name is the name of the argument.
	Name *string `pulumi:"name"`
	// Value is the value of the argument.
	Value *string `pulumi:"value"`
}

// StageSpecVerificationArgumentsInput is an input type that accepts StageSpecVerificationArgumentsArgs and StageSpecVerificationArgumentsOutput values.
// You can construct a concrete instance of `StageSpecVerificationArgumentsInput` via:
//
//	StageSpecVerificationArgumentsArgs{...}
type StageSpecVerificationArgumentsInput interface {
	pulumi.Input

	ToStageSpecVerificationArgumentsOutput() StageSpecVerificationArgumentsOutput
	ToStageSpecVerificationArgumentsOutputWithContext(context.Context) StageSpecVerificationArgumentsOutput
}

// AnalysisRunArgument represents an argument to be added to an AnalysisRun.
type StageSpecVerificationArgumentsArgs struct {
	// Name is the name of the argument.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the argument.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StageSpecVerificationArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerificationArguments)(nil)).Elem()
}

func (i StageSpecVerificationArgumentsArgs) ToStageSpecVerificationArgumentsOutput() StageSpecVerificationArgumentsOutput {
	return i.ToStageSpecVerificationArgumentsOutputWithContext(context.Background())
}

func (i StageSpecVerificationArgumentsArgs) ToStageSpecVerificationArgumentsOutputWithContext(ctx context.Context) StageSpecVerificationArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationArgumentsOutput)
}

// StageSpecVerificationArgumentsArrayInput is an input type that accepts StageSpecVerificationArgumentsArray and StageSpecVerificationArgumentsArrayOutput values.
// You can construct a concrete instance of `StageSpecVerificationArgumentsArrayInput` via:
//
//	StageSpecVerificationArgumentsArray{ StageSpecVerificationArgumentsArgs{...} }
type StageSpecVerificationArgumentsArrayInput interface {
	pulumi.Input

	ToStageSpecVerificationArgumentsArrayOutput() StageSpecVerificationArgumentsArrayOutput
	ToStageSpecVerificationArgumentsArrayOutputWithContext(context.Context) StageSpecVerificationArgumentsArrayOutput
}

type StageSpecVerificationArgumentsArray []StageSpecVerificationArgumentsInput

func (StageSpecVerificationArgumentsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecVerificationArguments)(nil)).Elem()
}

func (i StageSpecVerificationArgumentsArray) ToStageSpecVerificationArgumentsArrayOutput() StageSpecVerificationArgumentsArrayOutput {
	return i.ToStageSpecVerificationArgumentsArrayOutputWithContext(context.Background())
}

func (i StageSpecVerificationArgumentsArray) ToStageSpecVerificationArgumentsArrayOutputWithContext(ctx context.Context) StageSpecVerificationArgumentsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationArgumentsArrayOutput)
}

// AnalysisRunArgument represents an argument to be added to an AnalysisRun.
type StageSpecVerificationArgumentsOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerificationArguments)(nil)).Elem()
}

func (o StageSpecVerificationArgumentsOutput) ToStageSpecVerificationArgumentsOutput() StageSpecVerificationArgumentsOutput {
	return o
}

func (o StageSpecVerificationArgumentsOutput) ToStageSpecVerificationArgumentsOutputWithContext(ctx context.Context) StageSpecVerificationArgumentsOutput {
	return o
}

// Name is the name of the argument.
func (o StageSpecVerificationArgumentsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecVerificationArguments) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the argument.
func (o StageSpecVerificationArgumentsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecVerificationArguments) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StageSpecVerificationArgumentsArrayOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationArgumentsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecVerificationArguments)(nil)).Elem()
}

func (o StageSpecVerificationArgumentsArrayOutput) ToStageSpecVerificationArgumentsArrayOutput() StageSpecVerificationArgumentsArrayOutput {
	return o
}

func (o StageSpecVerificationArgumentsArrayOutput) ToStageSpecVerificationArgumentsArrayOutputWithContext(ctx context.Context) StageSpecVerificationArgumentsArrayOutput {
	return o
}

func (o StageSpecVerificationArgumentsArrayOutput) Index(i pulumi.IntInput) StageSpecVerificationArgumentsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecVerificationArguments {
		return vs[0].([]StageSpecVerificationArguments)[vs[1].(int)]
	}).(StageSpecVerificationArgumentsOutput)
}

// AnalysisRunArgument represents an argument to be added to an AnalysisRun.
type StageSpecVerificationArgumentsPatch struct {
	// Name is the name of the argument.
	Name *string `pulumi:"name"`
	// Value is the value of the argument.
	Value *string `pulumi:"value"`
}

// StageSpecVerificationArgumentsPatchInput is an input type that accepts StageSpecVerificationArgumentsPatchArgs and StageSpecVerificationArgumentsPatchOutput values.
// You can construct a concrete instance of `StageSpecVerificationArgumentsPatchInput` via:
//
//	StageSpecVerificationArgumentsPatchArgs{...}
type StageSpecVerificationArgumentsPatchInput interface {
	pulumi.Input

	ToStageSpecVerificationArgumentsPatchOutput() StageSpecVerificationArgumentsPatchOutput
	ToStageSpecVerificationArgumentsPatchOutputWithContext(context.Context) StageSpecVerificationArgumentsPatchOutput
}

// AnalysisRunArgument represents an argument to be added to an AnalysisRun.
type StageSpecVerificationArgumentsPatchArgs struct {
	// Name is the name of the argument.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value is the value of the argument.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StageSpecVerificationArgumentsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerificationArgumentsPatch)(nil)).Elem()
}

func (i StageSpecVerificationArgumentsPatchArgs) ToStageSpecVerificationArgumentsPatchOutput() StageSpecVerificationArgumentsPatchOutput {
	return i.ToStageSpecVerificationArgumentsPatchOutputWithContext(context.Background())
}

func (i StageSpecVerificationArgumentsPatchArgs) ToStageSpecVerificationArgumentsPatchOutputWithContext(ctx context.Context) StageSpecVerificationArgumentsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationArgumentsPatchOutput)
}

// StageSpecVerificationArgumentsPatchArrayInput is an input type that accepts StageSpecVerificationArgumentsPatchArray and StageSpecVerificationArgumentsPatchArrayOutput values.
// You can construct a concrete instance of `StageSpecVerificationArgumentsPatchArrayInput` via:
//
//	StageSpecVerificationArgumentsPatchArray{ StageSpecVerificationArgumentsPatchArgs{...} }
type StageSpecVerificationArgumentsPatchArrayInput interface {
	pulumi.Input

	ToStageSpecVerificationArgumentsPatchArrayOutput() StageSpecVerificationArgumentsPatchArrayOutput
	ToStageSpecVerificationArgumentsPatchArrayOutputWithContext(context.Context) StageSpecVerificationArgumentsPatchArrayOutput
}

type StageSpecVerificationArgumentsPatchArray []StageSpecVerificationArgumentsPatchInput

func (StageSpecVerificationArgumentsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecVerificationArgumentsPatch)(nil)).Elem()
}

func (i StageSpecVerificationArgumentsPatchArray) ToStageSpecVerificationArgumentsPatchArrayOutput() StageSpecVerificationArgumentsPatchArrayOutput {
	return i.ToStageSpecVerificationArgumentsPatchArrayOutputWithContext(context.Background())
}

func (i StageSpecVerificationArgumentsPatchArray) ToStageSpecVerificationArgumentsPatchArrayOutputWithContext(ctx context.Context) StageSpecVerificationArgumentsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationArgumentsPatchArrayOutput)
}

// AnalysisRunArgument represents an argument to be added to an AnalysisRun.
type StageSpecVerificationArgumentsPatchOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationArgumentsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerificationArgumentsPatch)(nil)).Elem()
}

func (o StageSpecVerificationArgumentsPatchOutput) ToStageSpecVerificationArgumentsPatchOutput() StageSpecVerificationArgumentsPatchOutput {
	return o
}

func (o StageSpecVerificationArgumentsPatchOutput) ToStageSpecVerificationArgumentsPatchOutputWithContext(ctx context.Context) StageSpecVerificationArgumentsPatchOutput {
	return o
}

// Name is the name of the argument.
func (o StageSpecVerificationArgumentsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecVerificationArgumentsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value is the value of the argument.
func (o StageSpecVerificationArgumentsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageSpecVerificationArgumentsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StageSpecVerificationArgumentsPatchArrayOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationArgumentsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecVerificationArgumentsPatch)(nil)).Elem()
}

func (o StageSpecVerificationArgumentsPatchArrayOutput) ToStageSpecVerificationArgumentsPatchArrayOutput() StageSpecVerificationArgumentsPatchArrayOutput {
	return o
}

func (o StageSpecVerificationArgumentsPatchArrayOutput) ToStageSpecVerificationArgumentsPatchArrayOutputWithContext(ctx context.Context) StageSpecVerificationArgumentsPatchArrayOutput {
	return o
}

func (o StageSpecVerificationArgumentsPatchArrayOutput) Index(i pulumi.IntInput) StageSpecVerificationArgumentsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecVerificationArgumentsPatch {
		return vs[0].([]StageSpecVerificationArgumentsPatch)[vs[1].(int)]
	}).(StageSpecVerificationArgumentsPatchOutput)
}

// Verification describes how to verify a Stage's current Freight is fit for
// promotion downstream.
type StageSpecVerificationPatch struct {
	AnalysisRunMetadata *StageSpecVerificationAnalysisRunMetadataPatch `pulumi:"analysisRunMetadata"`
	// AnalysisTemplates is a list of AnalysisTemplates from which AnalysisRuns
	// should be created to verify a Stage's current Freight is fit to be promoted
	// downstream.
	AnalysisTemplates []StageSpecVerificationAnalysisTemplatesPatch `pulumi:"analysisTemplates"`
	// Args lists arguments that should be added to all AnalysisRuns.
	Args []StageSpecVerificationArgumentsPatch `pulumi:"args"`
}

// StageSpecVerificationPatchInput is an input type that accepts StageSpecVerificationPatchArgs and StageSpecVerificationPatchOutput values.
// You can construct a concrete instance of `StageSpecVerificationPatchInput` via:
//
//	StageSpecVerificationPatchArgs{...}
type StageSpecVerificationPatchInput interface {
	pulumi.Input

	ToStageSpecVerificationPatchOutput() StageSpecVerificationPatchOutput
	ToStageSpecVerificationPatchOutputWithContext(context.Context) StageSpecVerificationPatchOutput
}

// Verification describes how to verify a Stage's current Freight is fit for
// promotion downstream.
type StageSpecVerificationPatchArgs struct {
	AnalysisRunMetadata StageSpecVerificationAnalysisRunMetadataPatchPtrInput `pulumi:"analysisRunMetadata"`
	// AnalysisTemplates is a list of AnalysisTemplates from which AnalysisRuns
	// should be created to verify a Stage's current Freight is fit to be promoted
	// downstream.
	AnalysisTemplates StageSpecVerificationAnalysisTemplatesPatchArrayInput `pulumi:"analysisTemplates"`
	// Args lists arguments that should be added to all AnalysisRuns.
	Args StageSpecVerificationArgumentsPatchArrayInput `pulumi:"args"`
}

func (StageSpecVerificationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerificationPatch)(nil)).Elem()
}

func (i StageSpecVerificationPatchArgs) ToStageSpecVerificationPatchOutput() StageSpecVerificationPatchOutput {
	return i.ToStageSpecVerificationPatchOutputWithContext(context.Background())
}

func (i StageSpecVerificationPatchArgs) ToStageSpecVerificationPatchOutputWithContext(ctx context.Context) StageSpecVerificationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationPatchOutput)
}

func (i StageSpecVerificationPatchArgs) ToStageSpecVerificationPatchPtrOutput() StageSpecVerificationPatchPtrOutput {
	return i.ToStageSpecVerificationPatchPtrOutputWithContext(context.Background())
}

func (i StageSpecVerificationPatchArgs) ToStageSpecVerificationPatchPtrOutputWithContext(ctx context.Context) StageSpecVerificationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationPatchOutput).ToStageSpecVerificationPatchPtrOutputWithContext(ctx)
}

// StageSpecVerificationPatchPtrInput is an input type that accepts StageSpecVerificationPatchArgs, StageSpecVerificationPatchPtr and StageSpecVerificationPatchPtrOutput values.
// You can construct a concrete instance of `StageSpecVerificationPatchPtrInput` via:
//
//	        StageSpecVerificationPatchArgs{...}
//
//	or:
//
//	        nil
type StageSpecVerificationPatchPtrInput interface {
	pulumi.Input

	ToStageSpecVerificationPatchPtrOutput() StageSpecVerificationPatchPtrOutput
	ToStageSpecVerificationPatchPtrOutputWithContext(context.Context) StageSpecVerificationPatchPtrOutput
}

type stageSpecVerificationPatchPtrType StageSpecVerificationPatchArgs

func StageSpecVerificationPatchPtr(v *StageSpecVerificationPatchArgs) StageSpecVerificationPatchPtrInput {
	return (*stageSpecVerificationPatchPtrType)(v)
}

func (*stageSpecVerificationPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecVerificationPatch)(nil)).Elem()
}

func (i *stageSpecVerificationPatchPtrType) ToStageSpecVerificationPatchPtrOutput() StageSpecVerificationPatchPtrOutput {
	return i.ToStageSpecVerificationPatchPtrOutputWithContext(context.Background())
}

func (i *stageSpecVerificationPatchPtrType) ToStageSpecVerificationPatchPtrOutputWithContext(ctx context.Context) StageSpecVerificationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecVerificationPatchPtrOutput)
}

// Verification describes how to verify a Stage's current Freight is fit for
// promotion downstream.
type StageSpecVerificationPatchOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecVerificationPatch)(nil)).Elem()
}

func (o StageSpecVerificationPatchOutput) ToStageSpecVerificationPatchOutput() StageSpecVerificationPatchOutput {
	return o
}

func (o StageSpecVerificationPatchOutput) ToStageSpecVerificationPatchOutputWithContext(ctx context.Context) StageSpecVerificationPatchOutput {
	return o
}

func (o StageSpecVerificationPatchOutput) ToStageSpecVerificationPatchPtrOutput() StageSpecVerificationPatchPtrOutput {
	return o.ToStageSpecVerificationPatchPtrOutputWithContext(context.Background())
}

func (o StageSpecVerificationPatchOutput) ToStageSpecVerificationPatchPtrOutputWithContext(ctx context.Context) StageSpecVerificationPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageSpecVerificationPatch) *StageSpecVerificationPatch {
		return &v
	}).(StageSpecVerificationPatchPtrOutput)
}

func (o StageSpecVerificationPatchOutput) AnalysisRunMetadata() StageSpecVerificationAnalysisRunMetadataPatchPtrOutput {
	return o.ApplyT(func(v StageSpecVerificationPatch) *StageSpecVerificationAnalysisRunMetadataPatch {
		return v.AnalysisRunMetadata
	}).(StageSpecVerificationAnalysisRunMetadataPatchPtrOutput)
}

// AnalysisTemplates is a list of AnalysisTemplates from which AnalysisRuns
// should be created to verify a Stage's current Freight is fit to be promoted
// downstream.
func (o StageSpecVerificationPatchOutput) AnalysisTemplates() StageSpecVerificationAnalysisTemplatesPatchArrayOutput {
	return o.ApplyT(func(v StageSpecVerificationPatch) []StageSpecVerificationAnalysisTemplatesPatch {
		return v.AnalysisTemplates
	}).(StageSpecVerificationAnalysisTemplatesPatchArrayOutput)
}

// Args lists arguments that should be added to all AnalysisRuns.
func (o StageSpecVerificationPatchOutput) Args() StageSpecVerificationArgumentsPatchArrayOutput {
	return o.ApplyT(func(v StageSpecVerificationPatch) []StageSpecVerificationArgumentsPatch { return v.Args }).(StageSpecVerificationArgumentsPatchArrayOutput)
}

type StageSpecVerificationPatchPtrOutput struct{ *pulumi.OutputState }

func (StageSpecVerificationPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageSpecVerificationPatch)(nil)).Elem()
}

func (o StageSpecVerificationPatchPtrOutput) ToStageSpecVerificationPatchPtrOutput() StageSpecVerificationPatchPtrOutput {
	return o
}

func (o StageSpecVerificationPatchPtrOutput) ToStageSpecVerificationPatchPtrOutputWithContext(ctx context.Context) StageSpecVerificationPatchPtrOutput {
	return o
}

func (o StageSpecVerificationPatchPtrOutput) Elem() StageSpecVerificationPatchOutput {
	return o.ApplyT(func(v *StageSpecVerificationPatch) StageSpecVerificationPatch {
		if v != nil {
			return *v
		}
		var ret StageSpecVerificationPatch
		return ret
	}).(StageSpecVerificationPatchOutput)
}

func (o StageSpecVerificationPatchPtrOutput) AnalysisRunMetadata() StageSpecVerificationAnalysisRunMetadataPatchPtrOutput {
	return o.ApplyT(func(v *StageSpecVerificationPatch) *StageSpecVerificationAnalysisRunMetadataPatch {
		if v == nil {
			return nil
		}
		return v.AnalysisRunMetadata
	}).(StageSpecVerificationAnalysisRunMetadataPatchPtrOutput)
}

// AnalysisTemplates is a list of AnalysisTemplates from which AnalysisRuns
// should be created to verify a Stage's current Freight is fit to be promoted
// downstream.
func (o StageSpecVerificationPatchPtrOutput) AnalysisTemplates() StageSpecVerificationAnalysisTemplatesPatchArrayOutput {
	return o.ApplyT(func(v *StageSpecVerificationPatch) []StageSpecVerificationAnalysisTemplatesPatch {
		if v == nil {
			return nil
		}
		return v.AnalysisTemplates
	}).(StageSpecVerificationAnalysisTemplatesPatchArrayOutput)
}

// Args lists arguments that should be added to all AnalysisRuns.
func (o StageSpecVerificationPatchPtrOutput) Args() StageSpecVerificationArgumentsPatchArrayOutput {
	return o.ApplyT(func(v *StageSpecVerificationPatch) []StageSpecVerificationArgumentsPatch {
		if v == nil {
			return nil
		}
		return v.Args
	}).(StageSpecVerificationArgumentsPatchArrayOutput)
}

// Status describes the Stage's current and recent Freight, health, and more.
type StageStatus struct {
	// Conditions contains the last observations of the Stage's current
	// state.
	Conditions       []StageStatusConditions      `pulumi:"conditions"`
	CurrentPromotion *StageStatusCurrentPromotion `pulumi:"currentPromotion"`
	// FreightHistory is a list of recent Freight selections that were deployed
	// to the Stage. By default, the last ten Freight selections are stored.
	// The first item in the list is the most recent Freight selection and
	// currently deployed to the Stage, subsequent items are older selections.
	FreightHistory []StageStatusFreightHistory `pulumi:"freightHistory"`
	// FreightSummary is human-readable text maintained by the controller that
	// summarizes what Freight is currently deployed to the Stage. For Stages that
	// request a single piece of Freight AND the request has been fulfilled, this
	// field will simply contain the name of the Freight. For Stages that request
	// a single piece of Freight AND the request has NOT been fulfilled, or for
	// Stages that request multiple pieces of Freight, this field will contain a
	// summary of fulfilled/requested Freight. The existence of this field is a
	// workaround for kubectl limitations so that this complex but valuable
	// information can be displayed in a column in response to `kubectl get
	// stages`.
	FreightSummary *string            `pulumi:"freightSummary"`
	Health         *StageStatusHealth `pulumi:"health"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh *string                   `pulumi:"lastHandledRefresh"`
	LastPromotion      *StageStatusLastPromotion `pulumi:"lastPromotion"`
	// ObservedGeneration represents the .metadata.generation that this Stage
	// status was reconciled against.
	ObservedGeneration *int `pulumi:"observedGeneration"`
}

// StageStatusInput is an input type that accepts StageStatusArgs and StageStatusOutput values.
// You can construct a concrete instance of `StageStatusInput` via:
//
//	StageStatusArgs{...}
type StageStatusInput interface {
	pulumi.Input

	ToStageStatusOutput() StageStatusOutput
	ToStageStatusOutputWithContext(context.Context) StageStatusOutput
}

// Status describes the Stage's current and recent Freight, health, and more.
type StageStatusArgs struct {
	// Conditions contains the last observations of the Stage's current
	// state.
	Conditions       StageStatusConditionsArrayInput     `pulumi:"conditions"`
	CurrentPromotion StageStatusCurrentPromotionPtrInput `pulumi:"currentPromotion"`
	// FreightHistory is a list of recent Freight selections that were deployed
	// to the Stage. By default, the last ten Freight selections are stored.
	// The first item in the list is the most recent Freight selection and
	// currently deployed to the Stage, subsequent items are older selections.
	FreightHistory StageStatusFreightHistoryArrayInput `pulumi:"freightHistory"`
	// FreightSummary is human-readable text maintained by the controller that
	// summarizes what Freight is currently deployed to the Stage. For Stages that
	// request a single piece of Freight AND the request has been fulfilled, this
	// field will simply contain the name of the Freight. For Stages that request
	// a single piece of Freight AND the request has NOT been fulfilled, or for
	// Stages that request multiple pieces of Freight, this field will contain a
	// summary of fulfilled/requested Freight. The existence of this field is a
	// workaround for kubectl limitations so that this complex but valuable
	// information can be displayed in a column in response to `kubectl get
	// stages`.
	FreightSummary pulumi.StringPtrInput     `pulumi:"freightSummary"`
	Health         StageStatusHealthPtrInput `pulumi:"health"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh pulumi.StringPtrInput            `pulumi:"lastHandledRefresh"`
	LastPromotion      StageStatusLastPromotionPtrInput `pulumi:"lastPromotion"`
	// ObservedGeneration represents the .metadata.generation that this Stage
	// status was reconciled against.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
}

func (StageStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatus)(nil)).Elem()
}

func (i StageStatusArgs) ToStageStatusOutput() StageStatusOutput {
	return i.ToStageStatusOutputWithContext(context.Background())
}

func (i StageStatusArgs) ToStageStatusOutputWithContext(ctx context.Context) StageStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusOutput)
}

func (i StageStatusArgs) ToStageStatusPtrOutput() StageStatusPtrOutput {
	return i.ToStageStatusPtrOutputWithContext(context.Background())
}

func (i StageStatusArgs) ToStageStatusPtrOutputWithContext(ctx context.Context) StageStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusOutput).ToStageStatusPtrOutputWithContext(ctx)
}

// StageStatusPtrInput is an input type that accepts StageStatusArgs, StageStatusPtr and StageStatusPtrOutput values.
// You can construct a concrete instance of `StageStatusPtrInput` via:
//
//	        StageStatusArgs{...}
//
//	or:
//
//	        nil
type StageStatusPtrInput interface {
	pulumi.Input

	ToStageStatusPtrOutput() StageStatusPtrOutput
	ToStageStatusPtrOutputWithContext(context.Context) StageStatusPtrOutput
}

type stageStatusPtrType StageStatusArgs

func StageStatusPtr(v *StageStatusArgs) StageStatusPtrInput {
	return (*stageStatusPtrType)(v)
}

func (*stageStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatus)(nil)).Elem()
}

func (i *stageStatusPtrType) ToStageStatusPtrOutput() StageStatusPtrOutput {
	return i.ToStageStatusPtrOutputWithContext(context.Background())
}

func (i *stageStatusPtrType) ToStageStatusPtrOutputWithContext(ctx context.Context) StageStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusPtrOutput)
}

// Status describes the Stage's current and recent Freight, health, and more.
type StageStatusOutput struct{ *pulumi.OutputState }

func (StageStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatus)(nil)).Elem()
}

func (o StageStatusOutput) ToStageStatusOutput() StageStatusOutput {
	return o
}

func (o StageStatusOutput) ToStageStatusOutputWithContext(ctx context.Context) StageStatusOutput {
	return o
}

func (o StageStatusOutput) ToStageStatusPtrOutput() StageStatusPtrOutput {
	return o.ToStageStatusPtrOutputWithContext(context.Background())
}

func (o StageStatusOutput) ToStageStatusPtrOutputWithContext(ctx context.Context) StageStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatus) *StageStatus {
		return &v
	}).(StageStatusPtrOutput)
}

// Conditions contains the last observations of the Stage's current
// state.
func (o StageStatusOutput) Conditions() StageStatusConditionsArrayOutput {
	return o.ApplyT(func(v StageStatus) []StageStatusConditions { return v.Conditions }).(StageStatusConditionsArrayOutput)
}

func (o StageStatusOutput) CurrentPromotion() StageStatusCurrentPromotionPtrOutput {
	return o.ApplyT(func(v StageStatus) *StageStatusCurrentPromotion { return v.CurrentPromotion }).(StageStatusCurrentPromotionPtrOutput)
}

// FreightHistory is a list of recent Freight selections that were deployed
// to the Stage. By default, the last ten Freight selections are stored.
// The first item in the list is the most recent Freight selection and
// currently deployed to the Stage, subsequent items are older selections.
func (o StageStatusOutput) FreightHistory() StageStatusFreightHistoryArrayOutput {
	return o.ApplyT(func(v StageStatus) []StageStatusFreightHistory { return v.FreightHistory }).(StageStatusFreightHistoryArrayOutput)
}

// FreightSummary is human-readable text maintained by the controller that
// summarizes what Freight is currently deployed to the Stage. For Stages that
// request a single piece of Freight AND the request has been fulfilled, this
// field will simply contain the name of the Freight. For Stages that request
// a single piece of Freight AND the request has NOT been fulfilled, or for
// Stages that request multiple pieces of Freight, this field will contain a
// summary of fulfilled/requested Freight. The existence of this field is a
// workaround for kubectl limitations so that this complex but valuable
// information can be displayed in a column in response to `kubectl get
// stages`.
func (o StageStatusOutput) FreightSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatus) *string { return v.FreightSummary }).(pulumi.StringPtrOutput)
}

func (o StageStatusOutput) Health() StageStatusHealthPtrOutput {
	return o.ApplyT(func(v StageStatus) *StageStatusHealth { return v.Health }).(StageStatusHealthPtrOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o StageStatusOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatus) *string { return v.LastHandledRefresh }).(pulumi.StringPtrOutput)
}

func (o StageStatusOutput) LastPromotion() StageStatusLastPromotionPtrOutput {
	return o.ApplyT(func(v StageStatus) *StageStatusLastPromotion { return v.LastPromotion }).(StageStatusLastPromotionPtrOutput)
}

// ObservedGeneration represents the .metadata.generation that this Stage
// status was reconciled against.
func (o StageStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

type StageStatusPtrOutput struct{ *pulumi.OutputState }

func (StageStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatus)(nil)).Elem()
}

func (o StageStatusPtrOutput) ToStageStatusPtrOutput() StageStatusPtrOutput {
	return o
}

func (o StageStatusPtrOutput) ToStageStatusPtrOutputWithContext(ctx context.Context) StageStatusPtrOutput {
	return o
}

func (o StageStatusPtrOutput) Elem() StageStatusOutput {
	return o.ApplyT(func(v *StageStatus) StageStatus {
		if v != nil {
			return *v
		}
		var ret StageStatus
		return ret
	}).(StageStatusOutput)
}

// Conditions contains the last observations of the Stage's current
// state.
func (o StageStatusPtrOutput) Conditions() StageStatusConditionsArrayOutput {
	return o.ApplyT(func(v *StageStatus) []StageStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(StageStatusConditionsArrayOutput)
}

func (o StageStatusPtrOutput) CurrentPromotion() StageStatusCurrentPromotionPtrOutput {
	return o.ApplyT(func(v *StageStatus) *StageStatusCurrentPromotion {
		if v == nil {
			return nil
		}
		return v.CurrentPromotion
	}).(StageStatusCurrentPromotionPtrOutput)
}

// FreightHistory is a list of recent Freight selections that were deployed
// to the Stage. By default, the last ten Freight selections are stored.
// The first item in the list is the most recent Freight selection and
// currently deployed to the Stage, subsequent items are older selections.
func (o StageStatusPtrOutput) FreightHistory() StageStatusFreightHistoryArrayOutput {
	return o.ApplyT(func(v *StageStatus) []StageStatusFreightHistory {
		if v == nil {
			return nil
		}
		return v.FreightHistory
	}).(StageStatusFreightHistoryArrayOutput)
}

// FreightSummary is human-readable text maintained by the controller that
// summarizes what Freight is currently deployed to the Stage. For Stages that
// request a single piece of Freight AND the request has been fulfilled, this
// field will simply contain the name of the Freight. For Stages that request
// a single piece of Freight AND the request has NOT been fulfilled, or for
// Stages that request multiple pieces of Freight, this field will contain a
// summary of fulfilled/requested Freight. The existence of this field is a
// workaround for kubectl limitations so that this complex but valuable
// information can be displayed in a column in response to `kubectl get
// stages`.
func (o StageStatusPtrOutput) FreightSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatus) *string {
		if v == nil {
			return nil
		}
		return v.FreightSummary
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusPtrOutput) Health() StageStatusHealthPtrOutput {
	return o.ApplyT(func(v *StageStatus) *StageStatusHealth {
		if v == nil {
			return nil
		}
		return v.Health
	}).(StageStatusHealthPtrOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o StageStatusPtrOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastHandledRefresh
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusPtrOutput) LastPromotion() StageStatusLastPromotionPtrOutput {
	return o.ApplyT(func(v *StageStatus) *StageStatusLastPromotion {
		if v == nil {
			return nil
		}
		return v.LastPromotion
	}).(StageStatusLastPromotionPtrOutput)
}

// ObservedGeneration represents the .metadata.generation that this Stage
// status was reconciled against.
func (o StageStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StageStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type StageStatusConditions struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message *string `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason *string `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status *string `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type *string `pulumi:"type"`
}

// StageStatusConditionsInput is an input type that accepts StageStatusConditionsArgs and StageStatusConditionsOutput values.
// You can construct a concrete instance of `StageStatusConditionsInput` via:
//
//	StageStatusConditionsArgs{...}
type StageStatusConditionsInput interface {
	pulumi.Input

	ToStageStatusConditionsOutput() StageStatusConditionsOutput
	ToStageStatusConditionsOutputWithContext(context.Context) StageStatusConditionsOutput
}

// Condition contains details for one aspect of the current state of this API Resource.
type StageStatusConditionsArgs struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StageStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusConditions)(nil)).Elem()
}

func (i StageStatusConditionsArgs) ToStageStatusConditionsOutput() StageStatusConditionsOutput {
	return i.ToStageStatusConditionsOutputWithContext(context.Background())
}

func (i StageStatusConditionsArgs) ToStageStatusConditionsOutputWithContext(ctx context.Context) StageStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusConditionsOutput)
}

// StageStatusConditionsArrayInput is an input type that accepts StageStatusConditionsArray and StageStatusConditionsArrayOutput values.
// You can construct a concrete instance of `StageStatusConditionsArrayInput` via:
//
//	StageStatusConditionsArray{ StageStatusConditionsArgs{...} }
type StageStatusConditionsArrayInput interface {
	pulumi.Input

	ToStageStatusConditionsArrayOutput() StageStatusConditionsArrayOutput
	ToStageStatusConditionsArrayOutputWithContext(context.Context) StageStatusConditionsArrayOutput
}

type StageStatusConditionsArray []StageStatusConditionsInput

func (StageStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusConditions)(nil)).Elem()
}

func (i StageStatusConditionsArray) ToStageStatusConditionsArrayOutput() StageStatusConditionsArrayOutput {
	return i.ToStageStatusConditionsArrayOutputWithContext(context.Background())
}

func (i StageStatusConditionsArray) ToStageStatusConditionsArrayOutputWithContext(ctx context.Context) StageStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusConditionsArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type StageStatusConditionsOutput struct{ *pulumi.OutputState }

func (StageStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusConditions)(nil)).Elem()
}

func (o StageStatusConditionsOutput) ToStageStatusConditionsOutput() StageStatusConditionsOutput {
	return o
}

func (o StageStatusConditionsOutput) ToStageStatusConditionsOutputWithContext(ctx context.Context) StageStatusConditionsOutput {
	return o
}

// lastTransitionTime is the last time the condition transitioned from one status to another.
// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
func (o StageStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human readable message indicating details about the transition.
// This may be an empty string.
func (o StageStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// observedGeneration represents the .metadata.generation that the condition was set based upon.
// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the instance.
func (o StageStatusConditionsOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageStatusConditions) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// reason contains a programmatic identifier indicating the reason for the condition's last transition.
// Producers of specific condition types may define expected values and meanings for this field,
// and whether the values are considered a guaranteed API.
// The value should be a CamelCase string.
// This field may not be empty.
func (o StageStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status of the condition, one of True, False, Unknown.
func (o StageStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of condition in CamelCase or in foo.example.com/CamelCase.
func (o StageStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StageStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (StageStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusConditions)(nil)).Elem()
}

func (o StageStatusConditionsArrayOutput) ToStageStatusConditionsArrayOutput() StageStatusConditionsArrayOutput {
	return o
}

func (o StageStatusConditionsArrayOutput) ToStageStatusConditionsArrayOutputWithContext(ctx context.Context) StageStatusConditionsArrayOutput {
	return o
}

func (o StageStatusConditionsArrayOutput) Index(i pulumi.IntInput) StageStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusConditions {
		return vs[0].([]StageStatusConditions)[vs[1].(int)]
	}).(StageStatusConditionsOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type StageStatusConditionsPatch struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message *string `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason *string `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status *string `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type *string `pulumi:"type"`
}

// StageStatusConditionsPatchInput is an input type that accepts StageStatusConditionsPatchArgs and StageStatusConditionsPatchOutput values.
// You can construct a concrete instance of `StageStatusConditionsPatchInput` via:
//
//	StageStatusConditionsPatchArgs{...}
type StageStatusConditionsPatchInput interface {
	pulumi.Input

	ToStageStatusConditionsPatchOutput() StageStatusConditionsPatchOutput
	ToStageStatusConditionsPatchOutputWithContext(context.Context) StageStatusConditionsPatchOutput
}

// Condition contains details for one aspect of the current state of this API Resource.
type StageStatusConditionsPatchArgs struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StageStatusConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusConditionsPatch)(nil)).Elem()
}

func (i StageStatusConditionsPatchArgs) ToStageStatusConditionsPatchOutput() StageStatusConditionsPatchOutput {
	return i.ToStageStatusConditionsPatchOutputWithContext(context.Background())
}

func (i StageStatusConditionsPatchArgs) ToStageStatusConditionsPatchOutputWithContext(ctx context.Context) StageStatusConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusConditionsPatchOutput)
}

// StageStatusConditionsPatchArrayInput is an input type that accepts StageStatusConditionsPatchArray and StageStatusConditionsPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusConditionsPatchArrayInput` via:
//
//	StageStatusConditionsPatchArray{ StageStatusConditionsPatchArgs{...} }
type StageStatusConditionsPatchArrayInput interface {
	pulumi.Input

	ToStageStatusConditionsPatchArrayOutput() StageStatusConditionsPatchArrayOutput
	ToStageStatusConditionsPatchArrayOutputWithContext(context.Context) StageStatusConditionsPatchArrayOutput
}

type StageStatusConditionsPatchArray []StageStatusConditionsPatchInput

func (StageStatusConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusConditionsPatch)(nil)).Elem()
}

func (i StageStatusConditionsPatchArray) ToStageStatusConditionsPatchArrayOutput() StageStatusConditionsPatchArrayOutput {
	return i.ToStageStatusConditionsPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusConditionsPatchArray) ToStageStatusConditionsPatchArrayOutputWithContext(ctx context.Context) StageStatusConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusConditionsPatchArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type StageStatusConditionsPatchOutput struct{ *pulumi.OutputState }

func (StageStatusConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusConditionsPatch)(nil)).Elem()
}

func (o StageStatusConditionsPatchOutput) ToStageStatusConditionsPatchOutput() StageStatusConditionsPatchOutput {
	return o
}

func (o StageStatusConditionsPatchOutput) ToStageStatusConditionsPatchOutputWithContext(ctx context.Context) StageStatusConditionsPatchOutput {
	return o
}

// lastTransitionTime is the last time the condition transitioned from one status to another.
// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
func (o StageStatusConditionsPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusConditionsPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human readable message indicating details about the transition.
// This may be an empty string.
func (o StageStatusConditionsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusConditionsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// observedGeneration represents the .metadata.generation that the condition was set based upon.
// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the instance.
func (o StageStatusConditionsPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageStatusConditionsPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// reason contains a programmatic identifier indicating the reason for the condition's last transition.
// Producers of specific condition types may define expected values and meanings for this field,
// and whether the values are considered a guaranteed API.
// The value should be a CamelCase string.
// This field may not be empty.
func (o StageStatusConditionsPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusConditionsPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status of the condition, one of True, False, Unknown.
func (o StageStatusConditionsPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusConditionsPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of condition in CamelCase or in foo.example.com/CamelCase.
func (o StageStatusConditionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusConditionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StageStatusConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusConditionsPatch)(nil)).Elem()
}

func (o StageStatusConditionsPatchArrayOutput) ToStageStatusConditionsPatchArrayOutput() StageStatusConditionsPatchArrayOutput {
	return o
}

func (o StageStatusConditionsPatchArrayOutput) ToStageStatusConditionsPatchArrayOutputWithContext(ctx context.Context) StageStatusConditionsPatchArrayOutput {
	return o
}

func (o StageStatusConditionsPatchArrayOutput) Index(i pulumi.IntInput) StageStatusConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusConditionsPatch {
		return vs[0].([]StageStatusConditionsPatch)[vs[1].(int)]
	}).(StageStatusConditionsPatchOutput)
}

// CurrentPromotion is a reference to the currently Running promotion.
type StageStatusCurrentPromotion struct {
	// FinishedAt is the time at which the Promotion was completed.
	FinishedAt *string                             `pulumi:"finishedAt"`
	Freight    *StageStatusCurrentPromotionFreight `pulumi:"freight"`
	// Name is the name of the Promotion.
	Name   *string                            `pulumi:"name"`
	Status *StageStatusCurrentPromotionStatus `pulumi:"status"`
}

// StageStatusCurrentPromotionInput is an input type that accepts StageStatusCurrentPromotionArgs and StageStatusCurrentPromotionOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionInput` via:
//
//	StageStatusCurrentPromotionArgs{...}
type StageStatusCurrentPromotionInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionOutput() StageStatusCurrentPromotionOutput
	ToStageStatusCurrentPromotionOutputWithContext(context.Context) StageStatusCurrentPromotionOutput
}

// CurrentPromotion is a reference to the currently Running promotion.
type StageStatusCurrentPromotionArgs struct {
	// FinishedAt is the time at which the Promotion was completed.
	FinishedAt pulumi.StringPtrInput                      `pulumi:"finishedAt"`
	Freight    StageStatusCurrentPromotionFreightPtrInput `pulumi:"freight"`
	// Name is the name of the Promotion.
	Name   pulumi.StringPtrInput                     `pulumi:"name"`
	Status StageStatusCurrentPromotionStatusPtrInput `pulumi:"status"`
}

func (StageStatusCurrentPromotionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotion)(nil)).Elem()
}

func (i StageStatusCurrentPromotionArgs) ToStageStatusCurrentPromotionOutput() StageStatusCurrentPromotionOutput {
	return i.ToStageStatusCurrentPromotionOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionArgs) ToStageStatusCurrentPromotionOutputWithContext(ctx context.Context) StageStatusCurrentPromotionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionOutput)
}

func (i StageStatusCurrentPromotionArgs) ToStageStatusCurrentPromotionPtrOutput() StageStatusCurrentPromotionPtrOutput {
	return i.ToStageStatusCurrentPromotionPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionArgs) ToStageStatusCurrentPromotionPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionOutput).ToStageStatusCurrentPromotionPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionPtrInput is an input type that accepts StageStatusCurrentPromotionArgs, StageStatusCurrentPromotionPtr and StageStatusCurrentPromotionPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionPtrInput` via:
//
//	        StageStatusCurrentPromotionArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionPtrOutput() StageStatusCurrentPromotionPtrOutput
	ToStageStatusCurrentPromotionPtrOutputWithContext(context.Context) StageStatusCurrentPromotionPtrOutput
}

type stageStatusCurrentPromotionPtrType StageStatusCurrentPromotionArgs

func StageStatusCurrentPromotionPtr(v *StageStatusCurrentPromotionArgs) StageStatusCurrentPromotionPtrInput {
	return (*stageStatusCurrentPromotionPtrType)(v)
}

func (*stageStatusCurrentPromotionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotion)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionPtrType) ToStageStatusCurrentPromotionPtrOutput() StageStatusCurrentPromotionPtrOutput {
	return i.ToStageStatusCurrentPromotionPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionPtrType) ToStageStatusCurrentPromotionPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionPtrOutput)
}

// CurrentPromotion is a reference to the currently Running promotion.
type StageStatusCurrentPromotionOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotion)(nil)).Elem()
}

func (o StageStatusCurrentPromotionOutput) ToStageStatusCurrentPromotionOutput() StageStatusCurrentPromotionOutput {
	return o
}

func (o StageStatusCurrentPromotionOutput) ToStageStatusCurrentPromotionOutputWithContext(ctx context.Context) StageStatusCurrentPromotionOutput {
	return o
}

func (o StageStatusCurrentPromotionOutput) ToStageStatusCurrentPromotionPtrOutput() StageStatusCurrentPromotionPtrOutput {
	return o.ToStageStatusCurrentPromotionPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionOutput) ToStageStatusCurrentPromotionPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotion) *StageStatusCurrentPromotion {
		return &v
	}).(StageStatusCurrentPromotionPtrOutput)
}

// FinishedAt is the time at which the Promotion was completed.
func (o StageStatusCurrentPromotionOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotion) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionOutput) Freight() StageStatusCurrentPromotionFreightPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotion) *StageStatusCurrentPromotionFreight { return v.Freight }).(StageStatusCurrentPromotionFreightPtrOutput)
}

// Name is the name of the Promotion.
func (o StageStatusCurrentPromotionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotion) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionOutput) Status() StageStatusCurrentPromotionStatusPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotion) *StageStatusCurrentPromotionStatus { return v.Status }).(StageStatusCurrentPromotionStatusPtrOutput)
}

type StageStatusCurrentPromotionPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotion)(nil)).Elem()
}

func (o StageStatusCurrentPromotionPtrOutput) ToStageStatusCurrentPromotionPtrOutput() StageStatusCurrentPromotionPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionPtrOutput) ToStageStatusCurrentPromotionPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionPtrOutput) Elem() StageStatusCurrentPromotionOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotion) StageStatusCurrentPromotion {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotion
		return ret
	}).(StageStatusCurrentPromotionOutput)
}

// FinishedAt is the time at which the Promotion was completed.
func (o StageStatusCurrentPromotionPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotion) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionPtrOutput) Freight() StageStatusCurrentPromotionFreightPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotion) *StageStatusCurrentPromotionFreight {
		if v == nil {
			return nil
		}
		return v.Freight
	}).(StageStatusCurrentPromotionFreightPtrOutput)
}

// Name is the name of the Promotion.
func (o StageStatusCurrentPromotionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotion) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionPtrOutput) Status() StageStatusCurrentPromotionStatusPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotion) *StageStatusCurrentPromotionStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(StageStatusCurrentPromotionStatusPtrOutput)
}

// Freight is the freight being promoted.
type StageStatusCurrentPromotionFreight struct {
	// Charts describes specific versions of specific Helm charts.
	Charts []StageStatusCurrentPromotionFreightCharts `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits []StageStatusCurrentPromotionFreightCommits `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images []StageStatusCurrentPromotionFreightImages `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   *string                                   `pulumi:"name"`
	Origin *StageStatusCurrentPromotionFreightOrigin `pulumi:"origin"`
}

// StageStatusCurrentPromotionFreightInput is an input type that accepts StageStatusCurrentPromotionFreightArgs and StageStatusCurrentPromotionFreightOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightInput` via:
//
//	StageStatusCurrentPromotionFreightArgs{...}
type StageStatusCurrentPromotionFreightInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightOutput() StageStatusCurrentPromotionFreightOutput
	ToStageStatusCurrentPromotionFreightOutputWithContext(context.Context) StageStatusCurrentPromotionFreightOutput
}

// Freight is the freight being promoted.
type StageStatusCurrentPromotionFreightArgs struct {
	// Charts describes specific versions of specific Helm charts.
	Charts StageStatusCurrentPromotionFreightChartsArrayInput `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits StageStatusCurrentPromotionFreightCommitsArrayInput `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images StageStatusCurrentPromotionFreightImagesArrayInput `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   pulumi.StringPtrInput                            `pulumi:"name"`
	Origin StageStatusCurrentPromotionFreightOriginPtrInput `pulumi:"origin"`
}

func (StageStatusCurrentPromotionFreightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreight)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightArgs) ToStageStatusCurrentPromotionFreightOutput() StageStatusCurrentPromotionFreightOutput {
	return i.ToStageStatusCurrentPromotionFreightOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightArgs) ToStageStatusCurrentPromotionFreightOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightOutput)
}

func (i StageStatusCurrentPromotionFreightArgs) ToStageStatusCurrentPromotionFreightPtrOutput() StageStatusCurrentPromotionFreightPtrOutput {
	return i.ToStageStatusCurrentPromotionFreightPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightArgs) ToStageStatusCurrentPromotionFreightPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightOutput).ToStageStatusCurrentPromotionFreightPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionFreightPtrInput is an input type that accepts StageStatusCurrentPromotionFreightArgs, StageStatusCurrentPromotionFreightPtr and StageStatusCurrentPromotionFreightPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightPtrInput` via:
//
//	        StageStatusCurrentPromotionFreightArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionFreightPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightPtrOutput() StageStatusCurrentPromotionFreightPtrOutput
	ToStageStatusCurrentPromotionFreightPtrOutputWithContext(context.Context) StageStatusCurrentPromotionFreightPtrOutput
}

type stageStatusCurrentPromotionFreightPtrType StageStatusCurrentPromotionFreightArgs

func StageStatusCurrentPromotionFreightPtr(v *StageStatusCurrentPromotionFreightArgs) StageStatusCurrentPromotionFreightPtrInput {
	return (*stageStatusCurrentPromotionFreightPtrType)(v)
}

func (*stageStatusCurrentPromotionFreightPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionFreight)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionFreightPtrType) ToStageStatusCurrentPromotionFreightPtrOutput() StageStatusCurrentPromotionFreightPtrOutput {
	return i.ToStageStatusCurrentPromotionFreightPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionFreightPtrType) ToStageStatusCurrentPromotionFreightPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightPtrOutput)
}

// Freight is the freight being promoted.
type StageStatusCurrentPromotionFreightOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreight)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightOutput) ToStageStatusCurrentPromotionFreightOutput() StageStatusCurrentPromotionFreightOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightOutput) ToStageStatusCurrentPromotionFreightOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightOutput) ToStageStatusCurrentPromotionFreightPtrOutput() StageStatusCurrentPromotionFreightPtrOutput {
	return o.ToStageStatusCurrentPromotionFreightPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionFreightOutput) ToStageStatusCurrentPromotionFreightPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionFreight) *StageStatusCurrentPromotionFreight {
		return &v
	}).(StageStatusCurrentPromotionFreightPtrOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusCurrentPromotionFreightOutput) Charts() StageStatusCurrentPromotionFreightChartsArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreight) []StageStatusCurrentPromotionFreightCharts { return v.Charts }).(StageStatusCurrentPromotionFreightChartsArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusCurrentPromotionFreightOutput) Commits() StageStatusCurrentPromotionFreightCommitsArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreight) []StageStatusCurrentPromotionFreightCommits {
		return v.Commits
	}).(StageStatusCurrentPromotionFreightCommitsArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusCurrentPromotionFreightOutput) Images() StageStatusCurrentPromotionFreightImagesArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreight) []StageStatusCurrentPromotionFreightImages { return v.Images }).(StageStatusCurrentPromotionFreightImagesArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusCurrentPromotionFreightOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreight) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionFreightOutput) Origin() StageStatusCurrentPromotionFreightOriginPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreight) *StageStatusCurrentPromotionFreightOrigin { return v.Origin }).(StageStatusCurrentPromotionFreightOriginPtrOutput)
}

type StageStatusCurrentPromotionFreightPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionFreight)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightPtrOutput) ToStageStatusCurrentPromotionFreightPtrOutput() StageStatusCurrentPromotionFreightPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightPtrOutput) ToStageStatusCurrentPromotionFreightPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightPtrOutput) Elem() StageStatusCurrentPromotionFreightOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreight) StageStatusCurrentPromotionFreight {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionFreight
		return ret
	}).(StageStatusCurrentPromotionFreightOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusCurrentPromotionFreightPtrOutput) Charts() StageStatusCurrentPromotionFreightChartsArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreight) []StageStatusCurrentPromotionFreightCharts {
		if v == nil {
			return nil
		}
		return v.Charts
	}).(StageStatusCurrentPromotionFreightChartsArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusCurrentPromotionFreightPtrOutput) Commits() StageStatusCurrentPromotionFreightCommitsArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreight) []StageStatusCurrentPromotionFreightCommits {
		if v == nil {
			return nil
		}
		return v.Commits
	}).(StageStatusCurrentPromotionFreightCommitsArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusCurrentPromotionFreightPtrOutput) Images() StageStatusCurrentPromotionFreightImagesArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreight) []StageStatusCurrentPromotionFreightImages {
		if v == nil {
			return nil
		}
		return v.Images
	}).(StageStatusCurrentPromotionFreightImagesArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusCurrentPromotionFreightPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreight) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionFreightPtrOutput) Origin() StageStatusCurrentPromotionFreightOriginPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreight) *StageStatusCurrentPromotionFreightOrigin {
		if v == nil {
			return nil
		}
		return v.Origin
	}).(StageStatusCurrentPromotionFreightOriginPtrOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusCurrentPromotionFreightCharts struct {
	// Name specifies the name of the chart.
	Name *string `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL *string `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version *string `pulumi:"version"`
}

// StageStatusCurrentPromotionFreightChartsInput is an input type that accepts StageStatusCurrentPromotionFreightChartsArgs and StageStatusCurrentPromotionFreightChartsOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightChartsInput` via:
//
//	StageStatusCurrentPromotionFreightChartsArgs{...}
type StageStatusCurrentPromotionFreightChartsInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightChartsOutput() StageStatusCurrentPromotionFreightChartsOutput
	ToStageStatusCurrentPromotionFreightChartsOutputWithContext(context.Context) StageStatusCurrentPromotionFreightChartsOutput
}

// Chart describes a specific version of a Helm chart.
type StageStatusCurrentPromotionFreightChartsArgs struct {
	// Name specifies the name of the chart.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (StageStatusCurrentPromotionFreightChartsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightCharts)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightChartsArgs) ToStageStatusCurrentPromotionFreightChartsOutput() StageStatusCurrentPromotionFreightChartsOutput {
	return i.ToStageStatusCurrentPromotionFreightChartsOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightChartsArgs) ToStageStatusCurrentPromotionFreightChartsOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightChartsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightChartsOutput)
}

// StageStatusCurrentPromotionFreightChartsArrayInput is an input type that accepts StageStatusCurrentPromotionFreightChartsArray and StageStatusCurrentPromotionFreightChartsArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightChartsArrayInput` via:
//
//	StageStatusCurrentPromotionFreightChartsArray{ StageStatusCurrentPromotionFreightChartsArgs{...} }
type StageStatusCurrentPromotionFreightChartsArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightChartsArrayOutput() StageStatusCurrentPromotionFreightChartsArrayOutput
	ToStageStatusCurrentPromotionFreightChartsArrayOutputWithContext(context.Context) StageStatusCurrentPromotionFreightChartsArrayOutput
}

type StageStatusCurrentPromotionFreightChartsArray []StageStatusCurrentPromotionFreightChartsInput

func (StageStatusCurrentPromotionFreightChartsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionFreightCharts)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightChartsArray) ToStageStatusCurrentPromotionFreightChartsArrayOutput() StageStatusCurrentPromotionFreightChartsArrayOutput {
	return i.ToStageStatusCurrentPromotionFreightChartsArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightChartsArray) ToStageStatusCurrentPromotionFreightChartsArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightChartsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightChartsArrayOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusCurrentPromotionFreightChartsOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightChartsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightCharts)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightChartsOutput) ToStageStatusCurrentPromotionFreightChartsOutput() StageStatusCurrentPromotionFreightChartsOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightChartsOutput) ToStageStatusCurrentPromotionFreightChartsOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightChartsOutput {
	return o
}

// Name specifies the name of the chart.
func (o StageStatusCurrentPromotionFreightChartsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCharts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. Classic chart
// repositories (using HTTP/S) can contain differently named charts. When this
// field points to such a repository, the Name field will specify the name of
// the chart within the repository. In the case of a repository within an OCI
// registry, the URL implicitly points to a specific chart and the Name field
// will be empty.
func (o StageStatusCurrentPromotionFreightChartsOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCharts) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Version specifies a particular version of the chart.
func (o StageStatusCurrentPromotionFreightChartsOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCharts) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionFreightChartsArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightChartsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionFreightCharts)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightChartsArrayOutput) ToStageStatusCurrentPromotionFreightChartsArrayOutput() StageStatusCurrentPromotionFreightChartsArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightChartsArrayOutput) ToStageStatusCurrentPromotionFreightChartsArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightChartsArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightChartsArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionFreightChartsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionFreightCharts {
		return vs[0].([]StageStatusCurrentPromotionFreightCharts)[vs[1].(int)]
	}).(StageStatusCurrentPromotionFreightChartsOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusCurrentPromotionFreightChartsPatch struct {
	// Name specifies the name of the chart.
	Name *string `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL *string `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version *string `pulumi:"version"`
}

// StageStatusCurrentPromotionFreightChartsPatchInput is an input type that accepts StageStatusCurrentPromotionFreightChartsPatchArgs and StageStatusCurrentPromotionFreightChartsPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightChartsPatchInput` via:
//
//	StageStatusCurrentPromotionFreightChartsPatchArgs{...}
type StageStatusCurrentPromotionFreightChartsPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightChartsPatchOutput() StageStatusCurrentPromotionFreightChartsPatchOutput
	ToStageStatusCurrentPromotionFreightChartsPatchOutputWithContext(context.Context) StageStatusCurrentPromotionFreightChartsPatchOutput
}

// Chart describes a specific version of a Helm chart.
type StageStatusCurrentPromotionFreightChartsPatchArgs struct {
	// Name specifies the name of the chart.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (StageStatusCurrentPromotionFreightChartsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightChartsPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightChartsPatchArgs) ToStageStatusCurrentPromotionFreightChartsPatchOutput() StageStatusCurrentPromotionFreightChartsPatchOutput {
	return i.ToStageStatusCurrentPromotionFreightChartsPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightChartsPatchArgs) ToStageStatusCurrentPromotionFreightChartsPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightChartsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightChartsPatchOutput)
}

// StageStatusCurrentPromotionFreightChartsPatchArrayInput is an input type that accepts StageStatusCurrentPromotionFreightChartsPatchArray and StageStatusCurrentPromotionFreightChartsPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightChartsPatchArrayInput` via:
//
//	StageStatusCurrentPromotionFreightChartsPatchArray{ StageStatusCurrentPromotionFreightChartsPatchArgs{...} }
type StageStatusCurrentPromotionFreightChartsPatchArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightChartsPatchArrayOutput() StageStatusCurrentPromotionFreightChartsPatchArrayOutput
	ToStageStatusCurrentPromotionFreightChartsPatchArrayOutputWithContext(context.Context) StageStatusCurrentPromotionFreightChartsPatchArrayOutput
}

type StageStatusCurrentPromotionFreightChartsPatchArray []StageStatusCurrentPromotionFreightChartsPatchInput

func (StageStatusCurrentPromotionFreightChartsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionFreightChartsPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightChartsPatchArray) ToStageStatusCurrentPromotionFreightChartsPatchArrayOutput() StageStatusCurrentPromotionFreightChartsPatchArrayOutput {
	return i.ToStageStatusCurrentPromotionFreightChartsPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightChartsPatchArray) ToStageStatusCurrentPromotionFreightChartsPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightChartsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightChartsPatchArrayOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusCurrentPromotionFreightChartsPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightChartsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightChartsPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightChartsPatchOutput) ToStageStatusCurrentPromotionFreightChartsPatchOutput() StageStatusCurrentPromotionFreightChartsPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightChartsPatchOutput) ToStageStatusCurrentPromotionFreightChartsPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightChartsPatchOutput {
	return o
}

// Name specifies the name of the chart.
func (o StageStatusCurrentPromotionFreightChartsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightChartsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. Classic chart
// repositories (using HTTP/S) can contain differently named charts. When this
// field points to such a repository, the Name field will specify the name of
// the chart within the repository. In the case of a repository within an OCI
// registry, the URL implicitly points to a specific chart and the Name field
// will be empty.
func (o StageStatusCurrentPromotionFreightChartsPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightChartsPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Version specifies a particular version of the chart.
func (o StageStatusCurrentPromotionFreightChartsPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightChartsPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionFreightChartsPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightChartsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionFreightChartsPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightChartsPatchArrayOutput) ToStageStatusCurrentPromotionFreightChartsPatchArrayOutput() StageStatusCurrentPromotionFreightChartsPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightChartsPatchArrayOutput) ToStageStatusCurrentPromotionFreightChartsPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightChartsPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightChartsPatchArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionFreightChartsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionFreightChartsPatch {
		return vs[0].([]StageStatusCurrentPromotionFreightChartsPatch)[vs[1].(int)]
	}).(StageStatusCurrentPromotionFreightChartsPatchOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusCurrentPromotionFreightCommits struct {
	// Author is the author of the commit.
	Author *string `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch *string `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer *string `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id *string `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message *string `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL *string `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag *string `pulumi:"tag"`
}

// StageStatusCurrentPromotionFreightCommitsInput is an input type that accepts StageStatusCurrentPromotionFreightCommitsArgs and StageStatusCurrentPromotionFreightCommitsOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightCommitsInput` via:
//
//	StageStatusCurrentPromotionFreightCommitsArgs{...}
type StageStatusCurrentPromotionFreightCommitsInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightCommitsOutput() StageStatusCurrentPromotionFreightCommitsOutput
	ToStageStatusCurrentPromotionFreightCommitsOutputWithContext(context.Context) StageStatusCurrentPromotionFreightCommitsOutput
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusCurrentPromotionFreightCommitsArgs struct {
	// Author is the author of the commit.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer pulumi.StringPtrInput `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusCurrentPromotionFreightCommitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightCommits)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightCommitsArgs) ToStageStatusCurrentPromotionFreightCommitsOutput() StageStatusCurrentPromotionFreightCommitsOutput {
	return i.ToStageStatusCurrentPromotionFreightCommitsOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightCommitsArgs) ToStageStatusCurrentPromotionFreightCommitsOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightCommitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightCommitsOutput)
}

// StageStatusCurrentPromotionFreightCommitsArrayInput is an input type that accepts StageStatusCurrentPromotionFreightCommitsArray and StageStatusCurrentPromotionFreightCommitsArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightCommitsArrayInput` via:
//
//	StageStatusCurrentPromotionFreightCommitsArray{ StageStatusCurrentPromotionFreightCommitsArgs{...} }
type StageStatusCurrentPromotionFreightCommitsArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightCommitsArrayOutput() StageStatusCurrentPromotionFreightCommitsArrayOutput
	ToStageStatusCurrentPromotionFreightCommitsArrayOutputWithContext(context.Context) StageStatusCurrentPromotionFreightCommitsArrayOutput
}

type StageStatusCurrentPromotionFreightCommitsArray []StageStatusCurrentPromotionFreightCommitsInput

func (StageStatusCurrentPromotionFreightCommitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionFreightCommits)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightCommitsArray) ToStageStatusCurrentPromotionFreightCommitsArrayOutput() StageStatusCurrentPromotionFreightCommitsArrayOutput {
	return i.ToStageStatusCurrentPromotionFreightCommitsArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightCommitsArray) ToStageStatusCurrentPromotionFreightCommitsArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightCommitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightCommitsArrayOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusCurrentPromotionFreightCommitsOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightCommitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightCommits)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightCommitsOutput) ToStageStatusCurrentPromotionFreightCommitsOutput() StageStatusCurrentPromotionFreightCommitsOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightCommitsOutput) ToStageStatusCurrentPromotionFreightCommitsOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightCommitsOutput {
	return o
}

// Author is the author of the commit.
func (o StageStatusCurrentPromotionFreightCommitsOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCommits) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Branch denotes the branch of the repository where this commit was found.
func (o StageStatusCurrentPromotionFreightCommitsOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCommits) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Committer is the person who committed the commit.
func (o StageStatusCurrentPromotionFreightCommitsOutput) Committer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCommits) *string { return v.Committer }).(pulumi.StringPtrOutput)
}

// ID is the ID of a specific commit in the Git repository specified by
// RepoURL.
func (o StageStatusCurrentPromotionFreightCommitsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCommits) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message is the message associated with the commit. At present, this only
// contains the first line (subject) of the commit message.
func (o StageStatusCurrentPromotionFreightCommitsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCommits) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// RepoURL is the URL of a Git repository.
func (o StageStatusCurrentPromotionFreightCommitsOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCommits) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag denotes a tag in the repository that matched selection criteria and
// resolved to this commit.
func (o StageStatusCurrentPromotionFreightCommitsOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCommits) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionFreightCommitsArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightCommitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionFreightCommits)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightCommitsArrayOutput) ToStageStatusCurrentPromotionFreightCommitsArrayOutput() StageStatusCurrentPromotionFreightCommitsArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightCommitsArrayOutput) ToStageStatusCurrentPromotionFreightCommitsArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightCommitsArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightCommitsArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionFreightCommitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionFreightCommits {
		return vs[0].([]StageStatusCurrentPromotionFreightCommits)[vs[1].(int)]
	}).(StageStatusCurrentPromotionFreightCommitsOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusCurrentPromotionFreightCommitsPatch struct {
	// Author is the author of the commit.
	Author *string `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch *string `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer *string `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id *string `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message *string `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL *string `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag *string `pulumi:"tag"`
}

// StageStatusCurrentPromotionFreightCommitsPatchInput is an input type that accepts StageStatusCurrentPromotionFreightCommitsPatchArgs and StageStatusCurrentPromotionFreightCommitsPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightCommitsPatchInput` via:
//
//	StageStatusCurrentPromotionFreightCommitsPatchArgs{...}
type StageStatusCurrentPromotionFreightCommitsPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightCommitsPatchOutput() StageStatusCurrentPromotionFreightCommitsPatchOutput
	ToStageStatusCurrentPromotionFreightCommitsPatchOutputWithContext(context.Context) StageStatusCurrentPromotionFreightCommitsPatchOutput
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusCurrentPromotionFreightCommitsPatchArgs struct {
	// Author is the author of the commit.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer pulumi.StringPtrInput `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusCurrentPromotionFreightCommitsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightCommitsPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightCommitsPatchArgs) ToStageStatusCurrentPromotionFreightCommitsPatchOutput() StageStatusCurrentPromotionFreightCommitsPatchOutput {
	return i.ToStageStatusCurrentPromotionFreightCommitsPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightCommitsPatchArgs) ToStageStatusCurrentPromotionFreightCommitsPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightCommitsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightCommitsPatchOutput)
}

// StageStatusCurrentPromotionFreightCommitsPatchArrayInput is an input type that accepts StageStatusCurrentPromotionFreightCommitsPatchArray and StageStatusCurrentPromotionFreightCommitsPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightCommitsPatchArrayInput` via:
//
//	StageStatusCurrentPromotionFreightCommitsPatchArray{ StageStatusCurrentPromotionFreightCommitsPatchArgs{...} }
type StageStatusCurrentPromotionFreightCommitsPatchArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightCommitsPatchArrayOutput() StageStatusCurrentPromotionFreightCommitsPatchArrayOutput
	ToStageStatusCurrentPromotionFreightCommitsPatchArrayOutputWithContext(context.Context) StageStatusCurrentPromotionFreightCommitsPatchArrayOutput
}

type StageStatusCurrentPromotionFreightCommitsPatchArray []StageStatusCurrentPromotionFreightCommitsPatchInput

func (StageStatusCurrentPromotionFreightCommitsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionFreightCommitsPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightCommitsPatchArray) ToStageStatusCurrentPromotionFreightCommitsPatchArrayOutput() StageStatusCurrentPromotionFreightCommitsPatchArrayOutput {
	return i.ToStageStatusCurrentPromotionFreightCommitsPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightCommitsPatchArray) ToStageStatusCurrentPromotionFreightCommitsPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightCommitsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightCommitsPatchArrayOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusCurrentPromotionFreightCommitsPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightCommitsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightCommitsPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightCommitsPatchOutput) ToStageStatusCurrentPromotionFreightCommitsPatchOutput() StageStatusCurrentPromotionFreightCommitsPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightCommitsPatchOutput) ToStageStatusCurrentPromotionFreightCommitsPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightCommitsPatchOutput {
	return o
}

// Author is the author of the commit.
func (o StageStatusCurrentPromotionFreightCommitsPatchOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCommitsPatch) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Branch denotes the branch of the repository where this commit was found.
func (o StageStatusCurrentPromotionFreightCommitsPatchOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCommitsPatch) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Committer is the person who committed the commit.
func (o StageStatusCurrentPromotionFreightCommitsPatchOutput) Committer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCommitsPatch) *string { return v.Committer }).(pulumi.StringPtrOutput)
}

// ID is the ID of a specific commit in the Git repository specified by
// RepoURL.
func (o StageStatusCurrentPromotionFreightCommitsPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCommitsPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message is the message associated with the commit. At present, this only
// contains the first line (subject) of the commit message.
func (o StageStatusCurrentPromotionFreightCommitsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCommitsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// RepoURL is the URL of a Git repository.
func (o StageStatusCurrentPromotionFreightCommitsPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCommitsPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag denotes a tag in the repository that matched selection criteria and
// resolved to this commit.
func (o StageStatusCurrentPromotionFreightCommitsPatchOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightCommitsPatch) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionFreightCommitsPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightCommitsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionFreightCommitsPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightCommitsPatchArrayOutput) ToStageStatusCurrentPromotionFreightCommitsPatchArrayOutput() StageStatusCurrentPromotionFreightCommitsPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightCommitsPatchArrayOutput) ToStageStatusCurrentPromotionFreightCommitsPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightCommitsPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightCommitsPatchArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionFreightCommitsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionFreightCommitsPatch {
		return vs[0].([]StageStatusCurrentPromotionFreightCommitsPatch)[vs[1].(int)]
	}).(StageStatusCurrentPromotionFreightCommitsPatchOutput)
}

// Image describes a specific version of a container image.
type StageStatusCurrentPromotionFreightImages struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations map[string]string `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest *string `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL *string `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag *string `pulumi:"tag"`
}

// StageStatusCurrentPromotionFreightImagesInput is an input type that accepts StageStatusCurrentPromotionFreightImagesArgs and StageStatusCurrentPromotionFreightImagesOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightImagesInput` via:
//
//	StageStatusCurrentPromotionFreightImagesArgs{...}
type StageStatusCurrentPromotionFreightImagesInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightImagesOutput() StageStatusCurrentPromotionFreightImagesOutput
	ToStageStatusCurrentPromotionFreightImagesOutputWithContext(context.Context) StageStatusCurrentPromotionFreightImagesOutput
}

// Image describes a specific version of a container image.
type StageStatusCurrentPromotionFreightImagesArgs struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusCurrentPromotionFreightImagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightImages)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightImagesArgs) ToStageStatusCurrentPromotionFreightImagesOutput() StageStatusCurrentPromotionFreightImagesOutput {
	return i.ToStageStatusCurrentPromotionFreightImagesOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightImagesArgs) ToStageStatusCurrentPromotionFreightImagesOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightImagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightImagesOutput)
}

// StageStatusCurrentPromotionFreightImagesArrayInput is an input type that accepts StageStatusCurrentPromotionFreightImagesArray and StageStatusCurrentPromotionFreightImagesArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightImagesArrayInput` via:
//
//	StageStatusCurrentPromotionFreightImagesArray{ StageStatusCurrentPromotionFreightImagesArgs{...} }
type StageStatusCurrentPromotionFreightImagesArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightImagesArrayOutput() StageStatusCurrentPromotionFreightImagesArrayOutput
	ToStageStatusCurrentPromotionFreightImagesArrayOutputWithContext(context.Context) StageStatusCurrentPromotionFreightImagesArrayOutput
}

type StageStatusCurrentPromotionFreightImagesArray []StageStatusCurrentPromotionFreightImagesInput

func (StageStatusCurrentPromotionFreightImagesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionFreightImages)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightImagesArray) ToStageStatusCurrentPromotionFreightImagesArrayOutput() StageStatusCurrentPromotionFreightImagesArrayOutput {
	return i.ToStageStatusCurrentPromotionFreightImagesArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightImagesArray) ToStageStatusCurrentPromotionFreightImagesArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightImagesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightImagesArrayOutput)
}

// Image describes a specific version of a container image.
type StageStatusCurrentPromotionFreightImagesOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightImagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightImages)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightImagesOutput) ToStageStatusCurrentPromotionFreightImagesOutput() StageStatusCurrentPromotionFreightImagesOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightImagesOutput) ToStageStatusCurrentPromotionFreightImagesOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightImagesOutput {
	return o
}

// Annotations is a map of arbitrary metadata for the image.
func (o StageStatusCurrentPromotionFreightImagesOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightImages) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Digest identifies a specific version of the image in the repository
// specified by RepoURL. This is a more precise identifier than Tag.
func (o StageStatusCurrentPromotionFreightImagesOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightImages) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// GitRepoURL specifies the URL of a Git repository that contains the source
// code for the image repository referenced by the RepoURL field if Kargo was
// able to infer it.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o StageStatusCurrentPromotionFreightImagesOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightImages) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// RepoURL describes the repository in which the image can be found.
func (o StageStatusCurrentPromotionFreightImagesOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightImages) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag identifies a specific version of the image in the repository specified
// by RepoURL.
func (o StageStatusCurrentPromotionFreightImagesOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightImages) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionFreightImagesArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightImagesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionFreightImages)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightImagesArrayOutput) ToStageStatusCurrentPromotionFreightImagesArrayOutput() StageStatusCurrentPromotionFreightImagesArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightImagesArrayOutput) ToStageStatusCurrentPromotionFreightImagesArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightImagesArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightImagesArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionFreightImagesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionFreightImages {
		return vs[0].([]StageStatusCurrentPromotionFreightImages)[vs[1].(int)]
	}).(StageStatusCurrentPromotionFreightImagesOutput)
}

// Image describes a specific version of a container image.
type StageStatusCurrentPromotionFreightImagesPatch struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations map[string]string `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest *string `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL *string `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag *string `pulumi:"tag"`
}

// StageStatusCurrentPromotionFreightImagesPatchInput is an input type that accepts StageStatusCurrentPromotionFreightImagesPatchArgs and StageStatusCurrentPromotionFreightImagesPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightImagesPatchInput` via:
//
//	StageStatusCurrentPromotionFreightImagesPatchArgs{...}
type StageStatusCurrentPromotionFreightImagesPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightImagesPatchOutput() StageStatusCurrentPromotionFreightImagesPatchOutput
	ToStageStatusCurrentPromotionFreightImagesPatchOutputWithContext(context.Context) StageStatusCurrentPromotionFreightImagesPatchOutput
}

// Image describes a specific version of a container image.
type StageStatusCurrentPromotionFreightImagesPatchArgs struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusCurrentPromotionFreightImagesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightImagesPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightImagesPatchArgs) ToStageStatusCurrentPromotionFreightImagesPatchOutput() StageStatusCurrentPromotionFreightImagesPatchOutput {
	return i.ToStageStatusCurrentPromotionFreightImagesPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightImagesPatchArgs) ToStageStatusCurrentPromotionFreightImagesPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightImagesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightImagesPatchOutput)
}

// StageStatusCurrentPromotionFreightImagesPatchArrayInput is an input type that accepts StageStatusCurrentPromotionFreightImagesPatchArray and StageStatusCurrentPromotionFreightImagesPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightImagesPatchArrayInput` via:
//
//	StageStatusCurrentPromotionFreightImagesPatchArray{ StageStatusCurrentPromotionFreightImagesPatchArgs{...} }
type StageStatusCurrentPromotionFreightImagesPatchArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightImagesPatchArrayOutput() StageStatusCurrentPromotionFreightImagesPatchArrayOutput
	ToStageStatusCurrentPromotionFreightImagesPatchArrayOutputWithContext(context.Context) StageStatusCurrentPromotionFreightImagesPatchArrayOutput
}

type StageStatusCurrentPromotionFreightImagesPatchArray []StageStatusCurrentPromotionFreightImagesPatchInput

func (StageStatusCurrentPromotionFreightImagesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionFreightImagesPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightImagesPatchArray) ToStageStatusCurrentPromotionFreightImagesPatchArrayOutput() StageStatusCurrentPromotionFreightImagesPatchArrayOutput {
	return i.ToStageStatusCurrentPromotionFreightImagesPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightImagesPatchArray) ToStageStatusCurrentPromotionFreightImagesPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightImagesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightImagesPatchArrayOutput)
}

// Image describes a specific version of a container image.
type StageStatusCurrentPromotionFreightImagesPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightImagesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightImagesPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightImagesPatchOutput) ToStageStatusCurrentPromotionFreightImagesPatchOutput() StageStatusCurrentPromotionFreightImagesPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightImagesPatchOutput) ToStageStatusCurrentPromotionFreightImagesPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightImagesPatchOutput {
	return o
}

// Annotations is a map of arbitrary metadata for the image.
func (o StageStatusCurrentPromotionFreightImagesPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightImagesPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Digest identifies a specific version of the image in the repository
// specified by RepoURL. This is a more precise identifier than Tag.
func (o StageStatusCurrentPromotionFreightImagesPatchOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightImagesPatch) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// GitRepoURL specifies the URL of a Git repository that contains the source
// code for the image repository referenced by the RepoURL field if Kargo was
// able to infer it.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o StageStatusCurrentPromotionFreightImagesPatchOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightImagesPatch) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// RepoURL describes the repository in which the image can be found.
func (o StageStatusCurrentPromotionFreightImagesPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightImagesPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag identifies a specific version of the image in the repository specified
// by RepoURL.
func (o StageStatusCurrentPromotionFreightImagesPatchOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightImagesPatch) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionFreightImagesPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightImagesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionFreightImagesPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightImagesPatchArrayOutput) ToStageStatusCurrentPromotionFreightImagesPatchArrayOutput() StageStatusCurrentPromotionFreightImagesPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightImagesPatchArrayOutput) ToStageStatusCurrentPromotionFreightImagesPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightImagesPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightImagesPatchArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionFreightImagesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionFreightImagesPatch {
		return vs[0].([]StageStatusCurrentPromotionFreightImagesPatch)[vs[1].(int)]
	}).(StageStatusCurrentPromotionFreightImagesPatchOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusCurrentPromotionFreightOrigin struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name *string `pulumi:"name"`
}

// StageStatusCurrentPromotionFreightOriginInput is an input type that accepts StageStatusCurrentPromotionFreightOriginArgs and StageStatusCurrentPromotionFreightOriginOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightOriginInput` via:
//
//	StageStatusCurrentPromotionFreightOriginArgs{...}
type StageStatusCurrentPromotionFreightOriginInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightOriginOutput() StageStatusCurrentPromotionFreightOriginOutput
	ToStageStatusCurrentPromotionFreightOriginOutputWithContext(context.Context) StageStatusCurrentPromotionFreightOriginOutput
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusCurrentPromotionFreightOriginArgs struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StageStatusCurrentPromotionFreightOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightOrigin)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightOriginArgs) ToStageStatusCurrentPromotionFreightOriginOutput() StageStatusCurrentPromotionFreightOriginOutput {
	return i.ToStageStatusCurrentPromotionFreightOriginOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightOriginArgs) ToStageStatusCurrentPromotionFreightOriginOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightOriginOutput)
}

func (i StageStatusCurrentPromotionFreightOriginArgs) ToStageStatusCurrentPromotionFreightOriginPtrOutput() StageStatusCurrentPromotionFreightOriginPtrOutput {
	return i.ToStageStatusCurrentPromotionFreightOriginPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightOriginArgs) ToStageStatusCurrentPromotionFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightOriginOutput).ToStageStatusCurrentPromotionFreightOriginPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionFreightOriginPtrInput is an input type that accepts StageStatusCurrentPromotionFreightOriginArgs, StageStatusCurrentPromotionFreightOriginPtr and StageStatusCurrentPromotionFreightOriginPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightOriginPtrInput` via:
//
//	        StageStatusCurrentPromotionFreightOriginArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionFreightOriginPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightOriginPtrOutput() StageStatusCurrentPromotionFreightOriginPtrOutput
	ToStageStatusCurrentPromotionFreightOriginPtrOutputWithContext(context.Context) StageStatusCurrentPromotionFreightOriginPtrOutput
}

type stageStatusCurrentPromotionFreightOriginPtrType StageStatusCurrentPromotionFreightOriginArgs

func StageStatusCurrentPromotionFreightOriginPtr(v *StageStatusCurrentPromotionFreightOriginArgs) StageStatusCurrentPromotionFreightOriginPtrInput {
	return (*stageStatusCurrentPromotionFreightOriginPtrType)(v)
}

func (*stageStatusCurrentPromotionFreightOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionFreightOrigin)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionFreightOriginPtrType) ToStageStatusCurrentPromotionFreightOriginPtrOutput() StageStatusCurrentPromotionFreightOriginPtrOutput {
	return i.ToStageStatusCurrentPromotionFreightOriginPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionFreightOriginPtrType) ToStageStatusCurrentPromotionFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightOriginPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusCurrentPromotionFreightOriginOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightOrigin)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightOriginOutput) ToStageStatusCurrentPromotionFreightOriginOutput() StageStatusCurrentPromotionFreightOriginOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightOriginOutput) ToStageStatusCurrentPromotionFreightOriginOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightOriginOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightOriginOutput) ToStageStatusCurrentPromotionFreightOriginPtrOutput() StageStatusCurrentPromotionFreightOriginPtrOutput {
	return o.ToStageStatusCurrentPromotionFreightOriginPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionFreightOriginOutput) ToStageStatusCurrentPromotionFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionFreightOrigin) *StageStatusCurrentPromotionFreightOrigin {
		return &v
	}).(StageStatusCurrentPromotionFreightOriginPtrOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusCurrentPromotionFreightOriginOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightOrigin) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusCurrentPromotionFreightOriginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightOrigin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionFreightOriginPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionFreightOrigin)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightOriginPtrOutput) ToStageStatusCurrentPromotionFreightOriginPtrOutput() StageStatusCurrentPromotionFreightOriginPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightOriginPtrOutput) ToStageStatusCurrentPromotionFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightOriginPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightOriginPtrOutput) Elem() StageStatusCurrentPromotionFreightOriginOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreightOrigin) StageStatusCurrentPromotionFreightOrigin {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionFreightOrigin
		return ret
	}).(StageStatusCurrentPromotionFreightOriginOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusCurrentPromotionFreightOriginPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreightOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusCurrentPromotionFreightOriginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreightOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusCurrentPromotionFreightOriginPatch struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name *string `pulumi:"name"`
}

// StageStatusCurrentPromotionFreightOriginPatchInput is an input type that accepts StageStatusCurrentPromotionFreightOriginPatchArgs and StageStatusCurrentPromotionFreightOriginPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightOriginPatchInput` via:
//
//	StageStatusCurrentPromotionFreightOriginPatchArgs{...}
type StageStatusCurrentPromotionFreightOriginPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightOriginPatchOutput() StageStatusCurrentPromotionFreightOriginPatchOutput
	ToStageStatusCurrentPromotionFreightOriginPatchOutputWithContext(context.Context) StageStatusCurrentPromotionFreightOriginPatchOutput
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusCurrentPromotionFreightOriginPatchArgs struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StageStatusCurrentPromotionFreightOriginPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightOriginPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightOriginPatchArgs) ToStageStatusCurrentPromotionFreightOriginPatchOutput() StageStatusCurrentPromotionFreightOriginPatchOutput {
	return i.ToStageStatusCurrentPromotionFreightOriginPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightOriginPatchArgs) ToStageStatusCurrentPromotionFreightOriginPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightOriginPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightOriginPatchOutput)
}

func (i StageStatusCurrentPromotionFreightOriginPatchArgs) ToStageStatusCurrentPromotionFreightOriginPatchPtrOutput() StageStatusCurrentPromotionFreightOriginPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightOriginPatchArgs) ToStageStatusCurrentPromotionFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightOriginPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightOriginPatchOutput).ToStageStatusCurrentPromotionFreightOriginPatchPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionFreightOriginPatchPtrInput is an input type that accepts StageStatusCurrentPromotionFreightOriginPatchArgs, StageStatusCurrentPromotionFreightOriginPatchPtr and StageStatusCurrentPromotionFreightOriginPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightOriginPatchPtrInput` via:
//
//	        StageStatusCurrentPromotionFreightOriginPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionFreightOriginPatchPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightOriginPatchPtrOutput() StageStatusCurrentPromotionFreightOriginPatchPtrOutput
	ToStageStatusCurrentPromotionFreightOriginPatchPtrOutputWithContext(context.Context) StageStatusCurrentPromotionFreightOriginPatchPtrOutput
}

type stageStatusCurrentPromotionFreightOriginPatchPtrType StageStatusCurrentPromotionFreightOriginPatchArgs

func StageStatusCurrentPromotionFreightOriginPatchPtr(v *StageStatusCurrentPromotionFreightOriginPatchArgs) StageStatusCurrentPromotionFreightOriginPatchPtrInput {
	return (*stageStatusCurrentPromotionFreightOriginPatchPtrType)(v)
}

func (*stageStatusCurrentPromotionFreightOriginPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionFreightOriginPatch)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionFreightOriginPatchPtrType) ToStageStatusCurrentPromotionFreightOriginPatchPtrOutput() StageStatusCurrentPromotionFreightOriginPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionFreightOriginPatchPtrType) ToStageStatusCurrentPromotionFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightOriginPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightOriginPatchPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusCurrentPromotionFreightOriginPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightOriginPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightOriginPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightOriginPatchOutput) ToStageStatusCurrentPromotionFreightOriginPatchOutput() StageStatusCurrentPromotionFreightOriginPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightOriginPatchOutput) ToStageStatusCurrentPromotionFreightOriginPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightOriginPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightOriginPatchOutput) ToStageStatusCurrentPromotionFreightOriginPatchPtrOutput() StageStatusCurrentPromotionFreightOriginPatchPtrOutput {
	return o.ToStageStatusCurrentPromotionFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionFreightOriginPatchOutput) ToStageStatusCurrentPromotionFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightOriginPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionFreightOriginPatch) *StageStatusCurrentPromotionFreightOriginPatch {
		return &v
	}).(StageStatusCurrentPromotionFreightOriginPatchPtrOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusCurrentPromotionFreightOriginPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightOriginPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusCurrentPromotionFreightOriginPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightOriginPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionFreightOriginPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightOriginPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionFreightOriginPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightOriginPatchPtrOutput) ToStageStatusCurrentPromotionFreightOriginPatchPtrOutput() StageStatusCurrentPromotionFreightOriginPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightOriginPatchPtrOutput) ToStageStatusCurrentPromotionFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightOriginPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightOriginPatchPtrOutput) Elem() StageStatusCurrentPromotionFreightOriginPatchOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreightOriginPatch) StageStatusCurrentPromotionFreightOriginPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionFreightOriginPatch
		return ret
	}).(StageStatusCurrentPromotionFreightOriginPatchOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusCurrentPromotionFreightOriginPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreightOriginPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusCurrentPromotionFreightOriginPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreightOriginPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Freight is the freight being promoted.
type StageStatusCurrentPromotionFreightPatch struct {
	// Charts describes specific versions of specific Helm charts.
	Charts []StageStatusCurrentPromotionFreightChartsPatch `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits []StageStatusCurrentPromotionFreightCommitsPatch `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images []StageStatusCurrentPromotionFreightImagesPatch `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   *string                                        `pulumi:"name"`
	Origin *StageStatusCurrentPromotionFreightOriginPatch `pulumi:"origin"`
}

// StageStatusCurrentPromotionFreightPatchInput is an input type that accepts StageStatusCurrentPromotionFreightPatchArgs and StageStatusCurrentPromotionFreightPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightPatchInput` via:
//
//	StageStatusCurrentPromotionFreightPatchArgs{...}
type StageStatusCurrentPromotionFreightPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightPatchOutput() StageStatusCurrentPromotionFreightPatchOutput
	ToStageStatusCurrentPromotionFreightPatchOutputWithContext(context.Context) StageStatusCurrentPromotionFreightPatchOutput
}

// Freight is the freight being promoted.
type StageStatusCurrentPromotionFreightPatchArgs struct {
	// Charts describes specific versions of specific Helm charts.
	Charts StageStatusCurrentPromotionFreightChartsPatchArrayInput `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits StageStatusCurrentPromotionFreightCommitsPatchArrayInput `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images StageStatusCurrentPromotionFreightImagesPatchArrayInput `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   pulumi.StringPtrInput                                 `pulumi:"name"`
	Origin StageStatusCurrentPromotionFreightOriginPatchPtrInput `pulumi:"origin"`
}

func (StageStatusCurrentPromotionFreightPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionFreightPatchArgs) ToStageStatusCurrentPromotionFreightPatchOutput() StageStatusCurrentPromotionFreightPatchOutput {
	return i.ToStageStatusCurrentPromotionFreightPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightPatchArgs) ToStageStatusCurrentPromotionFreightPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightPatchOutput)
}

func (i StageStatusCurrentPromotionFreightPatchArgs) ToStageStatusCurrentPromotionFreightPatchPtrOutput() StageStatusCurrentPromotionFreightPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionFreightPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionFreightPatchArgs) ToStageStatusCurrentPromotionFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightPatchOutput).ToStageStatusCurrentPromotionFreightPatchPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionFreightPatchPtrInput is an input type that accepts StageStatusCurrentPromotionFreightPatchArgs, StageStatusCurrentPromotionFreightPatchPtr and StageStatusCurrentPromotionFreightPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionFreightPatchPtrInput` via:
//
//	        StageStatusCurrentPromotionFreightPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionFreightPatchPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionFreightPatchPtrOutput() StageStatusCurrentPromotionFreightPatchPtrOutput
	ToStageStatusCurrentPromotionFreightPatchPtrOutputWithContext(context.Context) StageStatusCurrentPromotionFreightPatchPtrOutput
}

type stageStatusCurrentPromotionFreightPatchPtrType StageStatusCurrentPromotionFreightPatchArgs

func StageStatusCurrentPromotionFreightPatchPtr(v *StageStatusCurrentPromotionFreightPatchArgs) StageStatusCurrentPromotionFreightPatchPtrInput {
	return (*stageStatusCurrentPromotionFreightPatchPtrType)(v)
}

func (*stageStatusCurrentPromotionFreightPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionFreightPatch)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionFreightPatchPtrType) ToStageStatusCurrentPromotionFreightPatchPtrOutput() StageStatusCurrentPromotionFreightPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionFreightPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionFreightPatchPtrType) ToStageStatusCurrentPromotionFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionFreightPatchPtrOutput)
}

// Freight is the freight being promoted.
type StageStatusCurrentPromotionFreightPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionFreightPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightPatchOutput) ToStageStatusCurrentPromotionFreightPatchOutput() StageStatusCurrentPromotionFreightPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightPatchOutput) ToStageStatusCurrentPromotionFreightPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightPatchOutput) ToStageStatusCurrentPromotionFreightPatchPtrOutput() StageStatusCurrentPromotionFreightPatchPtrOutput {
	return o.ToStageStatusCurrentPromotionFreightPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionFreightPatchOutput) ToStageStatusCurrentPromotionFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionFreightPatch) *StageStatusCurrentPromotionFreightPatch {
		return &v
	}).(StageStatusCurrentPromotionFreightPatchPtrOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusCurrentPromotionFreightPatchOutput) Charts() StageStatusCurrentPromotionFreightChartsPatchArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightPatch) []StageStatusCurrentPromotionFreightChartsPatch {
		return v.Charts
	}).(StageStatusCurrentPromotionFreightChartsPatchArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusCurrentPromotionFreightPatchOutput) Commits() StageStatusCurrentPromotionFreightCommitsPatchArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightPatch) []StageStatusCurrentPromotionFreightCommitsPatch {
		return v.Commits
	}).(StageStatusCurrentPromotionFreightCommitsPatchArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusCurrentPromotionFreightPatchOutput) Images() StageStatusCurrentPromotionFreightImagesPatchArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightPatch) []StageStatusCurrentPromotionFreightImagesPatch {
		return v.Images
	}).(StageStatusCurrentPromotionFreightImagesPatchArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusCurrentPromotionFreightPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionFreightPatchOutput) Origin() StageStatusCurrentPromotionFreightOriginPatchPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionFreightPatch) *StageStatusCurrentPromotionFreightOriginPatch {
		return v.Origin
	}).(StageStatusCurrentPromotionFreightOriginPatchPtrOutput)
}

type StageStatusCurrentPromotionFreightPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionFreightPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionFreightPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionFreightPatchPtrOutput) ToStageStatusCurrentPromotionFreightPatchPtrOutput() StageStatusCurrentPromotionFreightPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightPatchPtrOutput) ToStageStatusCurrentPromotionFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionFreightPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionFreightPatchPtrOutput) Elem() StageStatusCurrentPromotionFreightPatchOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreightPatch) StageStatusCurrentPromotionFreightPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionFreightPatch
		return ret
	}).(StageStatusCurrentPromotionFreightPatchOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusCurrentPromotionFreightPatchPtrOutput) Charts() StageStatusCurrentPromotionFreightChartsPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreightPatch) []StageStatusCurrentPromotionFreightChartsPatch {
		if v == nil {
			return nil
		}
		return v.Charts
	}).(StageStatusCurrentPromotionFreightChartsPatchArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusCurrentPromotionFreightPatchPtrOutput) Commits() StageStatusCurrentPromotionFreightCommitsPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreightPatch) []StageStatusCurrentPromotionFreightCommitsPatch {
		if v == nil {
			return nil
		}
		return v.Commits
	}).(StageStatusCurrentPromotionFreightCommitsPatchArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusCurrentPromotionFreightPatchPtrOutput) Images() StageStatusCurrentPromotionFreightImagesPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreightPatch) []StageStatusCurrentPromotionFreightImagesPatch {
		if v == nil {
			return nil
		}
		return v.Images
	}).(StageStatusCurrentPromotionFreightImagesPatchArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusCurrentPromotionFreightPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreightPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionFreightPatchPtrOutput) Origin() StageStatusCurrentPromotionFreightOriginPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionFreightPatch) *StageStatusCurrentPromotionFreightOriginPatch {
		if v == nil {
			return nil
		}
		return v.Origin
	}).(StageStatusCurrentPromotionFreightOriginPatchPtrOutput)
}

// CurrentPromotion is a reference to the currently Running promotion.
type StageStatusCurrentPromotionPatch struct {
	// FinishedAt is the time at which the Promotion was completed.
	FinishedAt *string                                  `pulumi:"finishedAt"`
	Freight    *StageStatusCurrentPromotionFreightPatch `pulumi:"freight"`
	// Name is the name of the Promotion.
	Name   *string                                 `pulumi:"name"`
	Status *StageStatusCurrentPromotionStatusPatch `pulumi:"status"`
}

// StageStatusCurrentPromotionPatchInput is an input type that accepts StageStatusCurrentPromotionPatchArgs and StageStatusCurrentPromotionPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionPatchInput` via:
//
//	StageStatusCurrentPromotionPatchArgs{...}
type StageStatusCurrentPromotionPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionPatchOutput() StageStatusCurrentPromotionPatchOutput
	ToStageStatusCurrentPromotionPatchOutputWithContext(context.Context) StageStatusCurrentPromotionPatchOutput
}

// CurrentPromotion is a reference to the currently Running promotion.
type StageStatusCurrentPromotionPatchArgs struct {
	// FinishedAt is the time at which the Promotion was completed.
	FinishedAt pulumi.StringPtrInput                           `pulumi:"finishedAt"`
	Freight    StageStatusCurrentPromotionFreightPatchPtrInput `pulumi:"freight"`
	// Name is the name of the Promotion.
	Name   pulumi.StringPtrInput                          `pulumi:"name"`
	Status StageStatusCurrentPromotionStatusPatchPtrInput `pulumi:"status"`
}

func (StageStatusCurrentPromotionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionPatchArgs) ToStageStatusCurrentPromotionPatchOutput() StageStatusCurrentPromotionPatchOutput {
	return i.ToStageStatusCurrentPromotionPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionPatchArgs) ToStageStatusCurrentPromotionPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionPatchOutput)
}

func (i StageStatusCurrentPromotionPatchArgs) ToStageStatusCurrentPromotionPatchPtrOutput() StageStatusCurrentPromotionPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionPatchArgs) ToStageStatusCurrentPromotionPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionPatchOutput).ToStageStatusCurrentPromotionPatchPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionPatchPtrInput is an input type that accepts StageStatusCurrentPromotionPatchArgs, StageStatusCurrentPromotionPatchPtr and StageStatusCurrentPromotionPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionPatchPtrInput` via:
//
//	        StageStatusCurrentPromotionPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionPatchPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionPatchPtrOutput() StageStatusCurrentPromotionPatchPtrOutput
	ToStageStatusCurrentPromotionPatchPtrOutputWithContext(context.Context) StageStatusCurrentPromotionPatchPtrOutput
}

type stageStatusCurrentPromotionPatchPtrType StageStatusCurrentPromotionPatchArgs

func StageStatusCurrentPromotionPatchPtr(v *StageStatusCurrentPromotionPatchArgs) StageStatusCurrentPromotionPatchPtrInput {
	return (*stageStatusCurrentPromotionPatchPtrType)(v)
}

func (*stageStatusCurrentPromotionPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionPatch)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionPatchPtrType) ToStageStatusCurrentPromotionPatchPtrOutput() StageStatusCurrentPromotionPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionPatchPtrType) ToStageStatusCurrentPromotionPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionPatchPtrOutput)
}

// CurrentPromotion is a reference to the currently Running promotion.
type StageStatusCurrentPromotionPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionPatchOutput) ToStageStatusCurrentPromotionPatchOutput() StageStatusCurrentPromotionPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionPatchOutput) ToStageStatusCurrentPromotionPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionPatchOutput) ToStageStatusCurrentPromotionPatchPtrOutput() StageStatusCurrentPromotionPatchPtrOutput {
	return o.ToStageStatusCurrentPromotionPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionPatchOutput) ToStageStatusCurrentPromotionPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionPatch) *StageStatusCurrentPromotionPatch {
		return &v
	}).(StageStatusCurrentPromotionPatchPtrOutput)
}

// FinishedAt is the time at which the Promotion was completed.
func (o StageStatusCurrentPromotionPatchOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionPatch) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionPatchOutput) Freight() StageStatusCurrentPromotionFreightPatchPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionPatch) *StageStatusCurrentPromotionFreightPatch { return v.Freight }).(StageStatusCurrentPromotionFreightPatchPtrOutput)
}

// Name is the name of the Promotion.
func (o StageStatusCurrentPromotionPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionPatchOutput) Status() StageStatusCurrentPromotionStatusPatchPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionPatch) *StageStatusCurrentPromotionStatusPatch { return v.Status }).(StageStatusCurrentPromotionStatusPatchPtrOutput)
}

type StageStatusCurrentPromotionPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionPatchPtrOutput) ToStageStatusCurrentPromotionPatchPtrOutput() StageStatusCurrentPromotionPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionPatchPtrOutput) ToStageStatusCurrentPromotionPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionPatchPtrOutput) Elem() StageStatusCurrentPromotionPatchOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionPatch) StageStatusCurrentPromotionPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionPatch
		return ret
	}).(StageStatusCurrentPromotionPatchOutput)
}

// FinishedAt is the time at which the Promotion was completed.
func (o StageStatusCurrentPromotionPatchPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionPatch) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionPatchPtrOutput) Freight() StageStatusCurrentPromotionFreightPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionPatch) *StageStatusCurrentPromotionFreightPatch {
		if v == nil {
			return nil
		}
		return v.Freight
	}).(StageStatusCurrentPromotionFreightPatchPtrOutput)
}

// Name is the name of the Promotion.
func (o StageStatusCurrentPromotionPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionPatchPtrOutput) Status() StageStatusCurrentPromotionStatusPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionPatch) *StageStatusCurrentPromotionStatusPatch {
		if v == nil {
			return nil
		}
		return v.Status
	}).(StageStatusCurrentPromotionStatusPatchPtrOutput)
}

// Status is the (optional) status of the Promotion.
type StageStatusCurrentPromotionStatus struct {
	// CurrentStep is the index of the current promotion step being executed. This
	// permits steps that have already run successfully to be skipped on
	// subsequent reconciliations attempts.
	CurrentStep *int `pulumi:"currentStep"`
	// FinishedAt is the time when the promotion was completed.
	FinishedAt        *string                                             `pulumi:"finishedAt"`
	Freight           *StageStatusCurrentPromotionStatusFreight           `pulumi:"freight"`
	FreightCollection *StageStatusCurrentPromotionStatusFreightCollection `pulumi:"freightCollection"`
	// HealthChecks contains the health check directives to be executed after
	// the Promotion has completed.
	HealthChecks []StageStatusCurrentPromotionStatusHealthChecks `pulumi:"healthChecks"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh *string `pulumi:"lastHandledRefresh"`
	// Message is a display message about the promotion, including any errors
	// preventing the Promotion controller from executing this Promotion.
	// i.e. If the Phase field has a value of Failed, this field can be expected
	// to explain why.
	Message *string `pulumi:"message"`
	// Phase describes where the Promotion currently is in its lifecycle.
	Phase *string `pulumi:"phase"`
	// State stores the state of the promotion process between reconciliation
	// attempts.
	State map[string]interface{} `pulumi:"state"`
	// StepExecutionMetadata tracks metadata pertaining to the execution
	// of individual promotion steps.
	StepExecutionMetadata []StageStatusCurrentPromotionStatusStepExecutionMetadata `pulumi:"stepExecutionMetadata"`
}

// StageStatusCurrentPromotionStatusInput is an input type that accepts StageStatusCurrentPromotionStatusArgs and StageStatusCurrentPromotionStatusOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusInput` via:
//
//	StageStatusCurrentPromotionStatusArgs{...}
type StageStatusCurrentPromotionStatusInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusOutput() StageStatusCurrentPromotionStatusOutput
	ToStageStatusCurrentPromotionStatusOutputWithContext(context.Context) StageStatusCurrentPromotionStatusOutput
}

// Status is the (optional) status of the Promotion.
type StageStatusCurrentPromotionStatusArgs struct {
	// CurrentStep is the index of the current promotion step being executed. This
	// permits steps that have already run successfully to be skipped on
	// subsequent reconciliations attempts.
	CurrentStep pulumi.IntPtrInput `pulumi:"currentStep"`
	// FinishedAt is the time when the promotion was completed.
	FinishedAt        pulumi.StringPtrInput                                      `pulumi:"finishedAt"`
	Freight           StageStatusCurrentPromotionStatusFreightPtrInput           `pulumi:"freight"`
	FreightCollection StageStatusCurrentPromotionStatusFreightCollectionPtrInput `pulumi:"freightCollection"`
	// HealthChecks contains the health check directives to be executed after
	// the Promotion has completed.
	HealthChecks StageStatusCurrentPromotionStatusHealthChecksArrayInput `pulumi:"healthChecks"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh pulumi.StringPtrInput `pulumi:"lastHandledRefresh"`
	// Message is a display message about the promotion, including any errors
	// preventing the Promotion controller from executing this Promotion.
	// i.e. If the Phase field has a value of Failed, this field can be expected
	// to explain why.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Phase describes where the Promotion currently is in its lifecycle.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// State stores the state of the promotion process between reconciliation
	// attempts.
	State pulumi.MapInput `pulumi:"state"`
	// StepExecutionMetadata tracks metadata pertaining to the execution
	// of individual promotion steps.
	StepExecutionMetadata StageStatusCurrentPromotionStatusStepExecutionMetadataArrayInput `pulumi:"stepExecutionMetadata"`
}

func (StageStatusCurrentPromotionStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatus)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusArgs) ToStageStatusCurrentPromotionStatusOutput() StageStatusCurrentPromotionStatusOutput {
	return i.ToStageStatusCurrentPromotionStatusOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusArgs) ToStageStatusCurrentPromotionStatusOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusOutput)
}

func (i StageStatusCurrentPromotionStatusArgs) ToStageStatusCurrentPromotionStatusPtrOutput() StageStatusCurrentPromotionStatusPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusArgs) ToStageStatusCurrentPromotionStatusPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusOutput).ToStageStatusCurrentPromotionStatusPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionStatusPtrInput is an input type that accepts StageStatusCurrentPromotionStatusArgs, StageStatusCurrentPromotionStatusPtr and StageStatusCurrentPromotionStatusPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusPtrInput` via:
//
//	        StageStatusCurrentPromotionStatusArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionStatusPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusPtrOutput() StageStatusCurrentPromotionStatusPtrOutput
	ToStageStatusCurrentPromotionStatusPtrOutputWithContext(context.Context) StageStatusCurrentPromotionStatusPtrOutput
}

type stageStatusCurrentPromotionStatusPtrType StageStatusCurrentPromotionStatusArgs

func StageStatusCurrentPromotionStatusPtr(v *StageStatusCurrentPromotionStatusArgs) StageStatusCurrentPromotionStatusPtrInput {
	return (*stageStatusCurrentPromotionStatusPtrType)(v)
}

func (*stageStatusCurrentPromotionStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatus)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionStatusPtrType) ToStageStatusCurrentPromotionStatusPtrOutput() StageStatusCurrentPromotionStatusPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionStatusPtrType) ToStageStatusCurrentPromotionStatusPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusPtrOutput)
}

// Status is the (optional) status of the Promotion.
type StageStatusCurrentPromotionStatusOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatus)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusOutput) ToStageStatusCurrentPromotionStatusOutput() StageStatusCurrentPromotionStatusOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusOutput) ToStageStatusCurrentPromotionStatusOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusOutput) ToStageStatusCurrentPromotionStatusPtrOutput() StageStatusCurrentPromotionStatusPtrOutput {
	return o.ToStageStatusCurrentPromotionStatusPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionStatusOutput) ToStageStatusCurrentPromotionStatusPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionStatus) *StageStatusCurrentPromotionStatus {
		return &v
	}).(StageStatusCurrentPromotionStatusPtrOutput)
}

// CurrentStep is the index of the current promotion step being executed. This
// permits steps that have already run successfully to be skipped on
// subsequent reconciliations attempts.
func (o StageStatusCurrentPromotionStatusOutput) CurrentStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatus) *int { return v.CurrentStep }).(pulumi.IntPtrOutput)
}

// FinishedAt is the time when the promotion was completed.
func (o StageStatusCurrentPromotionStatusOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatus) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionStatusOutput) Freight() StageStatusCurrentPromotionStatusFreightPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatus) *StageStatusCurrentPromotionStatusFreight { return v.Freight }).(StageStatusCurrentPromotionStatusFreightPtrOutput)
}

func (o StageStatusCurrentPromotionStatusOutput) FreightCollection() StageStatusCurrentPromotionStatusFreightCollectionPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatus) *StageStatusCurrentPromotionStatusFreightCollection {
		return v.FreightCollection
	}).(StageStatusCurrentPromotionStatusFreightCollectionPtrOutput)
}

// HealthChecks contains the health check directives to be executed after
// the Promotion has completed.
func (o StageStatusCurrentPromotionStatusOutput) HealthChecks() StageStatusCurrentPromotionStatusHealthChecksArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatus) []StageStatusCurrentPromotionStatusHealthChecks {
		return v.HealthChecks
	}).(StageStatusCurrentPromotionStatusHealthChecksArrayOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o StageStatusCurrentPromotionStatusOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatus) *string { return v.LastHandledRefresh }).(pulumi.StringPtrOutput)
}

// Message is a display message about the promotion, including any errors
// preventing the Promotion controller from executing this Promotion.
// i.e. If the Phase field has a value of Failed, this field can be expected
// to explain why.
func (o StageStatusCurrentPromotionStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Phase describes where the Promotion currently is in its lifecycle.
func (o StageStatusCurrentPromotionStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// State stores the state of the promotion process between reconciliation
// attempts.
func (o StageStatusCurrentPromotionStatusOutput) State() pulumi.MapOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatus) map[string]interface{} { return v.State }).(pulumi.MapOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution
// of individual promotion steps.
func (o StageStatusCurrentPromotionStatusOutput) StepExecutionMetadata() StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatus) []StageStatusCurrentPromotionStatusStepExecutionMetadata {
		return v.StepExecutionMetadata
	}).(StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput)
}

type StageStatusCurrentPromotionStatusPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatus)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusPtrOutput) ToStageStatusCurrentPromotionStatusPtrOutput() StageStatusCurrentPromotionStatusPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusPtrOutput) ToStageStatusCurrentPromotionStatusPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusPtrOutput) Elem() StageStatusCurrentPromotionStatusOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatus) StageStatusCurrentPromotionStatus {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionStatus
		return ret
	}).(StageStatusCurrentPromotionStatusOutput)
}

// CurrentStep is the index of the current promotion step being executed. This
// permits steps that have already run successfully to be skipped on
// subsequent reconciliations attempts.
func (o StageStatusCurrentPromotionStatusPtrOutput) CurrentStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatus) *int {
		if v == nil {
			return nil
		}
		return v.CurrentStep
	}).(pulumi.IntPtrOutput)
}

// FinishedAt is the time when the promotion was completed.
func (o StageStatusCurrentPromotionStatusPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatus) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionStatusPtrOutput) Freight() StageStatusCurrentPromotionStatusFreightPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatus) *StageStatusCurrentPromotionStatusFreight {
		if v == nil {
			return nil
		}
		return v.Freight
	}).(StageStatusCurrentPromotionStatusFreightPtrOutput)
}

func (o StageStatusCurrentPromotionStatusPtrOutput) FreightCollection() StageStatusCurrentPromotionStatusFreightCollectionPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatus) *StageStatusCurrentPromotionStatusFreightCollection {
		if v == nil {
			return nil
		}
		return v.FreightCollection
	}).(StageStatusCurrentPromotionStatusFreightCollectionPtrOutput)
}

// HealthChecks contains the health check directives to be executed after
// the Promotion has completed.
func (o StageStatusCurrentPromotionStatusPtrOutput) HealthChecks() StageStatusCurrentPromotionStatusHealthChecksArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatus) []StageStatusCurrentPromotionStatusHealthChecks {
		if v == nil {
			return nil
		}
		return v.HealthChecks
	}).(StageStatusCurrentPromotionStatusHealthChecksArrayOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o StageStatusCurrentPromotionStatusPtrOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastHandledRefresh
	}).(pulumi.StringPtrOutput)
}

// Message is a display message about the promotion, including any errors
// preventing the Promotion controller from executing this Promotion.
// i.e. If the Phase field has a value of Failed, this field can be expected
// to explain why.
func (o StageStatusCurrentPromotionStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Phase describes where the Promotion currently is in its lifecycle.
func (o StageStatusCurrentPromotionStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// State stores the state of the promotion process between reconciliation
// attempts.
func (o StageStatusCurrentPromotionStatusPtrOutput) State() pulumi.MapOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatus) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.MapOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution
// of individual promotion steps.
func (o StageStatusCurrentPromotionStatusPtrOutput) StepExecutionMetadata() StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatus) []StageStatusCurrentPromotionStatusStepExecutionMetadata {
		if v == nil {
			return nil
		}
		return v.StepExecutionMetadata
	}).(StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput)
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type StageStatusCurrentPromotionStatusFreight struct {
	// Charts describes specific versions of specific Helm charts.
	Charts []StageStatusCurrentPromotionStatusFreightCharts `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits []StageStatusCurrentPromotionStatusFreightCommits `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images []StageStatusCurrentPromotionStatusFreightImages `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   *string                                         `pulumi:"name"`
	Origin *StageStatusCurrentPromotionStatusFreightOrigin `pulumi:"origin"`
}

// StageStatusCurrentPromotionStatusFreightInput is an input type that accepts StageStatusCurrentPromotionStatusFreightArgs and StageStatusCurrentPromotionStatusFreightOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightInput` via:
//
//	StageStatusCurrentPromotionStatusFreightArgs{...}
type StageStatusCurrentPromotionStatusFreightInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightOutput() StageStatusCurrentPromotionStatusFreightOutput
	ToStageStatusCurrentPromotionStatusFreightOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightOutput
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type StageStatusCurrentPromotionStatusFreightArgs struct {
	// Charts describes specific versions of specific Helm charts.
	Charts StageStatusCurrentPromotionStatusFreightChartsArrayInput `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits StageStatusCurrentPromotionStatusFreightCommitsArrayInput `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images StageStatusCurrentPromotionStatusFreightImagesArrayInput `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   pulumi.StringPtrInput                                  `pulumi:"name"`
	Origin StageStatusCurrentPromotionStatusFreightOriginPtrInput `pulumi:"origin"`
}

func (StageStatusCurrentPromotionStatusFreightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreight)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightArgs) ToStageStatusCurrentPromotionStatusFreightOutput() StageStatusCurrentPromotionStatusFreightOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightArgs) ToStageStatusCurrentPromotionStatusFreightOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightOutput)
}

func (i StageStatusCurrentPromotionStatusFreightArgs) ToStageStatusCurrentPromotionStatusFreightPtrOutput() StageStatusCurrentPromotionStatusFreightPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightArgs) ToStageStatusCurrentPromotionStatusFreightPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightOutput).ToStageStatusCurrentPromotionStatusFreightPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionStatusFreightPtrInput is an input type that accepts StageStatusCurrentPromotionStatusFreightArgs, StageStatusCurrentPromotionStatusFreightPtr and StageStatusCurrentPromotionStatusFreightPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightPtrInput` via:
//
//	        StageStatusCurrentPromotionStatusFreightArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionStatusFreightPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightPtrOutput() StageStatusCurrentPromotionStatusFreightPtrOutput
	ToStageStatusCurrentPromotionStatusFreightPtrOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightPtrOutput
}

type stageStatusCurrentPromotionStatusFreightPtrType StageStatusCurrentPromotionStatusFreightArgs

func StageStatusCurrentPromotionStatusFreightPtr(v *StageStatusCurrentPromotionStatusFreightArgs) StageStatusCurrentPromotionStatusFreightPtrInput {
	return (*stageStatusCurrentPromotionStatusFreightPtrType)(v)
}

func (*stageStatusCurrentPromotionStatusFreightPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreight)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionStatusFreightPtrType) ToStageStatusCurrentPromotionStatusFreightPtrOutput() StageStatusCurrentPromotionStatusFreightPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionStatusFreightPtrType) ToStageStatusCurrentPromotionStatusFreightPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightPtrOutput)
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type StageStatusCurrentPromotionStatusFreightOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreight)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightOutput) ToStageStatusCurrentPromotionStatusFreightOutput() StageStatusCurrentPromotionStatusFreightOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightOutput) ToStageStatusCurrentPromotionStatusFreightOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightOutput) ToStageStatusCurrentPromotionStatusFreightPtrOutput() StageStatusCurrentPromotionStatusFreightPtrOutput {
	return o.ToStageStatusCurrentPromotionStatusFreightPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionStatusFreightOutput) ToStageStatusCurrentPromotionStatusFreightPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionStatusFreight) *StageStatusCurrentPromotionStatusFreight {
		return &v
	}).(StageStatusCurrentPromotionStatusFreightPtrOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusCurrentPromotionStatusFreightOutput) Charts() StageStatusCurrentPromotionStatusFreightChartsArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreight) []StageStatusCurrentPromotionStatusFreightCharts {
		return v.Charts
	}).(StageStatusCurrentPromotionStatusFreightChartsArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusCurrentPromotionStatusFreightOutput) Commits() StageStatusCurrentPromotionStatusFreightCommitsArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreight) []StageStatusCurrentPromotionStatusFreightCommits {
		return v.Commits
	}).(StageStatusCurrentPromotionStatusFreightCommitsArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusCurrentPromotionStatusFreightOutput) Images() StageStatusCurrentPromotionStatusFreightImagesArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreight) []StageStatusCurrentPromotionStatusFreightImages {
		return v.Images
	}).(StageStatusCurrentPromotionStatusFreightImagesArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusCurrentPromotionStatusFreightOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreight) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionStatusFreightOutput) Origin() StageStatusCurrentPromotionStatusFreightOriginPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreight) *StageStatusCurrentPromotionStatusFreightOrigin {
		return v.Origin
	}).(StageStatusCurrentPromotionStatusFreightOriginPtrOutput)
}

type StageStatusCurrentPromotionStatusFreightPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreight)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightPtrOutput) ToStageStatusCurrentPromotionStatusFreightPtrOutput() StageStatusCurrentPromotionStatusFreightPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightPtrOutput) ToStageStatusCurrentPromotionStatusFreightPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightPtrOutput) Elem() StageStatusCurrentPromotionStatusFreightOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreight) StageStatusCurrentPromotionStatusFreight {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionStatusFreight
		return ret
	}).(StageStatusCurrentPromotionStatusFreightOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusCurrentPromotionStatusFreightPtrOutput) Charts() StageStatusCurrentPromotionStatusFreightChartsArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreight) []StageStatusCurrentPromotionStatusFreightCharts {
		if v == nil {
			return nil
		}
		return v.Charts
	}).(StageStatusCurrentPromotionStatusFreightChartsArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusCurrentPromotionStatusFreightPtrOutput) Commits() StageStatusCurrentPromotionStatusFreightCommitsArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreight) []StageStatusCurrentPromotionStatusFreightCommits {
		if v == nil {
			return nil
		}
		return v.Commits
	}).(StageStatusCurrentPromotionStatusFreightCommitsArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusCurrentPromotionStatusFreightPtrOutput) Images() StageStatusCurrentPromotionStatusFreightImagesArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreight) []StageStatusCurrentPromotionStatusFreightImages {
		if v == nil {
			return nil
		}
		return v.Images
	}).(StageStatusCurrentPromotionStatusFreightImagesArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusCurrentPromotionStatusFreightPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreight) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionStatusFreightPtrOutput) Origin() StageStatusCurrentPromotionStatusFreightOriginPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreight) *StageStatusCurrentPromotionStatusFreightOrigin {
		if v == nil {
			return nil
		}
		return v.Origin
	}).(StageStatusCurrentPromotionStatusFreightOriginPtrOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusCurrentPromotionStatusFreightCharts struct {
	// Name specifies the name of the chart.
	Name *string `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL *string `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version *string `pulumi:"version"`
}

// StageStatusCurrentPromotionStatusFreightChartsInput is an input type that accepts StageStatusCurrentPromotionStatusFreightChartsArgs and StageStatusCurrentPromotionStatusFreightChartsOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightChartsInput` via:
//
//	StageStatusCurrentPromotionStatusFreightChartsArgs{...}
type StageStatusCurrentPromotionStatusFreightChartsInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightChartsOutput() StageStatusCurrentPromotionStatusFreightChartsOutput
	ToStageStatusCurrentPromotionStatusFreightChartsOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightChartsOutput
}

// Chart describes a specific version of a Helm chart.
type StageStatusCurrentPromotionStatusFreightChartsArgs struct {
	// Name specifies the name of the chart.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (StageStatusCurrentPromotionStatusFreightChartsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCharts)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightChartsArgs) ToStageStatusCurrentPromotionStatusFreightChartsOutput() StageStatusCurrentPromotionStatusFreightChartsOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightChartsOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightChartsArgs) ToStageStatusCurrentPromotionStatusFreightChartsOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightChartsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightChartsOutput)
}

// StageStatusCurrentPromotionStatusFreightChartsArrayInput is an input type that accepts StageStatusCurrentPromotionStatusFreightChartsArray and StageStatusCurrentPromotionStatusFreightChartsArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightChartsArrayInput` via:
//
//	StageStatusCurrentPromotionStatusFreightChartsArray{ StageStatusCurrentPromotionStatusFreightChartsArgs{...} }
type StageStatusCurrentPromotionStatusFreightChartsArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightChartsArrayOutput() StageStatusCurrentPromotionStatusFreightChartsArrayOutput
	ToStageStatusCurrentPromotionStatusFreightChartsArrayOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightChartsArrayOutput
}

type StageStatusCurrentPromotionStatusFreightChartsArray []StageStatusCurrentPromotionStatusFreightChartsInput

func (StageStatusCurrentPromotionStatusFreightChartsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightCharts)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightChartsArray) ToStageStatusCurrentPromotionStatusFreightChartsArrayOutput() StageStatusCurrentPromotionStatusFreightChartsArrayOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightChartsArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightChartsArray) ToStageStatusCurrentPromotionStatusFreightChartsArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightChartsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightChartsArrayOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusCurrentPromotionStatusFreightChartsOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightChartsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCharts)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightChartsOutput) ToStageStatusCurrentPromotionStatusFreightChartsOutput() StageStatusCurrentPromotionStatusFreightChartsOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightChartsOutput) ToStageStatusCurrentPromotionStatusFreightChartsOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightChartsOutput {
	return o
}

// Name specifies the name of the chart.
func (o StageStatusCurrentPromotionStatusFreightChartsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCharts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. Classic chart
// repositories (using HTTP/S) can contain differently named charts. When this
// field points to such a repository, the Name field will specify the name of
// the chart within the repository. In the case of a repository within an OCI
// registry, the URL implicitly points to a specific chart and the Name field
// will be empty.
func (o StageStatusCurrentPromotionStatusFreightChartsOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCharts) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Version specifies a particular version of the chart.
func (o StageStatusCurrentPromotionStatusFreightChartsOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCharts) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusFreightChartsArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightChartsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightCharts)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightChartsArrayOutput) ToStageStatusCurrentPromotionStatusFreightChartsArrayOutput() StageStatusCurrentPromotionStatusFreightChartsArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightChartsArrayOutput) ToStageStatusCurrentPromotionStatusFreightChartsArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightChartsArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightChartsArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionStatusFreightChartsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionStatusFreightCharts {
		return vs[0].([]StageStatusCurrentPromotionStatusFreightCharts)[vs[1].(int)]
	}).(StageStatusCurrentPromotionStatusFreightChartsOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusCurrentPromotionStatusFreightChartsPatch struct {
	// Name specifies the name of the chart.
	Name *string `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL *string `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version *string `pulumi:"version"`
}

// StageStatusCurrentPromotionStatusFreightChartsPatchInput is an input type that accepts StageStatusCurrentPromotionStatusFreightChartsPatchArgs and StageStatusCurrentPromotionStatusFreightChartsPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightChartsPatchInput` via:
//
//	StageStatusCurrentPromotionStatusFreightChartsPatchArgs{...}
type StageStatusCurrentPromotionStatusFreightChartsPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightChartsPatchOutput() StageStatusCurrentPromotionStatusFreightChartsPatchOutput
	ToStageStatusCurrentPromotionStatusFreightChartsPatchOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightChartsPatchOutput
}

// Chart describes a specific version of a Helm chart.
type StageStatusCurrentPromotionStatusFreightChartsPatchArgs struct {
	// Name specifies the name of the chart.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (StageStatusCurrentPromotionStatusFreightChartsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightChartsPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightChartsPatchArgs) ToStageStatusCurrentPromotionStatusFreightChartsPatchOutput() StageStatusCurrentPromotionStatusFreightChartsPatchOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightChartsPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightChartsPatchArgs) ToStageStatusCurrentPromotionStatusFreightChartsPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightChartsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightChartsPatchOutput)
}

// StageStatusCurrentPromotionStatusFreightChartsPatchArrayInput is an input type that accepts StageStatusCurrentPromotionStatusFreightChartsPatchArray and StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightChartsPatchArrayInput` via:
//
//	StageStatusCurrentPromotionStatusFreightChartsPatchArray{ StageStatusCurrentPromotionStatusFreightChartsPatchArgs{...} }
type StageStatusCurrentPromotionStatusFreightChartsPatchArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput() StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput
	ToStageStatusCurrentPromotionStatusFreightChartsPatchArrayOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput
}

type StageStatusCurrentPromotionStatusFreightChartsPatchArray []StageStatusCurrentPromotionStatusFreightChartsPatchInput

func (StageStatusCurrentPromotionStatusFreightChartsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightChartsPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightChartsPatchArray) ToStageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput() StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightChartsPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightChartsPatchArray) ToStageStatusCurrentPromotionStatusFreightChartsPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusCurrentPromotionStatusFreightChartsPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightChartsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightChartsPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightChartsPatchOutput) ToStageStatusCurrentPromotionStatusFreightChartsPatchOutput() StageStatusCurrentPromotionStatusFreightChartsPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightChartsPatchOutput) ToStageStatusCurrentPromotionStatusFreightChartsPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightChartsPatchOutput {
	return o
}

// Name specifies the name of the chart.
func (o StageStatusCurrentPromotionStatusFreightChartsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightChartsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. Classic chart
// repositories (using HTTP/S) can contain differently named charts. When this
// field points to such a repository, the Name field will specify the name of
// the chart within the repository. In the case of a repository within an OCI
// registry, the URL implicitly points to a specific chart and the Name field
// will be empty.
func (o StageStatusCurrentPromotionStatusFreightChartsPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightChartsPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Version specifies a particular version of the chart.
func (o StageStatusCurrentPromotionStatusFreightChartsPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightChartsPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightChartsPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput) ToStageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput() StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput) ToStageStatusCurrentPromotionStatusFreightChartsPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionStatusFreightChartsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionStatusFreightChartsPatch {
		return vs[0].([]StageStatusCurrentPromotionStatusFreightChartsPatch)[vs[1].(int)]
	}).(StageStatusCurrentPromotionStatusFreightChartsPatchOutput)
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type StageStatusCurrentPromotionStatusFreightCollection struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id *string `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items map[string]map[string]string `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory []StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory `pulumi:"verificationHistory"`
}

// StageStatusCurrentPromotionStatusFreightCollectionInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCollectionArgs and StageStatusCurrentPromotionStatusFreightCollectionOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCollectionInput` via:
//
//	StageStatusCurrentPromotionStatusFreightCollectionArgs{...}
type StageStatusCurrentPromotionStatusFreightCollectionInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCollectionOutput() StageStatusCurrentPromotionStatusFreightCollectionOutput
	ToStageStatusCurrentPromotionStatusFreightCollectionOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCollectionOutput
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type StageStatusCurrentPromotionStatusFreightCollectionArgs struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items pulumi.StringMapMapInput `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayInput `pulumi:"verificationHistory"`
}

func (StageStatusCurrentPromotionStatusFreightCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollection)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightCollectionArgs) ToStageStatusCurrentPromotionStatusFreightCollectionOutput() StageStatusCurrentPromotionStatusFreightCollectionOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCollectionArgs) ToStageStatusCurrentPromotionStatusFreightCollectionOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionOutput)
}

func (i StageStatusCurrentPromotionStatusFreightCollectionArgs) ToStageStatusCurrentPromotionStatusFreightCollectionPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCollectionArgs) ToStageStatusCurrentPromotionStatusFreightCollectionPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionOutput).ToStageStatusCurrentPromotionStatusFreightCollectionPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionStatusFreightCollectionPtrInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCollectionArgs, StageStatusCurrentPromotionStatusFreightCollectionPtr and StageStatusCurrentPromotionStatusFreightCollectionPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCollectionPtrInput` via:
//
//	        StageStatusCurrentPromotionStatusFreightCollectionArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionStatusFreightCollectionPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCollectionPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionPtrOutput
	ToStageStatusCurrentPromotionStatusFreightCollectionPtrOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCollectionPtrOutput
}

type stageStatusCurrentPromotionStatusFreightCollectionPtrType StageStatusCurrentPromotionStatusFreightCollectionArgs

func StageStatusCurrentPromotionStatusFreightCollectionPtr(v *StageStatusCurrentPromotionStatusFreightCollectionArgs) StageStatusCurrentPromotionStatusFreightCollectionPtrInput {
	return (*stageStatusCurrentPromotionStatusFreightCollectionPtrType)(v)
}

func (*stageStatusCurrentPromotionStatusFreightCollectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreightCollection)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionStatusFreightCollectionPtrType) ToStageStatusCurrentPromotionStatusFreightCollectionPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionStatusFreightCollectionPtrType) ToStageStatusCurrentPromotionStatusFreightCollectionPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionPtrOutput)
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type StageStatusCurrentPromotionStatusFreightCollectionOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollection)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCollectionOutput) ToStageStatusCurrentPromotionStatusFreightCollectionOutput() StageStatusCurrentPromotionStatusFreightCollectionOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionOutput) ToStageStatusCurrentPromotionStatusFreightCollectionOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionOutput) ToStageStatusCurrentPromotionStatusFreightCollectionPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionPtrOutput {
	return o.ToStageStatusCurrentPromotionStatusFreightCollectionPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionStatusFreightCollectionOutput) ToStageStatusCurrentPromotionStatusFreightCollectionPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionStatusFreightCollection) *StageStatusCurrentPromotionStatusFreightCollection {
		return &v
	}).(StageStatusCurrentPromotionStatusFreightCollectionPtrOutput)
}

// ID is a unique and deterministically calculated identifier for the
// FreightCollection. It is updated on each use of the UpdateOrPush method.
func (o StageStatusCurrentPromotionStatusFreightCollectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Freight is a map of FreightReference objects, indexed by their Warehouse
// origin.
func (o StageStatusCurrentPromotionStatusFreightCollectionOutput) Items() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollection) map[string]map[string]string {
		return v.Items
	}).(pulumi.StringMapMapOutput)
}

// VerificationHistory is a stack of recent VerificationInfo. By default,
// the last ten VerificationInfo are stored.
func (o StageStatusCurrentPromotionStatusFreightCollectionOutput) VerificationHistory() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollection) []StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory {
		return v.VerificationHistory
	}).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput)
}

type StageStatusCurrentPromotionStatusFreightCollectionPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCollectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreightCollection)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCollectionPtrOutput) ToStageStatusCurrentPromotionStatusFreightCollectionPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionPtrOutput) ToStageStatusCurrentPromotionStatusFreightCollectionPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionPtrOutput) Elem() StageStatusCurrentPromotionStatusFreightCollectionOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollection) StageStatusCurrentPromotionStatusFreightCollection {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionStatusFreightCollection
		return ret
	}).(StageStatusCurrentPromotionStatusFreightCollectionOutput)
}

// ID is a unique and deterministically calculated identifier for the
// FreightCollection. It is updated on each use of the UpdateOrPush method.
func (o StageStatusCurrentPromotionStatusFreightCollectionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollection) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Freight is a map of FreightReference objects, indexed by their Warehouse
// origin.
func (o StageStatusCurrentPromotionStatusFreightCollectionPtrOutput) Items() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollection) map[string]map[string]string {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.StringMapMapOutput)
}

// VerificationHistory is a stack of recent VerificationInfo. By default,
// the last ten VerificationInfo are stored.
func (o StageStatusCurrentPromotionStatusFreightCollectionPtrOutput) VerificationHistory() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollection) []StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory {
		if v == nil {
			return nil
		}
		return v.VerificationHistory
	}).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput)
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type StageStatusCurrentPromotionStatusFreightCollectionPatch struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id *string `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items map[string]map[string]string `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory []StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch `pulumi:"verificationHistory"`
}

// StageStatusCurrentPromotionStatusFreightCollectionPatchInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCollectionPatchArgs and StageStatusCurrentPromotionStatusFreightCollectionPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCollectionPatchInput` via:
//
//	StageStatusCurrentPromotionStatusFreightCollectionPatchArgs{...}
type StageStatusCurrentPromotionStatusFreightCollectionPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCollectionPatchOutput() StageStatusCurrentPromotionStatusFreightCollectionPatchOutput
	ToStageStatusCurrentPromotionStatusFreightCollectionPatchOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCollectionPatchOutput
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type StageStatusCurrentPromotionStatusFreightCollectionPatchArgs struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items pulumi.StringMapMapInput `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayInput `pulumi:"verificationHistory"`
}

func (StageStatusCurrentPromotionStatusFreightCollectionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightCollectionPatchArgs) ToStageStatusCurrentPromotionStatusFreightCollectionPatchOutput() StageStatusCurrentPromotionStatusFreightCollectionPatchOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCollectionPatchArgs) ToStageStatusCurrentPromotionStatusFreightCollectionPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionPatchOutput)
}

func (i StageStatusCurrentPromotionStatusFreightCollectionPatchArgs) ToStageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCollectionPatchArgs) ToStageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionPatchOutput).ToStageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionStatusFreightCollectionPatchPtrInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCollectionPatchArgs, StageStatusCurrentPromotionStatusFreightCollectionPatchPtr and StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCollectionPatchPtrInput` via:
//
//	        StageStatusCurrentPromotionStatusFreightCollectionPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionStatusFreightCollectionPatchPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput
	ToStageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput
}

type stageStatusCurrentPromotionStatusFreightCollectionPatchPtrType StageStatusCurrentPromotionStatusFreightCollectionPatchArgs

func StageStatusCurrentPromotionStatusFreightCollectionPatchPtr(v *StageStatusCurrentPromotionStatusFreightCollectionPatchArgs) StageStatusCurrentPromotionStatusFreightCollectionPatchPtrInput {
	return (*stageStatusCurrentPromotionStatusFreightCollectionPatchPtrType)(v)
}

func (*stageStatusCurrentPromotionStatusFreightCollectionPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreightCollectionPatch)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionStatusFreightCollectionPatchPtrType) ToStageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionStatusFreightCollectionPatchPtrType) ToStageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput)
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type StageStatusCurrentPromotionStatusFreightCollectionPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCollectionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCollectionPatchOutput) ToStageStatusCurrentPromotionStatusFreightCollectionPatchOutput() StageStatusCurrentPromotionStatusFreightCollectionPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionPatchOutput) ToStageStatusCurrentPromotionStatusFreightCollectionPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionPatchOutput) ToStageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput {
	return o.ToStageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionStatusFreightCollectionPatchOutput) ToStageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionStatusFreightCollectionPatch) *StageStatusCurrentPromotionStatusFreightCollectionPatch {
		return &v
	}).(StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput)
}

// ID is a unique and deterministically calculated identifier for the
// FreightCollection. It is updated on each use of the UpdateOrPush method.
func (o StageStatusCurrentPromotionStatusFreightCollectionPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Freight is a map of FreightReference objects, indexed by their Warehouse
// origin.
func (o StageStatusCurrentPromotionStatusFreightCollectionPatchOutput) Items() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionPatch) map[string]map[string]string {
		return v.Items
	}).(pulumi.StringMapMapOutput)
}

// VerificationHistory is a stack of recent VerificationInfo. By default,
// the last ten VerificationInfo are stored.
func (o StageStatusCurrentPromotionStatusFreightCollectionPatchOutput) VerificationHistory() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionPatch) []StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch {
		return v.VerificationHistory
	}).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput)
}

type StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreightCollectionPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput) ToStageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput) ToStageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput) Elem() StageStatusCurrentPromotionStatusFreightCollectionPatchOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollectionPatch) StageStatusCurrentPromotionStatusFreightCollectionPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionStatusFreightCollectionPatch
		return ret
	}).(StageStatusCurrentPromotionStatusFreightCollectionPatchOutput)
}

// ID is a unique and deterministically calculated identifier for the
// FreightCollection. It is updated on each use of the UpdateOrPush method.
func (o StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollectionPatch) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Freight is a map of FreightReference objects, indexed by their Warehouse
// origin.
func (o StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput) Items() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollectionPatch) map[string]map[string]string {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.StringMapMapOutput)
}

// VerificationHistory is a stack of recent VerificationInfo. By default,
// the last ten VerificationInfo are stored.
func (o StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput) VerificationHistory() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollectionPatch) []StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch {
		if v == nil {
			return nil
		}
		return v.VerificationHistory
	}).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       *string                                                                           `pulumi:"actor"`
	AnalysisRun *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime *string `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id *string `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message *string `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase *string `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime *string `pulumi:"startTime"`
}

// StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArgs and StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryInput` via:
//
//	StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArgs{...}
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput
	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArgs struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       pulumi.StringPtrInput                                                                    `pulumi:"actor"`
	AnalysisRun StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime pulumi.StringPtrInput `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArgs) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArgs) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput)
}

// StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArray and StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayInput` via:
//
//	StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArray{ StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArgs{...} }
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput
	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput
}

type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArray []StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryInput

func (StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArray) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArray) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput {
	return o
}

// Actor is the name of the entity that initiated or aborted the
// Verification process.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput) Actor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory) *string { return v.Actor }).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput) AnalysisRun() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory) *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun {
		return v.AnalysisRun
	}).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput)
}

// FinishTime is the time at which the Verification process finished.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput) FinishTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory) *string {
		return v.FinishTime
	}).(pulumi.StringPtrOutput)
}

// ID is the identifier of the Verification process.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message may contain additional information about why the verification
// process is in its current phase.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory) *string {
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Phase describes the current phase of the Verification process. Generally,
// this will be a reflection of the underlying AnalysisRun's phase, however,
// there are exceptions to this, such as in the case where an AnalysisRun
// cannot be launched successfully.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// StartTime is the time at which the Verification process was started.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory) *string {
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory {
		return vs[0].([]StageStatusCurrentPromotionStatusFreightCollectionVerificationHistory)[vs[1].(int)]
	}).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun struct {
	// Name is the name of the AnalysisRun.
	Name *string `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace *string `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase *string `pulumi:"phase"`
}

// StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs and StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunInput` via:
//
//	StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs{...}
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput
	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs struct {
	// Name is the name of the AnalysisRun.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
}

func (StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput)
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput).ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs, StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtr and StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput` via:
//
//	        StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput
	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput
}

type stageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs

func StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtr(v *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput {
	return (*stageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType)(v)
}

func (*stageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o.ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun {
		return &v
	}).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput)
}

// Name is the name of the AnalysisRun.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) Elem() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun
		return ret
	}).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput)
}

// Name is the name of the AnalysisRun.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch struct {
	// Name is the name of the AnalysisRun.
	Name *string `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace *string `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase *string `pulumi:"phase"`
}

// StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs and StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchInput` via:
//
//	StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs{...}
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput
	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs struct {
	// Name is the name of the AnalysisRun.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
}

func (StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput)
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput).ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs, StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtr and StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput` via:
//
//	        StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput
	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput
}

type stageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs

func StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtr(v *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput {
	return (*stageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType)(v)
}

func (*stageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o.ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch {
		return &v
	}).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput)
}

// Name is the name of the AnalysisRun.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) Elem() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch
		return ret
	}).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput)
}

// Name is the name of the AnalysisRun.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       *string                                                                                `pulumi:"actor"`
	AnalysisRun *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime *string `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id *string `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message *string `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase *string `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime *string `pulumi:"startTime"`
}

// StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArgs and StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchInput` via:
//
//	StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArgs{...}
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput
	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArgs struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       pulumi.StringPtrInput                                                                         `pulumi:"actor"`
	AnalysisRun StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime pulumi.StringPtrInput `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArgs) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArgs) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput)
}

// StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArray and StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayInput` via:
//
//	StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArray{ StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArgs{...} }
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput
	ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput
}

type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArray []StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchInput

func (StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArray) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArray) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return o
}

// Actor is the name of the entity that initiated or aborted the
// Verification process.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput) Actor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch) *string {
		return v.Actor
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput) AnalysisRun() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch) *StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch {
		return v.AnalysisRun
	}).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput)
}

// FinishTime is the time at which the Verification process finished.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput) FinishTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch) *string {
		return v.FinishTime
	}).(pulumi.StringPtrOutput)
}

// ID is the identifier of the Verification process.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch) *string {
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Message may contain additional information about why the verification
// process is in its current phase.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch) *string {
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Phase describes the current phase of the Verification process. Generally,
// this will be a reflection of the underlying AnalysisRun's phase, however,
// there are exceptions to this, such as in the case where an AnalysisRun
// cannot be launched successfully.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch) *string {
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// StartTime is the time at which the Verification process was started.
func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch) *string {
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput() StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput) ToStageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch {
		return vs[0].([]StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatch)[vs[1].(int)]
	}).(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusCurrentPromotionStatusFreightCommits struct {
	// Author is the author of the commit.
	Author *string `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch *string `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer *string `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id *string `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message *string `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL *string `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag *string `pulumi:"tag"`
}

// StageStatusCurrentPromotionStatusFreightCommitsInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCommitsArgs and StageStatusCurrentPromotionStatusFreightCommitsOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCommitsInput` via:
//
//	StageStatusCurrentPromotionStatusFreightCommitsArgs{...}
type StageStatusCurrentPromotionStatusFreightCommitsInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCommitsOutput() StageStatusCurrentPromotionStatusFreightCommitsOutput
	ToStageStatusCurrentPromotionStatusFreightCommitsOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCommitsOutput
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusCurrentPromotionStatusFreightCommitsArgs struct {
	// Author is the author of the commit.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer pulumi.StringPtrInput `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusCurrentPromotionStatusFreightCommitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCommits)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightCommitsArgs) ToStageStatusCurrentPromotionStatusFreightCommitsOutput() StageStatusCurrentPromotionStatusFreightCommitsOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCommitsOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCommitsArgs) ToStageStatusCurrentPromotionStatusFreightCommitsOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCommitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCommitsOutput)
}

// StageStatusCurrentPromotionStatusFreightCommitsArrayInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCommitsArray and StageStatusCurrentPromotionStatusFreightCommitsArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCommitsArrayInput` via:
//
//	StageStatusCurrentPromotionStatusFreightCommitsArray{ StageStatusCurrentPromotionStatusFreightCommitsArgs{...} }
type StageStatusCurrentPromotionStatusFreightCommitsArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCommitsArrayOutput() StageStatusCurrentPromotionStatusFreightCommitsArrayOutput
	ToStageStatusCurrentPromotionStatusFreightCommitsArrayOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCommitsArrayOutput
}

type StageStatusCurrentPromotionStatusFreightCommitsArray []StageStatusCurrentPromotionStatusFreightCommitsInput

func (StageStatusCurrentPromotionStatusFreightCommitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightCommits)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightCommitsArray) ToStageStatusCurrentPromotionStatusFreightCommitsArrayOutput() StageStatusCurrentPromotionStatusFreightCommitsArrayOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCommitsArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCommitsArray) ToStageStatusCurrentPromotionStatusFreightCommitsArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCommitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCommitsArrayOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusCurrentPromotionStatusFreightCommitsOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCommitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCommits)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCommitsOutput) ToStageStatusCurrentPromotionStatusFreightCommitsOutput() StageStatusCurrentPromotionStatusFreightCommitsOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCommitsOutput) ToStageStatusCurrentPromotionStatusFreightCommitsOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCommitsOutput {
	return o
}

// Author is the author of the commit.
func (o StageStatusCurrentPromotionStatusFreightCommitsOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCommits) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Branch denotes the branch of the repository where this commit was found.
func (o StageStatusCurrentPromotionStatusFreightCommitsOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCommits) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Committer is the person who committed the commit.
func (o StageStatusCurrentPromotionStatusFreightCommitsOutput) Committer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCommits) *string { return v.Committer }).(pulumi.StringPtrOutput)
}

// ID is the ID of a specific commit in the Git repository specified by
// RepoURL.
func (o StageStatusCurrentPromotionStatusFreightCommitsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCommits) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message is the message associated with the commit. At present, this only
// contains the first line (subject) of the commit message.
func (o StageStatusCurrentPromotionStatusFreightCommitsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCommits) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// RepoURL is the URL of a Git repository.
func (o StageStatusCurrentPromotionStatusFreightCommitsOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCommits) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag denotes a tag in the repository that matched selection criteria and
// resolved to this commit.
func (o StageStatusCurrentPromotionStatusFreightCommitsOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCommits) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusFreightCommitsArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCommitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightCommits)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCommitsArrayOutput) ToStageStatusCurrentPromotionStatusFreightCommitsArrayOutput() StageStatusCurrentPromotionStatusFreightCommitsArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCommitsArrayOutput) ToStageStatusCurrentPromotionStatusFreightCommitsArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCommitsArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCommitsArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionStatusFreightCommitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionStatusFreightCommits {
		return vs[0].([]StageStatusCurrentPromotionStatusFreightCommits)[vs[1].(int)]
	}).(StageStatusCurrentPromotionStatusFreightCommitsOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusCurrentPromotionStatusFreightCommitsPatch struct {
	// Author is the author of the commit.
	Author *string `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch *string `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer *string `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id *string `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message *string `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL *string `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag *string `pulumi:"tag"`
}

// StageStatusCurrentPromotionStatusFreightCommitsPatchInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCommitsPatchArgs and StageStatusCurrentPromotionStatusFreightCommitsPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCommitsPatchInput` via:
//
//	StageStatusCurrentPromotionStatusFreightCommitsPatchArgs{...}
type StageStatusCurrentPromotionStatusFreightCommitsPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCommitsPatchOutput() StageStatusCurrentPromotionStatusFreightCommitsPatchOutput
	ToStageStatusCurrentPromotionStatusFreightCommitsPatchOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCommitsPatchOutput
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusCurrentPromotionStatusFreightCommitsPatchArgs struct {
	// Author is the author of the commit.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer pulumi.StringPtrInput `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusCurrentPromotionStatusFreightCommitsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCommitsPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightCommitsPatchArgs) ToStageStatusCurrentPromotionStatusFreightCommitsPatchOutput() StageStatusCurrentPromotionStatusFreightCommitsPatchOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCommitsPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCommitsPatchArgs) ToStageStatusCurrentPromotionStatusFreightCommitsPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCommitsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCommitsPatchOutput)
}

// StageStatusCurrentPromotionStatusFreightCommitsPatchArrayInput is an input type that accepts StageStatusCurrentPromotionStatusFreightCommitsPatchArray and StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightCommitsPatchArrayInput` via:
//
//	StageStatusCurrentPromotionStatusFreightCommitsPatchArray{ StageStatusCurrentPromotionStatusFreightCommitsPatchArgs{...} }
type StageStatusCurrentPromotionStatusFreightCommitsPatchArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput() StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput
	ToStageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput
}

type StageStatusCurrentPromotionStatusFreightCommitsPatchArray []StageStatusCurrentPromotionStatusFreightCommitsPatchInput

func (StageStatusCurrentPromotionStatusFreightCommitsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightCommitsPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightCommitsPatchArray) ToStageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput() StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightCommitsPatchArray) ToStageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusCurrentPromotionStatusFreightCommitsPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCommitsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCommitsPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCommitsPatchOutput) ToStageStatusCurrentPromotionStatusFreightCommitsPatchOutput() StageStatusCurrentPromotionStatusFreightCommitsPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCommitsPatchOutput) ToStageStatusCurrentPromotionStatusFreightCommitsPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCommitsPatchOutput {
	return o
}

// Author is the author of the commit.
func (o StageStatusCurrentPromotionStatusFreightCommitsPatchOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCommitsPatch) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Branch denotes the branch of the repository where this commit was found.
func (o StageStatusCurrentPromotionStatusFreightCommitsPatchOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCommitsPatch) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Committer is the person who committed the commit.
func (o StageStatusCurrentPromotionStatusFreightCommitsPatchOutput) Committer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCommitsPatch) *string { return v.Committer }).(pulumi.StringPtrOutput)
}

// ID is the ID of a specific commit in the Git repository specified by
// RepoURL.
func (o StageStatusCurrentPromotionStatusFreightCommitsPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCommitsPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message is the message associated with the commit. At present, this only
// contains the first line (subject) of the commit message.
func (o StageStatusCurrentPromotionStatusFreightCommitsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCommitsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// RepoURL is the URL of a Git repository.
func (o StageStatusCurrentPromotionStatusFreightCommitsPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCommitsPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag denotes a tag in the repository that matched selection criteria and
// resolved to this commit.
func (o StageStatusCurrentPromotionStatusFreightCommitsPatchOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightCommitsPatch) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightCommitsPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput) ToStageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput() StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput) ToStageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionStatusFreightCommitsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionStatusFreightCommitsPatch {
		return vs[0].([]StageStatusCurrentPromotionStatusFreightCommitsPatch)[vs[1].(int)]
	}).(StageStatusCurrentPromotionStatusFreightCommitsPatchOutput)
}

// Image describes a specific version of a container image.
type StageStatusCurrentPromotionStatusFreightImages struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations map[string]string `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest *string `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL *string `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag *string `pulumi:"tag"`
}

// StageStatusCurrentPromotionStatusFreightImagesInput is an input type that accepts StageStatusCurrentPromotionStatusFreightImagesArgs and StageStatusCurrentPromotionStatusFreightImagesOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightImagesInput` via:
//
//	StageStatusCurrentPromotionStatusFreightImagesArgs{...}
type StageStatusCurrentPromotionStatusFreightImagesInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightImagesOutput() StageStatusCurrentPromotionStatusFreightImagesOutput
	ToStageStatusCurrentPromotionStatusFreightImagesOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightImagesOutput
}

// Image describes a specific version of a container image.
type StageStatusCurrentPromotionStatusFreightImagesArgs struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusCurrentPromotionStatusFreightImagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightImages)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightImagesArgs) ToStageStatusCurrentPromotionStatusFreightImagesOutput() StageStatusCurrentPromotionStatusFreightImagesOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightImagesOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightImagesArgs) ToStageStatusCurrentPromotionStatusFreightImagesOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightImagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightImagesOutput)
}

// StageStatusCurrentPromotionStatusFreightImagesArrayInput is an input type that accepts StageStatusCurrentPromotionStatusFreightImagesArray and StageStatusCurrentPromotionStatusFreightImagesArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightImagesArrayInput` via:
//
//	StageStatusCurrentPromotionStatusFreightImagesArray{ StageStatusCurrentPromotionStatusFreightImagesArgs{...} }
type StageStatusCurrentPromotionStatusFreightImagesArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightImagesArrayOutput() StageStatusCurrentPromotionStatusFreightImagesArrayOutput
	ToStageStatusCurrentPromotionStatusFreightImagesArrayOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightImagesArrayOutput
}

type StageStatusCurrentPromotionStatusFreightImagesArray []StageStatusCurrentPromotionStatusFreightImagesInput

func (StageStatusCurrentPromotionStatusFreightImagesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightImages)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightImagesArray) ToStageStatusCurrentPromotionStatusFreightImagesArrayOutput() StageStatusCurrentPromotionStatusFreightImagesArrayOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightImagesArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightImagesArray) ToStageStatusCurrentPromotionStatusFreightImagesArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightImagesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightImagesArrayOutput)
}

// Image describes a specific version of a container image.
type StageStatusCurrentPromotionStatusFreightImagesOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightImagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightImages)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightImagesOutput) ToStageStatusCurrentPromotionStatusFreightImagesOutput() StageStatusCurrentPromotionStatusFreightImagesOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightImagesOutput) ToStageStatusCurrentPromotionStatusFreightImagesOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightImagesOutput {
	return o
}

// Annotations is a map of arbitrary metadata for the image.
func (o StageStatusCurrentPromotionStatusFreightImagesOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightImages) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Digest identifies a specific version of the image in the repository
// specified by RepoURL. This is a more precise identifier than Tag.
func (o StageStatusCurrentPromotionStatusFreightImagesOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightImages) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// GitRepoURL specifies the URL of a Git repository that contains the source
// code for the image repository referenced by the RepoURL field if Kargo was
// able to infer it.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o StageStatusCurrentPromotionStatusFreightImagesOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightImages) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// RepoURL describes the repository in which the image can be found.
func (o StageStatusCurrentPromotionStatusFreightImagesOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightImages) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag identifies a specific version of the image in the repository specified
// by RepoURL.
func (o StageStatusCurrentPromotionStatusFreightImagesOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightImages) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusFreightImagesArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightImagesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightImages)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightImagesArrayOutput) ToStageStatusCurrentPromotionStatusFreightImagesArrayOutput() StageStatusCurrentPromotionStatusFreightImagesArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightImagesArrayOutput) ToStageStatusCurrentPromotionStatusFreightImagesArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightImagesArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightImagesArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionStatusFreightImagesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionStatusFreightImages {
		return vs[0].([]StageStatusCurrentPromotionStatusFreightImages)[vs[1].(int)]
	}).(StageStatusCurrentPromotionStatusFreightImagesOutput)
}

// Image describes a specific version of a container image.
type StageStatusCurrentPromotionStatusFreightImagesPatch struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations map[string]string `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest *string `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL *string `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag *string `pulumi:"tag"`
}

// StageStatusCurrentPromotionStatusFreightImagesPatchInput is an input type that accepts StageStatusCurrentPromotionStatusFreightImagesPatchArgs and StageStatusCurrentPromotionStatusFreightImagesPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightImagesPatchInput` via:
//
//	StageStatusCurrentPromotionStatusFreightImagesPatchArgs{...}
type StageStatusCurrentPromotionStatusFreightImagesPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightImagesPatchOutput() StageStatusCurrentPromotionStatusFreightImagesPatchOutput
	ToStageStatusCurrentPromotionStatusFreightImagesPatchOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightImagesPatchOutput
}

// Image describes a specific version of a container image.
type StageStatusCurrentPromotionStatusFreightImagesPatchArgs struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusCurrentPromotionStatusFreightImagesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightImagesPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightImagesPatchArgs) ToStageStatusCurrentPromotionStatusFreightImagesPatchOutput() StageStatusCurrentPromotionStatusFreightImagesPatchOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightImagesPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightImagesPatchArgs) ToStageStatusCurrentPromotionStatusFreightImagesPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightImagesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightImagesPatchOutput)
}

// StageStatusCurrentPromotionStatusFreightImagesPatchArrayInput is an input type that accepts StageStatusCurrentPromotionStatusFreightImagesPatchArray and StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightImagesPatchArrayInput` via:
//
//	StageStatusCurrentPromotionStatusFreightImagesPatchArray{ StageStatusCurrentPromotionStatusFreightImagesPatchArgs{...} }
type StageStatusCurrentPromotionStatusFreightImagesPatchArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput() StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput
	ToStageStatusCurrentPromotionStatusFreightImagesPatchArrayOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput
}

type StageStatusCurrentPromotionStatusFreightImagesPatchArray []StageStatusCurrentPromotionStatusFreightImagesPatchInput

func (StageStatusCurrentPromotionStatusFreightImagesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightImagesPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightImagesPatchArray) ToStageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput() StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightImagesPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightImagesPatchArray) ToStageStatusCurrentPromotionStatusFreightImagesPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput)
}

// Image describes a specific version of a container image.
type StageStatusCurrentPromotionStatusFreightImagesPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightImagesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightImagesPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightImagesPatchOutput) ToStageStatusCurrentPromotionStatusFreightImagesPatchOutput() StageStatusCurrentPromotionStatusFreightImagesPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightImagesPatchOutput) ToStageStatusCurrentPromotionStatusFreightImagesPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightImagesPatchOutput {
	return o
}

// Annotations is a map of arbitrary metadata for the image.
func (o StageStatusCurrentPromotionStatusFreightImagesPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightImagesPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Digest identifies a specific version of the image in the repository
// specified by RepoURL. This is a more precise identifier than Tag.
func (o StageStatusCurrentPromotionStatusFreightImagesPatchOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightImagesPatch) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// GitRepoURL specifies the URL of a Git repository that contains the source
// code for the image repository referenced by the RepoURL field if Kargo was
// able to infer it.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o StageStatusCurrentPromotionStatusFreightImagesPatchOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightImagesPatch) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// RepoURL describes the repository in which the image can be found.
func (o StageStatusCurrentPromotionStatusFreightImagesPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightImagesPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag identifies a specific version of the image in the repository specified
// by RepoURL.
func (o StageStatusCurrentPromotionStatusFreightImagesPatchOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightImagesPatch) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusFreightImagesPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput) ToStageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput() StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput) ToStageStatusCurrentPromotionStatusFreightImagesPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionStatusFreightImagesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionStatusFreightImagesPatch {
		return vs[0].([]StageStatusCurrentPromotionStatusFreightImagesPatch)[vs[1].(int)]
	}).(StageStatusCurrentPromotionStatusFreightImagesPatchOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusCurrentPromotionStatusFreightOrigin struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name *string `pulumi:"name"`
}

// StageStatusCurrentPromotionStatusFreightOriginInput is an input type that accepts StageStatusCurrentPromotionStatusFreightOriginArgs and StageStatusCurrentPromotionStatusFreightOriginOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightOriginInput` via:
//
//	StageStatusCurrentPromotionStatusFreightOriginArgs{...}
type StageStatusCurrentPromotionStatusFreightOriginInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightOriginOutput() StageStatusCurrentPromotionStatusFreightOriginOutput
	ToStageStatusCurrentPromotionStatusFreightOriginOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightOriginOutput
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusCurrentPromotionStatusFreightOriginArgs struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StageStatusCurrentPromotionStatusFreightOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightOrigin)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightOriginArgs) ToStageStatusCurrentPromotionStatusFreightOriginOutput() StageStatusCurrentPromotionStatusFreightOriginOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightOriginOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightOriginArgs) ToStageStatusCurrentPromotionStatusFreightOriginOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightOriginOutput)
}

func (i StageStatusCurrentPromotionStatusFreightOriginArgs) ToStageStatusCurrentPromotionStatusFreightOriginPtrOutput() StageStatusCurrentPromotionStatusFreightOriginPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightOriginPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightOriginArgs) ToStageStatusCurrentPromotionStatusFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightOriginOutput).ToStageStatusCurrentPromotionStatusFreightOriginPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionStatusFreightOriginPtrInput is an input type that accepts StageStatusCurrentPromotionStatusFreightOriginArgs, StageStatusCurrentPromotionStatusFreightOriginPtr and StageStatusCurrentPromotionStatusFreightOriginPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightOriginPtrInput` via:
//
//	        StageStatusCurrentPromotionStatusFreightOriginArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionStatusFreightOriginPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightOriginPtrOutput() StageStatusCurrentPromotionStatusFreightOriginPtrOutput
	ToStageStatusCurrentPromotionStatusFreightOriginPtrOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightOriginPtrOutput
}

type stageStatusCurrentPromotionStatusFreightOriginPtrType StageStatusCurrentPromotionStatusFreightOriginArgs

func StageStatusCurrentPromotionStatusFreightOriginPtr(v *StageStatusCurrentPromotionStatusFreightOriginArgs) StageStatusCurrentPromotionStatusFreightOriginPtrInput {
	return (*stageStatusCurrentPromotionStatusFreightOriginPtrType)(v)
}

func (*stageStatusCurrentPromotionStatusFreightOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreightOrigin)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionStatusFreightOriginPtrType) ToStageStatusCurrentPromotionStatusFreightOriginPtrOutput() StageStatusCurrentPromotionStatusFreightOriginPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightOriginPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionStatusFreightOriginPtrType) ToStageStatusCurrentPromotionStatusFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightOriginPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusCurrentPromotionStatusFreightOriginOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightOrigin)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightOriginOutput) ToStageStatusCurrentPromotionStatusFreightOriginOutput() StageStatusCurrentPromotionStatusFreightOriginOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightOriginOutput) ToStageStatusCurrentPromotionStatusFreightOriginOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightOriginOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightOriginOutput) ToStageStatusCurrentPromotionStatusFreightOriginPtrOutput() StageStatusCurrentPromotionStatusFreightOriginPtrOutput {
	return o.ToStageStatusCurrentPromotionStatusFreightOriginPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionStatusFreightOriginOutput) ToStageStatusCurrentPromotionStatusFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionStatusFreightOrigin) *StageStatusCurrentPromotionStatusFreightOrigin {
		return &v
	}).(StageStatusCurrentPromotionStatusFreightOriginPtrOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusCurrentPromotionStatusFreightOriginOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightOrigin) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusCurrentPromotionStatusFreightOriginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightOrigin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusFreightOriginPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreightOrigin)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightOriginPtrOutput) ToStageStatusCurrentPromotionStatusFreightOriginPtrOutput() StageStatusCurrentPromotionStatusFreightOriginPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightOriginPtrOutput) ToStageStatusCurrentPromotionStatusFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightOriginPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightOriginPtrOutput) Elem() StageStatusCurrentPromotionStatusFreightOriginOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightOrigin) StageStatusCurrentPromotionStatusFreightOrigin {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionStatusFreightOrigin
		return ret
	}).(StageStatusCurrentPromotionStatusFreightOriginOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusCurrentPromotionStatusFreightOriginPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusCurrentPromotionStatusFreightOriginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusCurrentPromotionStatusFreightOriginPatch struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name *string `pulumi:"name"`
}

// StageStatusCurrentPromotionStatusFreightOriginPatchInput is an input type that accepts StageStatusCurrentPromotionStatusFreightOriginPatchArgs and StageStatusCurrentPromotionStatusFreightOriginPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightOriginPatchInput` via:
//
//	StageStatusCurrentPromotionStatusFreightOriginPatchArgs{...}
type StageStatusCurrentPromotionStatusFreightOriginPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightOriginPatchOutput() StageStatusCurrentPromotionStatusFreightOriginPatchOutput
	ToStageStatusCurrentPromotionStatusFreightOriginPatchOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightOriginPatchOutput
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusCurrentPromotionStatusFreightOriginPatchArgs struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StageStatusCurrentPromotionStatusFreightOriginPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightOriginPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightOriginPatchArgs) ToStageStatusCurrentPromotionStatusFreightOriginPatchOutput() StageStatusCurrentPromotionStatusFreightOriginPatchOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightOriginPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightOriginPatchArgs) ToStageStatusCurrentPromotionStatusFreightOriginPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightOriginPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightOriginPatchOutput)
}

func (i StageStatusCurrentPromotionStatusFreightOriginPatchArgs) ToStageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput() StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightOriginPatchArgs) ToStageStatusCurrentPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightOriginPatchOutput).ToStageStatusCurrentPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionStatusFreightOriginPatchPtrInput is an input type that accepts StageStatusCurrentPromotionStatusFreightOriginPatchArgs, StageStatusCurrentPromotionStatusFreightOriginPatchPtr and StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightOriginPatchPtrInput` via:
//
//	        StageStatusCurrentPromotionStatusFreightOriginPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionStatusFreightOriginPatchPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput() StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput
	ToStageStatusCurrentPromotionStatusFreightOriginPatchPtrOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput
}

type stageStatusCurrentPromotionStatusFreightOriginPatchPtrType StageStatusCurrentPromotionStatusFreightOriginPatchArgs

func StageStatusCurrentPromotionStatusFreightOriginPatchPtr(v *StageStatusCurrentPromotionStatusFreightOriginPatchArgs) StageStatusCurrentPromotionStatusFreightOriginPatchPtrInput {
	return (*stageStatusCurrentPromotionStatusFreightOriginPatchPtrType)(v)
}

func (*stageStatusCurrentPromotionStatusFreightOriginPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreightOriginPatch)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionStatusFreightOriginPatchPtrType) ToStageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput() StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionStatusFreightOriginPatchPtrType) ToStageStatusCurrentPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusCurrentPromotionStatusFreightOriginPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightOriginPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightOriginPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightOriginPatchOutput) ToStageStatusCurrentPromotionStatusFreightOriginPatchOutput() StageStatusCurrentPromotionStatusFreightOriginPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightOriginPatchOutput) ToStageStatusCurrentPromotionStatusFreightOriginPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightOriginPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightOriginPatchOutput) ToStageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput() StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput {
	return o.ToStageStatusCurrentPromotionStatusFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionStatusFreightOriginPatchOutput) ToStageStatusCurrentPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionStatusFreightOriginPatch) *StageStatusCurrentPromotionStatusFreightOriginPatch {
		return &v
	}).(StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusCurrentPromotionStatusFreightOriginPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightOriginPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusCurrentPromotionStatusFreightOriginPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightOriginPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreightOriginPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput) ToStageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput() StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput) ToStageStatusCurrentPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput) Elem() StageStatusCurrentPromotionStatusFreightOriginPatchOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightOriginPatch) StageStatusCurrentPromotionStatusFreightOriginPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionStatusFreightOriginPatch
		return ret
	}).(StageStatusCurrentPromotionStatusFreightOriginPatchOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightOriginPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightOriginPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type StageStatusCurrentPromotionStatusFreightPatch struct {
	// Charts describes specific versions of specific Helm charts.
	Charts []StageStatusCurrentPromotionStatusFreightChartsPatch `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits []StageStatusCurrentPromotionStatusFreightCommitsPatch `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images []StageStatusCurrentPromotionStatusFreightImagesPatch `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   *string                                              `pulumi:"name"`
	Origin *StageStatusCurrentPromotionStatusFreightOriginPatch `pulumi:"origin"`
}

// StageStatusCurrentPromotionStatusFreightPatchInput is an input type that accepts StageStatusCurrentPromotionStatusFreightPatchArgs and StageStatusCurrentPromotionStatusFreightPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightPatchInput` via:
//
//	StageStatusCurrentPromotionStatusFreightPatchArgs{...}
type StageStatusCurrentPromotionStatusFreightPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightPatchOutput() StageStatusCurrentPromotionStatusFreightPatchOutput
	ToStageStatusCurrentPromotionStatusFreightPatchOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightPatchOutput
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type StageStatusCurrentPromotionStatusFreightPatchArgs struct {
	// Charts describes specific versions of specific Helm charts.
	Charts StageStatusCurrentPromotionStatusFreightChartsPatchArrayInput `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits StageStatusCurrentPromotionStatusFreightCommitsPatchArrayInput `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images StageStatusCurrentPromotionStatusFreightImagesPatchArrayInput `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   pulumi.StringPtrInput                                       `pulumi:"name"`
	Origin StageStatusCurrentPromotionStatusFreightOriginPatchPtrInput `pulumi:"origin"`
}

func (StageStatusCurrentPromotionStatusFreightPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusFreightPatchArgs) ToStageStatusCurrentPromotionStatusFreightPatchOutput() StageStatusCurrentPromotionStatusFreightPatchOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightPatchArgs) ToStageStatusCurrentPromotionStatusFreightPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightPatchOutput)
}

func (i StageStatusCurrentPromotionStatusFreightPatchArgs) ToStageStatusCurrentPromotionStatusFreightPatchPtrOutput() StageStatusCurrentPromotionStatusFreightPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusFreightPatchArgs) ToStageStatusCurrentPromotionStatusFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightPatchOutput).ToStageStatusCurrentPromotionStatusFreightPatchPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionStatusFreightPatchPtrInput is an input type that accepts StageStatusCurrentPromotionStatusFreightPatchArgs, StageStatusCurrentPromotionStatusFreightPatchPtr and StageStatusCurrentPromotionStatusFreightPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusFreightPatchPtrInput` via:
//
//	        StageStatusCurrentPromotionStatusFreightPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionStatusFreightPatchPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusFreightPatchPtrOutput() StageStatusCurrentPromotionStatusFreightPatchPtrOutput
	ToStageStatusCurrentPromotionStatusFreightPatchPtrOutputWithContext(context.Context) StageStatusCurrentPromotionStatusFreightPatchPtrOutput
}

type stageStatusCurrentPromotionStatusFreightPatchPtrType StageStatusCurrentPromotionStatusFreightPatchArgs

func StageStatusCurrentPromotionStatusFreightPatchPtr(v *StageStatusCurrentPromotionStatusFreightPatchArgs) StageStatusCurrentPromotionStatusFreightPatchPtrInput {
	return (*stageStatusCurrentPromotionStatusFreightPatchPtrType)(v)
}

func (*stageStatusCurrentPromotionStatusFreightPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreightPatch)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionStatusFreightPatchPtrType) ToStageStatusCurrentPromotionStatusFreightPatchPtrOutput() StageStatusCurrentPromotionStatusFreightPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusFreightPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionStatusFreightPatchPtrType) ToStageStatusCurrentPromotionStatusFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusFreightPatchPtrOutput)
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type StageStatusCurrentPromotionStatusFreightPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightPatchOutput) ToStageStatusCurrentPromotionStatusFreightPatchOutput() StageStatusCurrentPromotionStatusFreightPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightPatchOutput) ToStageStatusCurrentPromotionStatusFreightPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightPatchOutput) ToStageStatusCurrentPromotionStatusFreightPatchPtrOutput() StageStatusCurrentPromotionStatusFreightPatchPtrOutput {
	return o.ToStageStatusCurrentPromotionStatusFreightPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionStatusFreightPatchOutput) ToStageStatusCurrentPromotionStatusFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionStatusFreightPatch) *StageStatusCurrentPromotionStatusFreightPatch {
		return &v
	}).(StageStatusCurrentPromotionStatusFreightPatchPtrOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusCurrentPromotionStatusFreightPatchOutput) Charts() StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightPatch) []StageStatusCurrentPromotionStatusFreightChartsPatch {
		return v.Charts
	}).(StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusCurrentPromotionStatusFreightPatchOutput) Commits() StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightPatch) []StageStatusCurrentPromotionStatusFreightCommitsPatch {
		return v.Commits
	}).(StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusCurrentPromotionStatusFreightPatchOutput) Images() StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightPatch) []StageStatusCurrentPromotionStatusFreightImagesPatch {
		return v.Images
	}).(StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusCurrentPromotionStatusFreightPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionStatusFreightPatchOutput) Origin() StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusFreightPatch) *StageStatusCurrentPromotionStatusFreightOriginPatch {
		return v.Origin
	}).(StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput)
}

type StageStatusCurrentPromotionStatusFreightPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusFreightPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusFreightPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusFreightPatchPtrOutput) ToStageStatusCurrentPromotionStatusFreightPatchPtrOutput() StageStatusCurrentPromotionStatusFreightPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightPatchPtrOutput) ToStageStatusCurrentPromotionStatusFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusFreightPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusFreightPatchPtrOutput) Elem() StageStatusCurrentPromotionStatusFreightPatchOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightPatch) StageStatusCurrentPromotionStatusFreightPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionStatusFreightPatch
		return ret
	}).(StageStatusCurrentPromotionStatusFreightPatchOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusCurrentPromotionStatusFreightPatchPtrOutput) Charts() StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightPatch) []StageStatusCurrentPromotionStatusFreightChartsPatch {
		if v == nil {
			return nil
		}
		return v.Charts
	}).(StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusCurrentPromotionStatusFreightPatchPtrOutput) Commits() StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightPatch) []StageStatusCurrentPromotionStatusFreightCommitsPatch {
		if v == nil {
			return nil
		}
		return v.Commits
	}).(StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusCurrentPromotionStatusFreightPatchPtrOutput) Images() StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightPatch) []StageStatusCurrentPromotionStatusFreightImagesPatch {
		if v == nil {
			return nil
		}
		return v.Images
	}).(StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusCurrentPromotionStatusFreightPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionStatusFreightPatchPtrOutput) Origin() StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusFreightPatch) *StageStatusCurrentPromotionStatusFreightOriginPatch {
		if v == nil {
			return nil
		}
		return v.Origin
	}).(StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput)
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type StageStatusCurrentPromotionStatusHealthChecks struct {
	// Config is the configuration for the directive.
	Config map[string]interface{} `pulumi:"config"`
	// Uses identifies a runner that can execute this step.
	Uses *string `pulumi:"uses"`
}

// StageStatusCurrentPromotionStatusHealthChecksInput is an input type that accepts StageStatusCurrentPromotionStatusHealthChecksArgs and StageStatusCurrentPromotionStatusHealthChecksOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusHealthChecksInput` via:
//
//	StageStatusCurrentPromotionStatusHealthChecksArgs{...}
type StageStatusCurrentPromotionStatusHealthChecksInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusHealthChecksOutput() StageStatusCurrentPromotionStatusHealthChecksOutput
	ToStageStatusCurrentPromotionStatusHealthChecksOutputWithContext(context.Context) StageStatusCurrentPromotionStatusHealthChecksOutput
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type StageStatusCurrentPromotionStatusHealthChecksArgs struct {
	// Config is the configuration for the directive.
	Config pulumi.MapInput `pulumi:"config"`
	// Uses identifies a runner that can execute this step.
	Uses pulumi.StringPtrInput `pulumi:"uses"`
}

func (StageStatusCurrentPromotionStatusHealthChecksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusHealthChecks)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusHealthChecksArgs) ToStageStatusCurrentPromotionStatusHealthChecksOutput() StageStatusCurrentPromotionStatusHealthChecksOutput {
	return i.ToStageStatusCurrentPromotionStatusHealthChecksOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusHealthChecksArgs) ToStageStatusCurrentPromotionStatusHealthChecksOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusHealthChecksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusHealthChecksOutput)
}

// StageStatusCurrentPromotionStatusHealthChecksArrayInput is an input type that accepts StageStatusCurrentPromotionStatusHealthChecksArray and StageStatusCurrentPromotionStatusHealthChecksArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusHealthChecksArrayInput` via:
//
//	StageStatusCurrentPromotionStatusHealthChecksArray{ StageStatusCurrentPromotionStatusHealthChecksArgs{...} }
type StageStatusCurrentPromotionStatusHealthChecksArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusHealthChecksArrayOutput() StageStatusCurrentPromotionStatusHealthChecksArrayOutput
	ToStageStatusCurrentPromotionStatusHealthChecksArrayOutputWithContext(context.Context) StageStatusCurrentPromotionStatusHealthChecksArrayOutput
}

type StageStatusCurrentPromotionStatusHealthChecksArray []StageStatusCurrentPromotionStatusHealthChecksInput

func (StageStatusCurrentPromotionStatusHealthChecksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusHealthChecks)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusHealthChecksArray) ToStageStatusCurrentPromotionStatusHealthChecksArrayOutput() StageStatusCurrentPromotionStatusHealthChecksArrayOutput {
	return i.ToStageStatusCurrentPromotionStatusHealthChecksArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusHealthChecksArray) ToStageStatusCurrentPromotionStatusHealthChecksArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusHealthChecksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusHealthChecksArrayOutput)
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type StageStatusCurrentPromotionStatusHealthChecksOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusHealthChecksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusHealthChecks)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusHealthChecksOutput) ToStageStatusCurrentPromotionStatusHealthChecksOutput() StageStatusCurrentPromotionStatusHealthChecksOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusHealthChecksOutput) ToStageStatusCurrentPromotionStatusHealthChecksOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusHealthChecksOutput {
	return o
}

// Config is the configuration for the directive.
func (o StageStatusCurrentPromotionStatusHealthChecksOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusHealthChecks) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// Uses identifies a runner that can execute this step.
func (o StageStatusCurrentPromotionStatusHealthChecksOutput) Uses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusHealthChecks) *string { return v.Uses }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusHealthChecksArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusHealthChecksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusHealthChecks)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusHealthChecksArrayOutput) ToStageStatusCurrentPromotionStatusHealthChecksArrayOutput() StageStatusCurrentPromotionStatusHealthChecksArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusHealthChecksArrayOutput) ToStageStatusCurrentPromotionStatusHealthChecksArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusHealthChecksArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusHealthChecksArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionStatusHealthChecksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionStatusHealthChecks {
		return vs[0].([]StageStatusCurrentPromotionStatusHealthChecks)[vs[1].(int)]
	}).(StageStatusCurrentPromotionStatusHealthChecksOutput)
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type StageStatusCurrentPromotionStatusHealthChecksPatch struct {
	// Config is the configuration for the directive.
	Config map[string]interface{} `pulumi:"config"`
	// Uses identifies a runner that can execute this step.
	Uses *string `pulumi:"uses"`
}

// StageStatusCurrentPromotionStatusHealthChecksPatchInput is an input type that accepts StageStatusCurrentPromotionStatusHealthChecksPatchArgs and StageStatusCurrentPromotionStatusHealthChecksPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusHealthChecksPatchInput` via:
//
//	StageStatusCurrentPromotionStatusHealthChecksPatchArgs{...}
type StageStatusCurrentPromotionStatusHealthChecksPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusHealthChecksPatchOutput() StageStatusCurrentPromotionStatusHealthChecksPatchOutput
	ToStageStatusCurrentPromotionStatusHealthChecksPatchOutputWithContext(context.Context) StageStatusCurrentPromotionStatusHealthChecksPatchOutput
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type StageStatusCurrentPromotionStatusHealthChecksPatchArgs struct {
	// Config is the configuration for the directive.
	Config pulumi.MapInput `pulumi:"config"`
	// Uses identifies a runner that can execute this step.
	Uses pulumi.StringPtrInput `pulumi:"uses"`
}

func (StageStatusCurrentPromotionStatusHealthChecksPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusHealthChecksPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusHealthChecksPatchArgs) ToStageStatusCurrentPromotionStatusHealthChecksPatchOutput() StageStatusCurrentPromotionStatusHealthChecksPatchOutput {
	return i.ToStageStatusCurrentPromotionStatusHealthChecksPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusHealthChecksPatchArgs) ToStageStatusCurrentPromotionStatusHealthChecksPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusHealthChecksPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusHealthChecksPatchOutput)
}

// StageStatusCurrentPromotionStatusHealthChecksPatchArrayInput is an input type that accepts StageStatusCurrentPromotionStatusHealthChecksPatchArray and StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusHealthChecksPatchArrayInput` via:
//
//	StageStatusCurrentPromotionStatusHealthChecksPatchArray{ StageStatusCurrentPromotionStatusHealthChecksPatchArgs{...} }
type StageStatusCurrentPromotionStatusHealthChecksPatchArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput() StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput
	ToStageStatusCurrentPromotionStatusHealthChecksPatchArrayOutputWithContext(context.Context) StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput
}

type StageStatusCurrentPromotionStatusHealthChecksPatchArray []StageStatusCurrentPromotionStatusHealthChecksPatchInput

func (StageStatusCurrentPromotionStatusHealthChecksPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusHealthChecksPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusHealthChecksPatchArray) ToStageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput() StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput {
	return i.ToStageStatusCurrentPromotionStatusHealthChecksPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusHealthChecksPatchArray) ToStageStatusCurrentPromotionStatusHealthChecksPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput)
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type StageStatusCurrentPromotionStatusHealthChecksPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusHealthChecksPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusHealthChecksPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusHealthChecksPatchOutput) ToStageStatusCurrentPromotionStatusHealthChecksPatchOutput() StageStatusCurrentPromotionStatusHealthChecksPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusHealthChecksPatchOutput) ToStageStatusCurrentPromotionStatusHealthChecksPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusHealthChecksPatchOutput {
	return o
}

// Config is the configuration for the directive.
func (o StageStatusCurrentPromotionStatusHealthChecksPatchOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusHealthChecksPatch) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// Uses identifies a runner that can execute this step.
func (o StageStatusCurrentPromotionStatusHealthChecksPatchOutput) Uses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusHealthChecksPatch) *string { return v.Uses }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusHealthChecksPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput) ToStageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput() StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput) ToStageStatusCurrentPromotionStatusHealthChecksPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionStatusHealthChecksPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionStatusHealthChecksPatch {
		return vs[0].([]StageStatusCurrentPromotionStatusHealthChecksPatch)[vs[1].(int)]
	}).(StageStatusCurrentPromotionStatusHealthChecksPatchOutput)
}

// Status is the (optional) status of the Promotion.
type StageStatusCurrentPromotionStatusPatch struct {
	// CurrentStep is the index of the current promotion step being executed. This
	// permits steps that have already run successfully to be skipped on
	// subsequent reconciliations attempts.
	CurrentStep *int `pulumi:"currentStep"`
	// FinishedAt is the time when the promotion was completed.
	FinishedAt        *string                                                  `pulumi:"finishedAt"`
	Freight           *StageStatusCurrentPromotionStatusFreightPatch           `pulumi:"freight"`
	FreightCollection *StageStatusCurrentPromotionStatusFreightCollectionPatch `pulumi:"freightCollection"`
	// HealthChecks contains the health check directives to be executed after
	// the Promotion has completed.
	HealthChecks []StageStatusCurrentPromotionStatusHealthChecksPatch `pulumi:"healthChecks"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh *string `pulumi:"lastHandledRefresh"`
	// Message is a display message about the promotion, including any errors
	// preventing the Promotion controller from executing this Promotion.
	// i.e. If the Phase field has a value of Failed, this field can be expected
	// to explain why.
	Message *string `pulumi:"message"`
	// Phase describes where the Promotion currently is in its lifecycle.
	Phase *string `pulumi:"phase"`
	// State stores the state of the promotion process between reconciliation
	// attempts.
	State map[string]interface{} `pulumi:"state"`
	// StepExecutionMetadata tracks metadata pertaining to the execution
	// of individual promotion steps.
	StepExecutionMetadata []StageStatusCurrentPromotionStatusStepExecutionMetadataPatch `pulumi:"stepExecutionMetadata"`
}

// StageStatusCurrentPromotionStatusPatchInput is an input type that accepts StageStatusCurrentPromotionStatusPatchArgs and StageStatusCurrentPromotionStatusPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusPatchInput` via:
//
//	StageStatusCurrentPromotionStatusPatchArgs{...}
type StageStatusCurrentPromotionStatusPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusPatchOutput() StageStatusCurrentPromotionStatusPatchOutput
	ToStageStatusCurrentPromotionStatusPatchOutputWithContext(context.Context) StageStatusCurrentPromotionStatusPatchOutput
}

// Status is the (optional) status of the Promotion.
type StageStatusCurrentPromotionStatusPatchArgs struct {
	// CurrentStep is the index of the current promotion step being executed. This
	// permits steps that have already run successfully to be skipped on
	// subsequent reconciliations attempts.
	CurrentStep pulumi.IntPtrInput `pulumi:"currentStep"`
	// FinishedAt is the time when the promotion was completed.
	FinishedAt        pulumi.StringPtrInput                                           `pulumi:"finishedAt"`
	Freight           StageStatusCurrentPromotionStatusFreightPatchPtrInput           `pulumi:"freight"`
	FreightCollection StageStatusCurrentPromotionStatusFreightCollectionPatchPtrInput `pulumi:"freightCollection"`
	// HealthChecks contains the health check directives to be executed after
	// the Promotion has completed.
	HealthChecks StageStatusCurrentPromotionStatusHealthChecksPatchArrayInput `pulumi:"healthChecks"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh pulumi.StringPtrInput `pulumi:"lastHandledRefresh"`
	// Message is a display message about the promotion, including any errors
	// preventing the Promotion controller from executing this Promotion.
	// i.e. If the Phase field has a value of Failed, this field can be expected
	// to explain why.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Phase describes where the Promotion currently is in its lifecycle.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// State stores the state of the promotion process between reconciliation
	// attempts.
	State pulumi.MapInput `pulumi:"state"`
	// StepExecutionMetadata tracks metadata pertaining to the execution
	// of individual promotion steps.
	StepExecutionMetadata StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayInput `pulumi:"stepExecutionMetadata"`
}

func (StageStatusCurrentPromotionStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusPatchArgs) ToStageStatusCurrentPromotionStatusPatchOutput() StageStatusCurrentPromotionStatusPatchOutput {
	return i.ToStageStatusCurrentPromotionStatusPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusPatchArgs) ToStageStatusCurrentPromotionStatusPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusPatchOutput)
}

func (i StageStatusCurrentPromotionStatusPatchArgs) ToStageStatusCurrentPromotionStatusPatchPtrOutput() StageStatusCurrentPromotionStatusPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusPatchArgs) ToStageStatusCurrentPromotionStatusPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusPatchOutput).ToStageStatusCurrentPromotionStatusPatchPtrOutputWithContext(ctx)
}

// StageStatusCurrentPromotionStatusPatchPtrInput is an input type that accepts StageStatusCurrentPromotionStatusPatchArgs, StageStatusCurrentPromotionStatusPatchPtr and StageStatusCurrentPromotionStatusPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusPatchPtrInput` via:
//
//	        StageStatusCurrentPromotionStatusPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusCurrentPromotionStatusPatchPtrInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusPatchPtrOutput() StageStatusCurrentPromotionStatusPatchPtrOutput
	ToStageStatusCurrentPromotionStatusPatchPtrOutputWithContext(context.Context) StageStatusCurrentPromotionStatusPatchPtrOutput
}

type stageStatusCurrentPromotionStatusPatchPtrType StageStatusCurrentPromotionStatusPatchArgs

func StageStatusCurrentPromotionStatusPatchPtr(v *StageStatusCurrentPromotionStatusPatchArgs) StageStatusCurrentPromotionStatusPatchPtrInput {
	return (*stageStatusCurrentPromotionStatusPatchPtrType)(v)
}

func (*stageStatusCurrentPromotionStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusPatch)(nil)).Elem()
}

func (i *stageStatusCurrentPromotionStatusPatchPtrType) ToStageStatusCurrentPromotionStatusPatchPtrOutput() StageStatusCurrentPromotionStatusPatchPtrOutput {
	return i.ToStageStatusCurrentPromotionStatusPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusCurrentPromotionStatusPatchPtrType) ToStageStatusCurrentPromotionStatusPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusPatchPtrOutput)
}

// Status is the (optional) status of the Promotion.
type StageStatusCurrentPromotionStatusPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusPatchOutput) ToStageStatusCurrentPromotionStatusPatchOutput() StageStatusCurrentPromotionStatusPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusPatchOutput) ToStageStatusCurrentPromotionStatusPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusPatchOutput) ToStageStatusCurrentPromotionStatusPatchPtrOutput() StageStatusCurrentPromotionStatusPatchPtrOutput {
	return o.ToStageStatusCurrentPromotionStatusPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusCurrentPromotionStatusPatchOutput) ToStageStatusCurrentPromotionStatusPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusCurrentPromotionStatusPatch) *StageStatusCurrentPromotionStatusPatch {
		return &v
	}).(StageStatusCurrentPromotionStatusPatchPtrOutput)
}

// CurrentStep is the index of the current promotion step being executed. This
// permits steps that have already run successfully to be skipped on
// subsequent reconciliations attempts.
func (o StageStatusCurrentPromotionStatusPatchOutput) CurrentStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusPatch) *int { return v.CurrentStep }).(pulumi.IntPtrOutput)
}

// FinishedAt is the time when the promotion was completed.
func (o StageStatusCurrentPromotionStatusPatchOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusPatch) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionStatusPatchOutput) Freight() StageStatusCurrentPromotionStatusFreightPatchPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusPatch) *StageStatusCurrentPromotionStatusFreightPatch {
		return v.Freight
	}).(StageStatusCurrentPromotionStatusFreightPatchPtrOutput)
}

func (o StageStatusCurrentPromotionStatusPatchOutput) FreightCollection() StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusPatch) *StageStatusCurrentPromotionStatusFreightCollectionPatch {
		return v.FreightCollection
	}).(StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput)
}

// HealthChecks contains the health check directives to be executed after
// the Promotion has completed.
func (o StageStatusCurrentPromotionStatusPatchOutput) HealthChecks() StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusPatch) []StageStatusCurrentPromotionStatusHealthChecksPatch {
		return v.HealthChecks
	}).(StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o StageStatusCurrentPromotionStatusPatchOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusPatch) *string { return v.LastHandledRefresh }).(pulumi.StringPtrOutput)
}

// Message is a display message about the promotion, including any errors
// preventing the Promotion controller from executing this Promotion.
// i.e. If the Phase field has a value of Failed, this field can be expected
// to explain why.
func (o StageStatusCurrentPromotionStatusPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Phase describes where the Promotion currently is in its lifecycle.
func (o StageStatusCurrentPromotionStatusPatchOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusPatch) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// State stores the state of the promotion process between reconciliation
// attempts.
func (o StageStatusCurrentPromotionStatusPatchOutput) State() pulumi.MapOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusPatch) map[string]interface{} { return v.State }).(pulumi.MapOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution
// of individual promotion steps.
func (o StageStatusCurrentPromotionStatusPatchOutput) StepExecutionMetadata() StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusPatch) []StageStatusCurrentPromotionStatusStepExecutionMetadataPatch {
		return v.StepExecutionMetadata
	}).(StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput)
}

type StageStatusCurrentPromotionStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusCurrentPromotionStatusPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusPatchPtrOutput) ToStageStatusCurrentPromotionStatusPatchPtrOutput() StageStatusCurrentPromotionStatusPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusPatchPtrOutput) ToStageStatusCurrentPromotionStatusPatchPtrOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusPatchPtrOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusPatchPtrOutput) Elem() StageStatusCurrentPromotionStatusPatchOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusPatch) StageStatusCurrentPromotionStatusPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusCurrentPromotionStatusPatch
		return ret
	}).(StageStatusCurrentPromotionStatusPatchOutput)
}

// CurrentStep is the index of the current promotion step being executed. This
// permits steps that have already run successfully to be skipped on
// subsequent reconciliations attempts.
func (o StageStatusCurrentPromotionStatusPatchPtrOutput) CurrentStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.CurrentStep
	}).(pulumi.IntPtrOutput)
}

// FinishedAt is the time when the promotion was completed.
func (o StageStatusCurrentPromotionStatusPatchPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusCurrentPromotionStatusPatchPtrOutput) Freight() StageStatusCurrentPromotionStatusFreightPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusPatch) *StageStatusCurrentPromotionStatusFreightPatch {
		if v == nil {
			return nil
		}
		return v.Freight
	}).(StageStatusCurrentPromotionStatusFreightPatchPtrOutput)
}

func (o StageStatusCurrentPromotionStatusPatchPtrOutput) FreightCollection() StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusPatch) *StageStatusCurrentPromotionStatusFreightCollectionPatch {
		if v == nil {
			return nil
		}
		return v.FreightCollection
	}).(StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput)
}

// HealthChecks contains the health check directives to be executed after
// the Promotion has completed.
func (o StageStatusCurrentPromotionStatusPatchPtrOutput) HealthChecks() StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusPatch) []StageStatusCurrentPromotionStatusHealthChecksPatch {
		if v == nil {
			return nil
		}
		return v.HealthChecks
	}).(StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o StageStatusCurrentPromotionStatusPatchPtrOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.LastHandledRefresh
	}).(pulumi.StringPtrOutput)
}

// Message is a display message about the promotion, including any errors
// preventing the Promotion controller from executing this Promotion.
// i.e. If the Phase field has a value of Failed, this field can be expected
// to explain why.
func (o StageStatusCurrentPromotionStatusPatchPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Phase describes where the Promotion currently is in its lifecycle.
func (o StageStatusCurrentPromotionStatusPatchPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// State stores the state of the promotion process between reconciliation
// attempts.
func (o StageStatusCurrentPromotionStatusPatchPtrOutput) State() pulumi.MapOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.MapOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution
// of individual promotion steps.
func (o StageStatusCurrentPromotionStatusPatchPtrOutput) StepExecutionMetadata() StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusCurrentPromotionStatusPatch) []StageStatusCurrentPromotionStatusStepExecutionMetadataPatch {
		if v == nil {
			return nil
		}
		return v.StepExecutionMetadata
	}).(StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type StageStatusCurrentPromotionStatusStepExecutionMetadata struct {
	// Alias is the alias of the step.
	Alias *string `pulumi:"alias"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// ErrorCount tracks consecutive failed attempts to execute the step.
	ErrorCount *int `pulumi:"errorCount"`
	// FinishedAt is the time at which the final attempt to execute the step
	// completed.
	FinishedAt *string `pulumi:"finishedAt"`
	// Message is a display message about the step, including any errors.
	Message *string `pulumi:"message"`
	// StartedAt is the time at which the first attempt to execute the step
	// began.
	StartedAt *string `pulumi:"startedAt"`
	// Status is the high-level outcome of the step.
	Status *string `pulumi:"status"`
}

// StageStatusCurrentPromotionStatusStepExecutionMetadataInput is an input type that accepts StageStatusCurrentPromotionStatusStepExecutionMetadataArgs and StageStatusCurrentPromotionStatusStepExecutionMetadataOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusStepExecutionMetadataInput` via:
//
//	StageStatusCurrentPromotionStatusStepExecutionMetadataArgs{...}
type StageStatusCurrentPromotionStatusStepExecutionMetadataInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusStepExecutionMetadataOutput() StageStatusCurrentPromotionStatusStepExecutionMetadataOutput
	ToStageStatusCurrentPromotionStatusStepExecutionMetadataOutputWithContext(context.Context) StageStatusCurrentPromotionStatusStepExecutionMetadataOutput
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type StageStatusCurrentPromotionStatusStepExecutionMetadataArgs struct {
	// Alias is the alias of the step.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError pulumi.BoolPtrInput `pulumi:"continueOnError"`
	// ErrorCount tracks consecutive failed attempts to execute the step.
	ErrorCount pulumi.IntPtrInput `pulumi:"errorCount"`
	// FinishedAt is the time at which the final attempt to execute the step
	// completed.
	FinishedAt pulumi.StringPtrInput `pulumi:"finishedAt"`
	// Message is a display message about the step, including any errors.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// StartedAt is the time at which the first attempt to execute the step
	// began.
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
	// Status is the high-level outcome of the step.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (StageStatusCurrentPromotionStatusStepExecutionMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusStepExecutionMetadata)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusStepExecutionMetadataArgs) ToStageStatusCurrentPromotionStatusStepExecutionMetadataOutput() StageStatusCurrentPromotionStatusStepExecutionMetadataOutput {
	return i.ToStageStatusCurrentPromotionStatusStepExecutionMetadataOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusStepExecutionMetadataArgs) ToStageStatusCurrentPromotionStatusStepExecutionMetadataOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusStepExecutionMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusStepExecutionMetadataOutput)
}

// StageStatusCurrentPromotionStatusStepExecutionMetadataArrayInput is an input type that accepts StageStatusCurrentPromotionStatusStepExecutionMetadataArray and StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusStepExecutionMetadataArrayInput` via:
//
//	StageStatusCurrentPromotionStatusStepExecutionMetadataArray{ StageStatusCurrentPromotionStatusStepExecutionMetadataArgs{...} }
type StageStatusCurrentPromotionStatusStepExecutionMetadataArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput() StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput
	ToStageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutputWithContext(context.Context) StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput
}

type StageStatusCurrentPromotionStatusStepExecutionMetadataArray []StageStatusCurrentPromotionStatusStepExecutionMetadataInput

func (StageStatusCurrentPromotionStatusStepExecutionMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusStepExecutionMetadata)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusStepExecutionMetadataArray) ToStageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput() StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput {
	return i.ToStageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusStepExecutionMetadataArray) ToStageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type StageStatusCurrentPromotionStatusStepExecutionMetadataOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusStepExecutionMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusStepExecutionMetadata)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusStepExecutionMetadataOutput) ToStageStatusCurrentPromotionStatusStepExecutionMetadataOutput() StageStatusCurrentPromotionStatusStepExecutionMetadataOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusStepExecutionMetadataOutput) ToStageStatusCurrentPromotionStatusStepExecutionMetadataOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusStepExecutionMetadataOutput {
	return o
}

// Alias is the alias of the step.
func (o StageStatusCurrentPromotionStatusStepExecutionMetadataOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusStepExecutionMetadata) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// ContinueOnError is a boolean value that, if set to true, will cause the
// Promotion to continue executing the next step even if this step fails. It
// also will not permit this failure to impact the overall status of the
// Promotion.
func (o StageStatusCurrentPromotionStatusStepExecutionMetadataOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusStepExecutionMetadata) *bool { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// ErrorCount tracks consecutive failed attempts to execute the step.
func (o StageStatusCurrentPromotionStatusStepExecutionMetadataOutput) ErrorCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusStepExecutionMetadata) *int { return v.ErrorCount }).(pulumi.IntPtrOutput)
}

// FinishedAt is the time at which the final attempt to execute the step
// completed.
func (o StageStatusCurrentPromotionStatusStepExecutionMetadataOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusStepExecutionMetadata) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

// Message is a display message about the step, including any errors.
func (o StageStatusCurrentPromotionStatusStepExecutionMetadataOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusStepExecutionMetadata) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// StartedAt is the time at which the first attempt to execute the step
// began.
func (o StageStatusCurrentPromotionStatusStepExecutionMetadataOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusStepExecutionMetadata) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

// Status is the high-level outcome of the step.
func (o StageStatusCurrentPromotionStatusStepExecutionMetadataOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusStepExecutionMetadata) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusStepExecutionMetadata)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput) ToStageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput() StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput) ToStageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionStatusStepExecutionMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionStatusStepExecutionMetadata {
		return vs[0].([]StageStatusCurrentPromotionStatusStepExecutionMetadata)[vs[1].(int)]
	}).(StageStatusCurrentPromotionStatusStepExecutionMetadataOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type StageStatusCurrentPromotionStatusStepExecutionMetadataPatch struct {
	// Alias is the alias of the step.
	Alias *string `pulumi:"alias"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// ErrorCount tracks consecutive failed attempts to execute the step.
	ErrorCount *int `pulumi:"errorCount"`
	// FinishedAt is the time at which the final attempt to execute the step
	// completed.
	FinishedAt *string `pulumi:"finishedAt"`
	// Message is a display message about the step, including any errors.
	Message *string `pulumi:"message"`
	// StartedAt is the time at which the first attempt to execute the step
	// began.
	StartedAt *string `pulumi:"startedAt"`
	// Status is the high-level outcome of the step.
	Status *string `pulumi:"status"`
}

// StageStatusCurrentPromotionStatusStepExecutionMetadataPatchInput is an input type that accepts StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArgs and StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusStepExecutionMetadataPatchInput` via:
//
//	StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArgs{...}
type StageStatusCurrentPromotionStatusStepExecutionMetadataPatchInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput() StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput
	ToStageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutputWithContext(context.Context) StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArgs struct {
	// Alias is the alias of the step.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError pulumi.BoolPtrInput `pulumi:"continueOnError"`
	// ErrorCount tracks consecutive failed attempts to execute the step.
	ErrorCount pulumi.IntPtrInput `pulumi:"errorCount"`
	// FinishedAt is the time at which the final attempt to execute the step
	// completed.
	FinishedAt pulumi.StringPtrInput `pulumi:"finishedAt"`
	// Message is a display message about the step, including any errors.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// StartedAt is the time at which the first attempt to execute the step
	// began.
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
	// Status is the high-level outcome of the step.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusStepExecutionMetadataPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArgs) ToStageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput() StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput {
	return i.ToStageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArgs) ToStageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput)
}

// StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayInput is an input type that accepts StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArray and StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayInput` via:
//
//	StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArray{ StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArgs{...} }
type StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayInput interface {
	pulumi.Input

	ToStageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput() StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput
	ToStageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutputWithContext(context.Context) StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput
}

type StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArray []StageStatusCurrentPromotionStatusStepExecutionMetadataPatchInput

func (StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusStepExecutionMetadataPatch)(nil)).Elem()
}

func (i StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArray) ToStageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput() StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput {
	return i.ToStageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArray) ToStageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusCurrentPromotionStatusStepExecutionMetadataPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput) ToStageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput() StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput) ToStageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput {
	return o
}

// Alias is the alias of the step.
func (o StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusStepExecutionMetadataPatch) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// ContinueOnError is a boolean value that, if set to true, will cause the
// Promotion to continue executing the next step even if this step fails. It
// also will not permit this failure to impact the overall status of the
// Promotion.
func (o StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusStepExecutionMetadataPatch) *bool { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// ErrorCount tracks consecutive failed attempts to execute the step.
func (o StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput) ErrorCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusStepExecutionMetadataPatch) *int { return v.ErrorCount }).(pulumi.IntPtrOutput)
}

// FinishedAt is the time at which the final attempt to execute the step
// completed.
func (o StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusStepExecutionMetadataPatch) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

// Message is a display message about the step, including any errors.
func (o StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusStepExecutionMetadataPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// StartedAt is the time at which the first attempt to execute the step
// began.
func (o StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusStepExecutionMetadataPatch) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

// Status is the high-level outcome of the step.
func (o StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusCurrentPromotionStatusStepExecutionMetadataPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusCurrentPromotionStatusStepExecutionMetadataPatch)(nil)).Elem()
}

func (o StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput) ToStageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput() StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput) ToStageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutputWithContext(ctx context.Context) StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput {
	return o
}

func (o StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput) Index(i pulumi.IntInput) StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusCurrentPromotionStatusStepExecutionMetadataPatch {
		return vs[0].([]StageStatusCurrentPromotionStatusStepExecutionMetadataPatch)[vs[1].(int)]
	}).(StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput)
}

// FreightCollection is a collection of FreightReferences, each of which
// represents a piece of Freight that has been selected for deployment to a
// Stage.
type StageStatusFreightHistory struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id *string `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items map[string]map[string]string `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory []StageStatusFreightHistoryVerificationHistory `pulumi:"verificationHistory"`
}

// StageStatusFreightHistoryInput is an input type that accepts StageStatusFreightHistoryArgs and StageStatusFreightHistoryOutput values.
// You can construct a concrete instance of `StageStatusFreightHistoryInput` via:
//
//	StageStatusFreightHistoryArgs{...}
type StageStatusFreightHistoryInput interface {
	pulumi.Input

	ToStageStatusFreightHistoryOutput() StageStatusFreightHistoryOutput
	ToStageStatusFreightHistoryOutputWithContext(context.Context) StageStatusFreightHistoryOutput
}

// FreightCollection is a collection of FreightReferences, each of which
// represents a piece of Freight that has been selected for deployment to a
// Stage.
type StageStatusFreightHistoryArgs struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items pulumi.StringMapMapInput `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory StageStatusFreightHistoryVerificationHistoryArrayInput `pulumi:"verificationHistory"`
}

func (StageStatusFreightHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusFreightHistory)(nil)).Elem()
}

func (i StageStatusFreightHistoryArgs) ToStageStatusFreightHistoryOutput() StageStatusFreightHistoryOutput {
	return i.ToStageStatusFreightHistoryOutputWithContext(context.Background())
}

func (i StageStatusFreightHistoryArgs) ToStageStatusFreightHistoryOutputWithContext(ctx context.Context) StageStatusFreightHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusFreightHistoryOutput)
}

// StageStatusFreightHistoryArrayInput is an input type that accepts StageStatusFreightHistoryArray and StageStatusFreightHistoryArrayOutput values.
// You can construct a concrete instance of `StageStatusFreightHistoryArrayInput` via:
//
//	StageStatusFreightHistoryArray{ StageStatusFreightHistoryArgs{...} }
type StageStatusFreightHistoryArrayInput interface {
	pulumi.Input

	ToStageStatusFreightHistoryArrayOutput() StageStatusFreightHistoryArrayOutput
	ToStageStatusFreightHistoryArrayOutputWithContext(context.Context) StageStatusFreightHistoryArrayOutput
}

type StageStatusFreightHistoryArray []StageStatusFreightHistoryInput

func (StageStatusFreightHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusFreightHistory)(nil)).Elem()
}

func (i StageStatusFreightHistoryArray) ToStageStatusFreightHistoryArrayOutput() StageStatusFreightHistoryArrayOutput {
	return i.ToStageStatusFreightHistoryArrayOutputWithContext(context.Background())
}

func (i StageStatusFreightHistoryArray) ToStageStatusFreightHistoryArrayOutputWithContext(ctx context.Context) StageStatusFreightHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusFreightHistoryArrayOutput)
}

// FreightCollection is a collection of FreightReferences, each of which
// represents a piece of Freight that has been selected for deployment to a
// Stage.
type StageStatusFreightHistoryOutput struct{ *pulumi.OutputState }

func (StageStatusFreightHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusFreightHistory)(nil)).Elem()
}

func (o StageStatusFreightHistoryOutput) ToStageStatusFreightHistoryOutput() StageStatusFreightHistoryOutput {
	return o
}

func (o StageStatusFreightHistoryOutput) ToStageStatusFreightHistoryOutputWithContext(ctx context.Context) StageStatusFreightHistoryOutput {
	return o
}

// ID is a unique and deterministically calculated identifier for the
// FreightCollection. It is updated on each use of the UpdateOrPush method.
func (o StageStatusFreightHistoryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistory) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Freight is a map of FreightReference objects, indexed by their Warehouse
// origin.
func (o StageStatusFreightHistoryOutput) Items() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v StageStatusFreightHistory) map[string]map[string]string { return v.Items }).(pulumi.StringMapMapOutput)
}

// VerificationHistory is a stack of recent VerificationInfo. By default,
// the last ten VerificationInfo are stored.
func (o StageStatusFreightHistoryOutput) VerificationHistory() StageStatusFreightHistoryVerificationHistoryArrayOutput {
	return o.ApplyT(func(v StageStatusFreightHistory) []StageStatusFreightHistoryVerificationHistory {
		return v.VerificationHistory
	}).(StageStatusFreightHistoryVerificationHistoryArrayOutput)
}

type StageStatusFreightHistoryArrayOutput struct{ *pulumi.OutputState }

func (StageStatusFreightHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusFreightHistory)(nil)).Elem()
}

func (o StageStatusFreightHistoryArrayOutput) ToStageStatusFreightHistoryArrayOutput() StageStatusFreightHistoryArrayOutput {
	return o
}

func (o StageStatusFreightHistoryArrayOutput) ToStageStatusFreightHistoryArrayOutputWithContext(ctx context.Context) StageStatusFreightHistoryArrayOutput {
	return o
}

func (o StageStatusFreightHistoryArrayOutput) Index(i pulumi.IntInput) StageStatusFreightHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusFreightHistory {
		return vs[0].([]StageStatusFreightHistory)[vs[1].(int)]
	}).(StageStatusFreightHistoryOutput)
}

// FreightCollection is a collection of FreightReferences, each of which
// represents a piece of Freight that has been selected for deployment to a
// Stage.
type StageStatusFreightHistoryPatch struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id *string `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items map[string]map[string]string `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory []StageStatusFreightHistoryVerificationHistoryPatch `pulumi:"verificationHistory"`
}

// StageStatusFreightHistoryPatchInput is an input type that accepts StageStatusFreightHistoryPatchArgs and StageStatusFreightHistoryPatchOutput values.
// You can construct a concrete instance of `StageStatusFreightHistoryPatchInput` via:
//
//	StageStatusFreightHistoryPatchArgs{...}
type StageStatusFreightHistoryPatchInput interface {
	pulumi.Input

	ToStageStatusFreightHistoryPatchOutput() StageStatusFreightHistoryPatchOutput
	ToStageStatusFreightHistoryPatchOutputWithContext(context.Context) StageStatusFreightHistoryPatchOutput
}

// FreightCollection is a collection of FreightReferences, each of which
// represents a piece of Freight that has been selected for deployment to a
// Stage.
type StageStatusFreightHistoryPatchArgs struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items pulumi.StringMapMapInput `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory StageStatusFreightHistoryVerificationHistoryPatchArrayInput `pulumi:"verificationHistory"`
}

func (StageStatusFreightHistoryPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusFreightHistoryPatch)(nil)).Elem()
}

func (i StageStatusFreightHistoryPatchArgs) ToStageStatusFreightHistoryPatchOutput() StageStatusFreightHistoryPatchOutput {
	return i.ToStageStatusFreightHistoryPatchOutputWithContext(context.Background())
}

func (i StageStatusFreightHistoryPatchArgs) ToStageStatusFreightHistoryPatchOutputWithContext(ctx context.Context) StageStatusFreightHistoryPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusFreightHistoryPatchOutput)
}

// StageStatusFreightHistoryPatchArrayInput is an input type that accepts StageStatusFreightHistoryPatchArray and StageStatusFreightHistoryPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusFreightHistoryPatchArrayInput` via:
//
//	StageStatusFreightHistoryPatchArray{ StageStatusFreightHistoryPatchArgs{...} }
type StageStatusFreightHistoryPatchArrayInput interface {
	pulumi.Input

	ToStageStatusFreightHistoryPatchArrayOutput() StageStatusFreightHistoryPatchArrayOutput
	ToStageStatusFreightHistoryPatchArrayOutputWithContext(context.Context) StageStatusFreightHistoryPatchArrayOutput
}

type StageStatusFreightHistoryPatchArray []StageStatusFreightHistoryPatchInput

func (StageStatusFreightHistoryPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusFreightHistoryPatch)(nil)).Elem()
}

func (i StageStatusFreightHistoryPatchArray) ToStageStatusFreightHistoryPatchArrayOutput() StageStatusFreightHistoryPatchArrayOutput {
	return i.ToStageStatusFreightHistoryPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusFreightHistoryPatchArray) ToStageStatusFreightHistoryPatchArrayOutputWithContext(ctx context.Context) StageStatusFreightHistoryPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusFreightHistoryPatchArrayOutput)
}

// FreightCollection is a collection of FreightReferences, each of which
// represents a piece of Freight that has been selected for deployment to a
// Stage.
type StageStatusFreightHistoryPatchOutput struct{ *pulumi.OutputState }

func (StageStatusFreightHistoryPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusFreightHistoryPatch)(nil)).Elem()
}

func (o StageStatusFreightHistoryPatchOutput) ToStageStatusFreightHistoryPatchOutput() StageStatusFreightHistoryPatchOutput {
	return o
}

func (o StageStatusFreightHistoryPatchOutput) ToStageStatusFreightHistoryPatchOutputWithContext(ctx context.Context) StageStatusFreightHistoryPatchOutput {
	return o
}

// ID is a unique and deterministically calculated identifier for the
// FreightCollection. It is updated on each use of the UpdateOrPush method.
func (o StageStatusFreightHistoryPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Freight is a map of FreightReference objects, indexed by their Warehouse
// origin.
func (o StageStatusFreightHistoryPatchOutput) Items() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryPatch) map[string]map[string]string { return v.Items }).(pulumi.StringMapMapOutput)
}

// VerificationHistory is a stack of recent VerificationInfo. By default,
// the last ten VerificationInfo are stored.
func (o StageStatusFreightHistoryPatchOutput) VerificationHistory() StageStatusFreightHistoryVerificationHistoryPatchArrayOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryPatch) []StageStatusFreightHistoryVerificationHistoryPatch {
		return v.VerificationHistory
	}).(StageStatusFreightHistoryVerificationHistoryPatchArrayOutput)
}

type StageStatusFreightHistoryPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusFreightHistoryPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusFreightHistoryPatch)(nil)).Elem()
}

func (o StageStatusFreightHistoryPatchArrayOutput) ToStageStatusFreightHistoryPatchArrayOutput() StageStatusFreightHistoryPatchArrayOutput {
	return o
}

func (o StageStatusFreightHistoryPatchArrayOutput) ToStageStatusFreightHistoryPatchArrayOutputWithContext(ctx context.Context) StageStatusFreightHistoryPatchArrayOutput {
	return o
}

func (o StageStatusFreightHistoryPatchArrayOutput) Index(i pulumi.IntInput) StageStatusFreightHistoryPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusFreightHistoryPatch {
		return vs[0].([]StageStatusFreightHistoryPatch)[vs[1].(int)]
	}).(StageStatusFreightHistoryPatchOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusFreightHistoryVerificationHistory struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       *string                                                  `pulumi:"actor"`
	AnalysisRun *StageStatusFreightHistoryVerificationHistoryAnalysisRun `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime *string `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id *string `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message *string `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase *string `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime *string `pulumi:"startTime"`
}

// StageStatusFreightHistoryVerificationHistoryInput is an input type that accepts StageStatusFreightHistoryVerificationHistoryArgs and StageStatusFreightHistoryVerificationHistoryOutput values.
// You can construct a concrete instance of `StageStatusFreightHistoryVerificationHistoryInput` via:
//
//	StageStatusFreightHistoryVerificationHistoryArgs{...}
type StageStatusFreightHistoryVerificationHistoryInput interface {
	pulumi.Input

	ToStageStatusFreightHistoryVerificationHistoryOutput() StageStatusFreightHistoryVerificationHistoryOutput
	ToStageStatusFreightHistoryVerificationHistoryOutputWithContext(context.Context) StageStatusFreightHistoryVerificationHistoryOutput
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusFreightHistoryVerificationHistoryArgs struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       pulumi.StringPtrInput                                           `pulumi:"actor"`
	AnalysisRun StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrInput `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime pulumi.StringPtrInput `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (StageStatusFreightHistoryVerificationHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusFreightHistoryVerificationHistory)(nil)).Elem()
}

func (i StageStatusFreightHistoryVerificationHistoryArgs) ToStageStatusFreightHistoryVerificationHistoryOutput() StageStatusFreightHistoryVerificationHistoryOutput {
	return i.ToStageStatusFreightHistoryVerificationHistoryOutputWithContext(context.Background())
}

func (i StageStatusFreightHistoryVerificationHistoryArgs) ToStageStatusFreightHistoryVerificationHistoryOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusFreightHistoryVerificationHistoryOutput)
}

// StageStatusFreightHistoryVerificationHistoryArrayInput is an input type that accepts StageStatusFreightHistoryVerificationHistoryArray and StageStatusFreightHistoryVerificationHistoryArrayOutput values.
// You can construct a concrete instance of `StageStatusFreightHistoryVerificationHistoryArrayInput` via:
//
//	StageStatusFreightHistoryVerificationHistoryArray{ StageStatusFreightHistoryVerificationHistoryArgs{...} }
type StageStatusFreightHistoryVerificationHistoryArrayInput interface {
	pulumi.Input

	ToStageStatusFreightHistoryVerificationHistoryArrayOutput() StageStatusFreightHistoryVerificationHistoryArrayOutput
	ToStageStatusFreightHistoryVerificationHistoryArrayOutputWithContext(context.Context) StageStatusFreightHistoryVerificationHistoryArrayOutput
}

type StageStatusFreightHistoryVerificationHistoryArray []StageStatusFreightHistoryVerificationHistoryInput

func (StageStatusFreightHistoryVerificationHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusFreightHistoryVerificationHistory)(nil)).Elem()
}

func (i StageStatusFreightHistoryVerificationHistoryArray) ToStageStatusFreightHistoryVerificationHistoryArrayOutput() StageStatusFreightHistoryVerificationHistoryArrayOutput {
	return i.ToStageStatusFreightHistoryVerificationHistoryArrayOutputWithContext(context.Background())
}

func (i StageStatusFreightHistoryVerificationHistoryArray) ToStageStatusFreightHistoryVerificationHistoryArrayOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusFreightHistoryVerificationHistoryArrayOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusFreightHistoryVerificationHistoryOutput struct{ *pulumi.OutputState }

func (StageStatusFreightHistoryVerificationHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusFreightHistoryVerificationHistory)(nil)).Elem()
}

func (o StageStatusFreightHistoryVerificationHistoryOutput) ToStageStatusFreightHistoryVerificationHistoryOutput() StageStatusFreightHistoryVerificationHistoryOutput {
	return o
}

func (o StageStatusFreightHistoryVerificationHistoryOutput) ToStageStatusFreightHistoryVerificationHistoryOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryOutput {
	return o
}

// Actor is the name of the entity that initiated or aborted the
// Verification process.
func (o StageStatusFreightHistoryVerificationHistoryOutput) Actor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistory) *string { return v.Actor }).(pulumi.StringPtrOutput)
}

func (o StageStatusFreightHistoryVerificationHistoryOutput) AnalysisRun() StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistory) *StageStatusFreightHistoryVerificationHistoryAnalysisRun {
		return v.AnalysisRun
	}).(StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput)
}

// FinishTime is the time at which the Verification process finished.
func (o StageStatusFreightHistoryVerificationHistoryOutput) FinishTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistory) *string { return v.FinishTime }).(pulumi.StringPtrOutput)
}

// ID is the identifier of the Verification process.
func (o StageStatusFreightHistoryVerificationHistoryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistory) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message may contain additional information about why the verification
// process is in its current phase.
func (o StageStatusFreightHistoryVerificationHistoryOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistory) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Phase describes the current phase of the Verification process. Generally,
// this will be a reflection of the underlying AnalysisRun's phase, however,
// there are exceptions to this, such as in the case where an AnalysisRun
// cannot be launched successfully.
func (o StageStatusFreightHistoryVerificationHistoryOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistory) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// StartTime is the time at which the Verification process was started.
func (o StageStatusFreightHistoryVerificationHistoryOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistory) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type StageStatusFreightHistoryVerificationHistoryArrayOutput struct{ *pulumi.OutputState }

func (StageStatusFreightHistoryVerificationHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusFreightHistoryVerificationHistory)(nil)).Elem()
}

func (o StageStatusFreightHistoryVerificationHistoryArrayOutput) ToStageStatusFreightHistoryVerificationHistoryArrayOutput() StageStatusFreightHistoryVerificationHistoryArrayOutput {
	return o
}

func (o StageStatusFreightHistoryVerificationHistoryArrayOutput) ToStageStatusFreightHistoryVerificationHistoryArrayOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryArrayOutput {
	return o
}

func (o StageStatusFreightHistoryVerificationHistoryArrayOutput) Index(i pulumi.IntInput) StageStatusFreightHistoryVerificationHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusFreightHistoryVerificationHistory {
		return vs[0].([]StageStatusFreightHistoryVerificationHistory)[vs[1].(int)]
	}).(StageStatusFreightHistoryVerificationHistoryOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusFreightHistoryVerificationHistoryAnalysisRun struct {
	// Name is the name of the AnalysisRun.
	Name *string `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace *string `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase *string `pulumi:"phase"`
}

// StageStatusFreightHistoryVerificationHistoryAnalysisRunInput is an input type that accepts StageStatusFreightHistoryVerificationHistoryAnalysisRunArgs and StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput values.
// You can construct a concrete instance of `StageStatusFreightHistoryVerificationHistoryAnalysisRunInput` via:
//
//	StageStatusFreightHistoryVerificationHistoryAnalysisRunArgs{...}
type StageStatusFreightHistoryVerificationHistoryAnalysisRunInput interface {
	pulumi.Input

	ToStageStatusFreightHistoryVerificationHistoryAnalysisRunOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput
	ToStageStatusFreightHistoryVerificationHistoryAnalysisRunOutputWithContext(context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusFreightHistoryVerificationHistoryAnalysisRunArgs struct {
	// Name is the name of the AnalysisRun.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
}

func (StageStatusFreightHistoryVerificationHistoryAnalysisRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusFreightHistoryVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (i StageStatusFreightHistoryVerificationHistoryAnalysisRunArgs) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput {
	return i.ToStageStatusFreightHistoryVerificationHistoryAnalysisRunOutputWithContext(context.Background())
}

func (i StageStatusFreightHistoryVerificationHistoryAnalysisRunArgs) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput)
}

func (i StageStatusFreightHistoryVerificationHistoryAnalysisRunArgs) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput {
	return i.ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutputWithContext(context.Background())
}

func (i StageStatusFreightHistoryVerificationHistoryAnalysisRunArgs) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput).ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutputWithContext(ctx)
}

// StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrInput is an input type that accepts StageStatusFreightHistoryVerificationHistoryAnalysisRunArgs, StageStatusFreightHistoryVerificationHistoryAnalysisRunPtr and StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput values.
// You can construct a concrete instance of `StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrInput` via:
//
//	        StageStatusFreightHistoryVerificationHistoryAnalysisRunArgs{...}
//
//	or:
//
//	        nil
type StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrInput interface {
	pulumi.Input

	ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput
	ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutputWithContext(context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput
}

type stageStatusFreightHistoryVerificationHistoryAnalysisRunPtrType StageStatusFreightHistoryVerificationHistoryAnalysisRunArgs

func StageStatusFreightHistoryVerificationHistoryAnalysisRunPtr(v *StageStatusFreightHistoryVerificationHistoryAnalysisRunArgs) StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrInput {
	return (*stageStatusFreightHistoryVerificationHistoryAnalysisRunPtrType)(v)
}

func (*stageStatusFreightHistoryVerificationHistoryAnalysisRunPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusFreightHistoryVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (i *stageStatusFreightHistoryVerificationHistoryAnalysisRunPtrType) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput {
	return i.ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutputWithContext(context.Background())
}

func (i *stageStatusFreightHistoryVerificationHistoryAnalysisRunPtrType) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput struct{ *pulumi.OutputState }

func (StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusFreightHistoryVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput {
	return o
}

func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput {
	return o
}

func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput {
	return o.ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutputWithContext(context.Background())
}

func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusFreightHistoryVerificationHistoryAnalysisRun) *StageStatusFreightHistoryVerificationHistoryAnalysisRun {
		return &v
	}).(StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput)
}

// Name is the name of the AnalysisRun.
func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistoryAnalysisRun) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistoryAnalysisRun) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistoryAnalysisRun) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

type StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput struct{ *pulumi.OutputState }

func (StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusFreightHistoryVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput {
	return o
}

func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput {
	return o
}

func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput) Elem() StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput {
	return o.ApplyT(func(v *StageStatusFreightHistoryVerificationHistoryAnalysisRun) StageStatusFreightHistoryVerificationHistoryAnalysisRun {
		if v != nil {
			return *v
		}
		var ret StageStatusFreightHistoryVerificationHistoryAnalysisRun
		return ret
	}).(StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput)
}

// Name is the name of the AnalysisRun.
func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusFreightHistoryVerificationHistoryAnalysisRun) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusFreightHistoryVerificationHistoryAnalysisRun) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusFreightHistoryVerificationHistoryAnalysisRun) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch struct {
	// Name is the name of the AnalysisRun.
	Name *string `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace *string `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase *string `pulumi:"phase"`
}

// StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchInput is an input type that accepts StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchArgs and StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput values.
// You can construct a concrete instance of `StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchInput` via:
//
//	StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchArgs{...}
type StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchInput interface {
	pulumi.Input

	ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput
	ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutputWithContext(context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchArgs struct {
	// Name is the name of the AnalysisRun.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
}

func (StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (i StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchArgs) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput {
	return i.ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutputWithContext(context.Background())
}

func (i StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchArgs) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput)
}

func (i StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchArgs) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput {
	return i.ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchArgs) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput).ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx)
}

// StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrInput is an input type that accepts StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchArgs, StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtr and StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrInput` via:
//
//	        StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrInput interface {
	pulumi.Input

	ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput
	ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput
}

type stageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrType StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchArgs

func StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtr(v *StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchArgs) StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrInput {
	return (*stageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrType)(v)
}

func (*stageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (i *stageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrType) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput {
	return i.ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrType) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput struct{ *pulumi.OutputState }

func (StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput {
	return o
}

func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput {
	return o
}

func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput {
	return o.ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch) *StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch {
		return &v
	}).(StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput)
}

// Name is the name of the AnalysisRun.
func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

type StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput {
	return o
}

func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput) ToStageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput {
	return o
}

func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput) Elem() StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput {
	return o.ApplyT(func(v *StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch) StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch
		return ret
	}).(StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput)
}

// Name is the name of the AnalysisRun.
func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusFreightHistoryVerificationHistoryPatch struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       *string                                                       `pulumi:"actor"`
	AnalysisRun *StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime *string `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id *string `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message *string `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase *string `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime *string `pulumi:"startTime"`
}

// StageStatusFreightHistoryVerificationHistoryPatchInput is an input type that accepts StageStatusFreightHistoryVerificationHistoryPatchArgs and StageStatusFreightHistoryVerificationHistoryPatchOutput values.
// You can construct a concrete instance of `StageStatusFreightHistoryVerificationHistoryPatchInput` via:
//
//	StageStatusFreightHistoryVerificationHistoryPatchArgs{...}
type StageStatusFreightHistoryVerificationHistoryPatchInput interface {
	pulumi.Input

	ToStageStatusFreightHistoryVerificationHistoryPatchOutput() StageStatusFreightHistoryVerificationHistoryPatchOutput
	ToStageStatusFreightHistoryVerificationHistoryPatchOutputWithContext(context.Context) StageStatusFreightHistoryVerificationHistoryPatchOutput
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusFreightHistoryVerificationHistoryPatchArgs struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       pulumi.StringPtrInput                                                `pulumi:"actor"`
	AnalysisRun StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrInput `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime pulumi.StringPtrInput `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (StageStatusFreightHistoryVerificationHistoryPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusFreightHistoryVerificationHistoryPatch)(nil)).Elem()
}

func (i StageStatusFreightHistoryVerificationHistoryPatchArgs) ToStageStatusFreightHistoryVerificationHistoryPatchOutput() StageStatusFreightHistoryVerificationHistoryPatchOutput {
	return i.ToStageStatusFreightHistoryVerificationHistoryPatchOutputWithContext(context.Background())
}

func (i StageStatusFreightHistoryVerificationHistoryPatchArgs) ToStageStatusFreightHistoryVerificationHistoryPatchOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusFreightHistoryVerificationHistoryPatchOutput)
}

// StageStatusFreightHistoryVerificationHistoryPatchArrayInput is an input type that accepts StageStatusFreightHistoryVerificationHistoryPatchArray and StageStatusFreightHistoryVerificationHistoryPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusFreightHistoryVerificationHistoryPatchArrayInput` via:
//
//	StageStatusFreightHistoryVerificationHistoryPatchArray{ StageStatusFreightHistoryVerificationHistoryPatchArgs{...} }
type StageStatusFreightHistoryVerificationHistoryPatchArrayInput interface {
	pulumi.Input

	ToStageStatusFreightHistoryVerificationHistoryPatchArrayOutput() StageStatusFreightHistoryVerificationHistoryPatchArrayOutput
	ToStageStatusFreightHistoryVerificationHistoryPatchArrayOutputWithContext(context.Context) StageStatusFreightHistoryVerificationHistoryPatchArrayOutput
}

type StageStatusFreightHistoryVerificationHistoryPatchArray []StageStatusFreightHistoryVerificationHistoryPatchInput

func (StageStatusFreightHistoryVerificationHistoryPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusFreightHistoryVerificationHistoryPatch)(nil)).Elem()
}

func (i StageStatusFreightHistoryVerificationHistoryPatchArray) ToStageStatusFreightHistoryVerificationHistoryPatchArrayOutput() StageStatusFreightHistoryVerificationHistoryPatchArrayOutput {
	return i.ToStageStatusFreightHistoryVerificationHistoryPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusFreightHistoryVerificationHistoryPatchArray) ToStageStatusFreightHistoryVerificationHistoryPatchArrayOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusFreightHistoryVerificationHistoryPatchArrayOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusFreightHistoryVerificationHistoryPatchOutput struct{ *pulumi.OutputState }

func (StageStatusFreightHistoryVerificationHistoryPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusFreightHistoryVerificationHistoryPatch)(nil)).Elem()
}

func (o StageStatusFreightHistoryVerificationHistoryPatchOutput) ToStageStatusFreightHistoryVerificationHistoryPatchOutput() StageStatusFreightHistoryVerificationHistoryPatchOutput {
	return o
}

func (o StageStatusFreightHistoryVerificationHistoryPatchOutput) ToStageStatusFreightHistoryVerificationHistoryPatchOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryPatchOutput {
	return o
}

// Actor is the name of the entity that initiated or aborted the
// Verification process.
func (o StageStatusFreightHistoryVerificationHistoryPatchOutput) Actor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistoryPatch) *string { return v.Actor }).(pulumi.StringPtrOutput)
}

func (o StageStatusFreightHistoryVerificationHistoryPatchOutput) AnalysisRun() StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistoryPatch) *StageStatusFreightHistoryVerificationHistoryAnalysisRunPatch {
		return v.AnalysisRun
	}).(StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput)
}

// FinishTime is the time at which the Verification process finished.
func (o StageStatusFreightHistoryVerificationHistoryPatchOutput) FinishTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistoryPatch) *string { return v.FinishTime }).(pulumi.StringPtrOutput)
}

// ID is the identifier of the Verification process.
func (o StageStatusFreightHistoryVerificationHistoryPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistoryPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message may contain additional information about why the verification
// process is in its current phase.
func (o StageStatusFreightHistoryVerificationHistoryPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistoryPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Phase describes the current phase of the Verification process. Generally,
// this will be a reflection of the underlying AnalysisRun's phase, however,
// there are exceptions to this, such as in the case where an AnalysisRun
// cannot be launched successfully.
func (o StageStatusFreightHistoryVerificationHistoryPatchOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistoryPatch) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// StartTime is the time at which the Verification process was started.
func (o StageStatusFreightHistoryVerificationHistoryPatchOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusFreightHistoryVerificationHistoryPatch) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type StageStatusFreightHistoryVerificationHistoryPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusFreightHistoryVerificationHistoryPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusFreightHistoryVerificationHistoryPatch)(nil)).Elem()
}

func (o StageStatusFreightHistoryVerificationHistoryPatchArrayOutput) ToStageStatusFreightHistoryVerificationHistoryPatchArrayOutput() StageStatusFreightHistoryVerificationHistoryPatchArrayOutput {
	return o
}

func (o StageStatusFreightHistoryVerificationHistoryPatchArrayOutput) ToStageStatusFreightHistoryVerificationHistoryPatchArrayOutputWithContext(ctx context.Context) StageStatusFreightHistoryVerificationHistoryPatchArrayOutput {
	return o
}

func (o StageStatusFreightHistoryVerificationHistoryPatchArrayOutput) Index(i pulumi.IntInput) StageStatusFreightHistoryVerificationHistoryPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusFreightHistoryVerificationHistoryPatch {
		return vs[0].([]StageStatusFreightHistoryVerificationHistoryPatch)[vs[1].(int)]
	}).(StageStatusFreightHistoryVerificationHistoryPatchOutput)
}

// Health is the Stage's last observed health.
type StageStatusHealth struct {
	// Config is the opaque configuration of all health checks performed on this
	// Stage.
	Config map[string]interface{} `pulumi:"config"`
	// Issues clarifies why a Stage in any state other than Healthy is in that
	// state. This field will always be the empty when a Stage is Healthy.
	Issues []string `pulumi:"issues"`
	// Output is the opaque output of all health checks performed on this Stage.
	Output map[string]interface{} `pulumi:"output"`
	// Status describes the health of the Stage.
	Status *string `pulumi:"status"`
}

// StageStatusHealthInput is an input type that accepts StageStatusHealthArgs and StageStatusHealthOutput values.
// You can construct a concrete instance of `StageStatusHealthInput` via:
//
//	StageStatusHealthArgs{...}
type StageStatusHealthInput interface {
	pulumi.Input

	ToStageStatusHealthOutput() StageStatusHealthOutput
	ToStageStatusHealthOutputWithContext(context.Context) StageStatusHealthOutput
}

// Health is the Stage's last observed health.
type StageStatusHealthArgs struct {
	// Config is the opaque configuration of all health checks performed on this
	// Stage.
	Config pulumi.MapInput `pulumi:"config"`
	// Issues clarifies why a Stage in any state other than Healthy is in that
	// state. This field will always be the empty when a Stage is Healthy.
	Issues pulumi.StringArrayInput `pulumi:"issues"`
	// Output is the opaque output of all health checks performed on this Stage.
	Output pulumi.MapInput `pulumi:"output"`
	// Status describes the health of the Stage.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (StageStatusHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusHealth)(nil)).Elem()
}

func (i StageStatusHealthArgs) ToStageStatusHealthOutput() StageStatusHealthOutput {
	return i.ToStageStatusHealthOutputWithContext(context.Background())
}

func (i StageStatusHealthArgs) ToStageStatusHealthOutputWithContext(ctx context.Context) StageStatusHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusHealthOutput)
}

func (i StageStatusHealthArgs) ToStageStatusHealthPtrOutput() StageStatusHealthPtrOutput {
	return i.ToStageStatusHealthPtrOutputWithContext(context.Background())
}

func (i StageStatusHealthArgs) ToStageStatusHealthPtrOutputWithContext(ctx context.Context) StageStatusHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusHealthOutput).ToStageStatusHealthPtrOutputWithContext(ctx)
}

// StageStatusHealthPtrInput is an input type that accepts StageStatusHealthArgs, StageStatusHealthPtr and StageStatusHealthPtrOutput values.
// You can construct a concrete instance of `StageStatusHealthPtrInput` via:
//
//	        StageStatusHealthArgs{...}
//
//	or:
//
//	        nil
type StageStatusHealthPtrInput interface {
	pulumi.Input

	ToStageStatusHealthPtrOutput() StageStatusHealthPtrOutput
	ToStageStatusHealthPtrOutputWithContext(context.Context) StageStatusHealthPtrOutput
}

type stageStatusHealthPtrType StageStatusHealthArgs

func StageStatusHealthPtr(v *StageStatusHealthArgs) StageStatusHealthPtrInput {
	return (*stageStatusHealthPtrType)(v)
}

func (*stageStatusHealthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusHealth)(nil)).Elem()
}

func (i *stageStatusHealthPtrType) ToStageStatusHealthPtrOutput() StageStatusHealthPtrOutput {
	return i.ToStageStatusHealthPtrOutputWithContext(context.Background())
}

func (i *stageStatusHealthPtrType) ToStageStatusHealthPtrOutputWithContext(ctx context.Context) StageStatusHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusHealthPtrOutput)
}

// Health is the Stage's last observed health.
type StageStatusHealthOutput struct{ *pulumi.OutputState }

func (StageStatusHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusHealth)(nil)).Elem()
}

func (o StageStatusHealthOutput) ToStageStatusHealthOutput() StageStatusHealthOutput {
	return o
}

func (o StageStatusHealthOutput) ToStageStatusHealthOutputWithContext(ctx context.Context) StageStatusHealthOutput {
	return o
}

func (o StageStatusHealthOutput) ToStageStatusHealthPtrOutput() StageStatusHealthPtrOutput {
	return o.ToStageStatusHealthPtrOutputWithContext(context.Background())
}

func (o StageStatusHealthOutput) ToStageStatusHealthPtrOutputWithContext(ctx context.Context) StageStatusHealthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusHealth) *StageStatusHealth {
		return &v
	}).(StageStatusHealthPtrOutput)
}

// Config is the opaque configuration of all health checks performed on this
// Stage.
func (o StageStatusHealthOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v StageStatusHealth) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// Issues clarifies why a Stage in any state other than Healthy is in that
// state. This field will always be the empty when a Stage is Healthy.
func (o StageStatusHealthOutput) Issues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StageStatusHealth) []string { return v.Issues }).(pulumi.StringArrayOutput)
}

// Output is the opaque output of all health checks performed on this Stage.
func (o StageStatusHealthOutput) Output() pulumi.MapOutput {
	return o.ApplyT(func(v StageStatusHealth) map[string]interface{} { return v.Output }).(pulumi.MapOutput)
}

// Status describes the health of the Stage.
func (o StageStatusHealthOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusHealth) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type StageStatusHealthPtrOutput struct{ *pulumi.OutputState }

func (StageStatusHealthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusHealth)(nil)).Elem()
}

func (o StageStatusHealthPtrOutput) ToStageStatusHealthPtrOutput() StageStatusHealthPtrOutput {
	return o
}

func (o StageStatusHealthPtrOutput) ToStageStatusHealthPtrOutputWithContext(ctx context.Context) StageStatusHealthPtrOutput {
	return o
}

func (o StageStatusHealthPtrOutput) Elem() StageStatusHealthOutput {
	return o.ApplyT(func(v *StageStatusHealth) StageStatusHealth {
		if v != nil {
			return *v
		}
		var ret StageStatusHealth
		return ret
	}).(StageStatusHealthOutput)
}

// Config is the opaque configuration of all health checks performed on this
// Stage.
func (o StageStatusHealthPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v *StageStatusHealth) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

// Issues clarifies why a Stage in any state other than Healthy is in that
// state. This field will always be the empty when a Stage is Healthy.
func (o StageStatusHealthPtrOutput) Issues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StageStatusHealth) []string {
		if v == nil {
			return nil
		}
		return v.Issues
	}).(pulumi.StringArrayOutput)
}

// Output is the opaque output of all health checks performed on this Stage.
func (o StageStatusHealthPtrOutput) Output() pulumi.MapOutput {
	return o.ApplyT(func(v *StageStatusHealth) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Output
	}).(pulumi.MapOutput)
}

// Status describes the health of the Stage.
func (o StageStatusHealthPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusHealth) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Health is the Stage's last observed health.
type StageStatusHealthPatch struct {
	// Config is the opaque configuration of all health checks performed on this
	// Stage.
	Config map[string]interface{} `pulumi:"config"`
	// Issues clarifies why a Stage in any state other than Healthy is in that
	// state. This field will always be the empty when a Stage is Healthy.
	Issues []string `pulumi:"issues"`
	// Output is the opaque output of all health checks performed on this Stage.
	Output map[string]interface{} `pulumi:"output"`
	// Status describes the health of the Stage.
	Status *string `pulumi:"status"`
}

// StageStatusHealthPatchInput is an input type that accepts StageStatusHealthPatchArgs and StageStatusHealthPatchOutput values.
// You can construct a concrete instance of `StageStatusHealthPatchInput` via:
//
//	StageStatusHealthPatchArgs{...}
type StageStatusHealthPatchInput interface {
	pulumi.Input

	ToStageStatusHealthPatchOutput() StageStatusHealthPatchOutput
	ToStageStatusHealthPatchOutputWithContext(context.Context) StageStatusHealthPatchOutput
}

// Health is the Stage's last observed health.
type StageStatusHealthPatchArgs struct {
	// Config is the opaque configuration of all health checks performed on this
	// Stage.
	Config pulumi.MapInput `pulumi:"config"`
	// Issues clarifies why a Stage in any state other than Healthy is in that
	// state. This field will always be the empty when a Stage is Healthy.
	Issues pulumi.StringArrayInput `pulumi:"issues"`
	// Output is the opaque output of all health checks performed on this Stage.
	Output pulumi.MapInput `pulumi:"output"`
	// Status describes the health of the Stage.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (StageStatusHealthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusHealthPatch)(nil)).Elem()
}

func (i StageStatusHealthPatchArgs) ToStageStatusHealthPatchOutput() StageStatusHealthPatchOutput {
	return i.ToStageStatusHealthPatchOutputWithContext(context.Background())
}

func (i StageStatusHealthPatchArgs) ToStageStatusHealthPatchOutputWithContext(ctx context.Context) StageStatusHealthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusHealthPatchOutput)
}

func (i StageStatusHealthPatchArgs) ToStageStatusHealthPatchPtrOutput() StageStatusHealthPatchPtrOutput {
	return i.ToStageStatusHealthPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusHealthPatchArgs) ToStageStatusHealthPatchPtrOutputWithContext(ctx context.Context) StageStatusHealthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusHealthPatchOutput).ToStageStatusHealthPatchPtrOutputWithContext(ctx)
}

// StageStatusHealthPatchPtrInput is an input type that accepts StageStatusHealthPatchArgs, StageStatusHealthPatchPtr and StageStatusHealthPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusHealthPatchPtrInput` via:
//
//	        StageStatusHealthPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusHealthPatchPtrInput interface {
	pulumi.Input

	ToStageStatusHealthPatchPtrOutput() StageStatusHealthPatchPtrOutput
	ToStageStatusHealthPatchPtrOutputWithContext(context.Context) StageStatusHealthPatchPtrOutput
}

type stageStatusHealthPatchPtrType StageStatusHealthPatchArgs

func StageStatusHealthPatchPtr(v *StageStatusHealthPatchArgs) StageStatusHealthPatchPtrInput {
	return (*stageStatusHealthPatchPtrType)(v)
}

func (*stageStatusHealthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusHealthPatch)(nil)).Elem()
}

func (i *stageStatusHealthPatchPtrType) ToStageStatusHealthPatchPtrOutput() StageStatusHealthPatchPtrOutput {
	return i.ToStageStatusHealthPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusHealthPatchPtrType) ToStageStatusHealthPatchPtrOutputWithContext(ctx context.Context) StageStatusHealthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusHealthPatchPtrOutput)
}

// Health is the Stage's last observed health.
type StageStatusHealthPatchOutput struct{ *pulumi.OutputState }

func (StageStatusHealthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusHealthPatch)(nil)).Elem()
}

func (o StageStatusHealthPatchOutput) ToStageStatusHealthPatchOutput() StageStatusHealthPatchOutput {
	return o
}

func (o StageStatusHealthPatchOutput) ToStageStatusHealthPatchOutputWithContext(ctx context.Context) StageStatusHealthPatchOutput {
	return o
}

func (o StageStatusHealthPatchOutput) ToStageStatusHealthPatchPtrOutput() StageStatusHealthPatchPtrOutput {
	return o.ToStageStatusHealthPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusHealthPatchOutput) ToStageStatusHealthPatchPtrOutputWithContext(ctx context.Context) StageStatusHealthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusHealthPatch) *StageStatusHealthPatch {
		return &v
	}).(StageStatusHealthPatchPtrOutput)
}

// Config is the opaque configuration of all health checks performed on this
// Stage.
func (o StageStatusHealthPatchOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v StageStatusHealthPatch) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// Issues clarifies why a Stage in any state other than Healthy is in that
// state. This field will always be the empty when a Stage is Healthy.
func (o StageStatusHealthPatchOutput) Issues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StageStatusHealthPatch) []string { return v.Issues }).(pulumi.StringArrayOutput)
}

// Output is the opaque output of all health checks performed on this Stage.
func (o StageStatusHealthPatchOutput) Output() pulumi.MapOutput {
	return o.ApplyT(func(v StageStatusHealthPatch) map[string]interface{} { return v.Output }).(pulumi.MapOutput)
}

// Status describes the health of the Stage.
func (o StageStatusHealthPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusHealthPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type StageStatusHealthPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusHealthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusHealthPatch)(nil)).Elem()
}

func (o StageStatusHealthPatchPtrOutput) ToStageStatusHealthPatchPtrOutput() StageStatusHealthPatchPtrOutput {
	return o
}

func (o StageStatusHealthPatchPtrOutput) ToStageStatusHealthPatchPtrOutputWithContext(ctx context.Context) StageStatusHealthPatchPtrOutput {
	return o
}

func (o StageStatusHealthPatchPtrOutput) Elem() StageStatusHealthPatchOutput {
	return o.ApplyT(func(v *StageStatusHealthPatch) StageStatusHealthPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusHealthPatch
		return ret
	}).(StageStatusHealthPatchOutput)
}

// Config is the opaque configuration of all health checks performed on this
// Stage.
func (o StageStatusHealthPatchPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v *StageStatusHealthPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

// Issues clarifies why a Stage in any state other than Healthy is in that
// state. This field will always be the empty when a Stage is Healthy.
func (o StageStatusHealthPatchPtrOutput) Issues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StageStatusHealthPatch) []string {
		if v == nil {
			return nil
		}
		return v.Issues
	}).(pulumi.StringArrayOutput)
}

// Output is the opaque output of all health checks performed on this Stage.
func (o StageStatusHealthPatchPtrOutput) Output() pulumi.MapOutput {
	return o.ApplyT(func(v *StageStatusHealthPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Output
	}).(pulumi.MapOutput)
}

// Status describes the health of the Stage.
func (o StageStatusHealthPatchPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusHealthPatch) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// LastPromotion is a reference to the last completed promotion.
type StageStatusLastPromotion struct {
	// FinishedAt is the time at which the Promotion was completed.
	FinishedAt *string                          `pulumi:"finishedAt"`
	Freight    *StageStatusLastPromotionFreight `pulumi:"freight"`
	// Name is the name of the Promotion.
	Name   *string                         `pulumi:"name"`
	Status *StageStatusLastPromotionStatus `pulumi:"status"`
}

// StageStatusLastPromotionInput is an input type that accepts StageStatusLastPromotionArgs and StageStatusLastPromotionOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionInput` via:
//
//	StageStatusLastPromotionArgs{...}
type StageStatusLastPromotionInput interface {
	pulumi.Input

	ToStageStatusLastPromotionOutput() StageStatusLastPromotionOutput
	ToStageStatusLastPromotionOutputWithContext(context.Context) StageStatusLastPromotionOutput
}

// LastPromotion is a reference to the last completed promotion.
type StageStatusLastPromotionArgs struct {
	// FinishedAt is the time at which the Promotion was completed.
	FinishedAt pulumi.StringPtrInput                   `pulumi:"finishedAt"`
	Freight    StageStatusLastPromotionFreightPtrInput `pulumi:"freight"`
	// Name is the name of the Promotion.
	Name   pulumi.StringPtrInput                  `pulumi:"name"`
	Status StageStatusLastPromotionStatusPtrInput `pulumi:"status"`
}

func (StageStatusLastPromotionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotion)(nil)).Elem()
}

func (i StageStatusLastPromotionArgs) ToStageStatusLastPromotionOutput() StageStatusLastPromotionOutput {
	return i.ToStageStatusLastPromotionOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionArgs) ToStageStatusLastPromotionOutputWithContext(ctx context.Context) StageStatusLastPromotionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionOutput)
}

func (i StageStatusLastPromotionArgs) ToStageStatusLastPromotionPtrOutput() StageStatusLastPromotionPtrOutput {
	return i.ToStageStatusLastPromotionPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionArgs) ToStageStatusLastPromotionPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionOutput).ToStageStatusLastPromotionPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionPtrInput is an input type that accepts StageStatusLastPromotionArgs, StageStatusLastPromotionPtr and StageStatusLastPromotionPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionPtrInput` via:
//
//	        StageStatusLastPromotionArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionPtrOutput() StageStatusLastPromotionPtrOutput
	ToStageStatusLastPromotionPtrOutputWithContext(context.Context) StageStatusLastPromotionPtrOutput
}

type stageStatusLastPromotionPtrType StageStatusLastPromotionArgs

func StageStatusLastPromotionPtr(v *StageStatusLastPromotionArgs) StageStatusLastPromotionPtrInput {
	return (*stageStatusLastPromotionPtrType)(v)
}

func (*stageStatusLastPromotionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotion)(nil)).Elem()
}

func (i *stageStatusLastPromotionPtrType) ToStageStatusLastPromotionPtrOutput() StageStatusLastPromotionPtrOutput {
	return i.ToStageStatusLastPromotionPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionPtrType) ToStageStatusLastPromotionPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionPtrOutput)
}

// LastPromotion is a reference to the last completed promotion.
type StageStatusLastPromotionOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotion)(nil)).Elem()
}

func (o StageStatusLastPromotionOutput) ToStageStatusLastPromotionOutput() StageStatusLastPromotionOutput {
	return o
}

func (o StageStatusLastPromotionOutput) ToStageStatusLastPromotionOutputWithContext(ctx context.Context) StageStatusLastPromotionOutput {
	return o
}

func (o StageStatusLastPromotionOutput) ToStageStatusLastPromotionPtrOutput() StageStatusLastPromotionPtrOutput {
	return o.ToStageStatusLastPromotionPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionOutput) ToStageStatusLastPromotionPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotion) *StageStatusLastPromotion {
		return &v
	}).(StageStatusLastPromotionPtrOutput)
}

// FinishedAt is the time at which the Promotion was completed.
func (o StageStatusLastPromotionOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotion) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionOutput) Freight() StageStatusLastPromotionFreightPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotion) *StageStatusLastPromotionFreight { return v.Freight }).(StageStatusLastPromotionFreightPtrOutput)
}

// Name is the name of the Promotion.
func (o StageStatusLastPromotionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotion) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionOutput) Status() StageStatusLastPromotionStatusPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotion) *StageStatusLastPromotionStatus { return v.Status }).(StageStatusLastPromotionStatusPtrOutput)
}

type StageStatusLastPromotionPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotion)(nil)).Elem()
}

func (o StageStatusLastPromotionPtrOutput) ToStageStatusLastPromotionPtrOutput() StageStatusLastPromotionPtrOutput {
	return o
}

func (o StageStatusLastPromotionPtrOutput) ToStageStatusLastPromotionPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionPtrOutput {
	return o
}

func (o StageStatusLastPromotionPtrOutput) Elem() StageStatusLastPromotionOutput {
	return o.ApplyT(func(v *StageStatusLastPromotion) StageStatusLastPromotion {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotion
		return ret
	}).(StageStatusLastPromotionOutput)
}

// FinishedAt is the time at which the Promotion was completed.
func (o StageStatusLastPromotionPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotion) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionPtrOutput) Freight() StageStatusLastPromotionFreightPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotion) *StageStatusLastPromotionFreight {
		if v == nil {
			return nil
		}
		return v.Freight
	}).(StageStatusLastPromotionFreightPtrOutput)
}

// Name is the name of the Promotion.
func (o StageStatusLastPromotionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotion) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionPtrOutput) Status() StageStatusLastPromotionStatusPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotion) *StageStatusLastPromotionStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(StageStatusLastPromotionStatusPtrOutput)
}

// Freight is the freight being promoted.
type StageStatusLastPromotionFreight struct {
	// Charts describes specific versions of specific Helm charts.
	Charts []StageStatusLastPromotionFreightCharts `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits []StageStatusLastPromotionFreightCommits `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images []StageStatusLastPromotionFreightImages `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   *string                                `pulumi:"name"`
	Origin *StageStatusLastPromotionFreightOrigin `pulumi:"origin"`
}

// StageStatusLastPromotionFreightInput is an input type that accepts StageStatusLastPromotionFreightArgs and StageStatusLastPromotionFreightOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightInput` via:
//
//	StageStatusLastPromotionFreightArgs{...}
type StageStatusLastPromotionFreightInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightOutput() StageStatusLastPromotionFreightOutput
	ToStageStatusLastPromotionFreightOutputWithContext(context.Context) StageStatusLastPromotionFreightOutput
}

// Freight is the freight being promoted.
type StageStatusLastPromotionFreightArgs struct {
	// Charts describes specific versions of specific Helm charts.
	Charts StageStatusLastPromotionFreightChartsArrayInput `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits StageStatusLastPromotionFreightCommitsArrayInput `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images StageStatusLastPromotionFreightImagesArrayInput `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   pulumi.StringPtrInput                         `pulumi:"name"`
	Origin StageStatusLastPromotionFreightOriginPtrInput `pulumi:"origin"`
}

func (StageStatusLastPromotionFreightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreight)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightArgs) ToStageStatusLastPromotionFreightOutput() StageStatusLastPromotionFreightOutput {
	return i.ToStageStatusLastPromotionFreightOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightArgs) ToStageStatusLastPromotionFreightOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightOutput)
}

func (i StageStatusLastPromotionFreightArgs) ToStageStatusLastPromotionFreightPtrOutput() StageStatusLastPromotionFreightPtrOutput {
	return i.ToStageStatusLastPromotionFreightPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightArgs) ToStageStatusLastPromotionFreightPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightOutput).ToStageStatusLastPromotionFreightPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionFreightPtrInput is an input type that accepts StageStatusLastPromotionFreightArgs, StageStatusLastPromotionFreightPtr and StageStatusLastPromotionFreightPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightPtrInput` via:
//
//	        StageStatusLastPromotionFreightArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionFreightPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightPtrOutput() StageStatusLastPromotionFreightPtrOutput
	ToStageStatusLastPromotionFreightPtrOutputWithContext(context.Context) StageStatusLastPromotionFreightPtrOutput
}

type stageStatusLastPromotionFreightPtrType StageStatusLastPromotionFreightArgs

func StageStatusLastPromotionFreightPtr(v *StageStatusLastPromotionFreightArgs) StageStatusLastPromotionFreightPtrInput {
	return (*stageStatusLastPromotionFreightPtrType)(v)
}

func (*stageStatusLastPromotionFreightPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionFreight)(nil)).Elem()
}

func (i *stageStatusLastPromotionFreightPtrType) ToStageStatusLastPromotionFreightPtrOutput() StageStatusLastPromotionFreightPtrOutput {
	return i.ToStageStatusLastPromotionFreightPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionFreightPtrType) ToStageStatusLastPromotionFreightPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightPtrOutput)
}

// Freight is the freight being promoted.
type StageStatusLastPromotionFreightOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreight)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightOutput) ToStageStatusLastPromotionFreightOutput() StageStatusLastPromotionFreightOutput {
	return o
}

func (o StageStatusLastPromotionFreightOutput) ToStageStatusLastPromotionFreightOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightOutput {
	return o
}

func (o StageStatusLastPromotionFreightOutput) ToStageStatusLastPromotionFreightPtrOutput() StageStatusLastPromotionFreightPtrOutput {
	return o.ToStageStatusLastPromotionFreightPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionFreightOutput) ToStageStatusLastPromotionFreightPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionFreight) *StageStatusLastPromotionFreight {
		return &v
	}).(StageStatusLastPromotionFreightPtrOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusLastPromotionFreightOutput) Charts() StageStatusLastPromotionFreightChartsArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreight) []StageStatusLastPromotionFreightCharts { return v.Charts }).(StageStatusLastPromotionFreightChartsArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusLastPromotionFreightOutput) Commits() StageStatusLastPromotionFreightCommitsArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreight) []StageStatusLastPromotionFreightCommits { return v.Commits }).(StageStatusLastPromotionFreightCommitsArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusLastPromotionFreightOutput) Images() StageStatusLastPromotionFreightImagesArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreight) []StageStatusLastPromotionFreightImages { return v.Images }).(StageStatusLastPromotionFreightImagesArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusLastPromotionFreightOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreight) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionFreightOutput) Origin() StageStatusLastPromotionFreightOriginPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreight) *StageStatusLastPromotionFreightOrigin { return v.Origin }).(StageStatusLastPromotionFreightOriginPtrOutput)
}

type StageStatusLastPromotionFreightPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionFreight)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightPtrOutput) ToStageStatusLastPromotionFreightPtrOutput() StageStatusLastPromotionFreightPtrOutput {
	return o
}

func (o StageStatusLastPromotionFreightPtrOutput) ToStageStatusLastPromotionFreightPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightPtrOutput {
	return o
}

func (o StageStatusLastPromotionFreightPtrOutput) Elem() StageStatusLastPromotionFreightOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreight) StageStatusLastPromotionFreight {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionFreight
		return ret
	}).(StageStatusLastPromotionFreightOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusLastPromotionFreightPtrOutput) Charts() StageStatusLastPromotionFreightChartsArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreight) []StageStatusLastPromotionFreightCharts {
		if v == nil {
			return nil
		}
		return v.Charts
	}).(StageStatusLastPromotionFreightChartsArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusLastPromotionFreightPtrOutput) Commits() StageStatusLastPromotionFreightCommitsArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreight) []StageStatusLastPromotionFreightCommits {
		if v == nil {
			return nil
		}
		return v.Commits
	}).(StageStatusLastPromotionFreightCommitsArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusLastPromotionFreightPtrOutput) Images() StageStatusLastPromotionFreightImagesArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreight) []StageStatusLastPromotionFreightImages {
		if v == nil {
			return nil
		}
		return v.Images
	}).(StageStatusLastPromotionFreightImagesArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusLastPromotionFreightPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreight) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionFreightPtrOutput) Origin() StageStatusLastPromotionFreightOriginPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreight) *StageStatusLastPromotionFreightOrigin {
		if v == nil {
			return nil
		}
		return v.Origin
	}).(StageStatusLastPromotionFreightOriginPtrOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusLastPromotionFreightCharts struct {
	// Name specifies the name of the chart.
	Name *string `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL *string `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version *string `pulumi:"version"`
}

// StageStatusLastPromotionFreightChartsInput is an input type that accepts StageStatusLastPromotionFreightChartsArgs and StageStatusLastPromotionFreightChartsOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightChartsInput` via:
//
//	StageStatusLastPromotionFreightChartsArgs{...}
type StageStatusLastPromotionFreightChartsInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightChartsOutput() StageStatusLastPromotionFreightChartsOutput
	ToStageStatusLastPromotionFreightChartsOutputWithContext(context.Context) StageStatusLastPromotionFreightChartsOutput
}

// Chart describes a specific version of a Helm chart.
type StageStatusLastPromotionFreightChartsArgs struct {
	// Name specifies the name of the chart.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (StageStatusLastPromotionFreightChartsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightCharts)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightChartsArgs) ToStageStatusLastPromotionFreightChartsOutput() StageStatusLastPromotionFreightChartsOutput {
	return i.ToStageStatusLastPromotionFreightChartsOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightChartsArgs) ToStageStatusLastPromotionFreightChartsOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightChartsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightChartsOutput)
}

// StageStatusLastPromotionFreightChartsArrayInput is an input type that accepts StageStatusLastPromotionFreightChartsArray and StageStatusLastPromotionFreightChartsArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightChartsArrayInput` via:
//
//	StageStatusLastPromotionFreightChartsArray{ StageStatusLastPromotionFreightChartsArgs{...} }
type StageStatusLastPromotionFreightChartsArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightChartsArrayOutput() StageStatusLastPromotionFreightChartsArrayOutput
	ToStageStatusLastPromotionFreightChartsArrayOutputWithContext(context.Context) StageStatusLastPromotionFreightChartsArrayOutput
}

type StageStatusLastPromotionFreightChartsArray []StageStatusLastPromotionFreightChartsInput

func (StageStatusLastPromotionFreightChartsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionFreightCharts)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightChartsArray) ToStageStatusLastPromotionFreightChartsArrayOutput() StageStatusLastPromotionFreightChartsArrayOutput {
	return i.ToStageStatusLastPromotionFreightChartsArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightChartsArray) ToStageStatusLastPromotionFreightChartsArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightChartsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightChartsArrayOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusLastPromotionFreightChartsOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightChartsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightCharts)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightChartsOutput) ToStageStatusLastPromotionFreightChartsOutput() StageStatusLastPromotionFreightChartsOutput {
	return o
}

func (o StageStatusLastPromotionFreightChartsOutput) ToStageStatusLastPromotionFreightChartsOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightChartsOutput {
	return o
}

// Name specifies the name of the chart.
func (o StageStatusLastPromotionFreightChartsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCharts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. Classic chart
// repositories (using HTTP/S) can contain differently named charts. When this
// field points to such a repository, the Name field will specify the name of
// the chart within the repository. In the case of a repository within an OCI
// registry, the URL implicitly points to a specific chart and the Name field
// will be empty.
func (o StageStatusLastPromotionFreightChartsOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCharts) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Version specifies a particular version of the chart.
func (o StageStatusLastPromotionFreightChartsOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCharts) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionFreightChartsArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightChartsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionFreightCharts)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightChartsArrayOutput) ToStageStatusLastPromotionFreightChartsArrayOutput() StageStatusLastPromotionFreightChartsArrayOutput {
	return o
}

func (o StageStatusLastPromotionFreightChartsArrayOutput) ToStageStatusLastPromotionFreightChartsArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightChartsArrayOutput {
	return o
}

func (o StageStatusLastPromotionFreightChartsArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionFreightChartsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionFreightCharts {
		return vs[0].([]StageStatusLastPromotionFreightCharts)[vs[1].(int)]
	}).(StageStatusLastPromotionFreightChartsOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusLastPromotionFreightChartsPatch struct {
	// Name specifies the name of the chart.
	Name *string `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL *string `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version *string `pulumi:"version"`
}

// StageStatusLastPromotionFreightChartsPatchInput is an input type that accepts StageStatusLastPromotionFreightChartsPatchArgs and StageStatusLastPromotionFreightChartsPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightChartsPatchInput` via:
//
//	StageStatusLastPromotionFreightChartsPatchArgs{...}
type StageStatusLastPromotionFreightChartsPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightChartsPatchOutput() StageStatusLastPromotionFreightChartsPatchOutput
	ToStageStatusLastPromotionFreightChartsPatchOutputWithContext(context.Context) StageStatusLastPromotionFreightChartsPatchOutput
}

// Chart describes a specific version of a Helm chart.
type StageStatusLastPromotionFreightChartsPatchArgs struct {
	// Name specifies the name of the chart.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (StageStatusLastPromotionFreightChartsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightChartsPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightChartsPatchArgs) ToStageStatusLastPromotionFreightChartsPatchOutput() StageStatusLastPromotionFreightChartsPatchOutput {
	return i.ToStageStatusLastPromotionFreightChartsPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightChartsPatchArgs) ToStageStatusLastPromotionFreightChartsPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightChartsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightChartsPatchOutput)
}

// StageStatusLastPromotionFreightChartsPatchArrayInput is an input type that accepts StageStatusLastPromotionFreightChartsPatchArray and StageStatusLastPromotionFreightChartsPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightChartsPatchArrayInput` via:
//
//	StageStatusLastPromotionFreightChartsPatchArray{ StageStatusLastPromotionFreightChartsPatchArgs{...} }
type StageStatusLastPromotionFreightChartsPatchArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightChartsPatchArrayOutput() StageStatusLastPromotionFreightChartsPatchArrayOutput
	ToStageStatusLastPromotionFreightChartsPatchArrayOutputWithContext(context.Context) StageStatusLastPromotionFreightChartsPatchArrayOutput
}

type StageStatusLastPromotionFreightChartsPatchArray []StageStatusLastPromotionFreightChartsPatchInput

func (StageStatusLastPromotionFreightChartsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionFreightChartsPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightChartsPatchArray) ToStageStatusLastPromotionFreightChartsPatchArrayOutput() StageStatusLastPromotionFreightChartsPatchArrayOutput {
	return i.ToStageStatusLastPromotionFreightChartsPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightChartsPatchArray) ToStageStatusLastPromotionFreightChartsPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightChartsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightChartsPatchArrayOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusLastPromotionFreightChartsPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightChartsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightChartsPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightChartsPatchOutput) ToStageStatusLastPromotionFreightChartsPatchOutput() StageStatusLastPromotionFreightChartsPatchOutput {
	return o
}

func (o StageStatusLastPromotionFreightChartsPatchOutput) ToStageStatusLastPromotionFreightChartsPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightChartsPatchOutput {
	return o
}

// Name specifies the name of the chart.
func (o StageStatusLastPromotionFreightChartsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightChartsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. Classic chart
// repositories (using HTTP/S) can contain differently named charts. When this
// field points to such a repository, the Name field will specify the name of
// the chart within the repository. In the case of a repository within an OCI
// registry, the URL implicitly points to a specific chart and the Name field
// will be empty.
func (o StageStatusLastPromotionFreightChartsPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightChartsPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Version specifies a particular version of the chart.
func (o StageStatusLastPromotionFreightChartsPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightChartsPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionFreightChartsPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightChartsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionFreightChartsPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightChartsPatchArrayOutput) ToStageStatusLastPromotionFreightChartsPatchArrayOutput() StageStatusLastPromotionFreightChartsPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionFreightChartsPatchArrayOutput) ToStageStatusLastPromotionFreightChartsPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightChartsPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionFreightChartsPatchArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionFreightChartsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionFreightChartsPatch {
		return vs[0].([]StageStatusLastPromotionFreightChartsPatch)[vs[1].(int)]
	}).(StageStatusLastPromotionFreightChartsPatchOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusLastPromotionFreightCommits struct {
	// Author is the author of the commit.
	Author *string `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch *string `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer *string `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id *string `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message *string `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL *string `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag *string `pulumi:"tag"`
}

// StageStatusLastPromotionFreightCommitsInput is an input type that accepts StageStatusLastPromotionFreightCommitsArgs and StageStatusLastPromotionFreightCommitsOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightCommitsInput` via:
//
//	StageStatusLastPromotionFreightCommitsArgs{...}
type StageStatusLastPromotionFreightCommitsInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightCommitsOutput() StageStatusLastPromotionFreightCommitsOutput
	ToStageStatusLastPromotionFreightCommitsOutputWithContext(context.Context) StageStatusLastPromotionFreightCommitsOutput
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusLastPromotionFreightCommitsArgs struct {
	// Author is the author of the commit.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer pulumi.StringPtrInput `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusLastPromotionFreightCommitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightCommits)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightCommitsArgs) ToStageStatusLastPromotionFreightCommitsOutput() StageStatusLastPromotionFreightCommitsOutput {
	return i.ToStageStatusLastPromotionFreightCommitsOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightCommitsArgs) ToStageStatusLastPromotionFreightCommitsOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightCommitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightCommitsOutput)
}

// StageStatusLastPromotionFreightCommitsArrayInput is an input type that accepts StageStatusLastPromotionFreightCommitsArray and StageStatusLastPromotionFreightCommitsArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightCommitsArrayInput` via:
//
//	StageStatusLastPromotionFreightCommitsArray{ StageStatusLastPromotionFreightCommitsArgs{...} }
type StageStatusLastPromotionFreightCommitsArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightCommitsArrayOutput() StageStatusLastPromotionFreightCommitsArrayOutput
	ToStageStatusLastPromotionFreightCommitsArrayOutputWithContext(context.Context) StageStatusLastPromotionFreightCommitsArrayOutput
}

type StageStatusLastPromotionFreightCommitsArray []StageStatusLastPromotionFreightCommitsInput

func (StageStatusLastPromotionFreightCommitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionFreightCommits)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightCommitsArray) ToStageStatusLastPromotionFreightCommitsArrayOutput() StageStatusLastPromotionFreightCommitsArrayOutput {
	return i.ToStageStatusLastPromotionFreightCommitsArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightCommitsArray) ToStageStatusLastPromotionFreightCommitsArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightCommitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightCommitsArrayOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusLastPromotionFreightCommitsOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightCommitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightCommits)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightCommitsOutput) ToStageStatusLastPromotionFreightCommitsOutput() StageStatusLastPromotionFreightCommitsOutput {
	return o
}

func (o StageStatusLastPromotionFreightCommitsOutput) ToStageStatusLastPromotionFreightCommitsOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightCommitsOutput {
	return o
}

// Author is the author of the commit.
func (o StageStatusLastPromotionFreightCommitsOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCommits) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Branch denotes the branch of the repository where this commit was found.
func (o StageStatusLastPromotionFreightCommitsOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCommits) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Committer is the person who committed the commit.
func (o StageStatusLastPromotionFreightCommitsOutput) Committer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCommits) *string { return v.Committer }).(pulumi.StringPtrOutput)
}

// ID is the ID of a specific commit in the Git repository specified by
// RepoURL.
func (o StageStatusLastPromotionFreightCommitsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCommits) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message is the message associated with the commit. At present, this only
// contains the first line (subject) of the commit message.
func (o StageStatusLastPromotionFreightCommitsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCommits) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// RepoURL is the URL of a Git repository.
func (o StageStatusLastPromotionFreightCommitsOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCommits) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag denotes a tag in the repository that matched selection criteria and
// resolved to this commit.
func (o StageStatusLastPromotionFreightCommitsOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCommits) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionFreightCommitsArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightCommitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionFreightCommits)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightCommitsArrayOutput) ToStageStatusLastPromotionFreightCommitsArrayOutput() StageStatusLastPromotionFreightCommitsArrayOutput {
	return o
}

func (o StageStatusLastPromotionFreightCommitsArrayOutput) ToStageStatusLastPromotionFreightCommitsArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightCommitsArrayOutput {
	return o
}

func (o StageStatusLastPromotionFreightCommitsArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionFreightCommitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionFreightCommits {
		return vs[0].([]StageStatusLastPromotionFreightCommits)[vs[1].(int)]
	}).(StageStatusLastPromotionFreightCommitsOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusLastPromotionFreightCommitsPatch struct {
	// Author is the author of the commit.
	Author *string `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch *string `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer *string `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id *string `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message *string `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL *string `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag *string `pulumi:"tag"`
}

// StageStatusLastPromotionFreightCommitsPatchInput is an input type that accepts StageStatusLastPromotionFreightCommitsPatchArgs and StageStatusLastPromotionFreightCommitsPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightCommitsPatchInput` via:
//
//	StageStatusLastPromotionFreightCommitsPatchArgs{...}
type StageStatusLastPromotionFreightCommitsPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightCommitsPatchOutput() StageStatusLastPromotionFreightCommitsPatchOutput
	ToStageStatusLastPromotionFreightCommitsPatchOutputWithContext(context.Context) StageStatusLastPromotionFreightCommitsPatchOutput
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusLastPromotionFreightCommitsPatchArgs struct {
	// Author is the author of the commit.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer pulumi.StringPtrInput `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusLastPromotionFreightCommitsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightCommitsPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightCommitsPatchArgs) ToStageStatusLastPromotionFreightCommitsPatchOutput() StageStatusLastPromotionFreightCommitsPatchOutput {
	return i.ToStageStatusLastPromotionFreightCommitsPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightCommitsPatchArgs) ToStageStatusLastPromotionFreightCommitsPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightCommitsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightCommitsPatchOutput)
}

// StageStatusLastPromotionFreightCommitsPatchArrayInput is an input type that accepts StageStatusLastPromotionFreightCommitsPatchArray and StageStatusLastPromotionFreightCommitsPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightCommitsPatchArrayInput` via:
//
//	StageStatusLastPromotionFreightCommitsPatchArray{ StageStatusLastPromotionFreightCommitsPatchArgs{...} }
type StageStatusLastPromotionFreightCommitsPatchArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightCommitsPatchArrayOutput() StageStatusLastPromotionFreightCommitsPatchArrayOutput
	ToStageStatusLastPromotionFreightCommitsPatchArrayOutputWithContext(context.Context) StageStatusLastPromotionFreightCommitsPatchArrayOutput
}

type StageStatusLastPromotionFreightCommitsPatchArray []StageStatusLastPromotionFreightCommitsPatchInput

func (StageStatusLastPromotionFreightCommitsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionFreightCommitsPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightCommitsPatchArray) ToStageStatusLastPromotionFreightCommitsPatchArrayOutput() StageStatusLastPromotionFreightCommitsPatchArrayOutput {
	return i.ToStageStatusLastPromotionFreightCommitsPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightCommitsPatchArray) ToStageStatusLastPromotionFreightCommitsPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightCommitsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightCommitsPatchArrayOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusLastPromotionFreightCommitsPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightCommitsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightCommitsPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightCommitsPatchOutput) ToStageStatusLastPromotionFreightCommitsPatchOutput() StageStatusLastPromotionFreightCommitsPatchOutput {
	return o
}

func (o StageStatusLastPromotionFreightCommitsPatchOutput) ToStageStatusLastPromotionFreightCommitsPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightCommitsPatchOutput {
	return o
}

// Author is the author of the commit.
func (o StageStatusLastPromotionFreightCommitsPatchOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCommitsPatch) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Branch denotes the branch of the repository where this commit was found.
func (o StageStatusLastPromotionFreightCommitsPatchOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCommitsPatch) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Committer is the person who committed the commit.
func (o StageStatusLastPromotionFreightCommitsPatchOutput) Committer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCommitsPatch) *string { return v.Committer }).(pulumi.StringPtrOutput)
}

// ID is the ID of a specific commit in the Git repository specified by
// RepoURL.
func (o StageStatusLastPromotionFreightCommitsPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCommitsPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message is the message associated with the commit. At present, this only
// contains the first line (subject) of the commit message.
func (o StageStatusLastPromotionFreightCommitsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCommitsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// RepoURL is the URL of a Git repository.
func (o StageStatusLastPromotionFreightCommitsPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCommitsPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag denotes a tag in the repository that matched selection criteria and
// resolved to this commit.
func (o StageStatusLastPromotionFreightCommitsPatchOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightCommitsPatch) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionFreightCommitsPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightCommitsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionFreightCommitsPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightCommitsPatchArrayOutput) ToStageStatusLastPromotionFreightCommitsPatchArrayOutput() StageStatusLastPromotionFreightCommitsPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionFreightCommitsPatchArrayOutput) ToStageStatusLastPromotionFreightCommitsPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightCommitsPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionFreightCommitsPatchArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionFreightCommitsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionFreightCommitsPatch {
		return vs[0].([]StageStatusLastPromotionFreightCommitsPatch)[vs[1].(int)]
	}).(StageStatusLastPromotionFreightCommitsPatchOutput)
}

// Image describes a specific version of a container image.
type StageStatusLastPromotionFreightImages struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations map[string]string `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest *string `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL *string `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag *string `pulumi:"tag"`
}

// StageStatusLastPromotionFreightImagesInput is an input type that accepts StageStatusLastPromotionFreightImagesArgs and StageStatusLastPromotionFreightImagesOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightImagesInput` via:
//
//	StageStatusLastPromotionFreightImagesArgs{...}
type StageStatusLastPromotionFreightImagesInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightImagesOutput() StageStatusLastPromotionFreightImagesOutput
	ToStageStatusLastPromotionFreightImagesOutputWithContext(context.Context) StageStatusLastPromotionFreightImagesOutput
}

// Image describes a specific version of a container image.
type StageStatusLastPromotionFreightImagesArgs struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusLastPromotionFreightImagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightImages)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightImagesArgs) ToStageStatusLastPromotionFreightImagesOutput() StageStatusLastPromotionFreightImagesOutput {
	return i.ToStageStatusLastPromotionFreightImagesOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightImagesArgs) ToStageStatusLastPromotionFreightImagesOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightImagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightImagesOutput)
}

// StageStatusLastPromotionFreightImagesArrayInput is an input type that accepts StageStatusLastPromotionFreightImagesArray and StageStatusLastPromotionFreightImagesArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightImagesArrayInput` via:
//
//	StageStatusLastPromotionFreightImagesArray{ StageStatusLastPromotionFreightImagesArgs{...} }
type StageStatusLastPromotionFreightImagesArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightImagesArrayOutput() StageStatusLastPromotionFreightImagesArrayOutput
	ToStageStatusLastPromotionFreightImagesArrayOutputWithContext(context.Context) StageStatusLastPromotionFreightImagesArrayOutput
}

type StageStatusLastPromotionFreightImagesArray []StageStatusLastPromotionFreightImagesInput

func (StageStatusLastPromotionFreightImagesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionFreightImages)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightImagesArray) ToStageStatusLastPromotionFreightImagesArrayOutput() StageStatusLastPromotionFreightImagesArrayOutput {
	return i.ToStageStatusLastPromotionFreightImagesArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightImagesArray) ToStageStatusLastPromotionFreightImagesArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightImagesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightImagesArrayOutput)
}

// Image describes a specific version of a container image.
type StageStatusLastPromotionFreightImagesOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightImagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightImages)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightImagesOutput) ToStageStatusLastPromotionFreightImagesOutput() StageStatusLastPromotionFreightImagesOutput {
	return o
}

func (o StageStatusLastPromotionFreightImagesOutput) ToStageStatusLastPromotionFreightImagesOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightImagesOutput {
	return o
}

// Annotations is a map of arbitrary metadata for the image.
func (o StageStatusLastPromotionFreightImagesOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightImages) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Digest identifies a specific version of the image in the repository
// specified by RepoURL. This is a more precise identifier than Tag.
func (o StageStatusLastPromotionFreightImagesOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightImages) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// GitRepoURL specifies the URL of a Git repository that contains the source
// code for the image repository referenced by the RepoURL field if Kargo was
// able to infer it.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o StageStatusLastPromotionFreightImagesOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightImages) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// RepoURL describes the repository in which the image can be found.
func (o StageStatusLastPromotionFreightImagesOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightImages) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag identifies a specific version of the image in the repository specified
// by RepoURL.
func (o StageStatusLastPromotionFreightImagesOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightImages) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionFreightImagesArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightImagesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionFreightImages)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightImagesArrayOutput) ToStageStatusLastPromotionFreightImagesArrayOutput() StageStatusLastPromotionFreightImagesArrayOutput {
	return o
}

func (o StageStatusLastPromotionFreightImagesArrayOutput) ToStageStatusLastPromotionFreightImagesArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightImagesArrayOutput {
	return o
}

func (o StageStatusLastPromotionFreightImagesArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionFreightImagesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionFreightImages {
		return vs[0].([]StageStatusLastPromotionFreightImages)[vs[1].(int)]
	}).(StageStatusLastPromotionFreightImagesOutput)
}

// Image describes a specific version of a container image.
type StageStatusLastPromotionFreightImagesPatch struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations map[string]string `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest *string `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL *string `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag *string `pulumi:"tag"`
}

// StageStatusLastPromotionFreightImagesPatchInput is an input type that accepts StageStatusLastPromotionFreightImagesPatchArgs and StageStatusLastPromotionFreightImagesPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightImagesPatchInput` via:
//
//	StageStatusLastPromotionFreightImagesPatchArgs{...}
type StageStatusLastPromotionFreightImagesPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightImagesPatchOutput() StageStatusLastPromotionFreightImagesPatchOutput
	ToStageStatusLastPromotionFreightImagesPatchOutputWithContext(context.Context) StageStatusLastPromotionFreightImagesPatchOutput
}

// Image describes a specific version of a container image.
type StageStatusLastPromotionFreightImagesPatchArgs struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusLastPromotionFreightImagesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightImagesPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightImagesPatchArgs) ToStageStatusLastPromotionFreightImagesPatchOutput() StageStatusLastPromotionFreightImagesPatchOutput {
	return i.ToStageStatusLastPromotionFreightImagesPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightImagesPatchArgs) ToStageStatusLastPromotionFreightImagesPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightImagesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightImagesPatchOutput)
}

// StageStatusLastPromotionFreightImagesPatchArrayInput is an input type that accepts StageStatusLastPromotionFreightImagesPatchArray and StageStatusLastPromotionFreightImagesPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightImagesPatchArrayInput` via:
//
//	StageStatusLastPromotionFreightImagesPatchArray{ StageStatusLastPromotionFreightImagesPatchArgs{...} }
type StageStatusLastPromotionFreightImagesPatchArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightImagesPatchArrayOutput() StageStatusLastPromotionFreightImagesPatchArrayOutput
	ToStageStatusLastPromotionFreightImagesPatchArrayOutputWithContext(context.Context) StageStatusLastPromotionFreightImagesPatchArrayOutput
}

type StageStatusLastPromotionFreightImagesPatchArray []StageStatusLastPromotionFreightImagesPatchInput

func (StageStatusLastPromotionFreightImagesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionFreightImagesPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightImagesPatchArray) ToStageStatusLastPromotionFreightImagesPatchArrayOutput() StageStatusLastPromotionFreightImagesPatchArrayOutput {
	return i.ToStageStatusLastPromotionFreightImagesPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightImagesPatchArray) ToStageStatusLastPromotionFreightImagesPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightImagesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightImagesPatchArrayOutput)
}

// Image describes a specific version of a container image.
type StageStatusLastPromotionFreightImagesPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightImagesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightImagesPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightImagesPatchOutput) ToStageStatusLastPromotionFreightImagesPatchOutput() StageStatusLastPromotionFreightImagesPatchOutput {
	return o
}

func (o StageStatusLastPromotionFreightImagesPatchOutput) ToStageStatusLastPromotionFreightImagesPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightImagesPatchOutput {
	return o
}

// Annotations is a map of arbitrary metadata for the image.
func (o StageStatusLastPromotionFreightImagesPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightImagesPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Digest identifies a specific version of the image in the repository
// specified by RepoURL. This is a more precise identifier than Tag.
func (o StageStatusLastPromotionFreightImagesPatchOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightImagesPatch) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// GitRepoURL specifies the URL of a Git repository that contains the source
// code for the image repository referenced by the RepoURL field if Kargo was
// able to infer it.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o StageStatusLastPromotionFreightImagesPatchOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightImagesPatch) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// RepoURL describes the repository in which the image can be found.
func (o StageStatusLastPromotionFreightImagesPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightImagesPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag identifies a specific version of the image in the repository specified
// by RepoURL.
func (o StageStatusLastPromotionFreightImagesPatchOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightImagesPatch) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionFreightImagesPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightImagesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionFreightImagesPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightImagesPatchArrayOutput) ToStageStatusLastPromotionFreightImagesPatchArrayOutput() StageStatusLastPromotionFreightImagesPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionFreightImagesPatchArrayOutput) ToStageStatusLastPromotionFreightImagesPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightImagesPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionFreightImagesPatchArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionFreightImagesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionFreightImagesPatch {
		return vs[0].([]StageStatusLastPromotionFreightImagesPatch)[vs[1].(int)]
	}).(StageStatusLastPromotionFreightImagesPatchOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusLastPromotionFreightOrigin struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name *string `pulumi:"name"`
}

// StageStatusLastPromotionFreightOriginInput is an input type that accepts StageStatusLastPromotionFreightOriginArgs and StageStatusLastPromotionFreightOriginOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightOriginInput` via:
//
//	StageStatusLastPromotionFreightOriginArgs{...}
type StageStatusLastPromotionFreightOriginInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightOriginOutput() StageStatusLastPromotionFreightOriginOutput
	ToStageStatusLastPromotionFreightOriginOutputWithContext(context.Context) StageStatusLastPromotionFreightOriginOutput
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusLastPromotionFreightOriginArgs struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StageStatusLastPromotionFreightOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightOrigin)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightOriginArgs) ToStageStatusLastPromotionFreightOriginOutput() StageStatusLastPromotionFreightOriginOutput {
	return i.ToStageStatusLastPromotionFreightOriginOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightOriginArgs) ToStageStatusLastPromotionFreightOriginOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightOriginOutput)
}

func (i StageStatusLastPromotionFreightOriginArgs) ToStageStatusLastPromotionFreightOriginPtrOutput() StageStatusLastPromotionFreightOriginPtrOutput {
	return i.ToStageStatusLastPromotionFreightOriginPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightOriginArgs) ToStageStatusLastPromotionFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightOriginOutput).ToStageStatusLastPromotionFreightOriginPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionFreightOriginPtrInput is an input type that accepts StageStatusLastPromotionFreightOriginArgs, StageStatusLastPromotionFreightOriginPtr and StageStatusLastPromotionFreightOriginPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightOriginPtrInput` via:
//
//	        StageStatusLastPromotionFreightOriginArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionFreightOriginPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightOriginPtrOutput() StageStatusLastPromotionFreightOriginPtrOutput
	ToStageStatusLastPromotionFreightOriginPtrOutputWithContext(context.Context) StageStatusLastPromotionFreightOriginPtrOutput
}

type stageStatusLastPromotionFreightOriginPtrType StageStatusLastPromotionFreightOriginArgs

func StageStatusLastPromotionFreightOriginPtr(v *StageStatusLastPromotionFreightOriginArgs) StageStatusLastPromotionFreightOriginPtrInput {
	return (*stageStatusLastPromotionFreightOriginPtrType)(v)
}

func (*stageStatusLastPromotionFreightOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionFreightOrigin)(nil)).Elem()
}

func (i *stageStatusLastPromotionFreightOriginPtrType) ToStageStatusLastPromotionFreightOriginPtrOutput() StageStatusLastPromotionFreightOriginPtrOutput {
	return i.ToStageStatusLastPromotionFreightOriginPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionFreightOriginPtrType) ToStageStatusLastPromotionFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightOriginPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusLastPromotionFreightOriginOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightOrigin)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightOriginOutput) ToStageStatusLastPromotionFreightOriginOutput() StageStatusLastPromotionFreightOriginOutput {
	return o
}

func (o StageStatusLastPromotionFreightOriginOutput) ToStageStatusLastPromotionFreightOriginOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightOriginOutput {
	return o
}

func (o StageStatusLastPromotionFreightOriginOutput) ToStageStatusLastPromotionFreightOriginPtrOutput() StageStatusLastPromotionFreightOriginPtrOutput {
	return o.ToStageStatusLastPromotionFreightOriginPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionFreightOriginOutput) ToStageStatusLastPromotionFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionFreightOrigin) *StageStatusLastPromotionFreightOrigin {
		return &v
	}).(StageStatusLastPromotionFreightOriginPtrOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusLastPromotionFreightOriginOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightOrigin) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusLastPromotionFreightOriginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightOrigin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionFreightOriginPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionFreightOrigin)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightOriginPtrOutput) ToStageStatusLastPromotionFreightOriginPtrOutput() StageStatusLastPromotionFreightOriginPtrOutput {
	return o
}

func (o StageStatusLastPromotionFreightOriginPtrOutput) ToStageStatusLastPromotionFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightOriginPtrOutput {
	return o
}

func (o StageStatusLastPromotionFreightOriginPtrOutput) Elem() StageStatusLastPromotionFreightOriginOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreightOrigin) StageStatusLastPromotionFreightOrigin {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionFreightOrigin
		return ret
	}).(StageStatusLastPromotionFreightOriginOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusLastPromotionFreightOriginPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreightOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusLastPromotionFreightOriginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreightOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusLastPromotionFreightOriginPatch struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name *string `pulumi:"name"`
}

// StageStatusLastPromotionFreightOriginPatchInput is an input type that accepts StageStatusLastPromotionFreightOriginPatchArgs and StageStatusLastPromotionFreightOriginPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightOriginPatchInput` via:
//
//	StageStatusLastPromotionFreightOriginPatchArgs{...}
type StageStatusLastPromotionFreightOriginPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightOriginPatchOutput() StageStatusLastPromotionFreightOriginPatchOutput
	ToStageStatusLastPromotionFreightOriginPatchOutputWithContext(context.Context) StageStatusLastPromotionFreightOriginPatchOutput
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusLastPromotionFreightOriginPatchArgs struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StageStatusLastPromotionFreightOriginPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightOriginPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightOriginPatchArgs) ToStageStatusLastPromotionFreightOriginPatchOutput() StageStatusLastPromotionFreightOriginPatchOutput {
	return i.ToStageStatusLastPromotionFreightOriginPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightOriginPatchArgs) ToStageStatusLastPromotionFreightOriginPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightOriginPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightOriginPatchOutput)
}

func (i StageStatusLastPromotionFreightOriginPatchArgs) ToStageStatusLastPromotionFreightOriginPatchPtrOutput() StageStatusLastPromotionFreightOriginPatchPtrOutput {
	return i.ToStageStatusLastPromotionFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightOriginPatchArgs) ToStageStatusLastPromotionFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightOriginPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightOriginPatchOutput).ToStageStatusLastPromotionFreightOriginPatchPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionFreightOriginPatchPtrInput is an input type that accepts StageStatusLastPromotionFreightOriginPatchArgs, StageStatusLastPromotionFreightOriginPatchPtr and StageStatusLastPromotionFreightOriginPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightOriginPatchPtrInput` via:
//
//	        StageStatusLastPromotionFreightOriginPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionFreightOriginPatchPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightOriginPatchPtrOutput() StageStatusLastPromotionFreightOriginPatchPtrOutput
	ToStageStatusLastPromotionFreightOriginPatchPtrOutputWithContext(context.Context) StageStatusLastPromotionFreightOriginPatchPtrOutput
}

type stageStatusLastPromotionFreightOriginPatchPtrType StageStatusLastPromotionFreightOriginPatchArgs

func StageStatusLastPromotionFreightOriginPatchPtr(v *StageStatusLastPromotionFreightOriginPatchArgs) StageStatusLastPromotionFreightOriginPatchPtrInput {
	return (*stageStatusLastPromotionFreightOriginPatchPtrType)(v)
}

func (*stageStatusLastPromotionFreightOriginPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionFreightOriginPatch)(nil)).Elem()
}

func (i *stageStatusLastPromotionFreightOriginPatchPtrType) ToStageStatusLastPromotionFreightOriginPatchPtrOutput() StageStatusLastPromotionFreightOriginPatchPtrOutput {
	return i.ToStageStatusLastPromotionFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionFreightOriginPatchPtrType) ToStageStatusLastPromotionFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightOriginPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightOriginPatchPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusLastPromotionFreightOriginPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightOriginPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightOriginPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightOriginPatchOutput) ToStageStatusLastPromotionFreightOriginPatchOutput() StageStatusLastPromotionFreightOriginPatchOutput {
	return o
}

func (o StageStatusLastPromotionFreightOriginPatchOutput) ToStageStatusLastPromotionFreightOriginPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightOriginPatchOutput {
	return o
}

func (o StageStatusLastPromotionFreightOriginPatchOutput) ToStageStatusLastPromotionFreightOriginPatchPtrOutput() StageStatusLastPromotionFreightOriginPatchPtrOutput {
	return o.ToStageStatusLastPromotionFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionFreightOriginPatchOutput) ToStageStatusLastPromotionFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightOriginPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionFreightOriginPatch) *StageStatusLastPromotionFreightOriginPatch {
		return &v
	}).(StageStatusLastPromotionFreightOriginPatchPtrOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusLastPromotionFreightOriginPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightOriginPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusLastPromotionFreightOriginPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightOriginPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionFreightOriginPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightOriginPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionFreightOriginPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightOriginPatchPtrOutput) ToStageStatusLastPromotionFreightOriginPatchPtrOutput() StageStatusLastPromotionFreightOriginPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionFreightOriginPatchPtrOutput) ToStageStatusLastPromotionFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightOriginPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionFreightOriginPatchPtrOutput) Elem() StageStatusLastPromotionFreightOriginPatchOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreightOriginPatch) StageStatusLastPromotionFreightOriginPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionFreightOriginPatch
		return ret
	}).(StageStatusLastPromotionFreightOriginPatchOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusLastPromotionFreightOriginPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreightOriginPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusLastPromotionFreightOriginPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreightOriginPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Freight is the freight being promoted.
type StageStatusLastPromotionFreightPatch struct {
	// Charts describes specific versions of specific Helm charts.
	Charts []StageStatusLastPromotionFreightChartsPatch `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits []StageStatusLastPromotionFreightCommitsPatch `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images []StageStatusLastPromotionFreightImagesPatch `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   *string                                     `pulumi:"name"`
	Origin *StageStatusLastPromotionFreightOriginPatch `pulumi:"origin"`
}

// StageStatusLastPromotionFreightPatchInput is an input type that accepts StageStatusLastPromotionFreightPatchArgs and StageStatusLastPromotionFreightPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightPatchInput` via:
//
//	StageStatusLastPromotionFreightPatchArgs{...}
type StageStatusLastPromotionFreightPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightPatchOutput() StageStatusLastPromotionFreightPatchOutput
	ToStageStatusLastPromotionFreightPatchOutputWithContext(context.Context) StageStatusLastPromotionFreightPatchOutput
}

// Freight is the freight being promoted.
type StageStatusLastPromotionFreightPatchArgs struct {
	// Charts describes specific versions of specific Helm charts.
	Charts StageStatusLastPromotionFreightChartsPatchArrayInput `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits StageStatusLastPromotionFreightCommitsPatchArrayInput `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images StageStatusLastPromotionFreightImagesPatchArrayInput `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   pulumi.StringPtrInput                              `pulumi:"name"`
	Origin StageStatusLastPromotionFreightOriginPatchPtrInput `pulumi:"origin"`
}

func (StageStatusLastPromotionFreightPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionFreightPatchArgs) ToStageStatusLastPromotionFreightPatchOutput() StageStatusLastPromotionFreightPatchOutput {
	return i.ToStageStatusLastPromotionFreightPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightPatchArgs) ToStageStatusLastPromotionFreightPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightPatchOutput)
}

func (i StageStatusLastPromotionFreightPatchArgs) ToStageStatusLastPromotionFreightPatchPtrOutput() StageStatusLastPromotionFreightPatchPtrOutput {
	return i.ToStageStatusLastPromotionFreightPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionFreightPatchArgs) ToStageStatusLastPromotionFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightPatchOutput).ToStageStatusLastPromotionFreightPatchPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionFreightPatchPtrInput is an input type that accepts StageStatusLastPromotionFreightPatchArgs, StageStatusLastPromotionFreightPatchPtr and StageStatusLastPromotionFreightPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionFreightPatchPtrInput` via:
//
//	        StageStatusLastPromotionFreightPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionFreightPatchPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionFreightPatchPtrOutput() StageStatusLastPromotionFreightPatchPtrOutput
	ToStageStatusLastPromotionFreightPatchPtrOutputWithContext(context.Context) StageStatusLastPromotionFreightPatchPtrOutput
}

type stageStatusLastPromotionFreightPatchPtrType StageStatusLastPromotionFreightPatchArgs

func StageStatusLastPromotionFreightPatchPtr(v *StageStatusLastPromotionFreightPatchArgs) StageStatusLastPromotionFreightPatchPtrInput {
	return (*stageStatusLastPromotionFreightPatchPtrType)(v)
}

func (*stageStatusLastPromotionFreightPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionFreightPatch)(nil)).Elem()
}

func (i *stageStatusLastPromotionFreightPatchPtrType) ToStageStatusLastPromotionFreightPatchPtrOutput() StageStatusLastPromotionFreightPatchPtrOutput {
	return i.ToStageStatusLastPromotionFreightPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionFreightPatchPtrType) ToStageStatusLastPromotionFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionFreightPatchPtrOutput)
}

// Freight is the freight being promoted.
type StageStatusLastPromotionFreightPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionFreightPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightPatchOutput) ToStageStatusLastPromotionFreightPatchOutput() StageStatusLastPromotionFreightPatchOutput {
	return o
}

func (o StageStatusLastPromotionFreightPatchOutput) ToStageStatusLastPromotionFreightPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightPatchOutput {
	return o
}

func (o StageStatusLastPromotionFreightPatchOutput) ToStageStatusLastPromotionFreightPatchPtrOutput() StageStatusLastPromotionFreightPatchPtrOutput {
	return o.ToStageStatusLastPromotionFreightPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionFreightPatchOutput) ToStageStatusLastPromotionFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionFreightPatch) *StageStatusLastPromotionFreightPatch {
		return &v
	}).(StageStatusLastPromotionFreightPatchPtrOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusLastPromotionFreightPatchOutput) Charts() StageStatusLastPromotionFreightChartsPatchArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightPatch) []StageStatusLastPromotionFreightChartsPatch {
		return v.Charts
	}).(StageStatusLastPromotionFreightChartsPatchArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusLastPromotionFreightPatchOutput) Commits() StageStatusLastPromotionFreightCommitsPatchArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightPatch) []StageStatusLastPromotionFreightCommitsPatch {
		return v.Commits
	}).(StageStatusLastPromotionFreightCommitsPatchArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusLastPromotionFreightPatchOutput) Images() StageStatusLastPromotionFreightImagesPatchArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightPatch) []StageStatusLastPromotionFreightImagesPatch {
		return v.Images
	}).(StageStatusLastPromotionFreightImagesPatchArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusLastPromotionFreightPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionFreightPatchOutput) Origin() StageStatusLastPromotionFreightOriginPatchPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionFreightPatch) *StageStatusLastPromotionFreightOriginPatch {
		return v.Origin
	}).(StageStatusLastPromotionFreightOriginPatchPtrOutput)
}

type StageStatusLastPromotionFreightPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionFreightPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionFreightPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionFreightPatchPtrOutput) ToStageStatusLastPromotionFreightPatchPtrOutput() StageStatusLastPromotionFreightPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionFreightPatchPtrOutput) ToStageStatusLastPromotionFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionFreightPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionFreightPatchPtrOutput) Elem() StageStatusLastPromotionFreightPatchOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreightPatch) StageStatusLastPromotionFreightPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionFreightPatch
		return ret
	}).(StageStatusLastPromotionFreightPatchOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusLastPromotionFreightPatchPtrOutput) Charts() StageStatusLastPromotionFreightChartsPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreightPatch) []StageStatusLastPromotionFreightChartsPatch {
		if v == nil {
			return nil
		}
		return v.Charts
	}).(StageStatusLastPromotionFreightChartsPatchArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusLastPromotionFreightPatchPtrOutput) Commits() StageStatusLastPromotionFreightCommitsPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreightPatch) []StageStatusLastPromotionFreightCommitsPatch {
		if v == nil {
			return nil
		}
		return v.Commits
	}).(StageStatusLastPromotionFreightCommitsPatchArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusLastPromotionFreightPatchPtrOutput) Images() StageStatusLastPromotionFreightImagesPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreightPatch) []StageStatusLastPromotionFreightImagesPatch {
		if v == nil {
			return nil
		}
		return v.Images
	}).(StageStatusLastPromotionFreightImagesPatchArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusLastPromotionFreightPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreightPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionFreightPatchPtrOutput) Origin() StageStatusLastPromotionFreightOriginPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionFreightPatch) *StageStatusLastPromotionFreightOriginPatch {
		if v == nil {
			return nil
		}
		return v.Origin
	}).(StageStatusLastPromotionFreightOriginPatchPtrOutput)
}

// LastPromotion is a reference to the last completed promotion.
type StageStatusLastPromotionPatch struct {
	// FinishedAt is the time at which the Promotion was completed.
	FinishedAt *string                               `pulumi:"finishedAt"`
	Freight    *StageStatusLastPromotionFreightPatch `pulumi:"freight"`
	// Name is the name of the Promotion.
	Name   *string                              `pulumi:"name"`
	Status *StageStatusLastPromotionStatusPatch `pulumi:"status"`
}

// StageStatusLastPromotionPatchInput is an input type that accepts StageStatusLastPromotionPatchArgs and StageStatusLastPromotionPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionPatchInput` via:
//
//	StageStatusLastPromotionPatchArgs{...}
type StageStatusLastPromotionPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionPatchOutput() StageStatusLastPromotionPatchOutput
	ToStageStatusLastPromotionPatchOutputWithContext(context.Context) StageStatusLastPromotionPatchOutput
}

// LastPromotion is a reference to the last completed promotion.
type StageStatusLastPromotionPatchArgs struct {
	// FinishedAt is the time at which the Promotion was completed.
	FinishedAt pulumi.StringPtrInput                        `pulumi:"finishedAt"`
	Freight    StageStatusLastPromotionFreightPatchPtrInput `pulumi:"freight"`
	// Name is the name of the Promotion.
	Name   pulumi.StringPtrInput                       `pulumi:"name"`
	Status StageStatusLastPromotionStatusPatchPtrInput `pulumi:"status"`
}

func (StageStatusLastPromotionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionPatchArgs) ToStageStatusLastPromotionPatchOutput() StageStatusLastPromotionPatchOutput {
	return i.ToStageStatusLastPromotionPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionPatchArgs) ToStageStatusLastPromotionPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionPatchOutput)
}

func (i StageStatusLastPromotionPatchArgs) ToStageStatusLastPromotionPatchPtrOutput() StageStatusLastPromotionPatchPtrOutput {
	return i.ToStageStatusLastPromotionPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionPatchArgs) ToStageStatusLastPromotionPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionPatchOutput).ToStageStatusLastPromotionPatchPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionPatchPtrInput is an input type that accepts StageStatusLastPromotionPatchArgs, StageStatusLastPromotionPatchPtr and StageStatusLastPromotionPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionPatchPtrInput` via:
//
//	        StageStatusLastPromotionPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionPatchPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionPatchPtrOutput() StageStatusLastPromotionPatchPtrOutput
	ToStageStatusLastPromotionPatchPtrOutputWithContext(context.Context) StageStatusLastPromotionPatchPtrOutput
}

type stageStatusLastPromotionPatchPtrType StageStatusLastPromotionPatchArgs

func StageStatusLastPromotionPatchPtr(v *StageStatusLastPromotionPatchArgs) StageStatusLastPromotionPatchPtrInput {
	return (*stageStatusLastPromotionPatchPtrType)(v)
}

func (*stageStatusLastPromotionPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionPatch)(nil)).Elem()
}

func (i *stageStatusLastPromotionPatchPtrType) ToStageStatusLastPromotionPatchPtrOutput() StageStatusLastPromotionPatchPtrOutput {
	return i.ToStageStatusLastPromotionPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionPatchPtrType) ToStageStatusLastPromotionPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionPatchPtrOutput)
}

// LastPromotion is a reference to the last completed promotion.
type StageStatusLastPromotionPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionPatchOutput) ToStageStatusLastPromotionPatchOutput() StageStatusLastPromotionPatchOutput {
	return o
}

func (o StageStatusLastPromotionPatchOutput) ToStageStatusLastPromotionPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionPatchOutput {
	return o
}

func (o StageStatusLastPromotionPatchOutput) ToStageStatusLastPromotionPatchPtrOutput() StageStatusLastPromotionPatchPtrOutput {
	return o.ToStageStatusLastPromotionPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionPatchOutput) ToStageStatusLastPromotionPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionPatch) *StageStatusLastPromotionPatch {
		return &v
	}).(StageStatusLastPromotionPatchPtrOutput)
}

// FinishedAt is the time at which the Promotion was completed.
func (o StageStatusLastPromotionPatchOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionPatch) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionPatchOutput) Freight() StageStatusLastPromotionFreightPatchPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionPatch) *StageStatusLastPromotionFreightPatch { return v.Freight }).(StageStatusLastPromotionFreightPatchPtrOutput)
}

// Name is the name of the Promotion.
func (o StageStatusLastPromotionPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionPatchOutput) Status() StageStatusLastPromotionStatusPatchPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionPatch) *StageStatusLastPromotionStatusPatch { return v.Status }).(StageStatusLastPromotionStatusPatchPtrOutput)
}

type StageStatusLastPromotionPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionPatchPtrOutput) ToStageStatusLastPromotionPatchPtrOutput() StageStatusLastPromotionPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionPatchPtrOutput) ToStageStatusLastPromotionPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionPatchPtrOutput) Elem() StageStatusLastPromotionPatchOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionPatch) StageStatusLastPromotionPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionPatch
		return ret
	}).(StageStatusLastPromotionPatchOutput)
}

// FinishedAt is the time at which the Promotion was completed.
func (o StageStatusLastPromotionPatchPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionPatch) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionPatchPtrOutput) Freight() StageStatusLastPromotionFreightPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionPatch) *StageStatusLastPromotionFreightPatch {
		if v == nil {
			return nil
		}
		return v.Freight
	}).(StageStatusLastPromotionFreightPatchPtrOutput)
}

// Name is the name of the Promotion.
func (o StageStatusLastPromotionPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionPatchPtrOutput) Status() StageStatusLastPromotionStatusPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionPatch) *StageStatusLastPromotionStatusPatch {
		if v == nil {
			return nil
		}
		return v.Status
	}).(StageStatusLastPromotionStatusPatchPtrOutput)
}

// Status is the (optional) status of the Promotion.
type StageStatusLastPromotionStatus struct {
	// CurrentStep is the index of the current promotion step being executed. This
	// permits steps that have already run successfully to be skipped on
	// subsequent reconciliations attempts.
	CurrentStep *int `pulumi:"currentStep"`
	// FinishedAt is the time when the promotion was completed.
	FinishedAt        *string                                          `pulumi:"finishedAt"`
	Freight           *StageStatusLastPromotionStatusFreight           `pulumi:"freight"`
	FreightCollection *StageStatusLastPromotionStatusFreightCollection `pulumi:"freightCollection"`
	// HealthChecks contains the health check directives to be executed after
	// the Promotion has completed.
	HealthChecks []StageStatusLastPromotionStatusHealthChecks `pulumi:"healthChecks"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh *string `pulumi:"lastHandledRefresh"`
	// Message is a display message about the promotion, including any errors
	// preventing the Promotion controller from executing this Promotion.
	// i.e. If the Phase field has a value of Failed, this field can be expected
	// to explain why.
	Message *string `pulumi:"message"`
	// Phase describes where the Promotion currently is in its lifecycle.
	Phase *string `pulumi:"phase"`
	// State stores the state of the promotion process between reconciliation
	// attempts.
	State map[string]interface{} `pulumi:"state"`
	// StepExecutionMetadata tracks metadata pertaining to the execution
	// of individual promotion steps.
	StepExecutionMetadata []StageStatusLastPromotionStatusStepExecutionMetadata `pulumi:"stepExecutionMetadata"`
}

// StageStatusLastPromotionStatusInput is an input type that accepts StageStatusLastPromotionStatusArgs and StageStatusLastPromotionStatusOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusInput` via:
//
//	StageStatusLastPromotionStatusArgs{...}
type StageStatusLastPromotionStatusInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusOutput() StageStatusLastPromotionStatusOutput
	ToStageStatusLastPromotionStatusOutputWithContext(context.Context) StageStatusLastPromotionStatusOutput
}

// Status is the (optional) status of the Promotion.
type StageStatusLastPromotionStatusArgs struct {
	// CurrentStep is the index of the current promotion step being executed. This
	// permits steps that have already run successfully to be skipped on
	// subsequent reconciliations attempts.
	CurrentStep pulumi.IntPtrInput `pulumi:"currentStep"`
	// FinishedAt is the time when the promotion was completed.
	FinishedAt        pulumi.StringPtrInput                                   `pulumi:"finishedAt"`
	Freight           StageStatusLastPromotionStatusFreightPtrInput           `pulumi:"freight"`
	FreightCollection StageStatusLastPromotionStatusFreightCollectionPtrInput `pulumi:"freightCollection"`
	// HealthChecks contains the health check directives to be executed after
	// the Promotion has completed.
	HealthChecks StageStatusLastPromotionStatusHealthChecksArrayInput `pulumi:"healthChecks"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh pulumi.StringPtrInput `pulumi:"lastHandledRefresh"`
	// Message is a display message about the promotion, including any errors
	// preventing the Promotion controller from executing this Promotion.
	// i.e. If the Phase field has a value of Failed, this field can be expected
	// to explain why.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Phase describes where the Promotion currently is in its lifecycle.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// State stores the state of the promotion process between reconciliation
	// attempts.
	State pulumi.MapInput `pulumi:"state"`
	// StepExecutionMetadata tracks metadata pertaining to the execution
	// of individual promotion steps.
	StepExecutionMetadata StageStatusLastPromotionStatusStepExecutionMetadataArrayInput `pulumi:"stepExecutionMetadata"`
}

func (StageStatusLastPromotionStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatus)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusArgs) ToStageStatusLastPromotionStatusOutput() StageStatusLastPromotionStatusOutput {
	return i.ToStageStatusLastPromotionStatusOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusArgs) ToStageStatusLastPromotionStatusOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusOutput)
}

func (i StageStatusLastPromotionStatusArgs) ToStageStatusLastPromotionStatusPtrOutput() StageStatusLastPromotionStatusPtrOutput {
	return i.ToStageStatusLastPromotionStatusPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusArgs) ToStageStatusLastPromotionStatusPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusOutput).ToStageStatusLastPromotionStatusPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionStatusPtrInput is an input type that accepts StageStatusLastPromotionStatusArgs, StageStatusLastPromotionStatusPtr and StageStatusLastPromotionStatusPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusPtrInput` via:
//
//	        StageStatusLastPromotionStatusArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionStatusPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusPtrOutput() StageStatusLastPromotionStatusPtrOutput
	ToStageStatusLastPromotionStatusPtrOutputWithContext(context.Context) StageStatusLastPromotionStatusPtrOutput
}

type stageStatusLastPromotionStatusPtrType StageStatusLastPromotionStatusArgs

func StageStatusLastPromotionStatusPtr(v *StageStatusLastPromotionStatusArgs) StageStatusLastPromotionStatusPtrInput {
	return (*stageStatusLastPromotionStatusPtrType)(v)
}

func (*stageStatusLastPromotionStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatus)(nil)).Elem()
}

func (i *stageStatusLastPromotionStatusPtrType) ToStageStatusLastPromotionStatusPtrOutput() StageStatusLastPromotionStatusPtrOutput {
	return i.ToStageStatusLastPromotionStatusPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionStatusPtrType) ToStageStatusLastPromotionStatusPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusPtrOutput)
}

// Status is the (optional) status of the Promotion.
type StageStatusLastPromotionStatusOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatus)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusOutput) ToStageStatusLastPromotionStatusOutput() StageStatusLastPromotionStatusOutput {
	return o
}

func (o StageStatusLastPromotionStatusOutput) ToStageStatusLastPromotionStatusOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusOutput {
	return o
}

func (o StageStatusLastPromotionStatusOutput) ToStageStatusLastPromotionStatusPtrOutput() StageStatusLastPromotionStatusPtrOutput {
	return o.ToStageStatusLastPromotionStatusPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionStatusOutput) ToStageStatusLastPromotionStatusPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionStatus) *StageStatusLastPromotionStatus {
		return &v
	}).(StageStatusLastPromotionStatusPtrOutput)
}

// CurrentStep is the index of the current promotion step being executed. This
// permits steps that have already run successfully to be skipped on
// subsequent reconciliations attempts.
func (o StageStatusLastPromotionStatusOutput) CurrentStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatus) *int { return v.CurrentStep }).(pulumi.IntPtrOutput)
}

// FinishedAt is the time when the promotion was completed.
func (o StageStatusLastPromotionStatusOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatus) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionStatusOutput) Freight() StageStatusLastPromotionStatusFreightPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatus) *StageStatusLastPromotionStatusFreight { return v.Freight }).(StageStatusLastPromotionStatusFreightPtrOutput)
}

func (o StageStatusLastPromotionStatusOutput) FreightCollection() StageStatusLastPromotionStatusFreightCollectionPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatus) *StageStatusLastPromotionStatusFreightCollection {
		return v.FreightCollection
	}).(StageStatusLastPromotionStatusFreightCollectionPtrOutput)
}

// HealthChecks contains the health check directives to be executed after
// the Promotion has completed.
func (o StageStatusLastPromotionStatusOutput) HealthChecks() StageStatusLastPromotionStatusHealthChecksArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatus) []StageStatusLastPromotionStatusHealthChecks {
		return v.HealthChecks
	}).(StageStatusLastPromotionStatusHealthChecksArrayOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o StageStatusLastPromotionStatusOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatus) *string { return v.LastHandledRefresh }).(pulumi.StringPtrOutput)
}

// Message is a display message about the promotion, including any errors
// preventing the Promotion controller from executing this Promotion.
// i.e. If the Phase field has a value of Failed, this field can be expected
// to explain why.
func (o StageStatusLastPromotionStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Phase describes where the Promotion currently is in its lifecycle.
func (o StageStatusLastPromotionStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// State stores the state of the promotion process between reconciliation
// attempts.
func (o StageStatusLastPromotionStatusOutput) State() pulumi.MapOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatus) map[string]interface{} { return v.State }).(pulumi.MapOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution
// of individual promotion steps.
func (o StageStatusLastPromotionStatusOutput) StepExecutionMetadata() StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatus) []StageStatusLastPromotionStatusStepExecutionMetadata {
		return v.StepExecutionMetadata
	}).(StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput)
}

type StageStatusLastPromotionStatusPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatus)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusPtrOutput) ToStageStatusLastPromotionStatusPtrOutput() StageStatusLastPromotionStatusPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusPtrOutput) ToStageStatusLastPromotionStatusPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusPtrOutput) Elem() StageStatusLastPromotionStatusOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatus) StageStatusLastPromotionStatus {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionStatus
		return ret
	}).(StageStatusLastPromotionStatusOutput)
}

// CurrentStep is the index of the current promotion step being executed. This
// permits steps that have already run successfully to be skipped on
// subsequent reconciliations attempts.
func (o StageStatusLastPromotionStatusPtrOutput) CurrentStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatus) *int {
		if v == nil {
			return nil
		}
		return v.CurrentStep
	}).(pulumi.IntPtrOutput)
}

// FinishedAt is the time when the promotion was completed.
func (o StageStatusLastPromotionStatusPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatus) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionStatusPtrOutput) Freight() StageStatusLastPromotionStatusFreightPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatus) *StageStatusLastPromotionStatusFreight {
		if v == nil {
			return nil
		}
		return v.Freight
	}).(StageStatusLastPromotionStatusFreightPtrOutput)
}

func (o StageStatusLastPromotionStatusPtrOutput) FreightCollection() StageStatusLastPromotionStatusFreightCollectionPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatus) *StageStatusLastPromotionStatusFreightCollection {
		if v == nil {
			return nil
		}
		return v.FreightCollection
	}).(StageStatusLastPromotionStatusFreightCollectionPtrOutput)
}

// HealthChecks contains the health check directives to be executed after
// the Promotion has completed.
func (o StageStatusLastPromotionStatusPtrOutput) HealthChecks() StageStatusLastPromotionStatusHealthChecksArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatus) []StageStatusLastPromotionStatusHealthChecks {
		if v == nil {
			return nil
		}
		return v.HealthChecks
	}).(StageStatusLastPromotionStatusHealthChecksArrayOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o StageStatusLastPromotionStatusPtrOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastHandledRefresh
	}).(pulumi.StringPtrOutput)
}

// Message is a display message about the promotion, including any errors
// preventing the Promotion controller from executing this Promotion.
// i.e. If the Phase field has a value of Failed, this field can be expected
// to explain why.
func (o StageStatusLastPromotionStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Phase describes where the Promotion currently is in its lifecycle.
func (o StageStatusLastPromotionStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// State stores the state of the promotion process between reconciliation
// attempts.
func (o StageStatusLastPromotionStatusPtrOutput) State() pulumi.MapOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatus) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.MapOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution
// of individual promotion steps.
func (o StageStatusLastPromotionStatusPtrOutput) StepExecutionMetadata() StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatus) []StageStatusLastPromotionStatusStepExecutionMetadata {
		if v == nil {
			return nil
		}
		return v.StepExecutionMetadata
	}).(StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput)
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type StageStatusLastPromotionStatusFreight struct {
	// Charts describes specific versions of specific Helm charts.
	Charts []StageStatusLastPromotionStatusFreightCharts `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits []StageStatusLastPromotionStatusFreightCommits `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images []StageStatusLastPromotionStatusFreightImages `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   *string                                      `pulumi:"name"`
	Origin *StageStatusLastPromotionStatusFreightOrigin `pulumi:"origin"`
}

// StageStatusLastPromotionStatusFreightInput is an input type that accepts StageStatusLastPromotionStatusFreightArgs and StageStatusLastPromotionStatusFreightOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightInput` via:
//
//	StageStatusLastPromotionStatusFreightArgs{...}
type StageStatusLastPromotionStatusFreightInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightOutput() StageStatusLastPromotionStatusFreightOutput
	ToStageStatusLastPromotionStatusFreightOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightOutput
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type StageStatusLastPromotionStatusFreightArgs struct {
	// Charts describes specific versions of specific Helm charts.
	Charts StageStatusLastPromotionStatusFreightChartsArrayInput `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits StageStatusLastPromotionStatusFreightCommitsArrayInput `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images StageStatusLastPromotionStatusFreightImagesArrayInput `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   pulumi.StringPtrInput                               `pulumi:"name"`
	Origin StageStatusLastPromotionStatusFreightOriginPtrInput `pulumi:"origin"`
}

func (StageStatusLastPromotionStatusFreightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreight)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightArgs) ToStageStatusLastPromotionStatusFreightOutput() StageStatusLastPromotionStatusFreightOutput {
	return i.ToStageStatusLastPromotionStatusFreightOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightArgs) ToStageStatusLastPromotionStatusFreightOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightOutput)
}

func (i StageStatusLastPromotionStatusFreightArgs) ToStageStatusLastPromotionStatusFreightPtrOutput() StageStatusLastPromotionStatusFreightPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightArgs) ToStageStatusLastPromotionStatusFreightPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightOutput).ToStageStatusLastPromotionStatusFreightPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionStatusFreightPtrInput is an input type that accepts StageStatusLastPromotionStatusFreightArgs, StageStatusLastPromotionStatusFreightPtr and StageStatusLastPromotionStatusFreightPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightPtrInput` via:
//
//	        StageStatusLastPromotionStatusFreightArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionStatusFreightPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightPtrOutput() StageStatusLastPromotionStatusFreightPtrOutput
	ToStageStatusLastPromotionStatusFreightPtrOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightPtrOutput
}

type stageStatusLastPromotionStatusFreightPtrType StageStatusLastPromotionStatusFreightArgs

func StageStatusLastPromotionStatusFreightPtr(v *StageStatusLastPromotionStatusFreightArgs) StageStatusLastPromotionStatusFreightPtrInput {
	return (*stageStatusLastPromotionStatusFreightPtrType)(v)
}

func (*stageStatusLastPromotionStatusFreightPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreight)(nil)).Elem()
}

func (i *stageStatusLastPromotionStatusFreightPtrType) ToStageStatusLastPromotionStatusFreightPtrOutput() StageStatusLastPromotionStatusFreightPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionStatusFreightPtrType) ToStageStatusLastPromotionStatusFreightPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightPtrOutput)
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type StageStatusLastPromotionStatusFreightOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreight)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightOutput) ToStageStatusLastPromotionStatusFreightOutput() StageStatusLastPromotionStatusFreightOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightOutput) ToStageStatusLastPromotionStatusFreightOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightOutput) ToStageStatusLastPromotionStatusFreightPtrOutput() StageStatusLastPromotionStatusFreightPtrOutput {
	return o.ToStageStatusLastPromotionStatusFreightPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionStatusFreightOutput) ToStageStatusLastPromotionStatusFreightPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionStatusFreight) *StageStatusLastPromotionStatusFreight {
		return &v
	}).(StageStatusLastPromotionStatusFreightPtrOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusLastPromotionStatusFreightOutput) Charts() StageStatusLastPromotionStatusFreightChartsArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreight) []StageStatusLastPromotionStatusFreightCharts {
		return v.Charts
	}).(StageStatusLastPromotionStatusFreightChartsArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusLastPromotionStatusFreightOutput) Commits() StageStatusLastPromotionStatusFreightCommitsArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreight) []StageStatusLastPromotionStatusFreightCommits {
		return v.Commits
	}).(StageStatusLastPromotionStatusFreightCommitsArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusLastPromotionStatusFreightOutput) Images() StageStatusLastPromotionStatusFreightImagesArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreight) []StageStatusLastPromotionStatusFreightImages {
		return v.Images
	}).(StageStatusLastPromotionStatusFreightImagesArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusLastPromotionStatusFreightOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreight) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionStatusFreightOutput) Origin() StageStatusLastPromotionStatusFreightOriginPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreight) *StageStatusLastPromotionStatusFreightOrigin {
		return v.Origin
	}).(StageStatusLastPromotionStatusFreightOriginPtrOutput)
}

type StageStatusLastPromotionStatusFreightPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreight)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightPtrOutput) ToStageStatusLastPromotionStatusFreightPtrOutput() StageStatusLastPromotionStatusFreightPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightPtrOutput) ToStageStatusLastPromotionStatusFreightPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightPtrOutput) Elem() StageStatusLastPromotionStatusFreightOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreight) StageStatusLastPromotionStatusFreight {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionStatusFreight
		return ret
	}).(StageStatusLastPromotionStatusFreightOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusLastPromotionStatusFreightPtrOutput) Charts() StageStatusLastPromotionStatusFreightChartsArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreight) []StageStatusLastPromotionStatusFreightCharts {
		if v == nil {
			return nil
		}
		return v.Charts
	}).(StageStatusLastPromotionStatusFreightChartsArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusLastPromotionStatusFreightPtrOutput) Commits() StageStatusLastPromotionStatusFreightCommitsArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreight) []StageStatusLastPromotionStatusFreightCommits {
		if v == nil {
			return nil
		}
		return v.Commits
	}).(StageStatusLastPromotionStatusFreightCommitsArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusLastPromotionStatusFreightPtrOutput) Images() StageStatusLastPromotionStatusFreightImagesArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreight) []StageStatusLastPromotionStatusFreightImages {
		if v == nil {
			return nil
		}
		return v.Images
	}).(StageStatusLastPromotionStatusFreightImagesArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusLastPromotionStatusFreightPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreight) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionStatusFreightPtrOutput) Origin() StageStatusLastPromotionStatusFreightOriginPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreight) *StageStatusLastPromotionStatusFreightOrigin {
		if v == nil {
			return nil
		}
		return v.Origin
	}).(StageStatusLastPromotionStatusFreightOriginPtrOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusLastPromotionStatusFreightCharts struct {
	// Name specifies the name of the chart.
	Name *string `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL *string `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version *string `pulumi:"version"`
}

// StageStatusLastPromotionStatusFreightChartsInput is an input type that accepts StageStatusLastPromotionStatusFreightChartsArgs and StageStatusLastPromotionStatusFreightChartsOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightChartsInput` via:
//
//	StageStatusLastPromotionStatusFreightChartsArgs{...}
type StageStatusLastPromotionStatusFreightChartsInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightChartsOutput() StageStatusLastPromotionStatusFreightChartsOutput
	ToStageStatusLastPromotionStatusFreightChartsOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightChartsOutput
}

// Chart describes a specific version of a Helm chart.
type StageStatusLastPromotionStatusFreightChartsArgs struct {
	// Name specifies the name of the chart.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (StageStatusLastPromotionStatusFreightChartsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCharts)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightChartsArgs) ToStageStatusLastPromotionStatusFreightChartsOutput() StageStatusLastPromotionStatusFreightChartsOutput {
	return i.ToStageStatusLastPromotionStatusFreightChartsOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightChartsArgs) ToStageStatusLastPromotionStatusFreightChartsOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightChartsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightChartsOutput)
}

// StageStatusLastPromotionStatusFreightChartsArrayInput is an input type that accepts StageStatusLastPromotionStatusFreightChartsArray and StageStatusLastPromotionStatusFreightChartsArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightChartsArrayInput` via:
//
//	StageStatusLastPromotionStatusFreightChartsArray{ StageStatusLastPromotionStatusFreightChartsArgs{...} }
type StageStatusLastPromotionStatusFreightChartsArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightChartsArrayOutput() StageStatusLastPromotionStatusFreightChartsArrayOutput
	ToStageStatusLastPromotionStatusFreightChartsArrayOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightChartsArrayOutput
}

type StageStatusLastPromotionStatusFreightChartsArray []StageStatusLastPromotionStatusFreightChartsInput

func (StageStatusLastPromotionStatusFreightChartsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightCharts)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightChartsArray) ToStageStatusLastPromotionStatusFreightChartsArrayOutput() StageStatusLastPromotionStatusFreightChartsArrayOutput {
	return i.ToStageStatusLastPromotionStatusFreightChartsArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightChartsArray) ToStageStatusLastPromotionStatusFreightChartsArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightChartsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightChartsArrayOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusLastPromotionStatusFreightChartsOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightChartsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCharts)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightChartsOutput) ToStageStatusLastPromotionStatusFreightChartsOutput() StageStatusLastPromotionStatusFreightChartsOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightChartsOutput) ToStageStatusLastPromotionStatusFreightChartsOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightChartsOutput {
	return o
}

// Name specifies the name of the chart.
func (o StageStatusLastPromotionStatusFreightChartsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCharts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. Classic chart
// repositories (using HTTP/S) can contain differently named charts. When this
// field points to such a repository, the Name field will specify the name of
// the chart within the repository. In the case of a repository within an OCI
// registry, the URL implicitly points to a specific chart and the Name field
// will be empty.
func (o StageStatusLastPromotionStatusFreightChartsOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCharts) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Version specifies a particular version of the chart.
func (o StageStatusLastPromotionStatusFreightChartsOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCharts) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusFreightChartsArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightChartsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightCharts)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightChartsArrayOutput) ToStageStatusLastPromotionStatusFreightChartsArrayOutput() StageStatusLastPromotionStatusFreightChartsArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightChartsArrayOutput) ToStageStatusLastPromotionStatusFreightChartsArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightChartsArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightChartsArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionStatusFreightChartsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionStatusFreightCharts {
		return vs[0].([]StageStatusLastPromotionStatusFreightCharts)[vs[1].(int)]
	}).(StageStatusLastPromotionStatusFreightChartsOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusLastPromotionStatusFreightChartsPatch struct {
	// Name specifies the name of the chart.
	Name *string `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL *string `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version *string `pulumi:"version"`
}

// StageStatusLastPromotionStatusFreightChartsPatchInput is an input type that accepts StageStatusLastPromotionStatusFreightChartsPatchArgs and StageStatusLastPromotionStatusFreightChartsPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightChartsPatchInput` via:
//
//	StageStatusLastPromotionStatusFreightChartsPatchArgs{...}
type StageStatusLastPromotionStatusFreightChartsPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightChartsPatchOutput() StageStatusLastPromotionStatusFreightChartsPatchOutput
	ToStageStatusLastPromotionStatusFreightChartsPatchOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightChartsPatchOutput
}

// Chart describes a specific version of a Helm chart.
type StageStatusLastPromotionStatusFreightChartsPatchArgs struct {
	// Name specifies the name of the chart.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. Classic chart
	// repositories (using HTTP/S) can contain differently named charts. When this
	// field points to such a repository, the Name field will specify the name of
	// the chart within the repository. In the case of a repository within an OCI
	// registry, the URL implicitly points to a specific chart and the Name field
	// will be empty.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Version specifies a particular version of the chart.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (StageStatusLastPromotionStatusFreightChartsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightChartsPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightChartsPatchArgs) ToStageStatusLastPromotionStatusFreightChartsPatchOutput() StageStatusLastPromotionStatusFreightChartsPatchOutput {
	return i.ToStageStatusLastPromotionStatusFreightChartsPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightChartsPatchArgs) ToStageStatusLastPromotionStatusFreightChartsPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightChartsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightChartsPatchOutput)
}

// StageStatusLastPromotionStatusFreightChartsPatchArrayInput is an input type that accepts StageStatusLastPromotionStatusFreightChartsPatchArray and StageStatusLastPromotionStatusFreightChartsPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightChartsPatchArrayInput` via:
//
//	StageStatusLastPromotionStatusFreightChartsPatchArray{ StageStatusLastPromotionStatusFreightChartsPatchArgs{...} }
type StageStatusLastPromotionStatusFreightChartsPatchArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightChartsPatchArrayOutput() StageStatusLastPromotionStatusFreightChartsPatchArrayOutput
	ToStageStatusLastPromotionStatusFreightChartsPatchArrayOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightChartsPatchArrayOutput
}

type StageStatusLastPromotionStatusFreightChartsPatchArray []StageStatusLastPromotionStatusFreightChartsPatchInput

func (StageStatusLastPromotionStatusFreightChartsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightChartsPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightChartsPatchArray) ToStageStatusLastPromotionStatusFreightChartsPatchArrayOutput() StageStatusLastPromotionStatusFreightChartsPatchArrayOutput {
	return i.ToStageStatusLastPromotionStatusFreightChartsPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightChartsPatchArray) ToStageStatusLastPromotionStatusFreightChartsPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightChartsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightChartsPatchArrayOutput)
}

// Chart describes a specific version of a Helm chart.
type StageStatusLastPromotionStatusFreightChartsPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightChartsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightChartsPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightChartsPatchOutput) ToStageStatusLastPromotionStatusFreightChartsPatchOutput() StageStatusLastPromotionStatusFreightChartsPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightChartsPatchOutput) ToStageStatusLastPromotionStatusFreightChartsPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightChartsPatchOutput {
	return o
}

// Name specifies the name of the chart.
func (o StageStatusLastPromotionStatusFreightChartsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightChartsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. Classic chart
// repositories (using HTTP/S) can contain differently named charts. When this
// field points to such a repository, the Name field will specify the name of
// the chart within the repository. In the case of a repository within an OCI
// registry, the URL implicitly points to a specific chart and the Name field
// will be empty.
func (o StageStatusLastPromotionStatusFreightChartsPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightChartsPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Version specifies a particular version of the chart.
func (o StageStatusLastPromotionStatusFreightChartsPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightChartsPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusFreightChartsPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightChartsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightChartsPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightChartsPatchArrayOutput) ToStageStatusLastPromotionStatusFreightChartsPatchArrayOutput() StageStatusLastPromotionStatusFreightChartsPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightChartsPatchArrayOutput) ToStageStatusLastPromotionStatusFreightChartsPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightChartsPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightChartsPatchArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionStatusFreightChartsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionStatusFreightChartsPatch {
		return vs[0].([]StageStatusLastPromotionStatusFreightChartsPatch)[vs[1].(int)]
	}).(StageStatusLastPromotionStatusFreightChartsPatchOutput)
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type StageStatusLastPromotionStatusFreightCollection struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id *string `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items map[string]map[string]string `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory []StageStatusLastPromotionStatusFreightCollectionVerificationHistory `pulumi:"verificationHistory"`
}

// StageStatusLastPromotionStatusFreightCollectionInput is an input type that accepts StageStatusLastPromotionStatusFreightCollectionArgs and StageStatusLastPromotionStatusFreightCollectionOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCollectionInput` via:
//
//	StageStatusLastPromotionStatusFreightCollectionArgs{...}
type StageStatusLastPromotionStatusFreightCollectionInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCollectionOutput() StageStatusLastPromotionStatusFreightCollectionOutput
	ToStageStatusLastPromotionStatusFreightCollectionOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCollectionOutput
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type StageStatusLastPromotionStatusFreightCollectionArgs struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items pulumi.StringMapMapInput `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayInput `pulumi:"verificationHistory"`
}

func (StageStatusLastPromotionStatusFreightCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollection)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightCollectionArgs) ToStageStatusLastPromotionStatusFreightCollectionOutput() StageStatusLastPromotionStatusFreightCollectionOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCollectionArgs) ToStageStatusLastPromotionStatusFreightCollectionOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionOutput)
}

func (i StageStatusLastPromotionStatusFreightCollectionArgs) ToStageStatusLastPromotionStatusFreightCollectionPtrOutput() StageStatusLastPromotionStatusFreightCollectionPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCollectionArgs) ToStageStatusLastPromotionStatusFreightCollectionPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionOutput).ToStageStatusLastPromotionStatusFreightCollectionPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionStatusFreightCollectionPtrInput is an input type that accepts StageStatusLastPromotionStatusFreightCollectionArgs, StageStatusLastPromotionStatusFreightCollectionPtr and StageStatusLastPromotionStatusFreightCollectionPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCollectionPtrInput` via:
//
//	        StageStatusLastPromotionStatusFreightCollectionArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionStatusFreightCollectionPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCollectionPtrOutput() StageStatusLastPromotionStatusFreightCollectionPtrOutput
	ToStageStatusLastPromotionStatusFreightCollectionPtrOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCollectionPtrOutput
}

type stageStatusLastPromotionStatusFreightCollectionPtrType StageStatusLastPromotionStatusFreightCollectionArgs

func StageStatusLastPromotionStatusFreightCollectionPtr(v *StageStatusLastPromotionStatusFreightCollectionArgs) StageStatusLastPromotionStatusFreightCollectionPtrInput {
	return (*stageStatusLastPromotionStatusFreightCollectionPtrType)(v)
}

func (*stageStatusLastPromotionStatusFreightCollectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreightCollection)(nil)).Elem()
}

func (i *stageStatusLastPromotionStatusFreightCollectionPtrType) ToStageStatusLastPromotionStatusFreightCollectionPtrOutput() StageStatusLastPromotionStatusFreightCollectionPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionStatusFreightCollectionPtrType) ToStageStatusLastPromotionStatusFreightCollectionPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionPtrOutput)
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type StageStatusLastPromotionStatusFreightCollectionOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollection)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCollectionOutput) ToStageStatusLastPromotionStatusFreightCollectionOutput() StageStatusLastPromotionStatusFreightCollectionOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionOutput) ToStageStatusLastPromotionStatusFreightCollectionOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionOutput) ToStageStatusLastPromotionStatusFreightCollectionPtrOutput() StageStatusLastPromotionStatusFreightCollectionPtrOutput {
	return o.ToStageStatusLastPromotionStatusFreightCollectionPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionStatusFreightCollectionOutput) ToStageStatusLastPromotionStatusFreightCollectionPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionStatusFreightCollection) *StageStatusLastPromotionStatusFreightCollection {
		return &v
	}).(StageStatusLastPromotionStatusFreightCollectionPtrOutput)
}

// ID is a unique and deterministically calculated identifier for the
// FreightCollection. It is updated on each use of the UpdateOrPush method.
func (o StageStatusLastPromotionStatusFreightCollectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Freight is a map of FreightReference objects, indexed by their Warehouse
// origin.
func (o StageStatusLastPromotionStatusFreightCollectionOutput) Items() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollection) map[string]map[string]string { return v.Items }).(pulumi.StringMapMapOutput)
}

// VerificationHistory is a stack of recent VerificationInfo. By default,
// the last ten VerificationInfo are stored.
func (o StageStatusLastPromotionStatusFreightCollectionOutput) VerificationHistory() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollection) []StageStatusLastPromotionStatusFreightCollectionVerificationHistory {
		return v.VerificationHistory
	}).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput)
}

type StageStatusLastPromotionStatusFreightCollectionPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCollectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreightCollection)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCollectionPtrOutput) ToStageStatusLastPromotionStatusFreightCollectionPtrOutput() StageStatusLastPromotionStatusFreightCollectionPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionPtrOutput) ToStageStatusLastPromotionStatusFreightCollectionPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionPtrOutput) Elem() StageStatusLastPromotionStatusFreightCollectionOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollection) StageStatusLastPromotionStatusFreightCollection {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionStatusFreightCollection
		return ret
	}).(StageStatusLastPromotionStatusFreightCollectionOutput)
}

// ID is a unique and deterministically calculated identifier for the
// FreightCollection. It is updated on each use of the UpdateOrPush method.
func (o StageStatusLastPromotionStatusFreightCollectionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollection) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Freight is a map of FreightReference objects, indexed by their Warehouse
// origin.
func (o StageStatusLastPromotionStatusFreightCollectionPtrOutput) Items() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollection) map[string]map[string]string {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.StringMapMapOutput)
}

// VerificationHistory is a stack of recent VerificationInfo. By default,
// the last ten VerificationInfo are stored.
func (o StageStatusLastPromotionStatusFreightCollectionPtrOutput) VerificationHistory() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollection) []StageStatusLastPromotionStatusFreightCollectionVerificationHistory {
		if v == nil {
			return nil
		}
		return v.VerificationHistory
	}).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput)
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type StageStatusLastPromotionStatusFreightCollectionPatch struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id *string `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items map[string]map[string]string `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory []StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch `pulumi:"verificationHistory"`
}

// StageStatusLastPromotionStatusFreightCollectionPatchInput is an input type that accepts StageStatusLastPromotionStatusFreightCollectionPatchArgs and StageStatusLastPromotionStatusFreightCollectionPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCollectionPatchInput` via:
//
//	StageStatusLastPromotionStatusFreightCollectionPatchArgs{...}
type StageStatusLastPromotionStatusFreightCollectionPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCollectionPatchOutput() StageStatusLastPromotionStatusFreightCollectionPatchOutput
	ToStageStatusLastPromotionStatusFreightCollectionPatchOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCollectionPatchOutput
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type StageStatusLastPromotionStatusFreightCollectionPatchArgs struct {
	// ID is a unique and deterministically calculated identifier for the
	// FreightCollection. It is updated on each use of the UpdateOrPush method.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Freight is a map of FreightReference objects, indexed by their Warehouse
	// origin.
	Items pulumi.StringMapMapInput `pulumi:"items"`
	// VerificationHistory is a stack of recent VerificationInfo. By default,
	// the last ten VerificationInfo are stored.
	VerificationHistory StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayInput `pulumi:"verificationHistory"`
}

func (StageStatusLastPromotionStatusFreightCollectionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightCollectionPatchArgs) ToStageStatusLastPromotionStatusFreightCollectionPatchOutput() StageStatusLastPromotionStatusFreightCollectionPatchOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCollectionPatchArgs) ToStageStatusLastPromotionStatusFreightCollectionPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionPatchOutput)
}

func (i StageStatusLastPromotionStatusFreightCollectionPatchArgs) ToStageStatusLastPromotionStatusFreightCollectionPatchPtrOutput() StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCollectionPatchArgs) ToStageStatusLastPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionPatchOutput).ToStageStatusLastPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionStatusFreightCollectionPatchPtrInput is an input type that accepts StageStatusLastPromotionStatusFreightCollectionPatchArgs, StageStatusLastPromotionStatusFreightCollectionPatchPtr and StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCollectionPatchPtrInput` via:
//
//	        StageStatusLastPromotionStatusFreightCollectionPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionStatusFreightCollectionPatchPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCollectionPatchPtrOutput() StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput
	ToStageStatusLastPromotionStatusFreightCollectionPatchPtrOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput
}

type stageStatusLastPromotionStatusFreightCollectionPatchPtrType StageStatusLastPromotionStatusFreightCollectionPatchArgs

func StageStatusLastPromotionStatusFreightCollectionPatchPtr(v *StageStatusLastPromotionStatusFreightCollectionPatchArgs) StageStatusLastPromotionStatusFreightCollectionPatchPtrInput {
	return (*stageStatusLastPromotionStatusFreightCollectionPatchPtrType)(v)
}

func (*stageStatusLastPromotionStatusFreightCollectionPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreightCollectionPatch)(nil)).Elem()
}

func (i *stageStatusLastPromotionStatusFreightCollectionPatchPtrType) ToStageStatusLastPromotionStatusFreightCollectionPatchPtrOutput() StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionStatusFreightCollectionPatchPtrType) ToStageStatusLastPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput)
}

// FreightCollection contains the details of the piece of Freight referenced
// by this Promotion as well as any additional Freight that is carried over
// from the target Stage's current state.
type StageStatusLastPromotionStatusFreightCollectionPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCollectionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCollectionPatchOutput) ToStageStatusLastPromotionStatusFreightCollectionPatchOutput() StageStatusLastPromotionStatusFreightCollectionPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionPatchOutput) ToStageStatusLastPromotionStatusFreightCollectionPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionPatchOutput) ToStageStatusLastPromotionStatusFreightCollectionPatchPtrOutput() StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput {
	return o.ToStageStatusLastPromotionStatusFreightCollectionPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionStatusFreightCollectionPatchOutput) ToStageStatusLastPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionStatusFreightCollectionPatch) *StageStatusLastPromotionStatusFreightCollectionPatch {
		return &v
	}).(StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput)
}

// ID is a unique and deterministically calculated identifier for the
// FreightCollection. It is updated on each use of the UpdateOrPush method.
func (o StageStatusLastPromotionStatusFreightCollectionPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Freight is a map of FreightReference objects, indexed by their Warehouse
// origin.
func (o StageStatusLastPromotionStatusFreightCollectionPatchOutput) Items() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionPatch) map[string]map[string]string {
		return v.Items
	}).(pulumi.StringMapMapOutput)
}

// VerificationHistory is a stack of recent VerificationInfo. By default,
// the last ten VerificationInfo are stored.
func (o StageStatusLastPromotionStatusFreightCollectionPatchOutput) VerificationHistory() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionPatch) []StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch {
		return v.VerificationHistory
	}).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput)
}

type StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreightCollectionPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput) ToStageStatusLastPromotionStatusFreightCollectionPatchPtrOutput() StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput) ToStageStatusLastPromotionStatusFreightCollectionPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput) Elem() StageStatusLastPromotionStatusFreightCollectionPatchOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollectionPatch) StageStatusLastPromotionStatusFreightCollectionPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionStatusFreightCollectionPatch
		return ret
	}).(StageStatusLastPromotionStatusFreightCollectionPatchOutput)
}

// ID is a unique and deterministically calculated identifier for the
// FreightCollection. It is updated on each use of the UpdateOrPush method.
func (o StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollectionPatch) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Freight is a map of FreightReference objects, indexed by their Warehouse
// origin.
func (o StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput) Items() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollectionPatch) map[string]map[string]string {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.StringMapMapOutput)
}

// VerificationHistory is a stack of recent VerificationInfo. By default,
// the last ten VerificationInfo are stored.
func (o StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput) VerificationHistory() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollectionPatch) []StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch {
		if v == nil {
			return nil
		}
		return v.VerificationHistory
	}).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusLastPromotionStatusFreightCollectionVerificationHistory struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       *string                                                                        `pulumi:"actor"`
	AnalysisRun *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime *string `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id *string `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message *string `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase *string `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime *string `pulumi:"startTime"`
}

// StageStatusLastPromotionStatusFreightCollectionVerificationHistoryInput is an input type that accepts StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArgs and StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCollectionVerificationHistoryInput` via:
//
//	StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArgs{...}
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput
	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArgs struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       pulumi.StringPtrInput                                                                 `pulumi:"actor"`
	AnalysisRun StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime pulumi.StringPtrInput `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistory)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArgs) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArgs) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput)
}

// StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayInput is an input type that accepts StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArray and StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayInput` via:
//
//	StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArray{ StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArgs{...} }
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput
	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput
}

type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArray []StageStatusLastPromotionStatusFreightCollectionVerificationHistoryInput

func (StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightCollectionVerificationHistory)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArray) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArray) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistory)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput {
	return o
}

// Actor is the name of the entity that initiated or aborted the
// Verification process.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput) Actor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistory) *string { return v.Actor }).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput) AnalysisRun() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistory) *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun {
		return v.AnalysisRun
	}).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput)
}

// FinishTime is the time at which the Verification process finished.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput) FinishTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistory) *string {
		return v.FinishTime
	}).(pulumi.StringPtrOutput)
}

// ID is the identifier of the Verification process.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistory) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message may contain additional information about why the verification
// process is in its current phase.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistory) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Phase describes the current phase of the Verification process. Generally,
// this will be a reflection of the underlying AnalysisRun's phase, however,
// there are exceptions to this, such as in the case where an AnalysisRun
// cannot be launched successfully.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistory) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// StartTime is the time at which the Verification process was started.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistory) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightCollectionVerificationHistory)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionStatusFreightCollectionVerificationHistory {
		return vs[0].([]StageStatusLastPromotionStatusFreightCollectionVerificationHistory)[vs[1].(int)]
	}).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun struct {
	// Name is the name of the AnalysisRun.
	Name *string `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace *string `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase *string `pulumi:"phase"`
}

// StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunInput is an input type that accepts StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs and StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunInput` via:
//
//	StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs{...}
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput
	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs struct {
	// Name is the name of the AnalysisRun.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
}

func (StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput)
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput).ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput is an input type that accepts StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs, StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtr and StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput` via:
//
//	        StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput
	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput
}

type stageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs

func StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtr(v *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput {
	return (*stageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType)(v)
}

func (*stageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (i *stageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrType) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o.ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun {
		return &v
	}).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput)
}

// Name is the name of the AnalysisRun.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) Elem() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun
		return ret
	}).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput)
}

// Name is the name of the AnalysisRun.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRun) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch struct {
	// Name is the name of the AnalysisRun.
	Name *string `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace *string `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase *string `pulumi:"phase"`
}

// StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchInput is an input type that accepts StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs and StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchInput` via:
//
//	StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs{...}
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput
	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs struct {
	// Name is the name of the AnalysisRun.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace is the namespace of the AnalysisRun.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Phase is the last observed phase of the AnalysisRun referenced by Name.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
}

func (StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput)
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput).ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput is an input type that accepts StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs, StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtr and StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput` via:
//
//	        StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput
	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput
}

type stageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs

func StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtr(v *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput {
	return (*stageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType)(v)
}

func (*stageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (i *stageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrType) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput)
}

// AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
// the Verification process.
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o.ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch {
		return &v
	}).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput)
}

// Name is the name of the AnalysisRun.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) Elem() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch
		return ret
	}).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput)
}

// Name is the name of the AnalysisRun.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the AnalysisRun.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Phase is the last observed phase of the AnalysisRun referenced by Name.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       *string                                                                             `pulumi:"actor"`
	AnalysisRun *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime *string `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id *string `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message *string `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase *string `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime *string `pulumi:"startTime"`
}

// StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchInput is an input type that accepts StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArgs and StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchInput` via:
//
//	StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArgs{...}
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput
	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArgs struct {
	// Actor is the name of the entity that initiated or aborted the
	// Verification process.
	Actor       pulumi.StringPtrInput                                                                      `pulumi:"actor"`
	AnalysisRun StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput `pulumi:"analysisRun"`
	// FinishTime is the time at which the Verification process finished.
	FinishTime pulumi.StringPtrInput `pulumi:"finishTime"`
	// ID is the identifier of the Verification process.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message may contain additional information about why the verification
	// process is in its current phase.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Phase describes the current phase of the Verification process. Generally,
	// this will be a reflection of the underlying AnalysisRun's phase, however,
	// there are exceptions to this, such as in the case where an AnalysisRun
	// cannot be launched successfully.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// StartTime is the time at which the Verification process was started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArgs) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArgs) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput)
}

// StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayInput is an input type that accepts StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArray and StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayInput` via:
//
//	StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArray{ StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArgs{...} }
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput
	ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput
}

type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArray []StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchInput

func (StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArray) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return i.ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArray) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput)
}

// VerificationInfo contains the details of an instance of a Verification
// process.
type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return o
}

// Actor is the name of the entity that initiated or aborted the
// Verification process.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput) Actor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch) *string {
		return v.Actor
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput) AnalysisRun() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch) *StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatch {
		return v.AnalysisRun
	}).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput)
}

// FinishTime is the time at which the Verification process finished.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput) FinishTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch) *string {
		return v.FinishTime
	}).(pulumi.StringPtrOutput)
}

// ID is the identifier of the Verification process.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message may contain additional information about why the verification
// process is in its current phase.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch) *string {
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Phase describes the current phase of the Verification process. Generally,
// this will be a reflection of the underlying AnalysisRun's phase, however,
// there are exceptions to this, such as in the case where an AnalysisRun
// cannot be launched successfully.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch) *string {
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// StartTime is the time at which the Verification process was started.
func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch) *string {
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput() StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput) ToStageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch {
		return vs[0].([]StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatch)[vs[1].(int)]
	}).(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusLastPromotionStatusFreightCommits struct {
	// Author is the author of the commit.
	Author *string `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch *string `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer *string `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id *string `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message *string `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL *string `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag *string `pulumi:"tag"`
}

// StageStatusLastPromotionStatusFreightCommitsInput is an input type that accepts StageStatusLastPromotionStatusFreightCommitsArgs and StageStatusLastPromotionStatusFreightCommitsOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCommitsInput` via:
//
//	StageStatusLastPromotionStatusFreightCommitsArgs{...}
type StageStatusLastPromotionStatusFreightCommitsInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCommitsOutput() StageStatusLastPromotionStatusFreightCommitsOutput
	ToStageStatusLastPromotionStatusFreightCommitsOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCommitsOutput
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusLastPromotionStatusFreightCommitsArgs struct {
	// Author is the author of the commit.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer pulumi.StringPtrInput `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusLastPromotionStatusFreightCommitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCommits)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightCommitsArgs) ToStageStatusLastPromotionStatusFreightCommitsOutput() StageStatusLastPromotionStatusFreightCommitsOutput {
	return i.ToStageStatusLastPromotionStatusFreightCommitsOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCommitsArgs) ToStageStatusLastPromotionStatusFreightCommitsOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCommitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCommitsOutput)
}

// StageStatusLastPromotionStatusFreightCommitsArrayInput is an input type that accepts StageStatusLastPromotionStatusFreightCommitsArray and StageStatusLastPromotionStatusFreightCommitsArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCommitsArrayInput` via:
//
//	StageStatusLastPromotionStatusFreightCommitsArray{ StageStatusLastPromotionStatusFreightCommitsArgs{...} }
type StageStatusLastPromotionStatusFreightCommitsArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCommitsArrayOutput() StageStatusLastPromotionStatusFreightCommitsArrayOutput
	ToStageStatusLastPromotionStatusFreightCommitsArrayOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCommitsArrayOutput
}

type StageStatusLastPromotionStatusFreightCommitsArray []StageStatusLastPromotionStatusFreightCommitsInput

func (StageStatusLastPromotionStatusFreightCommitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightCommits)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightCommitsArray) ToStageStatusLastPromotionStatusFreightCommitsArrayOutput() StageStatusLastPromotionStatusFreightCommitsArrayOutput {
	return i.ToStageStatusLastPromotionStatusFreightCommitsArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCommitsArray) ToStageStatusLastPromotionStatusFreightCommitsArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCommitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCommitsArrayOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusLastPromotionStatusFreightCommitsOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCommitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCommits)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCommitsOutput) ToStageStatusLastPromotionStatusFreightCommitsOutput() StageStatusLastPromotionStatusFreightCommitsOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCommitsOutput) ToStageStatusLastPromotionStatusFreightCommitsOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCommitsOutput {
	return o
}

// Author is the author of the commit.
func (o StageStatusLastPromotionStatusFreightCommitsOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCommits) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Branch denotes the branch of the repository where this commit was found.
func (o StageStatusLastPromotionStatusFreightCommitsOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCommits) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Committer is the person who committed the commit.
func (o StageStatusLastPromotionStatusFreightCommitsOutput) Committer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCommits) *string { return v.Committer }).(pulumi.StringPtrOutput)
}

// ID is the ID of a specific commit in the Git repository specified by
// RepoURL.
func (o StageStatusLastPromotionStatusFreightCommitsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCommits) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message is the message associated with the commit. At present, this only
// contains the first line (subject) of the commit message.
func (o StageStatusLastPromotionStatusFreightCommitsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCommits) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// RepoURL is the URL of a Git repository.
func (o StageStatusLastPromotionStatusFreightCommitsOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCommits) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag denotes a tag in the repository that matched selection criteria and
// resolved to this commit.
func (o StageStatusLastPromotionStatusFreightCommitsOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCommits) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusFreightCommitsArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCommitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightCommits)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCommitsArrayOutput) ToStageStatusLastPromotionStatusFreightCommitsArrayOutput() StageStatusLastPromotionStatusFreightCommitsArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCommitsArrayOutput) ToStageStatusLastPromotionStatusFreightCommitsArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCommitsArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCommitsArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionStatusFreightCommitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionStatusFreightCommits {
		return vs[0].([]StageStatusLastPromotionStatusFreightCommits)[vs[1].(int)]
	}).(StageStatusLastPromotionStatusFreightCommitsOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusLastPromotionStatusFreightCommitsPatch struct {
	// Author is the author of the commit.
	Author *string `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch *string `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer *string `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id *string `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message *string `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL *string `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag *string `pulumi:"tag"`
}

// StageStatusLastPromotionStatusFreightCommitsPatchInput is an input type that accepts StageStatusLastPromotionStatusFreightCommitsPatchArgs and StageStatusLastPromotionStatusFreightCommitsPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCommitsPatchInput` via:
//
//	StageStatusLastPromotionStatusFreightCommitsPatchArgs{...}
type StageStatusLastPromotionStatusFreightCommitsPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCommitsPatchOutput() StageStatusLastPromotionStatusFreightCommitsPatchOutput
	ToStageStatusLastPromotionStatusFreightCommitsPatchOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCommitsPatchOutput
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusLastPromotionStatusFreightCommitsPatchArgs struct {
	// Author is the author of the commit.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Branch denotes the branch of the repository where this commit was found.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer pulumi.StringPtrInput `pulumi:"committer"`
	// ID is the ID of a specific commit in the Git repository specified by
	// RepoURL.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Message is the message associated with the commit. At present, this only
	// contains the first line (subject) of the commit message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// RepoURL is the URL of a Git repository.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag denotes a tag in the repository that matched selection criteria and
	// resolved to this commit.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusLastPromotionStatusFreightCommitsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCommitsPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightCommitsPatchArgs) ToStageStatusLastPromotionStatusFreightCommitsPatchOutput() StageStatusLastPromotionStatusFreightCommitsPatchOutput {
	return i.ToStageStatusLastPromotionStatusFreightCommitsPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCommitsPatchArgs) ToStageStatusLastPromotionStatusFreightCommitsPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCommitsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCommitsPatchOutput)
}

// StageStatusLastPromotionStatusFreightCommitsPatchArrayInput is an input type that accepts StageStatusLastPromotionStatusFreightCommitsPatchArray and StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightCommitsPatchArrayInput` via:
//
//	StageStatusLastPromotionStatusFreightCommitsPatchArray{ StageStatusLastPromotionStatusFreightCommitsPatchArgs{...} }
type StageStatusLastPromotionStatusFreightCommitsPatchArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightCommitsPatchArrayOutput() StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput
	ToStageStatusLastPromotionStatusFreightCommitsPatchArrayOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput
}

type StageStatusLastPromotionStatusFreightCommitsPatchArray []StageStatusLastPromotionStatusFreightCommitsPatchInput

func (StageStatusLastPromotionStatusFreightCommitsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightCommitsPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightCommitsPatchArray) ToStageStatusLastPromotionStatusFreightCommitsPatchArrayOutput() StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput {
	return i.ToStageStatusLastPromotionStatusFreightCommitsPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightCommitsPatchArray) ToStageStatusLastPromotionStatusFreightCommitsPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput)
}

// GitCommit describes a specific commit from a specific Git repository.
type StageStatusLastPromotionStatusFreightCommitsPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCommitsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightCommitsPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCommitsPatchOutput) ToStageStatusLastPromotionStatusFreightCommitsPatchOutput() StageStatusLastPromotionStatusFreightCommitsPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCommitsPatchOutput) ToStageStatusLastPromotionStatusFreightCommitsPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCommitsPatchOutput {
	return o
}

// Author is the author of the commit.
func (o StageStatusLastPromotionStatusFreightCommitsPatchOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCommitsPatch) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Branch denotes the branch of the repository where this commit was found.
func (o StageStatusLastPromotionStatusFreightCommitsPatchOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCommitsPatch) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Committer is the person who committed the commit.
func (o StageStatusLastPromotionStatusFreightCommitsPatchOutput) Committer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCommitsPatch) *string { return v.Committer }).(pulumi.StringPtrOutput)
}

// ID is the ID of a specific commit in the Git repository specified by
// RepoURL.
func (o StageStatusLastPromotionStatusFreightCommitsPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCommitsPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Message is the message associated with the commit. At present, this only
// contains the first line (subject) of the commit message.
func (o StageStatusLastPromotionStatusFreightCommitsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCommitsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// RepoURL is the URL of a Git repository.
func (o StageStatusLastPromotionStatusFreightCommitsPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCommitsPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag denotes a tag in the repository that matched selection criteria and
// resolved to this commit.
func (o StageStatusLastPromotionStatusFreightCommitsPatchOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightCommitsPatch) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightCommitsPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput) ToStageStatusLastPromotionStatusFreightCommitsPatchArrayOutput() StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput) ToStageStatusLastPromotionStatusFreightCommitsPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionStatusFreightCommitsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionStatusFreightCommitsPatch {
		return vs[0].([]StageStatusLastPromotionStatusFreightCommitsPatch)[vs[1].(int)]
	}).(StageStatusLastPromotionStatusFreightCommitsPatchOutput)
}

// Image describes a specific version of a container image.
type StageStatusLastPromotionStatusFreightImages struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations map[string]string `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest *string `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL *string `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag *string `pulumi:"tag"`
}

// StageStatusLastPromotionStatusFreightImagesInput is an input type that accepts StageStatusLastPromotionStatusFreightImagesArgs and StageStatusLastPromotionStatusFreightImagesOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightImagesInput` via:
//
//	StageStatusLastPromotionStatusFreightImagesArgs{...}
type StageStatusLastPromotionStatusFreightImagesInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightImagesOutput() StageStatusLastPromotionStatusFreightImagesOutput
	ToStageStatusLastPromotionStatusFreightImagesOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightImagesOutput
}

// Image describes a specific version of a container image.
type StageStatusLastPromotionStatusFreightImagesArgs struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusLastPromotionStatusFreightImagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightImages)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightImagesArgs) ToStageStatusLastPromotionStatusFreightImagesOutput() StageStatusLastPromotionStatusFreightImagesOutput {
	return i.ToStageStatusLastPromotionStatusFreightImagesOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightImagesArgs) ToStageStatusLastPromotionStatusFreightImagesOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightImagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightImagesOutput)
}

// StageStatusLastPromotionStatusFreightImagesArrayInput is an input type that accepts StageStatusLastPromotionStatusFreightImagesArray and StageStatusLastPromotionStatusFreightImagesArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightImagesArrayInput` via:
//
//	StageStatusLastPromotionStatusFreightImagesArray{ StageStatusLastPromotionStatusFreightImagesArgs{...} }
type StageStatusLastPromotionStatusFreightImagesArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightImagesArrayOutput() StageStatusLastPromotionStatusFreightImagesArrayOutput
	ToStageStatusLastPromotionStatusFreightImagesArrayOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightImagesArrayOutput
}

type StageStatusLastPromotionStatusFreightImagesArray []StageStatusLastPromotionStatusFreightImagesInput

func (StageStatusLastPromotionStatusFreightImagesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightImages)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightImagesArray) ToStageStatusLastPromotionStatusFreightImagesArrayOutput() StageStatusLastPromotionStatusFreightImagesArrayOutput {
	return i.ToStageStatusLastPromotionStatusFreightImagesArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightImagesArray) ToStageStatusLastPromotionStatusFreightImagesArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightImagesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightImagesArrayOutput)
}

// Image describes a specific version of a container image.
type StageStatusLastPromotionStatusFreightImagesOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightImagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightImages)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightImagesOutput) ToStageStatusLastPromotionStatusFreightImagesOutput() StageStatusLastPromotionStatusFreightImagesOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightImagesOutput) ToStageStatusLastPromotionStatusFreightImagesOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightImagesOutput {
	return o
}

// Annotations is a map of arbitrary metadata for the image.
func (o StageStatusLastPromotionStatusFreightImagesOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightImages) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Digest identifies a specific version of the image in the repository
// specified by RepoURL. This is a more precise identifier than Tag.
func (o StageStatusLastPromotionStatusFreightImagesOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightImages) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// GitRepoURL specifies the URL of a Git repository that contains the source
// code for the image repository referenced by the RepoURL field if Kargo was
// able to infer it.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o StageStatusLastPromotionStatusFreightImagesOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightImages) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// RepoURL describes the repository in which the image can be found.
func (o StageStatusLastPromotionStatusFreightImagesOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightImages) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag identifies a specific version of the image in the repository specified
// by RepoURL.
func (o StageStatusLastPromotionStatusFreightImagesOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightImages) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusFreightImagesArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightImagesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightImages)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightImagesArrayOutput) ToStageStatusLastPromotionStatusFreightImagesArrayOutput() StageStatusLastPromotionStatusFreightImagesArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightImagesArrayOutput) ToStageStatusLastPromotionStatusFreightImagesArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightImagesArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightImagesArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionStatusFreightImagesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionStatusFreightImages {
		return vs[0].([]StageStatusLastPromotionStatusFreightImages)[vs[1].(int)]
	}).(StageStatusLastPromotionStatusFreightImagesOutput)
}

// Image describes a specific version of a container image.
type StageStatusLastPromotionStatusFreightImagesPatch struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations map[string]string `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest *string `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL *string `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag *string `pulumi:"tag"`
}

// StageStatusLastPromotionStatusFreightImagesPatchInput is an input type that accepts StageStatusLastPromotionStatusFreightImagesPatchArgs and StageStatusLastPromotionStatusFreightImagesPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightImagesPatchInput` via:
//
//	StageStatusLastPromotionStatusFreightImagesPatchArgs{...}
type StageStatusLastPromotionStatusFreightImagesPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightImagesPatchOutput() StageStatusLastPromotionStatusFreightImagesPatchOutput
	ToStageStatusLastPromotionStatusFreightImagesPatchOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightImagesPatchOutput
}

// Image describes a specific version of a container image.
type StageStatusLastPromotionStatusFreightImagesPatchArgs struct {
	// Annotations is a map of arbitrary metadata for the image.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Digest identifies a specific version of the image in the repository
	// specified by RepoURL. This is a more precise identifier than Tag.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// GitRepoURL specifies the URL of a Git repository that contains the source
	// code for the image repository referenced by the RepoURL field if Kargo was
	// able to infer it.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// RepoURL describes the repository in which the image can be found.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// Tag identifies a specific version of the image in the repository specified
	// by RepoURL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (StageStatusLastPromotionStatusFreightImagesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightImagesPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightImagesPatchArgs) ToStageStatusLastPromotionStatusFreightImagesPatchOutput() StageStatusLastPromotionStatusFreightImagesPatchOutput {
	return i.ToStageStatusLastPromotionStatusFreightImagesPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightImagesPatchArgs) ToStageStatusLastPromotionStatusFreightImagesPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightImagesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightImagesPatchOutput)
}

// StageStatusLastPromotionStatusFreightImagesPatchArrayInput is an input type that accepts StageStatusLastPromotionStatusFreightImagesPatchArray and StageStatusLastPromotionStatusFreightImagesPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightImagesPatchArrayInput` via:
//
//	StageStatusLastPromotionStatusFreightImagesPatchArray{ StageStatusLastPromotionStatusFreightImagesPatchArgs{...} }
type StageStatusLastPromotionStatusFreightImagesPatchArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightImagesPatchArrayOutput() StageStatusLastPromotionStatusFreightImagesPatchArrayOutput
	ToStageStatusLastPromotionStatusFreightImagesPatchArrayOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightImagesPatchArrayOutput
}

type StageStatusLastPromotionStatusFreightImagesPatchArray []StageStatusLastPromotionStatusFreightImagesPatchInput

func (StageStatusLastPromotionStatusFreightImagesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightImagesPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightImagesPatchArray) ToStageStatusLastPromotionStatusFreightImagesPatchArrayOutput() StageStatusLastPromotionStatusFreightImagesPatchArrayOutput {
	return i.ToStageStatusLastPromotionStatusFreightImagesPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightImagesPatchArray) ToStageStatusLastPromotionStatusFreightImagesPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightImagesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightImagesPatchArrayOutput)
}

// Image describes a specific version of a container image.
type StageStatusLastPromotionStatusFreightImagesPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightImagesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightImagesPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightImagesPatchOutput) ToStageStatusLastPromotionStatusFreightImagesPatchOutput() StageStatusLastPromotionStatusFreightImagesPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightImagesPatchOutput) ToStageStatusLastPromotionStatusFreightImagesPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightImagesPatchOutput {
	return o
}

// Annotations is a map of arbitrary metadata for the image.
func (o StageStatusLastPromotionStatusFreightImagesPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightImagesPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Digest identifies a specific version of the image in the repository
// specified by RepoURL. This is a more precise identifier than Tag.
func (o StageStatusLastPromotionStatusFreightImagesPatchOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightImagesPatch) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// GitRepoURL specifies the URL of a Git repository that contains the source
// code for the image repository referenced by the RepoURL field if Kargo was
// able to infer it.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o StageStatusLastPromotionStatusFreightImagesPatchOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightImagesPatch) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// RepoURL describes the repository in which the image can be found.
func (o StageStatusLastPromotionStatusFreightImagesPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightImagesPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// Tag identifies a specific version of the image in the repository specified
// by RepoURL.
func (o StageStatusLastPromotionStatusFreightImagesPatchOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightImagesPatch) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusFreightImagesPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightImagesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusFreightImagesPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightImagesPatchArrayOutput) ToStageStatusLastPromotionStatusFreightImagesPatchArrayOutput() StageStatusLastPromotionStatusFreightImagesPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightImagesPatchArrayOutput) ToStageStatusLastPromotionStatusFreightImagesPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightImagesPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightImagesPatchArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionStatusFreightImagesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionStatusFreightImagesPatch {
		return vs[0].([]StageStatusLastPromotionStatusFreightImagesPatch)[vs[1].(int)]
	}).(StageStatusLastPromotionStatusFreightImagesPatchOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusLastPromotionStatusFreightOrigin struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name *string `pulumi:"name"`
}

// StageStatusLastPromotionStatusFreightOriginInput is an input type that accepts StageStatusLastPromotionStatusFreightOriginArgs and StageStatusLastPromotionStatusFreightOriginOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightOriginInput` via:
//
//	StageStatusLastPromotionStatusFreightOriginArgs{...}
type StageStatusLastPromotionStatusFreightOriginInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightOriginOutput() StageStatusLastPromotionStatusFreightOriginOutput
	ToStageStatusLastPromotionStatusFreightOriginOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightOriginOutput
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusLastPromotionStatusFreightOriginArgs struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StageStatusLastPromotionStatusFreightOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightOrigin)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightOriginArgs) ToStageStatusLastPromotionStatusFreightOriginOutput() StageStatusLastPromotionStatusFreightOriginOutput {
	return i.ToStageStatusLastPromotionStatusFreightOriginOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightOriginArgs) ToStageStatusLastPromotionStatusFreightOriginOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightOriginOutput)
}

func (i StageStatusLastPromotionStatusFreightOriginArgs) ToStageStatusLastPromotionStatusFreightOriginPtrOutput() StageStatusLastPromotionStatusFreightOriginPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightOriginPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightOriginArgs) ToStageStatusLastPromotionStatusFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightOriginOutput).ToStageStatusLastPromotionStatusFreightOriginPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionStatusFreightOriginPtrInput is an input type that accepts StageStatusLastPromotionStatusFreightOriginArgs, StageStatusLastPromotionStatusFreightOriginPtr and StageStatusLastPromotionStatusFreightOriginPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightOriginPtrInput` via:
//
//	        StageStatusLastPromotionStatusFreightOriginArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionStatusFreightOriginPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightOriginPtrOutput() StageStatusLastPromotionStatusFreightOriginPtrOutput
	ToStageStatusLastPromotionStatusFreightOriginPtrOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightOriginPtrOutput
}

type stageStatusLastPromotionStatusFreightOriginPtrType StageStatusLastPromotionStatusFreightOriginArgs

func StageStatusLastPromotionStatusFreightOriginPtr(v *StageStatusLastPromotionStatusFreightOriginArgs) StageStatusLastPromotionStatusFreightOriginPtrInput {
	return (*stageStatusLastPromotionStatusFreightOriginPtrType)(v)
}

func (*stageStatusLastPromotionStatusFreightOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreightOrigin)(nil)).Elem()
}

func (i *stageStatusLastPromotionStatusFreightOriginPtrType) ToStageStatusLastPromotionStatusFreightOriginPtrOutput() StageStatusLastPromotionStatusFreightOriginPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightOriginPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionStatusFreightOriginPtrType) ToStageStatusLastPromotionStatusFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightOriginPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusLastPromotionStatusFreightOriginOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightOrigin)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightOriginOutput) ToStageStatusLastPromotionStatusFreightOriginOutput() StageStatusLastPromotionStatusFreightOriginOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightOriginOutput) ToStageStatusLastPromotionStatusFreightOriginOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightOriginOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightOriginOutput) ToStageStatusLastPromotionStatusFreightOriginPtrOutput() StageStatusLastPromotionStatusFreightOriginPtrOutput {
	return o.ToStageStatusLastPromotionStatusFreightOriginPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionStatusFreightOriginOutput) ToStageStatusLastPromotionStatusFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionStatusFreightOrigin) *StageStatusLastPromotionStatusFreightOrigin {
		return &v
	}).(StageStatusLastPromotionStatusFreightOriginPtrOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusLastPromotionStatusFreightOriginOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightOrigin) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusLastPromotionStatusFreightOriginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightOrigin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusFreightOriginPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreightOrigin)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightOriginPtrOutput) ToStageStatusLastPromotionStatusFreightOriginPtrOutput() StageStatusLastPromotionStatusFreightOriginPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightOriginPtrOutput) ToStageStatusLastPromotionStatusFreightOriginPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightOriginPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightOriginPtrOutput) Elem() StageStatusLastPromotionStatusFreightOriginOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightOrigin) StageStatusLastPromotionStatusFreightOrigin {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionStatusFreightOrigin
		return ret
	}).(StageStatusLastPromotionStatusFreightOriginOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusLastPromotionStatusFreightOriginPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusLastPromotionStatusFreightOriginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusLastPromotionStatusFreightOriginPatch struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name *string `pulumi:"name"`
}

// StageStatusLastPromotionStatusFreightOriginPatchInput is an input type that accepts StageStatusLastPromotionStatusFreightOriginPatchArgs and StageStatusLastPromotionStatusFreightOriginPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightOriginPatchInput` via:
//
//	StageStatusLastPromotionStatusFreightOriginPatchArgs{...}
type StageStatusLastPromotionStatusFreightOriginPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightOriginPatchOutput() StageStatusLastPromotionStatusFreightOriginPatchOutput
	ToStageStatusLastPromotionStatusFreightOriginPatchOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightOriginPatchOutput
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusLastPromotionStatusFreightOriginPatchArgs struct {
	// Kind is the kind of resource from which Freight may have originated. At
	// present, this can only be "Warehouse".
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource of the kind indicated by the Kind field
	// from which Freight may originate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StageStatusLastPromotionStatusFreightOriginPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightOriginPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightOriginPatchArgs) ToStageStatusLastPromotionStatusFreightOriginPatchOutput() StageStatusLastPromotionStatusFreightOriginPatchOutput {
	return i.ToStageStatusLastPromotionStatusFreightOriginPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightOriginPatchArgs) ToStageStatusLastPromotionStatusFreightOriginPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightOriginPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightOriginPatchOutput)
}

func (i StageStatusLastPromotionStatusFreightOriginPatchArgs) ToStageStatusLastPromotionStatusFreightOriginPatchPtrOutput() StageStatusLastPromotionStatusFreightOriginPatchPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightOriginPatchArgs) ToStageStatusLastPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightOriginPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightOriginPatchOutput).ToStageStatusLastPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionStatusFreightOriginPatchPtrInput is an input type that accepts StageStatusLastPromotionStatusFreightOriginPatchArgs, StageStatusLastPromotionStatusFreightOriginPatchPtr and StageStatusLastPromotionStatusFreightOriginPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightOriginPatchPtrInput` via:
//
//	        StageStatusLastPromotionStatusFreightOriginPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionStatusFreightOriginPatchPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightOriginPatchPtrOutput() StageStatusLastPromotionStatusFreightOriginPatchPtrOutput
	ToStageStatusLastPromotionStatusFreightOriginPatchPtrOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightOriginPatchPtrOutput
}

type stageStatusLastPromotionStatusFreightOriginPatchPtrType StageStatusLastPromotionStatusFreightOriginPatchArgs

func StageStatusLastPromotionStatusFreightOriginPatchPtr(v *StageStatusLastPromotionStatusFreightOriginPatchArgs) StageStatusLastPromotionStatusFreightOriginPatchPtrInput {
	return (*stageStatusLastPromotionStatusFreightOriginPatchPtrType)(v)
}

func (*stageStatusLastPromotionStatusFreightOriginPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreightOriginPatch)(nil)).Elem()
}

func (i *stageStatusLastPromotionStatusFreightOriginPatchPtrType) ToStageStatusLastPromotionStatusFreightOriginPatchPtrOutput() StageStatusLastPromotionStatusFreightOriginPatchPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionStatusFreightOriginPatchPtrType) ToStageStatusLastPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightOriginPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightOriginPatchPtrOutput)
}

// Origin describes a kind of Freight in terms of its origin.
type StageStatusLastPromotionStatusFreightOriginPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightOriginPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightOriginPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightOriginPatchOutput) ToStageStatusLastPromotionStatusFreightOriginPatchOutput() StageStatusLastPromotionStatusFreightOriginPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightOriginPatchOutput) ToStageStatusLastPromotionStatusFreightOriginPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightOriginPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightOriginPatchOutput) ToStageStatusLastPromotionStatusFreightOriginPatchPtrOutput() StageStatusLastPromotionStatusFreightOriginPatchPtrOutput {
	return o.ToStageStatusLastPromotionStatusFreightOriginPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionStatusFreightOriginPatchOutput) ToStageStatusLastPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightOriginPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionStatusFreightOriginPatch) *StageStatusLastPromotionStatusFreightOriginPatch {
		return &v
	}).(StageStatusLastPromotionStatusFreightOriginPatchPtrOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusLastPromotionStatusFreightOriginPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightOriginPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusLastPromotionStatusFreightOriginPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightOriginPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusFreightOriginPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightOriginPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreightOriginPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightOriginPatchPtrOutput) ToStageStatusLastPromotionStatusFreightOriginPatchPtrOutput() StageStatusLastPromotionStatusFreightOriginPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightOriginPatchPtrOutput) ToStageStatusLastPromotionStatusFreightOriginPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightOriginPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightOriginPatchPtrOutput) Elem() StageStatusLastPromotionStatusFreightOriginPatchOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightOriginPatch) StageStatusLastPromotionStatusFreightOriginPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionStatusFreightOriginPatch
		return ret
	}).(StageStatusLastPromotionStatusFreightOriginPatchOutput)
}

// Kind is the kind of resource from which Freight may have originated. At
// present, this can only be "Warehouse".
func (o StageStatusLastPromotionStatusFreightOriginPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightOriginPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of the resource of the kind indicated by the Kind field
// from which Freight may originate.
func (o StageStatusLastPromotionStatusFreightOriginPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightOriginPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type StageStatusLastPromotionStatusFreightPatch struct {
	// Charts describes specific versions of specific Helm charts.
	Charts []StageStatusLastPromotionStatusFreightChartsPatch `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits []StageStatusLastPromotionStatusFreightCommitsPatch `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images []StageStatusLastPromotionStatusFreightImagesPatch `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   *string                                           `pulumi:"name"`
	Origin *StageStatusLastPromotionStatusFreightOriginPatch `pulumi:"origin"`
}

// StageStatusLastPromotionStatusFreightPatchInput is an input type that accepts StageStatusLastPromotionStatusFreightPatchArgs and StageStatusLastPromotionStatusFreightPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightPatchInput` via:
//
//	StageStatusLastPromotionStatusFreightPatchArgs{...}
type StageStatusLastPromotionStatusFreightPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightPatchOutput() StageStatusLastPromotionStatusFreightPatchOutput
	ToStageStatusLastPromotionStatusFreightPatchOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightPatchOutput
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type StageStatusLastPromotionStatusFreightPatchArgs struct {
	// Charts describes specific versions of specific Helm charts.
	Charts StageStatusLastPromotionStatusFreightChartsPatchArrayInput `pulumi:"charts"`
	// Commits describes specific Git repository commits.
	Commits StageStatusLastPromotionStatusFreightCommitsPatchArrayInput `pulumi:"commits"`
	// Images describes specific versions of specific container images.
	Images StageStatusLastPromotionStatusFreightImagesPatchArrayInput `pulumi:"images"`
	// Name is a system-assigned identifier derived deterministically from
	// the contents of the Freight. I.e., two pieces of Freight can be compared
	// for equality by comparing their Names.
	Name   pulumi.StringPtrInput                                    `pulumi:"name"`
	Origin StageStatusLastPromotionStatusFreightOriginPatchPtrInput `pulumi:"origin"`
}

func (StageStatusLastPromotionStatusFreightPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusFreightPatchArgs) ToStageStatusLastPromotionStatusFreightPatchOutput() StageStatusLastPromotionStatusFreightPatchOutput {
	return i.ToStageStatusLastPromotionStatusFreightPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightPatchArgs) ToStageStatusLastPromotionStatusFreightPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightPatchOutput)
}

func (i StageStatusLastPromotionStatusFreightPatchArgs) ToStageStatusLastPromotionStatusFreightPatchPtrOutput() StageStatusLastPromotionStatusFreightPatchPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusFreightPatchArgs) ToStageStatusLastPromotionStatusFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightPatchOutput).ToStageStatusLastPromotionStatusFreightPatchPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionStatusFreightPatchPtrInput is an input type that accepts StageStatusLastPromotionStatusFreightPatchArgs, StageStatusLastPromotionStatusFreightPatchPtr and StageStatusLastPromotionStatusFreightPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusFreightPatchPtrInput` via:
//
//	        StageStatusLastPromotionStatusFreightPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionStatusFreightPatchPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusFreightPatchPtrOutput() StageStatusLastPromotionStatusFreightPatchPtrOutput
	ToStageStatusLastPromotionStatusFreightPatchPtrOutputWithContext(context.Context) StageStatusLastPromotionStatusFreightPatchPtrOutput
}

type stageStatusLastPromotionStatusFreightPatchPtrType StageStatusLastPromotionStatusFreightPatchArgs

func StageStatusLastPromotionStatusFreightPatchPtr(v *StageStatusLastPromotionStatusFreightPatchArgs) StageStatusLastPromotionStatusFreightPatchPtrInput {
	return (*stageStatusLastPromotionStatusFreightPatchPtrType)(v)
}

func (*stageStatusLastPromotionStatusFreightPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreightPatch)(nil)).Elem()
}

func (i *stageStatusLastPromotionStatusFreightPatchPtrType) ToStageStatusLastPromotionStatusFreightPatchPtrOutput() StageStatusLastPromotionStatusFreightPatchPtrOutput {
	return i.ToStageStatusLastPromotionStatusFreightPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionStatusFreightPatchPtrType) ToStageStatusLastPromotionStatusFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusFreightPatchPtrOutput)
}

// Freight is the detail of the piece of freight that was referenced by this promotion.
type StageStatusLastPromotionStatusFreightPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusFreightPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightPatchOutput) ToStageStatusLastPromotionStatusFreightPatchOutput() StageStatusLastPromotionStatusFreightPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightPatchOutput) ToStageStatusLastPromotionStatusFreightPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightPatchOutput) ToStageStatusLastPromotionStatusFreightPatchPtrOutput() StageStatusLastPromotionStatusFreightPatchPtrOutput {
	return o.ToStageStatusLastPromotionStatusFreightPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionStatusFreightPatchOutput) ToStageStatusLastPromotionStatusFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionStatusFreightPatch) *StageStatusLastPromotionStatusFreightPatch {
		return &v
	}).(StageStatusLastPromotionStatusFreightPatchPtrOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusLastPromotionStatusFreightPatchOutput) Charts() StageStatusLastPromotionStatusFreightChartsPatchArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightPatch) []StageStatusLastPromotionStatusFreightChartsPatch {
		return v.Charts
	}).(StageStatusLastPromotionStatusFreightChartsPatchArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusLastPromotionStatusFreightPatchOutput) Commits() StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightPatch) []StageStatusLastPromotionStatusFreightCommitsPatch {
		return v.Commits
	}).(StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusLastPromotionStatusFreightPatchOutput) Images() StageStatusLastPromotionStatusFreightImagesPatchArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightPatch) []StageStatusLastPromotionStatusFreightImagesPatch {
		return v.Images
	}).(StageStatusLastPromotionStatusFreightImagesPatchArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusLastPromotionStatusFreightPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionStatusFreightPatchOutput) Origin() StageStatusLastPromotionStatusFreightOriginPatchPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusFreightPatch) *StageStatusLastPromotionStatusFreightOriginPatch {
		return v.Origin
	}).(StageStatusLastPromotionStatusFreightOriginPatchPtrOutput)
}

type StageStatusLastPromotionStatusFreightPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusFreightPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusFreightPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusFreightPatchPtrOutput) ToStageStatusLastPromotionStatusFreightPatchPtrOutput() StageStatusLastPromotionStatusFreightPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightPatchPtrOutput) ToStageStatusLastPromotionStatusFreightPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusFreightPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusFreightPatchPtrOutput) Elem() StageStatusLastPromotionStatusFreightPatchOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightPatch) StageStatusLastPromotionStatusFreightPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionStatusFreightPatch
		return ret
	}).(StageStatusLastPromotionStatusFreightPatchOutput)
}

// Charts describes specific versions of specific Helm charts.
func (o StageStatusLastPromotionStatusFreightPatchPtrOutput) Charts() StageStatusLastPromotionStatusFreightChartsPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightPatch) []StageStatusLastPromotionStatusFreightChartsPatch {
		if v == nil {
			return nil
		}
		return v.Charts
	}).(StageStatusLastPromotionStatusFreightChartsPatchArrayOutput)
}

// Commits describes specific Git repository commits.
func (o StageStatusLastPromotionStatusFreightPatchPtrOutput) Commits() StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightPatch) []StageStatusLastPromotionStatusFreightCommitsPatch {
		if v == nil {
			return nil
		}
		return v.Commits
	}).(StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput)
}

// Images describes specific versions of specific container images.
func (o StageStatusLastPromotionStatusFreightPatchPtrOutput) Images() StageStatusLastPromotionStatusFreightImagesPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightPatch) []StageStatusLastPromotionStatusFreightImagesPatch {
		if v == nil {
			return nil
		}
		return v.Images
	}).(StageStatusLastPromotionStatusFreightImagesPatchArrayOutput)
}

// Name is a system-assigned identifier derived deterministically from
// the contents of the Freight. I.e., two pieces of Freight can be compared
// for equality by comparing their Names.
func (o StageStatusLastPromotionStatusFreightPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionStatusFreightPatchPtrOutput) Origin() StageStatusLastPromotionStatusFreightOriginPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusFreightPatch) *StageStatusLastPromotionStatusFreightOriginPatch {
		if v == nil {
			return nil
		}
		return v.Origin
	}).(StageStatusLastPromotionStatusFreightOriginPatchPtrOutput)
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type StageStatusLastPromotionStatusHealthChecks struct {
	// Config is the configuration for the directive.
	Config map[string]interface{} `pulumi:"config"`
	// Uses identifies a runner that can execute this step.
	Uses *string `pulumi:"uses"`
}

// StageStatusLastPromotionStatusHealthChecksInput is an input type that accepts StageStatusLastPromotionStatusHealthChecksArgs and StageStatusLastPromotionStatusHealthChecksOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusHealthChecksInput` via:
//
//	StageStatusLastPromotionStatusHealthChecksArgs{...}
type StageStatusLastPromotionStatusHealthChecksInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusHealthChecksOutput() StageStatusLastPromotionStatusHealthChecksOutput
	ToStageStatusLastPromotionStatusHealthChecksOutputWithContext(context.Context) StageStatusLastPromotionStatusHealthChecksOutput
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type StageStatusLastPromotionStatusHealthChecksArgs struct {
	// Config is the configuration for the directive.
	Config pulumi.MapInput `pulumi:"config"`
	// Uses identifies a runner that can execute this step.
	Uses pulumi.StringPtrInput `pulumi:"uses"`
}

func (StageStatusLastPromotionStatusHealthChecksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusHealthChecks)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusHealthChecksArgs) ToStageStatusLastPromotionStatusHealthChecksOutput() StageStatusLastPromotionStatusHealthChecksOutput {
	return i.ToStageStatusLastPromotionStatusHealthChecksOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusHealthChecksArgs) ToStageStatusLastPromotionStatusHealthChecksOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusHealthChecksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusHealthChecksOutput)
}

// StageStatusLastPromotionStatusHealthChecksArrayInput is an input type that accepts StageStatusLastPromotionStatusHealthChecksArray and StageStatusLastPromotionStatusHealthChecksArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusHealthChecksArrayInput` via:
//
//	StageStatusLastPromotionStatusHealthChecksArray{ StageStatusLastPromotionStatusHealthChecksArgs{...} }
type StageStatusLastPromotionStatusHealthChecksArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusHealthChecksArrayOutput() StageStatusLastPromotionStatusHealthChecksArrayOutput
	ToStageStatusLastPromotionStatusHealthChecksArrayOutputWithContext(context.Context) StageStatusLastPromotionStatusHealthChecksArrayOutput
}

type StageStatusLastPromotionStatusHealthChecksArray []StageStatusLastPromotionStatusHealthChecksInput

func (StageStatusLastPromotionStatusHealthChecksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusHealthChecks)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusHealthChecksArray) ToStageStatusLastPromotionStatusHealthChecksArrayOutput() StageStatusLastPromotionStatusHealthChecksArrayOutput {
	return i.ToStageStatusLastPromotionStatusHealthChecksArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusHealthChecksArray) ToStageStatusLastPromotionStatusHealthChecksArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusHealthChecksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusHealthChecksArrayOutput)
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type StageStatusLastPromotionStatusHealthChecksOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusHealthChecksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusHealthChecks)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusHealthChecksOutput) ToStageStatusLastPromotionStatusHealthChecksOutput() StageStatusLastPromotionStatusHealthChecksOutput {
	return o
}

func (o StageStatusLastPromotionStatusHealthChecksOutput) ToStageStatusLastPromotionStatusHealthChecksOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusHealthChecksOutput {
	return o
}

// Config is the configuration for the directive.
func (o StageStatusLastPromotionStatusHealthChecksOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusHealthChecks) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// Uses identifies a runner that can execute this step.
func (o StageStatusLastPromotionStatusHealthChecksOutput) Uses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusHealthChecks) *string { return v.Uses }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusHealthChecksArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusHealthChecksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusHealthChecks)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusHealthChecksArrayOutput) ToStageStatusLastPromotionStatusHealthChecksArrayOutput() StageStatusLastPromotionStatusHealthChecksArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusHealthChecksArrayOutput) ToStageStatusLastPromotionStatusHealthChecksArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusHealthChecksArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusHealthChecksArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionStatusHealthChecksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionStatusHealthChecks {
		return vs[0].([]StageStatusLastPromotionStatusHealthChecks)[vs[1].(int)]
	}).(StageStatusLastPromotionStatusHealthChecksOutput)
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type StageStatusLastPromotionStatusHealthChecksPatch struct {
	// Config is the configuration for the directive.
	Config map[string]interface{} `pulumi:"config"`
	// Uses identifies a runner that can execute this step.
	Uses *string `pulumi:"uses"`
}

// StageStatusLastPromotionStatusHealthChecksPatchInput is an input type that accepts StageStatusLastPromotionStatusHealthChecksPatchArgs and StageStatusLastPromotionStatusHealthChecksPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusHealthChecksPatchInput` via:
//
//	StageStatusLastPromotionStatusHealthChecksPatchArgs{...}
type StageStatusLastPromotionStatusHealthChecksPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusHealthChecksPatchOutput() StageStatusLastPromotionStatusHealthChecksPatchOutput
	ToStageStatusLastPromotionStatusHealthChecksPatchOutputWithContext(context.Context) StageStatusLastPromotionStatusHealthChecksPatchOutput
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type StageStatusLastPromotionStatusHealthChecksPatchArgs struct {
	// Config is the configuration for the directive.
	Config pulumi.MapInput `pulumi:"config"`
	// Uses identifies a runner that can execute this step.
	Uses pulumi.StringPtrInput `pulumi:"uses"`
}

func (StageStatusLastPromotionStatusHealthChecksPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusHealthChecksPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusHealthChecksPatchArgs) ToStageStatusLastPromotionStatusHealthChecksPatchOutput() StageStatusLastPromotionStatusHealthChecksPatchOutput {
	return i.ToStageStatusLastPromotionStatusHealthChecksPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusHealthChecksPatchArgs) ToStageStatusLastPromotionStatusHealthChecksPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusHealthChecksPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusHealthChecksPatchOutput)
}

// StageStatusLastPromotionStatusHealthChecksPatchArrayInput is an input type that accepts StageStatusLastPromotionStatusHealthChecksPatchArray and StageStatusLastPromotionStatusHealthChecksPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusHealthChecksPatchArrayInput` via:
//
//	StageStatusLastPromotionStatusHealthChecksPatchArray{ StageStatusLastPromotionStatusHealthChecksPatchArgs{...} }
type StageStatusLastPromotionStatusHealthChecksPatchArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusHealthChecksPatchArrayOutput() StageStatusLastPromotionStatusHealthChecksPatchArrayOutput
	ToStageStatusLastPromotionStatusHealthChecksPatchArrayOutputWithContext(context.Context) StageStatusLastPromotionStatusHealthChecksPatchArrayOutput
}

type StageStatusLastPromotionStatusHealthChecksPatchArray []StageStatusLastPromotionStatusHealthChecksPatchInput

func (StageStatusLastPromotionStatusHealthChecksPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusHealthChecksPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusHealthChecksPatchArray) ToStageStatusLastPromotionStatusHealthChecksPatchArrayOutput() StageStatusLastPromotionStatusHealthChecksPatchArrayOutput {
	return i.ToStageStatusLastPromotionStatusHealthChecksPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusHealthChecksPatchArray) ToStageStatusLastPromotionStatusHealthChecksPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusHealthChecksPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusHealthChecksPatchArrayOutput)
}

// HealthCheckStep describes a health check directive which can be executed by
// a Stage to verify the health of a Promotion result.
type StageStatusLastPromotionStatusHealthChecksPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusHealthChecksPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusHealthChecksPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusHealthChecksPatchOutput) ToStageStatusLastPromotionStatusHealthChecksPatchOutput() StageStatusLastPromotionStatusHealthChecksPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusHealthChecksPatchOutput) ToStageStatusLastPromotionStatusHealthChecksPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusHealthChecksPatchOutput {
	return o
}

// Config is the configuration for the directive.
func (o StageStatusLastPromotionStatusHealthChecksPatchOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusHealthChecksPatch) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// Uses identifies a runner that can execute this step.
func (o StageStatusLastPromotionStatusHealthChecksPatchOutput) Uses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusHealthChecksPatch) *string { return v.Uses }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusHealthChecksPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusHealthChecksPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusHealthChecksPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusHealthChecksPatchArrayOutput) ToStageStatusLastPromotionStatusHealthChecksPatchArrayOutput() StageStatusLastPromotionStatusHealthChecksPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusHealthChecksPatchArrayOutput) ToStageStatusLastPromotionStatusHealthChecksPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusHealthChecksPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusHealthChecksPatchArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionStatusHealthChecksPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionStatusHealthChecksPatch {
		return vs[0].([]StageStatusLastPromotionStatusHealthChecksPatch)[vs[1].(int)]
	}).(StageStatusLastPromotionStatusHealthChecksPatchOutput)
}

// Status is the (optional) status of the Promotion.
type StageStatusLastPromotionStatusPatch struct {
	// CurrentStep is the index of the current promotion step being executed. This
	// permits steps that have already run successfully to be skipped on
	// subsequent reconciliations attempts.
	CurrentStep *int `pulumi:"currentStep"`
	// FinishedAt is the time when the promotion was completed.
	FinishedAt        *string                                               `pulumi:"finishedAt"`
	Freight           *StageStatusLastPromotionStatusFreightPatch           `pulumi:"freight"`
	FreightCollection *StageStatusLastPromotionStatusFreightCollectionPatch `pulumi:"freightCollection"`
	// HealthChecks contains the health check directives to be executed after
	// the Promotion has completed.
	HealthChecks []StageStatusLastPromotionStatusHealthChecksPatch `pulumi:"healthChecks"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh *string `pulumi:"lastHandledRefresh"`
	// Message is a display message about the promotion, including any errors
	// preventing the Promotion controller from executing this Promotion.
	// i.e. If the Phase field has a value of Failed, this field can be expected
	// to explain why.
	Message *string `pulumi:"message"`
	// Phase describes where the Promotion currently is in its lifecycle.
	Phase *string `pulumi:"phase"`
	// State stores the state of the promotion process between reconciliation
	// attempts.
	State map[string]interface{} `pulumi:"state"`
	// StepExecutionMetadata tracks metadata pertaining to the execution
	// of individual promotion steps.
	StepExecutionMetadata []StageStatusLastPromotionStatusStepExecutionMetadataPatch `pulumi:"stepExecutionMetadata"`
}

// StageStatusLastPromotionStatusPatchInput is an input type that accepts StageStatusLastPromotionStatusPatchArgs and StageStatusLastPromotionStatusPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusPatchInput` via:
//
//	StageStatusLastPromotionStatusPatchArgs{...}
type StageStatusLastPromotionStatusPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusPatchOutput() StageStatusLastPromotionStatusPatchOutput
	ToStageStatusLastPromotionStatusPatchOutputWithContext(context.Context) StageStatusLastPromotionStatusPatchOutput
}

// Status is the (optional) status of the Promotion.
type StageStatusLastPromotionStatusPatchArgs struct {
	// CurrentStep is the index of the current promotion step being executed. This
	// permits steps that have already run successfully to be skipped on
	// subsequent reconciliations attempts.
	CurrentStep pulumi.IntPtrInput `pulumi:"currentStep"`
	// FinishedAt is the time when the promotion was completed.
	FinishedAt        pulumi.StringPtrInput                                        `pulumi:"finishedAt"`
	Freight           StageStatusLastPromotionStatusFreightPatchPtrInput           `pulumi:"freight"`
	FreightCollection StageStatusLastPromotionStatusFreightCollectionPatchPtrInput `pulumi:"freightCollection"`
	// HealthChecks contains the health check directives to be executed after
	// the Promotion has completed.
	HealthChecks StageStatusLastPromotionStatusHealthChecksPatchArrayInput `pulumi:"healthChecks"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh pulumi.StringPtrInput `pulumi:"lastHandledRefresh"`
	// Message is a display message about the promotion, including any errors
	// preventing the Promotion controller from executing this Promotion.
	// i.e. If the Phase field has a value of Failed, this field can be expected
	// to explain why.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Phase describes where the Promotion currently is in its lifecycle.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// State stores the state of the promotion process between reconciliation
	// attempts.
	State pulumi.MapInput `pulumi:"state"`
	// StepExecutionMetadata tracks metadata pertaining to the execution
	// of individual promotion steps.
	StepExecutionMetadata StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayInput `pulumi:"stepExecutionMetadata"`
}

func (StageStatusLastPromotionStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusPatchArgs) ToStageStatusLastPromotionStatusPatchOutput() StageStatusLastPromotionStatusPatchOutput {
	return i.ToStageStatusLastPromotionStatusPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusPatchArgs) ToStageStatusLastPromotionStatusPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusPatchOutput)
}

func (i StageStatusLastPromotionStatusPatchArgs) ToStageStatusLastPromotionStatusPatchPtrOutput() StageStatusLastPromotionStatusPatchPtrOutput {
	return i.ToStageStatusLastPromotionStatusPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusPatchArgs) ToStageStatusLastPromotionStatusPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusPatchOutput).ToStageStatusLastPromotionStatusPatchPtrOutputWithContext(ctx)
}

// StageStatusLastPromotionStatusPatchPtrInput is an input type that accepts StageStatusLastPromotionStatusPatchArgs, StageStatusLastPromotionStatusPatchPtr and StageStatusLastPromotionStatusPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusPatchPtrInput` via:
//
//	        StageStatusLastPromotionStatusPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusLastPromotionStatusPatchPtrInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusPatchPtrOutput() StageStatusLastPromotionStatusPatchPtrOutput
	ToStageStatusLastPromotionStatusPatchPtrOutputWithContext(context.Context) StageStatusLastPromotionStatusPatchPtrOutput
}

type stageStatusLastPromotionStatusPatchPtrType StageStatusLastPromotionStatusPatchArgs

func StageStatusLastPromotionStatusPatchPtr(v *StageStatusLastPromotionStatusPatchArgs) StageStatusLastPromotionStatusPatchPtrInput {
	return (*stageStatusLastPromotionStatusPatchPtrType)(v)
}

func (*stageStatusLastPromotionStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusPatch)(nil)).Elem()
}

func (i *stageStatusLastPromotionStatusPatchPtrType) ToStageStatusLastPromotionStatusPatchPtrOutput() StageStatusLastPromotionStatusPatchPtrOutput {
	return i.ToStageStatusLastPromotionStatusPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusLastPromotionStatusPatchPtrType) ToStageStatusLastPromotionStatusPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusPatchPtrOutput)
}

// Status is the (optional) status of the Promotion.
type StageStatusLastPromotionStatusPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusPatchOutput) ToStageStatusLastPromotionStatusPatchOutput() StageStatusLastPromotionStatusPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusPatchOutput) ToStageStatusLastPromotionStatusPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusPatchOutput) ToStageStatusLastPromotionStatusPatchPtrOutput() StageStatusLastPromotionStatusPatchPtrOutput {
	return o.ToStageStatusLastPromotionStatusPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusLastPromotionStatusPatchOutput) ToStageStatusLastPromotionStatusPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusLastPromotionStatusPatch) *StageStatusLastPromotionStatusPatch {
		return &v
	}).(StageStatusLastPromotionStatusPatchPtrOutput)
}

// CurrentStep is the index of the current promotion step being executed. This
// permits steps that have already run successfully to be skipped on
// subsequent reconciliations attempts.
func (o StageStatusLastPromotionStatusPatchOutput) CurrentStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusPatch) *int { return v.CurrentStep }).(pulumi.IntPtrOutput)
}

// FinishedAt is the time when the promotion was completed.
func (o StageStatusLastPromotionStatusPatchOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusPatch) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionStatusPatchOutput) Freight() StageStatusLastPromotionStatusFreightPatchPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusPatch) *StageStatusLastPromotionStatusFreightPatch {
		return v.Freight
	}).(StageStatusLastPromotionStatusFreightPatchPtrOutput)
}

func (o StageStatusLastPromotionStatusPatchOutput) FreightCollection() StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusPatch) *StageStatusLastPromotionStatusFreightCollectionPatch {
		return v.FreightCollection
	}).(StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput)
}

// HealthChecks contains the health check directives to be executed after
// the Promotion has completed.
func (o StageStatusLastPromotionStatusPatchOutput) HealthChecks() StageStatusLastPromotionStatusHealthChecksPatchArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusPatch) []StageStatusLastPromotionStatusHealthChecksPatch {
		return v.HealthChecks
	}).(StageStatusLastPromotionStatusHealthChecksPatchArrayOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o StageStatusLastPromotionStatusPatchOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusPatch) *string { return v.LastHandledRefresh }).(pulumi.StringPtrOutput)
}

// Message is a display message about the promotion, including any errors
// preventing the Promotion controller from executing this Promotion.
// i.e. If the Phase field has a value of Failed, this field can be expected
// to explain why.
func (o StageStatusLastPromotionStatusPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Phase describes where the Promotion currently is in its lifecycle.
func (o StageStatusLastPromotionStatusPatchOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusPatch) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// State stores the state of the promotion process between reconciliation
// attempts.
func (o StageStatusLastPromotionStatusPatchOutput) State() pulumi.MapOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusPatch) map[string]interface{} { return v.State }).(pulumi.MapOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution
// of individual promotion steps.
func (o StageStatusLastPromotionStatusPatchOutput) StepExecutionMetadata() StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusPatch) []StageStatusLastPromotionStatusStepExecutionMetadataPatch {
		return v.StepExecutionMetadata
	}).(StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput)
}

type StageStatusLastPromotionStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusLastPromotionStatusPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusPatchPtrOutput) ToStageStatusLastPromotionStatusPatchPtrOutput() StageStatusLastPromotionStatusPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusPatchPtrOutput) ToStageStatusLastPromotionStatusPatchPtrOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusPatchPtrOutput {
	return o
}

func (o StageStatusLastPromotionStatusPatchPtrOutput) Elem() StageStatusLastPromotionStatusPatchOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusPatch) StageStatusLastPromotionStatusPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusLastPromotionStatusPatch
		return ret
	}).(StageStatusLastPromotionStatusPatchOutput)
}

// CurrentStep is the index of the current promotion step being executed. This
// permits steps that have already run successfully to be skipped on
// subsequent reconciliations attempts.
func (o StageStatusLastPromotionStatusPatchPtrOutput) CurrentStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.CurrentStep
	}).(pulumi.IntPtrOutput)
}

// FinishedAt is the time when the promotion was completed.
func (o StageStatusLastPromotionStatusPatchPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusLastPromotionStatusPatchPtrOutput) Freight() StageStatusLastPromotionStatusFreightPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusPatch) *StageStatusLastPromotionStatusFreightPatch {
		if v == nil {
			return nil
		}
		return v.Freight
	}).(StageStatusLastPromotionStatusFreightPatchPtrOutput)
}

func (o StageStatusLastPromotionStatusPatchPtrOutput) FreightCollection() StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusPatch) *StageStatusLastPromotionStatusFreightCollectionPatch {
		if v == nil {
			return nil
		}
		return v.FreightCollection
	}).(StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput)
}

// HealthChecks contains the health check directives to be executed after
// the Promotion has completed.
func (o StageStatusLastPromotionStatusPatchPtrOutput) HealthChecks() StageStatusLastPromotionStatusHealthChecksPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusPatch) []StageStatusLastPromotionStatusHealthChecksPatch {
		if v == nil {
			return nil
		}
		return v.HealthChecks
	}).(StageStatusLastPromotionStatusHealthChecksPatchArrayOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o StageStatusLastPromotionStatusPatchPtrOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.LastHandledRefresh
	}).(pulumi.StringPtrOutput)
}

// Message is a display message about the promotion, including any errors
// preventing the Promotion controller from executing this Promotion.
// i.e. If the Phase field has a value of Failed, this field can be expected
// to explain why.
func (o StageStatusLastPromotionStatusPatchPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Phase describes where the Promotion currently is in its lifecycle.
func (o StageStatusLastPromotionStatusPatchPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// State stores the state of the promotion process between reconciliation
// attempts.
func (o StageStatusLastPromotionStatusPatchPtrOutput) State() pulumi.MapOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.MapOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution
// of individual promotion steps.
func (o StageStatusLastPromotionStatusPatchPtrOutput) StepExecutionMetadata() StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusLastPromotionStatusPatch) []StageStatusLastPromotionStatusStepExecutionMetadataPatch {
		if v == nil {
			return nil
		}
		return v.StepExecutionMetadata
	}).(StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type StageStatusLastPromotionStatusStepExecutionMetadata struct {
	// Alias is the alias of the step.
	Alias *string `pulumi:"alias"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// ErrorCount tracks consecutive failed attempts to execute the step.
	ErrorCount *int `pulumi:"errorCount"`
	// FinishedAt is the time at which the final attempt to execute the step
	// completed.
	FinishedAt *string `pulumi:"finishedAt"`
	// Message is a display message about the step, including any errors.
	Message *string `pulumi:"message"`
	// StartedAt is the time at which the first attempt to execute the step
	// began.
	StartedAt *string `pulumi:"startedAt"`
	// Status is the high-level outcome of the step.
	Status *string `pulumi:"status"`
}

// StageStatusLastPromotionStatusStepExecutionMetadataInput is an input type that accepts StageStatusLastPromotionStatusStepExecutionMetadataArgs and StageStatusLastPromotionStatusStepExecutionMetadataOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusStepExecutionMetadataInput` via:
//
//	StageStatusLastPromotionStatusStepExecutionMetadataArgs{...}
type StageStatusLastPromotionStatusStepExecutionMetadataInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusStepExecutionMetadataOutput() StageStatusLastPromotionStatusStepExecutionMetadataOutput
	ToStageStatusLastPromotionStatusStepExecutionMetadataOutputWithContext(context.Context) StageStatusLastPromotionStatusStepExecutionMetadataOutput
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type StageStatusLastPromotionStatusStepExecutionMetadataArgs struct {
	// Alias is the alias of the step.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError pulumi.BoolPtrInput `pulumi:"continueOnError"`
	// ErrorCount tracks consecutive failed attempts to execute the step.
	ErrorCount pulumi.IntPtrInput `pulumi:"errorCount"`
	// FinishedAt is the time at which the final attempt to execute the step
	// completed.
	FinishedAt pulumi.StringPtrInput `pulumi:"finishedAt"`
	// Message is a display message about the step, including any errors.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// StartedAt is the time at which the first attempt to execute the step
	// began.
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
	// Status is the high-level outcome of the step.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (StageStatusLastPromotionStatusStepExecutionMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusStepExecutionMetadata)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusStepExecutionMetadataArgs) ToStageStatusLastPromotionStatusStepExecutionMetadataOutput() StageStatusLastPromotionStatusStepExecutionMetadataOutput {
	return i.ToStageStatusLastPromotionStatusStepExecutionMetadataOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusStepExecutionMetadataArgs) ToStageStatusLastPromotionStatusStepExecutionMetadataOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusStepExecutionMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusStepExecutionMetadataOutput)
}

// StageStatusLastPromotionStatusStepExecutionMetadataArrayInput is an input type that accepts StageStatusLastPromotionStatusStepExecutionMetadataArray and StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusStepExecutionMetadataArrayInput` via:
//
//	StageStatusLastPromotionStatusStepExecutionMetadataArray{ StageStatusLastPromotionStatusStepExecutionMetadataArgs{...} }
type StageStatusLastPromotionStatusStepExecutionMetadataArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusStepExecutionMetadataArrayOutput() StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput
	ToStageStatusLastPromotionStatusStepExecutionMetadataArrayOutputWithContext(context.Context) StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput
}

type StageStatusLastPromotionStatusStepExecutionMetadataArray []StageStatusLastPromotionStatusStepExecutionMetadataInput

func (StageStatusLastPromotionStatusStepExecutionMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusStepExecutionMetadata)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusStepExecutionMetadataArray) ToStageStatusLastPromotionStatusStepExecutionMetadataArrayOutput() StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput {
	return i.ToStageStatusLastPromotionStatusStepExecutionMetadataArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusStepExecutionMetadataArray) ToStageStatusLastPromotionStatusStepExecutionMetadataArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type StageStatusLastPromotionStatusStepExecutionMetadataOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusStepExecutionMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusStepExecutionMetadata)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusStepExecutionMetadataOutput) ToStageStatusLastPromotionStatusStepExecutionMetadataOutput() StageStatusLastPromotionStatusStepExecutionMetadataOutput {
	return o
}

func (o StageStatusLastPromotionStatusStepExecutionMetadataOutput) ToStageStatusLastPromotionStatusStepExecutionMetadataOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusStepExecutionMetadataOutput {
	return o
}

// Alias is the alias of the step.
func (o StageStatusLastPromotionStatusStepExecutionMetadataOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusStepExecutionMetadata) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// ContinueOnError is a boolean value that, if set to true, will cause the
// Promotion to continue executing the next step even if this step fails. It
// also will not permit this failure to impact the overall status of the
// Promotion.
func (o StageStatusLastPromotionStatusStepExecutionMetadataOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusStepExecutionMetadata) *bool { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// ErrorCount tracks consecutive failed attempts to execute the step.
func (o StageStatusLastPromotionStatusStepExecutionMetadataOutput) ErrorCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusStepExecutionMetadata) *int { return v.ErrorCount }).(pulumi.IntPtrOutput)
}

// FinishedAt is the time at which the final attempt to execute the step
// completed.
func (o StageStatusLastPromotionStatusStepExecutionMetadataOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusStepExecutionMetadata) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

// Message is a display message about the step, including any errors.
func (o StageStatusLastPromotionStatusStepExecutionMetadataOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusStepExecutionMetadata) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// StartedAt is the time at which the first attempt to execute the step
// began.
func (o StageStatusLastPromotionStatusStepExecutionMetadataOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusStepExecutionMetadata) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

// Status is the high-level outcome of the step.
func (o StageStatusLastPromotionStatusStepExecutionMetadataOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusStepExecutionMetadata) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusStepExecutionMetadata)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput) ToStageStatusLastPromotionStatusStepExecutionMetadataArrayOutput() StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput) ToStageStatusLastPromotionStatusStepExecutionMetadataArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionStatusStepExecutionMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionStatusStepExecutionMetadata {
		return vs[0].([]StageStatusLastPromotionStatusStepExecutionMetadata)[vs[1].(int)]
	}).(StageStatusLastPromotionStatusStepExecutionMetadataOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type StageStatusLastPromotionStatusStepExecutionMetadataPatch struct {
	// Alias is the alias of the step.
	Alias *string `pulumi:"alias"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// ErrorCount tracks consecutive failed attempts to execute the step.
	ErrorCount *int `pulumi:"errorCount"`
	// FinishedAt is the time at which the final attempt to execute the step
	// completed.
	FinishedAt *string `pulumi:"finishedAt"`
	// Message is a display message about the step, including any errors.
	Message *string `pulumi:"message"`
	// StartedAt is the time at which the first attempt to execute the step
	// began.
	StartedAt *string `pulumi:"startedAt"`
	// Status is the high-level outcome of the step.
	Status *string `pulumi:"status"`
}

// StageStatusLastPromotionStatusStepExecutionMetadataPatchInput is an input type that accepts StageStatusLastPromotionStatusStepExecutionMetadataPatchArgs and StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusStepExecutionMetadataPatchInput` via:
//
//	StageStatusLastPromotionStatusStepExecutionMetadataPatchArgs{...}
type StageStatusLastPromotionStatusStepExecutionMetadataPatchInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusStepExecutionMetadataPatchOutput() StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput
	ToStageStatusLastPromotionStatusStepExecutionMetadataPatchOutputWithContext(context.Context) StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type StageStatusLastPromotionStatusStepExecutionMetadataPatchArgs struct {
	// Alias is the alias of the step.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// ContinueOnError is a boolean value that, if set to true, will cause the
	// Promotion to continue executing the next step even if this step fails. It
	// also will not permit this failure to impact the overall status of the
	// Promotion.
	ContinueOnError pulumi.BoolPtrInput `pulumi:"continueOnError"`
	// ErrorCount tracks consecutive failed attempts to execute the step.
	ErrorCount pulumi.IntPtrInput `pulumi:"errorCount"`
	// FinishedAt is the time at which the final attempt to execute the step
	// completed.
	FinishedAt pulumi.StringPtrInput `pulumi:"finishedAt"`
	// Message is a display message about the step, including any errors.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// StartedAt is the time at which the first attempt to execute the step
	// began.
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
	// Status is the high-level outcome of the step.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (StageStatusLastPromotionStatusStepExecutionMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusStepExecutionMetadataPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusStepExecutionMetadataPatchArgs) ToStageStatusLastPromotionStatusStepExecutionMetadataPatchOutput() StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput {
	return i.ToStageStatusLastPromotionStatusStepExecutionMetadataPatchOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusStepExecutionMetadataPatchArgs) ToStageStatusLastPromotionStatusStepExecutionMetadataPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput)
}

// StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayInput is an input type that accepts StageStatusLastPromotionStatusStepExecutionMetadataPatchArray and StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput values.
// You can construct a concrete instance of `StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayInput` via:
//
//	StageStatusLastPromotionStatusStepExecutionMetadataPatchArray{ StageStatusLastPromotionStatusStepExecutionMetadataPatchArgs{...} }
type StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayInput interface {
	pulumi.Input

	ToStageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput() StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput
	ToStageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutputWithContext(context.Context) StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput
}

type StageStatusLastPromotionStatusStepExecutionMetadataPatchArray []StageStatusLastPromotionStatusStepExecutionMetadataPatchInput

func (StageStatusLastPromotionStatusStepExecutionMetadataPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusStepExecutionMetadataPatch)(nil)).Elem()
}

func (i StageStatusLastPromotionStatusStepExecutionMetadataPatchArray) ToStageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput() StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput {
	return i.ToStageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutputWithContext(context.Background())
}

func (i StageStatusLastPromotionStatusStepExecutionMetadataPatchArray) ToStageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput)
}

// StepExecutionMetadata tracks metadata pertaining to the execution of
// a promotion step.
type StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusLastPromotionStatusStepExecutionMetadataPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput) ToStageStatusLastPromotionStatusStepExecutionMetadataPatchOutput() StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput {
	return o
}

func (o StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput) ToStageStatusLastPromotionStatusStepExecutionMetadataPatchOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput {
	return o
}

// Alias is the alias of the step.
func (o StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusStepExecutionMetadataPatch) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// ContinueOnError is a boolean value that, if set to true, will cause the
// Promotion to continue executing the next step even if this step fails. It
// also will not permit this failure to impact the overall status of the
// Promotion.
func (o StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusStepExecutionMetadataPatch) *bool { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// ErrorCount tracks consecutive failed attempts to execute the step.
func (o StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput) ErrorCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusStepExecutionMetadataPatch) *int { return v.ErrorCount }).(pulumi.IntPtrOutput)
}

// FinishedAt is the time at which the final attempt to execute the step
// completed.
func (o StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusStepExecutionMetadataPatch) *string { return v.FinishedAt }).(pulumi.StringPtrOutput)
}

// Message is a display message about the step, including any errors.
func (o StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusStepExecutionMetadataPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// StartedAt is the time at which the first attempt to execute the step
// began.
func (o StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusStepExecutionMetadataPatch) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

// Status is the high-level outcome of the step.
func (o StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusLastPromotionStatusStepExecutionMetadataPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput struct{ *pulumi.OutputState }

func (StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusLastPromotionStatusStepExecutionMetadataPatch)(nil)).Elem()
}

func (o StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput) ToStageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput() StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput) ToStageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutputWithContext(ctx context.Context) StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput {
	return o
}

func (o StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput) Index(i pulumi.IntInput) StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusLastPromotionStatusStepExecutionMetadataPatch {
		return vs[0].([]StageStatusLastPromotionStatusStepExecutionMetadataPatch)[vs[1].(int)]
	}).(StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput)
}

// Status describes the Stage's current and recent Freight, health, and more.
type StageStatusPatch struct {
	// Conditions contains the last observations of the Stage's current
	// state.
	Conditions       []StageStatusConditionsPatch      `pulumi:"conditions"`
	CurrentPromotion *StageStatusCurrentPromotionPatch `pulumi:"currentPromotion"`
	// FreightHistory is a list of recent Freight selections that were deployed
	// to the Stage. By default, the last ten Freight selections are stored.
	// The first item in the list is the most recent Freight selection and
	// currently deployed to the Stage, subsequent items are older selections.
	FreightHistory []StageStatusFreightHistoryPatch `pulumi:"freightHistory"`
	// FreightSummary is human-readable text maintained by the controller that
	// summarizes what Freight is currently deployed to the Stage. For Stages that
	// request a single piece of Freight AND the request has been fulfilled, this
	// field will simply contain the name of the Freight. For Stages that request
	// a single piece of Freight AND the request has NOT been fulfilled, or for
	// Stages that request multiple pieces of Freight, this field will contain a
	// summary of fulfilled/requested Freight. The existence of this field is a
	// workaround for kubectl limitations so that this complex but valuable
	// information can be displayed in a column in response to `kubectl get
	// stages`.
	FreightSummary *string                 `pulumi:"freightSummary"`
	Health         *StageStatusHealthPatch `pulumi:"health"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh *string                        `pulumi:"lastHandledRefresh"`
	LastPromotion      *StageStatusLastPromotionPatch `pulumi:"lastPromotion"`
	// ObservedGeneration represents the .metadata.generation that this Stage
	// status was reconciled against.
	ObservedGeneration *int `pulumi:"observedGeneration"`
}

// StageStatusPatchInput is an input type that accepts StageStatusPatchArgs and StageStatusPatchOutput values.
// You can construct a concrete instance of `StageStatusPatchInput` via:
//
//	StageStatusPatchArgs{...}
type StageStatusPatchInput interface {
	pulumi.Input

	ToStageStatusPatchOutput() StageStatusPatchOutput
	ToStageStatusPatchOutputWithContext(context.Context) StageStatusPatchOutput
}

// Status describes the Stage's current and recent Freight, health, and more.
type StageStatusPatchArgs struct {
	// Conditions contains the last observations of the Stage's current
	// state.
	Conditions       StageStatusConditionsPatchArrayInput     `pulumi:"conditions"`
	CurrentPromotion StageStatusCurrentPromotionPatchPtrInput `pulumi:"currentPromotion"`
	// FreightHistory is a list of recent Freight selections that were deployed
	// to the Stage. By default, the last ten Freight selections are stored.
	// The first item in the list is the most recent Freight selection and
	// currently deployed to the Stage, subsequent items are older selections.
	FreightHistory StageStatusFreightHistoryPatchArrayInput `pulumi:"freightHistory"`
	// FreightSummary is human-readable text maintained by the controller that
	// summarizes what Freight is currently deployed to the Stage. For Stages that
	// request a single piece of Freight AND the request has been fulfilled, this
	// field will simply contain the name of the Freight. For Stages that request
	// a single piece of Freight AND the request has NOT been fulfilled, or for
	// Stages that request multiple pieces of Freight, this field will contain a
	// summary of fulfilled/requested Freight. The existence of this field is a
	// workaround for kubectl limitations so that this complex but valuable
	// information can be displayed in a column in response to `kubectl get
	// stages`.
	FreightSummary pulumi.StringPtrInput          `pulumi:"freightSummary"`
	Health         StageStatusHealthPatchPtrInput `pulumi:"health"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh pulumi.StringPtrInput                 `pulumi:"lastHandledRefresh"`
	LastPromotion      StageStatusLastPromotionPatchPtrInput `pulumi:"lastPromotion"`
	// ObservedGeneration represents the .metadata.generation that this Stage
	// status was reconciled against.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
}

func (StageStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusPatch)(nil)).Elem()
}

func (i StageStatusPatchArgs) ToStageStatusPatchOutput() StageStatusPatchOutput {
	return i.ToStageStatusPatchOutputWithContext(context.Background())
}

func (i StageStatusPatchArgs) ToStageStatusPatchOutputWithContext(ctx context.Context) StageStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusPatchOutput)
}

func (i StageStatusPatchArgs) ToStageStatusPatchPtrOutput() StageStatusPatchPtrOutput {
	return i.ToStageStatusPatchPtrOutputWithContext(context.Background())
}

func (i StageStatusPatchArgs) ToStageStatusPatchPtrOutputWithContext(ctx context.Context) StageStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusPatchOutput).ToStageStatusPatchPtrOutputWithContext(ctx)
}

// StageStatusPatchPtrInput is an input type that accepts StageStatusPatchArgs, StageStatusPatchPtr and StageStatusPatchPtrOutput values.
// You can construct a concrete instance of `StageStatusPatchPtrInput` via:
//
//	        StageStatusPatchArgs{...}
//
//	or:
//
//	        nil
type StageStatusPatchPtrInput interface {
	pulumi.Input

	ToStageStatusPatchPtrOutput() StageStatusPatchPtrOutput
	ToStageStatusPatchPtrOutputWithContext(context.Context) StageStatusPatchPtrOutput
}

type stageStatusPatchPtrType StageStatusPatchArgs

func StageStatusPatchPtr(v *StageStatusPatchArgs) StageStatusPatchPtrInput {
	return (*stageStatusPatchPtrType)(v)
}

func (*stageStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusPatch)(nil)).Elem()
}

func (i *stageStatusPatchPtrType) ToStageStatusPatchPtrOutput() StageStatusPatchPtrOutput {
	return i.ToStageStatusPatchPtrOutputWithContext(context.Background())
}

func (i *stageStatusPatchPtrType) ToStageStatusPatchPtrOutputWithContext(ctx context.Context) StageStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageStatusPatchPtrOutput)
}

// Status describes the Stage's current and recent Freight, health, and more.
type StageStatusPatchOutput struct{ *pulumi.OutputState }

func (StageStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusPatch)(nil)).Elem()
}

func (o StageStatusPatchOutput) ToStageStatusPatchOutput() StageStatusPatchOutput {
	return o
}

func (o StageStatusPatchOutput) ToStageStatusPatchOutputWithContext(ctx context.Context) StageStatusPatchOutput {
	return o
}

func (o StageStatusPatchOutput) ToStageStatusPatchPtrOutput() StageStatusPatchPtrOutput {
	return o.ToStageStatusPatchPtrOutputWithContext(context.Background())
}

func (o StageStatusPatchOutput) ToStageStatusPatchPtrOutputWithContext(ctx context.Context) StageStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageStatusPatch) *StageStatusPatch {
		return &v
	}).(StageStatusPatchPtrOutput)
}

// Conditions contains the last observations of the Stage's current
// state.
func (o StageStatusPatchOutput) Conditions() StageStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v StageStatusPatch) []StageStatusConditionsPatch { return v.Conditions }).(StageStatusConditionsPatchArrayOutput)
}

func (o StageStatusPatchOutput) CurrentPromotion() StageStatusCurrentPromotionPatchPtrOutput {
	return o.ApplyT(func(v StageStatusPatch) *StageStatusCurrentPromotionPatch { return v.CurrentPromotion }).(StageStatusCurrentPromotionPatchPtrOutput)
}

// FreightHistory is a list of recent Freight selections that were deployed
// to the Stage. By default, the last ten Freight selections are stored.
// The first item in the list is the most recent Freight selection and
// currently deployed to the Stage, subsequent items are older selections.
func (o StageStatusPatchOutput) FreightHistory() StageStatusFreightHistoryPatchArrayOutput {
	return o.ApplyT(func(v StageStatusPatch) []StageStatusFreightHistoryPatch { return v.FreightHistory }).(StageStatusFreightHistoryPatchArrayOutput)
}

// FreightSummary is human-readable text maintained by the controller that
// summarizes what Freight is currently deployed to the Stage. For Stages that
// request a single piece of Freight AND the request has been fulfilled, this
// field will simply contain the name of the Freight. For Stages that request
// a single piece of Freight AND the request has NOT been fulfilled, or for
// Stages that request multiple pieces of Freight, this field will contain a
// summary of fulfilled/requested Freight. The existence of this field is a
// workaround for kubectl limitations so that this complex but valuable
// information can be displayed in a column in response to `kubectl get
// stages`.
func (o StageStatusPatchOutput) FreightSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusPatch) *string { return v.FreightSummary }).(pulumi.StringPtrOutput)
}

func (o StageStatusPatchOutput) Health() StageStatusHealthPatchPtrOutput {
	return o.ApplyT(func(v StageStatusPatch) *StageStatusHealthPatch { return v.Health }).(StageStatusHealthPatchPtrOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o StageStatusPatchOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusPatch) *string { return v.LastHandledRefresh }).(pulumi.StringPtrOutput)
}

func (o StageStatusPatchOutput) LastPromotion() StageStatusLastPromotionPatchPtrOutput {
	return o.ApplyT(func(v StageStatusPatch) *StageStatusLastPromotionPatch { return v.LastPromotion }).(StageStatusLastPromotionPatchPtrOutput)
}

// ObservedGeneration represents the .metadata.generation that this Stage
// status was reconciled against.
func (o StageStatusPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageStatusPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

type StageStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (StageStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageStatusPatch)(nil)).Elem()
}

func (o StageStatusPatchPtrOutput) ToStageStatusPatchPtrOutput() StageStatusPatchPtrOutput {
	return o
}

func (o StageStatusPatchPtrOutput) ToStageStatusPatchPtrOutputWithContext(ctx context.Context) StageStatusPatchPtrOutput {
	return o
}

func (o StageStatusPatchPtrOutput) Elem() StageStatusPatchOutput {
	return o.ApplyT(func(v *StageStatusPatch) StageStatusPatch {
		if v != nil {
			return *v
		}
		var ret StageStatusPatch
		return ret
	}).(StageStatusPatchOutput)
}

// Conditions contains the last observations of the Stage's current
// state.
func (o StageStatusPatchPtrOutput) Conditions() StageStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusPatch) []StageStatusConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(StageStatusConditionsPatchArrayOutput)
}

func (o StageStatusPatchPtrOutput) CurrentPromotion() StageStatusCurrentPromotionPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusPatch) *StageStatusCurrentPromotionPatch {
		if v == nil {
			return nil
		}
		return v.CurrentPromotion
	}).(StageStatusCurrentPromotionPatchPtrOutput)
}

// FreightHistory is a list of recent Freight selections that were deployed
// to the Stage. By default, the last ten Freight selections are stored.
// The first item in the list is the most recent Freight selection and
// currently deployed to the Stage, subsequent items are older selections.
func (o StageStatusPatchPtrOutput) FreightHistory() StageStatusFreightHistoryPatchArrayOutput {
	return o.ApplyT(func(v *StageStatusPatch) []StageStatusFreightHistoryPatch {
		if v == nil {
			return nil
		}
		return v.FreightHistory
	}).(StageStatusFreightHistoryPatchArrayOutput)
}

// FreightSummary is human-readable text maintained by the controller that
// summarizes what Freight is currently deployed to the Stage. For Stages that
// request a single piece of Freight AND the request has been fulfilled, this
// field will simply contain the name of the Freight. For Stages that request
// a single piece of Freight AND the request has NOT been fulfilled, or for
// Stages that request multiple pieces of Freight, this field will contain a
// summary of fulfilled/requested Freight. The existence of this field is a
// workaround for kubectl limitations so that this complex but valuable
// information can be displayed in a column in response to `kubectl get
// stages`.
func (o StageStatusPatchPtrOutput) FreightSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.FreightSummary
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusPatchPtrOutput) Health() StageStatusHealthPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusPatch) *StageStatusHealthPatch {
		if v == nil {
			return nil
		}
		return v.Health
	}).(StageStatusHealthPatchPtrOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o StageStatusPatchPtrOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.LastHandledRefresh
	}).(pulumi.StringPtrOutput)
}

func (o StageStatusPatchPtrOutput) LastPromotion() StageStatusLastPromotionPatchPtrOutput {
	return o.ApplyT(func(v *StageStatusPatch) *StageStatusLastPromotionPatch {
		if v == nil {
			return nil
		}
		return v.LastPromotion
	}).(StageStatusLastPromotionPatchPtrOutput)
}

// ObservedGeneration represents the .metadata.generation that this Stage
// status was reconciled against.
func (o StageStatusPatchPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StageStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Warehouse is a source of Freight.
type WarehouseType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *WarehouseSpec     `pulumi:"spec"`
	Status   *WarehouseStatus   `pulumi:"status"`
}

// WarehouseTypeInput is an input type that accepts WarehouseTypeArgs and WarehouseTypeOutput values.
// You can construct a concrete instance of `WarehouseTypeInput` via:
//
//	WarehouseTypeArgs{...}
type WarehouseTypeInput interface {
	pulumi.Input

	ToWarehouseTypeOutput() WarehouseTypeOutput
	ToWarehouseTypeOutputWithContext(context.Context) WarehouseTypeOutput
}

// Warehouse is a source of Freight.
type WarehouseTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     WarehouseSpecPtrInput     `pulumi:"spec"`
	Status   WarehouseStatusPtrInput   `pulumi:"status"`
}

func (WarehouseTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseType)(nil)).Elem()
}

func (i WarehouseTypeArgs) ToWarehouseTypeOutput() WarehouseTypeOutput {
	return i.ToWarehouseTypeOutputWithContext(context.Background())
}

func (i WarehouseTypeArgs) ToWarehouseTypeOutputWithContext(ctx context.Context) WarehouseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseTypeOutput)
}

// WarehouseTypeArrayInput is an input type that accepts WarehouseTypeArray and WarehouseTypeArrayOutput values.
// You can construct a concrete instance of `WarehouseTypeArrayInput` via:
//
//	WarehouseTypeArray{ WarehouseTypeArgs{...} }
type WarehouseTypeArrayInput interface {
	pulumi.Input

	ToWarehouseTypeArrayOutput() WarehouseTypeArrayOutput
	ToWarehouseTypeArrayOutputWithContext(context.Context) WarehouseTypeArrayOutput
}

type WarehouseTypeArray []WarehouseTypeInput

func (WarehouseTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseType)(nil)).Elem()
}

func (i WarehouseTypeArray) ToWarehouseTypeArrayOutput() WarehouseTypeArrayOutput {
	return i.ToWarehouseTypeArrayOutputWithContext(context.Background())
}

func (i WarehouseTypeArray) ToWarehouseTypeArrayOutputWithContext(ctx context.Context) WarehouseTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseTypeArrayOutput)
}

// Warehouse is a source of Freight.
type WarehouseTypeOutput struct{ *pulumi.OutputState }

func (WarehouseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseType)(nil)).Elem()
}

func (o WarehouseTypeOutput) ToWarehouseTypeOutput() WarehouseTypeOutput {
	return o
}

func (o WarehouseTypeOutput) ToWarehouseTypeOutputWithContext(ctx context.Context) WarehouseTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o WarehouseTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WarehouseTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o WarehouseTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v WarehouseType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o WarehouseTypeOutput) Spec() WarehouseSpecPtrOutput {
	return o.ApplyT(func(v WarehouseType) *WarehouseSpec { return v.Spec }).(WarehouseSpecPtrOutput)
}

func (o WarehouseTypeOutput) Status() WarehouseStatusPtrOutput {
	return o.ApplyT(func(v WarehouseType) *WarehouseStatus { return v.Status }).(WarehouseStatusPtrOutput)
}

type WarehouseTypeArrayOutput struct{ *pulumi.OutputState }

func (WarehouseTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseType)(nil)).Elem()
}

func (o WarehouseTypeArrayOutput) ToWarehouseTypeArrayOutput() WarehouseTypeArrayOutput {
	return o
}

func (o WarehouseTypeArrayOutput) ToWarehouseTypeArrayOutputWithContext(ctx context.Context) WarehouseTypeArrayOutput {
	return o
}

func (o WarehouseTypeArrayOutput) Index(i pulumi.IntInput) WarehouseTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseType {
		return vs[0].([]WarehouseType)[vs[1].(int)]
	}).(WarehouseTypeOutput)
}

// WarehouseList is a list of Warehouse
type WarehouseListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of warehouses. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []WarehouseType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// WarehouseListTypeInput is an input type that accepts WarehouseListTypeArgs and WarehouseListTypeOutput values.
// You can construct a concrete instance of `WarehouseListTypeInput` via:
//
//	WarehouseListTypeArgs{...}
type WarehouseListTypeInput interface {
	pulumi.Input

	ToWarehouseListTypeOutput() WarehouseListTypeOutput
	ToWarehouseListTypeOutputWithContext(context.Context) WarehouseListTypeOutput
}

// WarehouseList is a list of Warehouse
type WarehouseListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of warehouses. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items WarehouseTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (WarehouseListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseListType)(nil)).Elem()
}

func (i WarehouseListTypeArgs) ToWarehouseListTypeOutput() WarehouseListTypeOutput {
	return i.ToWarehouseListTypeOutputWithContext(context.Background())
}

func (i WarehouseListTypeArgs) ToWarehouseListTypeOutputWithContext(ctx context.Context) WarehouseListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseListTypeOutput)
}

// WarehouseList is a list of Warehouse
type WarehouseListTypeOutput struct{ *pulumi.OutputState }

func (WarehouseListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseListType)(nil)).Elem()
}

func (o WarehouseListTypeOutput) ToWarehouseListTypeOutput() WarehouseListTypeOutput {
	return o
}

func (o WarehouseListTypeOutput) ToWarehouseListTypeOutputWithContext(ctx context.Context) WarehouseListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o WarehouseListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of warehouses. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o WarehouseListTypeOutput) Items() WarehouseTypeArrayOutput {
	return o.ApplyT(func(v WarehouseListType) []WarehouseType { return v.Items }).(WarehouseTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WarehouseListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WarehouseListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v WarehouseListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// Warehouse is a source of Freight.
type WarehousePatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *WarehouseSpecPatch     `pulumi:"spec"`
	Status   *WarehouseStatusPatch   `pulumi:"status"`
}

// WarehousePatchTypeInput is an input type that accepts WarehousePatchTypeArgs and WarehousePatchTypeOutput values.
// You can construct a concrete instance of `WarehousePatchTypeInput` via:
//
//	WarehousePatchTypeArgs{...}
type WarehousePatchTypeInput interface {
	pulumi.Input

	ToWarehousePatchTypeOutput() WarehousePatchTypeOutput
	ToWarehousePatchTypeOutputWithContext(context.Context) WarehousePatchTypeOutput
}

// Warehouse is a source of Freight.
type WarehousePatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     WarehouseSpecPatchPtrInput     `pulumi:"spec"`
	Status   WarehouseStatusPatchPtrInput   `pulumi:"status"`
}

func (WarehousePatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehousePatchType)(nil)).Elem()
}

func (i WarehousePatchTypeArgs) ToWarehousePatchTypeOutput() WarehousePatchTypeOutput {
	return i.ToWarehousePatchTypeOutputWithContext(context.Background())
}

func (i WarehousePatchTypeArgs) ToWarehousePatchTypeOutputWithContext(ctx context.Context) WarehousePatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehousePatchTypeOutput)
}

// Warehouse is a source of Freight.
type WarehousePatchTypeOutput struct{ *pulumi.OutputState }

func (WarehousePatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehousePatchType)(nil)).Elem()
}

func (o WarehousePatchTypeOutput) ToWarehousePatchTypeOutput() WarehousePatchTypeOutput {
	return o
}

func (o WarehousePatchTypeOutput) ToWarehousePatchTypeOutputWithContext(ctx context.Context) WarehousePatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o WarehousePatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehousePatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WarehousePatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehousePatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o WarehousePatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v WarehousePatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o WarehousePatchTypeOutput) Spec() WarehouseSpecPatchPtrOutput {
	return o.ApplyT(func(v WarehousePatchType) *WarehouseSpecPatch { return v.Spec }).(WarehouseSpecPatchPtrOutput)
}

func (o WarehousePatchTypeOutput) Status() WarehouseStatusPatchPtrOutput {
	return o.ApplyT(func(v WarehousePatchType) *WarehouseStatusPatch { return v.Status }).(WarehouseStatusPatchPtrOutput)
}

// Spec describes sources of artifacts.
type WarehouseSpec struct {
	// FreightCreationPolicy describes how Freight is created by this Warehouse.
	// This field is optional. When left unspecified, the field is implicitly
	// treated as if its value were "Automatic".
	//
	// Accepted values:
	//
	// - "Automatic": New Freight is created automatically when any new artifact
	//   is discovered.
	// - "Manual": New Freight is never created automatically.
	FreightCreationPolicy *string `pulumi:"freightCreationPolicy"`
	// Interval is the reconciliation interval for this Warehouse. On each
	// reconciliation, the Warehouse will discover new artifacts and optionally
	// produce new Freight. This field is optional. When left unspecified, the
	// field is implicitly treated as if its value were "5m0s".
	Interval *string `pulumi:"interval"`
	// Shard is the name of the shard that this Warehouse belongs to. This is an
	// optional field. If not specified, the Warehouse will belong to the default
	// shard. A defaulting webhook will sync this field with the value of the
	// kargo.akuity.io/shard label. When the shard label is not present or differs
	// from the value of this field, the defaulting webhook will set the label to
	// the value of this field. If the shard label is present and this field is
	// empty, the defaulting webhook will set the value of this field to the value
	// of the shard label.
	Shard *string `pulumi:"shard"`
	// Subscriptions describes sources of artifacts to be included in Freight
	// produced by this Warehouse.
	Subscriptions []WarehouseSpecSubscriptions `pulumi:"subscriptions"`
}

// WarehouseSpecInput is an input type that accepts WarehouseSpecArgs and WarehouseSpecOutput values.
// You can construct a concrete instance of `WarehouseSpecInput` via:
//
//	WarehouseSpecArgs{...}
type WarehouseSpecInput interface {
	pulumi.Input

	ToWarehouseSpecOutput() WarehouseSpecOutput
	ToWarehouseSpecOutputWithContext(context.Context) WarehouseSpecOutput
}

// Spec describes sources of artifacts.
type WarehouseSpecArgs struct {
	// FreightCreationPolicy describes how Freight is created by this Warehouse.
	// This field is optional. When left unspecified, the field is implicitly
	// treated as if its value were "Automatic".
	//
	// Accepted values:
	//
	// - "Automatic": New Freight is created automatically when any new artifact
	//   is discovered.
	// - "Manual": New Freight is never created automatically.
	FreightCreationPolicy pulumi.StringPtrInput `pulumi:"freightCreationPolicy"`
	// Interval is the reconciliation interval for this Warehouse. On each
	// reconciliation, the Warehouse will discover new artifacts and optionally
	// produce new Freight. This field is optional. When left unspecified, the
	// field is implicitly treated as if its value were "5m0s".
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Shard is the name of the shard that this Warehouse belongs to. This is an
	// optional field. If not specified, the Warehouse will belong to the default
	// shard. A defaulting webhook will sync this field with the value of the
	// kargo.akuity.io/shard label. When the shard label is not present or differs
	// from the value of this field, the defaulting webhook will set the label to
	// the value of this field. If the shard label is present and this field is
	// empty, the defaulting webhook will set the value of this field to the value
	// of the shard label.
	Shard pulumi.StringPtrInput `pulumi:"shard"`
	// Subscriptions describes sources of artifacts to be included in Freight
	// produced by this Warehouse.
	Subscriptions WarehouseSpecSubscriptionsArrayInput `pulumi:"subscriptions"`
}

func (WarehouseSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpec)(nil)).Elem()
}

func (i WarehouseSpecArgs) ToWarehouseSpecOutput() WarehouseSpecOutput {
	return i.ToWarehouseSpecOutputWithContext(context.Background())
}

func (i WarehouseSpecArgs) ToWarehouseSpecOutputWithContext(ctx context.Context) WarehouseSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecOutput)
}

func (i WarehouseSpecArgs) ToWarehouseSpecPtrOutput() WarehouseSpecPtrOutput {
	return i.ToWarehouseSpecPtrOutputWithContext(context.Background())
}

func (i WarehouseSpecArgs) ToWarehouseSpecPtrOutputWithContext(ctx context.Context) WarehouseSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecOutput).ToWarehouseSpecPtrOutputWithContext(ctx)
}

// WarehouseSpecPtrInput is an input type that accepts WarehouseSpecArgs, WarehouseSpecPtr and WarehouseSpecPtrOutput values.
// You can construct a concrete instance of `WarehouseSpecPtrInput` via:
//
//	        WarehouseSpecArgs{...}
//
//	or:
//
//	        nil
type WarehouseSpecPtrInput interface {
	pulumi.Input

	ToWarehouseSpecPtrOutput() WarehouseSpecPtrOutput
	ToWarehouseSpecPtrOutputWithContext(context.Context) WarehouseSpecPtrOutput
}

type warehouseSpecPtrType WarehouseSpecArgs

func WarehouseSpecPtr(v *WarehouseSpecArgs) WarehouseSpecPtrInput {
	return (*warehouseSpecPtrType)(v)
}

func (*warehouseSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpec)(nil)).Elem()
}

func (i *warehouseSpecPtrType) ToWarehouseSpecPtrOutput() WarehouseSpecPtrOutput {
	return i.ToWarehouseSpecPtrOutputWithContext(context.Background())
}

func (i *warehouseSpecPtrType) ToWarehouseSpecPtrOutputWithContext(ctx context.Context) WarehouseSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecPtrOutput)
}

// Spec describes sources of artifacts.
type WarehouseSpecOutput struct{ *pulumi.OutputState }

func (WarehouseSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpec)(nil)).Elem()
}

func (o WarehouseSpecOutput) ToWarehouseSpecOutput() WarehouseSpecOutput {
	return o
}

func (o WarehouseSpecOutput) ToWarehouseSpecOutputWithContext(ctx context.Context) WarehouseSpecOutput {
	return o
}

func (o WarehouseSpecOutput) ToWarehouseSpecPtrOutput() WarehouseSpecPtrOutput {
	return o.ToWarehouseSpecPtrOutputWithContext(context.Background())
}

func (o WarehouseSpecOutput) ToWarehouseSpecPtrOutputWithContext(ctx context.Context) WarehouseSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WarehouseSpec) *WarehouseSpec {
		return &v
	}).(WarehouseSpecPtrOutput)
}

// FreightCreationPolicy describes how Freight is created by this Warehouse.
// This field is optional. When left unspecified, the field is implicitly
// treated as if its value were "Automatic".
//
// Accepted values:
//
//   - "Automatic": New Freight is created automatically when any new artifact
//     is discovered.
//   - "Manual": New Freight is never created automatically.
func (o WarehouseSpecOutput) FreightCreationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpec) *string { return v.FreightCreationPolicy }).(pulumi.StringPtrOutput)
}

// Interval is the reconciliation interval for this Warehouse. On each
// reconciliation, the Warehouse will discover new artifacts and optionally
// produce new Freight. This field is optional. When left unspecified, the
// field is implicitly treated as if its value were "5m0s".
func (o WarehouseSpecOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpec) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Shard is the name of the shard that this Warehouse belongs to. This is an
// optional field. If not specified, the Warehouse will belong to the default
// shard. A defaulting webhook will sync this field with the value of the
// kargo.akuity.io/shard label. When the shard label is not present or differs
// from the value of this field, the defaulting webhook will set the label to
// the value of this field. If the shard label is present and this field is
// empty, the defaulting webhook will set the value of this field to the value
// of the shard label.
func (o WarehouseSpecOutput) Shard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpec) *string { return v.Shard }).(pulumi.StringPtrOutput)
}

// Subscriptions describes sources of artifacts to be included in Freight
// produced by this Warehouse.
func (o WarehouseSpecOutput) Subscriptions() WarehouseSpecSubscriptionsArrayOutput {
	return o.ApplyT(func(v WarehouseSpec) []WarehouseSpecSubscriptions { return v.Subscriptions }).(WarehouseSpecSubscriptionsArrayOutput)
}

type WarehouseSpecPtrOutput struct{ *pulumi.OutputState }

func (WarehouseSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpec)(nil)).Elem()
}

func (o WarehouseSpecPtrOutput) ToWarehouseSpecPtrOutput() WarehouseSpecPtrOutput {
	return o
}

func (o WarehouseSpecPtrOutput) ToWarehouseSpecPtrOutputWithContext(ctx context.Context) WarehouseSpecPtrOutput {
	return o
}

func (o WarehouseSpecPtrOutput) Elem() WarehouseSpecOutput {
	return o.ApplyT(func(v *WarehouseSpec) WarehouseSpec {
		if v != nil {
			return *v
		}
		var ret WarehouseSpec
		return ret
	}).(WarehouseSpecOutput)
}

// FreightCreationPolicy describes how Freight is created by this Warehouse.
// This field is optional. When left unspecified, the field is implicitly
// treated as if its value were "Automatic".
//
// Accepted values:
//
//   - "Automatic": New Freight is created automatically when any new artifact
//     is discovered.
//   - "Manual": New Freight is never created automatically.
func (o WarehouseSpecPtrOutput) FreightCreationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpec) *string {
		if v == nil {
			return nil
		}
		return v.FreightCreationPolicy
	}).(pulumi.StringPtrOutput)
}

// Interval is the reconciliation interval for this Warehouse. On each
// reconciliation, the Warehouse will discover new artifacts and optionally
// produce new Freight. This field is optional. When left unspecified, the
// field is implicitly treated as if its value were "5m0s".
func (o WarehouseSpecPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpec) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Shard is the name of the shard that this Warehouse belongs to. This is an
// optional field. If not specified, the Warehouse will belong to the default
// shard. A defaulting webhook will sync this field with the value of the
// kargo.akuity.io/shard label. When the shard label is not present or differs
// from the value of this field, the defaulting webhook will set the label to
// the value of this field. If the shard label is present and this field is
// empty, the defaulting webhook will set the value of this field to the value
// of the shard label.
func (o WarehouseSpecPtrOutput) Shard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpec) *string {
		if v == nil {
			return nil
		}
		return v.Shard
	}).(pulumi.StringPtrOutput)
}

// Subscriptions describes sources of artifacts to be included in Freight
// produced by this Warehouse.
func (o WarehouseSpecPtrOutput) Subscriptions() WarehouseSpecSubscriptionsArrayOutput {
	return o.ApplyT(func(v *WarehouseSpec) []WarehouseSpecSubscriptions {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(WarehouseSpecSubscriptionsArrayOutput)
}

// Spec describes sources of artifacts.
type WarehouseSpecPatch struct {
	// FreightCreationPolicy describes how Freight is created by this Warehouse.
	// This field is optional. When left unspecified, the field is implicitly
	// treated as if its value were "Automatic".
	//
	// Accepted values:
	//
	// - "Automatic": New Freight is created automatically when any new artifact
	//   is discovered.
	// - "Manual": New Freight is never created automatically.
	FreightCreationPolicy *string `pulumi:"freightCreationPolicy"`
	// Interval is the reconciliation interval for this Warehouse. On each
	// reconciliation, the Warehouse will discover new artifacts and optionally
	// produce new Freight. This field is optional. When left unspecified, the
	// field is implicitly treated as if its value were "5m0s".
	Interval *string `pulumi:"interval"`
	// Shard is the name of the shard that this Warehouse belongs to. This is an
	// optional field. If not specified, the Warehouse will belong to the default
	// shard. A defaulting webhook will sync this field with the value of the
	// kargo.akuity.io/shard label. When the shard label is not present or differs
	// from the value of this field, the defaulting webhook will set the label to
	// the value of this field. If the shard label is present and this field is
	// empty, the defaulting webhook will set the value of this field to the value
	// of the shard label.
	Shard *string `pulumi:"shard"`
	// Subscriptions describes sources of artifacts to be included in Freight
	// produced by this Warehouse.
	Subscriptions []WarehouseSpecSubscriptionsPatch `pulumi:"subscriptions"`
}

// WarehouseSpecPatchInput is an input type that accepts WarehouseSpecPatchArgs and WarehouseSpecPatchOutput values.
// You can construct a concrete instance of `WarehouseSpecPatchInput` via:
//
//	WarehouseSpecPatchArgs{...}
type WarehouseSpecPatchInput interface {
	pulumi.Input

	ToWarehouseSpecPatchOutput() WarehouseSpecPatchOutput
	ToWarehouseSpecPatchOutputWithContext(context.Context) WarehouseSpecPatchOutput
}

// Spec describes sources of artifacts.
type WarehouseSpecPatchArgs struct {
	// FreightCreationPolicy describes how Freight is created by this Warehouse.
	// This field is optional. When left unspecified, the field is implicitly
	// treated as if its value were "Automatic".
	//
	// Accepted values:
	//
	// - "Automatic": New Freight is created automatically when any new artifact
	//   is discovered.
	// - "Manual": New Freight is never created automatically.
	FreightCreationPolicy pulumi.StringPtrInput `pulumi:"freightCreationPolicy"`
	// Interval is the reconciliation interval for this Warehouse. On each
	// reconciliation, the Warehouse will discover new artifacts and optionally
	// produce new Freight. This field is optional. When left unspecified, the
	// field is implicitly treated as if its value were "5m0s".
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Shard is the name of the shard that this Warehouse belongs to. This is an
	// optional field. If not specified, the Warehouse will belong to the default
	// shard. A defaulting webhook will sync this field with the value of the
	// kargo.akuity.io/shard label. When the shard label is not present or differs
	// from the value of this field, the defaulting webhook will set the label to
	// the value of this field. If the shard label is present and this field is
	// empty, the defaulting webhook will set the value of this field to the value
	// of the shard label.
	Shard pulumi.StringPtrInput `pulumi:"shard"`
	// Subscriptions describes sources of artifacts to be included in Freight
	// produced by this Warehouse.
	Subscriptions WarehouseSpecSubscriptionsPatchArrayInput `pulumi:"subscriptions"`
}

func (WarehouseSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecPatch)(nil)).Elem()
}

func (i WarehouseSpecPatchArgs) ToWarehouseSpecPatchOutput() WarehouseSpecPatchOutput {
	return i.ToWarehouseSpecPatchOutputWithContext(context.Background())
}

func (i WarehouseSpecPatchArgs) ToWarehouseSpecPatchOutputWithContext(ctx context.Context) WarehouseSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecPatchOutput)
}

func (i WarehouseSpecPatchArgs) ToWarehouseSpecPatchPtrOutput() WarehouseSpecPatchPtrOutput {
	return i.ToWarehouseSpecPatchPtrOutputWithContext(context.Background())
}

func (i WarehouseSpecPatchArgs) ToWarehouseSpecPatchPtrOutputWithContext(ctx context.Context) WarehouseSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecPatchOutput).ToWarehouseSpecPatchPtrOutputWithContext(ctx)
}

// WarehouseSpecPatchPtrInput is an input type that accepts WarehouseSpecPatchArgs, WarehouseSpecPatchPtr and WarehouseSpecPatchPtrOutput values.
// You can construct a concrete instance of `WarehouseSpecPatchPtrInput` via:
//
//	        WarehouseSpecPatchArgs{...}
//
//	or:
//
//	        nil
type WarehouseSpecPatchPtrInput interface {
	pulumi.Input

	ToWarehouseSpecPatchPtrOutput() WarehouseSpecPatchPtrOutput
	ToWarehouseSpecPatchPtrOutputWithContext(context.Context) WarehouseSpecPatchPtrOutput
}

type warehouseSpecPatchPtrType WarehouseSpecPatchArgs

func WarehouseSpecPatchPtr(v *WarehouseSpecPatchArgs) WarehouseSpecPatchPtrInput {
	return (*warehouseSpecPatchPtrType)(v)
}

func (*warehouseSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpecPatch)(nil)).Elem()
}

func (i *warehouseSpecPatchPtrType) ToWarehouseSpecPatchPtrOutput() WarehouseSpecPatchPtrOutput {
	return i.ToWarehouseSpecPatchPtrOutputWithContext(context.Background())
}

func (i *warehouseSpecPatchPtrType) ToWarehouseSpecPatchPtrOutputWithContext(ctx context.Context) WarehouseSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecPatchPtrOutput)
}

// Spec describes sources of artifacts.
type WarehouseSpecPatchOutput struct{ *pulumi.OutputState }

func (WarehouseSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecPatch)(nil)).Elem()
}

func (o WarehouseSpecPatchOutput) ToWarehouseSpecPatchOutput() WarehouseSpecPatchOutput {
	return o
}

func (o WarehouseSpecPatchOutput) ToWarehouseSpecPatchOutputWithContext(ctx context.Context) WarehouseSpecPatchOutput {
	return o
}

func (o WarehouseSpecPatchOutput) ToWarehouseSpecPatchPtrOutput() WarehouseSpecPatchPtrOutput {
	return o.ToWarehouseSpecPatchPtrOutputWithContext(context.Background())
}

func (o WarehouseSpecPatchOutput) ToWarehouseSpecPatchPtrOutputWithContext(ctx context.Context) WarehouseSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WarehouseSpecPatch) *WarehouseSpecPatch {
		return &v
	}).(WarehouseSpecPatchPtrOutput)
}

// FreightCreationPolicy describes how Freight is created by this Warehouse.
// This field is optional. When left unspecified, the field is implicitly
// treated as if its value were "Automatic".
//
// Accepted values:
//
//   - "Automatic": New Freight is created automatically when any new artifact
//     is discovered.
//   - "Manual": New Freight is never created automatically.
func (o WarehouseSpecPatchOutput) FreightCreationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecPatch) *string { return v.FreightCreationPolicy }).(pulumi.StringPtrOutput)
}

// Interval is the reconciliation interval for this Warehouse. On each
// reconciliation, the Warehouse will discover new artifacts and optionally
// produce new Freight. This field is optional. When left unspecified, the
// field is implicitly treated as if its value were "5m0s".
func (o WarehouseSpecPatchOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecPatch) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Shard is the name of the shard that this Warehouse belongs to. This is an
// optional field. If not specified, the Warehouse will belong to the default
// shard. A defaulting webhook will sync this field with the value of the
// kargo.akuity.io/shard label. When the shard label is not present or differs
// from the value of this field, the defaulting webhook will set the label to
// the value of this field. If the shard label is present and this field is
// empty, the defaulting webhook will set the value of this field to the value
// of the shard label.
func (o WarehouseSpecPatchOutput) Shard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecPatch) *string { return v.Shard }).(pulumi.StringPtrOutput)
}

// Subscriptions describes sources of artifacts to be included in Freight
// produced by this Warehouse.
func (o WarehouseSpecPatchOutput) Subscriptions() WarehouseSpecSubscriptionsPatchArrayOutput {
	return o.ApplyT(func(v WarehouseSpecPatch) []WarehouseSpecSubscriptionsPatch { return v.Subscriptions }).(WarehouseSpecSubscriptionsPatchArrayOutput)
}

type WarehouseSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (WarehouseSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpecPatch)(nil)).Elem()
}

func (o WarehouseSpecPatchPtrOutput) ToWarehouseSpecPatchPtrOutput() WarehouseSpecPatchPtrOutput {
	return o
}

func (o WarehouseSpecPatchPtrOutput) ToWarehouseSpecPatchPtrOutputWithContext(ctx context.Context) WarehouseSpecPatchPtrOutput {
	return o
}

func (o WarehouseSpecPatchPtrOutput) Elem() WarehouseSpecPatchOutput {
	return o.ApplyT(func(v *WarehouseSpecPatch) WarehouseSpecPatch {
		if v != nil {
			return *v
		}
		var ret WarehouseSpecPatch
		return ret
	}).(WarehouseSpecPatchOutput)
}

// FreightCreationPolicy describes how Freight is created by this Warehouse.
// This field is optional. When left unspecified, the field is implicitly
// treated as if its value were "Automatic".
//
// Accepted values:
//
//   - "Automatic": New Freight is created automatically when any new artifact
//     is discovered.
//   - "Manual": New Freight is never created automatically.
func (o WarehouseSpecPatchPtrOutput) FreightCreationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.FreightCreationPolicy
	}).(pulumi.StringPtrOutput)
}

// Interval is the reconciliation interval for this Warehouse. On each
// reconciliation, the Warehouse will discover new artifacts and optionally
// produce new Freight. This field is optional. When left unspecified, the
// field is implicitly treated as if its value were "5m0s".
func (o WarehouseSpecPatchPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Shard is the name of the shard that this Warehouse belongs to. This is an
// optional field. If not specified, the Warehouse will belong to the default
// shard. A defaulting webhook will sync this field with the value of the
// kargo.akuity.io/shard label. When the shard label is not present or differs
// from the value of this field, the defaulting webhook will set the label to
// the value of this field. If the shard label is present and this field is
// empty, the defaulting webhook will set the value of this field to the value
// of the shard label.
func (o WarehouseSpecPatchPtrOutput) Shard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Shard
	}).(pulumi.StringPtrOutput)
}

// Subscriptions describes sources of artifacts to be included in Freight
// produced by this Warehouse.
func (o WarehouseSpecPatchPtrOutput) Subscriptions() WarehouseSpecSubscriptionsPatchArrayOutput {
	return o.ApplyT(func(v *WarehouseSpecPatch) []WarehouseSpecSubscriptionsPatch {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(WarehouseSpecSubscriptionsPatchArrayOutput)
}

// RepoSubscription describes a subscription to ONE OF a Git repository, a
// container image repository, or a Helm chart repository.
type WarehouseSpecSubscriptions struct {
	Chart *WarehouseSpecSubscriptionsChart `pulumi:"chart"`
	Git   *WarehouseSpecSubscriptionsGit   `pulumi:"git"`
	Image *WarehouseSpecSubscriptionsImage `pulumi:"image"`
}

// WarehouseSpecSubscriptionsInput is an input type that accepts WarehouseSpecSubscriptionsArgs and WarehouseSpecSubscriptionsOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsInput` via:
//
//	WarehouseSpecSubscriptionsArgs{...}
type WarehouseSpecSubscriptionsInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsOutput() WarehouseSpecSubscriptionsOutput
	ToWarehouseSpecSubscriptionsOutputWithContext(context.Context) WarehouseSpecSubscriptionsOutput
}

// RepoSubscription describes a subscription to ONE OF a Git repository, a
// container image repository, or a Helm chart repository.
type WarehouseSpecSubscriptionsArgs struct {
	Chart WarehouseSpecSubscriptionsChartPtrInput `pulumi:"chart"`
	Git   WarehouseSpecSubscriptionsGitPtrInput   `pulumi:"git"`
	Image WarehouseSpecSubscriptionsImagePtrInput `pulumi:"image"`
}

func (WarehouseSpecSubscriptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptions)(nil)).Elem()
}

func (i WarehouseSpecSubscriptionsArgs) ToWarehouseSpecSubscriptionsOutput() WarehouseSpecSubscriptionsOutput {
	return i.ToWarehouseSpecSubscriptionsOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsArgs) ToWarehouseSpecSubscriptionsOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsOutput)
}

// WarehouseSpecSubscriptionsArrayInput is an input type that accepts WarehouseSpecSubscriptionsArray and WarehouseSpecSubscriptionsArrayOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsArrayInput` via:
//
//	WarehouseSpecSubscriptionsArray{ WarehouseSpecSubscriptionsArgs{...} }
type WarehouseSpecSubscriptionsArrayInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsArrayOutput() WarehouseSpecSubscriptionsArrayOutput
	ToWarehouseSpecSubscriptionsArrayOutputWithContext(context.Context) WarehouseSpecSubscriptionsArrayOutput
}

type WarehouseSpecSubscriptionsArray []WarehouseSpecSubscriptionsInput

func (WarehouseSpecSubscriptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseSpecSubscriptions)(nil)).Elem()
}

func (i WarehouseSpecSubscriptionsArray) ToWarehouseSpecSubscriptionsArrayOutput() WarehouseSpecSubscriptionsArrayOutput {
	return i.ToWarehouseSpecSubscriptionsArrayOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsArray) ToWarehouseSpecSubscriptionsArrayOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsArrayOutput)
}

// RepoSubscription describes a subscription to ONE OF a Git repository, a
// container image repository, or a Helm chart repository.
type WarehouseSpecSubscriptionsOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptions)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsOutput) ToWarehouseSpecSubscriptionsOutput() WarehouseSpecSubscriptionsOutput {
	return o
}

func (o WarehouseSpecSubscriptionsOutput) ToWarehouseSpecSubscriptionsOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsOutput {
	return o
}

func (o WarehouseSpecSubscriptionsOutput) Chart() WarehouseSpecSubscriptionsChartPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptions) *WarehouseSpecSubscriptionsChart { return v.Chart }).(WarehouseSpecSubscriptionsChartPtrOutput)
}

func (o WarehouseSpecSubscriptionsOutput) Git() WarehouseSpecSubscriptionsGitPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptions) *WarehouseSpecSubscriptionsGit { return v.Git }).(WarehouseSpecSubscriptionsGitPtrOutput)
}

func (o WarehouseSpecSubscriptionsOutput) Image() WarehouseSpecSubscriptionsImagePtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptions) *WarehouseSpecSubscriptionsImage { return v.Image }).(WarehouseSpecSubscriptionsImagePtrOutput)
}

type WarehouseSpecSubscriptionsArrayOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseSpecSubscriptions)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsArrayOutput) ToWarehouseSpecSubscriptionsArrayOutput() WarehouseSpecSubscriptionsArrayOutput {
	return o
}

func (o WarehouseSpecSubscriptionsArrayOutput) ToWarehouseSpecSubscriptionsArrayOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsArrayOutput {
	return o
}

func (o WarehouseSpecSubscriptionsArrayOutput) Index(i pulumi.IntInput) WarehouseSpecSubscriptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseSpecSubscriptions {
		return vs[0].([]WarehouseSpecSubscriptions)[vs[1].(int)]
	}).(WarehouseSpecSubscriptionsOutput)
}

// Chart describes a subscription to a Helm chart repository.
type WarehouseSpecSubscriptionsChart struct {
	// DiscoveryLimit is an optional limit on the number of chart versions that
	// can be discovered for this subscription. The limit is applied after
	// filtering charts based on the SemverConstraint field.
	// When left unspecified, the field is implicitly treated as if its value
	// were "20". The upper limit for this field is 100.
	DiscoveryLimit *int `pulumi:"discoveryLimit"`
	// Name specifies the name of a Helm chart to subscribe to within a classic
	// chart repository specified by the RepoURL field. This field is required
	// when the RepoURL field points to a classic chart repository and MUST
	// otherwise be empty.
	Name *string `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. It may be a classic
	// chart repository (using HTTP/S) OR a repository within an OCI registry.
	// Classic chart repositories can contain differently named charts. When this
	// field points to such a repository, the Name field MUST also be used
	// to specify the name of the desired chart within that repository. In the
	// case of a repository within an OCI registry, the URL implicitly points to
	// a specific chart and the Name field MUST NOT be used. The RepoURL field is
	// required.
	RepoURL *string `pulumi:"repoURL"`
	// SemverConstraint specifies constraints on what new chart versions are
	// permissible. This field is optional. When left unspecified, there will be
	// no constraints, which means the latest version of the chart will always be
	// used. Care should be taken with leaving this field unspecified, as it can
	// lead to the unanticipated rollout of breaking changes.
	// More info: https://github.com/masterminds/semver#checking-version-constraints
	SemverConstraint *string `pulumi:"semverConstraint"`
}

// WarehouseSpecSubscriptionsChartInput is an input type that accepts WarehouseSpecSubscriptionsChartArgs and WarehouseSpecSubscriptionsChartOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsChartInput` via:
//
//	WarehouseSpecSubscriptionsChartArgs{...}
type WarehouseSpecSubscriptionsChartInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsChartOutput() WarehouseSpecSubscriptionsChartOutput
	ToWarehouseSpecSubscriptionsChartOutputWithContext(context.Context) WarehouseSpecSubscriptionsChartOutput
}

// Chart describes a subscription to a Helm chart repository.
type WarehouseSpecSubscriptionsChartArgs struct {
	// DiscoveryLimit is an optional limit on the number of chart versions that
	// can be discovered for this subscription. The limit is applied after
	// filtering charts based on the SemverConstraint field.
	// When left unspecified, the field is implicitly treated as if its value
	// were "20". The upper limit for this field is 100.
	DiscoveryLimit pulumi.IntPtrInput `pulumi:"discoveryLimit"`
	// Name specifies the name of a Helm chart to subscribe to within a classic
	// chart repository specified by the RepoURL field. This field is required
	// when the RepoURL field points to a classic chart repository and MUST
	// otherwise be empty.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. It may be a classic
	// chart repository (using HTTP/S) OR a repository within an OCI registry.
	// Classic chart repositories can contain differently named charts. When this
	// field points to such a repository, the Name field MUST also be used
	// to specify the name of the desired chart within that repository. In the
	// case of a repository within an OCI registry, the URL implicitly points to
	// a specific chart and the Name field MUST NOT be used. The RepoURL field is
	// required.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// SemverConstraint specifies constraints on what new chart versions are
	// permissible. This field is optional. When left unspecified, there will be
	// no constraints, which means the latest version of the chart will always be
	// used. Care should be taken with leaving this field unspecified, as it can
	// lead to the unanticipated rollout of breaking changes.
	// More info: https://github.com/masterminds/semver#checking-version-constraints
	SemverConstraint pulumi.StringPtrInput `pulumi:"semverConstraint"`
}

func (WarehouseSpecSubscriptionsChartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptionsChart)(nil)).Elem()
}

func (i WarehouseSpecSubscriptionsChartArgs) ToWarehouseSpecSubscriptionsChartOutput() WarehouseSpecSubscriptionsChartOutput {
	return i.ToWarehouseSpecSubscriptionsChartOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsChartArgs) ToWarehouseSpecSubscriptionsChartOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsChartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsChartOutput)
}

func (i WarehouseSpecSubscriptionsChartArgs) ToWarehouseSpecSubscriptionsChartPtrOutput() WarehouseSpecSubscriptionsChartPtrOutput {
	return i.ToWarehouseSpecSubscriptionsChartPtrOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsChartArgs) ToWarehouseSpecSubscriptionsChartPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsChartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsChartOutput).ToWarehouseSpecSubscriptionsChartPtrOutputWithContext(ctx)
}

// WarehouseSpecSubscriptionsChartPtrInput is an input type that accepts WarehouseSpecSubscriptionsChartArgs, WarehouseSpecSubscriptionsChartPtr and WarehouseSpecSubscriptionsChartPtrOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsChartPtrInput` via:
//
//	        WarehouseSpecSubscriptionsChartArgs{...}
//
//	or:
//
//	        nil
type WarehouseSpecSubscriptionsChartPtrInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsChartPtrOutput() WarehouseSpecSubscriptionsChartPtrOutput
	ToWarehouseSpecSubscriptionsChartPtrOutputWithContext(context.Context) WarehouseSpecSubscriptionsChartPtrOutput
}

type warehouseSpecSubscriptionsChartPtrType WarehouseSpecSubscriptionsChartArgs

func WarehouseSpecSubscriptionsChartPtr(v *WarehouseSpecSubscriptionsChartArgs) WarehouseSpecSubscriptionsChartPtrInput {
	return (*warehouseSpecSubscriptionsChartPtrType)(v)
}

func (*warehouseSpecSubscriptionsChartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpecSubscriptionsChart)(nil)).Elem()
}

func (i *warehouseSpecSubscriptionsChartPtrType) ToWarehouseSpecSubscriptionsChartPtrOutput() WarehouseSpecSubscriptionsChartPtrOutput {
	return i.ToWarehouseSpecSubscriptionsChartPtrOutputWithContext(context.Background())
}

func (i *warehouseSpecSubscriptionsChartPtrType) ToWarehouseSpecSubscriptionsChartPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsChartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsChartPtrOutput)
}

// Chart describes a subscription to a Helm chart repository.
type WarehouseSpecSubscriptionsChartOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsChartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptionsChart)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsChartOutput) ToWarehouseSpecSubscriptionsChartOutput() WarehouseSpecSubscriptionsChartOutput {
	return o
}

func (o WarehouseSpecSubscriptionsChartOutput) ToWarehouseSpecSubscriptionsChartOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsChartOutput {
	return o
}

func (o WarehouseSpecSubscriptionsChartOutput) ToWarehouseSpecSubscriptionsChartPtrOutput() WarehouseSpecSubscriptionsChartPtrOutput {
	return o.ToWarehouseSpecSubscriptionsChartPtrOutputWithContext(context.Background())
}

func (o WarehouseSpecSubscriptionsChartOutput) ToWarehouseSpecSubscriptionsChartPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsChartPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WarehouseSpecSubscriptionsChart) *WarehouseSpecSubscriptionsChart {
		return &v
	}).(WarehouseSpecSubscriptionsChartPtrOutput)
}

// DiscoveryLimit is an optional limit on the number of chart versions that
// can be discovered for this subscription. The limit is applied after
// filtering charts based on the SemverConstraint field.
// When left unspecified, the field is implicitly treated as if its value
// were "20". The upper limit for this field is 100.
func (o WarehouseSpecSubscriptionsChartOutput) DiscoveryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsChart) *int { return v.DiscoveryLimit }).(pulumi.IntPtrOutput)
}

// Name specifies the name of a Helm chart to subscribe to within a classic
// chart repository specified by the RepoURL field. This field is required
// when the RepoURL field points to a classic chart repository and MUST
// otherwise be empty.
func (o WarehouseSpecSubscriptionsChartOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsChart) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. It may be a classic
// chart repository (using HTTP/S) OR a repository within an OCI registry.
// Classic chart repositories can contain differently named charts. When this
// field points to such a repository, the Name field MUST also be used
// to specify the name of the desired chart within that repository. In the
// case of a repository within an OCI registry, the URL implicitly points to
// a specific chart and the Name field MUST NOT be used. The RepoURL field is
// required.
func (o WarehouseSpecSubscriptionsChartOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsChart) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// SemverConstraint specifies constraints on what new chart versions are
// permissible. This field is optional. When left unspecified, there will be
// no constraints, which means the latest version of the chart will always be
// used. Care should be taken with leaving this field unspecified, as it can
// lead to the unanticipated rollout of breaking changes.
// More info: https://github.com/masterminds/semver#checking-version-constraints
func (o WarehouseSpecSubscriptionsChartOutput) SemverConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsChart) *string { return v.SemverConstraint }).(pulumi.StringPtrOutput)
}

type WarehouseSpecSubscriptionsChartPtrOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsChartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpecSubscriptionsChart)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsChartPtrOutput) ToWarehouseSpecSubscriptionsChartPtrOutput() WarehouseSpecSubscriptionsChartPtrOutput {
	return o
}

func (o WarehouseSpecSubscriptionsChartPtrOutput) ToWarehouseSpecSubscriptionsChartPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsChartPtrOutput {
	return o
}

func (o WarehouseSpecSubscriptionsChartPtrOutput) Elem() WarehouseSpecSubscriptionsChartOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsChart) WarehouseSpecSubscriptionsChart {
		if v != nil {
			return *v
		}
		var ret WarehouseSpecSubscriptionsChart
		return ret
	}).(WarehouseSpecSubscriptionsChartOutput)
}

// DiscoveryLimit is an optional limit on the number of chart versions that
// can be discovered for this subscription. The limit is applied after
// filtering charts based on the SemverConstraint field.
// When left unspecified, the field is implicitly treated as if its value
// were "20". The upper limit for this field is 100.
func (o WarehouseSpecSubscriptionsChartPtrOutput) DiscoveryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsChart) *int {
		if v == nil {
			return nil
		}
		return v.DiscoveryLimit
	}).(pulumi.IntPtrOutput)
}

// Name specifies the name of a Helm chart to subscribe to within a classic
// chart repository specified by the RepoURL field. This field is required
// when the RepoURL field points to a classic chart repository and MUST
// otherwise be empty.
func (o WarehouseSpecSubscriptionsChartPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsChart) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. It may be a classic
// chart repository (using HTTP/S) OR a repository within an OCI registry.
// Classic chart repositories can contain differently named charts. When this
// field points to such a repository, the Name field MUST also be used
// to specify the name of the desired chart within that repository. In the
// case of a repository within an OCI registry, the URL implicitly points to
// a specific chart and the Name field MUST NOT be used. The RepoURL field is
// required.
func (o WarehouseSpecSubscriptionsChartPtrOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsChart) *string {
		if v == nil {
			return nil
		}
		return v.RepoURL
	}).(pulumi.StringPtrOutput)
}

// SemverConstraint specifies constraints on what new chart versions are
// permissible. This field is optional. When left unspecified, there will be
// no constraints, which means the latest version of the chart will always be
// used. Care should be taken with leaving this field unspecified, as it can
// lead to the unanticipated rollout of breaking changes.
// More info: https://github.com/masterminds/semver#checking-version-constraints
func (o WarehouseSpecSubscriptionsChartPtrOutput) SemverConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsChart) *string {
		if v == nil {
			return nil
		}
		return v.SemverConstraint
	}).(pulumi.StringPtrOutput)
}

// Chart describes a subscription to a Helm chart repository.
type WarehouseSpecSubscriptionsChartPatch struct {
	// DiscoveryLimit is an optional limit on the number of chart versions that
	// can be discovered for this subscription. The limit is applied after
	// filtering charts based on the SemverConstraint field.
	// When left unspecified, the field is implicitly treated as if its value
	// were "20". The upper limit for this field is 100.
	DiscoveryLimit *int `pulumi:"discoveryLimit"`
	// Name specifies the name of a Helm chart to subscribe to within a classic
	// chart repository specified by the RepoURL field. This field is required
	// when the RepoURL field points to a classic chart repository and MUST
	// otherwise be empty.
	Name *string `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. It may be a classic
	// chart repository (using HTTP/S) OR a repository within an OCI registry.
	// Classic chart repositories can contain differently named charts. When this
	// field points to such a repository, the Name field MUST also be used
	// to specify the name of the desired chart within that repository. In the
	// case of a repository within an OCI registry, the URL implicitly points to
	// a specific chart and the Name field MUST NOT be used. The RepoURL field is
	// required.
	RepoURL *string `pulumi:"repoURL"`
	// SemverConstraint specifies constraints on what new chart versions are
	// permissible. This field is optional. When left unspecified, there will be
	// no constraints, which means the latest version of the chart will always be
	// used. Care should be taken with leaving this field unspecified, as it can
	// lead to the unanticipated rollout of breaking changes.
	// More info: https://github.com/masterminds/semver#checking-version-constraints
	SemverConstraint *string `pulumi:"semverConstraint"`
}

// WarehouseSpecSubscriptionsChartPatchInput is an input type that accepts WarehouseSpecSubscriptionsChartPatchArgs and WarehouseSpecSubscriptionsChartPatchOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsChartPatchInput` via:
//
//	WarehouseSpecSubscriptionsChartPatchArgs{...}
type WarehouseSpecSubscriptionsChartPatchInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsChartPatchOutput() WarehouseSpecSubscriptionsChartPatchOutput
	ToWarehouseSpecSubscriptionsChartPatchOutputWithContext(context.Context) WarehouseSpecSubscriptionsChartPatchOutput
}

// Chart describes a subscription to a Helm chart repository.
type WarehouseSpecSubscriptionsChartPatchArgs struct {
	// DiscoveryLimit is an optional limit on the number of chart versions that
	// can be discovered for this subscription. The limit is applied after
	// filtering charts based on the SemverConstraint field.
	// When left unspecified, the field is implicitly treated as if its value
	// were "20". The upper limit for this field is 100.
	DiscoveryLimit pulumi.IntPtrInput `pulumi:"discoveryLimit"`
	// Name specifies the name of a Helm chart to subscribe to within a classic
	// chart repository specified by the RepoURL field. This field is required
	// when the RepoURL field points to a classic chart repository and MUST
	// otherwise be empty.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL specifies the URL of a Helm chart repository. It may be a classic
	// chart repository (using HTTP/S) OR a repository within an OCI registry.
	// Classic chart repositories can contain differently named charts. When this
	// field points to such a repository, the Name field MUST also be used
	// to specify the name of the desired chart within that repository. In the
	// case of a repository within an OCI registry, the URL implicitly points to
	// a specific chart and the Name field MUST NOT be used. The RepoURL field is
	// required.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// SemverConstraint specifies constraints on what new chart versions are
	// permissible. This field is optional. When left unspecified, there will be
	// no constraints, which means the latest version of the chart will always be
	// used. Care should be taken with leaving this field unspecified, as it can
	// lead to the unanticipated rollout of breaking changes.
	// More info: https://github.com/masterminds/semver#checking-version-constraints
	SemverConstraint pulumi.StringPtrInput `pulumi:"semverConstraint"`
}

func (WarehouseSpecSubscriptionsChartPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptionsChartPatch)(nil)).Elem()
}

func (i WarehouseSpecSubscriptionsChartPatchArgs) ToWarehouseSpecSubscriptionsChartPatchOutput() WarehouseSpecSubscriptionsChartPatchOutput {
	return i.ToWarehouseSpecSubscriptionsChartPatchOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsChartPatchArgs) ToWarehouseSpecSubscriptionsChartPatchOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsChartPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsChartPatchOutput)
}

func (i WarehouseSpecSubscriptionsChartPatchArgs) ToWarehouseSpecSubscriptionsChartPatchPtrOutput() WarehouseSpecSubscriptionsChartPatchPtrOutput {
	return i.ToWarehouseSpecSubscriptionsChartPatchPtrOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsChartPatchArgs) ToWarehouseSpecSubscriptionsChartPatchPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsChartPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsChartPatchOutput).ToWarehouseSpecSubscriptionsChartPatchPtrOutputWithContext(ctx)
}

// WarehouseSpecSubscriptionsChartPatchPtrInput is an input type that accepts WarehouseSpecSubscriptionsChartPatchArgs, WarehouseSpecSubscriptionsChartPatchPtr and WarehouseSpecSubscriptionsChartPatchPtrOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsChartPatchPtrInput` via:
//
//	        WarehouseSpecSubscriptionsChartPatchArgs{...}
//
//	or:
//
//	        nil
type WarehouseSpecSubscriptionsChartPatchPtrInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsChartPatchPtrOutput() WarehouseSpecSubscriptionsChartPatchPtrOutput
	ToWarehouseSpecSubscriptionsChartPatchPtrOutputWithContext(context.Context) WarehouseSpecSubscriptionsChartPatchPtrOutput
}

type warehouseSpecSubscriptionsChartPatchPtrType WarehouseSpecSubscriptionsChartPatchArgs

func WarehouseSpecSubscriptionsChartPatchPtr(v *WarehouseSpecSubscriptionsChartPatchArgs) WarehouseSpecSubscriptionsChartPatchPtrInput {
	return (*warehouseSpecSubscriptionsChartPatchPtrType)(v)
}

func (*warehouseSpecSubscriptionsChartPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpecSubscriptionsChartPatch)(nil)).Elem()
}

func (i *warehouseSpecSubscriptionsChartPatchPtrType) ToWarehouseSpecSubscriptionsChartPatchPtrOutput() WarehouseSpecSubscriptionsChartPatchPtrOutput {
	return i.ToWarehouseSpecSubscriptionsChartPatchPtrOutputWithContext(context.Background())
}

func (i *warehouseSpecSubscriptionsChartPatchPtrType) ToWarehouseSpecSubscriptionsChartPatchPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsChartPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsChartPatchPtrOutput)
}

// Chart describes a subscription to a Helm chart repository.
type WarehouseSpecSubscriptionsChartPatchOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsChartPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptionsChartPatch)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsChartPatchOutput) ToWarehouseSpecSubscriptionsChartPatchOutput() WarehouseSpecSubscriptionsChartPatchOutput {
	return o
}

func (o WarehouseSpecSubscriptionsChartPatchOutput) ToWarehouseSpecSubscriptionsChartPatchOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsChartPatchOutput {
	return o
}

func (o WarehouseSpecSubscriptionsChartPatchOutput) ToWarehouseSpecSubscriptionsChartPatchPtrOutput() WarehouseSpecSubscriptionsChartPatchPtrOutput {
	return o.ToWarehouseSpecSubscriptionsChartPatchPtrOutputWithContext(context.Background())
}

func (o WarehouseSpecSubscriptionsChartPatchOutput) ToWarehouseSpecSubscriptionsChartPatchPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsChartPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WarehouseSpecSubscriptionsChartPatch) *WarehouseSpecSubscriptionsChartPatch {
		return &v
	}).(WarehouseSpecSubscriptionsChartPatchPtrOutput)
}

// DiscoveryLimit is an optional limit on the number of chart versions that
// can be discovered for this subscription. The limit is applied after
// filtering charts based on the SemverConstraint field.
// When left unspecified, the field is implicitly treated as if its value
// were "20". The upper limit for this field is 100.
func (o WarehouseSpecSubscriptionsChartPatchOutput) DiscoveryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsChartPatch) *int { return v.DiscoveryLimit }).(pulumi.IntPtrOutput)
}

// Name specifies the name of a Helm chart to subscribe to within a classic
// chart repository specified by the RepoURL field. This field is required
// when the RepoURL field points to a classic chart repository and MUST
// otherwise be empty.
func (o WarehouseSpecSubscriptionsChartPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsChartPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. It may be a classic
// chart repository (using HTTP/S) OR a repository within an OCI registry.
// Classic chart repositories can contain differently named charts. When this
// field points to such a repository, the Name field MUST also be used
// to specify the name of the desired chart within that repository. In the
// case of a repository within an OCI registry, the URL implicitly points to
// a specific chart and the Name field MUST NOT be used. The RepoURL field is
// required.
func (o WarehouseSpecSubscriptionsChartPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsChartPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// SemverConstraint specifies constraints on what new chart versions are
// permissible. This field is optional. When left unspecified, there will be
// no constraints, which means the latest version of the chart will always be
// used. Care should be taken with leaving this field unspecified, as it can
// lead to the unanticipated rollout of breaking changes.
// More info: https://github.com/masterminds/semver#checking-version-constraints
func (o WarehouseSpecSubscriptionsChartPatchOutput) SemverConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsChartPatch) *string { return v.SemverConstraint }).(pulumi.StringPtrOutput)
}

type WarehouseSpecSubscriptionsChartPatchPtrOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsChartPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpecSubscriptionsChartPatch)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsChartPatchPtrOutput) ToWarehouseSpecSubscriptionsChartPatchPtrOutput() WarehouseSpecSubscriptionsChartPatchPtrOutput {
	return o
}

func (o WarehouseSpecSubscriptionsChartPatchPtrOutput) ToWarehouseSpecSubscriptionsChartPatchPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsChartPatchPtrOutput {
	return o
}

func (o WarehouseSpecSubscriptionsChartPatchPtrOutput) Elem() WarehouseSpecSubscriptionsChartPatchOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsChartPatch) WarehouseSpecSubscriptionsChartPatch {
		if v != nil {
			return *v
		}
		var ret WarehouseSpecSubscriptionsChartPatch
		return ret
	}).(WarehouseSpecSubscriptionsChartPatchOutput)
}

// DiscoveryLimit is an optional limit on the number of chart versions that
// can be discovered for this subscription. The limit is applied after
// filtering charts based on the SemverConstraint field.
// When left unspecified, the field is implicitly treated as if its value
// were "20". The upper limit for this field is 100.
func (o WarehouseSpecSubscriptionsChartPatchPtrOutput) DiscoveryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsChartPatch) *int {
		if v == nil {
			return nil
		}
		return v.DiscoveryLimit
	}).(pulumi.IntPtrOutput)
}

// Name specifies the name of a Helm chart to subscribe to within a classic
// chart repository specified by the RepoURL field. This field is required
// when the RepoURL field points to a classic chart repository and MUST
// otherwise be empty.
func (o WarehouseSpecSubscriptionsChartPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsChartPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of a Helm chart repository. It may be a classic
// chart repository (using HTTP/S) OR a repository within an OCI registry.
// Classic chart repositories can contain differently named charts. When this
// field points to such a repository, the Name field MUST also be used
// to specify the name of the desired chart within that repository. In the
// case of a repository within an OCI registry, the URL implicitly points to
// a specific chart and the Name field MUST NOT be used. The RepoURL field is
// required.
func (o WarehouseSpecSubscriptionsChartPatchPtrOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsChartPatch) *string {
		if v == nil {
			return nil
		}
		return v.RepoURL
	}).(pulumi.StringPtrOutput)
}

// SemverConstraint specifies constraints on what new chart versions are
// permissible. This field is optional. When left unspecified, there will be
// no constraints, which means the latest version of the chart will always be
// used. Care should be taken with leaving this field unspecified, as it can
// lead to the unanticipated rollout of breaking changes.
// More info: https://github.com/masterminds/semver#checking-version-constraints
func (o WarehouseSpecSubscriptionsChartPatchPtrOutput) SemverConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsChartPatch) *string {
		if v == nil {
			return nil
		}
		return v.SemverConstraint
	}).(pulumi.StringPtrOutput)
}

// Git describes a subscriptions to a Git repository.
type WarehouseSpecSubscriptionsGit struct {
	// AllowTags is a regular expression that can optionally be used to limit the
	// tags that are considered in determining the newest commit of interest. The
	// value in this field only has any effect when the CommitSelectionStrategy is
	// Lexical, NewestTag, or SemVer. This field is optional.
	AllowTags *string `pulumi:"allowTags"`
	// Branch references a particular branch of the repository. The value in this
	// field only has any effect when the CommitSelectionStrategy is
	// NewestFromBranch or left unspecified (which is implicitly the same as
	// NewestFromBranch). This field is optional. When left unspecified, (and the
	// CommitSelectionStrategy is NewestFromBranch or unspecified), the
	// subscription is implicitly to the repository's default branch.
	Branch *string `pulumi:"branch"`
	// CommitSelectionStrategy specifies the rules for how to identify the newest
	// commit of interest in the repository specified by the RepoURL field. This
	// field is optional. When left unspecified, the field is implicitly treated
	// as if its value were "NewestFromBranch".
	//
	// Accepted values:
	//
	// - "NewestFromBranch": Selects the latest commit on the branch specified
	// by the Branch field or the default branch if none is specified. This is
	// the default strategy.
	//
	// - "SemVer": Selects the commit referenced by the the semantically greatest
	// tag. The SemverConstraint field can optionally be used to narrow the set
	// of tags eligible for selection.
	//
	// - "Lexical": Selects the commit referenced by the lexicographically
	// greatest tag. Useful when tags embed a _leading_ date or timestamp. The
	// AllowTags and IgnoreTags fields can optionally be used to narrow the set
	// of tags eligible for selection.
	//
	// - "NewestTag": Selects the commit referenced by the most recently created
	// tag. The AllowTags and IgnoreTags fields can optionally be used to
	// narrow the set of tags eligible for selection.
	CommitSelectionStrategy *string `pulumi:"commitSelectionStrategy"`
	// DiscoveryLimit is an optional limit on the number of commits that can be
	// discovered for this subscription. The limit is applied after filtering
	// commits based on the AllowTags and IgnoreTags fields.
	// When left unspecified, the field is implicitly treated as if its value
	// were "20". The upper limit for this field is 100.
	DiscoveryLimit *int `pulumi:"discoveryLimit"`
	// ExcludePaths is a list of selectors that designate paths in the repository
	// that should NOT trigger the production of new Freight when changes are
	// detected therein. When specified, changes in the identified paths will not
	// trigger Freight production. When not specified, paths that should trigger
	// Freight production will be defined solely by IncludePaths. Selectors may be
	// defined using:
	//   1. Exact paths to files or directories (ex. "charts/foo")
	//   2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
	//   3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
	//      ex. "regexp:^.*\.yaml$")
	//      Paths selected by IncludePaths may be unselected by ExcludePaths. This
	//      is a useful method for including a broad set of paths and then excluding a
	//      subset of them.
	ExcludePaths []string `pulumi:"excludePaths"`
	// IgnoreTags is a list of tags that must be ignored when determining the
	// newest commit of interest. No regular expressions or glob patterns are
	// supported yet. The value in this field only has any effect when the
	// CommitSelectionStrategy is Lexical, NewestTag, or SemVer. This field is
	// optional.
	IgnoreTags []string `pulumi:"ignoreTags"`
	// IncludePaths is a list of selectors that designate paths in the repository
	// that should trigger the production of new Freight when changes are detected
	// therein. When specified, only changes in the identified paths will trigger
	// Freight production. When not specified, changes in any path will trigger
	// Freight production. Selectors may be defined using:
	//   1. Exact paths to files or directories (ex. "charts/foo")
	//   2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
	//   3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
	//      ex. "regexp:^.*\.yaml$")
	//
	// Paths selected by IncludePaths may be unselected by ExcludePaths. This
	// is a useful method for including a broad set of paths and then excluding a
	// subset of them.
	IncludePaths []string `pulumi:"includePaths"`
	// InsecureSkipTLSVerify specifies whether certificate verification errors
	// should be ignored when connecting to the repository. This should be enabled
	// only with great caution.
	InsecureSkipTLSVerify *bool `pulumi:"insecureSkipTLSVerify"`
	// URL is the repository's URL. This is a required field.
	RepoURL *string `pulumi:"repoURL"`
	// SemverConstraint specifies constraints on what new tagged commits are
	// considered in determining the newest commit of interest. The value in this
	// field only has any effect when the CommitSelectionStrategy is SemVer. This
	// field is optional. When left unspecified, there will be no constraints,
	// which means the latest semantically tagged commit will always be used. Care
	// should be taken with leaving this field unspecified, as it can lead to the
	// unanticipated rollout of breaking changes.
	SemverConstraint *string `pulumi:"semverConstraint"`
	// StrictSemvers specifies whether only "strict" semver tags should be
	// considered. A "strict" semver tag is one containing ALL of major, minor,
	// and patch version components. This is enabled by default, but only has any
	// effect when the CommitSelectionStrategy is SemVer. This should be disabled
	// cautiously, as it creates the potential for any tag containing numeric
	// characters only to be mistaken for a semver string containing the major
	// version number only.
	StrictSemvers *bool `pulumi:"strictSemvers"`
}

// WarehouseSpecSubscriptionsGitInput is an input type that accepts WarehouseSpecSubscriptionsGitArgs and WarehouseSpecSubscriptionsGitOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsGitInput` via:
//
//	WarehouseSpecSubscriptionsGitArgs{...}
type WarehouseSpecSubscriptionsGitInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsGitOutput() WarehouseSpecSubscriptionsGitOutput
	ToWarehouseSpecSubscriptionsGitOutputWithContext(context.Context) WarehouseSpecSubscriptionsGitOutput
}

// Git describes a subscriptions to a Git repository.
type WarehouseSpecSubscriptionsGitArgs struct {
	// AllowTags is a regular expression that can optionally be used to limit the
	// tags that are considered in determining the newest commit of interest. The
	// value in this field only has any effect when the CommitSelectionStrategy is
	// Lexical, NewestTag, or SemVer. This field is optional.
	AllowTags pulumi.StringPtrInput `pulumi:"allowTags"`
	// Branch references a particular branch of the repository. The value in this
	// field only has any effect when the CommitSelectionStrategy is
	// NewestFromBranch or left unspecified (which is implicitly the same as
	// NewestFromBranch). This field is optional. When left unspecified, (and the
	// CommitSelectionStrategy is NewestFromBranch or unspecified), the
	// subscription is implicitly to the repository's default branch.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// CommitSelectionStrategy specifies the rules for how to identify the newest
	// commit of interest in the repository specified by the RepoURL field. This
	// field is optional. When left unspecified, the field is implicitly treated
	// as if its value were "NewestFromBranch".
	//
	// Accepted values:
	//
	// - "NewestFromBranch": Selects the latest commit on the branch specified
	// by the Branch field or the default branch if none is specified. This is
	// the default strategy.
	//
	// - "SemVer": Selects the commit referenced by the the semantically greatest
	// tag. The SemverConstraint field can optionally be used to narrow the set
	// of tags eligible for selection.
	//
	// - "Lexical": Selects the commit referenced by the lexicographically
	// greatest tag. Useful when tags embed a _leading_ date or timestamp. The
	// AllowTags and IgnoreTags fields can optionally be used to narrow the set
	// of tags eligible for selection.
	//
	// - "NewestTag": Selects the commit referenced by the most recently created
	// tag. The AllowTags and IgnoreTags fields can optionally be used to
	// narrow the set of tags eligible for selection.
	CommitSelectionStrategy pulumi.StringPtrInput `pulumi:"commitSelectionStrategy"`
	// DiscoveryLimit is an optional limit on the number of commits that can be
	// discovered for this subscription. The limit is applied after filtering
	// commits based on the AllowTags and IgnoreTags fields.
	// When left unspecified, the field is implicitly treated as if its value
	// were "20". The upper limit for this field is 100.
	DiscoveryLimit pulumi.IntPtrInput `pulumi:"discoveryLimit"`
	// ExcludePaths is a list of selectors that designate paths in the repository
	// that should NOT trigger the production of new Freight when changes are
	// detected therein. When specified, changes in the identified paths will not
	// trigger Freight production. When not specified, paths that should trigger
	// Freight production will be defined solely by IncludePaths. Selectors may be
	// defined using:
	//   1. Exact paths to files or directories (ex. "charts/foo")
	//   2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
	//   3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
	//      ex. "regexp:^.*\.yaml$")
	//      Paths selected by IncludePaths may be unselected by ExcludePaths. This
	//      is a useful method for including a broad set of paths and then excluding a
	//      subset of them.
	ExcludePaths pulumi.StringArrayInput `pulumi:"excludePaths"`
	// IgnoreTags is a list of tags that must be ignored when determining the
	// newest commit of interest. No regular expressions or glob patterns are
	// supported yet. The value in this field only has any effect when the
	// CommitSelectionStrategy is Lexical, NewestTag, or SemVer. This field is
	// optional.
	IgnoreTags pulumi.StringArrayInput `pulumi:"ignoreTags"`
	// IncludePaths is a list of selectors that designate paths in the repository
	// that should trigger the production of new Freight when changes are detected
	// therein. When specified, only changes in the identified paths will trigger
	// Freight production. When not specified, changes in any path will trigger
	// Freight production. Selectors may be defined using:
	//   1. Exact paths to files or directories (ex. "charts/foo")
	//   2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
	//   3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
	//      ex. "regexp:^.*\.yaml$")
	//
	// Paths selected by IncludePaths may be unselected by ExcludePaths. This
	// is a useful method for including a broad set of paths and then excluding a
	// subset of them.
	IncludePaths pulumi.StringArrayInput `pulumi:"includePaths"`
	// InsecureSkipTLSVerify specifies whether certificate verification errors
	// should be ignored when connecting to the repository. This should be enabled
	// only with great caution.
	InsecureSkipTLSVerify pulumi.BoolPtrInput `pulumi:"insecureSkipTLSVerify"`
	// URL is the repository's URL. This is a required field.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// SemverConstraint specifies constraints on what new tagged commits are
	// considered in determining the newest commit of interest. The value in this
	// field only has any effect when the CommitSelectionStrategy is SemVer. This
	// field is optional. When left unspecified, there will be no constraints,
	// which means the latest semantically tagged commit will always be used. Care
	// should be taken with leaving this field unspecified, as it can lead to the
	// unanticipated rollout of breaking changes.
	SemverConstraint pulumi.StringPtrInput `pulumi:"semverConstraint"`
	// StrictSemvers specifies whether only "strict" semver tags should be
	// considered. A "strict" semver tag is one containing ALL of major, minor,
	// and patch version components. This is enabled by default, but only has any
	// effect when the CommitSelectionStrategy is SemVer. This should be disabled
	// cautiously, as it creates the potential for any tag containing numeric
	// characters only to be mistaken for a semver string containing the major
	// version number only.
	StrictSemvers pulumi.BoolPtrInput `pulumi:"strictSemvers"`
}

func (WarehouseSpecSubscriptionsGitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptionsGit)(nil)).Elem()
}

func (i WarehouseSpecSubscriptionsGitArgs) ToWarehouseSpecSubscriptionsGitOutput() WarehouseSpecSubscriptionsGitOutput {
	return i.ToWarehouseSpecSubscriptionsGitOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsGitArgs) ToWarehouseSpecSubscriptionsGitOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsGitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsGitOutput)
}

func (i WarehouseSpecSubscriptionsGitArgs) ToWarehouseSpecSubscriptionsGitPtrOutput() WarehouseSpecSubscriptionsGitPtrOutput {
	return i.ToWarehouseSpecSubscriptionsGitPtrOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsGitArgs) ToWarehouseSpecSubscriptionsGitPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsGitOutput).ToWarehouseSpecSubscriptionsGitPtrOutputWithContext(ctx)
}

// WarehouseSpecSubscriptionsGitPtrInput is an input type that accepts WarehouseSpecSubscriptionsGitArgs, WarehouseSpecSubscriptionsGitPtr and WarehouseSpecSubscriptionsGitPtrOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsGitPtrInput` via:
//
//	        WarehouseSpecSubscriptionsGitArgs{...}
//
//	or:
//
//	        nil
type WarehouseSpecSubscriptionsGitPtrInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsGitPtrOutput() WarehouseSpecSubscriptionsGitPtrOutput
	ToWarehouseSpecSubscriptionsGitPtrOutputWithContext(context.Context) WarehouseSpecSubscriptionsGitPtrOutput
}

type warehouseSpecSubscriptionsGitPtrType WarehouseSpecSubscriptionsGitArgs

func WarehouseSpecSubscriptionsGitPtr(v *WarehouseSpecSubscriptionsGitArgs) WarehouseSpecSubscriptionsGitPtrInput {
	return (*warehouseSpecSubscriptionsGitPtrType)(v)
}

func (*warehouseSpecSubscriptionsGitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpecSubscriptionsGit)(nil)).Elem()
}

func (i *warehouseSpecSubscriptionsGitPtrType) ToWarehouseSpecSubscriptionsGitPtrOutput() WarehouseSpecSubscriptionsGitPtrOutput {
	return i.ToWarehouseSpecSubscriptionsGitPtrOutputWithContext(context.Background())
}

func (i *warehouseSpecSubscriptionsGitPtrType) ToWarehouseSpecSubscriptionsGitPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsGitPtrOutput)
}

// Git describes a subscriptions to a Git repository.
type WarehouseSpecSubscriptionsGitOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsGitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptionsGit)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsGitOutput) ToWarehouseSpecSubscriptionsGitOutput() WarehouseSpecSubscriptionsGitOutput {
	return o
}

func (o WarehouseSpecSubscriptionsGitOutput) ToWarehouseSpecSubscriptionsGitOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsGitOutput {
	return o
}

func (o WarehouseSpecSubscriptionsGitOutput) ToWarehouseSpecSubscriptionsGitPtrOutput() WarehouseSpecSubscriptionsGitPtrOutput {
	return o.ToWarehouseSpecSubscriptionsGitPtrOutputWithContext(context.Background())
}

func (o WarehouseSpecSubscriptionsGitOutput) ToWarehouseSpecSubscriptionsGitPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsGitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WarehouseSpecSubscriptionsGit) *WarehouseSpecSubscriptionsGit {
		return &v
	}).(WarehouseSpecSubscriptionsGitPtrOutput)
}

// AllowTags is a regular expression that can optionally be used to limit the
// tags that are considered in determining the newest commit of interest. The
// value in this field only has any effect when the CommitSelectionStrategy is
// Lexical, NewestTag, or SemVer. This field is optional.
func (o WarehouseSpecSubscriptionsGitOutput) AllowTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGit) *string { return v.AllowTags }).(pulumi.StringPtrOutput)
}

// Branch references a particular branch of the repository. The value in this
// field only has any effect when the CommitSelectionStrategy is
// NewestFromBranch or left unspecified (which is implicitly the same as
// NewestFromBranch). This field is optional. When left unspecified, (and the
// CommitSelectionStrategy is NewestFromBranch or unspecified), the
// subscription is implicitly to the repository's default branch.
func (o WarehouseSpecSubscriptionsGitOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGit) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// CommitSelectionStrategy specifies the rules for how to identify the newest
// commit of interest in the repository specified by the RepoURL field. This
// field is optional. When left unspecified, the field is implicitly treated
// as if its value were "NewestFromBranch".
//
// Accepted values:
//
// - "NewestFromBranch": Selects the latest commit on the branch specified
// by the Branch field or the default branch if none is specified. This is
// the default strategy.
//
// - "SemVer": Selects the commit referenced by the the semantically greatest
// tag. The SemverConstraint field can optionally be used to narrow the set
// of tags eligible for selection.
//
// - "Lexical": Selects the commit referenced by the lexicographically
// greatest tag. Useful when tags embed a _leading_ date or timestamp. The
// AllowTags and IgnoreTags fields can optionally be used to narrow the set
// of tags eligible for selection.
//
// - "NewestTag": Selects the commit referenced by the most recently created
// tag. The AllowTags and IgnoreTags fields can optionally be used to
// narrow the set of tags eligible for selection.
func (o WarehouseSpecSubscriptionsGitOutput) CommitSelectionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGit) *string { return v.CommitSelectionStrategy }).(pulumi.StringPtrOutput)
}

// DiscoveryLimit is an optional limit on the number of commits that can be
// discovered for this subscription. The limit is applied after filtering
// commits based on the AllowTags and IgnoreTags fields.
// When left unspecified, the field is implicitly treated as if its value
// were "20". The upper limit for this field is 100.
func (o WarehouseSpecSubscriptionsGitOutput) DiscoveryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGit) *int { return v.DiscoveryLimit }).(pulumi.IntPtrOutput)
}

// ExcludePaths is a list of selectors that designate paths in the repository
// that should NOT trigger the production of new Freight when changes are
// detected therein. When specified, changes in the identified paths will not
// trigger Freight production. When not specified, paths that should trigger
// Freight production will be defined solely by IncludePaths. Selectors may be
// defined using:
//  1. Exact paths to files or directories (ex. "charts/foo")
//  2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
//  3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
//     ex. "regexp:^.*\.yaml$")
//     Paths selected by IncludePaths may be unselected by ExcludePaths. This
//     is a useful method for including a broad set of paths and then excluding a
//     subset of them.
func (o WarehouseSpecSubscriptionsGitOutput) ExcludePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGit) []string { return v.ExcludePaths }).(pulumi.StringArrayOutput)
}

// IgnoreTags is a list of tags that must be ignored when determining the
// newest commit of interest. No regular expressions or glob patterns are
// supported yet. The value in this field only has any effect when the
// CommitSelectionStrategy is Lexical, NewestTag, or SemVer. This field is
// optional.
func (o WarehouseSpecSubscriptionsGitOutput) IgnoreTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGit) []string { return v.IgnoreTags }).(pulumi.StringArrayOutput)
}

// IncludePaths is a list of selectors that designate paths in the repository
// that should trigger the production of new Freight when changes are detected
// therein. When specified, only changes in the identified paths will trigger
// Freight production. When not specified, changes in any path will trigger
// Freight production. Selectors may be defined using:
//  1. Exact paths to files or directories (ex. "charts/foo")
//  2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
//  3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
//     ex. "regexp:^.*\.yaml$")
//
// Paths selected by IncludePaths may be unselected by ExcludePaths. This
// is a useful method for including a broad set of paths and then excluding a
// subset of them.
func (o WarehouseSpecSubscriptionsGitOutput) IncludePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGit) []string { return v.IncludePaths }).(pulumi.StringArrayOutput)
}

// InsecureSkipTLSVerify specifies whether certificate verification errors
// should be ignored when connecting to the repository. This should be enabled
// only with great caution.
func (o WarehouseSpecSubscriptionsGitOutput) InsecureSkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGit) *bool { return v.InsecureSkipTLSVerify }).(pulumi.BoolPtrOutput)
}

// URL is the repository's URL. This is a required field.
func (o WarehouseSpecSubscriptionsGitOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGit) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// SemverConstraint specifies constraints on what new tagged commits are
// considered in determining the newest commit of interest. The value in this
// field only has any effect when the CommitSelectionStrategy is SemVer. This
// field is optional. When left unspecified, there will be no constraints,
// which means the latest semantically tagged commit will always be used. Care
// should be taken with leaving this field unspecified, as it can lead to the
// unanticipated rollout of breaking changes.
func (o WarehouseSpecSubscriptionsGitOutput) SemverConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGit) *string { return v.SemverConstraint }).(pulumi.StringPtrOutput)
}

// StrictSemvers specifies whether only "strict" semver tags should be
// considered. A "strict" semver tag is one containing ALL of major, minor,
// and patch version components. This is enabled by default, but only has any
// effect when the CommitSelectionStrategy is SemVer. This should be disabled
// cautiously, as it creates the potential for any tag containing numeric
// characters only to be mistaken for a semver string containing the major
// version number only.
func (o WarehouseSpecSubscriptionsGitOutput) StrictSemvers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGit) *bool { return v.StrictSemvers }).(pulumi.BoolPtrOutput)
}

type WarehouseSpecSubscriptionsGitPtrOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsGitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpecSubscriptionsGit)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsGitPtrOutput) ToWarehouseSpecSubscriptionsGitPtrOutput() WarehouseSpecSubscriptionsGitPtrOutput {
	return o
}

func (o WarehouseSpecSubscriptionsGitPtrOutput) ToWarehouseSpecSubscriptionsGitPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsGitPtrOutput {
	return o
}

func (o WarehouseSpecSubscriptionsGitPtrOutput) Elem() WarehouseSpecSubscriptionsGitOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGit) WarehouseSpecSubscriptionsGit {
		if v != nil {
			return *v
		}
		var ret WarehouseSpecSubscriptionsGit
		return ret
	}).(WarehouseSpecSubscriptionsGitOutput)
}

// AllowTags is a regular expression that can optionally be used to limit the
// tags that are considered in determining the newest commit of interest. The
// value in this field only has any effect when the CommitSelectionStrategy is
// Lexical, NewestTag, or SemVer. This field is optional.
func (o WarehouseSpecSubscriptionsGitPtrOutput) AllowTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGit) *string {
		if v == nil {
			return nil
		}
		return v.AllowTags
	}).(pulumi.StringPtrOutput)
}

// Branch references a particular branch of the repository. The value in this
// field only has any effect when the CommitSelectionStrategy is
// NewestFromBranch or left unspecified (which is implicitly the same as
// NewestFromBranch). This field is optional. When left unspecified, (and the
// CommitSelectionStrategy is NewestFromBranch or unspecified), the
// subscription is implicitly to the repository's default branch.
func (o WarehouseSpecSubscriptionsGitPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGit) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// CommitSelectionStrategy specifies the rules for how to identify the newest
// commit of interest in the repository specified by the RepoURL field. This
// field is optional. When left unspecified, the field is implicitly treated
// as if its value were "NewestFromBranch".
//
// Accepted values:
//
// - "NewestFromBranch": Selects the latest commit on the branch specified
// by the Branch field or the default branch if none is specified. This is
// the default strategy.
//
// - "SemVer": Selects the commit referenced by the the semantically greatest
// tag. The SemverConstraint field can optionally be used to narrow the set
// of tags eligible for selection.
//
// - "Lexical": Selects the commit referenced by the lexicographically
// greatest tag. Useful when tags embed a _leading_ date or timestamp. The
// AllowTags and IgnoreTags fields can optionally be used to narrow the set
// of tags eligible for selection.
//
// - "NewestTag": Selects the commit referenced by the most recently created
// tag. The AllowTags and IgnoreTags fields can optionally be used to
// narrow the set of tags eligible for selection.
func (o WarehouseSpecSubscriptionsGitPtrOutput) CommitSelectionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGit) *string {
		if v == nil {
			return nil
		}
		return v.CommitSelectionStrategy
	}).(pulumi.StringPtrOutput)
}

// DiscoveryLimit is an optional limit on the number of commits that can be
// discovered for this subscription. The limit is applied after filtering
// commits based on the AllowTags and IgnoreTags fields.
// When left unspecified, the field is implicitly treated as if its value
// were "20". The upper limit for this field is 100.
func (o WarehouseSpecSubscriptionsGitPtrOutput) DiscoveryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGit) *int {
		if v == nil {
			return nil
		}
		return v.DiscoveryLimit
	}).(pulumi.IntPtrOutput)
}

// ExcludePaths is a list of selectors that designate paths in the repository
// that should NOT trigger the production of new Freight when changes are
// detected therein. When specified, changes in the identified paths will not
// trigger Freight production. When not specified, paths that should trigger
// Freight production will be defined solely by IncludePaths. Selectors may be
// defined using:
//  1. Exact paths to files or directories (ex. "charts/foo")
//  2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
//  3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
//     ex. "regexp:^.*\.yaml$")
//     Paths selected by IncludePaths may be unselected by ExcludePaths. This
//     is a useful method for including a broad set of paths and then excluding a
//     subset of them.
func (o WarehouseSpecSubscriptionsGitPtrOutput) ExcludePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGit) []string {
		if v == nil {
			return nil
		}
		return v.ExcludePaths
	}).(pulumi.StringArrayOutput)
}

// IgnoreTags is a list of tags that must be ignored when determining the
// newest commit of interest. No regular expressions or glob patterns are
// supported yet. The value in this field only has any effect when the
// CommitSelectionStrategy is Lexical, NewestTag, or SemVer. This field is
// optional.
func (o WarehouseSpecSubscriptionsGitPtrOutput) IgnoreTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGit) []string {
		if v == nil {
			return nil
		}
		return v.IgnoreTags
	}).(pulumi.StringArrayOutput)
}

// IncludePaths is a list of selectors that designate paths in the repository
// that should trigger the production of new Freight when changes are detected
// therein. When specified, only changes in the identified paths will trigger
// Freight production. When not specified, changes in any path will trigger
// Freight production. Selectors may be defined using:
//  1. Exact paths to files or directories (ex. "charts/foo")
//  2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
//  3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
//     ex. "regexp:^.*\.yaml$")
//
// Paths selected by IncludePaths may be unselected by ExcludePaths. This
// is a useful method for including a broad set of paths and then excluding a
// subset of them.
func (o WarehouseSpecSubscriptionsGitPtrOutput) IncludePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGit) []string {
		if v == nil {
			return nil
		}
		return v.IncludePaths
	}).(pulumi.StringArrayOutput)
}

// InsecureSkipTLSVerify specifies whether certificate verification errors
// should be ignored when connecting to the repository. This should be enabled
// only with great caution.
func (o WarehouseSpecSubscriptionsGitPtrOutput) InsecureSkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGit) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipTLSVerify
	}).(pulumi.BoolPtrOutput)
}

// URL is the repository's URL. This is a required field.
func (o WarehouseSpecSubscriptionsGitPtrOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGit) *string {
		if v == nil {
			return nil
		}
		return v.RepoURL
	}).(pulumi.StringPtrOutput)
}

// SemverConstraint specifies constraints on what new tagged commits are
// considered in determining the newest commit of interest. The value in this
// field only has any effect when the CommitSelectionStrategy is SemVer. This
// field is optional. When left unspecified, there will be no constraints,
// which means the latest semantically tagged commit will always be used. Care
// should be taken with leaving this field unspecified, as it can lead to the
// unanticipated rollout of breaking changes.
func (o WarehouseSpecSubscriptionsGitPtrOutput) SemverConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGit) *string {
		if v == nil {
			return nil
		}
		return v.SemverConstraint
	}).(pulumi.StringPtrOutput)
}

// StrictSemvers specifies whether only "strict" semver tags should be
// considered. A "strict" semver tag is one containing ALL of major, minor,
// and patch version components. This is enabled by default, but only has any
// effect when the CommitSelectionStrategy is SemVer. This should be disabled
// cautiously, as it creates the potential for any tag containing numeric
// characters only to be mistaken for a semver string containing the major
// version number only.
func (o WarehouseSpecSubscriptionsGitPtrOutput) StrictSemvers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGit) *bool {
		if v == nil {
			return nil
		}
		return v.StrictSemvers
	}).(pulumi.BoolPtrOutput)
}

// Git describes a subscriptions to a Git repository.
type WarehouseSpecSubscriptionsGitPatch struct {
	// AllowTags is a regular expression that can optionally be used to limit the
	// tags that are considered in determining the newest commit of interest. The
	// value in this field only has any effect when the CommitSelectionStrategy is
	// Lexical, NewestTag, or SemVer. This field is optional.
	AllowTags *string `pulumi:"allowTags"`
	// Branch references a particular branch of the repository. The value in this
	// field only has any effect when the CommitSelectionStrategy is
	// NewestFromBranch or left unspecified (which is implicitly the same as
	// NewestFromBranch). This field is optional. When left unspecified, (and the
	// CommitSelectionStrategy is NewestFromBranch or unspecified), the
	// subscription is implicitly to the repository's default branch.
	Branch *string `pulumi:"branch"`
	// CommitSelectionStrategy specifies the rules for how to identify the newest
	// commit of interest in the repository specified by the RepoURL field. This
	// field is optional. When left unspecified, the field is implicitly treated
	// as if its value were "NewestFromBranch".
	//
	// Accepted values:
	//
	// - "NewestFromBranch": Selects the latest commit on the branch specified
	// by the Branch field or the default branch if none is specified. This is
	// the default strategy.
	//
	// - "SemVer": Selects the commit referenced by the the semantically greatest
	// tag. The SemverConstraint field can optionally be used to narrow the set
	// of tags eligible for selection.
	//
	// - "Lexical": Selects the commit referenced by the lexicographically
	// greatest tag. Useful when tags embed a _leading_ date or timestamp. The
	// AllowTags and IgnoreTags fields can optionally be used to narrow the set
	// of tags eligible for selection.
	//
	// - "NewestTag": Selects the commit referenced by the most recently created
	// tag. The AllowTags and IgnoreTags fields can optionally be used to
	// narrow the set of tags eligible for selection.
	CommitSelectionStrategy *string `pulumi:"commitSelectionStrategy"`
	// DiscoveryLimit is an optional limit on the number of commits that can be
	// discovered for this subscription. The limit is applied after filtering
	// commits based on the AllowTags and IgnoreTags fields.
	// When left unspecified, the field is implicitly treated as if its value
	// were "20". The upper limit for this field is 100.
	DiscoveryLimit *int `pulumi:"discoveryLimit"`
	// ExcludePaths is a list of selectors that designate paths in the repository
	// that should NOT trigger the production of new Freight when changes are
	// detected therein. When specified, changes in the identified paths will not
	// trigger Freight production. When not specified, paths that should trigger
	// Freight production will be defined solely by IncludePaths. Selectors may be
	// defined using:
	//   1. Exact paths to files or directories (ex. "charts/foo")
	//   2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
	//   3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
	//      ex. "regexp:^.*\.yaml$")
	//      Paths selected by IncludePaths may be unselected by ExcludePaths. This
	//      is a useful method for including a broad set of paths and then excluding a
	//      subset of them.
	ExcludePaths []string `pulumi:"excludePaths"`
	// IgnoreTags is a list of tags that must be ignored when determining the
	// newest commit of interest. No regular expressions or glob patterns are
	// supported yet. The value in this field only has any effect when the
	// CommitSelectionStrategy is Lexical, NewestTag, or SemVer. This field is
	// optional.
	IgnoreTags []string `pulumi:"ignoreTags"`
	// IncludePaths is a list of selectors that designate paths in the repository
	// that should trigger the production of new Freight when changes are detected
	// therein. When specified, only changes in the identified paths will trigger
	// Freight production. When not specified, changes in any path will trigger
	// Freight production. Selectors may be defined using:
	//   1. Exact paths to files or directories (ex. "charts/foo")
	//   2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
	//   3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
	//      ex. "regexp:^.*\.yaml$")
	//
	// Paths selected by IncludePaths may be unselected by ExcludePaths. This
	// is a useful method for including a broad set of paths and then excluding a
	// subset of them.
	IncludePaths []string `pulumi:"includePaths"`
	// InsecureSkipTLSVerify specifies whether certificate verification errors
	// should be ignored when connecting to the repository. This should be enabled
	// only with great caution.
	InsecureSkipTLSVerify *bool `pulumi:"insecureSkipTLSVerify"`
	// URL is the repository's URL. This is a required field.
	RepoURL *string `pulumi:"repoURL"`
	// SemverConstraint specifies constraints on what new tagged commits are
	// considered in determining the newest commit of interest. The value in this
	// field only has any effect when the CommitSelectionStrategy is SemVer. This
	// field is optional. When left unspecified, there will be no constraints,
	// which means the latest semantically tagged commit will always be used. Care
	// should be taken with leaving this field unspecified, as it can lead to the
	// unanticipated rollout of breaking changes.
	SemverConstraint *string `pulumi:"semverConstraint"`
	// StrictSemvers specifies whether only "strict" semver tags should be
	// considered. A "strict" semver tag is one containing ALL of major, minor,
	// and patch version components. This is enabled by default, but only has any
	// effect when the CommitSelectionStrategy is SemVer. This should be disabled
	// cautiously, as it creates the potential for any tag containing numeric
	// characters only to be mistaken for a semver string containing the major
	// version number only.
	StrictSemvers *bool `pulumi:"strictSemvers"`
}

// WarehouseSpecSubscriptionsGitPatchInput is an input type that accepts WarehouseSpecSubscriptionsGitPatchArgs and WarehouseSpecSubscriptionsGitPatchOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsGitPatchInput` via:
//
//	WarehouseSpecSubscriptionsGitPatchArgs{...}
type WarehouseSpecSubscriptionsGitPatchInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsGitPatchOutput() WarehouseSpecSubscriptionsGitPatchOutput
	ToWarehouseSpecSubscriptionsGitPatchOutputWithContext(context.Context) WarehouseSpecSubscriptionsGitPatchOutput
}

// Git describes a subscriptions to a Git repository.
type WarehouseSpecSubscriptionsGitPatchArgs struct {
	// AllowTags is a regular expression that can optionally be used to limit the
	// tags that are considered in determining the newest commit of interest. The
	// value in this field only has any effect when the CommitSelectionStrategy is
	// Lexical, NewestTag, or SemVer. This field is optional.
	AllowTags pulumi.StringPtrInput `pulumi:"allowTags"`
	// Branch references a particular branch of the repository. The value in this
	// field only has any effect when the CommitSelectionStrategy is
	// NewestFromBranch or left unspecified (which is implicitly the same as
	// NewestFromBranch). This field is optional. When left unspecified, (and the
	// CommitSelectionStrategy is NewestFromBranch or unspecified), the
	// subscription is implicitly to the repository's default branch.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// CommitSelectionStrategy specifies the rules for how to identify the newest
	// commit of interest in the repository specified by the RepoURL field. This
	// field is optional. When left unspecified, the field is implicitly treated
	// as if its value were "NewestFromBranch".
	//
	// Accepted values:
	//
	// - "NewestFromBranch": Selects the latest commit on the branch specified
	// by the Branch field or the default branch if none is specified. This is
	// the default strategy.
	//
	// - "SemVer": Selects the commit referenced by the the semantically greatest
	// tag. The SemverConstraint field can optionally be used to narrow the set
	// of tags eligible for selection.
	//
	// - "Lexical": Selects the commit referenced by the lexicographically
	// greatest tag. Useful when tags embed a _leading_ date or timestamp. The
	// AllowTags and IgnoreTags fields can optionally be used to narrow the set
	// of tags eligible for selection.
	//
	// - "NewestTag": Selects the commit referenced by the most recently created
	// tag. The AllowTags and IgnoreTags fields can optionally be used to
	// narrow the set of tags eligible for selection.
	CommitSelectionStrategy pulumi.StringPtrInput `pulumi:"commitSelectionStrategy"`
	// DiscoveryLimit is an optional limit on the number of commits that can be
	// discovered for this subscription. The limit is applied after filtering
	// commits based on the AllowTags and IgnoreTags fields.
	// When left unspecified, the field is implicitly treated as if its value
	// were "20". The upper limit for this field is 100.
	DiscoveryLimit pulumi.IntPtrInput `pulumi:"discoveryLimit"`
	// ExcludePaths is a list of selectors that designate paths in the repository
	// that should NOT trigger the production of new Freight when changes are
	// detected therein. When specified, changes in the identified paths will not
	// trigger Freight production. When not specified, paths that should trigger
	// Freight production will be defined solely by IncludePaths. Selectors may be
	// defined using:
	//   1. Exact paths to files or directories (ex. "charts/foo")
	//   2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
	//   3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
	//      ex. "regexp:^.*\.yaml$")
	//      Paths selected by IncludePaths may be unselected by ExcludePaths. This
	//      is a useful method for including a broad set of paths and then excluding a
	//      subset of them.
	ExcludePaths pulumi.StringArrayInput `pulumi:"excludePaths"`
	// IgnoreTags is a list of tags that must be ignored when determining the
	// newest commit of interest. No regular expressions or glob patterns are
	// supported yet. The value in this field only has any effect when the
	// CommitSelectionStrategy is Lexical, NewestTag, or SemVer. This field is
	// optional.
	IgnoreTags pulumi.StringArrayInput `pulumi:"ignoreTags"`
	// IncludePaths is a list of selectors that designate paths in the repository
	// that should trigger the production of new Freight when changes are detected
	// therein. When specified, only changes in the identified paths will trigger
	// Freight production. When not specified, changes in any path will trigger
	// Freight production. Selectors may be defined using:
	//   1. Exact paths to files or directories (ex. "charts/foo")
	//   2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
	//   3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
	//      ex. "regexp:^.*\.yaml$")
	//
	// Paths selected by IncludePaths may be unselected by ExcludePaths. This
	// is a useful method for including a broad set of paths and then excluding a
	// subset of them.
	IncludePaths pulumi.StringArrayInput `pulumi:"includePaths"`
	// InsecureSkipTLSVerify specifies whether certificate verification errors
	// should be ignored when connecting to the repository. This should be enabled
	// only with great caution.
	InsecureSkipTLSVerify pulumi.BoolPtrInput `pulumi:"insecureSkipTLSVerify"`
	// URL is the repository's URL. This is a required field.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// SemverConstraint specifies constraints on what new tagged commits are
	// considered in determining the newest commit of interest. The value in this
	// field only has any effect when the CommitSelectionStrategy is SemVer. This
	// field is optional. When left unspecified, there will be no constraints,
	// which means the latest semantically tagged commit will always be used. Care
	// should be taken with leaving this field unspecified, as it can lead to the
	// unanticipated rollout of breaking changes.
	SemverConstraint pulumi.StringPtrInput `pulumi:"semverConstraint"`
	// StrictSemvers specifies whether only "strict" semver tags should be
	// considered. A "strict" semver tag is one containing ALL of major, minor,
	// and patch version components. This is enabled by default, but only has any
	// effect when the CommitSelectionStrategy is SemVer. This should be disabled
	// cautiously, as it creates the potential for any tag containing numeric
	// characters only to be mistaken for a semver string containing the major
	// version number only.
	StrictSemvers pulumi.BoolPtrInput `pulumi:"strictSemvers"`
}

func (WarehouseSpecSubscriptionsGitPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptionsGitPatch)(nil)).Elem()
}

func (i WarehouseSpecSubscriptionsGitPatchArgs) ToWarehouseSpecSubscriptionsGitPatchOutput() WarehouseSpecSubscriptionsGitPatchOutput {
	return i.ToWarehouseSpecSubscriptionsGitPatchOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsGitPatchArgs) ToWarehouseSpecSubscriptionsGitPatchOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsGitPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsGitPatchOutput)
}

func (i WarehouseSpecSubscriptionsGitPatchArgs) ToWarehouseSpecSubscriptionsGitPatchPtrOutput() WarehouseSpecSubscriptionsGitPatchPtrOutput {
	return i.ToWarehouseSpecSubscriptionsGitPatchPtrOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsGitPatchArgs) ToWarehouseSpecSubscriptionsGitPatchPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsGitPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsGitPatchOutput).ToWarehouseSpecSubscriptionsGitPatchPtrOutputWithContext(ctx)
}

// WarehouseSpecSubscriptionsGitPatchPtrInput is an input type that accepts WarehouseSpecSubscriptionsGitPatchArgs, WarehouseSpecSubscriptionsGitPatchPtr and WarehouseSpecSubscriptionsGitPatchPtrOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsGitPatchPtrInput` via:
//
//	        WarehouseSpecSubscriptionsGitPatchArgs{...}
//
//	or:
//
//	        nil
type WarehouseSpecSubscriptionsGitPatchPtrInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsGitPatchPtrOutput() WarehouseSpecSubscriptionsGitPatchPtrOutput
	ToWarehouseSpecSubscriptionsGitPatchPtrOutputWithContext(context.Context) WarehouseSpecSubscriptionsGitPatchPtrOutput
}

type warehouseSpecSubscriptionsGitPatchPtrType WarehouseSpecSubscriptionsGitPatchArgs

func WarehouseSpecSubscriptionsGitPatchPtr(v *WarehouseSpecSubscriptionsGitPatchArgs) WarehouseSpecSubscriptionsGitPatchPtrInput {
	return (*warehouseSpecSubscriptionsGitPatchPtrType)(v)
}

func (*warehouseSpecSubscriptionsGitPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpecSubscriptionsGitPatch)(nil)).Elem()
}

func (i *warehouseSpecSubscriptionsGitPatchPtrType) ToWarehouseSpecSubscriptionsGitPatchPtrOutput() WarehouseSpecSubscriptionsGitPatchPtrOutput {
	return i.ToWarehouseSpecSubscriptionsGitPatchPtrOutputWithContext(context.Background())
}

func (i *warehouseSpecSubscriptionsGitPatchPtrType) ToWarehouseSpecSubscriptionsGitPatchPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsGitPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsGitPatchPtrOutput)
}

// Git describes a subscriptions to a Git repository.
type WarehouseSpecSubscriptionsGitPatchOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsGitPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptionsGitPatch)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsGitPatchOutput) ToWarehouseSpecSubscriptionsGitPatchOutput() WarehouseSpecSubscriptionsGitPatchOutput {
	return o
}

func (o WarehouseSpecSubscriptionsGitPatchOutput) ToWarehouseSpecSubscriptionsGitPatchOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsGitPatchOutput {
	return o
}

func (o WarehouseSpecSubscriptionsGitPatchOutput) ToWarehouseSpecSubscriptionsGitPatchPtrOutput() WarehouseSpecSubscriptionsGitPatchPtrOutput {
	return o.ToWarehouseSpecSubscriptionsGitPatchPtrOutputWithContext(context.Background())
}

func (o WarehouseSpecSubscriptionsGitPatchOutput) ToWarehouseSpecSubscriptionsGitPatchPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsGitPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WarehouseSpecSubscriptionsGitPatch) *WarehouseSpecSubscriptionsGitPatch {
		return &v
	}).(WarehouseSpecSubscriptionsGitPatchPtrOutput)
}

// AllowTags is a regular expression that can optionally be used to limit the
// tags that are considered in determining the newest commit of interest. The
// value in this field only has any effect when the CommitSelectionStrategy is
// Lexical, NewestTag, or SemVer. This field is optional.
func (o WarehouseSpecSubscriptionsGitPatchOutput) AllowTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGitPatch) *string { return v.AllowTags }).(pulumi.StringPtrOutput)
}

// Branch references a particular branch of the repository. The value in this
// field only has any effect when the CommitSelectionStrategy is
// NewestFromBranch or left unspecified (which is implicitly the same as
// NewestFromBranch). This field is optional. When left unspecified, (and the
// CommitSelectionStrategy is NewestFromBranch or unspecified), the
// subscription is implicitly to the repository's default branch.
func (o WarehouseSpecSubscriptionsGitPatchOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGitPatch) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// CommitSelectionStrategy specifies the rules for how to identify the newest
// commit of interest in the repository specified by the RepoURL field. This
// field is optional. When left unspecified, the field is implicitly treated
// as if its value were "NewestFromBranch".
//
// Accepted values:
//
// - "NewestFromBranch": Selects the latest commit on the branch specified
// by the Branch field or the default branch if none is specified. This is
// the default strategy.
//
// - "SemVer": Selects the commit referenced by the the semantically greatest
// tag. The SemverConstraint field can optionally be used to narrow the set
// of tags eligible for selection.
//
// - "Lexical": Selects the commit referenced by the lexicographically
// greatest tag. Useful when tags embed a _leading_ date or timestamp. The
// AllowTags and IgnoreTags fields can optionally be used to narrow the set
// of tags eligible for selection.
//
// - "NewestTag": Selects the commit referenced by the most recently created
// tag. The AllowTags and IgnoreTags fields can optionally be used to
// narrow the set of tags eligible for selection.
func (o WarehouseSpecSubscriptionsGitPatchOutput) CommitSelectionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGitPatch) *string { return v.CommitSelectionStrategy }).(pulumi.StringPtrOutput)
}

// DiscoveryLimit is an optional limit on the number of commits that can be
// discovered for this subscription. The limit is applied after filtering
// commits based on the AllowTags and IgnoreTags fields.
// When left unspecified, the field is implicitly treated as if its value
// were "20". The upper limit for this field is 100.
func (o WarehouseSpecSubscriptionsGitPatchOutput) DiscoveryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGitPatch) *int { return v.DiscoveryLimit }).(pulumi.IntPtrOutput)
}

// ExcludePaths is a list of selectors that designate paths in the repository
// that should NOT trigger the production of new Freight when changes are
// detected therein. When specified, changes in the identified paths will not
// trigger Freight production. When not specified, paths that should trigger
// Freight production will be defined solely by IncludePaths. Selectors may be
// defined using:
//  1. Exact paths to files or directories (ex. "charts/foo")
//  2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
//  3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
//     ex. "regexp:^.*\.yaml$")
//     Paths selected by IncludePaths may be unselected by ExcludePaths. This
//     is a useful method for including a broad set of paths and then excluding a
//     subset of them.
func (o WarehouseSpecSubscriptionsGitPatchOutput) ExcludePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGitPatch) []string { return v.ExcludePaths }).(pulumi.StringArrayOutput)
}

// IgnoreTags is a list of tags that must be ignored when determining the
// newest commit of interest. No regular expressions or glob patterns are
// supported yet. The value in this field only has any effect when the
// CommitSelectionStrategy is Lexical, NewestTag, or SemVer. This field is
// optional.
func (o WarehouseSpecSubscriptionsGitPatchOutput) IgnoreTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGitPatch) []string { return v.IgnoreTags }).(pulumi.StringArrayOutput)
}

// IncludePaths is a list of selectors that designate paths in the repository
// that should trigger the production of new Freight when changes are detected
// therein. When specified, only changes in the identified paths will trigger
// Freight production. When not specified, changes in any path will trigger
// Freight production. Selectors may be defined using:
//  1. Exact paths to files or directories (ex. "charts/foo")
//  2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
//  3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
//     ex. "regexp:^.*\.yaml$")
//
// Paths selected by IncludePaths may be unselected by ExcludePaths. This
// is a useful method for including a broad set of paths and then excluding a
// subset of them.
func (o WarehouseSpecSubscriptionsGitPatchOutput) IncludePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGitPatch) []string { return v.IncludePaths }).(pulumi.StringArrayOutput)
}

// InsecureSkipTLSVerify specifies whether certificate verification errors
// should be ignored when connecting to the repository. This should be enabled
// only with great caution.
func (o WarehouseSpecSubscriptionsGitPatchOutput) InsecureSkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGitPatch) *bool { return v.InsecureSkipTLSVerify }).(pulumi.BoolPtrOutput)
}

// URL is the repository's URL. This is a required field.
func (o WarehouseSpecSubscriptionsGitPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGitPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// SemverConstraint specifies constraints on what new tagged commits are
// considered in determining the newest commit of interest. The value in this
// field only has any effect when the CommitSelectionStrategy is SemVer. This
// field is optional. When left unspecified, there will be no constraints,
// which means the latest semantically tagged commit will always be used. Care
// should be taken with leaving this field unspecified, as it can lead to the
// unanticipated rollout of breaking changes.
func (o WarehouseSpecSubscriptionsGitPatchOutput) SemverConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGitPatch) *string { return v.SemverConstraint }).(pulumi.StringPtrOutput)
}

// StrictSemvers specifies whether only "strict" semver tags should be
// considered. A "strict" semver tag is one containing ALL of major, minor,
// and patch version components. This is enabled by default, but only has any
// effect when the CommitSelectionStrategy is SemVer. This should be disabled
// cautiously, as it creates the potential for any tag containing numeric
// characters only to be mistaken for a semver string containing the major
// version number only.
func (o WarehouseSpecSubscriptionsGitPatchOutput) StrictSemvers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsGitPatch) *bool { return v.StrictSemvers }).(pulumi.BoolPtrOutput)
}

type WarehouseSpecSubscriptionsGitPatchPtrOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsGitPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpecSubscriptionsGitPatch)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsGitPatchPtrOutput) ToWarehouseSpecSubscriptionsGitPatchPtrOutput() WarehouseSpecSubscriptionsGitPatchPtrOutput {
	return o
}

func (o WarehouseSpecSubscriptionsGitPatchPtrOutput) ToWarehouseSpecSubscriptionsGitPatchPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsGitPatchPtrOutput {
	return o
}

func (o WarehouseSpecSubscriptionsGitPatchPtrOutput) Elem() WarehouseSpecSubscriptionsGitPatchOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGitPatch) WarehouseSpecSubscriptionsGitPatch {
		if v != nil {
			return *v
		}
		var ret WarehouseSpecSubscriptionsGitPatch
		return ret
	}).(WarehouseSpecSubscriptionsGitPatchOutput)
}

// AllowTags is a regular expression that can optionally be used to limit the
// tags that are considered in determining the newest commit of interest. The
// value in this field only has any effect when the CommitSelectionStrategy is
// Lexical, NewestTag, or SemVer. This field is optional.
func (o WarehouseSpecSubscriptionsGitPatchPtrOutput) AllowTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGitPatch) *string {
		if v == nil {
			return nil
		}
		return v.AllowTags
	}).(pulumi.StringPtrOutput)
}

// Branch references a particular branch of the repository. The value in this
// field only has any effect when the CommitSelectionStrategy is
// NewestFromBranch or left unspecified (which is implicitly the same as
// NewestFromBranch). This field is optional. When left unspecified, (and the
// CommitSelectionStrategy is NewestFromBranch or unspecified), the
// subscription is implicitly to the repository's default branch.
func (o WarehouseSpecSubscriptionsGitPatchPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGitPatch) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// CommitSelectionStrategy specifies the rules for how to identify the newest
// commit of interest in the repository specified by the RepoURL field. This
// field is optional. When left unspecified, the field is implicitly treated
// as if its value were "NewestFromBranch".
//
// Accepted values:
//
// - "NewestFromBranch": Selects the latest commit on the branch specified
// by the Branch field or the default branch if none is specified. This is
// the default strategy.
//
// - "SemVer": Selects the commit referenced by the the semantically greatest
// tag. The SemverConstraint field can optionally be used to narrow the set
// of tags eligible for selection.
//
// - "Lexical": Selects the commit referenced by the lexicographically
// greatest tag. Useful when tags embed a _leading_ date or timestamp. The
// AllowTags and IgnoreTags fields can optionally be used to narrow the set
// of tags eligible for selection.
//
// - "NewestTag": Selects the commit referenced by the most recently created
// tag. The AllowTags and IgnoreTags fields can optionally be used to
// narrow the set of tags eligible for selection.
func (o WarehouseSpecSubscriptionsGitPatchPtrOutput) CommitSelectionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGitPatch) *string {
		if v == nil {
			return nil
		}
		return v.CommitSelectionStrategy
	}).(pulumi.StringPtrOutput)
}

// DiscoveryLimit is an optional limit on the number of commits that can be
// discovered for this subscription. The limit is applied after filtering
// commits based on the AllowTags and IgnoreTags fields.
// When left unspecified, the field is implicitly treated as if its value
// were "20". The upper limit for this field is 100.
func (o WarehouseSpecSubscriptionsGitPatchPtrOutput) DiscoveryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGitPatch) *int {
		if v == nil {
			return nil
		}
		return v.DiscoveryLimit
	}).(pulumi.IntPtrOutput)
}

// ExcludePaths is a list of selectors that designate paths in the repository
// that should NOT trigger the production of new Freight when changes are
// detected therein. When specified, changes in the identified paths will not
// trigger Freight production. When not specified, paths that should trigger
// Freight production will be defined solely by IncludePaths. Selectors may be
// defined using:
//  1. Exact paths to files or directories (ex. "charts/foo")
//  2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
//  3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
//     ex. "regexp:^.*\.yaml$")
//     Paths selected by IncludePaths may be unselected by ExcludePaths. This
//     is a useful method for including a broad set of paths and then excluding a
//     subset of them.
func (o WarehouseSpecSubscriptionsGitPatchPtrOutput) ExcludePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGitPatch) []string {
		if v == nil {
			return nil
		}
		return v.ExcludePaths
	}).(pulumi.StringArrayOutput)
}

// IgnoreTags is a list of tags that must be ignored when determining the
// newest commit of interest. No regular expressions or glob patterns are
// supported yet. The value in this field only has any effect when the
// CommitSelectionStrategy is Lexical, NewestTag, or SemVer. This field is
// optional.
func (o WarehouseSpecSubscriptionsGitPatchPtrOutput) IgnoreTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGitPatch) []string {
		if v == nil {
			return nil
		}
		return v.IgnoreTags
	}).(pulumi.StringArrayOutput)
}

// IncludePaths is a list of selectors that designate paths in the repository
// that should trigger the production of new Freight when changes are detected
// therein. When specified, only changes in the identified paths will trigger
// Freight production. When not specified, changes in any path will trigger
// Freight production. Selectors may be defined using:
//  1. Exact paths to files or directories (ex. "charts/foo")
//  2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
//  3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
//     ex. "regexp:^.*\.yaml$")
//
// Paths selected by IncludePaths may be unselected by ExcludePaths. This
// is a useful method for including a broad set of paths and then excluding a
// subset of them.
func (o WarehouseSpecSubscriptionsGitPatchPtrOutput) IncludePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGitPatch) []string {
		if v == nil {
			return nil
		}
		return v.IncludePaths
	}).(pulumi.StringArrayOutput)
}

// InsecureSkipTLSVerify specifies whether certificate verification errors
// should be ignored when connecting to the repository. This should be enabled
// only with great caution.
func (o WarehouseSpecSubscriptionsGitPatchPtrOutput) InsecureSkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGitPatch) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipTLSVerify
	}).(pulumi.BoolPtrOutput)
}

// URL is the repository's URL. This is a required field.
func (o WarehouseSpecSubscriptionsGitPatchPtrOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGitPatch) *string {
		if v == nil {
			return nil
		}
		return v.RepoURL
	}).(pulumi.StringPtrOutput)
}

// SemverConstraint specifies constraints on what new tagged commits are
// considered in determining the newest commit of interest. The value in this
// field only has any effect when the CommitSelectionStrategy is SemVer. This
// field is optional. When left unspecified, there will be no constraints,
// which means the latest semantically tagged commit will always be used. Care
// should be taken with leaving this field unspecified, as it can lead to the
// unanticipated rollout of breaking changes.
func (o WarehouseSpecSubscriptionsGitPatchPtrOutput) SemverConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGitPatch) *string {
		if v == nil {
			return nil
		}
		return v.SemverConstraint
	}).(pulumi.StringPtrOutput)
}

// StrictSemvers specifies whether only "strict" semver tags should be
// considered. A "strict" semver tag is one containing ALL of major, minor,
// and patch version components. This is enabled by default, but only has any
// effect when the CommitSelectionStrategy is SemVer. This should be disabled
// cautiously, as it creates the potential for any tag containing numeric
// characters only to be mistaken for a semver string containing the major
// version number only.
func (o WarehouseSpecSubscriptionsGitPatchPtrOutput) StrictSemvers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsGitPatch) *bool {
		if v == nil {
			return nil
		}
		return v.StrictSemvers
	}).(pulumi.BoolPtrOutput)
}

// Image describes a subscription to container image repository.
type WarehouseSpecSubscriptionsImage struct {
	// AllowTags is a regular expression that can optionally be used to limit the
	// image tags that are considered in determining the newest version of an
	// image. This field is optional.
	AllowTags *string `pulumi:"allowTags"`
	// DiscoveryLimit is an optional limit on the number of image references
	// that can be discovered for this subscription. The limit is applied after
	// filtering images based on the AllowTags and IgnoreTags fields.
	// When left unspecified, the field is implicitly treated as if its value
	// were "20". The upper limit for this field is 100.
	DiscoveryLimit *int `pulumi:"discoveryLimit"`
	// GitRepoURL optionally specifies the URL of a Git repository that contains
	// the source code for the image repository referenced by the RepoURL field.
	// When this is specified, Kargo MAY be able to infer and link to the exact
	// revision of that source code that was used to build the image.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// IgnoreTags is a list of tags that must be ignored when determining the
	// newest version of an image. No regular expressions or glob patterns are
	// supported yet. This field is optional.
	IgnoreTags []string `pulumi:"ignoreTags"`
	// ImageSelectionStrategy specifies the rules for how to identify the newest version
	// of the image specified by the RepoURL field. This field is optional. When
	// left unspecified, the field is implicitly treated as if its value were
	// "SemVer".
	//
	// Accepted values:
	//
	// - "Digest": Selects the image currently referenced by the tag specified
	// (unintuitively) by the SemverConstraint field.
	//
	// - "Lexical": Selects the image referenced by the lexicographically greatest
	// tag. Useful when tags embed a leading date or timestamp. The AllowTags
	// and IgnoreTags fields can optionally be used to narrow the set of tags
	// eligible for selection.
	//
	// - "NewestBuild": Selects the image that was most recently pushed to the
	// repository. The AllowTags and IgnoreTags fields can optionally be used
	// to narrow the set of tags eligible for selection. This is the least
	// efficient and is likely to cause rate limiting affecting this Warehouse
	// and possibly others. This strategy should be avoided.
	//
	// - "SemVer": Selects the image with the semantically greatest tag. The
	// AllowTags and IgnoreTags fields can optionally be used to narrow the set
	// of tags eligible for selection.
	ImageSelectionStrategy *string `pulumi:"imageSelectionStrategy"`
	// InsecureSkipTLSVerify specifies whether certificate verification errors
	// should be ignored when connecting to the repository. This should be enabled
	// only with great caution.
	InsecureSkipTLSVerify *bool `pulumi:"insecureSkipTLSVerify"`
	// Platform is a string of the form <os>/<arch> that limits the tags that can
	// be considered when searching for new versions of an image. This field is
	// optional. When left unspecified, it is implicitly equivalent to the
	// OS/architecture of the Kargo controller. Care should be taken to set this
	// value correctly in cases where the image referenced by this
	// ImageRepositorySubscription will run on a Kubernetes node with a different
	// OS/architecture than the Kargo controller. At present this is uncommon, but
	// not unheard of.
	Platform *string `pulumi:"platform"`
	// RepoURL specifies the URL of the image repository to subscribe to. The
	// value in this field MUST NOT include an image tag. This field is required.
	RepoURL *string `pulumi:"repoURL"`
	// SemverConstraint specifies constraints on what new image versions are
	// permissible. The value in this field only has any effect when the
	// ImageSelectionStrategy is SemVer or left unspecified (which is implicitly
	// the same as SemVer). This field is also optional. When left unspecified,
	// (and the ImageSelectionStrategy is SemVer or unspecified), there will be no
	// constraints, which means the latest semantically tagged version of an image
	// will always be used. Care should be taken with leaving this field
	// unspecified, as it can lead to the unanticipated rollout of breaking
	// changes.
	// More info: https://github.com/masterminds/semver#checking-version-constraints
	SemverConstraint *string `pulumi:"semverConstraint"`
	// StrictSemvers specifies whether only "strict" semver tags should be
	// considered. A "strict" semver tag is one containing ALL of major, minor,
	// and patch version components. This is enabled by default, but only has any
	// effect when the ImageSelectionStrategy is SemVer. This should be disabled
	// cautiously, as it is not uncommon to tag container images with short Git
	// commit hashes, which have the potential to contain numeric characters only
	// and could be mistaken for a semver string containing the major version
	// number only.
	StrictSemvers *bool `pulumi:"strictSemvers"`
}

// WarehouseSpecSubscriptionsImageInput is an input type that accepts WarehouseSpecSubscriptionsImageArgs and WarehouseSpecSubscriptionsImageOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsImageInput` via:
//
//	WarehouseSpecSubscriptionsImageArgs{...}
type WarehouseSpecSubscriptionsImageInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsImageOutput() WarehouseSpecSubscriptionsImageOutput
	ToWarehouseSpecSubscriptionsImageOutputWithContext(context.Context) WarehouseSpecSubscriptionsImageOutput
}

// Image describes a subscription to container image repository.
type WarehouseSpecSubscriptionsImageArgs struct {
	// AllowTags is a regular expression that can optionally be used to limit the
	// image tags that are considered in determining the newest version of an
	// image. This field is optional.
	AllowTags pulumi.StringPtrInput `pulumi:"allowTags"`
	// DiscoveryLimit is an optional limit on the number of image references
	// that can be discovered for this subscription. The limit is applied after
	// filtering images based on the AllowTags and IgnoreTags fields.
	// When left unspecified, the field is implicitly treated as if its value
	// were "20". The upper limit for this field is 100.
	DiscoveryLimit pulumi.IntPtrInput `pulumi:"discoveryLimit"`
	// GitRepoURL optionally specifies the URL of a Git repository that contains
	// the source code for the image repository referenced by the RepoURL field.
	// When this is specified, Kargo MAY be able to infer and link to the exact
	// revision of that source code that was used to build the image.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// IgnoreTags is a list of tags that must be ignored when determining the
	// newest version of an image. No regular expressions or glob patterns are
	// supported yet. This field is optional.
	IgnoreTags pulumi.StringArrayInput `pulumi:"ignoreTags"`
	// ImageSelectionStrategy specifies the rules for how to identify the newest version
	// of the image specified by the RepoURL field. This field is optional. When
	// left unspecified, the field is implicitly treated as if its value were
	// "SemVer".
	//
	// Accepted values:
	//
	// - "Digest": Selects the image currently referenced by the tag specified
	// (unintuitively) by the SemverConstraint field.
	//
	// - "Lexical": Selects the image referenced by the lexicographically greatest
	// tag. Useful when tags embed a leading date or timestamp. The AllowTags
	// and IgnoreTags fields can optionally be used to narrow the set of tags
	// eligible for selection.
	//
	// - "NewestBuild": Selects the image that was most recently pushed to the
	// repository. The AllowTags and IgnoreTags fields can optionally be used
	// to narrow the set of tags eligible for selection. This is the least
	// efficient and is likely to cause rate limiting affecting this Warehouse
	// and possibly others. This strategy should be avoided.
	//
	// - "SemVer": Selects the image with the semantically greatest tag. The
	// AllowTags and IgnoreTags fields can optionally be used to narrow the set
	// of tags eligible for selection.
	ImageSelectionStrategy pulumi.StringPtrInput `pulumi:"imageSelectionStrategy"`
	// InsecureSkipTLSVerify specifies whether certificate verification errors
	// should be ignored when connecting to the repository. This should be enabled
	// only with great caution.
	InsecureSkipTLSVerify pulumi.BoolPtrInput `pulumi:"insecureSkipTLSVerify"`
	// Platform is a string of the form <os>/<arch> that limits the tags that can
	// be considered when searching for new versions of an image. This field is
	// optional. When left unspecified, it is implicitly equivalent to the
	// OS/architecture of the Kargo controller. Care should be taken to set this
	// value correctly in cases where the image referenced by this
	// ImageRepositorySubscription will run on a Kubernetes node with a different
	// OS/architecture than the Kargo controller. At present this is uncommon, but
	// not unheard of.
	Platform pulumi.StringPtrInput `pulumi:"platform"`
	// RepoURL specifies the URL of the image repository to subscribe to. The
	// value in this field MUST NOT include an image tag. This field is required.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// SemverConstraint specifies constraints on what new image versions are
	// permissible. The value in this field only has any effect when the
	// ImageSelectionStrategy is SemVer or left unspecified (which is implicitly
	// the same as SemVer). This field is also optional. When left unspecified,
	// (and the ImageSelectionStrategy is SemVer or unspecified), there will be no
	// constraints, which means the latest semantically tagged version of an image
	// will always be used. Care should be taken with leaving this field
	// unspecified, as it can lead to the unanticipated rollout of breaking
	// changes.
	// More info: https://github.com/masterminds/semver#checking-version-constraints
	SemverConstraint pulumi.StringPtrInput `pulumi:"semverConstraint"`
	// StrictSemvers specifies whether only "strict" semver tags should be
	// considered. A "strict" semver tag is one containing ALL of major, minor,
	// and patch version components. This is enabled by default, but only has any
	// effect when the ImageSelectionStrategy is SemVer. This should be disabled
	// cautiously, as it is not uncommon to tag container images with short Git
	// commit hashes, which have the potential to contain numeric characters only
	// and could be mistaken for a semver string containing the major version
	// number only.
	StrictSemvers pulumi.BoolPtrInput `pulumi:"strictSemvers"`
}

func (WarehouseSpecSubscriptionsImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptionsImage)(nil)).Elem()
}

func (i WarehouseSpecSubscriptionsImageArgs) ToWarehouseSpecSubscriptionsImageOutput() WarehouseSpecSubscriptionsImageOutput {
	return i.ToWarehouseSpecSubscriptionsImageOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsImageArgs) ToWarehouseSpecSubscriptionsImageOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsImageOutput)
}

func (i WarehouseSpecSubscriptionsImageArgs) ToWarehouseSpecSubscriptionsImagePtrOutput() WarehouseSpecSubscriptionsImagePtrOutput {
	return i.ToWarehouseSpecSubscriptionsImagePtrOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsImageArgs) ToWarehouseSpecSubscriptionsImagePtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsImageOutput).ToWarehouseSpecSubscriptionsImagePtrOutputWithContext(ctx)
}

// WarehouseSpecSubscriptionsImagePtrInput is an input type that accepts WarehouseSpecSubscriptionsImageArgs, WarehouseSpecSubscriptionsImagePtr and WarehouseSpecSubscriptionsImagePtrOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsImagePtrInput` via:
//
//	        WarehouseSpecSubscriptionsImageArgs{...}
//
//	or:
//
//	        nil
type WarehouseSpecSubscriptionsImagePtrInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsImagePtrOutput() WarehouseSpecSubscriptionsImagePtrOutput
	ToWarehouseSpecSubscriptionsImagePtrOutputWithContext(context.Context) WarehouseSpecSubscriptionsImagePtrOutput
}

type warehouseSpecSubscriptionsImagePtrType WarehouseSpecSubscriptionsImageArgs

func WarehouseSpecSubscriptionsImagePtr(v *WarehouseSpecSubscriptionsImageArgs) WarehouseSpecSubscriptionsImagePtrInput {
	return (*warehouseSpecSubscriptionsImagePtrType)(v)
}

func (*warehouseSpecSubscriptionsImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpecSubscriptionsImage)(nil)).Elem()
}

func (i *warehouseSpecSubscriptionsImagePtrType) ToWarehouseSpecSubscriptionsImagePtrOutput() WarehouseSpecSubscriptionsImagePtrOutput {
	return i.ToWarehouseSpecSubscriptionsImagePtrOutputWithContext(context.Background())
}

func (i *warehouseSpecSubscriptionsImagePtrType) ToWarehouseSpecSubscriptionsImagePtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsImagePtrOutput)
}

// Image describes a subscription to container image repository.
type WarehouseSpecSubscriptionsImageOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptionsImage)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsImageOutput) ToWarehouseSpecSubscriptionsImageOutput() WarehouseSpecSubscriptionsImageOutput {
	return o
}

func (o WarehouseSpecSubscriptionsImageOutput) ToWarehouseSpecSubscriptionsImageOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsImageOutput {
	return o
}

func (o WarehouseSpecSubscriptionsImageOutput) ToWarehouseSpecSubscriptionsImagePtrOutput() WarehouseSpecSubscriptionsImagePtrOutput {
	return o.ToWarehouseSpecSubscriptionsImagePtrOutputWithContext(context.Background())
}

func (o WarehouseSpecSubscriptionsImageOutput) ToWarehouseSpecSubscriptionsImagePtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WarehouseSpecSubscriptionsImage) *WarehouseSpecSubscriptionsImage {
		return &v
	}).(WarehouseSpecSubscriptionsImagePtrOutput)
}

// AllowTags is a regular expression that can optionally be used to limit the
// image tags that are considered in determining the newest version of an
// image. This field is optional.
func (o WarehouseSpecSubscriptionsImageOutput) AllowTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImage) *string { return v.AllowTags }).(pulumi.StringPtrOutput)
}

// DiscoveryLimit is an optional limit on the number of image references
// that can be discovered for this subscription. The limit is applied after
// filtering images based on the AllowTags and IgnoreTags fields.
// When left unspecified, the field is implicitly treated as if its value
// were "20". The upper limit for this field is 100.
func (o WarehouseSpecSubscriptionsImageOutput) DiscoveryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImage) *int { return v.DiscoveryLimit }).(pulumi.IntPtrOutput)
}

// GitRepoURL optionally specifies the URL of a Git repository that contains
// the source code for the image repository referenced by the RepoURL field.
// When this is specified, Kargo MAY be able to infer and link to the exact
// revision of that source code that was used to build the image.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o WarehouseSpecSubscriptionsImageOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImage) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// IgnoreTags is a list of tags that must be ignored when determining the
// newest version of an image. No regular expressions or glob patterns are
// supported yet. This field is optional.
func (o WarehouseSpecSubscriptionsImageOutput) IgnoreTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImage) []string { return v.IgnoreTags }).(pulumi.StringArrayOutput)
}

// ImageSelectionStrategy specifies the rules for how to identify the newest version
// of the image specified by the RepoURL field. This field is optional. When
// left unspecified, the field is implicitly treated as if its value were
// "SemVer".
//
// Accepted values:
//
// - "Digest": Selects the image currently referenced by the tag specified
// (unintuitively) by the SemverConstraint field.
//
// - "Lexical": Selects the image referenced by the lexicographically greatest
// tag. Useful when tags embed a leading date or timestamp. The AllowTags
// and IgnoreTags fields can optionally be used to narrow the set of tags
// eligible for selection.
//
// - "NewestBuild": Selects the image that was most recently pushed to the
// repository. The AllowTags and IgnoreTags fields can optionally be used
// to narrow the set of tags eligible for selection. This is the least
// efficient and is likely to cause rate limiting affecting this Warehouse
// and possibly others. This strategy should be avoided.
//
// - "SemVer": Selects the image with the semantically greatest tag. The
// AllowTags and IgnoreTags fields can optionally be used to narrow the set
// of tags eligible for selection.
func (o WarehouseSpecSubscriptionsImageOutput) ImageSelectionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImage) *string { return v.ImageSelectionStrategy }).(pulumi.StringPtrOutput)
}

// InsecureSkipTLSVerify specifies whether certificate verification errors
// should be ignored when connecting to the repository. This should be enabled
// only with great caution.
func (o WarehouseSpecSubscriptionsImageOutput) InsecureSkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImage) *bool { return v.InsecureSkipTLSVerify }).(pulumi.BoolPtrOutput)
}

// Platform is a string of the form <os>/<arch> that limits the tags that can
// be considered when searching for new versions of an image. This field is
// optional. When left unspecified, it is implicitly equivalent to the
// OS/architecture of the Kargo controller. Care should be taken to set this
// value correctly in cases where the image referenced by this
// ImageRepositorySubscription will run on a Kubernetes node with a different
// OS/architecture than the Kargo controller. At present this is uncommon, but
// not unheard of.
func (o WarehouseSpecSubscriptionsImageOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImage) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of the image repository to subscribe to. The
// value in this field MUST NOT include an image tag. This field is required.
func (o WarehouseSpecSubscriptionsImageOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImage) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// SemverConstraint specifies constraints on what new image versions are
// permissible. The value in this field only has any effect when the
// ImageSelectionStrategy is SemVer or left unspecified (which is implicitly
// the same as SemVer). This field is also optional. When left unspecified,
// (and the ImageSelectionStrategy is SemVer or unspecified), there will be no
// constraints, which means the latest semantically tagged version of an image
// will always be used. Care should be taken with leaving this field
// unspecified, as it can lead to the unanticipated rollout of breaking
// changes.
// More info: https://github.com/masterminds/semver#checking-version-constraints
func (o WarehouseSpecSubscriptionsImageOutput) SemverConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImage) *string { return v.SemverConstraint }).(pulumi.StringPtrOutput)
}

// StrictSemvers specifies whether only "strict" semver tags should be
// considered. A "strict" semver tag is one containing ALL of major, minor,
// and patch version components. This is enabled by default, but only has any
// effect when the ImageSelectionStrategy is SemVer. This should be disabled
// cautiously, as it is not uncommon to tag container images with short Git
// commit hashes, which have the potential to contain numeric characters only
// and could be mistaken for a semver string containing the major version
// number only.
func (o WarehouseSpecSubscriptionsImageOutput) StrictSemvers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImage) *bool { return v.StrictSemvers }).(pulumi.BoolPtrOutput)
}

type WarehouseSpecSubscriptionsImagePtrOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpecSubscriptionsImage)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsImagePtrOutput) ToWarehouseSpecSubscriptionsImagePtrOutput() WarehouseSpecSubscriptionsImagePtrOutput {
	return o
}

func (o WarehouseSpecSubscriptionsImagePtrOutput) ToWarehouseSpecSubscriptionsImagePtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsImagePtrOutput {
	return o
}

func (o WarehouseSpecSubscriptionsImagePtrOutput) Elem() WarehouseSpecSubscriptionsImageOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImage) WarehouseSpecSubscriptionsImage {
		if v != nil {
			return *v
		}
		var ret WarehouseSpecSubscriptionsImage
		return ret
	}).(WarehouseSpecSubscriptionsImageOutput)
}

// AllowTags is a regular expression that can optionally be used to limit the
// image tags that are considered in determining the newest version of an
// image. This field is optional.
func (o WarehouseSpecSubscriptionsImagePtrOutput) AllowTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImage) *string {
		if v == nil {
			return nil
		}
		return v.AllowTags
	}).(pulumi.StringPtrOutput)
}

// DiscoveryLimit is an optional limit on the number of image references
// that can be discovered for this subscription. The limit is applied after
// filtering images based on the AllowTags and IgnoreTags fields.
// When left unspecified, the field is implicitly treated as if its value
// were "20". The upper limit for this field is 100.
func (o WarehouseSpecSubscriptionsImagePtrOutput) DiscoveryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImage) *int {
		if v == nil {
			return nil
		}
		return v.DiscoveryLimit
	}).(pulumi.IntPtrOutput)
}

// GitRepoURL optionally specifies the URL of a Git repository that contains
// the source code for the image repository referenced by the RepoURL field.
// When this is specified, Kargo MAY be able to infer and link to the exact
// revision of that source code that was used to build the image.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o WarehouseSpecSubscriptionsImagePtrOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImage) *string {
		if v == nil {
			return nil
		}
		return v.GitRepoURL
	}).(pulumi.StringPtrOutput)
}

// IgnoreTags is a list of tags that must be ignored when determining the
// newest version of an image. No regular expressions or glob patterns are
// supported yet. This field is optional.
func (o WarehouseSpecSubscriptionsImagePtrOutput) IgnoreTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImage) []string {
		if v == nil {
			return nil
		}
		return v.IgnoreTags
	}).(pulumi.StringArrayOutput)
}

// ImageSelectionStrategy specifies the rules for how to identify the newest version
// of the image specified by the RepoURL field. This field is optional. When
// left unspecified, the field is implicitly treated as if its value were
// "SemVer".
//
// Accepted values:
//
// - "Digest": Selects the image currently referenced by the tag specified
// (unintuitively) by the SemverConstraint field.
//
// - "Lexical": Selects the image referenced by the lexicographically greatest
// tag. Useful when tags embed a leading date or timestamp. The AllowTags
// and IgnoreTags fields can optionally be used to narrow the set of tags
// eligible for selection.
//
// - "NewestBuild": Selects the image that was most recently pushed to the
// repository. The AllowTags and IgnoreTags fields can optionally be used
// to narrow the set of tags eligible for selection. This is the least
// efficient and is likely to cause rate limiting affecting this Warehouse
// and possibly others. This strategy should be avoided.
//
// - "SemVer": Selects the image with the semantically greatest tag. The
// AllowTags and IgnoreTags fields can optionally be used to narrow the set
// of tags eligible for selection.
func (o WarehouseSpecSubscriptionsImagePtrOutput) ImageSelectionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImage) *string {
		if v == nil {
			return nil
		}
		return v.ImageSelectionStrategy
	}).(pulumi.StringPtrOutput)
}

// InsecureSkipTLSVerify specifies whether certificate verification errors
// should be ignored when connecting to the repository. This should be enabled
// only with great caution.
func (o WarehouseSpecSubscriptionsImagePtrOutput) InsecureSkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImage) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipTLSVerify
	}).(pulumi.BoolPtrOutput)
}

// Platform is a string of the form <os>/<arch> that limits the tags that can
// be considered when searching for new versions of an image. This field is
// optional. When left unspecified, it is implicitly equivalent to the
// OS/architecture of the Kargo controller. Care should be taken to set this
// value correctly in cases where the image referenced by this
// ImageRepositorySubscription will run on a Kubernetes node with a different
// OS/architecture than the Kargo controller. At present this is uncommon, but
// not unheard of.
func (o WarehouseSpecSubscriptionsImagePtrOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImage) *string {
		if v == nil {
			return nil
		}
		return v.Platform
	}).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of the image repository to subscribe to. The
// value in this field MUST NOT include an image tag. This field is required.
func (o WarehouseSpecSubscriptionsImagePtrOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImage) *string {
		if v == nil {
			return nil
		}
		return v.RepoURL
	}).(pulumi.StringPtrOutput)
}

// SemverConstraint specifies constraints on what new image versions are
// permissible. The value in this field only has any effect when the
// ImageSelectionStrategy is SemVer or left unspecified (which is implicitly
// the same as SemVer). This field is also optional. When left unspecified,
// (and the ImageSelectionStrategy is SemVer or unspecified), there will be no
// constraints, which means the latest semantically tagged version of an image
// will always be used. Care should be taken with leaving this field
// unspecified, as it can lead to the unanticipated rollout of breaking
// changes.
// More info: https://github.com/masterminds/semver#checking-version-constraints
func (o WarehouseSpecSubscriptionsImagePtrOutput) SemverConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImage) *string {
		if v == nil {
			return nil
		}
		return v.SemverConstraint
	}).(pulumi.StringPtrOutput)
}

// StrictSemvers specifies whether only "strict" semver tags should be
// considered. A "strict" semver tag is one containing ALL of major, minor,
// and patch version components. This is enabled by default, but only has any
// effect when the ImageSelectionStrategy is SemVer. This should be disabled
// cautiously, as it is not uncommon to tag container images with short Git
// commit hashes, which have the potential to contain numeric characters only
// and could be mistaken for a semver string containing the major version
// number only.
func (o WarehouseSpecSubscriptionsImagePtrOutput) StrictSemvers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImage) *bool {
		if v == nil {
			return nil
		}
		return v.StrictSemvers
	}).(pulumi.BoolPtrOutput)
}

// Image describes a subscription to container image repository.
type WarehouseSpecSubscriptionsImagePatch struct {
	// AllowTags is a regular expression that can optionally be used to limit the
	// image tags that are considered in determining the newest version of an
	// image. This field is optional.
	AllowTags *string `pulumi:"allowTags"`
	// DiscoveryLimit is an optional limit on the number of image references
	// that can be discovered for this subscription. The limit is applied after
	// filtering images based on the AllowTags and IgnoreTags fields.
	// When left unspecified, the field is implicitly treated as if its value
	// were "20". The upper limit for this field is 100.
	DiscoveryLimit *int `pulumi:"discoveryLimit"`
	// GitRepoURL optionally specifies the URL of a Git repository that contains
	// the source code for the image repository referenced by the RepoURL field.
	// When this is specified, Kargo MAY be able to infer and link to the exact
	// revision of that source code that was used to build the image.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// IgnoreTags is a list of tags that must be ignored when determining the
	// newest version of an image. No regular expressions or glob patterns are
	// supported yet. This field is optional.
	IgnoreTags []string `pulumi:"ignoreTags"`
	// ImageSelectionStrategy specifies the rules for how to identify the newest version
	// of the image specified by the RepoURL field. This field is optional. When
	// left unspecified, the field is implicitly treated as if its value were
	// "SemVer".
	//
	// Accepted values:
	//
	// - "Digest": Selects the image currently referenced by the tag specified
	// (unintuitively) by the SemverConstraint field.
	//
	// - "Lexical": Selects the image referenced by the lexicographically greatest
	// tag. Useful when tags embed a leading date or timestamp. The AllowTags
	// and IgnoreTags fields can optionally be used to narrow the set of tags
	// eligible for selection.
	//
	// - "NewestBuild": Selects the image that was most recently pushed to the
	// repository. The AllowTags and IgnoreTags fields can optionally be used
	// to narrow the set of tags eligible for selection. This is the least
	// efficient and is likely to cause rate limiting affecting this Warehouse
	// and possibly others. This strategy should be avoided.
	//
	// - "SemVer": Selects the image with the semantically greatest tag. The
	// AllowTags and IgnoreTags fields can optionally be used to narrow the set
	// of tags eligible for selection.
	ImageSelectionStrategy *string `pulumi:"imageSelectionStrategy"`
	// InsecureSkipTLSVerify specifies whether certificate verification errors
	// should be ignored when connecting to the repository. This should be enabled
	// only with great caution.
	InsecureSkipTLSVerify *bool `pulumi:"insecureSkipTLSVerify"`
	// Platform is a string of the form <os>/<arch> that limits the tags that can
	// be considered when searching for new versions of an image. This field is
	// optional. When left unspecified, it is implicitly equivalent to the
	// OS/architecture of the Kargo controller. Care should be taken to set this
	// value correctly in cases where the image referenced by this
	// ImageRepositorySubscription will run on a Kubernetes node with a different
	// OS/architecture than the Kargo controller. At present this is uncommon, but
	// not unheard of.
	Platform *string `pulumi:"platform"`
	// RepoURL specifies the URL of the image repository to subscribe to. The
	// value in this field MUST NOT include an image tag. This field is required.
	RepoURL *string `pulumi:"repoURL"`
	// SemverConstraint specifies constraints on what new image versions are
	// permissible. The value in this field only has any effect when the
	// ImageSelectionStrategy is SemVer or left unspecified (which is implicitly
	// the same as SemVer). This field is also optional. When left unspecified,
	// (and the ImageSelectionStrategy is SemVer or unspecified), there will be no
	// constraints, which means the latest semantically tagged version of an image
	// will always be used. Care should be taken with leaving this field
	// unspecified, as it can lead to the unanticipated rollout of breaking
	// changes.
	// More info: https://github.com/masterminds/semver#checking-version-constraints
	SemverConstraint *string `pulumi:"semverConstraint"`
	// StrictSemvers specifies whether only "strict" semver tags should be
	// considered. A "strict" semver tag is one containing ALL of major, minor,
	// and patch version components. This is enabled by default, but only has any
	// effect when the ImageSelectionStrategy is SemVer. This should be disabled
	// cautiously, as it is not uncommon to tag container images with short Git
	// commit hashes, which have the potential to contain numeric characters only
	// and could be mistaken for a semver string containing the major version
	// number only.
	StrictSemvers *bool `pulumi:"strictSemvers"`
}

// WarehouseSpecSubscriptionsImagePatchInput is an input type that accepts WarehouseSpecSubscriptionsImagePatchArgs and WarehouseSpecSubscriptionsImagePatchOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsImagePatchInput` via:
//
//	WarehouseSpecSubscriptionsImagePatchArgs{...}
type WarehouseSpecSubscriptionsImagePatchInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsImagePatchOutput() WarehouseSpecSubscriptionsImagePatchOutput
	ToWarehouseSpecSubscriptionsImagePatchOutputWithContext(context.Context) WarehouseSpecSubscriptionsImagePatchOutput
}

// Image describes a subscription to container image repository.
type WarehouseSpecSubscriptionsImagePatchArgs struct {
	// AllowTags is a regular expression that can optionally be used to limit the
	// image tags that are considered in determining the newest version of an
	// image. This field is optional.
	AllowTags pulumi.StringPtrInput `pulumi:"allowTags"`
	// DiscoveryLimit is an optional limit on the number of image references
	// that can be discovered for this subscription. The limit is applied after
	// filtering images based on the AllowTags and IgnoreTags fields.
	// When left unspecified, the field is implicitly treated as if its value
	// were "20". The upper limit for this field is 100.
	DiscoveryLimit pulumi.IntPtrInput `pulumi:"discoveryLimit"`
	// GitRepoURL optionally specifies the URL of a Git repository that contains
	// the source code for the image repository referenced by the RepoURL field.
	// When this is specified, Kargo MAY be able to infer and link to the exact
	// revision of that source code that was used to build the image.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// IgnoreTags is a list of tags that must be ignored when determining the
	// newest version of an image. No regular expressions or glob patterns are
	// supported yet. This field is optional.
	IgnoreTags pulumi.StringArrayInput `pulumi:"ignoreTags"`
	// ImageSelectionStrategy specifies the rules for how to identify the newest version
	// of the image specified by the RepoURL field. This field is optional. When
	// left unspecified, the field is implicitly treated as if its value were
	// "SemVer".
	//
	// Accepted values:
	//
	// - "Digest": Selects the image currently referenced by the tag specified
	// (unintuitively) by the SemverConstraint field.
	//
	// - "Lexical": Selects the image referenced by the lexicographically greatest
	// tag. Useful when tags embed a leading date or timestamp. The AllowTags
	// and IgnoreTags fields can optionally be used to narrow the set of tags
	// eligible for selection.
	//
	// - "NewestBuild": Selects the image that was most recently pushed to the
	// repository. The AllowTags and IgnoreTags fields can optionally be used
	// to narrow the set of tags eligible for selection. This is the least
	// efficient and is likely to cause rate limiting affecting this Warehouse
	// and possibly others. This strategy should be avoided.
	//
	// - "SemVer": Selects the image with the semantically greatest tag. The
	// AllowTags and IgnoreTags fields can optionally be used to narrow the set
	// of tags eligible for selection.
	ImageSelectionStrategy pulumi.StringPtrInput `pulumi:"imageSelectionStrategy"`
	// InsecureSkipTLSVerify specifies whether certificate verification errors
	// should be ignored when connecting to the repository. This should be enabled
	// only with great caution.
	InsecureSkipTLSVerify pulumi.BoolPtrInput `pulumi:"insecureSkipTLSVerify"`
	// Platform is a string of the form <os>/<arch> that limits the tags that can
	// be considered when searching for new versions of an image. This field is
	// optional. When left unspecified, it is implicitly equivalent to the
	// OS/architecture of the Kargo controller. Care should be taken to set this
	// value correctly in cases where the image referenced by this
	// ImageRepositorySubscription will run on a Kubernetes node with a different
	// OS/architecture than the Kargo controller. At present this is uncommon, but
	// not unheard of.
	Platform pulumi.StringPtrInput `pulumi:"platform"`
	// RepoURL specifies the URL of the image repository to subscribe to. The
	// value in this field MUST NOT include an image tag. This field is required.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// SemverConstraint specifies constraints on what new image versions are
	// permissible. The value in this field only has any effect when the
	// ImageSelectionStrategy is SemVer or left unspecified (which is implicitly
	// the same as SemVer). This field is also optional. When left unspecified,
	// (and the ImageSelectionStrategy is SemVer or unspecified), there will be no
	// constraints, which means the latest semantically tagged version of an image
	// will always be used. Care should be taken with leaving this field
	// unspecified, as it can lead to the unanticipated rollout of breaking
	// changes.
	// More info: https://github.com/masterminds/semver#checking-version-constraints
	SemverConstraint pulumi.StringPtrInput `pulumi:"semverConstraint"`
	// StrictSemvers specifies whether only "strict" semver tags should be
	// considered. A "strict" semver tag is one containing ALL of major, minor,
	// and patch version components. This is enabled by default, but only has any
	// effect when the ImageSelectionStrategy is SemVer. This should be disabled
	// cautiously, as it is not uncommon to tag container images with short Git
	// commit hashes, which have the potential to contain numeric characters only
	// and could be mistaken for a semver string containing the major version
	// number only.
	StrictSemvers pulumi.BoolPtrInput `pulumi:"strictSemvers"`
}

func (WarehouseSpecSubscriptionsImagePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptionsImagePatch)(nil)).Elem()
}

func (i WarehouseSpecSubscriptionsImagePatchArgs) ToWarehouseSpecSubscriptionsImagePatchOutput() WarehouseSpecSubscriptionsImagePatchOutput {
	return i.ToWarehouseSpecSubscriptionsImagePatchOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsImagePatchArgs) ToWarehouseSpecSubscriptionsImagePatchOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsImagePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsImagePatchOutput)
}

func (i WarehouseSpecSubscriptionsImagePatchArgs) ToWarehouseSpecSubscriptionsImagePatchPtrOutput() WarehouseSpecSubscriptionsImagePatchPtrOutput {
	return i.ToWarehouseSpecSubscriptionsImagePatchPtrOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsImagePatchArgs) ToWarehouseSpecSubscriptionsImagePatchPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsImagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsImagePatchOutput).ToWarehouseSpecSubscriptionsImagePatchPtrOutputWithContext(ctx)
}

// WarehouseSpecSubscriptionsImagePatchPtrInput is an input type that accepts WarehouseSpecSubscriptionsImagePatchArgs, WarehouseSpecSubscriptionsImagePatchPtr and WarehouseSpecSubscriptionsImagePatchPtrOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsImagePatchPtrInput` via:
//
//	        WarehouseSpecSubscriptionsImagePatchArgs{...}
//
//	or:
//
//	        nil
type WarehouseSpecSubscriptionsImagePatchPtrInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsImagePatchPtrOutput() WarehouseSpecSubscriptionsImagePatchPtrOutput
	ToWarehouseSpecSubscriptionsImagePatchPtrOutputWithContext(context.Context) WarehouseSpecSubscriptionsImagePatchPtrOutput
}

type warehouseSpecSubscriptionsImagePatchPtrType WarehouseSpecSubscriptionsImagePatchArgs

func WarehouseSpecSubscriptionsImagePatchPtr(v *WarehouseSpecSubscriptionsImagePatchArgs) WarehouseSpecSubscriptionsImagePatchPtrInput {
	return (*warehouseSpecSubscriptionsImagePatchPtrType)(v)
}

func (*warehouseSpecSubscriptionsImagePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpecSubscriptionsImagePatch)(nil)).Elem()
}

func (i *warehouseSpecSubscriptionsImagePatchPtrType) ToWarehouseSpecSubscriptionsImagePatchPtrOutput() WarehouseSpecSubscriptionsImagePatchPtrOutput {
	return i.ToWarehouseSpecSubscriptionsImagePatchPtrOutputWithContext(context.Background())
}

func (i *warehouseSpecSubscriptionsImagePatchPtrType) ToWarehouseSpecSubscriptionsImagePatchPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsImagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsImagePatchPtrOutput)
}

// Image describes a subscription to container image repository.
type WarehouseSpecSubscriptionsImagePatchOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsImagePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptionsImagePatch)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsImagePatchOutput) ToWarehouseSpecSubscriptionsImagePatchOutput() WarehouseSpecSubscriptionsImagePatchOutput {
	return o
}

func (o WarehouseSpecSubscriptionsImagePatchOutput) ToWarehouseSpecSubscriptionsImagePatchOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsImagePatchOutput {
	return o
}

func (o WarehouseSpecSubscriptionsImagePatchOutput) ToWarehouseSpecSubscriptionsImagePatchPtrOutput() WarehouseSpecSubscriptionsImagePatchPtrOutput {
	return o.ToWarehouseSpecSubscriptionsImagePatchPtrOutputWithContext(context.Background())
}

func (o WarehouseSpecSubscriptionsImagePatchOutput) ToWarehouseSpecSubscriptionsImagePatchPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsImagePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WarehouseSpecSubscriptionsImagePatch) *WarehouseSpecSubscriptionsImagePatch {
		return &v
	}).(WarehouseSpecSubscriptionsImagePatchPtrOutput)
}

// AllowTags is a regular expression that can optionally be used to limit the
// image tags that are considered in determining the newest version of an
// image. This field is optional.
func (o WarehouseSpecSubscriptionsImagePatchOutput) AllowTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImagePatch) *string { return v.AllowTags }).(pulumi.StringPtrOutput)
}

// DiscoveryLimit is an optional limit on the number of image references
// that can be discovered for this subscription. The limit is applied after
// filtering images based on the AllowTags and IgnoreTags fields.
// When left unspecified, the field is implicitly treated as if its value
// were "20". The upper limit for this field is 100.
func (o WarehouseSpecSubscriptionsImagePatchOutput) DiscoveryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImagePatch) *int { return v.DiscoveryLimit }).(pulumi.IntPtrOutput)
}

// GitRepoURL optionally specifies the URL of a Git repository that contains
// the source code for the image repository referenced by the RepoURL field.
// When this is specified, Kargo MAY be able to infer and link to the exact
// revision of that source code that was used to build the image.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o WarehouseSpecSubscriptionsImagePatchOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImagePatch) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// IgnoreTags is a list of tags that must be ignored when determining the
// newest version of an image. No regular expressions or glob patterns are
// supported yet. This field is optional.
func (o WarehouseSpecSubscriptionsImagePatchOutput) IgnoreTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImagePatch) []string { return v.IgnoreTags }).(pulumi.StringArrayOutput)
}

// ImageSelectionStrategy specifies the rules for how to identify the newest version
// of the image specified by the RepoURL field. This field is optional. When
// left unspecified, the field is implicitly treated as if its value were
// "SemVer".
//
// Accepted values:
//
// - "Digest": Selects the image currently referenced by the tag specified
// (unintuitively) by the SemverConstraint field.
//
// - "Lexical": Selects the image referenced by the lexicographically greatest
// tag. Useful when tags embed a leading date or timestamp. The AllowTags
// and IgnoreTags fields can optionally be used to narrow the set of tags
// eligible for selection.
//
// - "NewestBuild": Selects the image that was most recently pushed to the
// repository. The AllowTags and IgnoreTags fields can optionally be used
// to narrow the set of tags eligible for selection. This is the least
// efficient and is likely to cause rate limiting affecting this Warehouse
// and possibly others. This strategy should be avoided.
//
// - "SemVer": Selects the image with the semantically greatest tag. The
// AllowTags and IgnoreTags fields can optionally be used to narrow the set
// of tags eligible for selection.
func (o WarehouseSpecSubscriptionsImagePatchOutput) ImageSelectionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImagePatch) *string { return v.ImageSelectionStrategy }).(pulumi.StringPtrOutput)
}

// InsecureSkipTLSVerify specifies whether certificate verification errors
// should be ignored when connecting to the repository. This should be enabled
// only with great caution.
func (o WarehouseSpecSubscriptionsImagePatchOutput) InsecureSkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImagePatch) *bool { return v.InsecureSkipTLSVerify }).(pulumi.BoolPtrOutput)
}

// Platform is a string of the form <os>/<arch> that limits the tags that can
// be considered when searching for new versions of an image. This field is
// optional. When left unspecified, it is implicitly equivalent to the
// OS/architecture of the Kargo controller. Care should be taken to set this
// value correctly in cases where the image referenced by this
// ImageRepositorySubscription will run on a Kubernetes node with a different
// OS/architecture than the Kargo controller. At present this is uncommon, but
// not unheard of.
func (o WarehouseSpecSubscriptionsImagePatchOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImagePatch) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of the image repository to subscribe to. The
// value in this field MUST NOT include an image tag. This field is required.
func (o WarehouseSpecSubscriptionsImagePatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImagePatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// SemverConstraint specifies constraints on what new image versions are
// permissible. The value in this field only has any effect when the
// ImageSelectionStrategy is SemVer or left unspecified (which is implicitly
// the same as SemVer). This field is also optional. When left unspecified,
// (and the ImageSelectionStrategy is SemVer or unspecified), there will be no
// constraints, which means the latest semantically tagged version of an image
// will always be used. Care should be taken with leaving this field
// unspecified, as it can lead to the unanticipated rollout of breaking
// changes.
// More info: https://github.com/masterminds/semver#checking-version-constraints
func (o WarehouseSpecSubscriptionsImagePatchOutput) SemverConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImagePatch) *string { return v.SemverConstraint }).(pulumi.StringPtrOutput)
}

// StrictSemvers specifies whether only "strict" semver tags should be
// considered. A "strict" semver tag is one containing ALL of major, minor,
// and patch version components. This is enabled by default, but only has any
// effect when the ImageSelectionStrategy is SemVer. This should be disabled
// cautiously, as it is not uncommon to tag container images with short Git
// commit hashes, which have the potential to contain numeric characters only
// and could be mistaken for a semver string containing the major version
// number only.
func (o WarehouseSpecSubscriptionsImagePatchOutput) StrictSemvers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsImagePatch) *bool { return v.StrictSemvers }).(pulumi.BoolPtrOutput)
}

type WarehouseSpecSubscriptionsImagePatchPtrOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsImagePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseSpecSubscriptionsImagePatch)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsImagePatchPtrOutput) ToWarehouseSpecSubscriptionsImagePatchPtrOutput() WarehouseSpecSubscriptionsImagePatchPtrOutput {
	return o
}

func (o WarehouseSpecSubscriptionsImagePatchPtrOutput) ToWarehouseSpecSubscriptionsImagePatchPtrOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsImagePatchPtrOutput {
	return o
}

func (o WarehouseSpecSubscriptionsImagePatchPtrOutput) Elem() WarehouseSpecSubscriptionsImagePatchOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImagePatch) WarehouseSpecSubscriptionsImagePatch {
		if v != nil {
			return *v
		}
		var ret WarehouseSpecSubscriptionsImagePatch
		return ret
	}).(WarehouseSpecSubscriptionsImagePatchOutput)
}

// AllowTags is a regular expression that can optionally be used to limit the
// image tags that are considered in determining the newest version of an
// image. This field is optional.
func (o WarehouseSpecSubscriptionsImagePatchPtrOutput) AllowTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImagePatch) *string {
		if v == nil {
			return nil
		}
		return v.AllowTags
	}).(pulumi.StringPtrOutput)
}

// DiscoveryLimit is an optional limit on the number of image references
// that can be discovered for this subscription. The limit is applied after
// filtering images based on the AllowTags and IgnoreTags fields.
// When left unspecified, the field is implicitly treated as if its value
// were "20". The upper limit for this field is 100.
func (o WarehouseSpecSubscriptionsImagePatchPtrOutput) DiscoveryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImagePatch) *int {
		if v == nil {
			return nil
		}
		return v.DiscoveryLimit
	}).(pulumi.IntPtrOutput)
}

// GitRepoURL optionally specifies the URL of a Git repository that contains
// the source code for the image repository referenced by the RepoURL field.
// When this is specified, Kargo MAY be able to infer and link to the exact
// revision of that source code that was used to build the image.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o WarehouseSpecSubscriptionsImagePatchPtrOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImagePatch) *string {
		if v == nil {
			return nil
		}
		return v.GitRepoURL
	}).(pulumi.StringPtrOutput)
}

// IgnoreTags is a list of tags that must be ignored when determining the
// newest version of an image. No regular expressions or glob patterns are
// supported yet. This field is optional.
func (o WarehouseSpecSubscriptionsImagePatchPtrOutput) IgnoreTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImagePatch) []string {
		if v == nil {
			return nil
		}
		return v.IgnoreTags
	}).(pulumi.StringArrayOutput)
}

// ImageSelectionStrategy specifies the rules for how to identify the newest version
// of the image specified by the RepoURL field. This field is optional. When
// left unspecified, the field is implicitly treated as if its value were
// "SemVer".
//
// Accepted values:
//
// - "Digest": Selects the image currently referenced by the tag specified
// (unintuitively) by the SemverConstraint field.
//
// - "Lexical": Selects the image referenced by the lexicographically greatest
// tag. Useful when tags embed a leading date or timestamp. The AllowTags
// and IgnoreTags fields can optionally be used to narrow the set of tags
// eligible for selection.
//
// - "NewestBuild": Selects the image that was most recently pushed to the
// repository. The AllowTags and IgnoreTags fields can optionally be used
// to narrow the set of tags eligible for selection. This is the least
// efficient and is likely to cause rate limiting affecting this Warehouse
// and possibly others. This strategy should be avoided.
//
// - "SemVer": Selects the image with the semantically greatest tag. The
// AllowTags and IgnoreTags fields can optionally be used to narrow the set
// of tags eligible for selection.
func (o WarehouseSpecSubscriptionsImagePatchPtrOutput) ImageSelectionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImagePatch) *string {
		if v == nil {
			return nil
		}
		return v.ImageSelectionStrategy
	}).(pulumi.StringPtrOutput)
}

// InsecureSkipTLSVerify specifies whether certificate verification errors
// should be ignored when connecting to the repository. This should be enabled
// only with great caution.
func (o WarehouseSpecSubscriptionsImagePatchPtrOutput) InsecureSkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImagePatch) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipTLSVerify
	}).(pulumi.BoolPtrOutput)
}

// Platform is a string of the form <os>/<arch> that limits the tags that can
// be considered when searching for new versions of an image. This field is
// optional. When left unspecified, it is implicitly equivalent to the
// OS/architecture of the Kargo controller. Care should be taken to set this
// value correctly in cases where the image referenced by this
// ImageRepositorySubscription will run on a Kubernetes node with a different
// OS/architecture than the Kargo controller. At present this is uncommon, but
// not unheard of.
func (o WarehouseSpecSubscriptionsImagePatchPtrOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImagePatch) *string {
		if v == nil {
			return nil
		}
		return v.Platform
	}).(pulumi.StringPtrOutput)
}

// RepoURL specifies the URL of the image repository to subscribe to. The
// value in this field MUST NOT include an image tag. This field is required.
func (o WarehouseSpecSubscriptionsImagePatchPtrOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImagePatch) *string {
		if v == nil {
			return nil
		}
		return v.RepoURL
	}).(pulumi.StringPtrOutput)
}

// SemverConstraint specifies constraints on what new image versions are
// permissible. The value in this field only has any effect when the
// ImageSelectionStrategy is SemVer or left unspecified (which is implicitly
// the same as SemVer). This field is also optional. When left unspecified,
// (and the ImageSelectionStrategy is SemVer or unspecified), there will be no
// constraints, which means the latest semantically tagged version of an image
// will always be used. Care should be taken with leaving this field
// unspecified, as it can lead to the unanticipated rollout of breaking
// changes.
// More info: https://github.com/masterminds/semver#checking-version-constraints
func (o WarehouseSpecSubscriptionsImagePatchPtrOutput) SemverConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImagePatch) *string {
		if v == nil {
			return nil
		}
		return v.SemverConstraint
	}).(pulumi.StringPtrOutput)
}

// StrictSemvers specifies whether only "strict" semver tags should be
// considered. A "strict" semver tag is one containing ALL of major, minor,
// and patch version components. This is enabled by default, but only has any
// effect when the ImageSelectionStrategy is SemVer. This should be disabled
// cautiously, as it is not uncommon to tag container images with short Git
// commit hashes, which have the potential to contain numeric characters only
// and could be mistaken for a semver string containing the major version
// number only.
func (o WarehouseSpecSubscriptionsImagePatchPtrOutput) StrictSemvers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WarehouseSpecSubscriptionsImagePatch) *bool {
		if v == nil {
			return nil
		}
		return v.StrictSemvers
	}).(pulumi.BoolPtrOutput)
}

// RepoSubscription describes a subscription to ONE OF a Git repository, a
// container image repository, or a Helm chart repository.
type WarehouseSpecSubscriptionsPatch struct {
	Chart *WarehouseSpecSubscriptionsChartPatch `pulumi:"chart"`
	Git   *WarehouseSpecSubscriptionsGitPatch   `pulumi:"git"`
	Image *WarehouseSpecSubscriptionsImagePatch `pulumi:"image"`
}

// WarehouseSpecSubscriptionsPatchInput is an input type that accepts WarehouseSpecSubscriptionsPatchArgs and WarehouseSpecSubscriptionsPatchOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsPatchInput` via:
//
//	WarehouseSpecSubscriptionsPatchArgs{...}
type WarehouseSpecSubscriptionsPatchInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsPatchOutput() WarehouseSpecSubscriptionsPatchOutput
	ToWarehouseSpecSubscriptionsPatchOutputWithContext(context.Context) WarehouseSpecSubscriptionsPatchOutput
}

// RepoSubscription describes a subscription to ONE OF a Git repository, a
// container image repository, or a Helm chart repository.
type WarehouseSpecSubscriptionsPatchArgs struct {
	Chart WarehouseSpecSubscriptionsChartPatchPtrInput `pulumi:"chart"`
	Git   WarehouseSpecSubscriptionsGitPatchPtrInput   `pulumi:"git"`
	Image WarehouseSpecSubscriptionsImagePatchPtrInput `pulumi:"image"`
}

func (WarehouseSpecSubscriptionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptionsPatch)(nil)).Elem()
}

func (i WarehouseSpecSubscriptionsPatchArgs) ToWarehouseSpecSubscriptionsPatchOutput() WarehouseSpecSubscriptionsPatchOutput {
	return i.ToWarehouseSpecSubscriptionsPatchOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsPatchArgs) ToWarehouseSpecSubscriptionsPatchOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsPatchOutput)
}

// WarehouseSpecSubscriptionsPatchArrayInput is an input type that accepts WarehouseSpecSubscriptionsPatchArray and WarehouseSpecSubscriptionsPatchArrayOutput values.
// You can construct a concrete instance of `WarehouseSpecSubscriptionsPatchArrayInput` via:
//
//	WarehouseSpecSubscriptionsPatchArray{ WarehouseSpecSubscriptionsPatchArgs{...} }
type WarehouseSpecSubscriptionsPatchArrayInput interface {
	pulumi.Input

	ToWarehouseSpecSubscriptionsPatchArrayOutput() WarehouseSpecSubscriptionsPatchArrayOutput
	ToWarehouseSpecSubscriptionsPatchArrayOutputWithContext(context.Context) WarehouseSpecSubscriptionsPatchArrayOutput
}

type WarehouseSpecSubscriptionsPatchArray []WarehouseSpecSubscriptionsPatchInput

func (WarehouseSpecSubscriptionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseSpecSubscriptionsPatch)(nil)).Elem()
}

func (i WarehouseSpecSubscriptionsPatchArray) ToWarehouseSpecSubscriptionsPatchArrayOutput() WarehouseSpecSubscriptionsPatchArrayOutput {
	return i.ToWarehouseSpecSubscriptionsPatchArrayOutputWithContext(context.Background())
}

func (i WarehouseSpecSubscriptionsPatchArray) ToWarehouseSpecSubscriptionsPatchArrayOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseSpecSubscriptionsPatchArrayOutput)
}

// RepoSubscription describes a subscription to ONE OF a Git repository, a
// container image repository, or a Helm chart repository.
type WarehouseSpecSubscriptionsPatchOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseSpecSubscriptionsPatch)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsPatchOutput) ToWarehouseSpecSubscriptionsPatchOutput() WarehouseSpecSubscriptionsPatchOutput {
	return o
}

func (o WarehouseSpecSubscriptionsPatchOutput) ToWarehouseSpecSubscriptionsPatchOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsPatchOutput {
	return o
}

func (o WarehouseSpecSubscriptionsPatchOutput) Chart() WarehouseSpecSubscriptionsChartPatchPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsPatch) *WarehouseSpecSubscriptionsChartPatch { return v.Chart }).(WarehouseSpecSubscriptionsChartPatchPtrOutput)
}

func (o WarehouseSpecSubscriptionsPatchOutput) Git() WarehouseSpecSubscriptionsGitPatchPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsPatch) *WarehouseSpecSubscriptionsGitPatch { return v.Git }).(WarehouseSpecSubscriptionsGitPatchPtrOutput)
}

func (o WarehouseSpecSubscriptionsPatchOutput) Image() WarehouseSpecSubscriptionsImagePatchPtrOutput {
	return o.ApplyT(func(v WarehouseSpecSubscriptionsPatch) *WarehouseSpecSubscriptionsImagePatch { return v.Image }).(WarehouseSpecSubscriptionsImagePatchPtrOutput)
}

type WarehouseSpecSubscriptionsPatchArrayOutput struct{ *pulumi.OutputState }

func (WarehouseSpecSubscriptionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseSpecSubscriptionsPatch)(nil)).Elem()
}

func (o WarehouseSpecSubscriptionsPatchArrayOutput) ToWarehouseSpecSubscriptionsPatchArrayOutput() WarehouseSpecSubscriptionsPatchArrayOutput {
	return o
}

func (o WarehouseSpecSubscriptionsPatchArrayOutput) ToWarehouseSpecSubscriptionsPatchArrayOutputWithContext(ctx context.Context) WarehouseSpecSubscriptionsPatchArrayOutput {
	return o
}

func (o WarehouseSpecSubscriptionsPatchArrayOutput) Index(i pulumi.IntInput) WarehouseSpecSubscriptionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseSpecSubscriptionsPatch {
		return vs[0].([]WarehouseSpecSubscriptionsPatch)[vs[1].(int)]
	}).(WarehouseSpecSubscriptionsPatchOutput)
}

// Status describes the Warehouse's most recently observed state.
type WarehouseStatus struct {
	// Conditions contains the last observations of the Warehouse's current
	// state.
	Conditions          []WarehouseStatusConditions         `pulumi:"conditions"`
	DiscoveredArtifacts *WarehouseStatusDiscoveredArtifacts `pulumi:"discoveredArtifacts"`
	// LastFreightID is a reference to the system-assigned identifier (name) of
	// the most recent Freight produced by the Warehouse.
	LastFreightID *string `pulumi:"lastFreightID"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh *string `pulumi:"lastHandledRefresh"`
	// ObservedGeneration represents the .metadata.generation that this Warehouse
	// was reconciled against.
	ObservedGeneration *int `pulumi:"observedGeneration"`
}

// WarehouseStatusInput is an input type that accepts WarehouseStatusArgs and WarehouseStatusOutput values.
// You can construct a concrete instance of `WarehouseStatusInput` via:
//
//	WarehouseStatusArgs{...}
type WarehouseStatusInput interface {
	pulumi.Input

	ToWarehouseStatusOutput() WarehouseStatusOutput
	ToWarehouseStatusOutputWithContext(context.Context) WarehouseStatusOutput
}

// Status describes the Warehouse's most recently observed state.
type WarehouseStatusArgs struct {
	// Conditions contains the last observations of the Warehouse's current
	// state.
	Conditions          WarehouseStatusConditionsArrayInput        `pulumi:"conditions"`
	DiscoveredArtifacts WarehouseStatusDiscoveredArtifactsPtrInput `pulumi:"discoveredArtifacts"`
	// LastFreightID is a reference to the system-assigned identifier (name) of
	// the most recent Freight produced by the Warehouse.
	LastFreightID pulumi.StringPtrInput `pulumi:"lastFreightID"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh pulumi.StringPtrInput `pulumi:"lastHandledRefresh"`
	// ObservedGeneration represents the .metadata.generation that this Warehouse
	// was reconciled against.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
}

func (WarehouseStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatus)(nil)).Elem()
}

func (i WarehouseStatusArgs) ToWarehouseStatusOutput() WarehouseStatusOutput {
	return i.ToWarehouseStatusOutputWithContext(context.Background())
}

func (i WarehouseStatusArgs) ToWarehouseStatusOutputWithContext(ctx context.Context) WarehouseStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusOutput)
}

func (i WarehouseStatusArgs) ToWarehouseStatusPtrOutput() WarehouseStatusPtrOutput {
	return i.ToWarehouseStatusPtrOutputWithContext(context.Background())
}

func (i WarehouseStatusArgs) ToWarehouseStatusPtrOutputWithContext(ctx context.Context) WarehouseStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusOutput).ToWarehouseStatusPtrOutputWithContext(ctx)
}

// WarehouseStatusPtrInput is an input type that accepts WarehouseStatusArgs, WarehouseStatusPtr and WarehouseStatusPtrOutput values.
// You can construct a concrete instance of `WarehouseStatusPtrInput` via:
//
//	        WarehouseStatusArgs{...}
//
//	or:
//
//	        nil
type WarehouseStatusPtrInput interface {
	pulumi.Input

	ToWarehouseStatusPtrOutput() WarehouseStatusPtrOutput
	ToWarehouseStatusPtrOutputWithContext(context.Context) WarehouseStatusPtrOutput
}

type warehouseStatusPtrType WarehouseStatusArgs

func WarehouseStatusPtr(v *WarehouseStatusArgs) WarehouseStatusPtrInput {
	return (*warehouseStatusPtrType)(v)
}

func (*warehouseStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseStatus)(nil)).Elem()
}

func (i *warehouseStatusPtrType) ToWarehouseStatusPtrOutput() WarehouseStatusPtrOutput {
	return i.ToWarehouseStatusPtrOutputWithContext(context.Background())
}

func (i *warehouseStatusPtrType) ToWarehouseStatusPtrOutputWithContext(ctx context.Context) WarehouseStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusPtrOutput)
}

// Status describes the Warehouse's most recently observed state.
type WarehouseStatusOutput struct{ *pulumi.OutputState }

func (WarehouseStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatus)(nil)).Elem()
}

func (o WarehouseStatusOutput) ToWarehouseStatusOutput() WarehouseStatusOutput {
	return o
}

func (o WarehouseStatusOutput) ToWarehouseStatusOutputWithContext(ctx context.Context) WarehouseStatusOutput {
	return o
}

func (o WarehouseStatusOutput) ToWarehouseStatusPtrOutput() WarehouseStatusPtrOutput {
	return o.ToWarehouseStatusPtrOutputWithContext(context.Background())
}

func (o WarehouseStatusOutput) ToWarehouseStatusPtrOutputWithContext(ctx context.Context) WarehouseStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WarehouseStatus) *WarehouseStatus {
		return &v
	}).(WarehouseStatusPtrOutput)
}

// Conditions contains the last observations of the Warehouse's current
// state.
func (o WarehouseStatusOutput) Conditions() WarehouseStatusConditionsArrayOutput {
	return o.ApplyT(func(v WarehouseStatus) []WarehouseStatusConditions { return v.Conditions }).(WarehouseStatusConditionsArrayOutput)
}

func (o WarehouseStatusOutput) DiscoveredArtifacts() WarehouseStatusDiscoveredArtifactsPtrOutput {
	return o.ApplyT(func(v WarehouseStatus) *WarehouseStatusDiscoveredArtifacts { return v.DiscoveredArtifacts }).(WarehouseStatusDiscoveredArtifactsPtrOutput)
}

// LastFreightID is a reference to the system-assigned identifier (name) of
// the most recent Freight produced by the Warehouse.
func (o WarehouseStatusOutput) LastFreightID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatus) *string { return v.LastFreightID }).(pulumi.StringPtrOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o WarehouseStatusOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatus) *string { return v.LastHandledRefresh }).(pulumi.StringPtrOutput)
}

// ObservedGeneration represents the .metadata.generation that this Warehouse
// was reconciled against.
func (o WarehouseStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarehouseStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

type WarehouseStatusPtrOutput struct{ *pulumi.OutputState }

func (WarehouseStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseStatus)(nil)).Elem()
}

func (o WarehouseStatusPtrOutput) ToWarehouseStatusPtrOutput() WarehouseStatusPtrOutput {
	return o
}

func (o WarehouseStatusPtrOutput) ToWarehouseStatusPtrOutputWithContext(ctx context.Context) WarehouseStatusPtrOutput {
	return o
}

func (o WarehouseStatusPtrOutput) Elem() WarehouseStatusOutput {
	return o.ApplyT(func(v *WarehouseStatus) WarehouseStatus {
		if v != nil {
			return *v
		}
		var ret WarehouseStatus
		return ret
	}).(WarehouseStatusOutput)
}

// Conditions contains the last observations of the Warehouse's current
// state.
func (o WarehouseStatusPtrOutput) Conditions() WarehouseStatusConditionsArrayOutput {
	return o.ApplyT(func(v *WarehouseStatus) []WarehouseStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(WarehouseStatusConditionsArrayOutput)
}

func (o WarehouseStatusPtrOutput) DiscoveredArtifacts() WarehouseStatusDiscoveredArtifactsPtrOutput {
	return o.ApplyT(func(v *WarehouseStatus) *WarehouseStatusDiscoveredArtifacts {
		if v == nil {
			return nil
		}
		return v.DiscoveredArtifacts
	}).(WarehouseStatusDiscoveredArtifactsPtrOutput)
}

// LastFreightID is a reference to the system-assigned identifier (name) of
// the most recent Freight produced by the Warehouse.
func (o WarehouseStatusPtrOutput) LastFreightID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastFreightID
	}).(pulumi.StringPtrOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o WarehouseStatusPtrOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastHandledRefresh
	}).(pulumi.StringPtrOutput)
}

// ObservedGeneration represents the .metadata.generation that this Warehouse
// was reconciled against.
func (o WarehouseStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WarehouseStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type WarehouseStatusConditions struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message *string `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason *string `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status *string `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type *string `pulumi:"type"`
}

// WarehouseStatusConditionsInput is an input type that accepts WarehouseStatusConditionsArgs and WarehouseStatusConditionsOutput values.
// You can construct a concrete instance of `WarehouseStatusConditionsInput` via:
//
//	WarehouseStatusConditionsArgs{...}
type WarehouseStatusConditionsInput interface {
	pulumi.Input

	ToWarehouseStatusConditionsOutput() WarehouseStatusConditionsOutput
	ToWarehouseStatusConditionsOutputWithContext(context.Context) WarehouseStatusConditionsOutput
}

// Condition contains details for one aspect of the current state of this API Resource.
type WarehouseStatusConditionsArgs struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (WarehouseStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusConditions)(nil)).Elem()
}

func (i WarehouseStatusConditionsArgs) ToWarehouseStatusConditionsOutput() WarehouseStatusConditionsOutput {
	return i.ToWarehouseStatusConditionsOutputWithContext(context.Background())
}

func (i WarehouseStatusConditionsArgs) ToWarehouseStatusConditionsOutputWithContext(ctx context.Context) WarehouseStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusConditionsOutput)
}

// WarehouseStatusConditionsArrayInput is an input type that accepts WarehouseStatusConditionsArray and WarehouseStatusConditionsArrayOutput values.
// You can construct a concrete instance of `WarehouseStatusConditionsArrayInput` via:
//
//	WarehouseStatusConditionsArray{ WarehouseStatusConditionsArgs{...} }
type WarehouseStatusConditionsArrayInput interface {
	pulumi.Input

	ToWarehouseStatusConditionsArrayOutput() WarehouseStatusConditionsArrayOutput
	ToWarehouseStatusConditionsArrayOutputWithContext(context.Context) WarehouseStatusConditionsArrayOutput
}

type WarehouseStatusConditionsArray []WarehouseStatusConditionsInput

func (WarehouseStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusConditions)(nil)).Elem()
}

func (i WarehouseStatusConditionsArray) ToWarehouseStatusConditionsArrayOutput() WarehouseStatusConditionsArrayOutput {
	return i.ToWarehouseStatusConditionsArrayOutputWithContext(context.Background())
}

func (i WarehouseStatusConditionsArray) ToWarehouseStatusConditionsArrayOutputWithContext(ctx context.Context) WarehouseStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusConditionsArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type WarehouseStatusConditionsOutput struct{ *pulumi.OutputState }

func (WarehouseStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusConditions)(nil)).Elem()
}

func (o WarehouseStatusConditionsOutput) ToWarehouseStatusConditionsOutput() WarehouseStatusConditionsOutput {
	return o
}

func (o WarehouseStatusConditionsOutput) ToWarehouseStatusConditionsOutputWithContext(ctx context.Context) WarehouseStatusConditionsOutput {
	return o
}

// lastTransitionTime is the last time the condition transitioned from one status to another.
// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
func (o WarehouseStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human readable message indicating details about the transition.
// This may be an empty string.
func (o WarehouseStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// observedGeneration represents the .metadata.generation that the condition was set based upon.
// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the instance.
func (o WarehouseStatusConditionsOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarehouseStatusConditions) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// reason contains a programmatic identifier indicating the reason for the condition's last transition.
// Producers of specific condition types may define expected values and meanings for this field,
// and whether the values are considered a guaranteed API.
// The value should be a CamelCase string.
// This field may not be empty.
func (o WarehouseStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status of the condition, one of True, False, Unknown.
func (o WarehouseStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of condition in CamelCase or in foo.example.com/CamelCase.
func (o WarehouseStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WarehouseStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (WarehouseStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusConditions)(nil)).Elem()
}

func (o WarehouseStatusConditionsArrayOutput) ToWarehouseStatusConditionsArrayOutput() WarehouseStatusConditionsArrayOutput {
	return o
}

func (o WarehouseStatusConditionsArrayOutput) ToWarehouseStatusConditionsArrayOutputWithContext(ctx context.Context) WarehouseStatusConditionsArrayOutput {
	return o
}

func (o WarehouseStatusConditionsArrayOutput) Index(i pulumi.IntInput) WarehouseStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseStatusConditions {
		return vs[0].([]WarehouseStatusConditions)[vs[1].(int)]
	}).(WarehouseStatusConditionsOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type WarehouseStatusConditionsPatch struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message *string `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason *string `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status *string `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type *string `pulumi:"type"`
}

// WarehouseStatusConditionsPatchInput is an input type that accepts WarehouseStatusConditionsPatchArgs and WarehouseStatusConditionsPatchOutput values.
// You can construct a concrete instance of `WarehouseStatusConditionsPatchInput` via:
//
//	WarehouseStatusConditionsPatchArgs{...}
type WarehouseStatusConditionsPatchInput interface {
	pulumi.Input

	ToWarehouseStatusConditionsPatchOutput() WarehouseStatusConditionsPatchOutput
	ToWarehouseStatusConditionsPatchOutputWithContext(context.Context) WarehouseStatusConditionsPatchOutput
}

// Condition contains details for one aspect of the current state of this API Resource.
type WarehouseStatusConditionsPatchArgs struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (WarehouseStatusConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusConditionsPatch)(nil)).Elem()
}

func (i WarehouseStatusConditionsPatchArgs) ToWarehouseStatusConditionsPatchOutput() WarehouseStatusConditionsPatchOutput {
	return i.ToWarehouseStatusConditionsPatchOutputWithContext(context.Background())
}

func (i WarehouseStatusConditionsPatchArgs) ToWarehouseStatusConditionsPatchOutputWithContext(ctx context.Context) WarehouseStatusConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusConditionsPatchOutput)
}

// WarehouseStatusConditionsPatchArrayInput is an input type that accepts WarehouseStatusConditionsPatchArray and WarehouseStatusConditionsPatchArrayOutput values.
// You can construct a concrete instance of `WarehouseStatusConditionsPatchArrayInput` via:
//
//	WarehouseStatusConditionsPatchArray{ WarehouseStatusConditionsPatchArgs{...} }
type WarehouseStatusConditionsPatchArrayInput interface {
	pulumi.Input

	ToWarehouseStatusConditionsPatchArrayOutput() WarehouseStatusConditionsPatchArrayOutput
	ToWarehouseStatusConditionsPatchArrayOutputWithContext(context.Context) WarehouseStatusConditionsPatchArrayOutput
}

type WarehouseStatusConditionsPatchArray []WarehouseStatusConditionsPatchInput

func (WarehouseStatusConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusConditionsPatch)(nil)).Elem()
}

func (i WarehouseStatusConditionsPatchArray) ToWarehouseStatusConditionsPatchArrayOutput() WarehouseStatusConditionsPatchArrayOutput {
	return i.ToWarehouseStatusConditionsPatchArrayOutputWithContext(context.Background())
}

func (i WarehouseStatusConditionsPatchArray) ToWarehouseStatusConditionsPatchArrayOutputWithContext(ctx context.Context) WarehouseStatusConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusConditionsPatchArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type WarehouseStatusConditionsPatchOutput struct{ *pulumi.OutputState }

func (WarehouseStatusConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusConditionsPatch)(nil)).Elem()
}

func (o WarehouseStatusConditionsPatchOutput) ToWarehouseStatusConditionsPatchOutput() WarehouseStatusConditionsPatchOutput {
	return o
}

func (o WarehouseStatusConditionsPatchOutput) ToWarehouseStatusConditionsPatchOutputWithContext(ctx context.Context) WarehouseStatusConditionsPatchOutput {
	return o
}

// lastTransitionTime is the last time the condition transitioned from one status to another.
// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
func (o WarehouseStatusConditionsPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusConditionsPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human readable message indicating details about the transition.
// This may be an empty string.
func (o WarehouseStatusConditionsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusConditionsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// observedGeneration represents the .metadata.generation that the condition was set based upon.
// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the instance.
func (o WarehouseStatusConditionsPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarehouseStatusConditionsPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// reason contains a programmatic identifier indicating the reason for the condition's last transition.
// Producers of specific condition types may define expected values and meanings for this field,
// and whether the values are considered a guaranteed API.
// The value should be a CamelCase string.
// This field may not be empty.
func (o WarehouseStatusConditionsPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusConditionsPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status of the condition, one of True, False, Unknown.
func (o WarehouseStatusConditionsPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusConditionsPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of condition in CamelCase or in foo.example.com/CamelCase.
func (o WarehouseStatusConditionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusConditionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WarehouseStatusConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (WarehouseStatusConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusConditionsPatch)(nil)).Elem()
}

func (o WarehouseStatusConditionsPatchArrayOutput) ToWarehouseStatusConditionsPatchArrayOutput() WarehouseStatusConditionsPatchArrayOutput {
	return o
}

func (o WarehouseStatusConditionsPatchArrayOutput) ToWarehouseStatusConditionsPatchArrayOutputWithContext(ctx context.Context) WarehouseStatusConditionsPatchArrayOutput {
	return o
}

func (o WarehouseStatusConditionsPatchArrayOutput) Index(i pulumi.IntInput) WarehouseStatusConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseStatusConditionsPatch {
		return vs[0].([]WarehouseStatusConditionsPatch)[vs[1].(int)]
	}).(WarehouseStatusConditionsPatchOutput)
}

// DiscoveredArtifacts holds the artifacts discovered by the Warehouse.
type WarehouseStatusDiscoveredArtifacts struct {
	// Charts holds the charts discovered by the Warehouse for the chart
	// subscriptions.
	Charts []WarehouseStatusDiscoveredArtifactsCharts `pulumi:"charts"`
	// DiscoveredAt is the time at which the Warehouse discovered the artifacts.
	DiscoveredAt *string `pulumi:"discoveredAt"`
	// Git holds the commits discovered by the Warehouse for the Git
	// subscriptions.
	Git []WarehouseStatusDiscoveredArtifactsGit `pulumi:"git"`
	// Images holds the image references discovered by the Warehouse for the
	// image subscriptions.
	Images []WarehouseStatusDiscoveredArtifactsImages `pulumi:"images"`
}

// WarehouseStatusDiscoveredArtifactsInput is an input type that accepts WarehouseStatusDiscoveredArtifactsArgs and WarehouseStatusDiscoveredArtifactsOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsInput` via:
//
//	WarehouseStatusDiscoveredArtifactsArgs{...}
type WarehouseStatusDiscoveredArtifactsInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsOutput() WarehouseStatusDiscoveredArtifactsOutput
	ToWarehouseStatusDiscoveredArtifactsOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsOutput
}

// DiscoveredArtifacts holds the artifacts discovered by the Warehouse.
type WarehouseStatusDiscoveredArtifactsArgs struct {
	// Charts holds the charts discovered by the Warehouse for the chart
	// subscriptions.
	Charts WarehouseStatusDiscoveredArtifactsChartsArrayInput `pulumi:"charts"`
	// DiscoveredAt is the time at which the Warehouse discovered the artifacts.
	DiscoveredAt pulumi.StringPtrInput `pulumi:"discoveredAt"`
	// Git holds the commits discovered by the Warehouse for the Git
	// subscriptions.
	Git WarehouseStatusDiscoveredArtifactsGitArrayInput `pulumi:"git"`
	// Images holds the image references discovered by the Warehouse for the
	// image subscriptions.
	Images WarehouseStatusDiscoveredArtifactsImagesArrayInput `pulumi:"images"`
}

func (WarehouseStatusDiscoveredArtifactsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifacts)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsArgs) ToWarehouseStatusDiscoveredArtifactsOutput() WarehouseStatusDiscoveredArtifactsOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsArgs) ToWarehouseStatusDiscoveredArtifactsOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsOutput)
}

func (i WarehouseStatusDiscoveredArtifactsArgs) ToWarehouseStatusDiscoveredArtifactsPtrOutput() WarehouseStatusDiscoveredArtifactsPtrOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsPtrOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsArgs) ToWarehouseStatusDiscoveredArtifactsPtrOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsOutput).ToWarehouseStatusDiscoveredArtifactsPtrOutputWithContext(ctx)
}

// WarehouseStatusDiscoveredArtifactsPtrInput is an input type that accepts WarehouseStatusDiscoveredArtifactsArgs, WarehouseStatusDiscoveredArtifactsPtr and WarehouseStatusDiscoveredArtifactsPtrOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsPtrInput` via:
//
//	        WarehouseStatusDiscoveredArtifactsArgs{...}
//
//	or:
//
//	        nil
type WarehouseStatusDiscoveredArtifactsPtrInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsPtrOutput() WarehouseStatusDiscoveredArtifactsPtrOutput
	ToWarehouseStatusDiscoveredArtifactsPtrOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsPtrOutput
}

type warehouseStatusDiscoveredArtifactsPtrType WarehouseStatusDiscoveredArtifactsArgs

func WarehouseStatusDiscoveredArtifactsPtr(v *WarehouseStatusDiscoveredArtifactsArgs) WarehouseStatusDiscoveredArtifactsPtrInput {
	return (*warehouseStatusDiscoveredArtifactsPtrType)(v)
}

func (*warehouseStatusDiscoveredArtifactsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseStatusDiscoveredArtifacts)(nil)).Elem()
}

func (i *warehouseStatusDiscoveredArtifactsPtrType) ToWarehouseStatusDiscoveredArtifactsPtrOutput() WarehouseStatusDiscoveredArtifactsPtrOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsPtrOutputWithContext(context.Background())
}

func (i *warehouseStatusDiscoveredArtifactsPtrType) ToWarehouseStatusDiscoveredArtifactsPtrOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsPtrOutput)
}

// DiscoveredArtifacts holds the artifacts discovered by the Warehouse.
type WarehouseStatusDiscoveredArtifactsOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifacts)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsOutput) ToWarehouseStatusDiscoveredArtifactsOutput() WarehouseStatusDiscoveredArtifactsOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsOutput) ToWarehouseStatusDiscoveredArtifactsOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsOutput) ToWarehouseStatusDiscoveredArtifactsPtrOutput() WarehouseStatusDiscoveredArtifactsPtrOutput {
	return o.ToWarehouseStatusDiscoveredArtifactsPtrOutputWithContext(context.Background())
}

func (o WarehouseStatusDiscoveredArtifactsOutput) ToWarehouseStatusDiscoveredArtifactsPtrOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WarehouseStatusDiscoveredArtifacts) *WarehouseStatusDiscoveredArtifacts {
		return &v
	}).(WarehouseStatusDiscoveredArtifactsPtrOutput)
}

// Charts holds the charts discovered by the Warehouse for the chart
// subscriptions.
func (o WarehouseStatusDiscoveredArtifactsOutput) Charts() WarehouseStatusDiscoveredArtifactsChartsArrayOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifacts) []WarehouseStatusDiscoveredArtifactsCharts { return v.Charts }).(WarehouseStatusDiscoveredArtifactsChartsArrayOutput)
}

// DiscoveredAt is the time at which the Warehouse discovered the artifacts.
func (o WarehouseStatusDiscoveredArtifactsOutput) DiscoveredAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifacts) *string { return v.DiscoveredAt }).(pulumi.StringPtrOutput)
}

// Git holds the commits discovered by the Warehouse for the Git
// subscriptions.
func (o WarehouseStatusDiscoveredArtifactsOutput) Git() WarehouseStatusDiscoveredArtifactsGitArrayOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifacts) []WarehouseStatusDiscoveredArtifactsGit { return v.Git }).(WarehouseStatusDiscoveredArtifactsGitArrayOutput)
}

// Images holds the image references discovered by the Warehouse for the
// image subscriptions.
func (o WarehouseStatusDiscoveredArtifactsOutput) Images() WarehouseStatusDiscoveredArtifactsImagesArrayOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifacts) []WarehouseStatusDiscoveredArtifactsImages { return v.Images }).(WarehouseStatusDiscoveredArtifactsImagesArrayOutput)
}

type WarehouseStatusDiscoveredArtifactsPtrOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseStatusDiscoveredArtifacts)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsPtrOutput) ToWarehouseStatusDiscoveredArtifactsPtrOutput() WarehouseStatusDiscoveredArtifactsPtrOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsPtrOutput) ToWarehouseStatusDiscoveredArtifactsPtrOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsPtrOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsPtrOutput) Elem() WarehouseStatusDiscoveredArtifactsOutput {
	return o.ApplyT(func(v *WarehouseStatusDiscoveredArtifacts) WarehouseStatusDiscoveredArtifacts {
		if v != nil {
			return *v
		}
		var ret WarehouseStatusDiscoveredArtifacts
		return ret
	}).(WarehouseStatusDiscoveredArtifactsOutput)
}

// Charts holds the charts discovered by the Warehouse for the chart
// subscriptions.
func (o WarehouseStatusDiscoveredArtifactsPtrOutput) Charts() WarehouseStatusDiscoveredArtifactsChartsArrayOutput {
	return o.ApplyT(func(v *WarehouseStatusDiscoveredArtifacts) []WarehouseStatusDiscoveredArtifactsCharts {
		if v == nil {
			return nil
		}
		return v.Charts
	}).(WarehouseStatusDiscoveredArtifactsChartsArrayOutput)
}

// DiscoveredAt is the time at which the Warehouse discovered the artifacts.
func (o WarehouseStatusDiscoveredArtifactsPtrOutput) DiscoveredAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseStatusDiscoveredArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.DiscoveredAt
	}).(pulumi.StringPtrOutput)
}

// Git holds the commits discovered by the Warehouse for the Git
// subscriptions.
func (o WarehouseStatusDiscoveredArtifactsPtrOutput) Git() WarehouseStatusDiscoveredArtifactsGitArrayOutput {
	return o.ApplyT(func(v *WarehouseStatusDiscoveredArtifacts) []WarehouseStatusDiscoveredArtifactsGit {
		if v == nil {
			return nil
		}
		return v.Git
	}).(WarehouseStatusDiscoveredArtifactsGitArrayOutput)
}

// Images holds the image references discovered by the Warehouse for the
// image subscriptions.
func (o WarehouseStatusDiscoveredArtifactsPtrOutput) Images() WarehouseStatusDiscoveredArtifactsImagesArrayOutput {
	return o.ApplyT(func(v *WarehouseStatusDiscoveredArtifacts) []WarehouseStatusDiscoveredArtifactsImages {
		if v == nil {
			return nil
		}
		return v.Images
	}).(WarehouseStatusDiscoveredArtifactsImagesArrayOutput)
}

// ChartDiscoveryResult represents the result of a chart discovery operation for
// a ChartSubscription.
type WarehouseStatusDiscoveredArtifactsCharts struct {
	// Name is the name of the Helm chart, as specified in the ChartSubscription.
	Name *string `pulumi:"name"`
	// RepoURL is the repository URL of the Helm chart, as specified in the
	// ChartSubscription.
	RepoURL *string `pulumi:"repoURL"`
	// SemverConstraint is the constraint for which versions were discovered.
	// This field is optional, and only populated if the ChartSubscription
	// specifies a SemverConstraint.
	SemverConstraint *string `pulumi:"semverConstraint"`
	// Versions is a list of versions discovered by the Warehouse for the
	// ChartSubscription. An empty list indicates that the discovery operation was
	// successful, but no versions matching the ChartSubscription criteria were
	// found.
	Versions []string `pulumi:"versions"`
}

// WarehouseStatusDiscoveredArtifactsChartsInput is an input type that accepts WarehouseStatusDiscoveredArtifactsChartsArgs and WarehouseStatusDiscoveredArtifactsChartsOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsChartsInput` via:
//
//	WarehouseStatusDiscoveredArtifactsChartsArgs{...}
type WarehouseStatusDiscoveredArtifactsChartsInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsChartsOutput() WarehouseStatusDiscoveredArtifactsChartsOutput
	ToWarehouseStatusDiscoveredArtifactsChartsOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsChartsOutput
}

// ChartDiscoveryResult represents the result of a chart discovery operation for
// a ChartSubscription.
type WarehouseStatusDiscoveredArtifactsChartsArgs struct {
	// Name is the name of the Helm chart, as specified in the ChartSubscription.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL is the repository URL of the Helm chart, as specified in the
	// ChartSubscription.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// SemverConstraint is the constraint for which versions were discovered.
	// This field is optional, and only populated if the ChartSubscription
	// specifies a SemverConstraint.
	SemverConstraint pulumi.StringPtrInput `pulumi:"semverConstraint"`
	// Versions is a list of versions discovered by the Warehouse for the
	// ChartSubscription. An empty list indicates that the discovery operation was
	// successful, but no versions matching the ChartSubscription criteria were
	// found.
	Versions pulumi.StringArrayInput `pulumi:"versions"`
}

func (WarehouseStatusDiscoveredArtifactsChartsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsCharts)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsChartsArgs) ToWarehouseStatusDiscoveredArtifactsChartsOutput() WarehouseStatusDiscoveredArtifactsChartsOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsChartsOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsChartsArgs) ToWarehouseStatusDiscoveredArtifactsChartsOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsChartsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsChartsOutput)
}

// WarehouseStatusDiscoveredArtifactsChartsArrayInput is an input type that accepts WarehouseStatusDiscoveredArtifactsChartsArray and WarehouseStatusDiscoveredArtifactsChartsArrayOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsChartsArrayInput` via:
//
//	WarehouseStatusDiscoveredArtifactsChartsArray{ WarehouseStatusDiscoveredArtifactsChartsArgs{...} }
type WarehouseStatusDiscoveredArtifactsChartsArrayInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsChartsArrayOutput() WarehouseStatusDiscoveredArtifactsChartsArrayOutput
	ToWarehouseStatusDiscoveredArtifactsChartsArrayOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsChartsArrayOutput
}

type WarehouseStatusDiscoveredArtifactsChartsArray []WarehouseStatusDiscoveredArtifactsChartsInput

func (WarehouseStatusDiscoveredArtifactsChartsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsCharts)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsChartsArray) ToWarehouseStatusDiscoveredArtifactsChartsArrayOutput() WarehouseStatusDiscoveredArtifactsChartsArrayOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsChartsArrayOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsChartsArray) ToWarehouseStatusDiscoveredArtifactsChartsArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsChartsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsChartsArrayOutput)
}

// ChartDiscoveryResult represents the result of a chart discovery operation for
// a ChartSubscription.
type WarehouseStatusDiscoveredArtifactsChartsOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsChartsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsCharts)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsChartsOutput) ToWarehouseStatusDiscoveredArtifactsChartsOutput() WarehouseStatusDiscoveredArtifactsChartsOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsChartsOutput) ToWarehouseStatusDiscoveredArtifactsChartsOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsChartsOutput {
	return o
}

// Name is the name of the Helm chart, as specified in the ChartSubscription.
func (o WarehouseStatusDiscoveredArtifactsChartsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsCharts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL is the repository URL of the Helm chart, as specified in the
// ChartSubscription.
func (o WarehouseStatusDiscoveredArtifactsChartsOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsCharts) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// SemverConstraint is the constraint for which versions were discovered.
// This field is optional, and only populated if the ChartSubscription
// specifies a SemverConstraint.
func (o WarehouseStatusDiscoveredArtifactsChartsOutput) SemverConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsCharts) *string { return v.SemverConstraint }).(pulumi.StringPtrOutput)
}

// Versions is a list of versions discovered by the Warehouse for the
// ChartSubscription. An empty list indicates that the discovery operation was
// successful, but no versions matching the ChartSubscription criteria were
// found.
func (o WarehouseStatusDiscoveredArtifactsChartsOutput) Versions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsCharts) []string { return v.Versions }).(pulumi.StringArrayOutput)
}

type WarehouseStatusDiscoveredArtifactsChartsArrayOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsChartsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsCharts)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsChartsArrayOutput) ToWarehouseStatusDiscoveredArtifactsChartsArrayOutput() WarehouseStatusDiscoveredArtifactsChartsArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsChartsArrayOutput) ToWarehouseStatusDiscoveredArtifactsChartsArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsChartsArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsChartsArrayOutput) Index(i pulumi.IntInput) WarehouseStatusDiscoveredArtifactsChartsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseStatusDiscoveredArtifactsCharts {
		return vs[0].([]WarehouseStatusDiscoveredArtifactsCharts)[vs[1].(int)]
	}).(WarehouseStatusDiscoveredArtifactsChartsOutput)
}

// ChartDiscoveryResult represents the result of a chart discovery operation for
// a ChartSubscription.
type WarehouseStatusDiscoveredArtifactsChartsPatch struct {
	// Name is the name of the Helm chart, as specified in the ChartSubscription.
	Name *string `pulumi:"name"`
	// RepoURL is the repository URL of the Helm chart, as specified in the
	// ChartSubscription.
	RepoURL *string `pulumi:"repoURL"`
	// SemverConstraint is the constraint for which versions were discovered.
	// This field is optional, and only populated if the ChartSubscription
	// specifies a SemverConstraint.
	SemverConstraint *string `pulumi:"semverConstraint"`
	// Versions is a list of versions discovered by the Warehouse for the
	// ChartSubscription. An empty list indicates that the discovery operation was
	// successful, but no versions matching the ChartSubscription criteria were
	// found.
	Versions []string `pulumi:"versions"`
}

// WarehouseStatusDiscoveredArtifactsChartsPatchInput is an input type that accepts WarehouseStatusDiscoveredArtifactsChartsPatchArgs and WarehouseStatusDiscoveredArtifactsChartsPatchOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsChartsPatchInput` via:
//
//	WarehouseStatusDiscoveredArtifactsChartsPatchArgs{...}
type WarehouseStatusDiscoveredArtifactsChartsPatchInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsChartsPatchOutput() WarehouseStatusDiscoveredArtifactsChartsPatchOutput
	ToWarehouseStatusDiscoveredArtifactsChartsPatchOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsChartsPatchOutput
}

// ChartDiscoveryResult represents the result of a chart discovery operation for
// a ChartSubscription.
type WarehouseStatusDiscoveredArtifactsChartsPatchArgs struct {
	// Name is the name of the Helm chart, as specified in the ChartSubscription.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// RepoURL is the repository URL of the Helm chart, as specified in the
	// ChartSubscription.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
	// SemverConstraint is the constraint for which versions were discovered.
	// This field is optional, and only populated if the ChartSubscription
	// specifies a SemverConstraint.
	SemverConstraint pulumi.StringPtrInput `pulumi:"semverConstraint"`
	// Versions is a list of versions discovered by the Warehouse for the
	// ChartSubscription. An empty list indicates that the discovery operation was
	// successful, but no versions matching the ChartSubscription criteria were
	// found.
	Versions pulumi.StringArrayInput `pulumi:"versions"`
}

func (WarehouseStatusDiscoveredArtifactsChartsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsChartsPatch)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsChartsPatchArgs) ToWarehouseStatusDiscoveredArtifactsChartsPatchOutput() WarehouseStatusDiscoveredArtifactsChartsPatchOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsChartsPatchOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsChartsPatchArgs) ToWarehouseStatusDiscoveredArtifactsChartsPatchOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsChartsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsChartsPatchOutput)
}

// WarehouseStatusDiscoveredArtifactsChartsPatchArrayInput is an input type that accepts WarehouseStatusDiscoveredArtifactsChartsPatchArray and WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsChartsPatchArrayInput` via:
//
//	WarehouseStatusDiscoveredArtifactsChartsPatchArray{ WarehouseStatusDiscoveredArtifactsChartsPatchArgs{...} }
type WarehouseStatusDiscoveredArtifactsChartsPatchArrayInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput() WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput
	ToWarehouseStatusDiscoveredArtifactsChartsPatchArrayOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput
}

type WarehouseStatusDiscoveredArtifactsChartsPatchArray []WarehouseStatusDiscoveredArtifactsChartsPatchInput

func (WarehouseStatusDiscoveredArtifactsChartsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsChartsPatch)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsChartsPatchArray) ToWarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput() WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsChartsPatchArrayOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsChartsPatchArray) ToWarehouseStatusDiscoveredArtifactsChartsPatchArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput)
}

// ChartDiscoveryResult represents the result of a chart discovery operation for
// a ChartSubscription.
type WarehouseStatusDiscoveredArtifactsChartsPatchOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsChartsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsChartsPatch)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsChartsPatchOutput) ToWarehouseStatusDiscoveredArtifactsChartsPatchOutput() WarehouseStatusDiscoveredArtifactsChartsPatchOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsChartsPatchOutput) ToWarehouseStatusDiscoveredArtifactsChartsPatchOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsChartsPatchOutput {
	return o
}

// Name is the name of the Helm chart, as specified in the ChartSubscription.
func (o WarehouseStatusDiscoveredArtifactsChartsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsChartsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// RepoURL is the repository URL of the Helm chart, as specified in the
// ChartSubscription.
func (o WarehouseStatusDiscoveredArtifactsChartsPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsChartsPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

// SemverConstraint is the constraint for which versions were discovered.
// This field is optional, and only populated if the ChartSubscription
// specifies a SemverConstraint.
func (o WarehouseStatusDiscoveredArtifactsChartsPatchOutput) SemverConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsChartsPatch) *string { return v.SemverConstraint }).(pulumi.StringPtrOutput)
}

// Versions is a list of versions discovered by the Warehouse for the
// ChartSubscription. An empty list indicates that the discovery operation was
// successful, but no versions matching the ChartSubscription criteria were
// found.
func (o WarehouseStatusDiscoveredArtifactsChartsPatchOutput) Versions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsChartsPatch) []string { return v.Versions }).(pulumi.StringArrayOutput)
}

type WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsChartsPatch)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput) ToWarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput() WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput) ToWarehouseStatusDiscoveredArtifactsChartsPatchArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput) Index(i pulumi.IntInput) WarehouseStatusDiscoveredArtifactsChartsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseStatusDiscoveredArtifactsChartsPatch {
		return vs[0].([]WarehouseStatusDiscoveredArtifactsChartsPatch)[vs[1].(int)]
	}).(WarehouseStatusDiscoveredArtifactsChartsPatchOutput)
}

// GitDiscoveryResult represents the result of a Git discovery operation for a
// GitSubscription.
type WarehouseStatusDiscoveredArtifactsGit struct {
	// Commits is a list of commits discovered by the Warehouse for the
	// GitSubscription. An empty list indicates that the discovery operation was
	// successful, but no commits matching the GitSubscription criteria were found.
	Commits []WarehouseStatusDiscoveredArtifactsGitCommits `pulumi:"commits"`
	// RepoURL is the repository URL of the GitSubscription.
	RepoURL *string `pulumi:"repoURL"`
}

// WarehouseStatusDiscoveredArtifactsGitInput is an input type that accepts WarehouseStatusDiscoveredArtifactsGitArgs and WarehouseStatusDiscoveredArtifactsGitOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsGitInput` via:
//
//	WarehouseStatusDiscoveredArtifactsGitArgs{...}
type WarehouseStatusDiscoveredArtifactsGitInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsGitOutput() WarehouseStatusDiscoveredArtifactsGitOutput
	ToWarehouseStatusDiscoveredArtifactsGitOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsGitOutput
}

// GitDiscoveryResult represents the result of a Git discovery operation for a
// GitSubscription.
type WarehouseStatusDiscoveredArtifactsGitArgs struct {
	// Commits is a list of commits discovered by the Warehouse for the
	// GitSubscription. An empty list indicates that the discovery operation was
	// successful, but no commits matching the GitSubscription criteria were found.
	Commits WarehouseStatusDiscoveredArtifactsGitCommitsArrayInput `pulumi:"commits"`
	// RepoURL is the repository URL of the GitSubscription.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
}

func (WarehouseStatusDiscoveredArtifactsGitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGit)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsGitArgs) ToWarehouseStatusDiscoveredArtifactsGitOutput() WarehouseStatusDiscoveredArtifactsGitOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsGitOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsGitArgs) ToWarehouseStatusDiscoveredArtifactsGitOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsGitOutput)
}

// WarehouseStatusDiscoveredArtifactsGitArrayInput is an input type that accepts WarehouseStatusDiscoveredArtifactsGitArray and WarehouseStatusDiscoveredArtifactsGitArrayOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsGitArrayInput` via:
//
//	WarehouseStatusDiscoveredArtifactsGitArray{ WarehouseStatusDiscoveredArtifactsGitArgs{...} }
type WarehouseStatusDiscoveredArtifactsGitArrayInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsGitArrayOutput() WarehouseStatusDiscoveredArtifactsGitArrayOutput
	ToWarehouseStatusDiscoveredArtifactsGitArrayOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsGitArrayOutput
}

type WarehouseStatusDiscoveredArtifactsGitArray []WarehouseStatusDiscoveredArtifactsGitInput

func (WarehouseStatusDiscoveredArtifactsGitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsGit)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsGitArray) ToWarehouseStatusDiscoveredArtifactsGitArrayOutput() WarehouseStatusDiscoveredArtifactsGitArrayOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsGitArrayOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsGitArray) ToWarehouseStatusDiscoveredArtifactsGitArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsGitArrayOutput)
}

// GitDiscoveryResult represents the result of a Git discovery operation for a
// GitSubscription.
type WarehouseStatusDiscoveredArtifactsGitOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsGitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGit)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsGitOutput) ToWarehouseStatusDiscoveredArtifactsGitOutput() WarehouseStatusDiscoveredArtifactsGitOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsGitOutput) ToWarehouseStatusDiscoveredArtifactsGitOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitOutput {
	return o
}

// Commits is a list of commits discovered by the Warehouse for the
// GitSubscription. An empty list indicates that the discovery operation was
// successful, but no commits matching the GitSubscription criteria were found.
func (o WarehouseStatusDiscoveredArtifactsGitOutput) Commits() WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGit) []WarehouseStatusDiscoveredArtifactsGitCommits {
		return v.Commits
	}).(WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput)
}

// RepoURL is the repository URL of the GitSubscription.
func (o WarehouseStatusDiscoveredArtifactsGitOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGit) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

type WarehouseStatusDiscoveredArtifactsGitArrayOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsGitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsGit)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsGitArrayOutput) ToWarehouseStatusDiscoveredArtifactsGitArrayOutput() WarehouseStatusDiscoveredArtifactsGitArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsGitArrayOutput) ToWarehouseStatusDiscoveredArtifactsGitArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsGitArrayOutput) Index(i pulumi.IntInput) WarehouseStatusDiscoveredArtifactsGitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseStatusDiscoveredArtifactsGit {
		return vs[0].([]WarehouseStatusDiscoveredArtifactsGit)[vs[1].(int)]
	}).(WarehouseStatusDiscoveredArtifactsGitOutput)
}

// DiscoveredCommit represents a commit discovered by a Warehouse for a
// GitSubscription.
type WarehouseStatusDiscoveredArtifactsGitCommits struct {
	// Author is the author of the commit.
	Author *string `pulumi:"author"`
	// Branch is the branch in which the commit was found. This field is
	// optional, and populated based on the CommitSelectionStrategy of the
	// GitSubscription.
	Branch *string `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer *string `pulumi:"committer"`
	// CreatorDate is the commit creation date as specified by the commit, or
	// the tagger date if the commit belongs to an annotated tag.
	CreatorDate *string `pulumi:"creatorDate"`
	// ID is the identifier of the commit. This typically is a SHA-1 hash.
	Id *string `pulumi:"id"`
	// Subject is the subject of the commit (i.e. the first line of the commit
	// message).
	Subject *string `pulumi:"subject"`
	// Tag is the tag that resolved to this commit. This field is optional, and
	// populated based on the CommitSelectionStrategy of the GitSubscription.
	Tag *string `pulumi:"tag"`
}

// WarehouseStatusDiscoveredArtifactsGitCommitsInput is an input type that accepts WarehouseStatusDiscoveredArtifactsGitCommitsArgs and WarehouseStatusDiscoveredArtifactsGitCommitsOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsGitCommitsInput` via:
//
//	WarehouseStatusDiscoveredArtifactsGitCommitsArgs{...}
type WarehouseStatusDiscoveredArtifactsGitCommitsInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsGitCommitsOutput() WarehouseStatusDiscoveredArtifactsGitCommitsOutput
	ToWarehouseStatusDiscoveredArtifactsGitCommitsOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsGitCommitsOutput
}

// DiscoveredCommit represents a commit discovered by a Warehouse for a
// GitSubscription.
type WarehouseStatusDiscoveredArtifactsGitCommitsArgs struct {
	// Author is the author of the commit.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Branch is the branch in which the commit was found. This field is
	// optional, and populated based on the CommitSelectionStrategy of the
	// GitSubscription.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer pulumi.StringPtrInput `pulumi:"committer"`
	// CreatorDate is the commit creation date as specified by the commit, or
	// the tagger date if the commit belongs to an annotated tag.
	CreatorDate pulumi.StringPtrInput `pulumi:"creatorDate"`
	// ID is the identifier of the commit. This typically is a SHA-1 hash.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Subject is the subject of the commit (i.e. the first line of the commit
	// message).
	Subject pulumi.StringPtrInput `pulumi:"subject"`
	// Tag is the tag that resolved to this commit. This field is optional, and
	// populated based on the CommitSelectionStrategy of the GitSubscription.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (WarehouseStatusDiscoveredArtifactsGitCommitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGitCommits)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsGitCommitsArgs) ToWarehouseStatusDiscoveredArtifactsGitCommitsOutput() WarehouseStatusDiscoveredArtifactsGitCommitsOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsGitCommitsOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsGitCommitsArgs) ToWarehouseStatusDiscoveredArtifactsGitCommitsOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitCommitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsGitCommitsOutput)
}

// WarehouseStatusDiscoveredArtifactsGitCommitsArrayInput is an input type that accepts WarehouseStatusDiscoveredArtifactsGitCommitsArray and WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsGitCommitsArrayInput` via:
//
//	WarehouseStatusDiscoveredArtifactsGitCommitsArray{ WarehouseStatusDiscoveredArtifactsGitCommitsArgs{...} }
type WarehouseStatusDiscoveredArtifactsGitCommitsArrayInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput() WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput
	ToWarehouseStatusDiscoveredArtifactsGitCommitsArrayOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput
}

type WarehouseStatusDiscoveredArtifactsGitCommitsArray []WarehouseStatusDiscoveredArtifactsGitCommitsInput

func (WarehouseStatusDiscoveredArtifactsGitCommitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsGitCommits)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsGitCommitsArray) ToWarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput() WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsGitCommitsArrayOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsGitCommitsArray) ToWarehouseStatusDiscoveredArtifactsGitCommitsArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput)
}

// DiscoveredCommit represents a commit discovered by a Warehouse for a
// GitSubscription.
type WarehouseStatusDiscoveredArtifactsGitCommitsOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsGitCommitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGitCommits)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsGitCommitsOutput) ToWarehouseStatusDiscoveredArtifactsGitCommitsOutput() WarehouseStatusDiscoveredArtifactsGitCommitsOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsGitCommitsOutput) ToWarehouseStatusDiscoveredArtifactsGitCommitsOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitCommitsOutput {
	return o
}

// Author is the author of the commit.
func (o WarehouseStatusDiscoveredArtifactsGitCommitsOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitCommits) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Branch is the branch in which the commit was found. This field is
// optional, and populated based on the CommitSelectionStrategy of the
// GitSubscription.
func (o WarehouseStatusDiscoveredArtifactsGitCommitsOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitCommits) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Committer is the person who committed the commit.
func (o WarehouseStatusDiscoveredArtifactsGitCommitsOutput) Committer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitCommits) *string { return v.Committer }).(pulumi.StringPtrOutput)
}

// CreatorDate is the commit creation date as specified by the commit, or
// the tagger date if the commit belongs to an annotated tag.
func (o WarehouseStatusDiscoveredArtifactsGitCommitsOutput) CreatorDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitCommits) *string { return v.CreatorDate }).(pulumi.StringPtrOutput)
}

// ID is the identifier of the commit. This typically is a SHA-1 hash.
func (o WarehouseStatusDiscoveredArtifactsGitCommitsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitCommits) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Subject is the subject of the commit (i.e. the first line of the commit
// message).
func (o WarehouseStatusDiscoveredArtifactsGitCommitsOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitCommits) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// Tag is the tag that resolved to this commit. This field is optional, and
// populated based on the CommitSelectionStrategy of the GitSubscription.
func (o WarehouseStatusDiscoveredArtifactsGitCommitsOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitCommits) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsGitCommits)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput) ToWarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput() WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput) ToWarehouseStatusDiscoveredArtifactsGitCommitsArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput) Index(i pulumi.IntInput) WarehouseStatusDiscoveredArtifactsGitCommitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseStatusDiscoveredArtifactsGitCommits {
		return vs[0].([]WarehouseStatusDiscoveredArtifactsGitCommits)[vs[1].(int)]
	}).(WarehouseStatusDiscoveredArtifactsGitCommitsOutput)
}

// DiscoveredCommit represents a commit discovered by a Warehouse for a
// GitSubscription.
type WarehouseStatusDiscoveredArtifactsGitCommitsPatch struct {
	// Author is the author of the commit.
	Author *string `pulumi:"author"`
	// Branch is the branch in which the commit was found. This field is
	// optional, and populated based on the CommitSelectionStrategy of the
	// GitSubscription.
	Branch *string `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer *string `pulumi:"committer"`
	// CreatorDate is the commit creation date as specified by the commit, or
	// the tagger date if the commit belongs to an annotated tag.
	CreatorDate *string `pulumi:"creatorDate"`
	// ID is the identifier of the commit. This typically is a SHA-1 hash.
	Id *string `pulumi:"id"`
	// Subject is the subject of the commit (i.e. the first line of the commit
	// message).
	Subject *string `pulumi:"subject"`
	// Tag is the tag that resolved to this commit. This field is optional, and
	// populated based on the CommitSelectionStrategy of the GitSubscription.
	Tag *string `pulumi:"tag"`
}

// WarehouseStatusDiscoveredArtifactsGitCommitsPatchInput is an input type that accepts WarehouseStatusDiscoveredArtifactsGitCommitsPatchArgs and WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsGitCommitsPatchInput` via:
//
//	WarehouseStatusDiscoveredArtifactsGitCommitsPatchArgs{...}
type WarehouseStatusDiscoveredArtifactsGitCommitsPatchInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput() WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput
	ToWarehouseStatusDiscoveredArtifactsGitCommitsPatchOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput
}

// DiscoveredCommit represents a commit discovered by a Warehouse for a
// GitSubscription.
type WarehouseStatusDiscoveredArtifactsGitCommitsPatchArgs struct {
	// Author is the author of the commit.
	Author pulumi.StringPtrInput `pulumi:"author"`
	// Branch is the branch in which the commit was found. This field is
	// optional, and populated based on the CommitSelectionStrategy of the
	// GitSubscription.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Committer is the person who committed the commit.
	Committer pulumi.StringPtrInput `pulumi:"committer"`
	// CreatorDate is the commit creation date as specified by the commit, or
	// the tagger date if the commit belongs to an annotated tag.
	CreatorDate pulumi.StringPtrInput `pulumi:"creatorDate"`
	// ID is the identifier of the commit. This typically is a SHA-1 hash.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Subject is the subject of the commit (i.e. the first line of the commit
	// message).
	Subject pulumi.StringPtrInput `pulumi:"subject"`
	// Tag is the tag that resolved to this commit. This field is optional, and
	// populated based on the CommitSelectionStrategy of the GitSubscription.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (WarehouseStatusDiscoveredArtifactsGitCommitsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGitCommitsPatch)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsGitCommitsPatchArgs) ToWarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput() WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsGitCommitsPatchOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsGitCommitsPatchArgs) ToWarehouseStatusDiscoveredArtifactsGitCommitsPatchOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput)
}

// WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayInput is an input type that accepts WarehouseStatusDiscoveredArtifactsGitCommitsPatchArray and WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayInput` via:
//
//	WarehouseStatusDiscoveredArtifactsGitCommitsPatchArray{ WarehouseStatusDiscoveredArtifactsGitCommitsPatchArgs{...} }
type WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput() WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput
	ToWarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput
}

type WarehouseStatusDiscoveredArtifactsGitCommitsPatchArray []WarehouseStatusDiscoveredArtifactsGitCommitsPatchInput

func (WarehouseStatusDiscoveredArtifactsGitCommitsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsGitCommitsPatch)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsGitCommitsPatchArray) ToWarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput() WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsGitCommitsPatchArray) ToWarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput)
}

// DiscoveredCommit represents a commit discovered by a Warehouse for a
// GitSubscription.
type WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGitCommitsPatch)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput) ToWarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput() WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput) ToWarehouseStatusDiscoveredArtifactsGitCommitsPatchOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput {
	return o
}

// Author is the author of the commit.
func (o WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput) Author() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitCommitsPatch) *string { return v.Author }).(pulumi.StringPtrOutput)
}

// Branch is the branch in which the commit was found. This field is
// optional, and populated based on the CommitSelectionStrategy of the
// GitSubscription.
func (o WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitCommitsPatch) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Committer is the person who committed the commit.
func (o WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput) Committer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitCommitsPatch) *string { return v.Committer }).(pulumi.StringPtrOutput)
}

// CreatorDate is the commit creation date as specified by the commit, or
// the tagger date if the commit belongs to an annotated tag.
func (o WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput) CreatorDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitCommitsPatch) *string { return v.CreatorDate }).(pulumi.StringPtrOutput)
}

// ID is the identifier of the commit. This typically is a SHA-1 hash.
func (o WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitCommitsPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Subject is the subject of the commit (i.e. the first line of the commit
// message).
func (o WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitCommitsPatch) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// Tag is the tag that resolved to this commit. This field is optional, and
// populated based on the CommitSelectionStrategy of the GitSubscription.
func (o WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitCommitsPatch) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsGitCommitsPatch)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput) ToWarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput() WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput) ToWarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput) Index(i pulumi.IntInput) WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseStatusDiscoveredArtifactsGitCommitsPatch {
		return vs[0].([]WarehouseStatusDiscoveredArtifactsGitCommitsPatch)[vs[1].(int)]
	}).(WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput)
}

// GitDiscoveryResult represents the result of a Git discovery operation for a
// GitSubscription.
type WarehouseStatusDiscoveredArtifactsGitPatch struct {
	// Commits is a list of commits discovered by the Warehouse for the
	// GitSubscription. An empty list indicates that the discovery operation was
	// successful, but no commits matching the GitSubscription criteria were found.
	Commits []WarehouseStatusDiscoveredArtifactsGitCommitsPatch `pulumi:"commits"`
	// RepoURL is the repository URL of the GitSubscription.
	RepoURL *string `pulumi:"repoURL"`
}

// WarehouseStatusDiscoveredArtifactsGitPatchInput is an input type that accepts WarehouseStatusDiscoveredArtifactsGitPatchArgs and WarehouseStatusDiscoveredArtifactsGitPatchOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsGitPatchInput` via:
//
//	WarehouseStatusDiscoveredArtifactsGitPatchArgs{...}
type WarehouseStatusDiscoveredArtifactsGitPatchInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsGitPatchOutput() WarehouseStatusDiscoveredArtifactsGitPatchOutput
	ToWarehouseStatusDiscoveredArtifactsGitPatchOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsGitPatchOutput
}

// GitDiscoveryResult represents the result of a Git discovery operation for a
// GitSubscription.
type WarehouseStatusDiscoveredArtifactsGitPatchArgs struct {
	// Commits is a list of commits discovered by the Warehouse for the
	// GitSubscription. An empty list indicates that the discovery operation was
	// successful, but no commits matching the GitSubscription criteria were found.
	Commits WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayInput `pulumi:"commits"`
	// RepoURL is the repository URL of the GitSubscription.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
}

func (WarehouseStatusDiscoveredArtifactsGitPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGitPatch)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsGitPatchArgs) ToWarehouseStatusDiscoveredArtifactsGitPatchOutput() WarehouseStatusDiscoveredArtifactsGitPatchOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsGitPatchOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsGitPatchArgs) ToWarehouseStatusDiscoveredArtifactsGitPatchOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsGitPatchOutput)
}

// WarehouseStatusDiscoveredArtifactsGitPatchArrayInput is an input type that accepts WarehouseStatusDiscoveredArtifactsGitPatchArray and WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsGitPatchArrayInput` via:
//
//	WarehouseStatusDiscoveredArtifactsGitPatchArray{ WarehouseStatusDiscoveredArtifactsGitPatchArgs{...} }
type WarehouseStatusDiscoveredArtifactsGitPatchArrayInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsGitPatchArrayOutput() WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput
	ToWarehouseStatusDiscoveredArtifactsGitPatchArrayOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput
}

type WarehouseStatusDiscoveredArtifactsGitPatchArray []WarehouseStatusDiscoveredArtifactsGitPatchInput

func (WarehouseStatusDiscoveredArtifactsGitPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsGitPatch)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsGitPatchArray) ToWarehouseStatusDiscoveredArtifactsGitPatchArrayOutput() WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsGitPatchArrayOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsGitPatchArray) ToWarehouseStatusDiscoveredArtifactsGitPatchArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput)
}

// GitDiscoveryResult represents the result of a Git discovery operation for a
// GitSubscription.
type WarehouseStatusDiscoveredArtifactsGitPatchOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsGitPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGitPatch)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsGitPatchOutput) ToWarehouseStatusDiscoveredArtifactsGitPatchOutput() WarehouseStatusDiscoveredArtifactsGitPatchOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsGitPatchOutput) ToWarehouseStatusDiscoveredArtifactsGitPatchOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitPatchOutput {
	return o
}

// Commits is a list of commits discovered by the Warehouse for the
// GitSubscription. An empty list indicates that the discovery operation was
// successful, but no commits matching the GitSubscription criteria were found.
func (o WarehouseStatusDiscoveredArtifactsGitPatchOutput) Commits() WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitPatch) []WarehouseStatusDiscoveredArtifactsGitCommitsPatch {
		return v.Commits
	}).(WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput)
}

// RepoURL is the repository URL of the GitSubscription.
func (o WarehouseStatusDiscoveredArtifactsGitPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsGitPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

type WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsGitPatch)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput) ToWarehouseStatusDiscoveredArtifactsGitPatchArrayOutput() WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput) ToWarehouseStatusDiscoveredArtifactsGitPatchArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput) Index(i pulumi.IntInput) WarehouseStatusDiscoveredArtifactsGitPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseStatusDiscoveredArtifactsGitPatch {
		return vs[0].([]WarehouseStatusDiscoveredArtifactsGitPatch)[vs[1].(int)]
	}).(WarehouseStatusDiscoveredArtifactsGitPatchOutput)
}

// ImageDiscoveryResult represents the result of an image discovery operation
// for an ImageSubscription.
type WarehouseStatusDiscoveredArtifactsImages struct {
	// Platform is the target platform constraint of the ImageSubscription
	// for which references were discovered. This field is optional, and
	// only populated if the ImageSubscription specifies a Platform.
	Platform *string `pulumi:"platform"`
	// References is a list of image references discovered by the Warehouse for
	// the ImageSubscription. An empty list indicates that the discovery
	// operation was successful, but no images matching the ImageSubscription
	// criteria were found.
	References []WarehouseStatusDiscoveredArtifactsImagesReferences `pulumi:"references"`
	// RepoURL is the repository URL of the image, as specified in the
	// ImageSubscription.
	RepoURL *string `pulumi:"repoURL"`
}

// WarehouseStatusDiscoveredArtifactsImagesInput is an input type that accepts WarehouseStatusDiscoveredArtifactsImagesArgs and WarehouseStatusDiscoveredArtifactsImagesOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsImagesInput` via:
//
//	WarehouseStatusDiscoveredArtifactsImagesArgs{...}
type WarehouseStatusDiscoveredArtifactsImagesInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsImagesOutput() WarehouseStatusDiscoveredArtifactsImagesOutput
	ToWarehouseStatusDiscoveredArtifactsImagesOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsImagesOutput
}

// ImageDiscoveryResult represents the result of an image discovery operation
// for an ImageSubscription.
type WarehouseStatusDiscoveredArtifactsImagesArgs struct {
	// Platform is the target platform constraint of the ImageSubscription
	// for which references were discovered. This field is optional, and
	// only populated if the ImageSubscription specifies a Platform.
	Platform pulumi.StringPtrInput `pulumi:"platform"`
	// References is a list of image references discovered by the Warehouse for
	// the ImageSubscription. An empty list indicates that the discovery
	// operation was successful, but no images matching the ImageSubscription
	// criteria were found.
	References WarehouseStatusDiscoveredArtifactsImagesReferencesArrayInput `pulumi:"references"`
	// RepoURL is the repository URL of the image, as specified in the
	// ImageSubscription.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
}

func (WarehouseStatusDiscoveredArtifactsImagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImages)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsImagesArgs) ToWarehouseStatusDiscoveredArtifactsImagesOutput() WarehouseStatusDiscoveredArtifactsImagesOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsImagesOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsImagesArgs) ToWarehouseStatusDiscoveredArtifactsImagesOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsImagesOutput)
}

// WarehouseStatusDiscoveredArtifactsImagesArrayInput is an input type that accepts WarehouseStatusDiscoveredArtifactsImagesArray and WarehouseStatusDiscoveredArtifactsImagesArrayOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsImagesArrayInput` via:
//
//	WarehouseStatusDiscoveredArtifactsImagesArray{ WarehouseStatusDiscoveredArtifactsImagesArgs{...} }
type WarehouseStatusDiscoveredArtifactsImagesArrayInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsImagesArrayOutput() WarehouseStatusDiscoveredArtifactsImagesArrayOutput
	ToWarehouseStatusDiscoveredArtifactsImagesArrayOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsImagesArrayOutput
}

type WarehouseStatusDiscoveredArtifactsImagesArray []WarehouseStatusDiscoveredArtifactsImagesInput

func (WarehouseStatusDiscoveredArtifactsImagesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsImages)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsImagesArray) ToWarehouseStatusDiscoveredArtifactsImagesArrayOutput() WarehouseStatusDiscoveredArtifactsImagesArrayOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsImagesArrayOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsImagesArray) ToWarehouseStatusDiscoveredArtifactsImagesArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsImagesArrayOutput)
}

// ImageDiscoveryResult represents the result of an image discovery operation
// for an ImageSubscription.
type WarehouseStatusDiscoveredArtifactsImagesOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsImagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImages)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsImagesOutput) ToWarehouseStatusDiscoveredArtifactsImagesOutput() WarehouseStatusDiscoveredArtifactsImagesOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsImagesOutput) ToWarehouseStatusDiscoveredArtifactsImagesOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesOutput {
	return o
}

// Platform is the target platform constraint of the ImageSubscription
// for which references were discovered. This field is optional, and
// only populated if the ImageSubscription specifies a Platform.
func (o WarehouseStatusDiscoveredArtifactsImagesOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImages) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

// References is a list of image references discovered by the Warehouse for
// the ImageSubscription. An empty list indicates that the discovery
// operation was successful, but no images matching the ImageSubscription
// criteria were found.
func (o WarehouseStatusDiscoveredArtifactsImagesOutput) References() WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImages) []WarehouseStatusDiscoveredArtifactsImagesReferences {
		return v.References
	}).(WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput)
}

// RepoURL is the repository URL of the image, as specified in the
// ImageSubscription.
func (o WarehouseStatusDiscoveredArtifactsImagesOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImages) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

type WarehouseStatusDiscoveredArtifactsImagesArrayOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsImagesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsImages)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsImagesArrayOutput) ToWarehouseStatusDiscoveredArtifactsImagesArrayOutput() WarehouseStatusDiscoveredArtifactsImagesArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsImagesArrayOutput) ToWarehouseStatusDiscoveredArtifactsImagesArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsImagesArrayOutput) Index(i pulumi.IntInput) WarehouseStatusDiscoveredArtifactsImagesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseStatusDiscoveredArtifactsImages {
		return vs[0].([]WarehouseStatusDiscoveredArtifactsImages)[vs[1].(int)]
	}).(WarehouseStatusDiscoveredArtifactsImagesOutput)
}

// ImageDiscoveryResult represents the result of an image discovery operation
// for an ImageSubscription.
type WarehouseStatusDiscoveredArtifactsImagesPatch struct {
	// Platform is the target platform constraint of the ImageSubscription
	// for which references were discovered. This field is optional, and
	// only populated if the ImageSubscription specifies a Platform.
	Platform *string `pulumi:"platform"`
	// References is a list of image references discovered by the Warehouse for
	// the ImageSubscription. An empty list indicates that the discovery
	// operation was successful, but no images matching the ImageSubscription
	// criteria were found.
	References []WarehouseStatusDiscoveredArtifactsImagesReferencesPatch `pulumi:"references"`
	// RepoURL is the repository URL of the image, as specified in the
	// ImageSubscription.
	RepoURL *string `pulumi:"repoURL"`
}

// WarehouseStatusDiscoveredArtifactsImagesPatchInput is an input type that accepts WarehouseStatusDiscoveredArtifactsImagesPatchArgs and WarehouseStatusDiscoveredArtifactsImagesPatchOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsImagesPatchInput` via:
//
//	WarehouseStatusDiscoveredArtifactsImagesPatchArgs{...}
type WarehouseStatusDiscoveredArtifactsImagesPatchInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsImagesPatchOutput() WarehouseStatusDiscoveredArtifactsImagesPatchOutput
	ToWarehouseStatusDiscoveredArtifactsImagesPatchOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsImagesPatchOutput
}

// ImageDiscoveryResult represents the result of an image discovery operation
// for an ImageSubscription.
type WarehouseStatusDiscoveredArtifactsImagesPatchArgs struct {
	// Platform is the target platform constraint of the ImageSubscription
	// for which references were discovered. This field is optional, and
	// only populated if the ImageSubscription specifies a Platform.
	Platform pulumi.StringPtrInput `pulumi:"platform"`
	// References is a list of image references discovered by the Warehouse for
	// the ImageSubscription. An empty list indicates that the discovery
	// operation was successful, but no images matching the ImageSubscription
	// criteria were found.
	References WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayInput `pulumi:"references"`
	// RepoURL is the repository URL of the image, as specified in the
	// ImageSubscription.
	RepoURL pulumi.StringPtrInput `pulumi:"repoURL"`
}

func (WarehouseStatusDiscoveredArtifactsImagesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImagesPatch)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsImagesPatchArgs) ToWarehouseStatusDiscoveredArtifactsImagesPatchOutput() WarehouseStatusDiscoveredArtifactsImagesPatchOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsImagesPatchOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsImagesPatchArgs) ToWarehouseStatusDiscoveredArtifactsImagesPatchOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsImagesPatchOutput)
}

// WarehouseStatusDiscoveredArtifactsImagesPatchArrayInput is an input type that accepts WarehouseStatusDiscoveredArtifactsImagesPatchArray and WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsImagesPatchArrayInput` via:
//
//	WarehouseStatusDiscoveredArtifactsImagesPatchArray{ WarehouseStatusDiscoveredArtifactsImagesPatchArgs{...} }
type WarehouseStatusDiscoveredArtifactsImagesPatchArrayInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput() WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput
	ToWarehouseStatusDiscoveredArtifactsImagesPatchArrayOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput
}

type WarehouseStatusDiscoveredArtifactsImagesPatchArray []WarehouseStatusDiscoveredArtifactsImagesPatchInput

func (WarehouseStatusDiscoveredArtifactsImagesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsImagesPatch)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsImagesPatchArray) ToWarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput() WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsImagesPatchArrayOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsImagesPatchArray) ToWarehouseStatusDiscoveredArtifactsImagesPatchArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput)
}

// ImageDiscoveryResult represents the result of an image discovery operation
// for an ImageSubscription.
type WarehouseStatusDiscoveredArtifactsImagesPatchOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsImagesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImagesPatch)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsImagesPatchOutput) ToWarehouseStatusDiscoveredArtifactsImagesPatchOutput() WarehouseStatusDiscoveredArtifactsImagesPatchOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsImagesPatchOutput) ToWarehouseStatusDiscoveredArtifactsImagesPatchOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesPatchOutput {
	return o
}

// Platform is the target platform constraint of the ImageSubscription
// for which references were discovered. This field is optional, and
// only populated if the ImageSubscription specifies a Platform.
func (o WarehouseStatusDiscoveredArtifactsImagesPatchOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImagesPatch) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

// References is a list of image references discovered by the Warehouse for
// the ImageSubscription. An empty list indicates that the discovery
// operation was successful, but no images matching the ImageSubscription
// criteria were found.
func (o WarehouseStatusDiscoveredArtifactsImagesPatchOutput) References() WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImagesPatch) []WarehouseStatusDiscoveredArtifactsImagesReferencesPatch {
		return v.References
	}).(WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput)
}

// RepoURL is the repository URL of the image, as specified in the
// ImageSubscription.
func (o WarehouseStatusDiscoveredArtifactsImagesPatchOutput) RepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImagesPatch) *string { return v.RepoURL }).(pulumi.StringPtrOutput)
}

type WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsImagesPatch)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput) ToWarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput() WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput) ToWarehouseStatusDiscoveredArtifactsImagesPatchArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput) Index(i pulumi.IntInput) WarehouseStatusDiscoveredArtifactsImagesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseStatusDiscoveredArtifactsImagesPatch {
		return vs[0].([]WarehouseStatusDiscoveredArtifactsImagesPatch)[vs[1].(int)]
	}).(WarehouseStatusDiscoveredArtifactsImagesPatchOutput)
}

// DiscoveredImageReference represents an image reference discovered by a
// Warehouse for an ImageSubscription.
type WarehouseStatusDiscoveredArtifactsImagesReferences struct {
	// Annotations is a map of key-value pairs that provide additional
	// information about the image.
	Annotations map[string]string `pulumi:"annotations"`
	// CreatedAt is the time the image was created. This field is optional, and
	// not populated for every ImageSelectionStrategy.
	CreatedAt *string `pulumi:"createdAt"`
	// Digest is the digest of the image.
	Digest *string `pulumi:"digest"`
	// GitRepoURL is the URL of the Git repository that contains the source
	// code for this image. This field is optional, and only populated if the
	// ImageSubscription specifies a GitRepoURL.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// Tag is the tag of the image.
	Tag *string `pulumi:"tag"`
}

// WarehouseStatusDiscoveredArtifactsImagesReferencesInput is an input type that accepts WarehouseStatusDiscoveredArtifactsImagesReferencesArgs and WarehouseStatusDiscoveredArtifactsImagesReferencesOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsImagesReferencesInput` via:
//
//	WarehouseStatusDiscoveredArtifactsImagesReferencesArgs{...}
type WarehouseStatusDiscoveredArtifactsImagesReferencesInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsImagesReferencesOutput() WarehouseStatusDiscoveredArtifactsImagesReferencesOutput
	ToWarehouseStatusDiscoveredArtifactsImagesReferencesOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsImagesReferencesOutput
}

// DiscoveredImageReference represents an image reference discovered by a
// Warehouse for an ImageSubscription.
type WarehouseStatusDiscoveredArtifactsImagesReferencesArgs struct {
	// Annotations is a map of key-value pairs that provide additional
	// information about the image.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// CreatedAt is the time the image was created. This field is optional, and
	// not populated for every ImageSelectionStrategy.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// Digest is the digest of the image.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// GitRepoURL is the URL of the Git repository that contains the source
	// code for this image. This field is optional, and only populated if the
	// ImageSubscription specifies a GitRepoURL.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// Tag is the tag of the image.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (WarehouseStatusDiscoveredArtifactsImagesReferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImagesReferences)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsImagesReferencesArgs) ToWarehouseStatusDiscoveredArtifactsImagesReferencesOutput() WarehouseStatusDiscoveredArtifactsImagesReferencesOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsImagesReferencesOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsImagesReferencesArgs) ToWarehouseStatusDiscoveredArtifactsImagesReferencesOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesReferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsImagesReferencesOutput)
}

// WarehouseStatusDiscoveredArtifactsImagesReferencesArrayInput is an input type that accepts WarehouseStatusDiscoveredArtifactsImagesReferencesArray and WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsImagesReferencesArrayInput` via:
//
//	WarehouseStatusDiscoveredArtifactsImagesReferencesArray{ WarehouseStatusDiscoveredArtifactsImagesReferencesArgs{...} }
type WarehouseStatusDiscoveredArtifactsImagesReferencesArrayInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput() WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput
	ToWarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput
}

type WarehouseStatusDiscoveredArtifactsImagesReferencesArray []WarehouseStatusDiscoveredArtifactsImagesReferencesInput

func (WarehouseStatusDiscoveredArtifactsImagesReferencesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsImagesReferences)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsImagesReferencesArray) ToWarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput() WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsImagesReferencesArray) ToWarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput)
}

// DiscoveredImageReference represents an image reference discovered by a
// Warehouse for an ImageSubscription.
type WarehouseStatusDiscoveredArtifactsImagesReferencesOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsImagesReferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImagesReferences)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsImagesReferencesOutput) ToWarehouseStatusDiscoveredArtifactsImagesReferencesOutput() WarehouseStatusDiscoveredArtifactsImagesReferencesOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsImagesReferencesOutput) ToWarehouseStatusDiscoveredArtifactsImagesReferencesOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesReferencesOutput {
	return o
}

// Annotations is a map of key-value pairs that provide additional
// information about the image.
func (o WarehouseStatusDiscoveredArtifactsImagesReferencesOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImagesReferences) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// CreatedAt is the time the image was created. This field is optional, and
// not populated for every ImageSelectionStrategy.
func (o WarehouseStatusDiscoveredArtifactsImagesReferencesOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImagesReferences) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Digest is the digest of the image.
func (o WarehouseStatusDiscoveredArtifactsImagesReferencesOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImagesReferences) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// GitRepoURL is the URL of the Git repository that contains the source
// code for this image. This field is optional, and only populated if the
// ImageSubscription specifies a GitRepoURL.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o WarehouseStatusDiscoveredArtifactsImagesReferencesOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImagesReferences) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// Tag is the tag of the image.
func (o WarehouseStatusDiscoveredArtifactsImagesReferencesOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImagesReferences) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsImagesReferences)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput) ToWarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput() WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput) ToWarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput) Index(i pulumi.IntInput) WarehouseStatusDiscoveredArtifactsImagesReferencesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseStatusDiscoveredArtifactsImagesReferences {
		return vs[0].([]WarehouseStatusDiscoveredArtifactsImagesReferences)[vs[1].(int)]
	}).(WarehouseStatusDiscoveredArtifactsImagesReferencesOutput)
}

// DiscoveredImageReference represents an image reference discovered by a
// Warehouse for an ImageSubscription.
type WarehouseStatusDiscoveredArtifactsImagesReferencesPatch struct {
	// Annotations is a map of key-value pairs that provide additional
	// information about the image.
	Annotations map[string]string `pulumi:"annotations"`
	// CreatedAt is the time the image was created. This field is optional, and
	// not populated for every ImageSelectionStrategy.
	CreatedAt *string `pulumi:"createdAt"`
	// Digest is the digest of the image.
	Digest *string `pulumi:"digest"`
	// GitRepoURL is the URL of the Git repository that contains the source
	// code for this image. This field is optional, and only populated if the
	// ImageSubscription specifies a GitRepoURL.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL *string `pulumi:"gitRepoURL"`
	// Tag is the tag of the image.
	Tag *string `pulumi:"tag"`
}

// WarehouseStatusDiscoveredArtifactsImagesReferencesPatchInput is an input type that accepts WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArgs and WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsImagesReferencesPatchInput` via:
//
//	WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArgs{...}
type WarehouseStatusDiscoveredArtifactsImagesReferencesPatchInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput() WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput
	ToWarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput
}

// DiscoveredImageReference represents an image reference discovered by a
// Warehouse for an ImageSubscription.
type WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArgs struct {
	// Annotations is a map of key-value pairs that provide additional
	// information about the image.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// CreatedAt is the time the image was created. This field is optional, and
	// not populated for every ImageSelectionStrategy.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// Digest is the digest of the image.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// GitRepoURL is the URL of the Git repository that contains the source
	// code for this image. This field is optional, and only populated if the
	// ImageSubscription specifies a GitRepoURL.
	//
	// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
	GitRepoURL pulumi.StringPtrInput `pulumi:"gitRepoURL"`
	// Tag is the tag of the image.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImagesReferencesPatch)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArgs) ToWarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput() WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArgs) ToWarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput)
}

// WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayInput is an input type that accepts WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArray and WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayInput` via:
//
//	WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArray{ WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArgs{...} }
type WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput() WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput
	ToWarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput
}

type WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArray []WarehouseStatusDiscoveredArtifactsImagesReferencesPatchInput

func (WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsImagesReferencesPatch)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArray) ToWarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput() WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArray) ToWarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput)
}

// DiscoveredImageReference represents an image reference discovered by a
// Warehouse for an ImageSubscription.
type WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImagesReferencesPatch)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput) ToWarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput() WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput) ToWarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput {
	return o
}

// Annotations is a map of key-value pairs that provide additional
// information about the image.
func (o WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImagesReferencesPatch) map[string]string {
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// CreatedAt is the time the image was created. This field is optional, and
// not populated for every ImageSelectionStrategy.
func (o WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImagesReferencesPatch) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Digest is the digest of the image.
func (o WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImagesReferencesPatch) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// GitRepoURL is the URL of the Git repository that contains the source
// code for this image. This field is optional, and only populated if the
// ImageSubscription specifies a GitRepoURL.
//
// Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
func (o WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput) GitRepoURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImagesReferencesPatch) *string { return v.GitRepoURL }).(pulumi.StringPtrOutput)
}

// Tag is the tag of the image.
func (o WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsImagesReferencesPatch) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WarehouseStatusDiscoveredArtifactsImagesReferencesPatch)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput) ToWarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput() WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput) ToWarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput) Index(i pulumi.IntInput) WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WarehouseStatusDiscoveredArtifactsImagesReferencesPatch {
		return vs[0].([]WarehouseStatusDiscoveredArtifactsImagesReferencesPatch)[vs[1].(int)]
	}).(WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput)
}

// DiscoveredArtifacts holds the artifacts discovered by the Warehouse.
type WarehouseStatusDiscoveredArtifactsPatch struct {
	// Charts holds the charts discovered by the Warehouse for the chart
	// subscriptions.
	Charts []WarehouseStatusDiscoveredArtifactsChartsPatch `pulumi:"charts"`
	// DiscoveredAt is the time at which the Warehouse discovered the artifacts.
	DiscoveredAt *string `pulumi:"discoveredAt"`
	// Git holds the commits discovered by the Warehouse for the Git
	// subscriptions.
	Git []WarehouseStatusDiscoveredArtifactsGitPatch `pulumi:"git"`
	// Images holds the image references discovered by the Warehouse for the
	// image subscriptions.
	Images []WarehouseStatusDiscoveredArtifactsImagesPatch `pulumi:"images"`
}

// WarehouseStatusDiscoveredArtifactsPatchInput is an input type that accepts WarehouseStatusDiscoveredArtifactsPatchArgs and WarehouseStatusDiscoveredArtifactsPatchOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsPatchInput` via:
//
//	WarehouseStatusDiscoveredArtifactsPatchArgs{...}
type WarehouseStatusDiscoveredArtifactsPatchInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsPatchOutput() WarehouseStatusDiscoveredArtifactsPatchOutput
	ToWarehouseStatusDiscoveredArtifactsPatchOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsPatchOutput
}

// DiscoveredArtifacts holds the artifacts discovered by the Warehouse.
type WarehouseStatusDiscoveredArtifactsPatchArgs struct {
	// Charts holds the charts discovered by the Warehouse for the chart
	// subscriptions.
	Charts WarehouseStatusDiscoveredArtifactsChartsPatchArrayInput `pulumi:"charts"`
	// DiscoveredAt is the time at which the Warehouse discovered the artifacts.
	DiscoveredAt pulumi.StringPtrInput `pulumi:"discoveredAt"`
	// Git holds the commits discovered by the Warehouse for the Git
	// subscriptions.
	Git WarehouseStatusDiscoveredArtifactsGitPatchArrayInput `pulumi:"git"`
	// Images holds the image references discovered by the Warehouse for the
	// image subscriptions.
	Images WarehouseStatusDiscoveredArtifactsImagesPatchArrayInput `pulumi:"images"`
}

func (WarehouseStatusDiscoveredArtifactsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsPatch)(nil)).Elem()
}

func (i WarehouseStatusDiscoveredArtifactsPatchArgs) ToWarehouseStatusDiscoveredArtifactsPatchOutput() WarehouseStatusDiscoveredArtifactsPatchOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsPatchOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsPatchArgs) ToWarehouseStatusDiscoveredArtifactsPatchOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsPatchOutput)
}

func (i WarehouseStatusDiscoveredArtifactsPatchArgs) ToWarehouseStatusDiscoveredArtifactsPatchPtrOutput() WarehouseStatusDiscoveredArtifactsPatchPtrOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsPatchPtrOutputWithContext(context.Background())
}

func (i WarehouseStatusDiscoveredArtifactsPatchArgs) ToWarehouseStatusDiscoveredArtifactsPatchPtrOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsPatchOutput).ToWarehouseStatusDiscoveredArtifactsPatchPtrOutputWithContext(ctx)
}

// WarehouseStatusDiscoveredArtifactsPatchPtrInput is an input type that accepts WarehouseStatusDiscoveredArtifactsPatchArgs, WarehouseStatusDiscoveredArtifactsPatchPtr and WarehouseStatusDiscoveredArtifactsPatchPtrOutput values.
// You can construct a concrete instance of `WarehouseStatusDiscoveredArtifactsPatchPtrInput` via:
//
//	        WarehouseStatusDiscoveredArtifactsPatchArgs{...}
//
//	or:
//
//	        nil
type WarehouseStatusDiscoveredArtifactsPatchPtrInput interface {
	pulumi.Input

	ToWarehouseStatusDiscoveredArtifactsPatchPtrOutput() WarehouseStatusDiscoveredArtifactsPatchPtrOutput
	ToWarehouseStatusDiscoveredArtifactsPatchPtrOutputWithContext(context.Context) WarehouseStatusDiscoveredArtifactsPatchPtrOutput
}

type warehouseStatusDiscoveredArtifactsPatchPtrType WarehouseStatusDiscoveredArtifactsPatchArgs

func WarehouseStatusDiscoveredArtifactsPatchPtr(v *WarehouseStatusDiscoveredArtifactsPatchArgs) WarehouseStatusDiscoveredArtifactsPatchPtrInput {
	return (*warehouseStatusDiscoveredArtifactsPatchPtrType)(v)
}

func (*warehouseStatusDiscoveredArtifactsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseStatusDiscoveredArtifactsPatch)(nil)).Elem()
}

func (i *warehouseStatusDiscoveredArtifactsPatchPtrType) ToWarehouseStatusDiscoveredArtifactsPatchPtrOutput() WarehouseStatusDiscoveredArtifactsPatchPtrOutput {
	return i.ToWarehouseStatusDiscoveredArtifactsPatchPtrOutputWithContext(context.Background())
}

func (i *warehouseStatusDiscoveredArtifactsPatchPtrType) ToWarehouseStatusDiscoveredArtifactsPatchPtrOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusDiscoveredArtifactsPatchPtrOutput)
}

// DiscoveredArtifacts holds the artifacts discovered by the Warehouse.
type WarehouseStatusDiscoveredArtifactsPatchOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsPatch)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsPatchOutput) ToWarehouseStatusDiscoveredArtifactsPatchOutput() WarehouseStatusDiscoveredArtifactsPatchOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsPatchOutput) ToWarehouseStatusDiscoveredArtifactsPatchOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsPatchOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsPatchOutput) ToWarehouseStatusDiscoveredArtifactsPatchPtrOutput() WarehouseStatusDiscoveredArtifactsPatchPtrOutput {
	return o.ToWarehouseStatusDiscoveredArtifactsPatchPtrOutputWithContext(context.Background())
}

func (o WarehouseStatusDiscoveredArtifactsPatchOutput) ToWarehouseStatusDiscoveredArtifactsPatchPtrOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WarehouseStatusDiscoveredArtifactsPatch) *WarehouseStatusDiscoveredArtifactsPatch {
		return &v
	}).(WarehouseStatusDiscoveredArtifactsPatchPtrOutput)
}

// Charts holds the charts discovered by the Warehouse for the chart
// subscriptions.
func (o WarehouseStatusDiscoveredArtifactsPatchOutput) Charts() WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsPatch) []WarehouseStatusDiscoveredArtifactsChartsPatch {
		return v.Charts
	}).(WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput)
}

// DiscoveredAt is the time at which the Warehouse discovered the artifacts.
func (o WarehouseStatusDiscoveredArtifactsPatchOutput) DiscoveredAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsPatch) *string { return v.DiscoveredAt }).(pulumi.StringPtrOutput)
}

// Git holds the commits discovered by the Warehouse for the Git
// subscriptions.
func (o WarehouseStatusDiscoveredArtifactsPatchOutput) Git() WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsPatch) []WarehouseStatusDiscoveredArtifactsGitPatch {
		return v.Git
	}).(WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput)
}

// Images holds the image references discovered by the Warehouse for the
// image subscriptions.
func (o WarehouseStatusDiscoveredArtifactsPatchOutput) Images() WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput {
	return o.ApplyT(func(v WarehouseStatusDiscoveredArtifactsPatch) []WarehouseStatusDiscoveredArtifactsImagesPatch {
		return v.Images
	}).(WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput)
}

type WarehouseStatusDiscoveredArtifactsPatchPtrOutput struct{ *pulumi.OutputState }

func (WarehouseStatusDiscoveredArtifactsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseStatusDiscoveredArtifactsPatch)(nil)).Elem()
}

func (o WarehouseStatusDiscoveredArtifactsPatchPtrOutput) ToWarehouseStatusDiscoveredArtifactsPatchPtrOutput() WarehouseStatusDiscoveredArtifactsPatchPtrOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsPatchPtrOutput) ToWarehouseStatusDiscoveredArtifactsPatchPtrOutputWithContext(ctx context.Context) WarehouseStatusDiscoveredArtifactsPatchPtrOutput {
	return o
}

func (o WarehouseStatusDiscoveredArtifactsPatchPtrOutput) Elem() WarehouseStatusDiscoveredArtifactsPatchOutput {
	return o.ApplyT(func(v *WarehouseStatusDiscoveredArtifactsPatch) WarehouseStatusDiscoveredArtifactsPatch {
		if v != nil {
			return *v
		}
		var ret WarehouseStatusDiscoveredArtifactsPatch
		return ret
	}).(WarehouseStatusDiscoveredArtifactsPatchOutput)
}

// Charts holds the charts discovered by the Warehouse for the chart
// subscriptions.
func (o WarehouseStatusDiscoveredArtifactsPatchPtrOutput) Charts() WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput {
	return o.ApplyT(func(v *WarehouseStatusDiscoveredArtifactsPatch) []WarehouseStatusDiscoveredArtifactsChartsPatch {
		if v == nil {
			return nil
		}
		return v.Charts
	}).(WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput)
}

// DiscoveredAt is the time at which the Warehouse discovered the artifacts.
func (o WarehouseStatusDiscoveredArtifactsPatchPtrOutput) DiscoveredAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseStatusDiscoveredArtifactsPatch) *string {
		if v == nil {
			return nil
		}
		return v.DiscoveredAt
	}).(pulumi.StringPtrOutput)
}

// Git holds the commits discovered by the Warehouse for the Git
// subscriptions.
func (o WarehouseStatusDiscoveredArtifactsPatchPtrOutput) Git() WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput {
	return o.ApplyT(func(v *WarehouseStatusDiscoveredArtifactsPatch) []WarehouseStatusDiscoveredArtifactsGitPatch {
		if v == nil {
			return nil
		}
		return v.Git
	}).(WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput)
}

// Images holds the image references discovered by the Warehouse for the
// image subscriptions.
func (o WarehouseStatusDiscoveredArtifactsPatchPtrOutput) Images() WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput {
	return o.ApplyT(func(v *WarehouseStatusDiscoveredArtifactsPatch) []WarehouseStatusDiscoveredArtifactsImagesPatch {
		if v == nil {
			return nil
		}
		return v.Images
	}).(WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput)
}

// Status describes the Warehouse's most recently observed state.
type WarehouseStatusPatch struct {
	// Conditions contains the last observations of the Warehouse's current
	// state.
	Conditions          []WarehouseStatusConditionsPatch         `pulumi:"conditions"`
	DiscoveredArtifacts *WarehouseStatusDiscoveredArtifactsPatch `pulumi:"discoveredArtifacts"`
	// LastFreightID is a reference to the system-assigned identifier (name) of
	// the most recent Freight produced by the Warehouse.
	LastFreightID *string `pulumi:"lastFreightID"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh *string `pulumi:"lastHandledRefresh"`
	// ObservedGeneration represents the .metadata.generation that this Warehouse
	// was reconciled against.
	ObservedGeneration *int `pulumi:"observedGeneration"`
}

// WarehouseStatusPatchInput is an input type that accepts WarehouseStatusPatchArgs and WarehouseStatusPatchOutput values.
// You can construct a concrete instance of `WarehouseStatusPatchInput` via:
//
//	WarehouseStatusPatchArgs{...}
type WarehouseStatusPatchInput interface {
	pulumi.Input

	ToWarehouseStatusPatchOutput() WarehouseStatusPatchOutput
	ToWarehouseStatusPatchOutputWithContext(context.Context) WarehouseStatusPatchOutput
}

// Status describes the Warehouse's most recently observed state.
type WarehouseStatusPatchArgs struct {
	// Conditions contains the last observations of the Warehouse's current
	// state.
	Conditions          WarehouseStatusConditionsPatchArrayInput        `pulumi:"conditions"`
	DiscoveredArtifacts WarehouseStatusDiscoveredArtifactsPatchPtrInput `pulumi:"discoveredArtifacts"`
	// LastFreightID is a reference to the system-assigned identifier (name) of
	// the most recent Freight produced by the Warehouse.
	LastFreightID pulumi.StringPtrInput `pulumi:"lastFreightID"`
	// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
	// annotation that was handled by the controller. This field can be used to
	// determine whether the request to refresh the resource has been handled.
	LastHandledRefresh pulumi.StringPtrInput `pulumi:"lastHandledRefresh"`
	// ObservedGeneration represents the .metadata.generation that this Warehouse
	// was reconciled against.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
}

func (WarehouseStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusPatch)(nil)).Elem()
}

func (i WarehouseStatusPatchArgs) ToWarehouseStatusPatchOutput() WarehouseStatusPatchOutput {
	return i.ToWarehouseStatusPatchOutputWithContext(context.Background())
}

func (i WarehouseStatusPatchArgs) ToWarehouseStatusPatchOutputWithContext(ctx context.Context) WarehouseStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusPatchOutput)
}

func (i WarehouseStatusPatchArgs) ToWarehouseStatusPatchPtrOutput() WarehouseStatusPatchPtrOutput {
	return i.ToWarehouseStatusPatchPtrOutputWithContext(context.Background())
}

func (i WarehouseStatusPatchArgs) ToWarehouseStatusPatchPtrOutputWithContext(ctx context.Context) WarehouseStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusPatchOutput).ToWarehouseStatusPatchPtrOutputWithContext(ctx)
}

// WarehouseStatusPatchPtrInput is an input type that accepts WarehouseStatusPatchArgs, WarehouseStatusPatchPtr and WarehouseStatusPatchPtrOutput values.
// You can construct a concrete instance of `WarehouseStatusPatchPtrInput` via:
//
//	        WarehouseStatusPatchArgs{...}
//
//	or:
//
//	        nil
type WarehouseStatusPatchPtrInput interface {
	pulumi.Input

	ToWarehouseStatusPatchPtrOutput() WarehouseStatusPatchPtrOutput
	ToWarehouseStatusPatchPtrOutputWithContext(context.Context) WarehouseStatusPatchPtrOutput
}

type warehouseStatusPatchPtrType WarehouseStatusPatchArgs

func WarehouseStatusPatchPtr(v *WarehouseStatusPatchArgs) WarehouseStatusPatchPtrInput {
	return (*warehouseStatusPatchPtrType)(v)
}

func (*warehouseStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseStatusPatch)(nil)).Elem()
}

func (i *warehouseStatusPatchPtrType) ToWarehouseStatusPatchPtrOutput() WarehouseStatusPatchPtrOutput {
	return i.ToWarehouseStatusPatchPtrOutputWithContext(context.Background())
}

func (i *warehouseStatusPatchPtrType) ToWarehouseStatusPatchPtrOutputWithContext(ctx context.Context) WarehouseStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarehouseStatusPatchPtrOutput)
}

// Status describes the Warehouse's most recently observed state.
type WarehouseStatusPatchOutput struct{ *pulumi.OutputState }

func (WarehouseStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarehouseStatusPatch)(nil)).Elem()
}

func (o WarehouseStatusPatchOutput) ToWarehouseStatusPatchOutput() WarehouseStatusPatchOutput {
	return o
}

func (o WarehouseStatusPatchOutput) ToWarehouseStatusPatchOutputWithContext(ctx context.Context) WarehouseStatusPatchOutput {
	return o
}

func (o WarehouseStatusPatchOutput) ToWarehouseStatusPatchPtrOutput() WarehouseStatusPatchPtrOutput {
	return o.ToWarehouseStatusPatchPtrOutputWithContext(context.Background())
}

func (o WarehouseStatusPatchOutput) ToWarehouseStatusPatchPtrOutputWithContext(ctx context.Context) WarehouseStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WarehouseStatusPatch) *WarehouseStatusPatch {
		return &v
	}).(WarehouseStatusPatchPtrOutput)
}

// Conditions contains the last observations of the Warehouse's current
// state.
func (o WarehouseStatusPatchOutput) Conditions() WarehouseStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v WarehouseStatusPatch) []WarehouseStatusConditionsPatch { return v.Conditions }).(WarehouseStatusConditionsPatchArrayOutput)
}

func (o WarehouseStatusPatchOutput) DiscoveredArtifacts() WarehouseStatusDiscoveredArtifactsPatchPtrOutput {
	return o.ApplyT(func(v WarehouseStatusPatch) *WarehouseStatusDiscoveredArtifactsPatch { return v.DiscoveredArtifacts }).(WarehouseStatusDiscoveredArtifactsPatchPtrOutput)
}

// LastFreightID is a reference to the system-assigned identifier (name) of
// the most recent Freight produced by the Warehouse.
func (o WarehouseStatusPatchOutput) LastFreightID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusPatch) *string { return v.LastFreightID }).(pulumi.StringPtrOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o WarehouseStatusPatchOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarehouseStatusPatch) *string { return v.LastHandledRefresh }).(pulumi.StringPtrOutput)
}

// ObservedGeneration represents the .metadata.generation that this Warehouse
// was reconciled against.
func (o WarehouseStatusPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarehouseStatusPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

type WarehouseStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (WarehouseStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarehouseStatusPatch)(nil)).Elem()
}

func (o WarehouseStatusPatchPtrOutput) ToWarehouseStatusPatchPtrOutput() WarehouseStatusPatchPtrOutput {
	return o
}

func (o WarehouseStatusPatchPtrOutput) ToWarehouseStatusPatchPtrOutputWithContext(ctx context.Context) WarehouseStatusPatchPtrOutput {
	return o
}

func (o WarehouseStatusPatchPtrOutput) Elem() WarehouseStatusPatchOutput {
	return o.ApplyT(func(v *WarehouseStatusPatch) WarehouseStatusPatch {
		if v != nil {
			return *v
		}
		var ret WarehouseStatusPatch
		return ret
	}).(WarehouseStatusPatchOutput)
}

// Conditions contains the last observations of the Warehouse's current
// state.
func (o WarehouseStatusPatchPtrOutput) Conditions() WarehouseStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v *WarehouseStatusPatch) []WarehouseStatusConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(WarehouseStatusConditionsPatchArrayOutput)
}

func (o WarehouseStatusPatchPtrOutput) DiscoveredArtifacts() WarehouseStatusDiscoveredArtifactsPatchPtrOutput {
	return o.ApplyT(func(v *WarehouseStatusPatch) *WarehouseStatusDiscoveredArtifactsPatch {
		if v == nil {
			return nil
		}
		return v.DiscoveredArtifacts
	}).(WarehouseStatusDiscoveredArtifactsPatchPtrOutput)
}

// LastFreightID is a reference to the system-assigned identifier (name) of
// the most recent Freight produced by the Warehouse.
func (o WarehouseStatusPatchPtrOutput) LastFreightID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.LastFreightID
	}).(pulumi.StringPtrOutput)
}

// LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
// annotation that was handled by the controller. This field can be used to
// determine whether the request to refresh the resource has been handled.
func (o WarehouseStatusPatchPtrOutput) LastHandledRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarehouseStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.LastHandledRefresh
	}).(pulumi.StringPtrOutput)
}

// ObservedGeneration represents the .metadata.generation that this Warehouse
// was reconciled against.
func (o WarehouseStatusPatchPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WarehouseStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskTypeInput)(nil)).Elem(), ClusterPromotionTaskTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskTypeArrayInput)(nil)).Elem(), ClusterPromotionTaskTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskListTypeInput)(nil)).Elem(), ClusterPromotionTaskListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskPatchTypeInput)(nil)).Elem(), ClusterPromotionTaskPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecInput)(nil)).Elem(), ClusterPromotionTaskSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecPtrInput)(nil)).Elem(), ClusterPromotionTaskSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecPatchInput)(nil)).Elem(), ClusterPromotionTaskSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecPatchPtrInput)(nil)).Elem(), ClusterPromotionTaskSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsArrayInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsPatchInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsPatchArrayInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsRetryInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsRetryPtrInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsRetryPatchInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsRetryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsRetryPatchPtrInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsRetryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsTaskInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsTaskPtrInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsTaskPatchInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsTaskPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsTaskPatchPtrInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsTaskPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsVarsInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsVarsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsVarsArrayInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsVarsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsVarsPatchInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsVarsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecStepsVarsPatchArrayInput)(nil)).Elem(), ClusterPromotionTaskSpecStepsVarsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecVarsInput)(nil)).Elem(), ClusterPromotionTaskSpecVarsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecVarsArrayInput)(nil)).Elem(), ClusterPromotionTaskSpecVarsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecVarsPatchInput)(nil)).Elem(), ClusterPromotionTaskSpecVarsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskSpecVarsPatchArrayInput)(nil)).Elem(), ClusterPromotionTaskSpecVarsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightTypeInput)(nil)).Elem(), FreightTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightTypeArrayInput)(nil)).Elem(), FreightTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightChartsInput)(nil)).Elem(), FreightChartsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightChartsArrayInput)(nil)).Elem(), FreightChartsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightChartsPatchInput)(nil)).Elem(), FreightChartsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightChartsPatchArrayInput)(nil)).Elem(), FreightChartsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightCommitsInput)(nil)).Elem(), FreightCommitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightCommitsArrayInput)(nil)).Elem(), FreightCommitsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightCommitsPatchInput)(nil)).Elem(), FreightCommitsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightCommitsPatchArrayInput)(nil)).Elem(), FreightCommitsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightImagesInput)(nil)).Elem(), FreightImagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightImagesArrayInput)(nil)).Elem(), FreightImagesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightImagesPatchInput)(nil)).Elem(), FreightImagesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightImagesPatchArrayInput)(nil)).Elem(), FreightImagesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightListTypeInput)(nil)).Elem(), FreightListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightOriginInput)(nil)).Elem(), FreightOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightOriginPtrInput)(nil)).Elem(), FreightOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightOriginPatchInput)(nil)).Elem(), FreightOriginPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightOriginPatchPtrInput)(nil)).Elem(), FreightOriginPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightPatchTypeInput)(nil)).Elem(), FreightPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightStatusInput)(nil)).Elem(), FreightStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightStatusPtrInput)(nil)).Elem(), FreightStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightStatusPatchInput)(nil)).Elem(), FreightStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreightStatusPatchPtrInput)(nil)).Elem(), FreightStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTypeInput)(nil)).Elem(), ProjectTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTypeArrayInput)(nil)).Elem(), ProjectTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigTypeInput)(nil)).Elem(), ProjectConfigTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigTypeArrayInput)(nil)).Elem(), ProjectConfigTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigListTypeInput)(nil)).Elem(), ProjectConfigListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigPatchTypeInput)(nil)).Elem(), ProjectConfigPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecInput)(nil)).Elem(), ProjectConfigSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPtrInput)(nil)).Elem(), ProjectConfigSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPatchInput)(nil)).Elem(), ProjectConfigSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPatchPtrInput)(nil)).Elem(), ProjectConfigSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesInput)(nil)).Elem(), ProjectConfigSpecPromotionPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesArrayInput)(nil)).Elem(), ProjectConfigSpecPromotionPoliciesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesPatchInput)(nil)).Elem(), ProjectConfigSpecPromotionPoliciesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesPatchArrayInput)(nil)).Elem(), ProjectConfigSpecPromotionPoliciesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelectorInput)(nil)).Elem(), ProjectConfigSpecPromotionPoliciesStageSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelectorPtrInput)(nil)).Elem(), ProjectConfigSpecPromotionPoliciesStageSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsInput)(nil)).Elem(), ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayInput)(nil)).Elem(), ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchInput)(nil)).Elem(), ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelectorPatchInput)(nil)).Elem(), ProjectConfigSpecPromotionPoliciesStageSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrInput)(nil)).Elem(), ProjectConfigSpecPromotionPoliciesStageSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecWebhookReceiversInput)(nil)).Elem(), ProjectConfigSpecWebhookReceiversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecWebhookReceiversArrayInput)(nil)).Elem(), ProjectConfigSpecWebhookReceiversArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithubInput)(nil)).Elem(), ProjectConfigSpecWebhookReceiversGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithubPtrInput)(nil)).Elem(), ProjectConfigSpecWebhookReceiversGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithubPatchInput)(nil)).Elem(), ProjectConfigSpecWebhookReceiversGithubPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithubPatchPtrInput)(nil)).Elem(), ProjectConfigSpecWebhookReceiversGithubPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithubSecretRefInput)(nil)).Elem(), ProjectConfigSpecWebhookReceiversGithubSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithubSecretRefPtrInput)(nil)).Elem(), ProjectConfigSpecWebhookReceiversGithubSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithubSecretRefPatchInput)(nil)).Elem(), ProjectConfigSpecWebhookReceiversGithubSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrInput)(nil)).Elem(), ProjectConfigSpecWebhookReceiversGithubSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecWebhookReceiversPatchInput)(nil)).Elem(), ProjectConfigSpecWebhookReceiversPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigSpecWebhookReceiversPatchArrayInput)(nil)).Elem(), ProjectConfigSpecWebhookReceiversPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigStatusInput)(nil)).Elem(), ProjectConfigStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigStatusPtrInput)(nil)).Elem(), ProjectConfigStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigStatusConditionsInput)(nil)).Elem(), ProjectConfigStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigStatusConditionsArrayInput)(nil)).Elem(), ProjectConfigStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigStatusConditionsPatchInput)(nil)).Elem(), ProjectConfigStatusConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigStatusConditionsPatchArrayInput)(nil)).Elem(), ProjectConfigStatusConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigStatusPatchInput)(nil)).Elem(), ProjectConfigStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigStatusPatchPtrInput)(nil)).Elem(), ProjectConfigStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigStatusWebhookReceiversInput)(nil)).Elem(), ProjectConfigStatusWebhookReceiversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigStatusWebhookReceiversArrayInput)(nil)).Elem(), ProjectConfigStatusWebhookReceiversArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigStatusWebhookReceiversPatchInput)(nil)).Elem(), ProjectConfigStatusWebhookReceiversPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConfigStatusWebhookReceiversPatchArrayInput)(nil)).Elem(), ProjectConfigStatusWebhookReceiversPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectListTypeInput)(nil)).Elem(), ProjectListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectPatchTypeInput)(nil)).Elem(), ProjectPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecInput)(nil)).Elem(), ProjectSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPtrInput)(nil)).Elem(), ProjectSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPatchInput)(nil)).Elem(), ProjectSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPatchPtrInput)(nil)).Elem(), ProjectSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPromotionPoliciesInput)(nil)).Elem(), ProjectSpecPromotionPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPromotionPoliciesArrayInput)(nil)).Elem(), ProjectSpecPromotionPoliciesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPromotionPoliciesPatchInput)(nil)).Elem(), ProjectSpecPromotionPoliciesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPromotionPoliciesPatchArrayInput)(nil)).Elem(), ProjectSpecPromotionPoliciesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelectorInput)(nil)).Elem(), ProjectSpecPromotionPoliciesStageSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelectorPtrInput)(nil)).Elem(), ProjectSpecPromotionPoliciesStageSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsInput)(nil)).Elem(), ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayInput)(nil)).Elem(), ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchInput)(nil)).Elem(), ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelectorPatchInput)(nil)).Elem(), ProjectSpecPromotionPoliciesStageSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecPromotionPoliciesStageSelectorPatchPtrInput)(nil)).Elem(), ProjectSpecPromotionPoliciesStageSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecWebhookReceiversInput)(nil)).Elem(), ProjectSpecWebhookReceiversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecWebhookReceiversArrayInput)(nil)).Elem(), ProjectSpecWebhookReceiversArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecWebhookReceiversGithubInput)(nil)).Elem(), ProjectSpecWebhookReceiversGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecWebhookReceiversGithubPtrInput)(nil)).Elem(), ProjectSpecWebhookReceiversGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecWebhookReceiversGithubPatchInput)(nil)).Elem(), ProjectSpecWebhookReceiversGithubPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecWebhookReceiversGithubPatchPtrInput)(nil)).Elem(), ProjectSpecWebhookReceiversGithubPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecWebhookReceiversGithubSecretRefInput)(nil)).Elem(), ProjectSpecWebhookReceiversGithubSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecWebhookReceiversGithubSecretRefPtrInput)(nil)).Elem(), ProjectSpecWebhookReceiversGithubSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecWebhookReceiversGithubSecretRefPatchInput)(nil)).Elem(), ProjectSpecWebhookReceiversGithubSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecWebhookReceiversGithubSecretRefPatchPtrInput)(nil)).Elem(), ProjectSpecWebhookReceiversGithubSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecWebhookReceiversPatchInput)(nil)).Elem(), ProjectSpecWebhookReceiversPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSpecWebhookReceiversPatchArrayInput)(nil)).Elem(), ProjectSpecWebhookReceiversPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusInput)(nil)).Elem(), ProjectStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusPtrInput)(nil)).Elem(), ProjectStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusConditionsInput)(nil)).Elem(), ProjectStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusConditionsArrayInput)(nil)).Elem(), ProjectStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusConditionsPatchInput)(nil)).Elem(), ProjectStatusConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusConditionsPatchArrayInput)(nil)).Elem(), ProjectStatusConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusPatchInput)(nil)).Elem(), ProjectStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusPatchPtrInput)(nil)).Elem(), ProjectStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsInput)(nil)).Elem(), ProjectStatusStatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsPtrInput)(nil)).Elem(), ProjectStatusStatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsPatchInput)(nil)).Elem(), ProjectStatusStatsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsPatchPtrInput)(nil)).Elem(), ProjectStatusStatsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsStagesInput)(nil)).Elem(), ProjectStatusStatsStagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsStagesPtrInput)(nil)).Elem(), ProjectStatusStatsStagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsStagesHealthInput)(nil)).Elem(), ProjectStatusStatsStagesHealthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsStagesHealthPtrInput)(nil)).Elem(), ProjectStatusStatsStagesHealthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsStagesHealthPatchInput)(nil)).Elem(), ProjectStatusStatsStagesHealthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsStagesHealthPatchPtrInput)(nil)).Elem(), ProjectStatusStatsStagesHealthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsStagesPatchInput)(nil)).Elem(), ProjectStatusStatsStagesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsStagesPatchPtrInput)(nil)).Elem(), ProjectStatusStatsStagesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsWarehousesInput)(nil)).Elem(), ProjectStatusStatsWarehousesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsWarehousesPtrInput)(nil)).Elem(), ProjectStatusStatsWarehousesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsWarehousesHealthInput)(nil)).Elem(), ProjectStatusStatsWarehousesHealthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsWarehousesHealthPtrInput)(nil)).Elem(), ProjectStatusStatsWarehousesHealthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsWarehousesHealthPatchInput)(nil)).Elem(), ProjectStatusStatsWarehousesHealthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsWarehousesHealthPatchPtrInput)(nil)).Elem(), ProjectStatusStatsWarehousesHealthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsWarehousesPatchInput)(nil)).Elem(), ProjectStatusStatsWarehousesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectStatusStatsWarehousesPatchPtrInput)(nil)).Elem(), ProjectStatusStatsWarehousesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTypeInput)(nil)).Elem(), PromotionTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTypeArrayInput)(nil)).Elem(), PromotionTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionListTypeInput)(nil)).Elem(), PromotionListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionPatchTypeInput)(nil)).Elem(), PromotionPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecInput)(nil)).Elem(), PromotionSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecPtrInput)(nil)).Elem(), PromotionSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecPatchInput)(nil)).Elem(), PromotionSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecPatchPtrInput)(nil)).Elem(), PromotionSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsInput)(nil)).Elem(), PromotionSpecStepsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsArrayInput)(nil)).Elem(), PromotionSpecStepsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsPatchInput)(nil)).Elem(), PromotionSpecStepsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsPatchArrayInput)(nil)).Elem(), PromotionSpecStepsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsRetryInput)(nil)).Elem(), PromotionSpecStepsRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsRetryPtrInput)(nil)).Elem(), PromotionSpecStepsRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsRetryPatchInput)(nil)).Elem(), PromotionSpecStepsRetryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsRetryPatchPtrInput)(nil)).Elem(), PromotionSpecStepsRetryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsTaskInput)(nil)).Elem(), PromotionSpecStepsTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsTaskPtrInput)(nil)).Elem(), PromotionSpecStepsTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsTaskPatchInput)(nil)).Elem(), PromotionSpecStepsTaskPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsTaskPatchPtrInput)(nil)).Elem(), PromotionSpecStepsTaskPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsVarsInput)(nil)).Elem(), PromotionSpecStepsVarsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsVarsArrayInput)(nil)).Elem(), PromotionSpecStepsVarsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsVarsPatchInput)(nil)).Elem(), PromotionSpecStepsVarsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecStepsVarsPatchArrayInput)(nil)).Elem(), PromotionSpecStepsVarsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecVarsInput)(nil)).Elem(), PromotionSpecVarsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecVarsArrayInput)(nil)).Elem(), PromotionSpecVarsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecVarsPatchInput)(nil)).Elem(), PromotionSpecVarsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionSpecVarsPatchArrayInput)(nil)).Elem(), PromotionSpecVarsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusInput)(nil)).Elem(), PromotionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusPtrInput)(nil)).Elem(), PromotionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightInput)(nil)).Elem(), PromotionStatusFreightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightPtrInput)(nil)).Elem(), PromotionStatusFreightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightChartsInput)(nil)).Elem(), PromotionStatusFreightChartsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightChartsArrayInput)(nil)).Elem(), PromotionStatusFreightChartsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightChartsPatchInput)(nil)).Elem(), PromotionStatusFreightChartsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightChartsPatchArrayInput)(nil)).Elem(), PromotionStatusFreightChartsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCollectionInput)(nil)).Elem(), PromotionStatusFreightCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCollectionPtrInput)(nil)).Elem(), PromotionStatusFreightCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCollectionPatchInput)(nil)).Elem(), PromotionStatusFreightCollectionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCollectionPatchPtrInput)(nil)).Elem(), PromotionStatusFreightCollectionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistoryInput)(nil)).Elem(), PromotionStatusFreightCollectionVerificationHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistoryArrayInput)(nil)).Elem(), PromotionStatusFreightCollectionVerificationHistoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistoryAnalysisRunInput)(nil)).Elem(), PromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput)(nil)).Elem(), PromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchInput)(nil)).Elem(), PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput)(nil)).Elem(), PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistoryPatchInput)(nil)).Elem(), PromotionStatusFreightCollectionVerificationHistoryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCollectionVerificationHistoryPatchArrayInput)(nil)).Elem(), PromotionStatusFreightCollectionVerificationHistoryPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCommitsInput)(nil)).Elem(), PromotionStatusFreightCommitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCommitsArrayInput)(nil)).Elem(), PromotionStatusFreightCommitsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCommitsPatchInput)(nil)).Elem(), PromotionStatusFreightCommitsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightCommitsPatchArrayInput)(nil)).Elem(), PromotionStatusFreightCommitsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightImagesInput)(nil)).Elem(), PromotionStatusFreightImagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightImagesArrayInput)(nil)).Elem(), PromotionStatusFreightImagesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightImagesPatchInput)(nil)).Elem(), PromotionStatusFreightImagesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightImagesPatchArrayInput)(nil)).Elem(), PromotionStatusFreightImagesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightOriginInput)(nil)).Elem(), PromotionStatusFreightOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightOriginPtrInput)(nil)).Elem(), PromotionStatusFreightOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightOriginPatchInput)(nil)).Elem(), PromotionStatusFreightOriginPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightOriginPatchPtrInput)(nil)).Elem(), PromotionStatusFreightOriginPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightPatchInput)(nil)).Elem(), PromotionStatusFreightPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusFreightPatchPtrInput)(nil)).Elem(), PromotionStatusFreightPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusHealthChecksInput)(nil)).Elem(), PromotionStatusHealthChecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusHealthChecksArrayInput)(nil)).Elem(), PromotionStatusHealthChecksArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusHealthChecksPatchInput)(nil)).Elem(), PromotionStatusHealthChecksPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusHealthChecksPatchArrayInput)(nil)).Elem(), PromotionStatusHealthChecksPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusPatchInput)(nil)).Elem(), PromotionStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusPatchPtrInput)(nil)).Elem(), PromotionStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusStepExecutionMetadataInput)(nil)).Elem(), PromotionStatusStepExecutionMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusStepExecutionMetadataArrayInput)(nil)).Elem(), PromotionStatusStepExecutionMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusStepExecutionMetadataPatchInput)(nil)).Elem(), PromotionStatusStepExecutionMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionStatusStepExecutionMetadataPatchArrayInput)(nil)).Elem(), PromotionStatusStepExecutionMetadataPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskTypeInput)(nil)).Elem(), PromotionTaskTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskTypeArrayInput)(nil)).Elem(), PromotionTaskTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskListTypeInput)(nil)).Elem(), PromotionTaskListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskPatchTypeInput)(nil)).Elem(), PromotionTaskPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecInput)(nil)).Elem(), PromotionTaskSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecPtrInput)(nil)).Elem(), PromotionTaskSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecPatchInput)(nil)).Elem(), PromotionTaskSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecPatchPtrInput)(nil)).Elem(), PromotionTaskSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsInput)(nil)).Elem(), PromotionTaskSpecStepsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsArrayInput)(nil)).Elem(), PromotionTaskSpecStepsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsPatchInput)(nil)).Elem(), PromotionTaskSpecStepsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsPatchArrayInput)(nil)).Elem(), PromotionTaskSpecStepsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsRetryInput)(nil)).Elem(), PromotionTaskSpecStepsRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsRetryPtrInput)(nil)).Elem(), PromotionTaskSpecStepsRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsRetryPatchInput)(nil)).Elem(), PromotionTaskSpecStepsRetryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsRetryPatchPtrInput)(nil)).Elem(), PromotionTaskSpecStepsRetryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsTaskInput)(nil)).Elem(), PromotionTaskSpecStepsTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsTaskPtrInput)(nil)).Elem(), PromotionTaskSpecStepsTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsTaskPatchInput)(nil)).Elem(), PromotionTaskSpecStepsTaskPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsTaskPatchPtrInput)(nil)).Elem(), PromotionTaskSpecStepsTaskPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsVarsInput)(nil)).Elem(), PromotionTaskSpecStepsVarsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsVarsArrayInput)(nil)).Elem(), PromotionTaskSpecStepsVarsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsVarsPatchInput)(nil)).Elem(), PromotionTaskSpecStepsVarsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecStepsVarsPatchArrayInput)(nil)).Elem(), PromotionTaskSpecStepsVarsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecVarsInput)(nil)).Elem(), PromotionTaskSpecVarsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecVarsArrayInput)(nil)).Elem(), PromotionTaskSpecVarsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecVarsPatchInput)(nil)).Elem(), PromotionTaskSpecVarsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskSpecVarsPatchArrayInput)(nil)).Elem(), PromotionTaskSpecVarsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageTypeInput)(nil)).Elem(), StageTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageTypeArrayInput)(nil)).Elem(), StageTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageListTypeInput)(nil)).Elem(), StageListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StagePatchTypeInput)(nil)).Elem(), StagePatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecInput)(nil)).Elem(), StageSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPtrInput)(nil)).Elem(), StageSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPatchInput)(nil)).Elem(), StageSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPatchPtrInput)(nil)).Elem(), StageSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateInput)(nil)).Elem(), StageSpecPromotionTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplatePtrInput)(nil)).Elem(), StageSpecPromotionTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplatePatchInput)(nil)).Elem(), StageSpecPromotionTemplatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplatePatchPtrInput)(nil)).Elem(), StageSpecPromotionTemplatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecInput)(nil)).Elem(), StageSpecPromotionTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecPtrInput)(nil)).Elem(), StageSpecPromotionTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecPatchInput)(nil)).Elem(), StageSpecPromotionTemplateSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecPatchPtrInput)(nil)).Elem(), StageSpecPromotionTemplateSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsArrayInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsPatchInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsPatchArrayInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsRetryInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsRetryPtrInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsRetryPatchInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsRetryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsRetryPatchPtrInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsRetryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsTaskInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsTaskPtrInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsTaskPatchInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsTaskPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsTaskPatchPtrInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsTaskPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsVarsInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsVarsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsVarsArrayInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsVarsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsVarsPatchInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsVarsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecStepsVarsPatchArrayInput)(nil)).Elem(), StageSpecPromotionTemplateSpecStepsVarsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecVarsInput)(nil)).Elem(), StageSpecPromotionTemplateSpecVarsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecVarsArrayInput)(nil)).Elem(), StageSpecPromotionTemplateSpecVarsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecVarsPatchInput)(nil)).Elem(), StageSpecPromotionTemplateSpecVarsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecPromotionTemplateSpecVarsPatchArrayInput)(nil)).Elem(), StageSpecPromotionTemplateSpecVarsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecRequestedFreightInput)(nil)).Elem(), StageSpecRequestedFreightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecRequestedFreightArrayInput)(nil)).Elem(), StageSpecRequestedFreightArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecRequestedFreightOriginInput)(nil)).Elem(), StageSpecRequestedFreightOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecRequestedFreightOriginPtrInput)(nil)).Elem(), StageSpecRequestedFreightOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecRequestedFreightOriginPatchInput)(nil)).Elem(), StageSpecRequestedFreightOriginPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecRequestedFreightOriginPatchPtrInput)(nil)).Elem(), StageSpecRequestedFreightOriginPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecRequestedFreightPatchInput)(nil)).Elem(), StageSpecRequestedFreightPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecRequestedFreightPatchArrayInput)(nil)).Elem(), StageSpecRequestedFreightPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecRequestedFreightSourcesInput)(nil)).Elem(), StageSpecRequestedFreightSourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecRequestedFreightSourcesPtrInput)(nil)).Elem(), StageSpecRequestedFreightSourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecRequestedFreightSourcesPatchInput)(nil)).Elem(), StageSpecRequestedFreightSourcesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecRequestedFreightSourcesPatchPtrInput)(nil)).Elem(), StageSpecRequestedFreightSourcesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVarsInput)(nil)).Elem(), StageSpecVarsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVarsArrayInput)(nil)).Elem(), StageSpecVarsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVarsPatchInput)(nil)).Elem(), StageSpecVarsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVarsPatchArrayInput)(nil)).Elem(), StageSpecVarsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationInput)(nil)).Elem(), StageSpecVerificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationPtrInput)(nil)).Elem(), StageSpecVerificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationAnalysisRunMetadataInput)(nil)).Elem(), StageSpecVerificationAnalysisRunMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationAnalysisRunMetadataPtrInput)(nil)).Elem(), StageSpecVerificationAnalysisRunMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationAnalysisRunMetadataPatchInput)(nil)).Elem(), StageSpecVerificationAnalysisRunMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationAnalysisRunMetadataPatchPtrInput)(nil)).Elem(), StageSpecVerificationAnalysisRunMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationAnalysisTemplatesInput)(nil)).Elem(), StageSpecVerificationAnalysisTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationAnalysisTemplatesArrayInput)(nil)).Elem(), StageSpecVerificationAnalysisTemplatesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationAnalysisTemplatesPatchInput)(nil)).Elem(), StageSpecVerificationAnalysisTemplatesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationAnalysisTemplatesPatchArrayInput)(nil)).Elem(), StageSpecVerificationAnalysisTemplatesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationArgumentsInput)(nil)).Elem(), StageSpecVerificationArgumentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationArgumentsArrayInput)(nil)).Elem(), StageSpecVerificationArgumentsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationArgumentsPatchInput)(nil)).Elem(), StageSpecVerificationArgumentsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationArgumentsPatchArrayInput)(nil)).Elem(), StageSpecVerificationArgumentsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationPatchInput)(nil)).Elem(), StageSpecVerificationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageSpecVerificationPatchPtrInput)(nil)).Elem(), StageSpecVerificationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusInput)(nil)).Elem(), StageStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusPtrInput)(nil)).Elem(), StageStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusConditionsInput)(nil)).Elem(), StageStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusConditionsArrayInput)(nil)).Elem(), StageStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusConditionsPatchInput)(nil)).Elem(), StageStatusConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusConditionsPatchArrayInput)(nil)).Elem(), StageStatusConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionInput)(nil)).Elem(), StageStatusCurrentPromotionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionPtrInput)(nil)).Elem(), StageStatusCurrentPromotionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightInput)(nil)).Elem(), StageStatusCurrentPromotionFreightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightPtrInput)(nil)).Elem(), StageStatusCurrentPromotionFreightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightChartsInput)(nil)).Elem(), StageStatusCurrentPromotionFreightChartsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightChartsArrayInput)(nil)).Elem(), StageStatusCurrentPromotionFreightChartsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightChartsPatchInput)(nil)).Elem(), StageStatusCurrentPromotionFreightChartsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightChartsPatchArrayInput)(nil)).Elem(), StageStatusCurrentPromotionFreightChartsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightCommitsInput)(nil)).Elem(), StageStatusCurrentPromotionFreightCommitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightCommitsArrayInput)(nil)).Elem(), StageStatusCurrentPromotionFreightCommitsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightCommitsPatchInput)(nil)).Elem(), StageStatusCurrentPromotionFreightCommitsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightCommitsPatchArrayInput)(nil)).Elem(), StageStatusCurrentPromotionFreightCommitsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightImagesInput)(nil)).Elem(), StageStatusCurrentPromotionFreightImagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightImagesArrayInput)(nil)).Elem(), StageStatusCurrentPromotionFreightImagesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightImagesPatchInput)(nil)).Elem(), StageStatusCurrentPromotionFreightImagesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightImagesPatchArrayInput)(nil)).Elem(), StageStatusCurrentPromotionFreightImagesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightOriginInput)(nil)).Elem(), StageStatusCurrentPromotionFreightOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightOriginPtrInput)(nil)).Elem(), StageStatusCurrentPromotionFreightOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightOriginPatchInput)(nil)).Elem(), StageStatusCurrentPromotionFreightOriginPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightOriginPatchPtrInput)(nil)).Elem(), StageStatusCurrentPromotionFreightOriginPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightPatchInput)(nil)).Elem(), StageStatusCurrentPromotionFreightPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionFreightPatchPtrInput)(nil)).Elem(), StageStatusCurrentPromotionFreightPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionPatchInput)(nil)).Elem(), StageStatusCurrentPromotionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionPatchPtrInput)(nil)).Elem(), StageStatusCurrentPromotionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusInput)(nil)).Elem(), StageStatusCurrentPromotionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusPtrInput)(nil)).Elem(), StageStatusCurrentPromotionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightPtrInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightChartsInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightChartsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightChartsArrayInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightChartsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightChartsPatchInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightChartsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightChartsPatchArrayInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightChartsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionPtrInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionPatchInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCollectionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionPatchPtrInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCollectionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCommitsInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCommitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCommitsArrayInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCommitsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCommitsPatchInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCommitsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightCommitsPatchArrayInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightCommitsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightImagesInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightImagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightImagesArrayInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightImagesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightImagesPatchInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightImagesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightImagesPatchArrayInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightImagesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightOriginInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightOriginPtrInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightOriginPatchInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightOriginPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightOriginPatchPtrInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightOriginPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightPatchInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusFreightPatchPtrInput)(nil)).Elem(), StageStatusCurrentPromotionStatusFreightPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusHealthChecksInput)(nil)).Elem(), StageStatusCurrentPromotionStatusHealthChecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusHealthChecksArrayInput)(nil)).Elem(), StageStatusCurrentPromotionStatusHealthChecksArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusHealthChecksPatchInput)(nil)).Elem(), StageStatusCurrentPromotionStatusHealthChecksPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusHealthChecksPatchArrayInput)(nil)).Elem(), StageStatusCurrentPromotionStatusHealthChecksPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusPatchInput)(nil)).Elem(), StageStatusCurrentPromotionStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusPatchPtrInput)(nil)).Elem(), StageStatusCurrentPromotionStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusStepExecutionMetadataInput)(nil)).Elem(), StageStatusCurrentPromotionStatusStepExecutionMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusStepExecutionMetadataArrayInput)(nil)).Elem(), StageStatusCurrentPromotionStatusStepExecutionMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusStepExecutionMetadataPatchInput)(nil)).Elem(), StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayInput)(nil)).Elem(), StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusFreightHistoryInput)(nil)).Elem(), StageStatusFreightHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusFreightHistoryArrayInput)(nil)).Elem(), StageStatusFreightHistoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusFreightHistoryPatchInput)(nil)).Elem(), StageStatusFreightHistoryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusFreightHistoryPatchArrayInput)(nil)).Elem(), StageStatusFreightHistoryPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusFreightHistoryVerificationHistoryInput)(nil)).Elem(), StageStatusFreightHistoryVerificationHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusFreightHistoryVerificationHistoryArrayInput)(nil)).Elem(), StageStatusFreightHistoryVerificationHistoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusFreightHistoryVerificationHistoryAnalysisRunInput)(nil)).Elem(), StageStatusFreightHistoryVerificationHistoryAnalysisRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrInput)(nil)).Elem(), StageStatusFreightHistoryVerificationHistoryAnalysisRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchInput)(nil)).Elem(), StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrInput)(nil)).Elem(), StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusFreightHistoryVerificationHistoryPatchInput)(nil)).Elem(), StageStatusFreightHistoryVerificationHistoryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusFreightHistoryVerificationHistoryPatchArrayInput)(nil)).Elem(), StageStatusFreightHistoryVerificationHistoryPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusHealthInput)(nil)).Elem(), StageStatusHealthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusHealthPtrInput)(nil)).Elem(), StageStatusHealthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusHealthPatchInput)(nil)).Elem(), StageStatusHealthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusHealthPatchPtrInput)(nil)).Elem(), StageStatusHealthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionInput)(nil)).Elem(), StageStatusLastPromotionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionPtrInput)(nil)).Elem(), StageStatusLastPromotionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightInput)(nil)).Elem(), StageStatusLastPromotionFreightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightPtrInput)(nil)).Elem(), StageStatusLastPromotionFreightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightChartsInput)(nil)).Elem(), StageStatusLastPromotionFreightChartsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightChartsArrayInput)(nil)).Elem(), StageStatusLastPromotionFreightChartsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightChartsPatchInput)(nil)).Elem(), StageStatusLastPromotionFreightChartsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightChartsPatchArrayInput)(nil)).Elem(), StageStatusLastPromotionFreightChartsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightCommitsInput)(nil)).Elem(), StageStatusLastPromotionFreightCommitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightCommitsArrayInput)(nil)).Elem(), StageStatusLastPromotionFreightCommitsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightCommitsPatchInput)(nil)).Elem(), StageStatusLastPromotionFreightCommitsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightCommitsPatchArrayInput)(nil)).Elem(), StageStatusLastPromotionFreightCommitsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightImagesInput)(nil)).Elem(), StageStatusLastPromotionFreightImagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightImagesArrayInput)(nil)).Elem(), StageStatusLastPromotionFreightImagesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightImagesPatchInput)(nil)).Elem(), StageStatusLastPromotionFreightImagesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightImagesPatchArrayInput)(nil)).Elem(), StageStatusLastPromotionFreightImagesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightOriginInput)(nil)).Elem(), StageStatusLastPromotionFreightOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightOriginPtrInput)(nil)).Elem(), StageStatusLastPromotionFreightOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightOriginPatchInput)(nil)).Elem(), StageStatusLastPromotionFreightOriginPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightOriginPatchPtrInput)(nil)).Elem(), StageStatusLastPromotionFreightOriginPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightPatchInput)(nil)).Elem(), StageStatusLastPromotionFreightPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionFreightPatchPtrInput)(nil)).Elem(), StageStatusLastPromotionFreightPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionPatchInput)(nil)).Elem(), StageStatusLastPromotionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionPatchPtrInput)(nil)).Elem(), StageStatusLastPromotionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusInput)(nil)).Elem(), StageStatusLastPromotionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusPtrInput)(nil)).Elem(), StageStatusLastPromotionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightPtrInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightChartsInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightChartsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightChartsArrayInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightChartsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightChartsPatchInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightChartsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightChartsPatchArrayInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightChartsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionPtrInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionPatchInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCollectionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionPatchPtrInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCollectionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistoryInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCommitsInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCommitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCommitsArrayInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCommitsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCommitsPatchInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCommitsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightCommitsPatchArrayInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightCommitsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightImagesInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightImagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightImagesArrayInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightImagesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightImagesPatchInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightImagesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightImagesPatchArrayInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightImagesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightOriginInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightOriginPtrInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightOriginPatchInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightOriginPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightOriginPatchPtrInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightOriginPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightPatchInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusFreightPatchPtrInput)(nil)).Elem(), StageStatusLastPromotionStatusFreightPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusHealthChecksInput)(nil)).Elem(), StageStatusLastPromotionStatusHealthChecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusHealthChecksArrayInput)(nil)).Elem(), StageStatusLastPromotionStatusHealthChecksArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusHealthChecksPatchInput)(nil)).Elem(), StageStatusLastPromotionStatusHealthChecksPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusHealthChecksPatchArrayInput)(nil)).Elem(), StageStatusLastPromotionStatusHealthChecksPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusPatchInput)(nil)).Elem(), StageStatusLastPromotionStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusPatchPtrInput)(nil)).Elem(), StageStatusLastPromotionStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusStepExecutionMetadataInput)(nil)).Elem(), StageStatusLastPromotionStatusStepExecutionMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusStepExecutionMetadataArrayInput)(nil)).Elem(), StageStatusLastPromotionStatusStepExecutionMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusStepExecutionMetadataPatchInput)(nil)).Elem(), StageStatusLastPromotionStatusStepExecutionMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayInput)(nil)).Elem(), StageStatusLastPromotionStatusStepExecutionMetadataPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusPatchInput)(nil)).Elem(), StageStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageStatusPatchPtrInput)(nil)).Elem(), StageStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseTypeInput)(nil)).Elem(), WarehouseTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseTypeArrayInput)(nil)).Elem(), WarehouseTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseListTypeInput)(nil)).Elem(), WarehouseListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehousePatchTypeInput)(nil)).Elem(), WarehousePatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecInput)(nil)).Elem(), WarehouseSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecPtrInput)(nil)).Elem(), WarehouseSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecPatchInput)(nil)).Elem(), WarehouseSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecPatchPtrInput)(nil)).Elem(), WarehouseSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsInput)(nil)).Elem(), WarehouseSpecSubscriptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsArrayInput)(nil)).Elem(), WarehouseSpecSubscriptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsChartInput)(nil)).Elem(), WarehouseSpecSubscriptionsChartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsChartPtrInput)(nil)).Elem(), WarehouseSpecSubscriptionsChartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsChartPatchInput)(nil)).Elem(), WarehouseSpecSubscriptionsChartPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsChartPatchPtrInput)(nil)).Elem(), WarehouseSpecSubscriptionsChartPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsGitInput)(nil)).Elem(), WarehouseSpecSubscriptionsGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsGitPtrInput)(nil)).Elem(), WarehouseSpecSubscriptionsGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsGitPatchInput)(nil)).Elem(), WarehouseSpecSubscriptionsGitPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsGitPatchPtrInput)(nil)).Elem(), WarehouseSpecSubscriptionsGitPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsImageInput)(nil)).Elem(), WarehouseSpecSubscriptionsImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsImagePtrInput)(nil)).Elem(), WarehouseSpecSubscriptionsImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsImagePatchInput)(nil)).Elem(), WarehouseSpecSubscriptionsImagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsImagePatchPtrInput)(nil)).Elem(), WarehouseSpecSubscriptionsImagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsPatchInput)(nil)).Elem(), WarehouseSpecSubscriptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseSpecSubscriptionsPatchArrayInput)(nil)).Elem(), WarehouseSpecSubscriptionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusInput)(nil)).Elem(), WarehouseStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusPtrInput)(nil)).Elem(), WarehouseStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusConditionsInput)(nil)).Elem(), WarehouseStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusConditionsArrayInput)(nil)).Elem(), WarehouseStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusConditionsPatchInput)(nil)).Elem(), WarehouseStatusConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusConditionsPatchArrayInput)(nil)).Elem(), WarehouseStatusConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsPtrInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsChartsInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsChartsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsChartsArrayInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsChartsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsChartsPatchInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsChartsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsChartsPatchArrayInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsChartsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGitInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGitArrayInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsGitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGitCommitsInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsGitCommitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGitCommitsArrayInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsGitCommitsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGitCommitsPatchInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsGitCommitsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsGitCommitsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGitPatchInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsGitPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsGitPatchArrayInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsGitPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImagesInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsImagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImagesArrayInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsImagesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImagesPatchInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsImagesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImagesPatchArrayInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsImagesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImagesReferencesInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsImagesReferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImagesReferencesArrayInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsImagesReferencesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImagesReferencesPatchInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsPatchInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusDiscoveredArtifactsPatchPtrInput)(nil)).Elem(), WarehouseStatusDiscoveredArtifactsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusPatchInput)(nil)).Elem(), WarehouseStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WarehouseStatusPatchPtrInput)(nil)).Elem(), WarehouseStatusPatchArgs{})
	pulumi.RegisterOutputType(ClusterPromotionTaskTypeOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskTypeArrayOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskListTypeOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskPatchTypeOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecPatchOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsArrayOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsPatchOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsPatchArrayOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsRetryOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsRetryPtrOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsRetryPatchOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsRetryPatchPtrOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsTaskOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsTaskPtrOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsTaskPatchOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsTaskPatchPtrOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsVarsOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsVarsArrayOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsVarsPatchOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecStepsVarsPatchArrayOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecVarsOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecVarsArrayOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecVarsPatchOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskSpecVarsPatchArrayOutput{})
	pulumi.RegisterOutputType(FreightTypeOutput{})
	pulumi.RegisterOutputType(FreightTypeArrayOutput{})
	pulumi.RegisterOutputType(FreightChartsOutput{})
	pulumi.RegisterOutputType(FreightChartsArrayOutput{})
	pulumi.RegisterOutputType(FreightChartsPatchOutput{})
	pulumi.RegisterOutputType(FreightChartsPatchArrayOutput{})
	pulumi.RegisterOutputType(FreightCommitsOutput{})
	pulumi.RegisterOutputType(FreightCommitsArrayOutput{})
	pulumi.RegisterOutputType(FreightCommitsPatchOutput{})
	pulumi.RegisterOutputType(FreightCommitsPatchArrayOutput{})
	pulumi.RegisterOutputType(FreightImagesOutput{})
	pulumi.RegisterOutputType(FreightImagesArrayOutput{})
	pulumi.RegisterOutputType(FreightImagesPatchOutput{})
	pulumi.RegisterOutputType(FreightImagesPatchArrayOutput{})
	pulumi.RegisterOutputType(FreightListTypeOutput{})
	pulumi.RegisterOutputType(FreightOriginOutput{})
	pulumi.RegisterOutputType(FreightOriginPtrOutput{})
	pulumi.RegisterOutputType(FreightOriginPatchOutput{})
	pulumi.RegisterOutputType(FreightOriginPatchPtrOutput{})
	pulumi.RegisterOutputType(FreightPatchTypeOutput{})
	pulumi.RegisterOutputType(FreightStatusOutput{})
	pulumi.RegisterOutputType(FreightStatusPtrOutput{})
	pulumi.RegisterOutputType(FreightStatusPatchOutput{})
	pulumi.RegisterOutputType(FreightStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectTypeOutput{})
	pulumi.RegisterOutputType(ProjectTypeArrayOutput{})
	pulumi.RegisterOutputType(ProjectConfigTypeOutput{})
	pulumi.RegisterOutputType(ProjectConfigTypeArrayOutput{})
	pulumi.RegisterOutputType(ProjectConfigListTypeOutput{})
	pulumi.RegisterOutputType(ProjectConfigPatchTypeOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPtrOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPatchOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPromotionPoliciesOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPromotionPoliciesArrayOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPromotionPoliciesPatchOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPromotionPoliciesPatchArrayOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPromotionPoliciesStageSelectorOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPromotionPoliciesStageSelectorPtrOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPromotionPoliciesStageSelectorPatchOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecPromotionPoliciesStageSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecWebhookReceiversOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecWebhookReceiversArrayOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecWebhookReceiversGithubOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecWebhookReceiversGithubPtrOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecWebhookReceiversGithubPatchOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecWebhookReceiversGithubPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecWebhookReceiversGithubSecretRefOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecWebhookReceiversGithubSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecWebhookReceiversGithubSecretRefPatchOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecWebhookReceiversGithubSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecWebhookReceiversPatchOutput{})
	pulumi.RegisterOutputType(ProjectConfigSpecWebhookReceiversPatchArrayOutput{})
	pulumi.RegisterOutputType(ProjectConfigStatusOutput{})
	pulumi.RegisterOutputType(ProjectConfigStatusPtrOutput{})
	pulumi.RegisterOutputType(ProjectConfigStatusConditionsOutput{})
	pulumi.RegisterOutputType(ProjectConfigStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ProjectConfigStatusConditionsPatchOutput{})
	pulumi.RegisterOutputType(ProjectConfigStatusConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(ProjectConfigStatusPatchOutput{})
	pulumi.RegisterOutputType(ProjectConfigStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectConfigStatusWebhookReceiversOutput{})
	pulumi.RegisterOutputType(ProjectConfigStatusWebhookReceiversArrayOutput{})
	pulumi.RegisterOutputType(ProjectConfigStatusWebhookReceiversPatchOutput{})
	pulumi.RegisterOutputType(ProjectConfigStatusWebhookReceiversPatchArrayOutput{})
	pulumi.RegisterOutputType(ProjectListTypeOutput{})
	pulumi.RegisterOutputType(ProjectPatchTypeOutput{})
	pulumi.RegisterOutputType(ProjectSpecOutput{})
	pulumi.RegisterOutputType(ProjectSpecPtrOutput{})
	pulumi.RegisterOutputType(ProjectSpecPatchOutput{})
	pulumi.RegisterOutputType(ProjectSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectSpecPromotionPoliciesOutput{})
	pulumi.RegisterOutputType(ProjectSpecPromotionPoliciesArrayOutput{})
	pulumi.RegisterOutputType(ProjectSpecPromotionPoliciesPatchOutput{})
	pulumi.RegisterOutputType(ProjectSpecPromotionPoliciesPatchArrayOutput{})
	pulumi.RegisterOutputType(ProjectSpecPromotionPoliciesStageSelectorOutput{})
	pulumi.RegisterOutputType(ProjectSpecPromotionPoliciesStageSelectorPtrOutput{})
	pulumi.RegisterOutputType(ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(ProjectSpecPromotionPoliciesStageSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(ProjectSpecPromotionPoliciesStageSelectorPatchOutput{})
	pulumi.RegisterOutputType(ProjectSpecPromotionPoliciesStageSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectSpecWebhookReceiversOutput{})
	pulumi.RegisterOutputType(ProjectSpecWebhookReceiversArrayOutput{})
	pulumi.RegisterOutputType(ProjectSpecWebhookReceiversGithubOutput{})
	pulumi.RegisterOutputType(ProjectSpecWebhookReceiversGithubPtrOutput{})
	pulumi.RegisterOutputType(ProjectSpecWebhookReceiversGithubPatchOutput{})
	pulumi.RegisterOutputType(ProjectSpecWebhookReceiversGithubPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectSpecWebhookReceiversGithubSecretRefOutput{})
	pulumi.RegisterOutputType(ProjectSpecWebhookReceiversGithubSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ProjectSpecWebhookReceiversGithubSecretRefPatchOutput{})
	pulumi.RegisterOutputType(ProjectSpecWebhookReceiversGithubSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectSpecWebhookReceiversPatchOutput{})
	pulumi.RegisterOutputType(ProjectSpecWebhookReceiversPatchArrayOutput{})
	pulumi.RegisterOutputType(ProjectStatusOutput{})
	pulumi.RegisterOutputType(ProjectStatusPtrOutput{})
	pulumi.RegisterOutputType(ProjectStatusConditionsOutput{})
	pulumi.RegisterOutputType(ProjectStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ProjectStatusConditionsPatchOutput{})
	pulumi.RegisterOutputType(ProjectStatusConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(ProjectStatusPatchOutput{})
	pulumi.RegisterOutputType(ProjectStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsPtrOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsPatchOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsStagesOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsStagesPtrOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsStagesHealthOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsStagesHealthPtrOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsStagesHealthPatchOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsStagesHealthPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsStagesPatchOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsStagesPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsWarehousesOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsWarehousesPtrOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsWarehousesHealthOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsWarehousesHealthPtrOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsWarehousesHealthPatchOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsWarehousesHealthPatchPtrOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsWarehousesPatchOutput{})
	pulumi.RegisterOutputType(ProjectStatusStatsWarehousesPatchPtrOutput{})
	pulumi.RegisterOutputType(PromotionTypeOutput{})
	pulumi.RegisterOutputType(PromotionTypeArrayOutput{})
	pulumi.RegisterOutputType(PromotionListTypeOutput{})
	pulumi.RegisterOutputType(PromotionPatchTypeOutput{})
	pulumi.RegisterOutputType(PromotionSpecOutput{})
	pulumi.RegisterOutputType(PromotionSpecPtrOutput{})
	pulumi.RegisterOutputType(PromotionSpecPatchOutput{})
	pulumi.RegisterOutputType(PromotionSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsArrayOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsPatchOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsPatchArrayOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsRetryOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsRetryPtrOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsRetryPatchOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsRetryPatchPtrOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsTaskOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsTaskPtrOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsTaskPatchOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsTaskPatchPtrOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsVarsOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsVarsArrayOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsVarsPatchOutput{})
	pulumi.RegisterOutputType(PromotionSpecStepsVarsPatchArrayOutput{})
	pulumi.RegisterOutputType(PromotionSpecVarsOutput{})
	pulumi.RegisterOutputType(PromotionSpecVarsArrayOutput{})
	pulumi.RegisterOutputType(PromotionSpecVarsPatchOutput{})
	pulumi.RegisterOutputType(PromotionSpecVarsPatchArrayOutput{})
	pulumi.RegisterOutputType(PromotionStatusOutput{})
	pulumi.RegisterOutputType(PromotionStatusPtrOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightPtrOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightChartsOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightChartsArrayOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightChartsPatchOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightChartsPatchArrayOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCollectionOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCollectionPtrOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCollectionPatchOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCollectionPatchPtrOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCollectionVerificationHistoryOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCollectionVerificationHistoryArrayOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCollectionVerificationHistoryPatchOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCommitsOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCommitsArrayOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCommitsPatchOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightCommitsPatchArrayOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightImagesOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightImagesArrayOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightImagesPatchOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightImagesPatchArrayOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightOriginOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightOriginPtrOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightOriginPatchOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightOriginPatchPtrOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightPatchOutput{})
	pulumi.RegisterOutputType(PromotionStatusFreightPatchPtrOutput{})
	pulumi.RegisterOutputType(PromotionStatusHealthChecksOutput{})
	pulumi.RegisterOutputType(PromotionStatusHealthChecksArrayOutput{})
	pulumi.RegisterOutputType(PromotionStatusHealthChecksPatchOutput{})
	pulumi.RegisterOutputType(PromotionStatusHealthChecksPatchArrayOutput{})
	pulumi.RegisterOutputType(PromotionStatusPatchOutput{})
	pulumi.RegisterOutputType(PromotionStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(PromotionStatusStepExecutionMetadataOutput{})
	pulumi.RegisterOutputType(PromotionStatusStepExecutionMetadataArrayOutput{})
	pulumi.RegisterOutputType(PromotionStatusStepExecutionMetadataPatchOutput{})
	pulumi.RegisterOutputType(PromotionStatusStepExecutionMetadataPatchArrayOutput{})
	pulumi.RegisterOutputType(PromotionTaskTypeOutput{})
	pulumi.RegisterOutputType(PromotionTaskTypeArrayOutput{})
	pulumi.RegisterOutputType(PromotionTaskListTypeOutput{})
	pulumi.RegisterOutputType(PromotionTaskPatchTypeOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecPtrOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecPatchOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsArrayOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsPatchOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsPatchArrayOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsRetryOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsRetryPtrOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsRetryPatchOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsRetryPatchPtrOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsTaskOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsTaskPtrOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsTaskPatchOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsTaskPatchPtrOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsVarsOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsVarsArrayOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsVarsPatchOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecStepsVarsPatchArrayOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecVarsOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecVarsArrayOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecVarsPatchOutput{})
	pulumi.RegisterOutputType(PromotionTaskSpecVarsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageTypeOutput{})
	pulumi.RegisterOutputType(StageTypeArrayOutput{})
	pulumi.RegisterOutputType(StageListTypeOutput{})
	pulumi.RegisterOutputType(StagePatchTypeOutput{})
	pulumi.RegisterOutputType(StageSpecOutput{})
	pulumi.RegisterOutputType(StageSpecPtrOutput{})
	pulumi.RegisterOutputType(StageSpecPatchOutput{})
	pulumi.RegisterOutputType(StageSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplatePtrOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplatePatchOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplatePatchPtrOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecPatchOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsArrayOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsPatchOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsRetryOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsRetryPtrOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsRetryPatchOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsRetryPatchPtrOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsTaskOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsTaskPtrOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsTaskPatchOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsTaskPatchPtrOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsVarsOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsVarsArrayOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsVarsPatchOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecStepsVarsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecVarsOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecVarsArrayOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecVarsPatchOutput{})
	pulumi.RegisterOutputType(StageSpecPromotionTemplateSpecVarsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageSpecRequestedFreightOutput{})
	pulumi.RegisterOutputType(StageSpecRequestedFreightArrayOutput{})
	pulumi.RegisterOutputType(StageSpecRequestedFreightOriginOutput{})
	pulumi.RegisterOutputType(StageSpecRequestedFreightOriginPtrOutput{})
	pulumi.RegisterOutputType(StageSpecRequestedFreightOriginPatchOutput{})
	pulumi.RegisterOutputType(StageSpecRequestedFreightOriginPatchPtrOutput{})
	pulumi.RegisterOutputType(StageSpecRequestedFreightPatchOutput{})
	pulumi.RegisterOutputType(StageSpecRequestedFreightPatchArrayOutput{})
	pulumi.RegisterOutputType(StageSpecRequestedFreightSourcesOutput{})
	pulumi.RegisterOutputType(StageSpecRequestedFreightSourcesPtrOutput{})
	pulumi.RegisterOutputType(StageSpecRequestedFreightSourcesPatchOutput{})
	pulumi.RegisterOutputType(StageSpecRequestedFreightSourcesPatchPtrOutput{})
	pulumi.RegisterOutputType(StageSpecVarsOutput{})
	pulumi.RegisterOutputType(StageSpecVarsArrayOutput{})
	pulumi.RegisterOutputType(StageSpecVarsPatchOutput{})
	pulumi.RegisterOutputType(StageSpecVarsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationPtrOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationAnalysisRunMetadataOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationAnalysisRunMetadataPtrOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationAnalysisRunMetadataPatchOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationAnalysisRunMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationAnalysisTemplatesOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationAnalysisTemplatesArrayOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationAnalysisTemplatesPatchOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationAnalysisTemplatesPatchArrayOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationArgumentsOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationArgumentsArrayOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationArgumentsPatchOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationArgumentsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationPatchOutput{})
	pulumi.RegisterOutputType(StageSpecVerificationPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusOutput{})
	pulumi.RegisterOutputType(StageStatusPtrOutput{})
	pulumi.RegisterOutputType(StageStatusConditionsOutput{})
	pulumi.RegisterOutputType(StageStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(StageStatusConditionsPatchOutput{})
	pulumi.RegisterOutputType(StageStatusConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightChartsOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightChartsArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightChartsPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightChartsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightCommitsOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightCommitsArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightCommitsPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightCommitsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightImagesOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightImagesArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightImagesPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightImagesPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightOriginOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightOriginPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightOriginPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightOriginPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionFreightPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightChartsOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightChartsArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightChartsPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightChartsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCollectionOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCollectionPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCollectionPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCollectionPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCommitsOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCommitsArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCommitsPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightCommitsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightImagesOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightImagesArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightImagesPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightImagesPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightOriginOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightOriginPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightOriginPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightOriginPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusFreightPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusHealthChecksOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusHealthChecksArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusHealthChecksPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusHealthChecksPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusStepExecutionMetadataOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusStepExecutionMetadataArrayOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusStepExecutionMetadataPatchOutput{})
	pulumi.RegisterOutputType(StageStatusCurrentPromotionStatusStepExecutionMetadataPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusFreightHistoryOutput{})
	pulumi.RegisterOutputType(StageStatusFreightHistoryArrayOutput{})
	pulumi.RegisterOutputType(StageStatusFreightHistoryPatchOutput{})
	pulumi.RegisterOutputType(StageStatusFreightHistoryPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusFreightHistoryVerificationHistoryOutput{})
	pulumi.RegisterOutputType(StageStatusFreightHistoryVerificationHistoryArrayOutput{})
	pulumi.RegisterOutputType(StageStatusFreightHistoryVerificationHistoryAnalysisRunOutput{})
	pulumi.RegisterOutputType(StageStatusFreightHistoryVerificationHistoryAnalysisRunPtrOutput{})
	pulumi.RegisterOutputType(StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchOutput{})
	pulumi.RegisterOutputType(StageStatusFreightHistoryVerificationHistoryAnalysisRunPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusFreightHistoryVerificationHistoryPatchOutput{})
	pulumi.RegisterOutputType(StageStatusFreightHistoryVerificationHistoryPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusHealthOutput{})
	pulumi.RegisterOutputType(StageStatusHealthPtrOutput{})
	pulumi.RegisterOutputType(StageStatusHealthPatchOutput{})
	pulumi.RegisterOutputType(StageStatusHealthPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightChartsOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightChartsArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightChartsPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightChartsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightCommitsOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightCommitsArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightCommitsPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightCommitsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightImagesOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightImagesArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightImagesPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightImagesPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightOriginOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightOriginPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightOriginPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightOriginPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionFreightPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightChartsOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightChartsArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightChartsPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightChartsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCollectionOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCollectionPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCollectionPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCollectionPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryAnalysisRunPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCollectionVerificationHistoryPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCommitsOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCommitsArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCommitsPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightCommitsPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightImagesOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightImagesArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightImagesPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightImagesPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightOriginOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightOriginPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightOriginPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightOriginPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusFreightPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusHealthChecksOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusHealthChecksArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusHealthChecksPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusHealthChecksPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusStepExecutionMetadataOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusStepExecutionMetadataArrayOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusStepExecutionMetadataPatchOutput{})
	pulumi.RegisterOutputType(StageStatusLastPromotionStatusStepExecutionMetadataPatchArrayOutput{})
	pulumi.RegisterOutputType(StageStatusPatchOutput{})
	pulumi.RegisterOutputType(StageStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(WarehouseTypeOutput{})
	pulumi.RegisterOutputType(WarehouseTypeArrayOutput{})
	pulumi.RegisterOutputType(WarehouseListTypeOutput{})
	pulumi.RegisterOutputType(WarehousePatchTypeOutput{})
	pulumi.RegisterOutputType(WarehouseSpecOutput{})
	pulumi.RegisterOutputType(WarehouseSpecPtrOutput{})
	pulumi.RegisterOutputType(WarehouseSpecPatchOutput{})
	pulumi.RegisterOutputType(WarehouseSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsArrayOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsChartOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsChartPtrOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsChartPatchOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsChartPatchPtrOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsGitOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsGitPtrOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsGitPatchOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsGitPatchPtrOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsImageOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsImagePtrOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsImagePatchOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsImagePatchPtrOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsPatchOutput{})
	pulumi.RegisterOutputType(WarehouseSpecSubscriptionsPatchArrayOutput{})
	pulumi.RegisterOutputType(WarehouseStatusOutput{})
	pulumi.RegisterOutputType(WarehouseStatusPtrOutput{})
	pulumi.RegisterOutputType(WarehouseStatusConditionsOutput{})
	pulumi.RegisterOutputType(WarehouseStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(WarehouseStatusConditionsPatchOutput{})
	pulumi.RegisterOutputType(WarehouseStatusConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsPtrOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsChartsOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsChartsArrayOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsChartsPatchOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsChartsPatchArrayOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsGitOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsGitArrayOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsGitCommitsOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsGitCommitsArrayOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsGitCommitsPatchOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsGitCommitsPatchArrayOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsGitPatchOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsGitPatchArrayOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsImagesOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsImagesArrayOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsImagesPatchOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsImagesPatchArrayOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsImagesReferencesOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsImagesReferencesArrayOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsImagesReferencesPatchOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsImagesReferencesPatchArrayOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsPatchOutput{})
	pulumi.RegisterOutputType(WarehouseStatusDiscoveredArtifactsPatchPtrOutput{})
	pulumi.RegisterOutputType(WarehouseStatusPatchOutput{})
	pulumi.RegisterOutputType(WarehouseStatusPatchPtrOutput{})
}
