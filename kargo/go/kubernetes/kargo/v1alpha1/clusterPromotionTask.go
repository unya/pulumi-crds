// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClusterPromotionTask struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput        `pulumi:"metadata"`
	Spec     ClusterPromotionTaskSpecOutput `pulumi:"spec"`
}

// NewClusterPromotionTask registers a new resource with the given unique name, arguments, and options.
func NewClusterPromotionTask(ctx *pulumi.Context,
	name string, args *ClusterPromotionTaskArgs, opts ...pulumi.ResourceOption) (*ClusterPromotionTask, error) {
	if args == nil {
		args = &ClusterPromotionTaskArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("kargo.akuity.io/v1alpha1")
	args.Kind = pulumi.StringPtr("ClusterPromotionTask")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ClusterPromotionTask
	err := ctx.RegisterResource("kubernetes:kargo.akuity.io/v1alpha1:ClusterPromotionTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterPromotionTask gets an existing ClusterPromotionTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterPromotionTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterPromotionTaskState, opts ...pulumi.ResourceOption) (*ClusterPromotionTask, error) {
	var resource ClusterPromotionTask
	err := ctx.ReadResource("kubernetes:kargo.akuity.io/v1alpha1:ClusterPromotionTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterPromotionTask resources.
type clusterPromotionTaskState struct {
}

type ClusterPromotionTaskState struct {
}

func (ClusterPromotionTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterPromotionTaskState)(nil)).Elem()
}

type clusterPromotionTaskArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta        `pulumi:"metadata"`
	Spec     *ClusterPromotionTaskSpec `pulumi:"spec"`
}

// The set of arguments for constructing a ClusterPromotionTask resource.
type ClusterPromotionTaskArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     ClusterPromotionTaskSpecPtrInput
}

func (ClusterPromotionTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterPromotionTaskArgs)(nil)).Elem()
}

type ClusterPromotionTaskInput interface {
	pulumi.Input

	ToClusterPromotionTaskOutput() ClusterPromotionTaskOutput
	ToClusterPromotionTaskOutputWithContext(ctx context.Context) ClusterPromotionTaskOutput
}

func (*ClusterPromotionTask) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTask)(nil)).Elem()
}

func (i *ClusterPromotionTask) ToClusterPromotionTaskOutput() ClusterPromotionTaskOutput {
	return i.ToClusterPromotionTaskOutputWithContext(context.Background())
}

func (i *ClusterPromotionTask) ToClusterPromotionTaskOutputWithContext(ctx context.Context) ClusterPromotionTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskOutput)
}

// ClusterPromotionTaskArrayInput is an input type that accepts ClusterPromotionTaskArray and ClusterPromotionTaskArrayOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskArrayInput` via:
//
//	ClusterPromotionTaskArray{ ClusterPromotionTaskArgs{...} }
type ClusterPromotionTaskArrayInput interface {
	pulumi.Input

	ToClusterPromotionTaskArrayOutput() ClusterPromotionTaskArrayOutput
	ToClusterPromotionTaskArrayOutputWithContext(context.Context) ClusterPromotionTaskArrayOutput
}

type ClusterPromotionTaskArray []ClusterPromotionTaskInput

func (ClusterPromotionTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterPromotionTask)(nil)).Elem()
}

func (i ClusterPromotionTaskArray) ToClusterPromotionTaskArrayOutput() ClusterPromotionTaskArrayOutput {
	return i.ToClusterPromotionTaskArrayOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskArray) ToClusterPromotionTaskArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskArrayOutput)
}

// ClusterPromotionTaskMapInput is an input type that accepts ClusterPromotionTaskMap and ClusterPromotionTaskMapOutput values.
// You can construct a concrete instance of `ClusterPromotionTaskMapInput` via:
//
//	ClusterPromotionTaskMap{ "key": ClusterPromotionTaskArgs{...} }
type ClusterPromotionTaskMapInput interface {
	pulumi.Input

	ToClusterPromotionTaskMapOutput() ClusterPromotionTaskMapOutput
	ToClusterPromotionTaskMapOutputWithContext(context.Context) ClusterPromotionTaskMapOutput
}

type ClusterPromotionTaskMap map[string]ClusterPromotionTaskInput

func (ClusterPromotionTaskMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterPromotionTask)(nil)).Elem()
}

func (i ClusterPromotionTaskMap) ToClusterPromotionTaskMapOutput() ClusterPromotionTaskMapOutput {
	return i.ToClusterPromotionTaskMapOutputWithContext(context.Background())
}

func (i ClusterPromotionTaskMap) ToClusterPromotionTaskMapOutputWithContext(ctx context.Context) ClusterPromotionTaskMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPromotionTaskMapOutput)
}

type ClusterPromotionTaskOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPromotionTask)(nil)).Elem()
}

func (o ClusterPromotionTaskOutput) ToClusterPromotionTaskOutput() ClusterPromotionTaskOutput {
	return o
}

func (o ClusterPromotionTaskOutput) ToClusterPromotionTaskOutputWithContext(ctx context.Context) ClusterPromotionTaskOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ClusterPromotionTaskOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterPromotionTask) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterPromotionTaskOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterPromotionTask) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClusterPromotionTaskOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *ClusterPromotionTask) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o ClusterPromotionTaskOutput) Spec() ClusterPromotionTaskSpecOutput {
	return o.ApplyT(func(v *ClusterPromotionTask) ClusterPromotionTaskSpecOutput { return v.Spec }).(ClusterPromotionTaskSpecOutput)
}

type ClusterPromotionTaskArrayOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterPromotionTask)(nil)).Elem()
}

func (o ClusterPromotionTaskArrayOutput) ToClusterPromotionTaskArrayOutput() ClusterPromotionTaskArrayOutput {
	return o
}

func (o ClusterPromotionTaskArrayOutput) ToClusterPromotionTaskArrayOutputWithContext(ctx context.Context) ClusterPromotionTaskArrayOutput {
	return o
}

func (o ClusterPromotionTaskArrayOutput) Index(i pulumi.IntInput) ClusterPromotionTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClusterPromotionTask {
		return vs[0].([]*ClusterPromotionTask)[vs[1].(int)]
	}).(ClusterPromotionTaskOutput)
}

type ClusterPromotionTaskMapOutput struct{ *pulumi.OutputState }

func (ClusterPromotionTaskMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterPromotionTask)(nil)).Elem()
}

func (o ClusterPromotionTaskMapOutput) ToClusterPromotionTaskMapOutput() ClusterPromotionTaskMapOutput {
	return o
}

func (o ClusterPromotionTaskMapOutput) ToClusterPromotionTaskMapOutputWithContext(ctx context.Context) ClusterPromotionTaskMapOutput {
	return o
}

func (o ClusterPromotionTaskMapOutput) MapIndex(k pulumi.StringInput) ClusterPromotionTaskOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClusterPromotionTask {
		return vs[0].(map[string]*ClusterPromotionTask)[vs[1].(string)]
	}).(ClusterPromotionTaskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskInput)(nil)).Elem(), &ClusterPromotionTask{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskArrayInput)(nil)).Elem(), ClusterPromotionTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPromotionTaskMapInput)(nil)).Elem(), ClusterPromotionTaskMap{})
	pulumi.RegisterOutputType(ClusterPromotionTaskOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskArrayOutput{})
	pulumi.RegisterOutputType(ClusterPromotionTaskMapOutput{})
}
