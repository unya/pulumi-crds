// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PromotionTask struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput `pulumi:"metadata"`
	Spec     PromotionTaskSpecOutput `pulumi:"spec"`
}

// NewPromotionTask registers a new resource with the given unique name, arguments, and options.
func NewPromotionTask(ctx *pulumi.Context,
	name string, args *PromotionTaskArgs, opts ...pulumi.ResourceOption) (*PromotionTask, error) {
	if args == nil {
		args = &PromotionTaskArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("kargo.akuity.io/v1alpha1")
	args.Kind = pulumi.StringPtr("PromotionTask")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PromotionTask
	err := ctx.RegisterResource("kubernetes:kargo.akuity.io/v1alpha1:PromotionTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPromotionTask gets an existing PromotionTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPromotionTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PromotionTaskState, opts ...pulumi.ResourceOption) (*PromotionTask, error) {
	var resource PromotionTask
	err := ctx.ReadResource("kubernetes:kargo.akuity.io/v1alpha1:PromotionTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PromotionTask resources.
type promotionTaskState struct {
}

type PromotionTaskState struct {
}

func (PromotionTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*promotionTaskState)(nil)).Elem()
}

type promotionTaskArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *PromotionTaskSpec `pulumi:"spec"`
}

// The set of arguments for constructing a PromotionTask resource.
type PromotionTaskArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     PromotionTaskSpecPtrInput
}

func (PromotionTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*promotionTaskArgs)(nil)).Elem()
}

type PromotionTaskInput interface {
	pulumi.Input

	ToPromotionTaskOutput() PromotionTaskOutput
	ToPromotionTaskOutputWithContext(ctx context.Context) PromotionTaskOutput
}

func (*PromotionTask) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTask)(nil)).Elem()
}

func (i *PromotionTask) ToPromotionTaskOutput() PromotionTaskOutput {
	return i.ToPromotionTaskOutputWithContext(context.Background())
}

func (i *PromotionTask) ToPromotionTaskOutputWithContext(ctx context.Context) PromotionTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskOutput)
}

// PromotionTaskArrayInput is an input type that accepts PromotionTaskArray and PromotionTaskArrayOutput values.
// You can construct a concrete instance of `PromotionTaskArrayInput` via:
//
//	PromotionTaskArray{ PromotionTaskArgs{...} }
type PromotionTaskArrayInput interface {
	pulumi.Input

	ToPromotionTaskArrayOutput() PromotionTaskArrayOutput
	ToPromotionTaskArrayOutputWithContext(context.Context) PromotionTaskArrayOutput
}

type PromotionTaskArray []PromotionTaskInput

func (PromotionTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PromotionTask)(nil)).Elem()
}

func (i PromotionTaskArray) ToPromotionTaskArrayOutput() PromotionTaskArrayOutput {
	return i.ToPromotionTaskArrayOutputWithContext(context.Background())
}

func (i PromotionTaskArray) ToPromotionTaskArrayOutputWithContext(ctx context.Context) PromotionTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskArrayOutput)
}

// PromotionTaskMapInput is an input type that accepts PromotionTaskMap and PromotionTaskMapOutput values.
// You can construct a concrete instance of `PromotionTaskMapInput` via:
//
//	PromotionTaskMap{ "key": PromotionTaskArgs{...} }
type PromotionTaskMapInput interface {
	pulumi.Input

	ToPromotionTaskMapOutput() PromotionTaskMapOutput
	ToPromotionTaskMapOutputWithContext(context.Context) PromotionTaskMapOutput
}

type PromotionTaskMap map[string]PromotionTaskInput

func (PromotionTaskMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PromotionTask)(nil)).Elem()
}

func (i PromotionTaskMap) ToPromotionTaskMapOutput() PromotionTaskMapOutput {
	return i.ToPromotionTaskMapOutputWithContext(context.Background())
}

func (i PromotionTaskMap) ToPromotionTaskMapOutputWithContext(ctx context.Context) PromotionTaskMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionTaskMapOutput)
}

type PromotionTaskOutput struct{ *pulumi.OutputState }

func (PromotionTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionTask)(nil)).Elem()
}

func (o PromotionTaskOutput) ToPromotionTaskOutput() PromotionTaskOutput {
	return o
}

func (o PromotionTaskOutput) ToPromotionTaskOutputWithContext(ctx context.Context) PromotionTaskOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PromotionTaskOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PromotionTask) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PromotionTaskOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PromotionTask) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PromotionTaskOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *PromotionTask) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o PromotionTaskOutput) Spec() PromotionTaskSpecOutput {
	return o.ApplyT(func(v *PromotionTask) PromotionTaskSpecOutput { return v.Spec }).(PromotionTaskSpecOutput)
}

type PromotionTaskArrayOutput struct{ *pulumi.OutputState }

func (PromotionTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PromotionTask)(nil)).Elem()
}

func (o PromotionTaskArrayOutput) ToPromotionTaskArrayOutput() PromotionTaskArrayOutput {
	return o
}

func (o PromotionTaskArrayOutput) ToPromotionTaskArrayOutputWithContext(ctx context.Context) PromotionTaskArrayOutput {
	return o
}

func (o PromotionTaskArrayOutput) Index(i pulumi.IntInput) PromotionTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PromotionTask {
		return vs[0].([]*PromotionTask)[vs[1].(int)]
	}).(PromotionTaskOutput)
}

type PromotionTaskMapOutput struct{ *pulumi.OutputState }

func (PromotionTaskMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PromotionTask)(nil)).Elem()
}

func (o PromotionTaskMapOutput) ToPromotionTaskMapOutput() PromotionTaskMapOutput {
	return o
}

func (o PromotionTaskMapOutput) ToPromotionTaskMapOutputWithContext(ctx context.Context) PromotionTaskMapOutput {
	return o
}

func (o PromotionTaskMapOutput) MapIndex(k pulumi.StringInput) PromotionTaskOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PromotionTask {
		return vs[0].(map[string]*PromotionTask)[vs[1].(string)]
	}).(PromotionTaskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskInput)(nil)).Elem(), &PromotionTask{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskArrayInput)(nil)).Elem(), PromotionTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionTaskMapInput)(nil)).Elem(), PromotionTaskMap{})
	pulumi.RegisterOutputType(PromotionTaskOutput{})
	pulumi.RegisterOutputType(PromotionTaskArrayOutput{})
	pulumi.RegisterOutputType(PromotionTaskMapOutput{})
}
