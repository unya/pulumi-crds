// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Restore is the Schema for the restores API. It is used to define restore jobs and its restoration source.
type Restore struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput `pulumi:"metadata"`
	Spec     RestoreSpecOutput       `pulumi:"spec"`
	Status   RestoreStatusPtrOutput  `pulumi:"status"`
}

// NewRestore registers a new resource with the given unique name, arguments, and options.
func NewRestore(ctx *pulumi.Context,
	name string, args *RestoreArgs, opts ...pulumi.ResourceOption) (*Restore, error) {
	if args == nil {
		args = &RestoreArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("k8s.mariadb.com/v1alpha1")
	args.Kind = pulumi.StringPtr("Restore")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Restore
	err := ctx.RegisterResource("kubernetes:k8s.mariadb.com/v1alpha1:Restore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestore gets an existing Restore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestoreState, opts ...pulumi.ResourceOption) (*Restore, error) {
	var resource Restore
	err := ctx.ReadResource("kubernetes:k8s.mariadb.com/v1alpha1:Restore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Restore resources.
type restoreState struct {
}

type RestoreState struct {
}

func (RestoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*restoreState)(nil)).Elem()
}

type restoreArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *RestoreSpec       `pulumi:"spec"`
}

// The set of arguments for constructing a Restore resource.
type RestoreArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     RestoreSpecPtrInput
}

func (RestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*restoreArgs)(nil)).Elem()
}

type RestoreInput interface {
	pulumi.Input

	ToRestoreOutput() RestoreOutput
	ToRestoreOutputWithContext(ctx context.Context) RestoreOutput
}

func (*Restore) ElementType() reflect.Type {
	return reflect.TypeOf((**Restore)(nil)).Elem()
}

func (i *Restore) ToRestoreOutput() RestoreOutput {
	return i.ToRestoreOutputWithContext(context.Background())
}

func (i *Restore) ToRestoreOutputWithContext(ctx context.Context) RestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreOutput)
}

// RestoreArrayInput is an input type that accepts RestoreArray and RestoreArrayOutput values.
// You can construct a concrete instance of `RestoreArrayInput` via:
//
//	RestoreArray{ RestoreArgs{...} }
type RestoreArrayInput interface {
	pulumi.Input

	ToRestoreArrayOutput() RestoreArrayOutput
	ToRestoreArrayOutputWithContext(context.Context) RestoreArrayOutput
}

type RestoreArray []RestoreInput

func (RestoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Restore)(nil)).Elem()
}

func (i RestoreArray) ToRestoreArrayOutput() RestoreArrayOutput {
	return i.ToRestoreArrayOutputWithContext(context.Background())
}

func (i RestoreArray) ToRestoreArrayOutputWithContext(ctx context.Context) RestoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreArrayOutput)
}

// RestoreMapInput is an input type that accepts RestoreMap and RestoreMapOutput values.
// You can construct a concrete instance of `RestoreMapInput` via:
//
//	RestoreMap{ "key": RestoreArgs{...} }
type RestoreMapInput interface {
	pulumi.Input

	ToRestoreMapOutput() RestoreMapOutput
	ToRestoreMapOutputWithContext(context.Context) RestoreMapOutput
}

type RestoreMap map[string]RestoreInput

func (RestoreMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Restore)(nil)).Elem()
}

func (i RestoreMap) ToRestoreMapOutput() RestoreMapOutput {
	return i.ToRestoreMapOutputWithContext(context.Background())
}

func (i RestoreMap) ToRestoreMapOutputWithContext(ctx context.Context) RestoreMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreMapOutput)
}

type RestoreOutput struct{ *pulumi.OutputState }

func (RestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Restore)(nil)).Elem()
}

func (o RestoreOutput) ToRestoreOutput() RestoreOutput {
	return o
}

func (o RestoreOutput) ToRestoreOutputWithContext(ctx context.Context) RestoreOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o RestoreOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Restore) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o RestoreOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *Restore) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o RestoreOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *Restore) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o RestoreOutput) Spec() RestoreSpecOutput {
	return o.ApplyT(func(v *Restore) RestoreSpecOutput { return v.Spec }).(RestoreSpecOutput)
}

func (o RestoreOutput) Status() RestoreStatusPtrOutput {
	return o.ApplyT(func(v *Restore) RestoreStatusPtrOutput { return v.Status }).(RestoreStatusPtrOutput)
}

type RestoreArrayOutput struct{ *pulumi.OutputState }

func (RestoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Restore)(nil)).Elem()
}

func (o RestoreArrayOutput) ToRestoreArrayOutput() RestoreArrayOutput {
	return o
}

func (o RestoreArrayOutput) ToRestoreArrayOutputWithContext(ctx context.Context) RestoreArrayOutput {
	return o
}

func (o RestoreArrayOutput) Index(i pulumi.IntInput) RestoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Restore {
		return vs[0].([]*Restore)[vs[1].(int)]
	}).(RestoreOutput)
}

type RestoreMapOutput struct{ *pulumi.OutputState }

func (RestoreMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Restore)(nil)).Elem()
}

func (o RestoreMapOutput) ToRestoreMapOutput() RestoreMapOutput {
	return o
}

func (o RestoreMapOutput) ToRestoreMapOutputWithContext(ctx context.Context) RestoreMapOutput {
	return o
}

func (o RestoreMapOutput) MapIndex(k pulumi.StringInput) RestoreOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Restore {
		return vs[0].(map[string]*Restore)[vs[1].(string)]
	}).(RestoreOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreInput)(nil)).Elem(), &Restore{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreArrayInput)(nil)).Elem(), RestoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreMapInput)(nil)).Elem(), RestoreMap{})
	pulumi.RegisterOutputType(RestoreOutput{})
	pulumi.RegisterOutputType(RestoreArrayOutput{})
	pulumi.RegisterOutputType(RestoreMapOutput{})
}
