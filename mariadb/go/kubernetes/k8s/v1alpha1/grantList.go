// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GrantList is a list of Grant
type GrantList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of grants. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items GrantTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewGrantList registers a new resource with the given unique name, arguments, and options.
func NewGrantList(ctx *pulumi.Context,
	name string, args *GrantListArgs, opts ...pulumi.ResourceOption) (*GrantList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("k8s.mariadb.com/v1alpha1")
	args.Kind = pulumi.StringPtr("GrantList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource GrantList
	err := ctx.RegisterResource("kubernetes:k8s.mariadb.com/v1alpha1:GrantList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGrantList gets an existing GrantList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGrantList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GrantListState, opts ...pulumi.ResourceOption) (*GrantList, error) {
	var resource GrantList
	err := ctx.ReadResource("kubernetes:k8s.mariadb.com/v1alpha1:GrantList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GrantList resources.
type grantListState struct {
}

type GrantListState struct {
}

func (GrantListState) ElementType() reflect.Type {
	return reflect.TypeOf((*grantListState)(nil)).Elem()
}

type grantListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of grants. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []GrantType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a GrantList resource.
type GrantListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of grants. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items GrantTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (GrantListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*grantListArgs)(nil)).Elem()
}

type GrantListInput interface {
	pulumi.Input

	ToGrantListOutput() GrantListOutput
	ToGrantListOutputWithContext(ctx context.Context) GrantListOutput
}

func (*GrantList) ElementType() reflect.Type {
	return reflect.TypeOf((**GrantList)(nil)).Elem()
}

func (i *GrantList) ToGrantListOutput() GrantListOutput {
	return i.ToGrantListOutputWithContext(context.Background())
}

func (i *GrantList) ToGrantListOutputWithContext(ctx context.Context) GrantListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantListOutput)
}

// GrantListArrayInput is an input type that accepts GrantListArray and GrantListArrayOutput values.
// You can construct a concrete instance of `GrantListArrayInput` via:
//
//	GrantListArray{ GrantListArgs{...} }
type GrantListArrayInput interface {
	pulumi.Input

	ToGrantListArrayOutput() GrantListArrayOutput
	ToGrantListArrayOutputWithContext(context.Context) GrantListArrayOutput
}

type GrantListArray []GrantListInput

func (GrantListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GrantList)(nil)).Elem()
}

func (i GrantListArray) ToGrantListArrayOutput() GrantListArrayOutput {
	return i.ToGrantListArrayOutputWithContext(context.Background())
}

func (i GrantListArray) ToGrantListArrayOutputWithContext(ctx context.Context) GrantListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantListArrayOutput)
}

// GrantListMapInput is an input type that accepts GrantListMap and GrantListMapOutput values.
// You can construct a concrete instance of `GrantListMapInput` via:
//
//	GrantListMap{ "key": GrantListArgs{...} }
type GrantListMapInput interface {
	pulumi.Input

	ToGrantListMapOutput() GrantListMapOutput
	ToGrantListMapOutputWithContext(context.Context) GrantListMapOutput
}

type GrantListMap map[string]GrantListInput

func (GrantListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GrantList)(nil)).Elem()
}

func (i GrantListMap) ToGrantListMapOutput() GrantListMapOutput {
	return i.ToGrantListMapOutputWithContext(context.Background())
}

func (i GrantListMap) ToGrantListMapOutputWithContext(ctx context.Context) GrantListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantListMapOutput)
}

type GrantListOutput struct{ *pulumi.OutputState }

func (GrantListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrantList)(nil)).Elem()
}

func (o GrantListOutput) ToGrantListOutput() GrantListOutput {
	return o
}

func (o GrantListOutput) ToGrantListOutputWithContext(ctx context.Context) GrantListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o GrantListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *GrantList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of grants. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o GrantListOutput) Items() GrantTypeArrayOutput {
	return o.ApplyT(func(v *GrantList) GrantTypeArrayOutput { return v.Items }).(GrantTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o GrantListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *GrantList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o GrantListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *GrantList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type GrantListArrayOutput struct{ *pulumi.OutputState }

func (GrantListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GrantList)(nil)).Elem()
}

func (o GrantListArrayOutput) ToGrantListArrayOutput() GrantListArrayOutput {
	return o
}

func (o GrantListArrayOutput) ToGrantListArrayOutputWithContext(ctx context.Context) GrantListArrayOutput {
	return o
}

func (o GrantListArrayOutput) Index(i pulumi.IntInput) GrantListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GrantList {
		return vs[0].([]*GrantList)[vs[1].(int)]
	}).(GrantListOutput)
}

type GrantListMapOutput struct{ *pulumi.OutputState }

func (GrantListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GrantList)(nil)).Elem()
}

func (o GrantListMapOutput) ToGrantListMapOutput() GrantListMapOutput {
	return o
}

func (o GrantListMapOutput) ToGrantListMapOutputWithContext(ctx context.Context) GrantListMapOutput {
	return o
}

func (o GrantListMapOutput) MapIndex(k pulumi.StringInput) GrantListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GrantList {
		return vs[0].(map[string]*GrantList)[vs[1].(string)]
	}).(GrantListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GrantListInput)(nil)).Elem(), &GrantList{})
	pulumi.RegisterInputType(reflect.TypeOf((*GrantListArrayInput)(nil)).Elem(), GrantListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GrantListMapInput)(nil)).Elem(), GrantListMap{})
	pulumi.RegisterOutputType(GrantListOutput{})
	pulumi.RegisterOutputType(GrantListArrayOutput{})
	pulumi.RegisterOutputType(GrantListMapOutput{})
}
