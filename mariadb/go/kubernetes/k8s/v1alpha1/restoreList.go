// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// RestoreList is a list of Restore
type RestoreList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of restores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items RestoreTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewRestoreList registers a new resource with the given unique name, arguments, and options.
func NewRestoreList(ctx *pulumi.Context,
	name string, args *RestoreListArgs, opts ...pulumi.ResourceOption) (*RestoreList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("k8s.mariadb.com/v1alpha1")
	args.Kind = pulumi.StringPtr("RestoreList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource RestoreList
	err := ctx.RegisterResource("kubernetes:k8s.mariadb.com/v1alpha1:RestoreList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestoreList gets an existing RestoreList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestoreList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestoreListState, opts ...pulumi.ResourceOption) (*RestoreList, error) {
	var resource RestoreList
	err := ctx.ReadResource("kubernetes:k8s.mariadb.com/v1alpha1:RestoreList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RestoreList resources.
type restoreListState struct {
}

type RestoreListState struct {
}

func (RestoreListState) ElementType() reflect.Type {
	return reflect.TypeOf((*restoreListState)(nil)).Elem()
}

type restoreListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of restores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []RestoreType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a RestoreList resource.
type RestoreListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of restores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items RestoreTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (RestoreListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*restoreListArgs)(nil)).Elem()
}

type RestoreListInput interface {
	pulumi.Input

	ToRestoreListOutput() RestoreListOutput
	ToRestoreListOutputWithContext(ctx context.Context) RestoreListOutput
}

func (*RestoreList) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreList)(nil)).Elem()
}

func (i *RestoreList) ToRestoreListOutput() RestoreListOutput {
	return i.ToRestoreListOutputWithContext(context.Background())
}

func (i *RestoreList) ToRestoreListOutputWithContext(ctx context.Context) RestoreListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreListOutput)
}

// RestoreListArrayInput is an input type that accepts RestoreListArray and RestoreListArrayOutput values.
// You can construct a concrete instance of `RestoreListArrayInput` via:
//
//	RestoreListArray{ RestoreListArgs{...} }
type RestoreListArrayInput interface {
	pulumi.Input

	ToRestoreListArrayOutput() RestoreListArrayOutput
	ToRestoreListArrayOutputWithContext(context.Context) RestoreListArrayOutput
}

type RestoreListArray []RestoreListInput

func (RestoreListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestoreList)(nil)).Elem()
}

func (i RestoreListArray) ToRestoreListArrayOutput() RestoreListArrayOutput {
	return i.ToRestoreListArrayOutputWithContext(context.Background())
}

func (i RestoreListArray) ToRestoreListArrayOutputWithContext(ctx context.Context) RestoreListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreListArrayOutput)
}

// RestoreListMapInput is an input type that accepts RestoreListMap and RestoreListMapOutput values.
// You can construct a concrete instance of `RestoreListMapInput` via:
//
//	RestoreListMap{ "key": RestoreListArgs{...} }
type RestoreListMapInput interface {
	pulumi.Input

	ToRestoreListMapOutput() RestoreListMapOutput
	ToRestoreListMapOutputWithContext(context.Context) RestoreListMapOutput
}

type RestoreListMap map[string]RestoreListInput

func (RestoreListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestoreList)(nil)).Elem()
}

func (i RestoreListMap) ToRestoreListMapOutput() RestoreListMapOutput {
	return i.ToRestoreListMapOutputWithContext(context.Background())
}

func (i RestoreListMap) ToRestoreListMapOutputWithContext(ctx context.Context) RestoreListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreListMapOutput)
}

type RestoreListOutput struct{ *pulumi.OutputState }

func (RestoreListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreList)(nil)).Elem()
}

func (o RestoreListOutput) ToRestoreListOutput() RestoreListOutput {
	return o
}

func (o RestoreListOutput) ToRestoreListOutputWithContext(ctx context.Context) RestoreListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o RestoreListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *RestoreList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of restores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o RestoreListOutput) Items() RestoreTypeArrayOutput {
	return o.ApplyT(func(v *RestoreList) RestoreTypeArrayOutput { return v.Items }).(RestoreTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o RestoreListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *RestoreList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o RestoreListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *RestoreList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type RestoreListArrayOutput struct{ *pulumi.OutputState }

func (RestoreListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestoreList)(nil)).Elem()
}

func (o RestoreListArrayOutput) ToRestoreListArrayOutput() RestoreListArrayOutput {
	return o
}

func (o RestoreListArrayOutput) ToRestoreListArrayOutputWithContext(ctx context.Context) RestoreListArrayOutput {
	return o
}

func (o RestoreListArrayOutput) Index(i pulumi.IntInput) RestoreListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RestoreList {
		return vs[0].([]*RestoreList)[vs[1].(int)]
	}).(RestoreListOutput)
}

type RestoreListMapOutput struct{ *pulumi.OutputState }

func (RestoreListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestoreList)(nil)).Elem()
}

func (o RestoreListMapOutput) ToRestoreListMapOutput() RestoreListMapOutput {
	return o
}

func (o RestoreListMapOutput) ToRestoreListMapOutputWithContext(ctx context.Context) RestoreListMapOutput {
	return o
}

func (o RestoreListMapOutput) MapIndex(k pulumi.StringInput) RestoreListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RestoreList {
		return vs[0].(map[string]*RestoreList)[vs[1].(string)]
	}).(RestoreListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreListInput)(nil)).Elem(), &RestoreList{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreListArrayInput)(nil)).Elem(), RestoreListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreListMapInput)(nil)).Elem(), RestoreListMap{})
	pulumi.RegisterOutputType(RestoreListOutput{})
	pulumi.RegisterOutputType(RestoreListArrayOutput{})
	pulumi.RegisterOutputType(RestoreListMapOutput{})
}
