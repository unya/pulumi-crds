// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// MariaDBList is a list of MariaDB
type MariaDBList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of mariadbs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items MariaDBTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewMariaDBList registers a new resource with the given unique name, arguments, and options.
func NewMariaDBList(ctx *pulumi.Context,
	name string, args *MariaDBListArgs, opts ...pulumi.ResourceOption) (*MariaDBList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("k8s.mariadb.com/v1alpha1")
	args.Kind = pulumi.StringPtr("MariaDBList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource MariaDBList
	err := ctx.RegisterResource("kubernetes:k8s.mariadb.com/v1alpha1:MariaDBList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMariaDBList gets an existing MariaDBList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMariaDBList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MariaDBListState, opts ...pulumi.ResourceOption) (*MariaDBList, error) {
	var resource MariaDBList
	err := ctx.ReadResource("kubernetes:k8s.mariadb.com/v1alpha1:MariaDBList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MariaDBList resources.
type mariaDBListState struct {
}

type MariaDBListState struct {
}

func (MariaDBListState) ElementType() reflect.Type {
	return reflect.TypeOf((*mariaDBListState)(nil)).Elem()
}

type mariaDBListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of mariadbs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []MariaDBType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a MariaDBList resource.
type MariaDBListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of mariadbs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items MariaDBTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (MariaDBListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mariaDBListArgs)(nil)).Elem()
}

type MariaDBListInput interface {
	pulumi.Input

	ToMariaDBListOutput() MariaDBListOutput
	ToMariaDBListOutputWithContext(ctx context.Context) MariaDBListOutput
}

func (*MariaDBList) ElementType() reflect.Type {
	return reflect.TypeOf((**MariaDBList)(nil)).Elem()
}

func (i *MariaDBList) ToMariaDBListOutput() MariaDBListOutput {
	return i.ToMariaDBListOutputWithContext(context.Background())
}

func (i *MariaDBList) ToMariaDBListOutputWithContext(ctx context.Context) MariaDBListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBListOutput)
}

// MariaDBListArrayInput is an input type that accepts MariaDBListArray and MariaDBListArrayOutput values.
// You can construct a concrete instance of `MariaDBListArrayInput` via:
//
//	MariaDBListArray{ MariaDBListArgs{...} }
type MariaDBListArrayInput interface {
	pulumi.Input

	ToMariaDBListArrayOutput() MariaDBListArrayOutput
	ToMariaDBListArrayOutputWithContext(context.Context) MariaDBListArrayOutput
}

type MariaDBListArray []MariaDBListInput

func (MariaDBListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MariaDBList)(nil)).Elem()
}

func (i MariaDBListArray) ToMariaDBListArrayOutput() MariaDBListArrayOutput {
	return i.ToMariaDBListArrayOutputWithContext(context.Background())
}

func (i MariaDBListArray) ToMariaDBListArrayOutputWithContext(ctx context.Context) MariaDBListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBListArrayOutput)
}

// MariaDBListMapInput is an input type that accepts MariaDBListMap and MariaDBListMapOutput values.
// You can construct a concrete instance of `MariaDBListMapInput` via:
//
//	MariaDBListMap{ "key": MariaDBListArgs{...} }
type MariaDBListMapInput interface {
	pulumi.Input

	ToMariaDBListMapOutput() MariaDBListMapOutput
	ToMariaDBListMapOutputWithContext(context.Context) MariaDBListMapOutput
}

type MariaDBListMap map[string]MariaDBListInput

func (MariaDBListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MariaDBList)(nil)).Elem()
}

func (i MariaDBListMap) ToMariaDBListMapOutput() MariaDBListMapOutput {
	return i.ToMariaDBListMapOutputWithContext(context.Background())
}

func (i MariaDBListMap) ToMariaDBListMapOutputWithContext(ctx context.Context) MariaDBListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBListMapOutput)
}

type MariaDBListOutput struct{ *pulumi.OutputState }

func (MariaDBListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MariaDBList)(nil)).Elem()
}

func (o MariaDBListOutput) ToMariaDBListOutput() MariaDBListOutput {
	return o
}

func (o MariaDBListOutput) ToMariaDBListOutputWithContext(ctx context.Context) MariaDBListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o MariaDBListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *MariaDBList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of mariadbs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o MariaDBListOutput) Items() MariaDBTypeArrayOutput {
	return o.ApplyT(func(v *MariaDBList) MariaDBTypeArrayOutput { return v.Items }).(MariaDBTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MariaDBListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *MariaDBList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MariaDBListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *MariaDBList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type MariaDBListArrayOutput struct{ *pulumi.OutputState }

func (MariaDBListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MariaDBList)(nil)).Elem()
}

func (o MariaDBListArrayOutput) ToMariaDBListArrayOutput() MariaDBListArrayOutput {
	return o
}

func (o MariaDBListArrayOutput) ToMariaDBListArrayOutputWithContext(ctx context.Context) MariaDBListArrayOutput {
	return o
}

func (o MariaDBListArrayOutput) Index(i pulumi.IntInput) MariaDBListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MariaDBList {
		return vs[0].([]*MariaDBList)[vs[1].(int)]
	}).(MariaDBListOutput)
}

type MariaDBListMapOutput struct{ *pulumi.OutputState }

func (MariaDBListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MariaDBList)(nil)).Elem()
}

func (o MariaDBListMapOutput) ToMariaDBListMapOutput() MariaDBListMapOutput {
	return o
}

func (o MariaDBListMapOutput) ToMariaDBListMapOutputWithContext(ctx context.Context) MariaDBListMapOutput {
	return o
}

func (o MariaDBListMapOutput) MapIndex(k pulumi.StringInput) MariaDBListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MariaDBList {
		return vs[0].(map[string]*MariaDBList)[vs[1].(string)]
	}).(MariaDBListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MariaDBListInput)(nil)).Elem(), &MariaDBList{})
	pulumi.RegisterInputType(reflect.TypeOf((*MariaDBListArrayInput)(nil)).Elem(), MariaDBListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MariaDBListMapInput)(nil)).Elem(), MariaDBListMap{})
	pulumi.RegisterOutputType(MariaDBListOutput{})
	pulumi.RegisterOutputType(MariaDBListArrayOutput{})
	pulumi.RegisterOutputType(MariaDBListMapOutput{})
}
