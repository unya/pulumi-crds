// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// MaxScale is the Schema for the maxscales API. It is used to define MaxScale clusters.
type MaxScale struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput `pulumi:"metadata"`
	Spec     MaxScaleSpecOutput      `pulumi:"spec"`
	Status   MaxScaleStatusPtrOutput `pulumi:"status"`
}

// NewMaxScale registers a new resource with the given unique name, arguments, and options.
func NewMaxScale(ctx *pulumi.Context,
	name string, args *MaxScaleArgs, opts ...pulumi.ResourceOption) (*MaxScale, error) {
	if args == nil {
		args = &MaxScaleArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("k8s.mariadb.com/v1alpha1")
	args.Kind = pulumi.StringPtr("MaxScale")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource MaxScale
	err := ctx.RegisterResource("kubernetes:k8s.mariadb.com/v1alpha1:MaxScale", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMaxScale gets an existing MaxScale resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMaxScale(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MaxScaleState, opts ...pulumi.ResourceOption) (*MaxScale, error) {
	var resource MaxScale
	err := ctx.ReadResource("kubernetes:k8s.mariadb.com/v1alpha1:MaxScale", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MaxScale resources.
type maxScaleState struct {
}

type MaxScaleState struct {
}

func (MaxScaleState) ElementType() reflect.Type {
	return reflect.TypeOf((*maxScaleState)(nil)).Elem()
}

type maxScaleArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *MaxScaleSpec      `pulumi:"spec"`
}

// The set of arguments for constructing a MaxScale resource.
type MaxScaleArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     MaxScaleSpecPtrInput
}

func (MaxScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*maxScaleArgs)(nil)).Elem()
}

type MaxScaleInput interface {
	pulumi.Input

	ToMaxScaleOutput() MaxScaleOutput
	ToMaxScaleOutputWithContext(ctx context.Context) MaxScaleOutput
}

func (*MaxScale) ElementType() reflect.Type {
	return reflect.TypeOf((**MaxScale)(nil)).Elem()
}

func (i *MaxScale) ToMaxScaleOutput() MaxScaleOutput {
	return i.ToMaxScaleOutputWithContext(context.Background())
}

func (i *MaxScale) ToMaxScaleOutputWithContext(ctx context.Context) MaxScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaxScaleOutput)
}

// MaxScaleArrayInput is an input type that accepts MaxScaleArray and MaxScaleArrayOutput values.
// You can construct a concrete instance of `MaxScaleArrayInput` via:
//
//	MaxScaleArray{ MaxScaleArgs{...} }
type MaxScaleArrayInput interface {
	pulumi.Input

	ToMaxScaleArrayOutput() MaxScaleArrayOutput
	ToMaxScaleArrayOutputWithContext(context.Context) MaxScaleArrayOutput
}

type MaxScaleArray []MaxScaleInput

func (MaxScaleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MaxScale)(nil)).Elem()
}

func (i MaxScaleArray) ToMaxScaleArrayOutput() MaxScaleArrayOutput {
	return i.ToMaxScaleArrayOutputWithContext(context.Background())
}

func (i MaxScaleArray) ToMaxScaleArrayOutputWithContext(ctx context.Context) MaxScaleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaxScaleArrayOutput)
}

// MaxScaleMapInput is an input type that accepts MaxScaleMap and MaxScaleMapOutput values.
// You can construct a concrete instance of `MaxScaleMapInput` via:
//
//	MaxScaleMap{ "key": MaxScaleArgs{...} }
type MaxScaleMapInput interface {
	pulumi.Input

	ToMaxScaleMapOutput() MaxScaleMapOutput
	ToMaxScaleMapOutputWithContext(context.Context) MaxScaleMapOutput
}

type MaxScaleMap map[string]MaxScaleInput

func (MaxScaleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MaxScale)(nil)).Elem()
}

func (i MaxScaleMap) ToMaxScaleMapOutput() MaxScaleMapOutput {
	return i.ToMaxScaleMapOutputWithContext(context.Background())
}

func (i MaxScaleMap) ToMaxScaleMapOutputWithContext(ctx context.Context) MaxScaleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaxScaleMapOutput)
}

type MaxScaleOutput struct{ *pulumi.OutputState }

func (MaxScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaxScale)(nil)).Elem()
}

func (o MaxScaleOutput) ToMaxScaleOutput() MaxScaleOutput {
	return o
}

func (o MaxScaleOutput) ToMaxScaleOutputWithContext(ctx context.Context) MaxScaleOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o MaxScaleOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *MaxScale) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MaxScaleOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *MaxScale) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o MaxScaleOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *MaxScale) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o MaxScaleOutput) Spec() MaxScaleSpecOutput {
	return o.ApplyT(func(v *MaxScale) MaxScaleSpecOutput { return v.Spec }).(MaxScaleSpecOutput)
}

func (o MaxScaleOutput) Status() MaxScaleStatusPtrOutput {
	return o.ApplyT(func(v *MaxScale) MaxScaleStatusPtrOutput { return v.Status }).(MaxScaleStatusPtrOutput)
}

type MaxScaleArrayOutput struct{ *pulumi.OutputState }

func (MaxScaleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MaxScale)(nil)).Elem()
}

func (o MaxScaleArrayOutput) ToMaxScaleArrayOutput() MaxScaleArrayOutput {
	return o
}

func (o MaxScaleArrayOutput) ToMaxScaleArrayOutputWithContext(ctx context.Context) MaxScaleArrayOutput {
	return o
}

func (o MaxScaleArrayOutput) Index(i pulumi.IntInput) MaxScaleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MaxScale {
		return vs[0].([]*MaxScale)[vs[1].(int)]
	}).(MaxScaleOutput)
}

type MaxScaleMapOutput struct{ *pulumi.OutputState }

func (MaxScaleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MaxScale)(nil)).Elem()
}

func (o MaxScaleMapOutput) ToMaxScaleMapOutput() MaxScaleMapOutput {
	return o
}

func (o MaxScaleMapOutput) ToMaxScaleMapOutputWithContext(ctx context.Context) MaxScaleMapOutput {
	return o
}

func (o MaxScaleMapOutput) MapIndex(k pulumi.StringInput) MaxScaleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MaxScale {
		return vs[0].(map[string]*MaxScale)[vs[1].(string)]
	}).(MaxScaleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MaxScaleInput)(nil)).Elem(), &MaxScale{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaxScaleArrayInput)(nil)).Elem(), MaxScaleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaxScaleMapInput)(nil)).Elem(), MaxScaleMap{})
	pulumi.RegisterOutputType(MaxScaleOutput{})
	pulumi.RegisterOutputType(MaxScaleArrayOutput{})
	pulumi.RegisterOutputType(MaxScaleMapOutput{})
}
