---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: clusterpromotiontasks.kargo.akuity.io
spec:
  group: kargo.akuity.io
  names:
    kind: ClusterPromotionTask
    listKind: ClusterPromotionTaskList
    plural: clusterpromotiontasks
    shortNames:
    - clusterpromotask
    - clusterpromotasks
    singular: clusterpromotiontask
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Spec describes the desired transition of a specific Stage into a specific
              Freight.
            properties:
              steps:
                description: |-
                  Steps specifies the directives to be executed as part of this
                  PromotionTask. The steps as defined here are inflated into a
                  Promotion when it is built from a PromotionTemplate.
                items:
                  description: PromotionStep describes a directive to be executed
                    as part of a Promotion.
                  properties:
                    as:
                      description: As is the alias this step can be referred to as.
                      type: string
                    config:
                      description: |-
                        Config is opaque configuration for the PromotionStep that is understood
                        only by each PromotionStep's implementation. It is legal to utilize
                        expressions in defining values at any level of this block.
                        See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
                      x-kubernetes-preserve-unknown-fields: true
                    continueOnError:
                      description: |-
                        ContinueOnError is a boolean value that, if set to true, will cause the
                        Promotion to continue executing the next step even if this step fails. It
                        also will not permit this failure to impact the overall status of the
                        Promotion.
                      type: boolean
                    if:
                      description: |-
                        If is an optional expression that, if present, must evaluate to a boolean
                        value. If the expression evaluates to false, the step will be skipped.
                        If the expression does not evaluate to a boolean value, the step will be
                        considered to have failed.
                      type: string
                    retry:
                      description: Retry is the retry policy for this step.
                      properties:
                        errorThreshold:
                          description: |-
                            ErrorThreshold is the number of consecutive times the step must fail (for
                            any reason) before retries are abandoned and the entire Promotion is marked
                            as failed.

                            If this field is set to 0, the effective default will be a step-specific
                            one. If no step-specific default exists (i.e. is also 0), the effective
                            default will be the system-wide default of 1.

                            A value of 1 will cause the Promotion to be marked as failed after just
                            a single failure; i.e. no retries will be attempted.

                            There is no option to specify an infinite number of retries using a value
                            such as -1.

                            In a future release, Kargo is likely to become capable of distinguishing
                            between recoverable and non-recoverable step failures. At that time, it is
                            planned that unrecoverable failures will not be subject to this threshold
                            and will immediately cause the Promotion to be marked as failed without
                            further condition.
                          format: int32
                          type: integer
                        timeout:
                          description: |-
                            Timeout is the soft maximum interval in which a step that returns a Running
                            status (which typically indicates it's waiting for something to happen)
                            may be retried.

                            The maximum is a soft one because the check for whether the interval has
                            elapsed occurs AFTER the step has run. This effectively means a step may
                            run ONCE beyond the close of the interval.

                            If this field is set to nil, the effective default will be a step-specific
                            one. If no step-specific default exists (i.e. is also nil), the effective
                            default will be the system-wide default of 0.

                            A value of 0 will cause the step to be retried indefinitely unless the
                            ErrorThreshold is reached.
                          type: string
                      type: object
                    task:
                      description: |-
                        Task is a reference to a PromotionTask that should be inflated into a
                        Promotion when it is built from a PromotionTemplate.
                      properties:
                        kind:
                          description: |-
                            Kind is the type of the PromotionTask. Can be either PromotionTask or
                            ClusterPromotionTask, default is PromotionTask.
                          enum:
                          - PromotionTask
                          - ClusterPromotionTask
                          type: string
                        name:
                          description: Name is the name of the (Cluster)PromotionTask.
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                    uses:
                      description: Uses identifies a runner that can execute this
                        step.
                      minLength: 1
                      type: string
                    vars:
                      description: |-
                        Vars is a list of variables that can be referenced by expressions in
                        the step's Config. The values override the values specified in the
                        PromotionSpec.
                      items:
                        description: |-
                          ExpressionVariable describes a single variable that may be referenced by
                          expressions in the context of a ClusterPromotionTask, PromotionTask,
                          Promotion, AnalysisRun arguments, or other objects that support expressions.

                          It is used to pass information to the expression evaluation engine, and to
                          allow for dynamic evaluation of expressions based on the variable values.
                        properties:
                          name:
                            description: Name is the name of the variable.
                            minLength: 1
                            pattern: ^[a-zA-Z_]\w*$
                            type: string
                          value:
                            description: |-
                              Value is the value of the variable. It is allowed to utilize expressions
                              in the value.
                              See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                  type: object
                  x-kubernetes-validations:
                  - message: PromotionTask step must have uses set and must not reference
                      another task
                    rule: has(self.uses) && !has(self.task)
                minItems: 1
                type: array
              vars:
                description: |-
                  Vars specifies the variables available to the PromotionTask. The
                  values of these variables are the default values that can be
                  overridden by the step referencing the task.
                items:
                  description: |-
                    ExpressionVariable describes a single variable that may be referenced by
                    expressions in the context of a ClusterPromotionTask, PromotionTask,
                    Promotion, AnalysisRun arguments, or other objects that support expressions.

                    It is used to pass information to the expression evaluation engine, and to
                    allow for dynamic evaluation of expressions based on the variable values.
                  properties:
                    name:
                      description: Name is the name of the variable.
                      minLength: 1
                      pattern: ^[a-zA-Z_]\w*$
                      type: string
                    value:
                      description: |-
                        Value is the value of the variable. It is allowed to utilize expressions
                        in the value.
                        See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
                      type: string
                  required:
                  - name
                  type: object
                type: array
            required:
            - steps
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: freights.kargo.akuity.io
spec:
  group: kargo.akuity.io
  names:
    kind: Freight
    listKind: FreightList
    plural: freights
    singular: freight
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.labels.kargo\.akuity\.io/alias
      name: Alias
      type: string
    - jsonPath: .origin.kind
      name: Origin (Kind)
      type: string
    - jsonPath: .origin.name
      name: Origin (Name)
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Freight represents a collection of versioned artifacts.
        properties:
          alias:
            description: |-
              Alias is a human-friendly alias for a piece of Freight. This is an optional
              field. A defaulting webhook will sync this field with the value of the
              kargo.akuity.io/alias label. When the alias label is not present or differs
              from the value of this field, the defaulting webhook will set the label to
              the value of this field. If the alias label is present and this field is
              empty, the defaulting webhook will set the value of this field to the value
              of the alias label. If this field is empty and the alias label is not
              present, the defaulting webhook will choose an available alias and assign
              it to both the field and label.
            type: string
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          charts:
            description: Charts describes specific versions of specific Helm charts.
            items:
              description: Chart describes a specific version of a Helm chart.
              properties:
                name:
                  description: Name specifies the name of the chart.
                  type: string
                repoURL:
                  description: |-
                    RepoURL specifies the URL of a Helm chart repository. Classic chart
                    repositories (using HTTP/S) can contain differently named charts. When this
                    field points to such a repository, the Name field will specify the name of
                    the chart within the repository. In the case of a repository within an OCI
                    registry, the URL implicitly points to a specific chart and the Name field
                    will be empty.
                  type: string
                version:
                  description: Version specifies a particular version of the chart.
                  type: string
              type: object
            type: array
          commits:
            description: Commits describes specific Git repository commits.
            items:
              description: GitCommit describes a specific commit from a specific Git
                repository.
              properties:
                author:
                  description: Author is the author of the commit.
                  type: string
                branch:
                  description: Branch denotes the branch of the repository where this
                    commit was found.
                  type: string
                committer:
                  description: Committer is the person who committed the commit.
                  type: string
                id:
                  description: |-
                    ID is the ID of a specific commit in the Git repository specified by
                    RepoURL.
                  type: string
                message:
                  description: |-
                    Message is the message associated with the commit. At present, this only
                    contains the first line (subject) of the commit message.
                  type: string
                repoURL:
                  description: RepoURL is the URL of a Git repository.
                  type: string
                tag:
                  description: |-
                    Tag denotes a tag in the repository that matched selection criteria and
                    resolved to this commit.
                  type: string
              type: object
            type: array
          images:
            description: Images describes specific versions of specific container
              images.
            items:
              description: Image describes a specific version of a container image.
              properties:
                annotations:
                  additionalProperties:
                    type: string
                  description: Annotations is a map of arbitrary metadata for the
                    image.
                  type: object
                digest:
                  description: |-
                    Digest identifies a specific version of the image in the repository
                    specified by RepoURL. This is a more precise identifier than Tag.
                  type: string
                gitRepoURL:
                  description: |-
                    GitRepoURL specifies the URL of a Git repository that contains the source
                    code for the image repository referenced by the RepoURL field if Kargo was
                    able to infer it.

                    Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
                  type: string
                repoURL:
                  description: RepoURL describes the repository in which the image
                    can be found.
                  type: string
                tag:
                  description: |-
                    Tag identifies a specific version of the image in the repository specified
                    by RepoURL.
                  type: string
              type: object
            type: array
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          origin:
            description: Origin describes a kind of Freight in terms of its origin.
            properties:
              kind:
                description: |-
                  Kind is the kind of resource from which Freight may have originated. At
                  present, this can only be "Warehouse".
                enum:
                - Warehouse
                type: string
              name:
                description: |-
                  Name is the name of the resource of the kind indicated by the Kind field
                  from which Freight may originate.
                type: string
            required:
            - kind
            - name
            type: object
          status:
            description: Status describes the current status of this Freight.
            properties:
              approvedFor:
                additionalProperties:
                  description: |-
                    ApprovedStage describes a Stage for which Freight has been (manually)
                    approved.
                  properties:
                    approvedAt:
                      description: ApprovedAt is the time at which the Freight was
                        approved for the Stage.
                      format: date-time
                      type: string
                  type: object
                description: |-
                  ApprovedFor describes the Stages for which this Freight has been approved
                  preemptively/manually by a user. This is useful for hotfixes, where one
                  might wish to promote a piece of Freight to a given Stage without
                  transiting the entire pipeline.
                type: object
              currentlyIn:
                additionalProperties:
                  description: CurrentStage reflects a Stage's current use of Freight.
                  properties:
                    since:
                      description: |-
                        Since is the time at which the Stage most recently started using the
                        Freight. This can be used to calculate how long the Freight has been in use
                        by the Stage.
                      format: date-time
                      type: string
                  type: object
                description: CurrentlyIn describes the Stages in which this Freight
                  is currently in use.
                type: object
              verifiedIn:
                additionalProperties:
                  description: VerifiedStage describes a Stage in which Freight has
                    been verified.
                  properties:
                    longestSoak:
                      description: |-
                        LongestCompletedSoak represents the longest definite time interval wherein
                        the Freight was in CONTINUOUS use by the Stage. This value is updated as
                        Freight EXITS the Stage. If the Freight is currently in use by the Stage,
                        the time elapsed since the Freight ENTERED the Stage is its current soak
                        time, which may exceed the value of this field.
                      type: string
                    verifiedAt:
                      description: VerifiedAt is the time at which the Freight was
                        verified in the Stage.
                      format: date-time
                      type: string
                  type: object
                description: |-
                  VerifiedIn describes the Stages in which this Freight has been verified
                  through promotion and subsequent health checks.
                type: object
            type: object
        required:
        - origin
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: projectconfigs.kargo.akuity.io
spec:
  group: kargo.akuity.io
  names:
    kind: ProjectConfig
    listKind: ProjectConfigList
    plural: projectconfigs
    singular: projectconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ProjectConfig is a resource type that describes the configuration of a
          Project.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the configuration of a Project.
            properties:
              promotionPolicies:
                description: |-
                  PromotionPolicies defines policies governing the promotion of Freight to
                  specific Stages within the Project.
                items:
                  description: |-
                    PromotionPolicy defines policies governing the promotion of Freight to a
                    specific Stage.
                  properties:
                    autoPromotionEnabled:
                      description: |-
                        AutoPromotionEnabled indicates whether new Freight can automatically be
                        promoted into the Stage referenced by the Stage field. Note: There are may
                        be other conditions also required for an auto-promotion to occur. This
                        field defaults to false, but is commonly set to true for Stages that
                        subscribe to Warehouses instead of other, upstream Stages. This allows
                        users to define Stages that are automatically updated as soon as new
                        artifacts are detected.
                      type: boolean
                    stage:
                      description: |-
                        Stage is the name of the Stage to which this policy applies.

                        Deprecated: Use StageSelector instead.
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    stageSelector:
                      description: |-
                        StageSelector is a selector that matches the Stage resource to which
                        this policy applies.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                        name:
                          description: |-
                            Name is the name of the resource to which this policy applies.

                            It can be an exact name, a regex pattern (with prefix "regex:"), or a
                            glob pattern (with prefix "glob:").

                            When both Name and LabelSelector are specified, the Name is ANDed with
                            the LabelSelector. I.e., the resource must match both the Name and
                            LabelSelector to be selected by this policy.

                            NOTE: Using a specific exact name is the most secure option. Pattern
                            matching via regex or glob can be exploited by users with permissions to
                            match promotion policies that weren't intended to apply to their
                            resources. For example, a user could create a resource with a name
                            deliberately crafted to match the pattern, potentially bypassing intended
                            promotion controls.
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                  x-kubernetes-validations:
                  - message: PromotionPolicy must have exactly one of stage or stageSelector
                      set
                    rule: 'has(self.stage) ? !has(self.stageSelector) : has(self.stageSelector)'
                type: array
              webhookReceivers:
                description: |-
                  WebhookReceivers describes Project-specific webhook receivers used for
                  processing events from various external platforms
                items:
                  description: |-
                    WebhookReceiverConfig describes the configuration for a single webhook
                    receiver.
                  properties:
                    github:
                      description: |
                        GitHub contains the configuration for a webhook receiver that is compatible with
                        GitHub payloads.
                      properties:
                        secretRef:
                          description: |-
                            SecretRef contains a reference to a Secret in the same namespace as the ProjectConfig.

                            The Secret is expected to contain a `token` key with the secret token configured for
                            in GitHub for the webhook. For more information about this token, please refer to the
                            GitHub documentation: https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries

                            The value of the token key goes in the "Secret" field when registering a GitHub App or webhook in the GitHub UI.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - secretRef
                      type: object
                    name:
                      description: Name is the name of the webhook receiver.
                      type: string
                  required:
                  - github
                  type: object
                maxItems: 5
                type: array
                x-kubernetes-validations:
                - message: WebhookReceiverConfig must have a unique name
                  rule: self.all(i, size(self.filter(j, i.name == j.name)) == 1)
            type: object
          status:
            description: Status describes the current status of a ProjectConfig.
            properties:
              conditions:
                description: Conditions contains the last observations of the Project
                  Config's current state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              webhookReceivers:
                description: WebhookReceivers describes the status of Project-specific
                  webhook receivers.
                items:
                  description: WebhookReceiver describes a path used to receive webhook
                    events.
                  properties:
                    name:
                      description: Name is the name of the webhook receiver.
                      type: string
                    path:
                      description: Path is the path to the receiver's webhook endpoint.
                      type: string
                    url:
                      description: URL includes the full address of the receiver's
                        webhook endpoint.
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: projects.kargo.akuity.io
spec:
  group: kargo.akuity.io
  names:
    kind: Project
    listKind: ProjectList
    plural: projects
    singular: project
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          Project is a resource type that reconciles to a specially labeled namespace
          and other TODO: TBD project-level resources.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Spec describes a Project.

              Deprecated: Create a ProjectConfig resource with the same name as the
              Project resource in the Project's namespace. The ProjectConfig resource
              can be used to configure the Project.
            properties:
              promotionPolicies:
                description: |-
                  PromotionPolicies defines policies governing the promotion of Freight to
                  specific Stages within the Project.
                items:
                  description: |-
                    PromotionPolicy defines policies governing the promotion of Freight to a
                    specific Stage.
                  properties:
                    autoPromotionEnabled:
                      description: |-
                        AutoPromotionEnabled indicates whether new Freight can automatically be
                        promoted into the Stage referenced by the Stage field. Note: There are may
                        be other conditions also required for an auto-promotion to occur. This
                        field defaults to false, but is commonly set to true for Stages that
                        subscribe to Warehouses instead of other, upstream Stages. This allows
                        users to define Stages that are automatically updated as soon as new
                        artifacts are detected.
                      type: boolean
                    stage:
                      description: |-
                        Stage is the name of the Stage to which this policy applies.

                        Deprecated: Use StageSelector instead.
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    stageSelector:
                      description: |-
                        StageSelector is a selector that matches the Stage resource to which
                        this policy applies.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                        name:
                          description: |-
                            Name is the name of the resource to which this policy applies.

                            It can be an exact name, a regex pattern (with prefix "regex:"), or a
                            glob pattern (with prefix "glob:").

                            When both Name and LabelSelector are specified, the Name is ANDed with
                            the LabelSelector. I.e., the resource must match both the Name and
                            LabelSelector to be selected by this policy.

                            NOTE: Using a specific exact name is the most secure option. Pattern
                            matching via regex or glob can be exploited by users with permissions to
                            match promotion policies that weren't intended to apply to their
                            resources. For example, a user could create a resource with a name
                            deliberately crafted to match the pattern, potentially bypassing intended
                            promotion controls.
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                  x-kubernetes-validations:
                  - message: PromotionPolicy must have exactly one of stage or stageSelector
                      set
                    rule: 'has(self.stage) ? !has(self.stageSelector) : has(self.stageSelector)'
                type: array
              webhookReceivers:
                description: |-
                  WebhookReceivers describes Project-specific webhook receivers used for
                  processing events from various external platforms
                items:
                  description: |-
                    WebhookReceiverConfig describes the configuration for a single webhook
                    receiver.
                  properties:
                    github:
                      description: |
                        GitHub contains the configuration for a webhook receiver that is compatible with
                        GitHub payloads.
                      properties:
                        secretRef:
                          description: |-
                            SecretRef contains a reference to a Secret in the same namespace as the ProjectConfig.

                            The Secret is expected to contain a `token` key with the secret token configured for
                            in GitHub for the webhook. For more information about this token, please refer to the
                            GitHub documentation: https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries

                            The value of the token key goes in the "Secret" field when registering a GitHub App or webhook in the GitHub UI.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - secretRef
                      type: object
                    name:
                      description: Name is the name of the webhook receiver.
                      type: string
                  required:
                  - github
                  type: object
                maxItems: 5
                type: array
                x-kubernetes-validations:
                - message: WebhookReceiverConfig must have a unique name
                  rule: self.all(i, size(self.filter(j, i.name == j.name)) == 1)
            type: object
          status:
            description: Status describes the Project's current status.
            properties:
              conditions:
                description: |-
                  Conditions contains the last observations of the Project's current
                  state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              stats:
                description: |-
                  Stats contains a summary of the collective state of a Project's
                  constituent resources.
                properties:
                  stages:
                    description: Stages contains a summary of the collective state
                      of the Project's Stages.
                    properties:
                      count:
                        description: Count contains the total number of Stages in
                          the Project.
                        format: int64
                        type: integer
                      health:
                        description: Health contains a summary of the collective health
                          of a Project's Stages.
                        properties:
                          healthy:
                            description: Healthy contains the number of resources
                              that are explicitly healthy.
                            format: int64
                            type: integer
                        type: object
                    type: object
                  warehouses:
                    description: |-
                      Warehouses contains a summary of the collective state of the Project's
                      Warehouses.
                    properties:
                      count:
                        description: Count contains the total number of Warehouses
                          in the Project.
                        format: int64
                        type: integer
                      health:
                        description: |-
                          Health contains a summary of the collective health of a Project's
                          Warehouses.
                        properties:
                          healthy:
                            description: Healthy contains the number of resources
                              that are explicitly healthy.
                            format: int64
                            type: integer
                        type: object
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: promotions.kargo.akuity.io
spec:
  group: kargo.akuity.io
  names:
    kind: Promotion
    listKind: PromotionList
    plural: promotions
    shortNames:
    - promo
    - promos
    singular: promotion
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.labels.kargo\.akuity\.io/shard
      name: Shard
      type: string
    - jsonPath: .spec.stage
      name: Stage
      type: string
    - jsonPath: .spec.freight
      name: Freight
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          Promotion represents a request to transition a particular Stage into a
          particular Freight.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Spec describes the desired transition of a specific Stage into a specific
              Freight.
            properties:
              freight:
                description: |-
                  Freight specifies the piece of Freight to be promoted into the Stage
                  referenced by the Stage field.
                maxLength: 253
                minLength: 1
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                type: string
              stage:
                description: |-
                  Stage specifies the name of the Stage to which this Promotion
                  applies. The Stage referenced by this field MUST be in the same
                  namespace as the Promotion.
                maxLength: 253
                minLength: 1
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                type: string
              steps:
                description: |-
                  Steps specifies the directives to be executed as part of this Promotion.
                  The order in which the directives are executed is the order in which they
                  are listed in this field.
                items:
                  description: PromotionStep describes a directive to be executed
                    as part of a Promotion.
                  properties:
                    as:
                      description: As is the alias this step can be referred to as.
                      type: string
                    config:
                      description: |-
                        Config is opaque configuration for the PromotionStep that is understood
                        only by each PromotionStep's implementation. It is legal to utilize
                        expressions in defining values at any level of this block.
                        See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
                      x-kubernetes-preserve-unknown-fields: true
                    continueOnError:
                      description: |-
                        ContinueOnError is a boolean value that, if set to true, will cause the
                        Promotion to continue executing the next step even if this step fails. It
                        also will not permit this failure to impact the overall status of the
                        Promotion.
                      type: boolean
                    if:
                      description: |-
                        If is an optional expression that, if present, must evaluate to a boolean
                        value. If the expression evaluates to false, the step will be skipped.
                        If the expression does not evaluate to a boolean value, the step will be
                        considered to have failed.
                      type: string
                    retry:
                      description: Retry is the retry policy for this step.
                      properties:
                        errorThreshold:
                          description: |-
                            ErrorThreshold is the number of consecutive times the step must fail (for
                            any reason) before retries are abandoned and the entire Promotion is marked
                            as failed.

                            If this field is set to 0, the effective default will be a step-specific
                            one. If no step-specific default exists (i.e. is also 0), the effective
                            default will be the system-wide default of 1.

                            A value of 1 will cause the Promotion to be marked as failed after just
                            a single failure; i.e. no retries will be attempted.

                            There is no option to specify an infinite number of retries using a value
                            such as -1.

                            In a future release, Kargo is likely to become capable of distinguishing
                            between recoverable and non-recoverable step failures. At that time, it is
                            planned that unrecoverable failures will not be subject to this threshold
                            and will immediately cause the Promotion to be marked as failed without
                            further condition.
                          format: int32
                          type: integer
                        timeout:
                          description: |-
                            Timeout is the soft maximum interval in which a step that returns a Running
                            status (which typically indicates it's waiting for something to happen)
                            may be retried.

                            The maximum is a soft one because the check for whether the interval has
                            elapsed occurs AFTER the step has run. This effectively means a step may
                            run ONCE beyond the close of the interval.

                            If this field is set to nil, the effective default will be a step-specific
                            one. If no step-specific default exists (i.e. is also nil), the effective
                            default will be the system-wide default of 0.

                            A value of 0 will cause the step to be retried indefinitely unless the
                            ErrorThreshold is reached.
                          type: string
                      type: object
                    task:
                      description: |-
                        Task is a reference to a PromotionTask that should be inflated into a
                        Promotion when it is built from a PromotionTemplate.
                      properties:
                        kind:
                          description: |-
                            Kind is the type of the PromotionTask. Can be either PromotionTask or
                            ClusterPromotionTask, default is PromotionTask.
                          enum:
                          - PromotionTask
                          - ClusterPromotionTask
                          type: string
                        name:
                          description: Name is the name of the (Cluster)PromotionTask.
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                    uses:
                      description: Uses identifies a runner that can execute this
                        step.
                      minLength: 1
                      type: string
                    vars:
                      description: |-
                        Vars is a list of variables that can be referenced by expressions in
                        the step's Config. The values override the values specified in the
                        PromotionSpec.
                      items:
                        description: |-
                          ExpressionVariable describes a single variable that may be referenced by
                          expressions in the context of a ClusterPromotionTask, PromotionTask,
                          Promotion, AnalysisRun arguments, or other objects that support expressions.

                          It is used to pass information to the expression evaluation engine, and to
                          allow for dynamic evaluation of expressions based on the variable values.
                        properties:
                          name:
                            description: Name is the name of the variable.
                            minLength: 1
                            pattern: ^[a-zA-Z_]\w*$
                            type: string
                          value:
                            description: |-
                              Value is the value of the variable. It is allowed to utilize expressions
                              in the value.
                              See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                  type: object
                  x-kubernetes-validations:
                  - message: Promotion step must have uses set and must not reference
                      a task
                    rule: has(self.uses) && !has(self.task)
                minItems: 1
                type: array
              vars:
                description: |-
                  Vars is a list of variables that can be referenced by expressions in
                  promotion steps.
                items:
                  description: |-
                    ExpressionVariable describes a single variable that may be referenced by
                    expressions in the context of a ClusterPromotionTask, PromotionTask,
                    Promotion, AnalysisRun arguments, or other objects that support expressions.

                    It is used to pass information to the expression evaluation engine, and to
                    allow for dynamic evaluation of expressions based on the variable values.
                  properties:
                    name:
                      description: Name is the name of the variable.
                      minLength: 1
                      pattern: ^[a-zA-Z_]\w*$
                      type: string
                    value:
                      description: |-
                        Value is the value of the variable. It is allowed to utilize expressions
                        in the value.
                        See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
                      type: string
                  required:
                  - name
                  type: object
                type: array
            required:
            - freight
            - stage
            - steps
            type: object
          status:
            description: |-
              Status describes the current state of the transition represented by this
              Promotion.
            properties:
              currentStep:
                description: |-
                  CurrentStep is the index of the current promotion step being executed. This
                  permits steps that have already run successfully to be skipped on
                  subsequent reconciliations attempts.
                format: int64
                type: integer
              finishedAt:
                description: FinishedAt is the time when the promotion was completed.
                format: date-time
                type: string
              freight:
                description: Freight is the detail of the piece of freight that was
                  referenced by this promotion.
                properties:
                  charts:
                    description: Charts describes specific versions of specific Helm
                      charts.
                    items:
                      description: Chart describes a specific version of a Helm chart.
                      properties:
                        name:
                          description: Name specifies the name of the chart.
                          type: string
                        repoURL:
                          description: |-
                            RepoURL specifies the URL of a Helm chart repository. Classic chart
                            repositories (using HTTP/S) can contain differently named charts. When this
                            field points to such a repository, the Name field will specify the name of
                            the chart within the repository. In the case of a repository within an OCI
                            registry, the URL implicitly points to a specific chart and the Name field
                            will be empty.
                          type: string
                        version:
                          description: Version specifies a particular version of the
                            chart.
                          type: string
                      type: object
                    type: array
                  commits:
                    description: Commits describes specific Git repository commits.
                    items:
                      description: GitCommit describes a specific commit from a specific
                        Git repository.
                      properties:
                        author:
                          description: Author is the author of the commit.
                          type: string
                        branch:
                          description: Branch denotes the branch of the repository
                            where this commit was found.
                          type: string
                        committer:
                          description: Committer is the person who committed the commit.
                          type: string
                        id:
                          description: |-
                            ID is the ID of a specific commit in the Git repository specified by
                            RepoURL.
                          type: string
                        message:
                          description: |-
                            Message is the message associated with the commit. At present, this only
                            contains the first line (subject) of the commit message.
                          type: string
                        repoURL:
                          description: RepoURL is the URL of a Git repository.
                          type: string
                        tag:
                          description: |-
                            Tag denotes a tag in the repository that matched selection criteria and
                            resolved to this commit.
                          type: string
                      type: object
                    type: array
                  images:
                    description: Images describes specific versions of specific container
                      images.
                    items:
                      description: Image describes a specific version of a container
                        image.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Annotations is a map of arbitrary metadata
                            for the image.
                          type: object
                        digest:
                          description: |-
                            Digest identifies a specific version of the image in the repository
                            specified by RepoURL. This is a more precise identifier than Tag.
                          type: string
                        gitRepoURL:
                          description: |-
                            GitRepoURL specifies the URL of a Git repository that contains the source
                            code for the image repository referenced by the RepoURL field if Kargo was
                            able to infer it.

                            Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
                          type: string
                        repoURL:
                          description: RepoURL describes the repository in which the
                            image can be found.
                          type: string
                        tag:
                          description: |-
                            Tag identifies a specific version of the image in the repository specified
                            by RepoURL.
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      Name is a system-assigned identifier derived deterministically from
                      the contents of the Freight. I.e., two pieces of Freight can be compared
                      for equality by comparing their Names.
                    type: string
                  origin:
                    description: Origin describes a kind of Freight in terms of its
                      origin.
                    properties:
                      kind:
                        description: |-
                          Kind is the kind of resource from which Freight may have originated. At
                          present, this can only be "Warehouse".
                        enum:
                        - Warehouse
                        type: string
                      name:
                        description: |-
                          Name is the name of the resource of the kind indicated by the Kind field
                          from which Freight may originate.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                type: object
              freightCollection:
                description: |-
                  FreightCollection contains the details of the piece of Freight referenced
                  by this Promotion as well as any additional Freight that is carried over
                  from the target Stage's current state.
                properties:
                  id:
                    description: |-
                      ID is a unique and deterministically calculated identifier for the
                      FreightCollection. It is updated on each use of the UpdateOrPush method.
                    type: string
                  items:
                    additionalProperties:
                      description: |-
                        FreightReference is a simplified representation of a piece of Freight -- not
                        a root resource type.
                      properties:
                        charts:
                          description: Charts describes specific versions of specific
                            Helm charts.
                          items:
                            description: Chart describes a specific version of a Helm
                              chart.
                            properties:
                              name:
                                description: Name specifies the name of the chart.
                                type: string
                              repoURL:
                                description: |-
                                  RepoURL specifies the URL of a Helm chart repository. Classic chart
                                  repositories (using HTTP/S) can contain differently named charts. When this
                                  field points to such a repository, the Name field will specify the name of
                                  the chart within the repository. In the case of a repository within an OCI
                                  registry, the URL implicitly points to a specific chart and the Name field
                                  will be empty.
                                type: string
                              version:
                                description: Version specifies a particular version
                                  of the chart.
                                type: string
                            type: object
                          type: array
                        commits:
                          description: Commits describes specific Git repository commits.
                          items:
                            description: GitCommit describes a specific commit from
                              a specific Git repository.
                            properties:
                              author:
                                description: Author is the author of the commit.
                                type: string
                              branch:
                                description: Branch denotes the branch of the repository
                                  where this commit was found.
                                type: string
                              committer:
                                description: Committer is the person who committed
                                  the commit.
                                type: string
                              id:
                                description: |-
                                  ID is the ID of a specific commit in the Git repository specified by
                                  RepoURL.
                                type: string
                              message:
                                description: |-
                                  Message is the message associated with the commit. At present, this only
                                  contains the first line (subject) of the commit message.
                                type: string
                              repoURL:
                                description: RepoURL is the URL of a Git repository.
                                type: string
                              tag:
                                description: |-
                                  Tag denotes a tag in the repository that matched selection criteria and
                                  resolved to this commit.
                                type: string
                            type: object
                          type: array
                        images:
                          description: Images describes specific versions of specific
                            container images.
                          items:
                            description: Image describes a specific version of a container
                              image.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a map of arbitrary metadata
                                  for the image.
                                type: object
                              digest:
                                description: |-
                                  Digest identifies a specific version of the image in the repository
                                  specified by RepoURL. This is a more precise identifier than Tag.
                                type: string
                              gitRepoURL:
                                description: |-
                                  GitRepoURL specifies the URL of a Git repository that contains the source
                                  code for the image repository referenced by the RepoURL field if Kargo was
                                  able to infer it.

                                  Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
                                type: string
                              repoURL:
                                description: RepoURL describes the repository in which
                                  the image can be found.
                                type: string
                              tag:
                                description: |-
                                  Tag identifies a specific version of the image in the repository specified
                                  by RepoURL.
                                type: string
                            type: object
                          type: array
                        name:
                          description: |-
                            Name is a system-assigned identifier derived deterministically from
                            the contents of the Freight. I.e., two pieces of Freight can be compared
                            for equality by comparing their Names.
                          type: string
                        origin:
                          description: Origin describes a kind of Freight in terms
                            of its origin.
                          properties:
                            kind:
                              description: |-
                                Kind is the kind of resource from which Freight may have originated. At
                                present, this can only be "Warehouse".
                              enum:
                              - Warehouse
                              type: string
                            name:
                              description: |-
                                Name is the name of the resource of the kind indicated by the Kind field
                                from which Freight may originate.
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                      type: object
                    description: |-
                      Freight is a map of FreightReference objects, indexed by their Warehouse
                      origin.
                    type: object
                  verificationHistory:
                    description: |-
                      VerificationHistory is a stack of recent VerificationInfo. By default,
                      the last ten VerificationInfo are stored.
                    items:
                      description: |-
                        VerificationInfo contains the details of an instance of a Verification
                        process.
                      properties:
                        actor:
                          description: |-
                            Actor is the name of the entity that initiated or aborted the
                            Verification process.
                          type: string
                        analysisRun:
                          description: |-
                            AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
                            the Verification process.
                          properties:
                            name:
                              description: Name is the name of the AnalysisRun.
                              type: string
                            namespace:
                              description: Namespace is the namespace of the AnalysisRun.
                              type: string
                            phase:
                              description: Phase is the last observed phase of the
                                AnalysisRun referenced by Name.
                              type: string
                          required:
                          - name
                          - namespace
                          - phase
                          type: object
                        finishTime:
                          description: FinishTime is the time at which the Verification
                            process finished.
                          format: date-time
                          type: string
                        id:
                          description: ID is the identifier of the Verification process.
                          type: string
                        message:
                          description: |-
                            Message may contain additional information about why the verification
                            process is in its current phase.
                          type: string
                        phase:
                          description: |-
                            Phase describes the current phase of the Verification process. Generally,
                            this will be a reflection of the underlying AnalysisRun's phase, however,
                            there are exceptions to this, such as in the case where an AnalysisRun
                            cannot be launched successfully.
                          type: string
                        startTime:
                          description: StartTime is the time at which the Verification
                            process was started.
                          format: date-time
                          type: string
                      type: object
                    type: array
                required:
                - id
                type: object
              healthChecks:
                description: |-
                  HealthChecks contains the health check directives to be executed after
                  the Promotion has completed.
                items:
                  description: |-
                    HealthCheckStep describes a health check directive which can be executed by
                    a Stage to verify the health of a Promotion result.
                  properties:
                    config:
                      description: Config is the configuration for the directive.
                      x-kubernetes-preserve-unknown-fields: true
                    uses:
                      description: Uses identifies a runner that can execute this
                        step.
                      minLength: 1
                      type: string
                  required:
                  - uses
                  type: object
                type: array
              lastHandledRefresh:
                description: |-
                  LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
                  annotation that was handled by the controller. This field can be used to
                  determine whether the request to refresh the resource has been handled.
                type: string
              message:
                description: |-
                  Message is a display message about the promotion, including any errors
                  preventing the Promotion controller from executing this Promotion.
                  i.e. If the Phase field has a value of Failed, this field can be expected
                  to explain why.
                type: string
              phase:
                description: Phase describes where the Promotion currently is in its
                  lifecycle.
                type: string
              state:
                description: |-
                  State stores the state of the promotion process between reconciliation
                  attempts.
                x-kubernetes-preserve-unknown-fields: true
              stepExecutionMetadata:
                description: |-
                  StepExecutionMetadata tracks metadata pertaining to the execution
                  of individual promotion steps.
                items:
                  description: |-
                    StepExecutionMetadata tracks metadata pertaining to the execution of
                    a promotion step.
                  properties:
                    alias:
                      description: Alias is the alias of the step.
                      type: string
                    continueOnError:
                      description: |-
                        ContinueOnError is a boolean value that, if set to true, will cause the
                        Promotion to continue executing the next step even if this step fails. It
                        also will not permit this failure to impact the overall status of the
                        Promotion.
                      type: boolean
                    errorCount:
                      description: ErrorCount tracks consecutive failed attempts to
                        execute the step.
                      format: int32
                      type: integer
                    finishedAt:
                      description: |-
                        FinishedAt is the time at which the final attempt to execute the step
                        completed.
                      format: date-time
                      type: string
                    message:
                      description: Message is a display message about the step, including
                        any errors.
                      type: string
                    startedAt:
                      description: |-
                        StartedAt is the time at which the first attempt to execute the step
                        began.
                      format: date-time
                      type: string
                    status:
                      description: Status is the high-level outcome of the step.
                      type: string
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: promotiontasks.kargo.akuity.io
spec:
  group: kargo.akuity.io
  names:
    kind: PromotionTask
    listKind: PromotionTaskList
    plural: promotiontasks
    shortNames:
    - promotask
    - promotasks
    singular: promotiontask
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Spec describes the composition of a PromotionTask, including the
              variables available to the task and the steps.
            properties:
              steps:
                description: |-
                  Steps specifies the directives to be executed as part of this
                  PromotionTask. The steps as defined here are inflated into a
                  Promotion when it is built from a PromotionTemplate.
                items:
                  description: PromotionStep describes a directive to be executed
                    as part of a Promotion.
                  properties:
                    as:
                      description: As is the alias this step can be referred to as.
                      type: string
                    config:
                      description: |-
                        Config is opaque configuration for the PromotionStep that is understood
                        only by each PromotionStep's implementation. It is legal to utilize
                        expressions in defining values at any level of this block.
                        See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
                      x-kubernetes-preserve-unknown-fields: true
                    continueOnError:
                      description: |-
                        ContinueOnError is a boolean value that, if set to true, will cause the
                        Promotion to continue executing the next step even if this step fails. It
                        also will not permit this failure to impact the overall status of the
                        Promotion.
                      type: boolean
                    if:
                      description: |-
                        If is an optional expression that, if present, must evaluate to a boolean
                        value. If the expression evaluates to false, the step will be skipped.
                        If the expression does not evaluate to a boolean value, the step will be
                        considered to have failed.
                      type: string
                    retry:
                      description: Retry is the retry policy for this step.
                      properties:
                        errorThreshold:
                          description: |-
                            ErrorThreshold is the number of consecutive times the step must fail (for
                            any reason) before retries are abandoned and the entire Promotion is marked
                            as failed.

                            If this field is set to 0, the effective default will be a step-specific
                            one. If no step-specific default exists (i.e. is also 0), the effective
                            default will be the system-wide default of 1.

                            A value of 1 will cause the Promotion to be marked as failed after just
                            a single failure; i.e. no retries will be attempted.

                            There is no option to specify an infinite number of retries using a value
                            such as -1.

                            In a future release, Kargo is likely to become capable of distinguishing
                            between recoverable and non-recoverable step failures. At that time, it is
                            planned that unrecoverable failures will not be subject to this threshold
                            and will immediately cause the Promotion to be marked as failed without
                            further condition.
                          format: int32
                          type: integer
                        timeout:
                          description: |-
                            Timeout is the soft maximum interval in which a step that returns a Running
                            status (which typically indicates it's waiting for something to happen)
                            may be retried.

                            The maximum is a soft one because the check for whether the interval has
                            elapsed occurs AFTER the step has run. This effectively means a step may
                            run ONCE beyond the close of the interval.

                            If this field is set to nil, the effective default will be a step-specific
                            one. If no step-specific default exists (i.e. is also nil), the effective
                            default will be the system-wide default of 0.

                            A value of 0 will cause the step to be retried indefinitely unless the
                            ErrorThreshold is reached.
                          type: string
                      type: object
                    task:
                      description: |-
                        Task is a reference to a PromotionTask that should be inflated into a
                        Promotion when it is built from a PromotionTemplate.
                      properties:
                        kind:
                          description: |-
                            Kind is the type of the PromotionTask. Can be either PromotionTask or
                            ClusterPromotionTask, default is PromotionTask.
                          enum:
                          - PromotionTask
                          - ClusterPromotionTask
                          type: string
                        name:
                          description: Name is the name of the (Cluster)PromotionTask.
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                    uses:
                      description: Uses identifies a runner that can execute this
                        step.
                      minLength: 1
                      type: string
                    vars:
                      description: |-
                        Vars is a list of variables that can be referenced by expressions in
                        the step's Config. The values override the values specified in the
                        PromotionSpec.
                      items:
                        description: |-
                          ExpressionVariable describes a single variable that may be referenced by
                          expressions in the context of a ClusterPromotionTask, PromotionTask,
                          Promotion, AnalysisRun arguments, or other objects that support expressions.

                          It is used to pass information to the expression evaluation engine, and to
                          allow for dynamic evaluation of expressions based on the variable values.
                        properties:
                          name:
                            description: Name is the name of the variable.
                            minLength: 1
                            pattern: ^[a-zA-Z_]\w*$
                            type: string
                          value:
                            description: |-
                              Value is the value of the variable. It is allowed to utilize expressions
                              in the value.
                              See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                  type: object
                  x-kubernetes-validations:
                  - message: PromotionTask step must have uses set and must not reference
                      another task
                    rule: has(self.uses) && !has(self.task)
                minItems: 1
                type: array
              vars:
                description: |-
                  Vars specifies the variables available to the PromotionTask. The
                  values of these variables are the default values that can be
                  overridden by the step referencing the task.
                items:
                  description: |-
                    ExpressionVariable describes a single variable that may be referenced by
                    expressions in the context of a ClusterPromotionTask, PromotionTask,
                    Promotion, AnalysisRun arguments, or other objects that support expressions.

                    It is used to pass information to the expression evaluation engine, and to
                    allow for dynamic evaluation of expressions based on the variable values.
                  properties:
                    name:
                      description: Name is the name of the variable.
                      minLength: 1
                      pattern: ^[a-zA-Z_]\w*$
                      type: string
                    value:
                      description: |-
                        Value is the value of the variable. It is allowed to utilize expressions
                        in the value.
                        See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
                      type: string
                  required:
                  - name
                  type: object
                type: array
            required:
            - steps
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: stages.kargo.akuity.io
spec:
  group: kargo.akuity.io
  names:
    kind: Stage
    listKind: StageList
    plural: stages
    singular: stage
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.shard
      name: Shard
      type: string
    - jsonPath: .status.freightSummary
      name: Current Freight
      type: string
    - jsonPath: .status.health.status
      name: Health
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Stage is the Kargo API's main type.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Spec describes sources of Freight used by the Stage and how to incorporate
              Freight into the Stage.
            properties:
              promotionTemplate:
                description: |-
                  PromotionTemplate describes how to incorporate Freight into the Stage
                  using a Promotion.
                properties:
                  spec:
                    description: |-
                      PromotionTemplateSpec describes the (partial) specification of a Promotion
                      for a Stage. This is a template that can be used to create a Promotion for a
                      Stage.
                    properties:
                      steps:
                        description: |-
                          Steps specifies the directives to be executed as part of a Promotion.
                          The order in which the directives are executed is the order in which they
                          are listed in this field.
                        items:
                          description: PromotionStep describes a directive to be executed
                            as part of a Promotion.
                          properties:
                            as:
                              description: As is the alias this step can be referred
                                to as.
                              type: string
                            config:
                              description: |-
                                Config is opaque configuration for the PromotionStep that is understood
                                only by each PromotionStep's implementation. It is legal to utilize
                                expressions in defining values at any level of this block.
                                See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
                              x-kubernetes-preserve-unknown-fields: true
                            continueOnError:
                              description: |-
                                ContinueOnError is a boolean value that, if set to true, will cause the
                                Promotion to continue executing the next step even if this step fails. It
                                also will not permit this failure to impact the overall status of the
                                Promotion.
                              type: boolean
                            if:
                              description: |-
                                If is an optional expression that, if present, must evaluate to a boolean
                                value. If the expression evaluates to false, the step will be skipped.
                                If the expression does not evaluate to a boolean value, the step will be
                                considered to have failed.
                              type: string
                            retry:
                              description: Retry is the retry policy for this step.
                              properties:
                                errorThreshold:
                                  description: |-
                                    ErrorThreshold is the number of consecutive times the step must fail (for
                                    any reason) before retries are abandoned and the entire Promotion is marked
                                    as failed.

                                    If this field is set to 0, the effective default will be a step-specific
                                    one. If no step-specific default exists (i.e. is also 0), the effective
                                    default will be the system-wide default of 1.

                                    A value of 1 will cause the Promotion to be marked as failed after just
                                    a single failure; i.e. no retries will be attempted.

                                    There is no option to specify an infinite number of retries using a value
                                    such as -1.

                                    In a future release, Kargo is likely to become capable of distinguishing
                                    between recoverable and non-recoverable step failures. At that time, it is
                                    planned that unrecoverable failures will not be subject to this threshold
                                    and will immediately cause the Promotion to be marked as failed without
                                    further condition.
                                  format: int32
                                  type: integer
                                timeout:
                                  description: |-
                                    Timeout is the soft maximum interval in which a step that returns a Running
                                    status (which typically indicates it's waiting for something to happen)
                                    may be retried.

                                    The maximum is a soft one because the check for whether the interval has
                                    elapsed occurs AFTER the step has run. This effectively means a step may
                                    run ONCE beyond the close of the interval.

                                    If this field is set to nil, the effective default will be a step-specific
                                    one. If no step-specific default exists (i.e. is also nil), the effective
                                    default will be the system-wide default of 0.

                                    A value of 0 will cause the step to be retried indefinitely unless the
                                    ErrorThreshold is reached.
                                  type: string
                              type: object
                            task:
                              description: |-
                                Task is a reference to a PromotionTask that should be inflated into a
                                Promotion when it is built from a PromotionTemplate.
                              properties:
                                kind:
                                  description: |-
                                    Kind is the type of the PromotionTask. Can be either PromotionTask or
                                    ClusterPromotionTask, default is PromotionTask.
                                  enum:
                                  - PromotionTask
                                  - ClusterPromotionTask
                                  type: string
                                name:
                                  description: Name is the name of the (Cluster)PromotionTask.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                              required:
                              - name
                              type: object
                            uses:
                              description: Uses identifies a runner that can execute
                                this step.
                              minLength: 1
                              type: string
                            vars:
                              description: |-
                                Vars is a list of variables that can be referenced by expressions in
                                the step's Config. The values override the values specified in the
                                PromotionSpec.
                              items:
                                description: |-
                                  ExpressionVariable describes a single variable that may be referenced by
                                  expressions in the context of a ClusterPromotionTask, PromotionTask,
                                  Promotion, AnalysisRun arguments, or other objects that support expressions.

                                  It is used to pass information to the expression evaluation engine, and to
                                  allow for dynamic evaluation of expressions based on the variable values.
                                properties:
                                  name:
                                    description: Name is the name of the variable.
                                    minLength: 1
                                    pattern: ^[a-zA-Z_]\w*$
                                    type: string
                                  value:
                                    description: |-
                                      Value is the value of the variable. It is allowed to utilize expressions
                                      in the value.
                                      See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          type: object
                          x-kubernetes-validations:
                          - message: PromotionTemplate step must have exactly one
                              of uses or task set
                            rule: '(has(self.uses) ? !has(self.task) : has(self.task))'
                        minItems: 1
                        type: array
                      vars:
                        description: |-
                          Vars is a list of variables that can be referenced by expressions in
                          promotion steps.
                        items:
                          description: |-
                            ExpressionVariable describes a single variable that may be referenced by
                            expressions in the context of a ClusterPromotionTask, PromotionTask,
                            Promotion, AnalysisRun arguments, or other objects that support expressions.

                            It is used to pass information to the expression evaluation engine, and to
                            allow for dynamic evaluation of expressions based on the variable values.
                          properties:
                            name:
                              description: Name is the name of the variable.
                              minLength: 1
                              pattern: ^[a-zA-Z_]\w*$
                              type: string
                            value:
                              description: |-
                                Value is the value of the variable. It is allowed to utilize expressions
                                in the value.
                                See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                    type: object
                required:
                - spec
                type: object
              requestedFreight:
                description: |-
                  RequestedFreight expresses the Stage's need for certain pieces of Freight,
                  each having originated from a particular Warehouse. This list must be
                  non-empty. In the common case, a Stage will request Freight having
                  originated from just one specific Warehouse. In advanced cases, requesting
                  Freight from multiple Warehouses provides a method of advancing new
                  artifacts of different types through parallel pipelines at different
                  speeds. This can be useful, for instance, if a Stage is home to multiple
                  microservices that are independently versioned.
                items:
                  description: |-
                    FreightRequest expresses a Stage's need for Freight having originated from a
                    particular Warehouse.
                  properties:
                    origin:
                      description: |-
                        Origin specifies from where the requested Freight must have originated.
                        This is a required field.
                      properties:
                        kind:
                          description: |-
                            Kind is the kind of resource from which Freight may have originated. At
                            present, this can only be "Warehouse".
                          enum:
                          - Warehouse
                          type: string
                        name:
                          description: |-
                            Name is the name of the resource of the kind indicated by the Kind field
                            from which Freight may originate.
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                    sources:
                      description: |-
                        Sources describes where the requested Freight may be obtained from. This is
                        a required field.
                      properties:
                        availabilityStrategy:
                          description: |-
                            AvailabilityStrategy specifies the semantics for how requested Freight is
                            made available to the Stage. This field is optional. When left unspecified,
                            the field is implicitly treated as if its value were "OneOf".

                            Accepted Values:

                            - "All": Freight must be be verified and, if applicable, soaked in all
                              upstream Stages to be considered available for promotion.
                            - "OneOf": Freight must be verified and, if applicable, soaked in at least
                               one upstream Stage to be considered available for promotion.
                            - "": Treated the same as "OneOf".
                          enum:
                          - All
                          - OneOf
                          - ""
                          type: string
                        direct:
                          description: |-
                            Direct indicates the requested Freight may be obtained directly from the
                            Warehouse from which it originated. If this field's value is false, then
                            the value of the Stages field must be non-empty. i.e. Between the two
                            fields, at least one source must be specified.
                          type: boolean
                        requiredSoakTime:
                          description: |-
                            RequiredSoakTime specifies a minimum duration for which the requested
                            Freight must have continuously occupied ("soaked in") in an upstream Stage
                            before becoming available for promotion to this Stage. This is an optional
                            field. If nil or zero, no soak time is required. Any soak time requirement
                            is in ADDITION to the requirement that Freight be verified in an upstream
                            Stage to become available for promotion to this Stage, although a manual
                            approval for promotion to this Stage will supersede any soak time
                            requirement.
                          pattern: ^([0-9]+(\.[0-9]+)?(s|m|h))+$
                          type: string
                        stages:
                          description: |-
                            Stages identifies other "upstream" Stages as potential sources of the
                            requested Freight. If this field's value is empty, then the value of the
                            Direct field must be true. i.e. Between the two fields, at least on source
                            must be specified.
                          items:
                            type: string
                          type: array
                      type: object
                  required:
                  - origin
                  - sources
                  type: object
                minItems: 1
                type: array
              shard:
                description: |-
                  Shard is the name of the shard that this Stage belongs to. This is an
                  optional field. If not specified, the Stage will belong to the default
                  shard. A defaulting webhook will sync the value of the
                  kargo.akuity.io/shard label with the value of this field. When this field
                  is empty, the webhook will ensure that label is absent.
                type: string
              vars:
                description: |-
                  Vars is a list of variables that can be referenced anywhere in the
                  StageSpec that supports expressions. For example, the PromotionTemplate
                  and arguments of the Verification.
                items:
                  description: |-
                    ExpressionVariable describes a single variable that may be referenced by
                    expressions in the context of a ClusterPromotionTask, PromotionTask,
                    Promotion, AnalysisRun arguments, or other objects that support expressions.

                    It is used to pass information to the expression evaluation engine, and to
                    allow for dynamic evaluation of expressions based on the variable values.
                  properties:
                    name:
                      description: Name is the name of the variable.
                      minLength: 1
                      pattern: ^[a-zA-Z_]\w*$
                      type: string
                    value:
                      description: |-
                        Value is the value of the variable. It is allowed to utilize expressions
                        in the value.
                        See https://docs.kargo.io/user-guide/reference-docs/expressions for details.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              verification:
                description: |-
                  Verification describes how to verify a Stage's current Freight is fit for
                  promotion downstream.
                properties:
                  analysisRunMetadata:
                    description: |-
                      AnalysisRunMetadata contains optional metadata that should be applied to
                      all AnalysisRuns.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Additional annotations to apply to an AnalysisRun.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Additional labels to apply to an AnalysisRun.
                        type: object
                    type: object
                  analysisTemplates:
                    description: |-
                      AnalysisTemplates is a list of AnalysisTemplates from which AnalysisRuns
                      should be created to verify a Stage's current Freight is fit to be promoted
                      downstream.
                    items:
                      description: AnalysisTemplateReference is a reference to an
                        AnalysisTemplate.
                      properties:
                        kind:
                          description: |-
                            Kind is the type of the AnalysisTemplate. Can be either AnalysisTemplate or
                            ClusterAnalysisTemplate, default is AnalysisTemplate.
                          enum:
                          - AnalysisTemplate
                          - ClusterAnalysisTemplate
                          type: string
                        name:
                          description: |-
                            Name is the name of the AnalysisTemplate in the same project/namespace as
                            the Stage.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  args:
                    description: Args lists arguments that should be added to all
                      AnalysisRuns.
                    items:
                      description: AnalysisRunArgument represents an argument to be
                        added to an AnalysisRun.
                      properties:
                        name:
                          description: Name is the name of the argument.
                          type: string
                        value:
                          description: Value is the value of the argument.
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
            required:
            - requestedFreight
            type: object
          status:
            description: Status describes the Stage's current and recent Freight,
              health, and more.
            properties:
              conditions:
                description: |-
                  Conditions contains the last observations of the Stage's current
                  state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              currentPromotion:
                description: CurrentPromotion is a reference to the currently Running
                  promotion.
                properties:
                  finishedAt:
                    description: FinishedAt is the time at which the Promotion was
                      completed.
                    format: date-time
                    type: string
                  freight:
                    description: Freight is the freight being promoted.
                    properties:
                      charts:
                        description: Charts describes specific versions of specific
                          Helm charts.
                        items:
                          description: Chart describes a specific version of a Helm
                            chart.
                          properties:
                            name:
                              description: Name specifies the name of the chart.
                              type: string
                            repoURL:
                              description: |-
                                RepoURL specifies the URL of a Helm chart repository. Classic chart
                                repositories (using HTTP/S) can contain differently named charts. When this
                                field points to such a repository, the Name field will specify the name of
                                the chart within the repository. In the case of a repository within an OCI
                                registry, the URL implicitly points to a specific chart and the Name field
                                will be empty.
                              type: string
                            version:
                              description: Version specifies a particular version
                                of the chart.
                              type: string
                          type: object
                        type: array
                      commits:
                        description: Commits describes specific Git repository commits.
                        items:
                          description: GitCommit describes a specific commit from
                            a specific Git repository.
                          properties:
                            author:
                              description: Author is the author of the commit.
                              type: string
                            branch:
                              description: Branch denotes the branch of the repository
                                where this commit was found.
                              type: string
                            committer:
                              description: Committer is the person who committed the
                                commit.
                              type: string
                            id:
                              description: |-
                                ID is the ID of a specific commit in the Git repository specified by
                                RepoURL.
                              type: string
                            message:
                              description: |-
                                Message is the message associated with the commit. At present, this only
                                contains the first line (subject) of the commit message.
                              type: string
                            repoURL:
                              description: RepoURL is the URL of a Git repository.
                              type: string
                            tag:
                              description: |-
                                Tag denotes a tag in the repository that matched selection criteria and
                                resolved to this commit.
                              type: string
                          type: object
                        type: array
                      images:
                        description: Images describes specific versions of specific
                          container images.
                        items:
                          description: Image describes a specific version of a container
                            image.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations is a map of arbitrary metadata
                                for the image.
                              type: object
                            digest:
                              description: |-
                                Digest identifies a specific version of the image in the repository
                                specified by RepoURL. This is a more precise identifier than Tag.
                              type: string
                            gitRepoURL:
                              description: |-
                                GitRepoURL specifies the URL of a Git repository that contains the source
                                code for the image repository referenced by the RepoURL field if Kargo was
                                able to infer it.

                                Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
                              type: string
                            repoURL:
                              description: RepoURL describes the repository in which
                                the image can be found.
                              type: string
                            tag:
                              description: |-
                                Tag identifies a specific version of the image in the repository specified
                                by RepoURL.
                              type: string
                          type: object
                        type: array
                      name:
                        description: |-
                          Name is a system-assigned identifier derived deterministically from
                          the contents of the Freight. I.e., two pieces of Freight can be compared
                          for equality by comparing their Names.
                        type: string
                      origin:
                        description: Origin describes a kind of Freight in terms of
                          its origin.
                        properties:
                          kind:
                            description: |-
                              Kind is the kind of resource from which Freight may have originated. At
                              present, this can only be "Warehouse".
                            enum:
                            - Warehouse
                            type: string
                          name:
                            description: |-
                              Name is the name of the resource of the kind indicated by the Kind field
                              from which Freight may originate.
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                    type: object
                  name:
                    description: Name is the name of the Promotion.
                    type: string
                  status:
                    description: Status is the (optional) status of the Promotion.
                    properties:
                      currentStep:
                        description: |-
                          CurrentStep is the index of the current promotion step being executed. This
                          permits steps that have already run successfully to be skipped on
                          subsequent reconciliations attempts.
                        format: int64
                        type: integer
                      finishedAt:
                        description: FinishedAt is the time when the promotion was
                          completed.
                        format: date-time
                        type: string
                      freight:
                        description: Freight is the detail of the piece of freight
                          that was referenced by this promotion.
                        properties:
                          charts:
                            description: Charts describes specific versions of specific
                              Helm charts.
                            items:
                              description: Chart describes a specific version of a
                                Helm chart.
                              properties:
                                name:
                                  description: Name specifies the name of the chart.
                                  type: string
                                repoURL:
                                  description: |-
                                    RepoURL specifies the URL of a Helm chart repository. Classic chart
                                    repositories (using HTTP/S) can contain differently named charts. When this
                                    field points to such a repository, the Name field will specify the name of
                                    the chart within the repository. In the case of a repository within an OCI
                                    registry, the URL implicitly points to a specific chart and the Name field
                                    will be empty.
                                  type: string
                                version:
                                  description: Version specifies a particular version
                                    of the chart.
                                  type: string
                              type: object
                            type: array
                          commits:
                            description: Commits describes specific Git repository
                              commits.
                            items:
                              description: GitCommit describes a specific commit from
                                a specific Git repository.
                              properties:
                                author:
                                  description: Author is the author of the commit.
                                  type: string
                                branch:
                                  description: Branch denotes the branch of the repository
                                    where this commit was found.
                                  type: string
                                committer:
                                  description: Committer is the person who committed
                                    the commit.
                                  type: string
                                id:
                                  description: |-
                                    ID is the ID of a specific commit in the Git repository specified by
                                    RepoURL.
                                  type: string
                                message:
                                  description: |-
                                    Message is the message associated with the commit. At present, this only
                                    contains the first line (subject) of the commit message.
                                  type: string
                                repoURL:
                                  description: RepoURL is the URL of a Git repository.
                                  type: string
                                tag:
                                  description: |-
                                    Tag denotes a tag in the repository that matched selection criteria and
                                    resolved to this commit.
                                  type: string
                              type: object
                            type: array
                          images:
                            description: Images describes specific versions of specific
                              container images.
                            items:
                              description: Image describes a specific version of a
                                container image.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations is a map of arbitrary metadata
                                    for the image.
                                  type: object
                                digest:
                                  description: |-
                                    Digest identifies a specific version of the image in the repository
                                    specified by RepoURL. This is a more precise identifier than Tag.
                                  type: string
                                gitRepoURL:
                                  description: |-
                                    GitRepoURL specifies the URL of a Git repository that contains the source
                                    code for the image repository referenced by the RepoURL field if Kargo was
                                    able to infer it.

                                    Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
                                  type: string
                                repoURL:
                                  description: RepoURL describes the repository in
                                    which the image can be found.
                                  type: string
                                tag:
                                  description: |-
                                    Tag identifies a specific version of the image in the repository specified
                                    by RepoURL.
                                  type: string
                              type: object
                            type: array
                          name:
                            description: |-
                              Name is a system-assigned identifier derived deterministically from
                              the contents of the Freight. I.e., two pieces of Freight can be compared
                              for equality by comparing their Names.
                            type: string
                          origin:
                            description: Origin describes a kind of Freight in terms
                              of its origin.
                            properties:
                              kind:
                                description: |-
                                  Kind is the kind of resource from which Freight may have originated. At
                                  present, this can only be "Warehouse".
                                enum:
                                - Warehouse
                                type: string
                              name:
                                description: |-
                                  Name is the name of the resource of the kind indicated by the Kind field
                                  from which Freight may originate.
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                        type: object
                      freightCollection:
                        description: |-
                          FreightCollection contains the details of the piece of Freight referenced
                          by this Promotion as well as any additional Freight that is carried over
                          from the target Stage's current state.
                        properties:
                          id:
                            description: |-
                              ID is a unique and deterministically calculated identifier for the
                              FreightCollection. It is updated on each use of the UpdateOrPush method.
                            type: string
                          items:
                            additionalProperties:
                              description: |-
                                FreightReference is a simplified representation of a piece of Freight -- not
                                a root resource type.
                              properties:
                                charts:
                                  description: Charts describes specific versions
                                    of specific Helm charts.
                                  items:
                                    description: Chart describes a specific version
                                      of a Helm chart.
                                    properties:
                                      name:
                                        description: Name specifies the name of the
                                          chart.
                                        type: string
                                      repoURL:
                                        description: |-
                                          RepoURL specifies the URL of a Helm chart repository. Classic chart
                                          repositories (using HTTP/S) can contain differently named charts. When this
                                          field points to such a repository, the Name field will specify the name of
                                          the chart within the repository. In the case of a repository within an OCI
                                          registry, the URL implicitly points to a specific chart and the Name field
                                          will be empty.
                                        type: string
                                      version:
                                        description: Version specifies a particular
                                          version of the chart.
                                        type: string
                                    type: object
                                  type: array
                                commits:
                                  description: Commits describes specific Git repository
                                    commits.
                                  items:
                                    description: GitCommit describes a specific commit
                                      from a specific Git repository.
                                    properties:
                                      author:
                                        description: Author is the author of the commit.
                                        type: string
                                      branch:
                                        description: Branch denotes the branch of
                                          the repository where this commit was found.
                                        type: string
                                      committer:
                                        description: Committer is the person who committed
                                          the commit.
                                        type: string
                                      id:
                                        description: |-
                                          ID is the ID of a specific commit in the Git repository specified by
                                          RepoURL.
                                        type: string
                                      message:
                                        description: |-
                                          Message is the message associated with the commit. At present, this only
                                          contains the first line (subject) of the commit message.
                                        type: string
                                      repoURL:
                                        description: RepoURL is the URL of a Git repository.
                                        type: string
                                      tag:
                                        description: |-
                                          Tag denotes a tag in the repository that matched selection criteria and
                                          resolved to this commit.
                                        type: string
                                    type: object
                                  type: array
                                images:
                                  description: Images describes specific versions
                                    of specific container images.
                                  items:
                                    description: Image describes a specific version
                                      of a container image.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: Annotations is a map of arbitrary
                                          metadata for the image.
                                        type: object
                                      digest:
                                        description: |-
                                          Digest identifies a specific version of the image in the repository
                                          specified by RepoURL. This is a more precise identifier than Tag.
                                        type: string
                                      gitRepoURL:
                                        description: |-
                                          GitRepoURL specifies the URL of a Git repository that contains the source
                                          code for the image repository referenced by the RepoURL field if Kargo was
                                          able to infer it.

                                          Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
                                        type: string
                                      repoURL:
                                        description: RepoURL describes the repository
                                          in which the image can be found.
                                        type: string
                                      tag:
                                        description: |-
                                          Tag identifies a specific version of the image in the repository specified
                                          by RepoURL.
                                        type: string
                                    type: object
                                  type: array
                                name:
                                  description: |-
                                    Name is a system-assigned identifier derived deterministically from
                                    the contents of the Freight. I.e., two pieces of Freight can be compared
                                    for equality by comparing their Names.
                                  type: string
                                origin:
                                  description: Origin describes a kind of Freight
                                    in terms of its origin.
                                  properties:
                                    kind:
                                      description: |-
                                        Kind is the kind of resource from which Freight may have originated. At
                                        present, this can only be "Warehouse".
                                      enum:
                                      - Warehouse
                                      type: string
                                    name:
                                      description: |-
                                        Name is the name of the resource of the kind indicated by the Kind field
                                        from which Freight may originate.
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                              type: object
                            description: |-
                              Freight is a map of FreightReference objects, indexed by their Warehouse
                              origin.
                            type: object
                          verificationHistory:
                            description: |-
                              VerificationHistory is a stack of recent VerificationInfo. By default,
                              the last ten VerificationInfo are stored.
                            items:
                              description: |-
                                VerificationInfo contains the details of an instance of a Verification
                                process.
                              properties:
                                actor:
                                  description: |-
                                    Actor is the name of the entity that initiated or aborted the
                                    Verification process.
                                  type: string
                                analysisRun:
                                  description: |-
                                    AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
                                    the Verification process.
                                  properties:
                                    name:
                                      description: Name is the name of the AnalysisRun.
                                      type: string
                                    namespace:
                                      description: Namespace is the namespace of the
                                        AnalysisRun.
                                      type: string
                                    phase:
                                      description: Phase is the last observed phase
                                        of the AnalysisRun referenced by Name.
                                      type: string
                                  required:
                                  - name
                                  - namespace
                                  - phase
                                  type: object
                                finishTime:
                                  description: FinishTime is the time at which the
                                    Verification process finished.
                                  format: date-time
                                  type: string
                                id:
                                  description: ID is the identifier of the Verification
                                    process.
                                  type: string
                                message:
                                  description: |-
                                    Message may contain additional information about why the verification
                                    process is in its current phase.
                                  type: string
                                phase:
                                  description: |-
                                    Phase describes the current phase of the Verification process. Generally,
                                    this will be a reflection of the underlying AnalysisRun's phase, however,
                                    there are exceptions to this, such as in the case where an AnalysisRun
                                    cannot be launched successfully.
                                  type: string
                                startTime:
                                  description: StartTime is the time at which the
                                    Verification process was started.
                                  format: date-time
                                  type: string
                              type: object
                            type: array
                        required:
                        - id
                        type: object
                      healthChecks:
                        description: |-
                          HealthChecks contains the health check directives to be executed after
                          the Promotion has completed.
                        items:
                          description: |-
                            HealthCheckStep describes a health check directive which can be executed by
                            a Stage to verify the health of a Promotion result.
                          properties:
                            config:
                              description: Config is the configuration for the directive.
                              x-kubernetes-preserve-unknown-fields: true
                            uses:
                              description: Uses identifies a runner that can execute
                                this step.
                              minLength: 1
                              type: string
                          required:
                          - uses
                          type: object
                        type: array
                      lastHandledRefresh:
                        description: |-
                          LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
                          annotation that was handled by the controller. This field can be used to
                          determine whether the request to refresh the resource has been handled.
                        type: string
                      message:
                        description: |-
                          Message is a display message about the promotion, including any errors
                          preventing the Promotion controller from executing this Promotion.
                          i.e. If the Phase field has a value of Failed, this field can be expected
                          to explain why.
                        type: string
                      phase:
                        description: Phase describes where the Promotion currently
                          is in its lifecycle.
                        type: string
                      state:
                        description: |-
                          State stores the state of the promotion process between reconciliation
                          attempts.
                        x-kubernetes-preserve-unknown-fields: true
                      stepExecutionMetadata:
                        description: |-
                          StepExecutionMetadata tracks metadata pertaining to the execution
                          of individual promotion steps.
                        items:
                          description: |-
                            StepExecutionMetadata tracks metadata pertaining to the execution of
                            a promotion step.
                          properties:
                            alias:
                              description: Alias is the alias of the step.
                              type: string
                            continueOnError:
                              description: |-
                                ContinueOnError is a boolean value that, if set to true, will cause the
                                Promotion to continue executing the next step even if this step fails. It
                                also will not permit this failure to impact the overall status of the
                                Promotion.
                              type: boolean
                            errorCount:
                              description: ErrorCount tracks consecutive failed attempts
                                to execute the step.
                              format: int32
                              type: integer
                            finishedAt:
                              description: |-
                                FinishedAt is the time at which the final attempt to execute the step
                                completed.
                              format: date-time
                              type: string
                            message:
                              description: Message is a display message about the
                                step, including any errors.
                              type: string
                            startedAt:
                              description: |-
                                StartedAt is the time at which the first attempt to execute the step
                                began.
                              format: date-time
                              type: string
                            status:
                              description: Status is the high-level outcome of the
                                step.
                              type: string
                          type: object
                        type: array
                    type: object
                required:
                - name
                type: object
              freightHistory:
                description: |-
                  FreightHistory is a list of recent Freight selections that were deployed
                  to the Stage. By default, the last ten Freight selections are stored.
                  The first item in the list is the most recent Freight selection and
                  currently deployed to the Stage, subsequent items are older selections.
                items:
                  description: |-
                    FreightCollection is a collection of FreightReferences, each of which
                    represents a piece of Freight that has been selected for deployment to a
                    Stage.
                  properties:
                    id:
                      description: |-
                        ID is a unique and deterministically calculated identifier for the
                        FreightCollection. It is updated on each use of the UpdateOrPush method.
                      type: string
                    items:
                      additionalProperties:
                        description: |-
                          FreightReference is a simplified representation of a piece of Freight -- not
                          a root resource type.
                        properties:
                          charts:
                            description: Charts describes specific versions of specific
                              Helm charts.
                            items:
                              description: Chart describes a specific version of a
                                Helm chart.
                              properties:
                                name:
                                  description: Name specifies the name of the chart.
                                  type: string
                                repoURL:
                                  description: |-
                                    RepoURL specifies the URL of a Helm chart repository. Classic chart
                                    repositories (using HTTP/S) can contain differently named charts. When this
                                    field points to such a repository, the Name field will specify the name of
                                    the chart within the repository. In the case of a repository within an OCI
                                    registry, the URL implicitly points to a specific chart and the Name field
                                    will be empty.
                                  type: string
                                version:
                                  description: Version specifies a particular version
                                    of the chart.
                                  type: string
                              type: object
                            type: array
                          commits:
                            description: Commits describes specific Git repository
                              commits.
                            items:
                              description: GitCommit describes a specific commit from
                                a specific Git repository.
                              properties:
                                author:
                                  description: Author is the author of the commit.
                                  type: string
                                branch:
                                  description: Branch denotes the branch of the repository
                                    where this commit was found.
                                  type: string
                                committer:
                                  description: Committer is the person who committed
                                    the commit.
                                  type: string
                                id:
                                  description: |-
                                    ID is the ID of a specific commit in the Git repository specified by
                                    RepoURL.
                                  type: string
                                message:
                                  description: |-
                                    Message is the message associated with the commit. At present, this only
                                    contains the first line (subject) of the commit message.
                                  type: string
                                repoURL:
                                  description: RepoURL is the URL of a Git repository.
                                  type: string
                                tag:
                                  description: |-
                                    Tag denotes a tag in the repository that matched selection criteria and
                                    resolved to this commit.
                                  type: string
                              type: object
                            type: array
                          images:
                            description: Images describes specific versions of specific
                              container images.
                            items:
                              description: Image describes a specific version of a
                                container image.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations is a map of arbitrary metadata
                                    for the image.
                                  type: object
                                digest:
                                  description: |-
                                    Digest identifies a specific version of the image in the repository
                                    specified by RepoURL. This is a more precise identifier than Tag.
                                  type: string
                                gitRepoURL:
                                  description: |-
                                    GitRepoURL specifies the URL of a Git repository that contains the source
                                    code for the image repository referenced by the RepoURL field if Kargo was
                                    able to infer it.

                                    Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
                                  type: string
                                repoURL:
                                  description: RepoURL describes the repository in
                                    which the image can be found.
                                  type: string
                                tag:
                                  description: |-
                                    Tag identifies a specific version of the image in the repository specified
                                    by RepoURL.
                                  type: string
                              type: object
                            type: array
                          name:
                            description: |-
                              Name is a system-assigned identifier derived deterministically from
                              the contents of the Freight. I.e., two pieces of Freight can be compared
                              for equality by comparing their Names.
                            type: string
                          origin:
                            description: Origin describes a kind of Freight in terms
                              of its origin.
                            properties:
                              kind:
                                description: |-
                                  Kind is the kind of resource from which Freight may have originated. At
                                  present, this can only be "Warehouse".
                                enum:
                                - Warehouse
                                type: string
                              name:
                                description: |-
                                  Name is the name of the resource of the kind indicated by the Kind field
                                  from which Freight may originate.
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                        type: object
                      description: |-
                        Freight is a map of FreightReference objects, indexed by their Warehouse
                        origin.
                      type: object
                    verificationHistory:
                      description: |-
                        VerificationHistory is a stack of recent VerificationInfo. By default,
                        the last ten VerificationInfo are stored.
                      items:
                        description: |-
                          VerificationInfo contains the details of an instance of a Verification
                          process.
                        properties:
                          actor:
                            description: |-
                              Actor is the name of the entity that initiated or aborted the
                              Verification process.
                            type: string
                          analysisRun:
                            description: |-
                              AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
                              the Verification process.
                            properties:
                              name:
                                description: Name is the name of the AnalysisRun.
                                type: string
                              namespace:
                                description: Namespace is the namespace of the AnalysisRun.
                                type: string
                              phase:
                                description: Phase is the last observed phase of the
                                  AnalysisRun referenced by Name.
                                type: string
                            required:
                            - name
                            - namespace
                            - phase
                            type: object
                          finishTime:
                            description: FinishTime is the time at which the Verification
                              process finished.
                            format: date-time
                            type: string
                          id:
                            description: ID is the identifier of the Verification
                              process.
                            type: string
                          message:
                            description: |-
                              Message may contain additional information about why the verification
                              process is in its current phase.
                            type: string
                          phase:
                            description: |-
                              Phase describes the current phase of the Verification process. Generally,
                              this will be a reflection of the underlying AnalysisRun's phase, however,
                              there are exceptions to this, such as in the case where an AnalysisRun
                              cannot be launched successfully.
                            type: string
                          startTime:
                            description: StartTime is the time at which the Verification
                              process was started.
                            format: date-time
                            type: string
                        type: object
                      type: array
                  required:
                  - id
                  type: object
                type: array
              freightSummary:
                description: |-
                  FreightSummary is human-readable text maintained by the controller that
                  summarizes what Freight is currently deployed to the Stage. For Stages that
                  request a single piece of Freight AND the request has been fulfilled, this
                  field will simply contain the name of the Freight. For Stages that request
                  a single piece of Freight AND the request has NOT been fulfilled, or for
                  Stages that request multiple pieces of Freight, this field will contain a
                  summary of fulfilled/requested Freight. The existence of this field is a
                  workaround for kubectl limitations so that this complex but valuable
                  information can be displayed in a column in response to `kubectl get
                  stages`.
                type: string
              health:
                description: Health is the Stage's last observed health.
                properties:
                  config:
                    description: |-
                      Config is the opaque configuration of all health checks performed on this
                      Stage.
                    x-kubernetes-preserve-unknown-fields: true
                  issues:
                    description: |-
                      Issues clarifies why a Stage in any state other than Healthy is in that
                      state. This field will always be the empty when a Stage is Healthy.
                    items:
                      type: string
                    type: array
                  output:
                    description: Output is the opaque output of all health checks
                      performed on this Stage.
                    x-kubernetes-preserve-unknown-fields: true
                  status:
                    description: Status describes the health of the Stage.
                    type: string
                type: object
              lastHandledRefresh:
                description: |-
                  LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
                  annotation that was handled by the controller. This field can be used to
                  determine whether the request to refresh the resource has been handled.
                type: string
              lastPromotion:
                description: LastPromotion is a reference to the last completed promotion.
                properties:
                  finishedAt:
                    description: FinishedAt is the time at which the Promotion was
                      completed.
                    format: date-time
                    type: string
                  freight:
                    description: Freight is the freight being promoted.
                    properties:
                      charts:
                        description: Charts describes specific versions of specific
                          Helm charts.
                        items:
                          description: Chart describes a specific version of a Helm
                            chart.
                          properties:
                            name:
                              description: Name specifies the name of the chart.
                              type: string
                            repoURL:
                              description: |-
                                RepoURL specifies the URL of a Helm chart repository. Classic chart
                                repositories (using HTTP/S) can contain differently named charts. When this
                                field points to such a repository, the Name field will specify the name of
                                the chart within the repository. In the case of a repository within an OCI
                                registry, the URL implicitly points to a specific chart and the Name field
                                will be empty.
                              type: string
                            version:
                              description: Version specifies a particular version
                                of the chart.
                              type: string
                          type: object
                        type: array
                      commits:
                        description: Commits describes specific Git repository commits.
                        items:
                          description: GitCommit describes a specific commit from
                            a specific Git repository.
                          properties:
                            author:
                              description: Author is the author of the commit.
                              type: string
                            branch:
                              description: Branch denotes the branch of the repository
                                where this commit was found.
                              type: string
                            committer:
                              description: Committer is the person who committed the
                                commit.
                              type: string
                            id:
                              description: |-
                                ID is the ID of a specific commit in the Git repository specified by
                                RepoURL.
                              type: string
                            message:
                              description: |-
                                Message is the message associated with the commit. At present, this only
                                contains the first line (subject) of the commit message.
                              type: string
                            repoURL:
                              description: RepoURL is the URL of a Git repository.
                              type: string
                            tag:
                              description: |-
                                Tag denotes a tag in the repository that matched selection criteria and
                                resolved to this commit.
                              type: string
                          type: object
                        type: array
                      images:
                        description: Images describes specific versions of specific
                          container images.
                        items:
                          description: Image describes a specific version of a container
                            image.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations is a map of arbitrary metadata
                                for the image.
                              type: object
                            digest:
                              description: |-
                                Digest identifies a specific version of the image in the repository
                                specified by RepoURL. This is a more precise identifier than Tag.
                              type: string
                            gitRepoURL:
                              description: |-
                                GitRepoURL specifies the URL of a Git repository that contains the source
                                code for the image repository referenced by the RepoURL field if Kargo was
                                able to infer it.

                                Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
                              type: string
                            repoURL:
                              description: RepoURL describes the repository in which
                                the image can be found.
                              type: string
                            tag:
                              description: |-
                                Tag identifies a specific version of the image in the repository specified
                                by RepoURL.
                              type: string
                          type: object
                        type: array
                      name:
                        description: |-
                          Name is a system-assigned identifier derived deterministically from
                          the contents of the Freight. I.e., two pieces of Freight can be compared
                          for equality by comparing their Names.
                        type: string
                      origin:
                        description: Origin describes a kind of Freight in terms of
                          its origin.
                        properties:
                          kind:
                            description: |-
                              Kind is the kind of resource from which Freight may have originated. At
                              present, this can only be "Warehouse".
                            enum:
                            - Warehouse
                            type: string
                          name:
                            description: |-
                              Name is the name of the resource of the kind indicated by the Kind field
                              from which Freight may originate.
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                    type: object
                  name:
                    description: Name is the name of the Promotion.
                    type: string
                  status:
                    description: Status is the (optional) status of the Promotion.
                    properties:
                      currentStep:
                        description: |-
                          CurrentStep is the index of the current promotion step being executed. This
                          permits steps that have already run successfully to be skipped on
                          subsequent reconciliations attempts.
                        format: int64
                        type: integer
                      finishedAt:
                        description: FinishedAt is the time when the promotion was
                          completed.
                        format: date-time
                        type: string
                      freight:
                        description: Freight is the detail of the piece of freight
                          that was referenced by this promotion.
                        properties:
                          charts:
                            description: Charts describes specific versions of specific
                              Helm charts.
                            items:
                              description: Chart describes a specific version of a
                                Helm chart.
                              properties:
                                name:
                                  description: Name specifies the name of the chart.
                                  type: string
                                repoURL:
                                  description: |-
                                    RepoURL specifies the URL of a Helm chart repository. Classic chart
                                    repositories (using HTTP/S) can contain differently named charts. When this
                                    field points to such a repository, the Name field will specify the name of
                                    the chart within the repository. In the case of a repository within an OCI
                                    registry, the URL implicitly points to a specific chart and the Name field
                                    will be empty.
                                  type: string
                                version:
                                  description: Version specifies a particular version
                                    of the chart.
                                  type: string
                              type: object
                            type: array
                          commits:
                            description: Commits describes specific Git repository
                              commits.
                            items:
                              description: GitCommit describes a specific commit from
                                a specific Git repository.
                              properties:
                                author:
                                  description: Author is the author of the commit.
                                  type: string
                                branch:
                                  description: Branch denotes the branch of the repository
                                    where this commit was found.
                                  type: string
                                committer:
                                  description: Committer is the person who committed
                                    the commit.
                                  type: string
                                id:
                                  description: |-
                                    ID is the ID of a specific commit in the Git repository specified by
                                    RepoURL.
                                  type: string
                                message:
                                  description: |-
                                    Message is the message associated with the commit. At present, this only
                                    contains the first line (subject) of the commit message.
                                  type: string
                                repoURL:
                                  description: RepoURL is the URL of a Git repository.
                                  type: string
                                tag:
                                  description: |-
                                    Tag denotes a tag in the repository that matched selection criteria and
                                    resolved to this commit.
                                  type: string
                              type: object
                            type: array
                          images:
                            description: Images describes specific versions of specific
                              container images.
                            items:
                              description: Image describes a specific version of a
                                container image.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations is a map of arbitrary metadata
                                    for the image.
                                  type: object
                                digest:
                                  description: |-
                                    Digest identifies a specific version of the image in the repository
                                    specified by RepoURL. This is a more precise identifier than Tag.
                                  type: string
                                gitRepoURL:
                                  description: |-
                                    GitRepoURL specifies the URL of a Git repository that contains the source
                                    code for the image repository referenced by the RepoURL field if Kargo was
                                    able to infer it.

                                    Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
                                  type: string
                                repoURL:
                                  description: RepoURL describes the repository in
                                    which the image can be found.
                                  type: string
                                tag:
                                  description: |-
                                    Tag identifies a specific version of the image in the repository specified
                                    by RepoURL.
                                  type: string
                              type: object
                            type: array
                          name:
                            description: |-
                              Name is a system-assigned identifier derived deterministically from
                              the contents of the Freight. I.e., two pieces of Freight can be compared
                              for equality by comparing their Names.
                            type: string
                          origin:
                            description: Origin describes a kind of Freight in terms
                              of its origin.
                            properties:
                              kind:
                                description: |-
                                  Kind is the kind of resource from which Freight may have originated. At
                                  present, this can only be "Warehouse".
                                enum:
                                - Warehouse
                                type: string
                              name:
                                description: |-
                                  Name is the name of the resource of the kind indicated by the Kind field
                                  from which Freight may originate.
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                        type: object
                      freightCollection:
                        description: |-
                          FreightCollection contains the details of the piece of Freight referenced
                          by this Promotion as well as any additional Freight that is carried over
                          from the target Stage's current state.
                        properties:
                          id:
                            description: |-
                              ID is a unique and deterministically calculated identifier for the
                              FreightCollection. It is updated on each use of the UpdateOrPush method.
                            type: string
                          items:
                            additionalProperties:
                              description: |-
                                FreightReference is a simplified representation of a piece of Freight -- not
                                a root resource type.
                              properties:
                                charts:
                                  description: Charts describes specific versions
                                    of specific Helm charts.
                                  items:
                                    description: Chart describes a specific version
                                      of a Helm chart.
                                    properties:
                                      name:
                                        description: Name specifies the name of the
                                          chart.
                                        type: string
                                      repoURL:
                                        description: |-
                                          RepoURL specifies the URL of a Helm chart repository. Classic chart
                                          repositories (using HTTP/S) can contain differently named charts. When this
                                          field points to such a repository, the Name field will specify the name of
                                          the chart within the repository. In the case of a repository within an OCI
                                          registry, the URL implicitly points to a specific chart and the Name field
                                          will be empty.
                                        type: string
                                      version:
                                        description: Version specifies a particular
                                          version of the chart.
                                        type: string
                                    type: object
                                  type: array
                                commits:
                                  description: Commits describes specific Git repository
                                    commits.
                                  items:
                                    description: GitCommit describes a specific commit
                                      from a specific Git repository.
                                    properties:
                                      author:
                                        description: Author is the author of the commit.
                                        type: string
                                      branch:
                                        description: Branch denotes the branch of
                                          the repository where this commit was found.
                                        type: string
                                      committer:
                                        description: Committer is the person who committed
                                          the commit.
                                        type: string
                                      id:
                                        description: |-
                                          ID is the ID of a specific commit in the Git repository specified by
                                          RepoURL.
                                        type: string
                                      message:
                                        description: |-
                                          Message is the message associated with the commit. At present, this only
                                          contains the first line (subject) of the commit message.
                                        type: string
                                      repoURL:
                                        description: RepoURL is the URL of a Git repository.
                                        type: string
                                      tag:
                                        description: |-
                                          Tag denotes a tag in the repository that matched selection criteria and
                                          resolved to this commit.
                                        type: string
                                    type: object
                                  type: array
                                images:
                                  description: Images describes specific versions
                                    of specific container images.
                                  items:
                                    description: Image describes a specific version
                                      of a container image.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: Annotations is a map of arbitrary
                                          metadata for the image.
                                        type: object
                                      digest:
                                        description: |-
                                          Digest identifies a specific version of the image in the repository
                                          specified by RepoURL. This is a more precise identifier than Tag.
                                        type: string
                                      gitRepoURL:
                                        description: |-
                                          GitRepoURL specifies the URL of a Git repository that contains the source
                                          code for the image repository referenced by the RepoURL field if Kargo was
                                          able to infer it.

                                          Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
                                        type: string
                                      repoURL:
                                        description: RepoURL describes the repository
                                          in which the image can be found.
                                        type: string
                                      tag:
                                        description: |-
                                          Tag identifies a specific version of the image in the repository specified
                                          by RepoURL.
                                        type: string
                                    type: object
                                  type: array
                                name:
                                  description: |-
                                    Name is a system-assigned identifier derived deterministically from
                                    the contents of the Freight. I.e., two pieces of Freight can be compared
                                    for equality by comparing their Names.
                                  type: string
                                origin:
                                  description: Origin describes a kind of Freight
                                    in terms of its origin.
                                  properties:
                                    kind:
                                      description: |-
                                        Kind is the kind of resource from which Freight may have originated. At
                                        present, this can only be "Warehouse".
                                      enum:
                                      - Warehouse
                                      type: string
                                    name:
                                      description: |-
                                        Name is the name of the resource of the kind indicated by the Kind field
                                        from which Freight may originate.
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                              type: object
                            description: |-
                              Freight is a map of FreightReference objects, indexed by their Warehouse
                              origin.
                            type: object
                          verificationHistory:
                            description: |-
                              VerificationHistory is a stack of recent VerificationInfo. By default,
                              the last ten VerificationInfo are stored.
                            items:
                              description: |-
                                VerificationInfo contains the details of an instance of a Verification
                                process.
                              properties:
                                actor:
                                  description: |-
                                    Actor is the name of the entity that initiated or aborted the
                                    Verification process.
                                  type: string
                                analysisRun:
                                  description: |-
                                    AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements
                                    the Verification process.
                                  properties:
                                    name:
                                      description: Name is the name of the AnalysisRun.
                                      type: string
                                    namespace:
                                      description: Namespace is the namespace of the
                                        AnalysisRun.
                                      type: string
                                    phase:
                                      description: Phase is the last observed phase
                                        of the AnalysisRun referenced by Name.
                                      type: string
                                  required:
                                  - name
                                  - namespace
                                  - phase
                                  type: object
                                finishTime:
                                  description: FinishTime is the time at which the
                                    Verification process finished.
                                  format: date-time
                                  type: string
                                id:
                                  description: ID is the identifier of the Verification
                                    process.
                                  type: string
                                message:
                                  description: |-
                                    Message may contain additional information about why the verification
                                    process is in its current phase.
                                  type: string
                                phase:
                                  description: |-
                                    Phase describes the current phase of the Verification process. Generally,
                                    this will be a reflection of the underlying AnalysisRun's phase, however,
                                    there are exceptions to this, such as in the case where an AnalysisRun
                                    cannot be launched successfully.
                                  type: string
                                startTime:
                                  description: StartTime is the time at which the
                                    Verification process was started.
                                  format: date-time
                                  type: string
                              type: object
                            type: array
                        required:
                        - id
                        type: object
                      healthChecks:
                        description: |-
                          HealthChecks contains the health check directives to be executed after
                          the Promotion has completed.
                        items:
                          description: |-
                            HealthCheckStep describes a health check directive which can be executed by
                            a Stage to verify the health of a Promotion result.
                          properties:
                            config:
                              description: Config is the configuration for the directive.
                              x-kubernetes-preserve-unknown-fields: true
                            uses:
                              description: Uses identifies a runner that can execute
                                this step.
                              minLength: 1
                              type: string
                          required:
                          - uses
                          type: object
                        type: array
                      lastHandledRefresh:
                        description: |-
                          LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
                          annotation that was handled by the controller. This field can be used to
                          determine whether the request to refresh the resource has been handled.
                        type: string
                      message:
                        description: |-
                          Message is a display message about the promotion, including any errors
                          preventing the Promotion controller from executing this Promotion.
                          i.e. If the Phase field has a value of Failed, this field can be expected
                          to explain why.
                        type: string
                      phase:
                        description: Phase describes where the Promotion currently
                          is in its lifecycle.
                        type: string
                      state:
                        description: |-
                          State stores the state of the promotion process between reconciliation
                          attempts.
                        x-kubernetes-preserve-unknown-fields: true
                      stepExecutionMetadata:
                        description: |-
                          StepExecutionMetadata tracks metadata pertaining to the execution
                          of individual promotion steps.
                        items:
                          description: |-
                            StepExecutionMetadata tracks metadata pertaining to the execution of
                            a promotion step.
                          properties:
                            alias:
                              description: Alias is the alias of the step.
                              type: string
                            continueOnError:
                              description: |-
                                ContinueOnError is a boolean value that, if set to true, will cause the
                                Promotion to continue executing the next step even if this step fails. It
                                also will not permit this failure to impact the overall status of the
                                Promotion.
                              type: boolean
                            errorCount:
                              description: ErrorCount tracks consecutive failed attempts
                                to execute the step.
                              format: int32
                              type: integer
                            finishedAt:
                              description: |-
                                FinishedAt is the time at which the final attempt to execute the step
                                completed.
                              format: date-time
                              type: string
                            message:
                              description: Message is a display message about the
                                step, including any errors.
                              type: string
                            startedAt:
                              description: |-
                                StartedAt is the time at which the first attempt to execute the step
                                began.
                              format: date-time
                              type: string
                            status:
                              description: Status is the high-level outcome of the
                                step.
                              type: string
                          type: object
                        type: array
                    type: object
                required:
                - name
                type: object
              observedGeneration:
                description: |-
                  ObservedGeneration represents the .metadata.generation that this Stage
                  status was reconciled against.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: warehouses.kargo.akuity.io
spec:
  group: kargo.akuity.io
  names:
    kind: Warehouse
    listKind: WarehouseList
    plural: warehouses
    singular: warehouse
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.shard
      name: Shard
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Warehouse is a source of Freight.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes sources of artifacts.
            properties:
              freightCreationPolicy:
                default: Automatic
                description: |-
                  FreightCreationPolicy describes how Freight is created by this Warehouse.
                  This field is optional. When left unspecified, the field is implicitly
                  treated as if its value were "Automatic".

                  Accepted values:

                  - "Automatic": New Freight is created automatically when any new artifact
                    is discovered.
                  - "Manual": New Freight is never created automatically.
                enum:
                - Automatic
                - Manual
                type: string
              interval:
                default: 5m0s
                description: |-
                  Interval is the reconciliation interval for this Warehouse. On each
                  reconciliation, the Warehouse will discover new artifacts and optionally
                  produce new Freight. This field is optional. When left unspecified, the
                  field is implicitly treated as if its value were "5m0s".
                pattern: ^([0-9]+(\.[0-9]+)?(s|m|h))+$
                type: string
              shard:
                description: |-
                  Shard is the name of the shard that this Warehouse belongs to. This is an
                  optional field. If not specified, the Warehouse will belong to the default
                  shard. A defaulting webhook will sync this field with the value of the
                  kargo.akuity.io/shard label. When the shard label is not present or differs
                  from the value of this field, the defaulting webhook will set the label to
                  the value of this field. If the shard label is present and this field is
                  empty, the defaulting webhook will set the value of this field to the value
                  of the shard label.
                type: string
              subscriptions:
                description: |-
                  Subscriptions describes sources of artifacts to be included in Freight
                  produced by this Warehouse.
                items:
                  description: |-
                    RepoSubscription describes a subscription to ONE OF a Git repository, a
                    container image repository, or a Helm chart repository.
                  properties:
                    chart:
                      description: Chart describes a subscription to a Helm chart
                        repository.
                      properties:
                        discoveryLimit:
                          default: 20
                          description: |-
                            DiscoveryLimit is an optional limit on the number of chart versions that
                            can be discovered for this subscription. The limit is applied after
                            filtering charts based on the SemverConstraint field.
                            When left unspecified, the field is implicitly treated as if its value
                            were "20". The upper limit for this field is 100.
                          format: int32
                          maximum: 100
                          minimum: 1
                          type: integer
                        name:
                          description: |-
                            Name specifies the name of a Helm chart to subscribe to within a classic
                            chart repository specified by the RepoURL field. This field is required
                            when the RepoURL field points to a classic chart repository and MUST
                            otherwise be empty.
                          type: string
                        repoURL:
                          description: |-
                            RepoURL specifies the URL of a Helm chart repository. It may be a classic
                            chart repository (using HTTP/S) OR a repository within an OCI registry.
                            Classic chart repositories can contain differently named charts. When this
                            field points to such a repository, the Name field MUST also be used
                            to specify the name of the desired chart within that repository. In the
                            case of a repository within an OCI registry, the URL implicitly points to
                            a specific chart and the Name field MUST NOT be used. The RepoURL field is
                            required.
                          minLength: 1
                          pattern: ^(((https?)|(oci))://)([\w\d\.\-]+)(:[\d]+)?(/.*)*$
                          type: string
                        semverConstraint:
                          description: |-
                            SemverConstraint specifies constraints on what new chart versions are
                            permissible. This field is optional. When left unspecified, there will be
                            no constraints, which means the latest version of the chart will always be
                            used. Care should be taken with leaving this field unspecified, as it can
                            lead to the unanticipated rollout of breaking changes.
                            More info: https://github.com/masterminds/semver#checking-version-constraints
                          type: string
                      required:
                      - repoURL
                      type: object
                    git:
                      description: Git describes a subscriptions to a Git repository.
                      properties:
                        allowTags:
                          description: |-
                            AllowTags is a regular expression that can optionally be used to limit the
                            tags that are considered in determining the newest commit of interest. The
                            value in this field only has any effect when the CommitSelectionStrategy is
                            Lexical, NewestTag, or SemVer. This field is optional.
                          type: string
                        branch:
                          description: |-
                            Branch references a particular branch of the repository. The value in this
                            field only has any effect when the CommitSelectionStrategy is
                            NewestFromBranch or left unspecified (which is implicitly the same as
                            NewestFromBranch). This field is optional. When left unspecified, (and the
                            CommitSelectionStrategy is NewestFromBranch or unspecified), the
                            subscription is implicitly to the repository's default branch.
                          maxLength: 255
                          minLength: 1
                          pattern: ^[a-zA-Z0-9]([a-zA-Z0-9._\/-]*[a-zA-Z0-9_-])?$
                          type: string
                        commitSelectionStrategy:
                          default: NewestFromBranch
                          description: |-
                            CommitSelectionStrategy specifies the rules for how to identify the newest
                            commit of interest in the repository specified by the RepoURL field. This
                            field is optional. When left unspecified, the field is implicitly treated
                            as if its value were "NewestFromBranch".

                            Accepted values:

                            - "NewestFromBranch": Selects the latest commit on the branch specified
                              by the Branch field or the default branch if none is specified. This is
                              the default strategy.

                            - "SemVer": Selects the commit referenced by the the semantically greatest
                              tag. The SemverConstraint field can optionally be used to narrow the set
                              of tags eligible for selection.

                            - "Lexical": Selects the commit referenced by the lexicographically
                              greatest tag. Useful when tags embed a _leading_ date or timestamp. The
                              AllowTags and IgnoreTags fields can optionally be used to narrow the set
                              of tags eligible for selection.

                            - "NewestTag": Selects the commit referenced by the most recently created
                              tag. The AllowTags and IgnoreTags fields can optionally be used to
                              narrow the set of tags eligible for selection.
                          enum:
                          - Lexical
                          - NewestFromBranch
                          - NewestTag
                          - SemVer
                          type: string
                        discoveryLimit:
                          default: 20
                          description: |-
                            DiscoveryLimit is an optional limit on the number of commits that can be
                            discovered for this subscription. The limit is applied after filtering
                            commits based on the AllowTags and IgnoreTags fields.
                            When left unspecified, the field is implicitly treated as if its value
                            were "20". The upper limit for this field is 100.
                          format: int32
                          maximum: 100
                          minimum: 1
                          type: integer
                        excludePaths:
                          description: |-
                            ExcludePaths is a list of selectors that designate paths in the repository
                            that should NOT trigger the production of new Freight when changes are
                            detected therein. When specified, changes in the identified paths will not
                            trigger Freight production. When not specified, paths that should trigger
                            Freight production will be defined solely by IncludePaths. Selectors may be
                            defined using:
                              1. Exact paths to files or directories (ex. "charts/foo")
                              2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
                              3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
                                 ex. "regexp:^.*\.yaml$")
                            Paths selected by IncludePaths may be unselected by ExcludePaths. This
                            is a useful method for including a broad set of paths and then excluding a
                            subset of them.
                          items:
                            type: string
                          type: array
                        ignoreTags:
                          description: |-
                            IgnoreTags is a list of tags that must be ignored when determining the
                            newest commit of interest. No regular expressions or glob patterns are
                            supported yet. The value in this field only has any effect when the
                            CommitSelectionStrategy is Lexical, NewestTag, or SemVer. This field is
                            optional.
                          items:
                            type: string
                          type: array
                        includePaths:
                          description: |-
                            IncludePaths is a list of selectors that designate paths in the repository
                            that should trigger the production of new Freight when changes are detected
                            therein. When specified, only changes in the identified paths will trigger
                            Freight production. When not specified, changes in any path will trigger
                            Freight production. Selectors may be defined using:
                              1. Exact paths to files or directories (ex. "charts/foo")
                              2. Glob patterns (prefix the pattern with "glob:"; ex. "glob:*.yaml")
                              3. Regular expressions (prefix the pattern with "regex:" or "regexp:";
                                 ex. "regexp:^.*\.yaml$")

                            Paths selected by IncludePaths may be unselected by ExcludePaths. This
                            is a useful method for including a broad set of paths and then excluding a
                            subset of them.
                          items:
                            type: string
                          type: array
                        insecureSkipTLSVerify:
                          description: |-
                            InsecureSkipTLSVerify specifies whether certificate verification errors
                            should be ignored when connecting to the repository. This should be enabled
                            only with great caution.
                          type: boolean
                        repoURL:
                          description: URL is the repository's URL. This is a required
                            field.
                          minLength: 1
                          pattern: (?:^(ssh|https?)://(?:([\w-]+)(:(.+))?@)?([\w-]+(?:\.[\w-]+)*)(?::(\d{1,5}))?(/.*)$)|(?:^([\w-]+)@([\w+]+(?:\.[\w-]+)*):(/?.*))
                          type: string
                        semverConstraint:
                          description: |-
                            SemverConstraint specifies constraints on what new tagged commits are
                            considered in determining the newest commit of interest. The value in this
                            field only has any effect when the CommitSelectionStrategy is SemVer. This
                            field is optional. When left unspecified, there will be no constraints,
                            which means the latest semantically tagged commit will always be used. Care
                            should be taken with leaving this field unspecified, as it can lead to the
                            unanticipated rollout of breaking changes.
                          type: string
                        strictSemvers:
                          default: true
                          description: |-
                            StrictSemvers specifies whether only "strict" semver tags should be
                            considered. A "strict" semver tag is one containing ALL of major, minor,
                            and patch version components. This is enabled by default, but only has any
                            effect when the CommitSelectionStrategy is SemVer. This should be disabled
                            cautiously, as it creates the potential for any tag containing numeric
                            characters only to be mistaken for a semver string containing the major
                            version number only.
                          type: boolean
                      required:
                      - repoURL
                      - strictSemvers
                      type: object
                    image:
                      description: Image describes a subscription to container image
                        repository.
                      properties:
                        allowTags:
                          description: |-
                            AllowTags is a regular expression that can optionally be used to limit the
                            image tags that are considered in determining the newest version of an
                            image. This field is optional.
                          type: string
                        discoveryLimit:
                          default: 20
                          description: |-
                            DiscoveryLimit is an optional limit on the number of image references
                            that can be discovered for this subscription. The limit is applied after
                            filtering images based on the AllowTags and IgnoreTags fields.
                            When left unspecified, the field is implicitly treated as if its value
                            were "20". The upper limit for this field is 100.
                          format: int32
                          maximum: 100
                          minimum: 1
                          type: integer
                        gitRepoURL:
                          description: |-
                            GitRepoURL optionally specifies the URL of a Git repository that contains
                            the source code for the image repository referenced by the RepoURL field.
                            When this is specified, Kargo MAY be able to infer and link to the exact
                            revision of that source code that was used to build the image.

                            Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
                          pattern: ^https?://(\w+([\.-]\w+)*@)?\w+([\.-]\w+)*(:[\d]+)?(/.*)?$
                          type: string
                        ignoreTags:
                          description: |-
                            IgnoreTags is a list of tags that must be ignored when determining the
                            newest version of an image. No regular expressions or glob patterns are
                            supported yet. This field is optional.
                          items:
                            type: string
                          type: array
                        imageSelectionStrategy:
                          default: SemVer
                          description: |-
                            ImageSelectionStrategy specifies the rules for how to identify the newest version
                            of the image specified by the RepoURL field. This field is optional. When
                            left unspecified, the field is implicitly treated as if its value were
                            "SemVer".

                            Accepted values:

                            - "Digest": Selects the image currently referenced by the tag specified
                              (unintuitively) by the SemverConstraint field.

                            - "Lexical": Selects the image referenced by the lexicographically greatest
                              tag. Useful when tags embed a leading date or timestamp. The AllowTags
                              and IgnoreTags fields can optionally be used to narrow the set of tags
                              eligible for selection.

                            - "NewestBuild": Selects the image that was most recently pushed to the
                              repository. The AllowTags and IgnoreTags fields can optionally be used
                              to narrow the set of tags eligible for selection. This is the least
                              efficient and is likely to cause rate limiting affecting this Warehouse
                              and possibly others. This strategy should be avoided.

                            - "SemVer": Selects the image with the semantically greatest tag. The
                              AllowTags and IgnoreTags fields can optionally be used to narrow the set
                              of tags eligible for selection.
                          enum:
                          - Digest
                          - Lexical
                          - NewestBuild
                          - SemVer
                          type: string
                        insecureSkipTLSVerify:
                          description: |-
                            InsecureSkipTLSVerify specifies whether certificate verification errors
                            should be ignored when connecting to the repository. This should be enabled
                            only with great caution.
                          type: boolean
                        platform:
                          description: |-
                            Platform is a string of the form <os>/<arch> that limits the tags that can
                            be considered when searching for new versions of an image. This field is
                            optional. When left unspecified, it is implicitly equivalent to the
                            OS/architecture of the Kargo controller. Care should be taken to set this
                            value correctly in cases where the image referenced by this
                            ImageRepositorySubscription will run on a Kubernetes node with a different
                            OS/architecture than the Kargo controller. At present this is uncommon, but
                            not unheard of.
                          type: string
                        repoURL:
                          description: |-
                            RepoURL specifies the URL of the image repository to subscribe to. The
                            value in this field MUST NOT include an image tag. This field is required.
                          minLength: 1
                          pattern: ^(\w+([\.-]\w+)*(:[\d]+)?/)?(\w+([\.-]\w+)*)(/\w+([\.-]\w+)*)*$
                          type: string
                        semverConstraint:
                          description: |-
                            SemverConstraint specifies constraints on what new image versions are
                            permissible. The value in this field only has any effect when the
                            ImageSelectionStrategy is SemVer or left unspecified (which is implicitly
                            the same as SemVer). This field is also optional. When left unspecified,
                            (and the ImageSelectionStrategy is SemVer or unspecified), there will be no
                            constraints, which means the latest semantically tagged version of an image
                            will always be used. Care should be taken with leaving this field
                            unspecified, as it can lead to the unanticipated rollout of breaking
                            changes.
                            More info: https://github.com/masterminds/semver#checking-version-constraints
                          type: string
                        strictSemvers:
                          default: true
                          description: |-
                            StrictSemvers specifies whether only "strict" semver tags should be
                            considered. A "strict" semver tag is one containing ALL of major, minor,
                            and patch version components. This is enabled by default, but only has any
                            effect when the ImageSelectionStrategy is SemVer. This should be disabled
                            cautiously, as it is not uncommon to tag container images with short Git
                            commit hashes, which have the potential to contain numeric characters only
                            and could be mistaken for a semver string containing the major version
                            number only.
                          type: boolean
                      required:
                      - repoURL
                      - strictSemvers
                      type: object
                  type: object
                minItems: 1
                type: array
            required:
            - interval
            - subscriptions
            type: object
          status:
            description: Status describes the Warehouse's most recently observed state.
            properties:
              conditions:
                description: |-
                  Conditions contains the last observations of the Warehouse's current
                  state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              discoveredArtifacts:
                description: DiscoveredArtifacts holds the artifacts discovered by
                  the Warehouse.
                properties:
                  charts:
                    description: |-
                      Charts holds the charts discovered by the Warehouse for the chart
                      subscriptions.
                    items:
                      description: |-
                        ChartDiscoveryResult represents the result of a chart discovery operation for
                        a ChartSubscription.
                      properties:
                        name:
                          description: Name is the name of the Helm chart, as specified
                            in the ChartSubscription.
                          type: string
                        repoURL:
                          description: |-
                            RepoURL is the repository URL of the Helm chart, as specified in the
                            ChartSubscription.
                          minLength: 1
                          type: string
                        semverConstraint:
                          description: |-
                            SemverConstraint is the constraint for which versions were discovered.
                            This field is optional, and only populated if the ChartSubscription
                            specifies a SemverConstraint.
                          type: string
                        versions:
                          description: |-
                            Versions is a list of versions discovered by the Warehouse for the
                            ChartSubscription. An empty list indicates that the discovery operation was
                            successful, but no versions matching the ChartSubscription criteria were
                            found.
                          items:
                            type: string
                          type: array
                      required:
                      - repoURL
                      type: object
                    type: array
                  discoveredAt:
                    description: DiscoveredAt is the time at which the Warehouse discovered
                      the artifacts.
                    format: date-time
                    type: string
                  git:
                    description: |-
                      Git holds the commits discovered by the Warehouse for the Git
                      subscriptions.
                    items:
                      description: |-
                        GitDiscoveryResult represents the result of a Git discovery operation for a
                        GitSubscription.
                      properties:
                        commits:
                          description: |-
                            Commits is a list of commits discovered by the Warehouse for the
                            GitSubscription. An empty list indicates that the discovery operation was
                            successful, but no commits matching the GitSubscription criteria were found.
                          items:
                            description: |-
                              DiscoveredCommit represents a commit discovered by a Warehouse for a
                              GitSubscription.
                            properties:
                              author:
                                description: Author is the author of the commit.
                                type: string
                              branch:
                                description: |-
                                  Branch is the branch in which the commit was found. This field is
                                  optional, and populated based on the CommitSelectionStrategy of the
                                  GitSubscription.
                                type: string
                              committer:
                                description: Committer is the person who committed
                                  the commit.
                                type: string
                              creatorDate:
                                description: |-
                                  CreatorDate is the commit creation date as specified by the commit, or
                                  the tagger date if the commit belongs to an annotated tag.
                                format: date-time
                                type: string
                              id:
                                description: ID is the identifier of the commit. This
                                  typically is a SHA-1 hash.
                                minLength: 1
                                type: string
                              subject:
                                description: |-
                                  Subject is the subject of the commit (i.e. the first line of the commit
                                  message).
                                type: string
                              tag:
                                description: |-
                                  Tag is the tag that resolved to this commit. This field is optional, and
                                  populated based on the CommitSelectionStrategy of the GitSubscription.
                                type: string
                            type: object
                          type: array
                        repoURL:
                          description: RepoURL is the repository URL of the GitSubscription.
                          minLength: 1
                          pattern: (?:^(ssh|https?)://(?:([\w-]+)(:(.+))?@)?([\w-]+(?:\.[\w-]+)*)(?::(\d{1,5}))?(/.*)$)|(?:^([\w-]+)@([\w+]+(?:\.[\w-]+)*):(/?.*))
                          type: string
                      required:
                      - repoURL
                      type: object
                    type: array
                  images:
                    description: |-
                      Images holds the image references discovered by the Warehouse for the
                      image subscriptions.
                    items:
                      description: |-
                        ImageDiscoveryResult represents the result of an image discovery operation
                        for an ImageSubscription.
                      properties:
                        platform:
                          description: |-
                            Platform is the target platform constraint of the ImageSubscription
                            for which references were discovered. This field is optional, and
                            only populated if the ImageSubscription specifies a Platform.
                          type: string
                        references:
                          description: |-
                            References is a list of image references discovered by the Warehouse for
                            the ImageSubscription. An empty list indicates that the discovery
                            operation was successful, but no images matching the ImageSubscription
                            criteria were found.
                          items:
                            description: |-
                              DiscoveredImageReference represents an image reference discovered by a
                              Warehouse for an ImageSubscription.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  Annotations is a map of key-value pairs that provide additional
                                  information about the image.
                                type: object
                              createdAt:
                                description: |-
                                  CreatedAt is the time the image was created. This field is optional, and
                                  not populated for every ImageSelectionStrategy.
                                format: date-time
                                type: string
                              digest:
                                description: Digest is the digest of the image.
                                minLength: 1
                                pattern: ^[a-z0-9]+:[a-f0-9]+$
                                type: string
                              gitRepoURL:
                                description: |-
                                  GitRepoURL is the URL of the Git repository that contains the source
                                  code for this image. This field is optional, and only populated if the
                                  ImageSubscription specifies a GitRepoURL.

                                  Deprecated: Use OCI annotations instead. Will be removed in v1.7.0.
                                type: string
                              tag:
                                description: Tag is the tag of the image.
                                maxLength: 128
                                minLength: 1
                                pattern: ^[\w.\-\_]+$
                                type: string
                            required:
                            - digest
                            - tag
                            type: object
                          type: array
                        repoURL:
                          description: |-
                            RepoURL is the repository URL of the image, as specified in the
                            ImageSubscription.
                          minLength: 1
                          type: string
                      required:
                      - repoURL
                      type: object
                    type: array
                type: object
              lastFreightID:
                description: |-
                  LastFreightID is a reference to the system-assigned identifier (name) of
                  the most recent Freight produced by the Warehouse.
                type: string
              lastHandledRefresh:
                description: |-
                  LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh
                  annotation that was handled by the controller. This field can be used to
                  determine whether the request to refresh the resource has been handled.
                type: string
              observedGeneration:
                description: |-
                  ObservedGeneration represents the .metadata.generation that this Warehouse
                  was reconciled against.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
