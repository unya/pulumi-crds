// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AlertList is a list of Alert
type AlertList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of alerts. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items AlertTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewAlertList registers a new resource with the given unique name, arguments, and options.
func NewAlertList(ctx *pulumi.Context,
	name string, args *AlertListArgs, opts ...pulumi.ResourceOption) (*AlertList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("notification.toolkit.fluxcd.io/v1beta2")
	args.Kind = pulumi.StringPtr("AlertList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AlertList
	err := ctx.RegisterResource("kubernetes:notification.toolkit.fluxcd.io/v1beta2:AlertList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertList gets an existing AlertList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertListState, opts ...pulumi.ResourceOption) (*AlertList, error) {
	var resource AlertList
	err := ctx.ReadResource("kubernetes:notification.toolkit.fluxcd.io/v1beta2:AlertList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertList resources.
type alertListState struct {
}

type AlertListState struct {
}

func (AlertListState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertListState)(nil)).Elem()
}

type alertListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of alerts. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []AlertType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a AlertList resource.
type AlertListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of alerts. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items AlertTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (AlertListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertListArgs)(nil)).Elem()
}

type AlertListInput interface {
	pulumi.Input

	ToAlertListOutput() AlertListOutput
	ToAlertListOutputWithContext(ctx context.Context) AlertListOutput
}

func (*AlertList) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertList)(nil)).Elem()
}

func (i *AlertList) ToAlertListOutput() AlertListOutput {
	return i.ToAlertListOutputWithContext(context.Background())
}

func (i *AlertList) ToAlertListOutputWithContext(ctx context.Context) AlertListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertListOutput)
}

// AlertListArrayInput is an input type that accepts AlertListArray and AlertListArrayOutput values.
// You can construct a concrete instance of `AlertListArrayInput` via:
//
//	AlertListArray{ AlertListArgs{...} }
type AlertListArrayInput interface {
	pulumi.Input

	ToAlertListArrayOutput() AlertListArrayOutput
	ToAlertListArrayOutputWithContext(context.Context) AlertListArrayOutput
}

type AlertListArray []AlertListInput

func (AlertListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertList)(nil)).Elem()
}

func (i AlertListArray) ToAlertListArrayOutput() AlertListArrayOutput {
	return i.ToAlertListArrayOutputWithContext(context.Background())
}

func (i AlertListArray) ToAlertListArrayOutputWithContext(ctx context.Context) AlertListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertListArrayOutput)
}

// AlertListMapInput is an input type that accepts AlertListMap and AlertListMapOutput values.
// You can construct a concrete instance of `AlertListMapInput` via:
//
//	AlertListMap{ "key": AlertListArgs{...} }
type AlertListMapInput interface {
	pulumi.Input

	ToAlertListMapOutput() AlertListMapOutput
	ToAlertListMapOutputWithContext(context.Context) AlertListMapOutput
}

type AlertListMap map[string]AlertListInput

func (AlertListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertList)(nil)).Elem()
}

func (i AlertListMap) ToAlertListMapOutput() AlertListMapOutput {
	return i.ToAlertListMapOutputWithContext(context.Background())
}

func (i AlertListMap) ToAlertListMapOutputWithContext(ctx context.Context) AlertListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertListMapOutput)
}

type AlertListOutput struct{ *pulumi.OutputState }

func (AlertListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertList)(nil)).Elem()
}

func (o AlertListOutput) ToAlertListOutput() AlertListOutput {
	return o
}

func (o AlertListOutput) ToAlertListOutputWithContext(ctx context.Context) AlertListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AlertListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of alerts. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o AlertListOutput) Items() AlertTypeArrayOutput {
	return o.ApplyT(func(v *AlertList) AlertTypeArrayOutput { return v.Items }).(AlertTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AlertListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AlertListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *AlertList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type AlertListArrayOutput struct{ *pulumi.OutputState }

func (AlertListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertList)(nil)).Elem()
}

func (o AlertListArrayOutput) ToAlertListArrayOutput() AlertListArrayOutput {
	return o
}

func (o AlertListArrayOutput) ToAlertListArrayOutputWithContext(ctx context.Context) AlertListArrayOutput {
	return o
}

func (o AlertListArrayOutput) Index(i pulumi.IntInput) AlertListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertList {
		return vs[0].([]*AlertList)[vs[1].(int)]
	}).(AlertListOutput)
}

type AlertListMapOutput struct{ *pulumi.OutputState }

func (AlertListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertList)(nil)).Elem()
}

func (o AlertListMapOutput) ToAlertListMapOutput() AlertListMapOutput {
	return o
}

func (o AlertListMapOutput) ToAlertListMapOutputWithContext(ctx context.Context) AlertListMapOutput {
	return o
}

func (o AlertListMapOutput) MapIndex(k pulumi.StringInput) AlertListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertList {
		return vs[0].(map[string]*AlertList)[vs[1].(string)]
	}).(AlertListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertListInput)(nil)).Elem(), &AlertList{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertListArrayInput)(nil)).Elem(), AlertListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertListMapInput)(nil)).Elem(), AlertListMap{})
	pulumi.RegisterOutputType(AlertListOutput{})
	pulumi.RegisterOutputType(AlertListArrayOutput{})
	pulumi.RegisterOutputType(AlertListMapOutput{})
}
