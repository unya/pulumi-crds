// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Alert is the Schema for the alerts API
type AlertType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *AlertSpec         `pulumi:"spec"`
	Status   *AlertStatus       `pulumi:"status"`
}

// AlertTypeInput is an input type that accepts AlertTypeArgs and AlertTypeOutput values.
// You can construct a concrete instance of `AlertTypeInput` via:
//
//	AlertTypeArgs{...}
type AlertTypeInput interface {
	pulumi.Input

	ToAlertTypeOutput() AlertTypeOutput
	ToAlertTypeOutputWithContext(context.Context) AlertTypeOutput
}

// Alert is the Schema for the alerts API
type AlertTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     AlertSpecPtrInput         `pulumi:"spec"`
	Status   AlertStatusPtrInput       `pulumi:"status"`
}

func (AlertTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertType)(nil)).Elem()
}

func (i AlertTypeArgs) ToAlertTypeOutput() AlertTypeOutput {
	return i.ToAlertTypeOutputWithContext(context.Background())
}

func (i AlertTypeArgs) ToAlertTypeOutputWithContext(ctx context.Context) AlertTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertTypeOutput)
}

// AlertTypeArrayInput is an input type that accepts AlertTypeArray and AlertTypeArrayOutput values.
// You can construct a concrete instance of `AlertTypeArrayInput` via:
//
//	AlertTypeArray{ AlertTypeArgs{...} }
type AlertTypeArrayInput interface {
	pulumi.Input

	ToAlertTypeArrayOutput() AlertTypeArrayOutput
	ToAlertTypeArrayOutputWithContext(context.Context) AlertTypeArrayOutput
}

type AlertTypeArray []AlertTypeInput

func (AlertTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertType)(nil)).Elem()
}

func (i AlertTypeArray) ToAlertTypeArrayOutput() AlertTypeArrayOutput {
	return i.ToAlertTypeArrayOutputWithContext(context.Background())
}

func (i AlertTypeArray) ToAlertTypeArrayOutputWithContext(ctx context.Context) AlertTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertTypeArrayOutput)
}

// Alert is the Schema for the alerts API
type AlertTypeOutput struct{ *pulumi.OutputState }

func (AlertTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertType)(nil)).Elem()
}

func (o AlertTypeOutput) ToAlertTypeOutput() AlertTypeOutput {
	return o
}

func (o AlertTypeOutput) ToAlertTypeOutputWithContext(ctx context.Context) AlertTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AlertTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AlertTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o AlertTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v AlertType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o AlertTypeOutput) Spec() AlertSpecPtrOutput {
	return o.ApplyT(func(v AlertType) *AlertSpec { return v.Spec }).(AlertSpecPtrOutput)
}

func (o AlertTypeOutput) Status() AlertStatusPtrOutput {
	return o.ApplyT(func(v AlertType) *AlertStatus { return v.Status }).(AlertStatusPtrOutput)
}

type AlertTypeArrayOutput struct{ *pulumi.OutputState }

func (AlertTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertType)(nil)).Elem()
}

func (o AlertTypeArrayOutput) ToAlertTypeArrayOutput() AlertTypeArrayOutput {
	return o
}

func (o AlertTypeArrayOutput) ToAlertTypeArrayOutputWithContext(ctx context.Context) AlertTypeArrayOutput {
	return o
}

func (o AlertTypeArrayOutput) Index(i pulumi.IntInput) AlertTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertType {
		return vs[0].([]AlertType)[vs[1].(int)]
	}).(AlertTypeOutput)
}

// AlertList is a list of Alert
type AlertListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of alerts. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []AlertType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// AlertListTypeInput is an input type that accepts AlertListTypeArgs and AlertListTypeOutput values.
// You can construct a concrete instance of `AlertListTypeInput` via:
//
//	AlertListTypeArgs{...}
type AlertListTypeInput interface {
	pulumi.Input

	ToAlertListTypeOutput() AlertListTypeOutput
	ToAlertListTypeOutputWithContext(context.Context) AlertListTypeOutput
}

// AlertList is a list of Alert
type AlertListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of alerts. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items AlertTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (AlertListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertListType)(nil)).Elem()
}

func (i AlertListTypeArgs) ToAlertListTypeOutput() AlertListTypeOutput {
	return i.ToAlertListTypeOutputWithContext(context.Background())
}

func (i AlertListTypeArgs) ToAlertListTypeOutputWithContext(ctx context.Context) AlertListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertListTypeOutput)
}

// AlertList is a list of Alert
type AlertListTypeOutput struct{ *pulumi.OutputState }

func (AlertListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertListType)(nil)).Elem()
}

func (o AlertListTypeOutput) ToAlertListTypeOutput() AlertListTypeOutput {
	return o
}

func (o AlertListTypeOutput) ToAlertListTypeOutputWithContext(ctx context.Context) AlertListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AlertListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of alerts. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o AlertListTypeOutput) Items() AlertTypeArrayOutput {
	return o.ApplyT(func(v AlertListType) []AlertType { return v.Items }).(AlertTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AlertListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AlertListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v AlertListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// Alert is the Schema for the alerts API
type AlertPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *AlertSpecPatch         `pulumi:"spec"`
	Status   *AlertStatusPatch       `pulumi:"status"`
}

// AlertPatchTypeInput is an input type that accepts AlertPatchTypeArgs and AlertPatchTypeOutput values.
// You can construct a concrete instance of `AlertPatchTypeInput` via:
//
//	AlertPatchTypeArgs{...}
type AlertPatchTypeInput interface {
	pulumi.Input

	ToAlertPatchTypeOutput() AlertPatchTypeOutput
	ToAlertPatchTypeOutputWithContext(context.Context) AlertPatchTypeOutput
}

// Alert is the Schema for the alerts API
type AlertPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     AlertSpecPatchPtrInput         `pulumi:"spec"`
	Status   AlertStatusPatchPtrInput       `pulumi:"status"`
}

func (AlertPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertPatchType)(nil)).Elem()
}

func (i AlertPatchTypeArgs) ToAlertPatchTypeOutput() AlertPatchTypeOutput {
	return i.ToAlertPatchTypeOutputWithContext(context.Background())
}

func (i AlertPatchTypeArgs) ToAlertPatchTypeOutputWithContext(ctx context.Context) AlertPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertPatchTypeOutput)
}

// Alert is the Schema for the alerts API
type AlertPatchTypeOutput struct{ *pulumi.OutputState }

func (AlertPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertPatchType)(nil)).Elem()
}

func (o AlertPatchTypeOutput) ToAlertPatchTypeOutput() AlertPatchTypeOutput {
	return o
}

func (o AlertPatchTypeOutput) ToAlertPatchTypeOutputWithContext(ctx context.Context) AlertPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AlertPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AlertPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o AlertPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v AlertPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o AlertPatchTypeOutput) Spec() AlertSpecPatchPtrOutput {
	return o.ApplyT(func(v AlertPatchType) *AlertSpecPatch { return v.Spec }).(AlertSpecPatchPtrOutput)
}

func (o AlertPatchTypeOutput) Status() AlertStatusPatchPtrOutput {
	return o.ApplyT(func(v AlertPatchType) *AlertStatusPatch { return v.Status }).(AlertStatusPatchPtrOutput)
}

// AlertSpec defines an alerting rule for events involving a list of objects
type AlertSpec struct {
	// Filter events based on severity, defaults to ('info').
	// If set to 'info' no events will be filtered.
	EventSeverity *string `pulumi:"eventSeverity"`
	// Filter events based on the involved objects.
	EventSources []AlertSpecEventSources `pulumi:"eventSources"`
	// A list of Golang regular expressions to be used for excluding messages.
	ExclusionList []string              `pulumi:"exclusionList"`
	ProviderRef   *AlertSpecProviderRef `pulumi:"providerRef"`
	// Short description of the impact and affected cluster.
	Summary *string `pulumi:"summary"`
	// This flag tells the controller to suspend subsequent events dispatching.
	// Defaults to false.
	Suspend *bool `pulumi:"suspend"`
}

// AlertSpecInput is an input type that accepts AlertSpecArgs and AlertSpecOutput values.
// You can construct a concrete instance of `AlertSpecInput` via:
//
//	AlertSpecArgs{...}
type AlertSpecInput interface {
	pulumi.Input

	ToAlertSpecOutput() AlertSpecOutput
	ToAlertSpecOutputWithContext(context.Context) AlertSpecOutput
}

// AlertSpec defines an alerting rule for events involving a list of objects
type AlertSpecArgs struct {
	// Filter events based on severity, defaults to ('info').
	// If set to 'info' no events will be filtered.
	EventSeverity pulumi.StringPtrInput `pulumi:"eventSeverity"`
	// Filter events based on the involved objects.
	EventSources AlertSpecEventSourcesArrayInput `pulumi:"eventSources"`
	// A list of Golang regular expressions to be used for excluding messages.
	ExclusionList pulumi.StringArrayInput      `pulumi:"exclusionList"`
	ProviderRef   AlertSpecProviderRefPtrInput `pulumi:"providerRef"`
	// Short description of the impact and affected cluster.
	Summary pulumi.StringPtrInput `pulumi:"summary"`
	// This flag tells the controller to suspend subsequent events dispatching.
	// Defaults to false.
	Suspend pulumi.BoolPtrInput `pulumi:"suspend"`
}

func (AlertSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSpec)(nil)).Elem()
}

func (i AlertSpecArgs) ToAlertSpecOutput() AlertSpecOutput {
	return i.ToAlertSpecOutputWithContext(context.Background())
}

func (i AlertSpecArgs) ToAlertSpecOutputWithContext(ctx context.Context) AlertSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecOutput)
}

func (i AlertSpecArgs) ToAlertSpecPtrOutput() AlertSpecPtrOutput {
	return i.ToAlertSpecPtrOutputWithContext(context.Background())
}

func (i AlertSpecArgs) ToAlertSpecPtrOutputWithContext(ctx context.Context) AlertSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecOutput).ToAlertSpecPtrOutputWithContext(ctx)
}

// AlertSpecPtrInput is an input type that accepts AlertSpecArgs, AlertSpecPtr and AlertSpecPtrOutput values.
// You can construct a concrete instance of `AlertSpecPtrInput` via:
//
//	        AlertSpecArgs{...}
//
//	or:
//
//	        nil
type AlertSpecPtrInput interface {
	pulumi.Input

	ToAlertSpecPtrOutput() AlertSpecPtrOutput
	ToAlertSpecPtrOutputWithContext(context.Context) AlertSpecPtrOutput
}

type alertSpecPtrType AlertSpecArgs

func AlertSpecPtr(v *AlertSpecArgs) AlertSpecPtrInput {
	return (*alertSpecPtrType)(v)
}

func (*alertSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertSpec)(nil)).Elem()
}

func (i *alertSpecPtrType) ToAlertSpecPtrOutput() AlertSpecPtrOutput {
	return i.ToAlertSpecPtrOutputWithContext(context.Background())
}

func (i *alertSpecPtrType) ToAlertSpecPtrOutputWithContext(ctx context.Context) AlertSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecPtrOutput)
}

// AlertSpec defines an alerting rule for events involving a list of objects
type AlertSpecOutput struct{ *pulumi.OutputState }

func (AlertSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSpec)(nil)).Elem()
}

func (o AlertSpecOutput) ToAlertSpecOutput() AlertSpecOutput {
	return o
}

func (o AlertSpecOutput) ToAlertSpecOutputWithContext(ctx context.Context) AlertSpecOutput {
	return o
}

func (o AlertSpecOutput) ToAlertSpecPtrOutput() AlertSpecPtrOutput {
	return o.ToAlertSpecPtrOutputWithContext(context.Background())
}

func (o AlertSpecOutput) ToAlertSpecPtrOutputWithContext(ctx context.Context) AlertSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertSpec) *AlertSpec {
		return &v
	}).(AlertSpecPtrOutput)
}

// Filter events based on severity, defaults to ('info').
// If set to 'info' no events will be filtered.
func (o AlertSpecOutput) EventSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSpec) *string { return v.EventSeverity }).(pulumi.StringPtrOutput)
}

// Filter events based on the involved objects.
func (o AlertSpecOutput) EventSources() AlertSpecEventSourcesArrayOutput {
	return o.ApplyT(func(v AlertSpec) []AlertSpecEventSources { return v.EventSources }).(AlertSpecEventSourcesArrayOutput)
}

// A list of Golang regular expressions to be used for excluding messages.
func (o AlertSpecOutput) ExclusionList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertSpec) []string { return v.ExclusionList }).(pulumi.StringArrayOutput)
}

func (o AlertSpecOutput) ProviderRef() AlertSpecProviderRefPtrOutput {
	return o.ApplyT(func(v AlertSpec) *AlertSpecProviderRef { return v.ProviderRef }).(AlertSpecProviderRefPtrOutput)
}

// Short description of the impact and affected cluster.
func (o AlertSpecOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSpec) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

// This flag tells the controller to suspend subsequent events dispatching.
// Defaults to false.
func (o AlertSpecOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertSpec) *bool { return v.Suspend }).(pulumi.BoolPtrOutput)
}

type AlertSpecPtrOutput struct{ *pulumi.OutputState }

func (AlertSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertSpec)(nil)).Elem()
}

func (o AlertSpecPtrOutput) ToAlertSpecPtrOutput() AlertSpecPtrOutput {
	return o
}

func (o AlertSpecPtrOutput) ToAlertSpecPtrOutputWithContext(ctx context.Context) AlertSpecPtrOutput {
	return o
}

func (o AlertSpecPtrOutput) Elem() AlertSpecOutput {
	return o.ApplyT(func(v *AlertSpec) AlertSpec {
		if v != nil {
			return *v
		}
		var ret AlertSpec
		return ret
	}).(AlertSpecOutput)
}

// Filter events based on severity, defaults to ('info').
// If set to 'info' no events will be filtered.
func (o AlertSpecPtrOutput) EventSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertSpec) *string {
		if v == nil {
			return nil
		}
		return v.EventSeverity
	}).(pulumi.StringPtrOutput)
}

// Filter events based on the involved objects.
func (o AlertSpecPtrOutput) EventSources() AlertSpecEventSourcesArrayOutput {
	return o.ApplyT(func(v *AlertSpec) []AlertSpecEventSources {
		if v == nil {
			return nil
		}
		return v.EventSources
	}).(AlertSpecEventSourcesArrayOutput)
}

// A list of Golang regular expressions to be used for excluding messages.
func (o AlertSpecPtrOutput) ExclusionList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertSpec) []string {
		if v == nil {
			return nil
		}
		return v.ExclusionList
	}).(pulumi.StringArrayOutput)
}

func (o AlertSpecPtrOutput) ProviderRef() AlertSpecProviderRefPtrOutput {
	return o.ApplyT(func(v *AlertSpec) *AlertSpecProviderRef {
		if v == nil {
			return nil
		}
		return v.ProviderRef
	}).(AlertSpecProviderRefPtrOutput)
}

// Short description of the impact and affected cluster.
func (o AlertSpecPtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertSpec) *string {
		if v == nil {
			return nil
		}
		return v.Summary
	}).(pulumi.StringPtrOutput)
}

// This flag tells the controller to suspend subsequent events dispatching.
// Defaults to false.
func (o AlertSpecPtrOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Suspend
	}).(pulumi.BoolPtrOutput)
}

// CrossNamespaceObjectReference contains enough information to let you locate the
// typed referenced object at cluster level
type AlertSpecEventSources struct {
	// API version of the referent
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind of the referent
	Kind *string `pulumi:"kind"`
	// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
	// Name of the referent
	Name *string `pulumi:"name"`
	// Namespace of the referent
	Namespace *string `pulumi:"namespace"`
}

// AlertSpecEventSourcesInput is an input type that accepts AlertSpecEventSourcesArgs and AlertSpecEventSourcesOutput values.
// You can construct a concrete instance of `AlertSpecEventSourcesInput` via:
//
//	AlertSpecEventSourcesArgs{...}
type AlertSpecEventSourcesInput interface {
	pulumi.Input

	ToAlertSpecEventSourcesOutput() AlertSpecEventSourcesOutput
	ToAlertSpecEventSourcesOutputWithContext(context.Context) AlertSpecEventSourcesOutput
}

// CrossNamespaceObjectReference contains enough information to let you locate the
// typed referenced object at cluster level
type AlertSpecEventSourcesArgs struct {
	// API version of the referent
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind of the referent
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
	// Name of the referent
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (AlertSpecEventSourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSpecEventSources)(nil)).Elem()
}

func (i AlertSpecEventSourcesArgs) ToAlertSpecEventSourcesOutput() AlertSpecEventSourcesOutput {
	return i.ToAlertSpecEventSourcesOutputWithContext(context.Background())
}

func (i AlertSpecEventSourcesArgs) ToAlertSpecEventSourcesOutputWithContext(ctx context.Context) AlertSpecEventSourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecEventSourcesOutput)
}

// AlertSpecEventSourcesArrayInput is an input type that accepts AlertSpecEventSourcesArray and AlertSpecEventSourcesArrayOutput values.
// You can construct a concrete instance of `AlertSpecEventSourcesArrayInput` via:
//
//	AlertSpecEventSourcesArray{ AlertSpecEventSourcesArgs{...} }
type AlertSpecEventSourcesArrayInput interface {
	pulumi.Input

	ToAlertSpecEventSourcesArrayOutput() AlertSpecEventSourcesArrayOutput
	ToAlertSpecEventSourcesArrayOutputWithContext(context.Context) AlertSpecEventSourcesArrayOutput
}

type AlertSpecEventSourcesArray []AlertSpecEventSourcesInput

func (AlertSpecEventSourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertSpecEventSources)(nil)).Elem()
}

func (i AlertSpecEventSourcesArray) ToAlertSpecEventSourcesArrayOutput() AlertSpecEventSourcesArrayOutput {
	return i.ToAlertSpecEventSourcesArrayOutputWithContext(context.Background())
}

func (i AlertSpecEventSourcesArray) ToAlertSpecEventSourcesArrayOutputWithContext(ctx context.Context) AlertSpecEventSourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecEventSourcesArrayOutput)
}

// CrossNamespaceObjectReference contains enough information to let you locate the
// typed referenced object at cluster level
type AlertSpecEventSourcesOutput struct{ *pulumi.OutputState }

func (AlertSpecEventSourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSpecEventSources)(nil)).Elem()
}

func (o AlertSpecEventSourcesOutput) ToAlertSpecEventSourcesOutput() AlertSpecEventSourcesOutput {
	return o
}

func (o AlertSpecEventSourcesOutput) ToAlertSpecEventSourcesOutputWithContext(ctx context.Context) AlertSpecEventSourcesOutput {
	return o
}

// API version of the referent
func (o AlertSpecEventSourcesOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSpecEventSources) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind of the referent
func (o AlertSpecEventSourcesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSpecEventSources) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o AlertSpecEventSourcesOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AlertSpecEventSources) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

// Name of the referent
func (o AlertSpecEventSourcesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSpecEventSources) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent
func (o AlertSpecEventSourcesOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSpecEventSources) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AlertSpecEventSourcesArrayOutput struct{ *pulumi.OutputState }

func (AlertSpecEventSourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertSpecEventSources)(nil)).Elem()
}

func (o AlertSpecEventSourcesArrayOutput) ToAlertSpecEventSourcesArrayOutput() AlertSpecEventSourcesArrayOutput {
	return o
}

func (o AlertSpecEventSourcesArrayOutput) ToAlertSpecEventSourcesArrayOutputWithContext(ctx context.Context) AlertSpecEventSourcesArrayOutput {
	return o
}

func (o AlertSpecEventSourcesArrayOutput) Index(i pulumi.IntInput) AlertSpecEventSourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertSpecEventSources {
		return vs[0].([]AlertSpecEventSources)[vs[1].(int)]
	}).(AlertSpecEventSourcesOutput)
}

// CrossNamespaceObjectReference contains enough information to let you locate the
// typed referenced object at cluster level
type AlertSpecEventSourcesPatch struct {
	// API version of the referent
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind of the referent
	Kind *string `pulumi:"kind"`
	// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
	// Name of the referent
	Name *string `pulumi:"name"`
	// Namespace of the referent
	Namespace *string `pulumi:"namespace"`
}

// AlertSpecEventSourcesPatchInput is an input type that accepts AlertSpecEventSourcesPatchArgs and AlertSpecEventSourcesPatchOutput values.
// You can construct a concrete instance of `AlertSpecEventSourcesPatchInput` via:
//
//	AlertSpecEventSourcesPatchArgs{...}
type AlertSpecEventSourcesPatchInput interface {
	pulumi.Input

	ToAlertSpecEventSourcesPatchOutput() AlertSpecEventSourcesPatchOutput
	ToAlertSpecEventSourcesPatchOutputWithContext(context.Context) AlertSpecEventSourcesPatchOutput
}

// CrossNamespaceObjectReference contains enough information to let you locate the
// typed referenced object at cluster level
type AlertSpecEventSourcesPatchArgs struct {
	// API version of the referent
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind of the referent
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
	// Name of the referent
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (AlertSpecEventSourcesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSpecEventSourcesPatch)(nil)).Elem()
}

func (i AlertSpecEventSourcesPatchArgs) ToAlertSpecEventSourcesPatchOutput() AlertSpecEventSourcesPatchOutput {
	return i.ToAlertSpecEventSourcesPatchOutputWithContext(context.Background())
}

func (i AlertSpecEventSourcesPatchArgs) ToAlertSpecEventSourcesPatchOutputWithContext(ctx context.Context) AlertSpecEventSourcesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecEventSourcesPatchOutput)
}

// AlertSpecEventSourcesPatchArrayInput is an input type that accepts AlertSpecEventSourcesPatchArray and AlertSpecEventSourcesPatchArrayOutput values.
// You can construct a concrete instance of `AlertSpecEventSourcesPatchArrayInput` via:
//
//	AlertSpecEventSourcesPatchArray{ AlertSpecEventSourcesPatchArgs{...} }
type AlertSpecEventSourcesPatchArrayInput interface {
	pulumi.Input

	ToAlertSpecEventSourcesPatchArrayOutput() AlertSpecEventSourcesPatchArrayOutput
	ToAlertSpecEventSourcesPatchArrayOutputWithContext(context.Context) AlertSpecEventSourcesPatchArrayOutput
}

type AlertSpecEventSourcesPatchArray []AlertSpecEventSourcesPatchInput

func (AlertSpecEventSourcesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertSpecEventSourcesPatch)(nil)).Elem()
}

func (i AlertSpecEventSourcesPatchArray) ToAlertSpecEventSourcesPatchArrayOutput() AlertSpecEventSourcesPatchArrayOutput {
	return i.ToAlertSpecEventSourcesPatchArrayOutputWithContext(context.Background())
}

func (i AlertSpecEventSourcesPatchArray) ToAlertSpecEventSourcesPatchArrayOutputWithContext(ctx context.Context) AlertSpecEventSourcesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecEventSourcesPatchArrayOutput)
}

// CrossNamespaceObjectReference contains enough information to let you locate the
// typed referenced object at cluster level
type AlertSpecEventSourcesPatchOutput struct{ *pulumi.OutputState }

func (AlertSpecEventSourcesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSpecEventSourcesPatch)(nil)).Elem()
}

func (o AlertSpecEventSourcesPatchOutput) ToAlertSpecEventSourcesPatchOutput() AlertSpecEventSourcesPatchOutput {
	return o
}

func (o AlertSpecEventSourcesPatchOutput) ToAlertSpecEventSourcesPatchOutputWithContext(ctx context.Context) AlertSpecEventSourcesPatchOutput {
	return o
}

// API version of the referent
func (o AlertSpecEventSourcesPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSpecEventSourcesPatch) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind of the referent
func (o AlertSpecEventSourcesPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSpecEventSourcesPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o AlertSpecEventSourcesPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AlertSpecEventSourcesPatch) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

// Name of the referent
func (o AlertSpecEventSourcesPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSpecEventSourcesPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent
func (o AlertSpecEventSourcesPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSpecEventSourcesPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AlertSpecEventSourcesPatchArrayOutput struct{ *pulumi.OutputState }

func (AlertSpecEventSourcesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertSpecEventSourcesPatch)(nil)).Elem()
}

func (o AlertSpecEventSourcesPatchArrayOutput) ToAlertSpecEventSourcesPatchArrayOutput() AlertSpecEventSourcesPatchArrayOutput {
	return o
}

func (o AlertSpecEventSourcesPatchArrayOutput) ToAlertSpecEventSourcesPatchArrayOutputWithContext(ctx context.Context) AlertSpecEventSourcesPatchArrayOutput {
	return o
}

func (o AlertSpecEventSourcesPatchArrayOutput) Index(i pulumi.IntInput) AlertSpecEventSourcesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertSpecEventSourcesPatch {
		return vs[0].([]AlertSpecEventSourcesPatch)[vs[1].(int)]
	}).(AlertSpecEventSourcesPatchOutput)
}

// AlertSpec defines an alerting rule for events involving a list of objects
type AlertSpecPatch struct {
	// Filter events based on severity, defaults to ('info').
	// If set to 'info' no events will be filtered.
	EventSeverity *string `pulumi:"eventSeverity"`
	// Filter events based on the involved objects.
	EventSources []AlertSpecEventSourcesPatch `pulumi:"eventSources"`
	// A list of Golang regular expressions to be used for excluding messages.
	ExclusionList []string                   `pulumi:"exclusionList"`
	ProviderRef   *AlertSpecProviderRefPatch `pulumi:"providerRef"`
	// Short description of the impact and affected cluster.
	Summary *string `pulumi:"summary"`
	// This flag tells the controller to suspend subsequent events dispatching.
	// Defaults to false.
	Suspend *bool `pulumi:"suspend"`
}

// AlertSpecPatchInput is an input type that accepts AlertSpecPatchArgs and AlertSpecPatchOutput values.
// You can construct a concrete instance of `AlertSpecPatchInput` via:
//
//	AlertSpecPatchArgs{...}
type AlertSpecPatchInput interface {
	pulumi.Input

	ToAlertSpecPatchOutput() AlertSpecPatchOutput
	ToAlertSpecPatchOutputWithContext(context.Context) AlertSpecPatchOutput
}

// AlertSpec defines an alerting rule for events involving a list of objects
type AlertSpecPatchArgs struct {
	// Filter events based on severity, defaults to ('info').
	// If set to 'info' no events will be filtered.
	EventSeverity pulumi.StringPtrInput `pulumi:"eventSeverity"`
	// Filter events based on the involved objects.
	EventSources AlertSpecEventSourcesPatchArrayInput `pulumi:"eventSources"`
	// A list of Golang regular expressions to be used for excluding messages.
	ExclusionList pulumi.StringArrayInput           `pulumi:"exclusionList"`
	ProviderRef   AlertSpecProviderRefPatchPtrInput `pulumi:"providerRef"`
	// Short description of the impact and affected cluster.
	Summary pulumi.StringPtrInput `pulumi:"summary"`
	// This flag tells the controller to suspend subsequent events dispatching.
	// Defaults to false.
	Suspend pulumi.BoolPtrInput `pulumi:"suspend"`
}

func (AlertSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSpecPatch)(nil)).Elem()
}

func (i AlertSpecPatchArgs) ToAlertSpecPatchOutput() AlertSpecPatchOutput {
	return i.ToAlertSpecPatchOutputWithContext(context.Background())
}

func (i AlertSpecPatchArgs) ToAlertSpecPatchOutputWithContext(ctx context.Context) AlertSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecPatchOutput)
}

func (i AlertSpecPatchArgs) ToAlertSpecPatchPtrOutput() AlertSpecPatchPtrOutput {
	return i.ToAlertSpecPatchPtrOutputWithContext(context.Background())
}

func (i AlertSpecPatchArgs) ToAlertSpecPatchPtrOutputWithContext(ctx context.Context) AlertSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecPatchOutput).ToAlertSpecPatchPtrOutputWithContext(ctx)
}

// AlertSpecPatchPtrInput is an input type that accepts AlertSpecPatchArgs, AlertSpecPatchPtr and AlertSpecPatchPtrOutput values.
// You can construct a concrete instance of `AlertSpecPatchPtrInput` via:
//
//	        AlertSpecPatchArgs{...}
//
//	or:
//
//	        nil
type AlertSpecPatchPtrInput interface {
	pulumi.Input

	ToAlertSpecPatchPtrOutput() AlertSpecPatchPtrOutput
	ToAlertSpecPatchPtrOutputWithContext(context.Context) AlertSpecPatchPtrOutput
}

type alertSpecPatchPtrType AlertSpecPatchArgs

func AlertSpecPatchPtr(v *AlertSpecPatchArgs) AlertSpecPatchPtrInput {
	return (*alertSpecPatchPtrType)(v)
}

func (*alertSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertSpecPatch)(nil)).Elem()
}

func (i *alertSpecPatchPtrType) ToAlertSpecPatchPtrOutput() AlertSpecPatchPtrOutput {
	return i.ToAlertSpecPatchPtrOutputWithContext(context.Background())
}

func (i *alertSpecPatchPtrType) ToAlertSpecPatchPtrOutputWithContext(ctx context.Context) AlertSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecPatchPtrOutput)
}

// AlertSpec defines an alerting rule for events involving a list of objects
type AlertSpecPatchOutput struct{ *pulumi.OutputState }

func (AlertSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSpecPatch)(nil)).Elem()
}

func (o AlertSpecPatchOutput) ToAlertSpecPatchOutput() AlertSpecPatchOutput {
	return o
}

func (o AlertSpecPatchOutput) ToAlertSpecPatchOutputWithContext(ctx context.Context) AlertSpecPatchOutput {
	return o
}

func (o AlertSpecPatchOutput) ToAlertSpecPatchPtrOutput() AlertSpecPatchPtrOutput {
	return o.ToAlertSpecPatchPtrOutputWithContext(context.Background())
}

func (o AlertSpecPatchOutput) ToAlertSpecPatchPtrOutputWithContext(ctx context.Context) AlertSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertSpecPatch) *AlertSpecPatch {
		return &v
	}).(AlertSpecPatchPtrOutput)
}

// Filter events based on severity, defaults to ('info').
// If set to 'info' no events will be filtered.
func (o AlertSpecPatchOutput) EventSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSpecPatch) *string { return v.EventSeverity }).(pulumi.StringPtrOutput)
}

// Filter events based on the involved objects.
func (o AlertSpecPatchOutput) EventSources() AlertSpecEventSourcesPatchArrayOutput {
	return o.ApplyT(func(v AlertSpecPatch) []AlertSpecEventSourcesPatch { return v.EventSources }).(AlertSpecEventSourcesPatchArrayOutput)
}

// A list of Golang regular expressions to be used for excluding messages.
func (o AlertSpecPatchOutput) ExclusionList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertSpecPatch) []string { return v.ExclusionList }).(pulumi.StringArrayOutput)
}

func (o AlertSpecPatchOutput) ProviderRef() AlertSpecProviderRefPatchPtrOutput {
	return o.ApplyT(func(v AlertSpecPatch) *AlertSpecProviderRefPatch { return v.ProviderRef }).(AlertSpecProviderRefPatchPtrOutput)
}

// Short description of the impact and affected cluster.
func (o AlertSpecPatchOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSpecPatch) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

// This flag tells the controller to suspend subsequent events dispatching.
// Defaults to false.
func (o AlertSpecPatchOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertSpecPatch) *bool { return v.Suspend }).(pulumi.BoolPtrOutput)
}

type AlertSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (AlertSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertSpecPatch)(nil)).Elem()
}

func (o AlertSpecPatchPtrOutput) ToAlertSpecPatchPtrOutput() AlertSpecPatchPtrOutput {
	return o
}

func (o AlertSpecPatchPtrOutput) ToAlertSpecPatchPtrOutputWithContext(ctx context.Context) AlertSpecPatchPtrOutput {
	return o
}

func (o AlertSpecPatchPtrOutput) Elem() AlertSpecPatchOutput {
	return o.ApplyT(func(v *AlertSpecPatch) AlertSpecPatch {
		if v != nil {
			return *v
		}
		var ret AlertSpecPatch
		return ret
	}).(AlertSpecPatchOutput)
}

// Filter events based on severity, defaults to ('info').
// If set to 'info' no events will be filtered.
func (o AlertSpecPatchPtrOutput) EventSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.EventSeverity
	}).(pulumi.StringPtrOutput)
}

// Filter events based on the involved objects.
func (o AlertSpecPatchPtrOutput) EventSources() AlertSpecEventSourcesPatchArrayOutput {
	return o.ApplyT(func(v *AlertSpecPatch) []AlertSpecEventSourcesPatch {
		if v == nil {
			return nil
		}
		return v.EventSources
	}).(AlertSpecEventSourcesPatchArrayOutput)
}

// A list of Golang regular expressions to be used for excluding messages.
func (o AlertSpecPatchPtrOutput) ExclusionList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.ExclusionList
	}).(pulumi.StringArrayOutput)
}

func (o AlertSpecPatchPtrOutput) ProviderRef() AlertSpecProviderRefPatchPtrOutput {
	return o.ApplyT(func(v *AlertSpecPatch) *AlertSpecProviderRefPatch {
		if v == nil {
			return nil
		}
		return v.ProviderRef
	}).(AlertSpecProviderRefPatchPtrOutput)
}

// Short description of the impact and affected cluster.
func (o AlertSpecPatchPtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Summary
	}).(pulumi.StringPtrOutput)
}

// This flag tells the controller to suspend subsequent events dispatching.
// Defaults to false.
func (o AlertSpecPatchPtrOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertSpecPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Suspend
	}).(pulumi.BoolPtrOutput)
}

// Send events using this provider.
type AlertSpecProviderRef struct {
	// Name of the referent.
	Name *string `pulumi:"name"`
}

// AlertSpecProviderRefInput is an input type that accepts AlertSpecProviderRefArgs and AlertSpecProviderRefOutput values.
// You can construct a concrete instance of `AlertSpecProviderRefInput` via:
//
//	AlertSpecProviderRefArgs{...}
type AlertSpecProviderRefInput interface {
	pulumi.Input

	ToAlertSpecProviderRefOutput() AlertSpecProviderRefOutput
	ToAlertSpecProviderRefOutputWithContext(context.Context) AlertSpecProviderRefOutput
}

// Send events using this provider.
type AlertSpecProviderRefArgs struct {
	// Name of the referent.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AlertSpecProviderRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSpecProviderRef)(nil)).Elem()
}

func (i AlertSpecProviderRefArgs) ToAlertSpecProviderRefOutput() AlertSpecProviderRefOutput {
	return i.ToAlertSpecProviderRefOutputWithContext(context.Background())
}

func (i AlertSpecProviderRefArgs) ToAlertSpecProviderRefOutputWithContext(ctx context.Context) AlertSpecProviderRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecProviderRefOutput)
}

func (i AlertSpecProviderRefArgs) ToAlertSpecProviderRefPtrOutput() AlertSpecProviderRefPtrOutput {
	return i.ToAlertSpecProviderRefPtrOutputWithContext(context.Background())
}

func (i AlertSpecProviderRefArgs) ToAlertSpecProviderRefPtrOutputWithContext(ctx context.Context) AlertSpecProviderRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecProviderRefOutput).ToAlertSpecProviderRefPtrOutputWithContext(ctx)
}

// AlertSpecProviderRefPtrInput is an input type that accepts AlertSpecProviderRefArgs, AlertSpecProviderRefPtr and AlertSpecProviderRefPtrOutput values.
// You can construct a concrete instance of `AlertSpecProviderRefPtrInput` via:
//
//	        AlertSpecProviderRefArgs{...}
//
//	or:
//
//	        nil
type AlertSpecProviderRefPtrInput interface {
	pulumi.Input

	ToAlertSpecProviderRefPtrOutput() AlertSpecProviderRefPtrOutput
	ToAlertSpecProviderRefPtrOutputWithContext(context.Context) AlertSpecProviderRefPtrOutput
}

type alertSpecProviderRefPtrType AlertSpecProviderRefArgs

func AlertSpecProviderRefPtr(v *AlertSpecProviderRefArgs) AlertSpecProviderRefPtrInput {
	return (*alertSpecProviderRefPtrType)(v)
}

func (*alertSpecProviderRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertSpecProviderRef)(nil)).Elem()
}

func (i *alertSpecProviderRefPtrType) ToAlertSpecProviderRefPtrOutput() AlertSpecProviderRefPtrOutput {
	return i.ToAlertSpecProviderRefPtrOutputWithContext(context.Background())
}

func (i *alertSpecProviderRefPtrType) ToAlertSpecProviderRefPtrOutputWithContext(ctx context.Context) AlertSpecProviderRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecProviderRefPtrOutput)
}

// Send events using this provider.
type AlertSpecProviderRefOutput struct{ *pulumi.OutputState }

func (AlertSpecProviderRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSpecProviderRef)(nil)).Elem()
}

func (o AlertSpecProviderRefOutput) ToAlertSpecProviderRefOutput() AlertSpecProviderRefOutput {
	return o
}

func (o AlertSpecProviderRefOutput) ToAlertSpecProviderRefOutputWithContext(ctx context.Context) AlertSpecProviderRefOutput {
	return o
}

func (o AlertSpecProviderRefOutput) ToAlertSpecProviderRefPtrOutput() AlertSpecProviderRefPtrOutput {
	return o.ToAlertSpecProviderRefPtrOutputWithContext(context.Background())
}

func (o AlertSpecProviderRefOutput) ToAlertSpecProviderRefPtrOutputWithContext(ctx context.Context) AlertSpecProviderRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertSpecProviderRef) *AlertSpecProviderRef {
		return &v
	}).(AlertSpecProviderRefPtrOutput)
}

// Name of the referent.
func (o AlertSpecProviderRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSpecProviderRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AlertSpecProviderRefPtrOutput struct{ *pulumi.OutputState }

func (AlertSpecProviderRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertSpecProviderRef)(nil)).Elem()
}

func (o AlertSpecProviderRefPtrOutput) ToAlertSpecProviderRefPtrOutput() AlertSpecProviderRefPtrOutput {
	return o
}

func (o AlertSpecProviderRefPtrOutput) ToAlertSpecProviderRefPtrOutputWithContext(ctx context.Context) AlertSpecProviderRefPtrOutput {
	return o
}

func (o AlertSpecProviderRefPtrOutput) Elem() AlertSpecProviderRefOutput {
	return o.ApplyT(func(v *AlertSpecProviderRef) AlertSpecProviderRef {
		if v != nil {
			return *v
		}
		var ret AlertSpecProviderRef
		return ret
	}).(AlertSpecProviderRefOutput)
}

// Name of the referent.
func (o AlertSpecProviderRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertSpecProviderRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Send events using this provider.
type AlertSpecProviderRefPatch struct {
	// Name of the referent.
	Name *string `pulumi:"name"`
}

// AlertSpecProviderRefPatchInput is an input type that accepts AlertSpecProviderRefPatchArgs and AlertSpecProviderRefPatchOutput values.
// You can construct a concrete instance of `AlertSpecProviderRefPatchInput` via:
//
//	AlertSpecProviderRefPatchArgs{...}
type AlertSpecProviderRefPatchInput interface {
	pulumi.Input

	ToAlertSpecProviderRefPatchOutput() AlertSpecProviderRefPatchOutput
	ToAlertSpecProviderRefPatchOutputWithContext(context.Context) AlertSpecProviderRefPatchOutput
}

// Send events using this provider.
type AlertSpecProviderRefPatchArgs struct {
	// Name of the referent.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AlertSpecProviderRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSpecProviderRefPatch)(nil)).Elem()
}

func (i AlertSpecProviderRefPatchArgs) ToAlertSpecProviderRefPatchOutput() AlertSpecProviderRefPatchOutput {
	return i.ToAlertSpecProviderRefPatchOutputWithContext(context.Background())
}

func (i AlertSpecProviderRefPatchArgs) ToAlertSpecProviderRefPatchOutputWithContext(ctx context.Context) AlertSpecProviderRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecProviderRefPatchOutput)
}

func (i AlertSpecProviderRefPatchArgs) ToAlertSpecProviderRefPatchPtrOutput() AlertSpecProviderRefPatchPtrOutput {
	return i.ToAlertSpecProviderRefPatchPtrOutputWithContext(context.Background())
}

func (i AlertSpecProviderRefPatchArgs) ToAlertSpecProviderRefPatchPtrOutputWithContext(ctx context.Context) AlertSpecProviderRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecProviderRefPatchOutput).ToAlertSpecProviderRefPatchPtrOutputWithContext(ctx)
}

// AlertSpecProviderRefPatchPtrInput is an input type that accepts AlertSpecProviderRefPatchArgs, AlertSpecProviderRefPatchPtr and AlertSpecProviderRefPatchPtrOutput values.
// You can construct a concrete instance of `AlertSpecProviderRefPatchPtrInput` via:
//
//	        AlertSpecProviderRefPatchArgs{...}
//
//	or:
//
//	        nil
type AlertSpecProviderRefPatchPtrInput interface {
	pulumi.Input

	ToAlertSpecProviderRefPatchPtrOutput() AlertSpecProviderRefPatchPtrOutput
	ToAlertSpecProviderRefPatchPtrOutputWithContext(context.Context) AlertSpecProviderRefPatchPtrOutput
}

type alertSpecProviderRefPatchPtrType AlertSpecProviderRefPatchArgs

func AlertSpecProviderRefPatchPtr(v *AlertSpecProviderRefPatchArgs) AlertSpecProviderRefPatchPtrInput {
	return (*alertSpecProviderRefPatchPtrType)(v)
}

func (*alertSpecProviderRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertSpecProviderRefPatch)(nil)).Elem()
}

func (i *alertSpecProviderRefPatchPtrType) ToAlertSpecProviderRefPatchPtrOutput() AlertSpecProviderRefPatchPtrOutput {
	return i.ToAlertSpecProviderRefPatchPtrOutputWithContext(context.Background())
}

func (i *alertSpecProviderRefPatchPtrType) ToAlertSpecProviderRefPatchPtrOutputWithContext(ctx context.Context) AlertSpecProviderRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSpecProviderRefPatchPtrOutput)
}

// Send events using this provider.
type AlertSpecProviderRefPatchOutput struct{ *pulumi.OutputState }

func (AlertSpecProviderRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSpecProviderRefPatch)(nil)).Elem()
}

func (o AlertSpecProviderRefPatchOutput) ToAlertSpecProviderRefPatchOutput() AlertSpecProviderRefPatchOutput {
	return o
}

func (o AlertSpecProviderRefPatchOutput) ToAlertSpecProviderRefPatchOutputWithContext(ctx context.Context) AlertSpecProviderRefPatchOutput {
	return o
}

func (o AlertSpecProviderRefPatchOutput) ToAlertSpecProviderRefPatchPtrOutput() AlertSpecProviderRefPatchPtrOutput {
	return o.ToAlertSpecProviderRefPatchPtrOutputWithContext(context.Background())
}

func (o AlertSpecProviderRefPatchOutput) ToAlertSpecProviderRefPatchPtrOutputWithContext(ctx context.Context) AlertSpecProviderRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertSpecProviderRefPatch) *AlertSpecProviderRefPatch {
		return &v
	}).(AlertSpecProviderRefPatchPtrOutput)
}

// Name of the referent.
func (o AlertSpecProviderRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSpecProviderRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AlertSpecProviderRefPatchPtrOutput struct{ *pulumi.OutputState }

func (AlertSpecProviderRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertSpecProviderRefPatch)(nil)).Elem()
}

func (o AlertSpecProviderRefPatchPtrOutput) ToAlertSpecProviderRefPatchPtrOutput() AlertSpecProviderRefPatchPtrOutput {
	return o
}

func (o AlertSpecProviderRefPatchPtrOutput) ToAlertSpecProviderRefPatchPtrOutputWithContext(ctx context.Context) AlertSpecProviderRefPatchPtrOutput {
	return o
}

func (o AlertSpecProviderRefPatchPtrOutput) Elem() AlertSpecProviderRefPatchOutput {
	return o.ApplyT(func(v *AlertSpecProviderRefPatch) AlertSpecProviderRefPatch {
		if v != nil {
			return *v
		}
		var ret AlertSpecProviderRefPatch
		return ret
	}).(AlertSpecProviderRefPatchOutput)
}

// Name of the referent.
func (o AlertSpecProviderRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertSpecProviderRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// AlertStatus defines the observed state of Alert
type AlertStatus struct {
	Conditions []AlertStatusConditions `pulumi:"conditions"`
	// ObservedGeneration is the last observed generation.
	ObservedGeneration *int `pulumi:"observedGeneration"`
}

// AlertStatusInput is an input type that accepts AlertStatusArgs and AlertStatusOutput values.
// You can construct a concrete instance of `AlertStatusInput` via:
//
//	AlertStatusArgs{...}
type AlertStatusInput interface {
	pulumi.Input

	ToAlertStatusOutput() AlertStatusOutput
	ToAlertStatusOutputWithContext(context.Context) AlertStatusOutput
}

// AlertStatus defines the observed state of Alert
type AlertStatusArgs struct {
	Conditions AlertStatusConditionsArrayInput `pulumi:"conditions"`
	// ObservedGeneration is the last observed generation.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
}

func (AlertStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertStatus)(nil)).Elem()
}

func (i AlertStatusArgs) ToAlertStatusOutput() AlertStatusOutput {
	return i.ToAlertStatusOutputWithContext(context.Background())
}

func (i AlertStatusArgs) ToAlertStatusOutputWithContext(ctx context.Context) AlertStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertStatusOutput)
}

func (i AlertStatusArgs) ToAlertStatusPtrOutput() AlertStatusPtrOutput {
	return i.ToAlertStatusPtrOutputWithContext(context.Background())
}

func (i AlertStatusArgs) ToAlertStatusPtrOutputWithContext(ctx context.Context) AlertStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertStatusOutput).ToAlertStatusPtrOutputWithContext(ctx)
}

// AlertStatusPtrInput is an input type that accepts AlertStatusArgs, AlertStatusPtr and AlertStatusPtrOutput values.
// You can construct a concrete instance of `AlertStatusPtrInput` via:
//
//	        AlertStatusArgs{...}
//
//	or:
//
//	        nil
type AlertStatusPtrInput interface {
	pulumi.Input

	ToAlertStatusPtrOutput() AlertStatusPtrOutput
	ToAlertStatusPtrOutputWithContext(context.Context) AlertStatusPtrOutput
}

type alertStatusPtrType AlertStatusArgs

func AlertStatusPtr(v *AlertStatusArgs) AlertStatusPtrInput {
	return (*alertStatusPtrType)(v)
}

func (*alertStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertStatus)(nil)).Elem()
}

func (i *alertStatusPtrType) ToAlertStatusPtrOutput() AlertStatusPtrOutput {
	return i.ToAlertStatusPtrOutputWithContext(context.Background())
}

func (i *alertStatusPtrType) ToAlertStatusPtrOutputWithContext(ctx context.Context) AlertStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertStatusPtrOutput)
}

// AlertStatus defines the observed state of Alert
type AlertStatusOutput struct{ *pulumi.OutputState }

func (AlertStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertStatus)(nil)).Elem()
}

func (o AlertStatusOutput) ToAlertStatusOutput() AlertStatusOutput {
	return o
}

func (o AlertStatusOutput) ToAlertStatusOutputWithContext(ctx context.Context) AlertStatusOutput {
	return o
}

func (o AlertStatusOutput) ToAlertStatusPtrOutput() AlertStatusPtrOutput {
	return o.ToAlertStatusPtrOutputWithContext(context.Background())
}

func (o AlertStatusOutput) ToAlertStatusPtrOutputWithContext(ctx context.Context) AlertStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertStatus) *AlertStatus {
		return &v
	}).(AlertStatusPtrOutput)
}

func (o AlertStatusOutput) Conditions() AlertStatusConditionsArrayOutput {
	return o.ApplyT(func(v AlertStatus) []AlertStatusConditions { return v.Conditions }).(AlertStatusConditionsArrayOutput)
}

// ObservedGeneration is the last observed generation.
func (o AlertStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

type AlertStatusPtrOutput struct{ *pulumi.OutputState }

func (AlertStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertStatus)(nil)).Elem()
}

func (o AlertStatusPtrOutput) ToAlertStatusPtrOutput() AlertStatusPtrOutput {
	return o
}

func (o AlertStatusPtrOutput) ToAlertStatusPtrOutputWithContext(ctx context.Context) AlertStatusPtrOutput {
	return o
}

func (o AlertStatusPtrOutput) Elem() AlertStatusOutput {
	return o.ApplyT(func(v *AlertStatus) AlertStatus {
		if v != nil {
			return *v
		}
		var ret AlertStatus
		return ret
	}).(AlertStatusOutput)
}

func (o AlertStatusPtrOutput) Conditions() AlertStatusConditionsArrayOutput {
	return o.ApplyT(func(v *AlertStatus) []AlertStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(AlertStatusConditionsArrayOutput)
}

// ObservedGeneration is the last observed generation.
func (o AlertStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlertStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type AlertStatusConditions struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message *string `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason *string `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status *string `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type *string `pulumi:"type"`
}

// AlertStatusConditionsInput is an input type that accepts AlertStatusConditionsArgs and AlertStatusConditionsOutput values.
// You can construct a concrete instance of `AlertStatusConditionsInput` via:
//
//	AlertStatusConditionsArgs{...}
type AlertStatusConditionsInput interface {
	pulumi.Input

	ToAlertStatusConditionsOutput() AlertStatusConditionsOutput
	ToAlertStatusConditionsOutputWithContext(context.Context) AlertStatusConditionsOutput
}

// Condition contains details for one aspect of the current state of this API Resource.
type AlertStatusConditionsArgs struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AlertStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertStatusConditions)(nil)).Elem()
}

func (i AlertStatusConditionsArgs) ToAlertStatusConditionsOutput() AlertStatusConditionsOutput {
	return i.ToAlertStatusConditionsOutputWithContext(context.Background())
}

func (i AlertStatusConditionsArgs) ToAlertStatusConditionsOutputWithContext(ctx context.Context) AlertStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertStatusConditionsOutput)
}

// AlertStatusConditionsArrayInput is an input type that accepts AlertStatusConditionsArray and AlertStatusConditionsArrayOutput values.
// You can construct a concrete instance of `AlertStatusConditionsArrayInput` via:
//
//	AlertStatusConditionsArray{ AlertStatusConditionsArgs{...} }
type AlertStatusConditionsArrayInput interface {
	pulumi.Input

	ToAlertStatusConditionsArrayOutput() AlertStatusConditionsArrayOutput
	ToAlertStatusConditionsArrayOutputWithContext(context.Context) AlertStatusConditionsArrayOutput
}

type AlertStatusConditionsArray []AlertStatusConditionsInput

func (AlertStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertStatusConditions)(nil)).Elem()
}

func (i AlertStatusConditionsArray) ToAlertStatusConditionsArrayOutput() AlertStatusConditionsArrayOutput {
	return i.ToAlertStatusConditionsArrayOutputWithContext(context.Background())
}

func (i AlertStatusConditionsArray) ToAlertStatusConditionsArrayOutputWithContext(ctx context.Context) AlertStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertStatusConditionsArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type AlertStatusConditionsOutput struct{ *pulumi.OutputState }

func (AlertStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertStatusConditions)(nil)).Elem()
}

func (o AlertStatusConditionsOutput) ToAlertStatusConditionsOutput() AlertStatusConditionsOutput {
	return o
}

func (o AlertStatusConditionsOutput) ToAlertStatusConditionsOutputWithContext(ctx context.Context) AlertStatusConditionsOutput {
	return o
}

// lastTransitionTime is the last time the condition transitioned from one status to another.
// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
func (o AlertStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human readable message indicating details about the transition.
// This may be an empty string.
func (o AlertStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// observedGeneration represents the .metadata.generation that the condition was set based upon.
// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the instance.
func (o AlertStatusConditionsOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertStatusConditions) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// reason contains a programmatic identifier indicating the reason for the condition's last transition.
// Producers of specific condition types may define expected values and meanings for this field,
// and whether the values are considered a guaranteed API.
// The value should be a CamelCase string.
// This field may not be empty.
func (o AlertStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status of the condition, one of True, False, Unknown.
func (o AlertStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of condition in CamelCase or in foo.example.com/CamelCase.
func (o AlertStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AlertStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (AlertStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertStatusConditions)(nil)).Elem()
}

func (o AlertStatusConditionsArrayOutput) ToAlertStatusConditionsArrayOutput() AlertStatusConditionsArrayOutput {
	return o
}

func (o AlertStatusConditionsArrayOutput) ToAlertStatusConditionsArrayOutputWithContext(ctx context.Context) AlertStatusConditionsArrayOutput {
	return o
}

func (o AlertStatusConditionsArrayOutput) Index(i pulumi.IntInput) AlertStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertStatusConditions {
		return vs[0].([]AlertStatusConditions)[vs[1].(int)]
	}).(AlertStatusConditionsOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type AlertStatusConditionsPatch struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message *string `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason *string `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status *string `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type *string `pulumi:"type"`
}

// AlertStatusConditionsPatchInput is an input type that accepts AlertStatusConditionsPatchArgs and AlertStatusConditionsPatchOutput values.
// You can construct a concrete instance of `AlertStatusConditionsPatchInput` via:
//
//	AlertStatusConditionsPatchArgs{...}
type AlertStatusConditionsPatchInput interface {
	pulumi.Input

	ToAlertStatusConditionsPatchOutput() AlertStatusConditionsPatchOutput
	ToAlertStatusConditionsPatchOutputWithContext(context.Context) AlertStatusConditionsPatchOutput
}

// Condition contains details for one aspect of the current state of this API Resource.
type AlertStatusConditionsPatchArgs struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AlertStatusConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertStatusConditionsPatch)(nil)).Elem()
}

func (i AlertStatusConditionsPatchArgs) ToAlertStatusConditionsPatchOutput() AlertStatusConditionsPatchOutput {
	return i.ToAlertStatusConditionsPatchOutputWithContext(context.Background())
}

func (i AlertStatusConditionsPatchArgs) ToAlertStatusConditionsPatchOutputWithContext(ctx context.Context) AlertStatusConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertStatusConditionsPatchOutput)
}

// AlertStatusConditionsPatchArrayInput is an input type that accepts AlertStatusConditionsPatchArray and AlertStatusConditionsPatchArrayOutput values.
// You can construct a concrete instance of `AlertStatusConditionsPatchArrayInput` via:
//
//	AlertStatusConditionsPatchArray{ AlertStatusConditionsPatchArgs{...} }
type AlertStatusConditionsPatchArrayInput interface {
	pulumi.Input

	ToAlertStatusConditionsPatchArrayOutput() AlertStatusConditionsPatchArrayOutput
	ToAlertStatusConditionsPatchArrayOutputWithContext(context.Context) AlertStatusConditionsPatchArrayOutput
}

type AlertStatusConditionsPatchArray []AlertStatusConditionsPatchInput

func (AlertStatusConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertStatusConditionsPatch)(nil)).Elem()
}

func (i AlertStatusConditionsPatchArray) ToAlertStatusConditionsPatchArrayOutput() AlertStatusConditionsPatchArrayOutput {
	return i.ToAlertStatusConditionsPatchArrayOutputWithContext(context.Background())
}

func (i AlertStatusConditionsPatchArray) ToAlertStatusConditionsPatchArrayOutputWithContext(ctx context.Context) AlertStatusConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertStatusConditionsPatchArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type AlertStatusConditionsPatchOutput struct{ *pulumi.OutputState }

func (AlertStatusConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertStatusConditionsPatch)(nil)).Elem()
}

func (o AlertStatusConditionsPatchOutput) ToAlertStatusConditionsPatchOutput() AlertStatusConditionsPatchOutput {
	return o
}

func (o AlertStatusConditionsPatchOutput) ToAlertStatusConditionsPatchOutputWithContext(ctx context.Context) AlertStatusConditionsPatchOutput {
	return o
}

// lastTransitionTime is the last time the condition transitioned from one status to another.
// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
func (o AlertStatusConditionsPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertStatusConditionsPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human readable message indicating details about the transition.
// This may be an empty string.
func (o AlertStatusConditionsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertStatusConditionsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// observedGeneration represents the .metadata.generation that the condition was set based upon.
// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the instance.
func (o AlertStatusConditionsPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertStatusConditionsPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// reason contains a programmatic identifier indicating the reason for the condition's last transition.
// Producers of specific condition types may define expected values and meanings for this field,
// and whether the values are considered a guaranteed API.
// The value should be a CamelCase string.
// This field may not be empty.
func (o AlertStatusConditionsPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertStatusConditionsPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status of the condition, one of True, False, Unknown.
func (o AlertStatusConditionsPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertStatusConditionsPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of condition in CamelCase or in foo.example.com/CamelCase.
func (o AlertStatusConditionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertStatusConditionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AlertStatusConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (AlertStatusConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertStatusConditionsPatch)(nil)).Elem()
}

func (o AlertStatusConditionsPatchArrayOutput) ToAlertStatusConditionsPatchArrayOutput() AlertStatusConditionsPatchArrayOutput {
	return o
}

func (o AlertStatusConditionsPatchArrayOutput) ToAlertStatusConditionsPatchArrayOutputWithContext(ctx context.Context) AlertStatusConditionsPatchArrayOutput {
	return o
}

func (o AlertStatusConditionsPatchArrayOutput) Index(i pulumi.IntInput) AlertStatusConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertStatusConditionsPatch {
		return vs[0].([]AlertStatusConditionsPatch)[vs[1].(int)]
	}).(AlertStatusConditionsPatchOutput)
}

// AlertStatus defines the observed state of Alert
type AlertStatusPatch struct {
	Conditions []AlertStatusConditionsPatch `pulumi:"conditions"`
	// ObservedGeneration is the last observed generation.
	ObservedGeneration *int `pulumi:"observedGeneration"`
}

// AlertStatusPatchInput is an input type that accepts AlertStatusPatchArgs and AlertStatusPatchOutput values.
// You can construct a concrete instance of `AlertStatusPatchInput` via:
//
//	AlertStatusPatchArgs{...}
type AlertStatusPatchInput interface {
	pulumi.Input

	ToAlertStatusPatchOutput() AlertStatusPatchOutput
	ToAlertStatusPatchOutputWithContext(context.Context) AlertStatusPatchOutput
}

// AlertStatus defines the observed state of Alert
type AlertStatusPatchArgs struct {
	Conditions AlertStatusConditionsPatchArrayInput `pulumi:"conditions"`
	// ObservedGeneration is the last observed generation.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
}

func (AlertStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertStatusPatch)(nil)).Elem()
}

func (i AlertStatusPatchArgs) ToAlertStatusPatchOutput() AlertStatusPatchOutput {
	return i.ToAlertStatusPatchOutputWithContext(context.Background())
}

func (i AlertStatusPatchArgs) ToAlertStatusPatchOutputWithContext(ctx context.Context) AlertStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertStatusPatchOutput)
}

func (i AlertStatusPatchArgs) ToAlertStatusPatchPtrOutput() AlertStatusPatchPtrOutput {
	return i.ToAlertStatusPatchPtrOutputWithContext(context.Background())
}

func (i AlertStatusPatchArgs) ToAlertStatusPatchPtrOutputWithContext(ctx context.Context) AlertStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertStatusPatchOutput).ToAlertStatusPatchPtrOutputWithContext(ctx)
}

// AlertStatusPatchPtrInput is an input type that accepts AlertStatusPatchArgs, AlertStatusPatchPtr and AlertStatusPatchPtrOutput values.
// You can construct a concrete instance of `AlertStatusPatchPtrInput` via:
//
//	        AlertStatusPatchArgs{...}
//
//	or:
//
//	        nil
type AlertStatusPatchPtrInput interface {
	pulumi.Input

	ToAlertStatusPatchPtrOutput() AlertStatusPatchPtrOutput
	ToAlertStatusPatchPtrOutputWithContext(context.Context) AlertStatusPatchPtrOutput
}

type alertStatusPatchPtrType AlertStatusPatchArgs

func AlertStatusPatchPtr(v *AlertStatusPatchArgs) AlertStatusPatchPtrInput {
	return (*alertStatusPatchPtrType)(v)
}

func (*alertStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertStatusPatch)(nil)).Elem()
}

func (i *alertStatusPatchPtrType) ToAlertStatusPatchPtrOutput() AlertStatusPatchPtrOutput {
	return i.ToAlertStatusPatchPtrOutputWithContext(context.Background())
}

func (i *alertStatusPatchPtrType) ToAlertStatusPatchPtrOutputWithContext(ctx context.Context) AlertStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertStatusPatchPtrOutput)
}

// AlertStatus defines the observed state of Alert
type AlertStatusPatchOutput struct{ *pulumi.OutputState }

func (AlertStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertStatusPatch)(nil)).Elem()
}

func (o AlertStatusPatchOutput) ToAlertStatusPatchOutput() AlertStatusPatchOutput {
	return o
}

func (o AlertStatusPatchOutput) ToAlertStatusPatchOutputWithContext(ctx context.Context) AlertStatusPatchOutput {
	return o
}

func (o AlertStatusPatchOutput) ToAlertStatusPatchPtrOutput() AlertStatusPatchPtrOutput {
	return o.ToAlertStatusPatchPtrOutputWithContext(context.Background())
}

func (o AlertStatusPatchOutput) ToAlertStatusPatchPtrOutputWithContext(ctx context.Context) AlertStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertStatusPatch) *AlertStatusPatch {
		return &v
	}).(AlertStatusPatchPtrOutput)
}

func (o AlertStatusPatchOutput) Conditions() AlertStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v AlertStatusPatch) []AlertStatusConditionsPatch { return v.Conditions }).(AlertStatusConditionsPatchArrayOutput)
}

// ObservedGeneration is the last observed generation.
func (o AlertStatusPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertStatusPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

type AlertStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (AlertStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertStatusPatch)(nil)).Elem()
}

func (o AlertStatusPatchPtrOutput) ToAlertStatusPatchPtrOutput() AlertStatusPatchPtrOutput {
	return o
}

func (o AlertStatusPatchPtrOutput) ToAlertStatusPatchPtrOutputWithContext(ctx context.Context) AlertStatusPatchPtrOutput {
	return o
}

func (o AlertStatusPatchPtrOutput) Elem() AlertStatusPatchOutput {
	return o.ApplyT(func(v *AlertStatusPatch) AlertStatusPatch {
		if v != nil {
			return *v
		}
		var ret AlertStatusPatch
		return ret
	}).(AlertStatusPatchOutput)
}

func (o AlertStatusPatchPtrOutput) Conditions() AlertStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v *AlertStatusPatch) []AlertStatusConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(AlertStatusConditionsPatchArrayOutput)
}

// ObservedGeneration is the last observed generation.
func (o AlertStatusPatchPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlertStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Provider is the Schema for the providers API
type ProviderType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *ProviderSpec      `pulumi:"spec"`
	Status   *ProviderStatus    `pulumi:"status"`
}

// ProviderTypeInput is an input type that accepts ProviderTypeArgs and ProviderTypeOutput values.
// You can construct a concrete instance of `ProviderTypeInput` via:
//
//	ProviderTypeArgs{...}
type ProviderTypeInput interface {
	pulumi.Input

	ToProviderTypeOutput() ProviderTypeOutput
	ToProviderTypeOutputWithContext(context.Context) ProviderTypeOutput
}

// Provider is the Schema for the providers API
type ProviderTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     ProviderSpecPtrInput      `pulumi:"spec"`
	Status   ProviderStatusPtrInput    `pulumi:"status"`
}

func (ProviderTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderType)(nil)).Elem()
}

func (i ProviderTypeArgs) ToProviderTypeOutput() ProviderTypeOutput {
	return i.ToProviderTypeOutputWithContext(context.Background())
}

func (i ProviderTypeArgs) ToProviderTypeOutputWithContext(ctx context.Context) ProviderTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderTypeOutput)
}

// ProviderTypeArrayInput is an input type that accepts ProviderTypeArray and ProviderTypeArrayOutput values.
// You can construct a concrete instance of `ProviderTypeArrayInput` via:
//
//	ProviderTypeArray{ ProviderTypeArgs{...} }
type ProviderTypeArrayInput interface {
	pulumi.Input

	ToProviderTypeArrayOutput() ProviderTypeArrayOutput
	ToProviderTypeArrayOutputWithContext(context.Context) ProviderTypeArrayOutput
}

type ProviderTypeArray []ProviderTypeInput

func (ProviderTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderType)(nil)).Elem()
}

func (i ProviderTypeArray) ToProviderTypeArrayOutput() ProviderTypeArrayOutput {
	return i.ToProviderTypeArrayOutputWithContext(context.Background())
}

func (i ProviderTypeArray) ToProviderTypeArrayOutputWithContext(ctx context.Context) ProviderTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderTypeArrayOutput)
}

// Provider is the Schema for the providers API
type ProviderTypeOutput struct{ *pulumi.OutputState }

func (ProviderTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderType)(nil)).Elem()
}

func (o ProviderTypeOutput) ToProviderTypeOutput() ProviderTypeOutput {
	return o
}

func (o ProviderTypeOutput) ToProviderTypeOutputWithContext(ctx context.Context) ProviderTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProviderTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProviderTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ProviderTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ProviderType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o ProviderTypeOutput) Spec() ProviderSpecPtrOutput {
	return o.ApplyT(func(v ProviderType) *ProviderSpec { return v.Spec }).(ProviderSpecPtrOutput)
}

func (o ProviderTypeOutput) Status() ProviderStatusPtrOutput {
	return o.ApplyT(func(v ProviderType) *ProviderStatus { return v.Status }).(ProviderStatusPtrOutput)
}

type ProviderTypeArrayOutput struct{ *pulumi.OutputState }

func (ProviderTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderType)(nil)).Elem()
}

func (o ProviderTypeArrayOutput) ToProviderTypeArrayOutput() ProviderTypeArrayOutput {
	return o
}

func (o ProviderTypeArrayOutput) ToProviderTypeArrayOutputWithContext(ctx context.Context) ProviderTypeArrayOutput {
	return o
}

func (o ProviderTypeArrayOutput) Index(i pulumi.IntInput) ProviderTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderType {
		return vs[0].([]ProviderType)[vs[1].(int)]
	}).(ProviderTypeOutput)
}

// ProviderList is a list of Provider
type ProviderListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of providers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []ProviderType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// ProviderListTypeInput is an input type that accepts ProviderListTypeArgs and ProviderListTypeOutput values.
// You can construct a concrete instance of `ProviderListTypeInput` via:
//
//	ProviderListTypeArgs{...}
type ProviderListTypeInput interface {
	pulumi.Input

	ToProviderListTypeOutput() ProviderListTypeOutput
	ToProviderListTypeOutputWithContext(context.Context) ProviderListTypeOutput
}

// ProviderList is a list of Provider
type ProviderListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of providers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ProviderTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (ProviderListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderListType)(nil)).Elem()
}

func (i ProviderListTypeArgs) ToProviderListTypeOutput() ProviderListTypeOutput {
	return i.ToProviderListTypeOutputWithContext(context.Background())
}

func (i ProviderListTypeArgs) ToProviderListTypeOutputWithContext(ctx context.Context) ProviderListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderListTypeOutput)
}

// ProviderList is a list of Provider
type ProviderListTypeOutput struct{ *pulumi.OutputState }

func (ProviderListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderListType)(nil)).Elem()
}

func (o ProviderListTypeOutput) ToProviderListTypeOutput() ProviderListTypeOutput {
	return o
}

func (o ProviderListTypeOutput) ToProviderListTypeOutputWithContext(ctx context.Context) ProviderListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProviderListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of providers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o ProviderListTypeOutput) Items() ProviderTypeArrayOutput {
	return o.ApplyT(func(v ProviderListType) []ProviderType { return v.Items }).(ProviderTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProviderListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProviderListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v ProviderListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// Provider is the Schema for the providers API
type ProviderPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *ProviderSpecPatch      `pulumi:"spec"`
	Status   *ProviderStatusPatch    `pulumi:"status"`
}

// ProviderPatchTypeInput is an input type that accepts ProviderPatchTypeArgs and ProviderPatchTypeOutput values.
// You can construct a concrete instance of `ProviderPatchTypeInput` via:
//
//	ProviderPatchTypeArgs{...}
type ProviderPatchTypeInput interface {
	pulumi.Input

	ToProviderPatchTypeOutput() ProviderPatchTypeOutput
	ToProviderPatchTypeOutputWithContext(context.Context) ProviderPatchTypeOutput
}

// Provider is the Schema for the providers API
type ProviderPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     ProviderSpecPatchPtrInput      `pulumi:"spec"`
	Status   ProviderStatusPatchPtrInput    `pulumi:"status"`
}

func (ProviderPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderPatchType)(nil)).Elem()
}

func (i ProviderPatchTypeArgs) ToProviderPatchTypeOutput() ProviderPatchTypeOutput {
	return i.ToProviderPatchTypeOutputWithContext(context.Background())
}

func (i ProviderPatchTypeArgs) ToProviderPatchTypeOutputWithContext(ctx context.Context) ProviderPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderPatchTypeOutput)
}

// Provider is the Schema for the providers API
type ProviderPatchTypeOutput struct{ *pulumi.OutputState }

func (ProviderPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderPatchType)(nil)).Elem()
}

func (o ProviderPatchTypeOutput) ToProviderPatchTypeOutput() ProviderPatchTypeOutput {
	return o
}

func (o ProviderPatchTypeOutput) ToProviderPatchTypeOutputWithContext(ctx context.Context) ProviderPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProviderPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProviderPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ProviderPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v ProviderPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ProviderPatchTypeOutput) Spec() ProviderSpecPatchPtrOutput {
	return o.ApplyT(func(v ProviderPatchType) *ProviderSpecPatch { return v.Spec }).(ProviderSpecPatchPtrOutput)
}

func (o ProviderPatchTypeOutput) Status() ProviderStatusPatchPtrOutput {
	return o.ApplyT(func(v ProviderPatchType) *ProviderStatusPatch { return v.Status }).(ProviderStatusPatchPtrOutput)
}

// ProviderSpec defines the desired state of Provider
type ProviderSpec struct {
	// HTTP/S webhook address of this provider
	Address       *string                    `pulumi:"address"`
	CertSecretRef *ProviderSpecCertSecretRef `pulumi:"certSecretRef"`
	// Alert channel for this provider
	Channel *string `pulumi:"channel"`
	// HTTP/S address of the proxy
	Proxy     *string                `pulumi:"proxy"`
	SecretRef *ProviderSpecSecretRef `pulumi:"secretRef"`
	// This flag tells the controller to suspend subsequent events handling.
	// Defaults to false.
	Suspend *bool `pulumi:"suspend"`
	// Timeout for sending alerts to the provider.
	Timeout *string `pulumi:"timeout"`
	// Type of provider
	Type *string `pulumi:"type"`
	// Bot username for this provider
	Username *string `pulumi:"username"`
}

// ProviderSpecInput is an input type that accepts ProviderSpecArgs and ProviderSpecOutput values.
// You can construct a concrete instance of `ProviderSpecInput` via:
//
//	ProviderSpecArgs{...}
type ProviderSpecInput interface {
	pulumi.Input

	ToProviderSpecOutput() ProviderSpecOutput
	ToProviderSpecOutputWithContext(context.Context) ProviderSpecOutput
}

// ProviderSpec defines the desired state of Provider
type ProviderSpecArgs struct {
	// HTTP/S webhook address of this provider
	Address       pulumi.StringPtrInput             `pulumi:"address"`
	CertSecretRef ProviderSpecCertSecretRefPtrInput `pulumi:"certSecretRef"`
	// Alert channel for this provider
	Channel pulumi.StringPtrInput `pulumi:"channel"`
	// HTTP/S address of the proxy
	Proxy     pulumi.StringPtrInput         `pulumi:"proxy"`
	SecretRef ProviderSpecSecretRefPtrInput `pulumi:"secretRef"`
	// This flag tells the controller to suspend subsequent events handling.
	// Defaults to false.
	Suspend pulumi.BoolPtrInput `pulumi:"suspend"`
	// Timeout for sending alerts to the provider.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
	// Type of provider
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Bot username for this provider
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ProviderSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSpec)(nil)).Elem()
}

func (i ProviderSpecArgs) ToProviderSpecOutput() ProviderSpecOutput {
	return i.ToProviderSpecOutputWithContext(context.Background())
}

func (i ProviderSpecArgs) ToProviderSpecOutputWithContext(ctx context.Context) ProviderSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecOutput)
}

func (i ProviderSpecArgs) ToProviderSpecPtrOutput() ProviderSpecPtrOutput {
	return i.ToProviderSpecPtrOutputWithContext(context.Background())
}

func (i ProviderSpecArgs) ToProviderSpecPtrOutputWithContext(ctx context.Context) ProviderSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecOutput).ToProviderSpecPtrOutputWithContext(ctx)
}

// ProviderSpecPtrInput is an input type that accepts ProviderSpecArgs, ProviderSpecPtr and ProviderSpecPtrOutput values.
// You can construct a concrete instance of `ProviderSpecPtrInput` via:
//
//	        ProviderSpecArgs{...}
//
//	or:
//
//	        nil
type ProviderSpecPtrInput interface {
	pulumi.Input

	ToProviderSpecPtrOutput() ProviderSpecPtrOutput
	ToProviderSpecPtrOutputWithContext(context.Context) ProviderSpecPtrOutput
}

type providerSpecPtrType ProviderSpecArgs

func ProviderSpecPtr(v *ProviderSpecArgs) ProviderSpecPtrInput {
	return (*providerSpecPtrType)(v)
}

func (*providerSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSpec)(nil)).Elem()
}

func (i *providerSpecPtrType) ToProviderSpecPtrOutput() ProviderSpecPtrOutput {
	return i.ToProviderSpecPtrOutputWithContext(context.Background())
}

func (i *providerSpecPtrType) ToProviderSpecPtrOutputWithContext(ctx context.Context) ProviderSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecPtrOutput)
}

// ProviderSpec defines the desired state of Provider
type ProviderSpecOutput struct{ *pulumi.OutputState }

func (ProviderSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSpec)(nil)).Elem()
}

func (o ProviderSpecOutput) ToProviderSpecOutput() ProviderSpecOutput {
	return o
}

func (o ProviderSpecOutput) ToProviderSpecOutputWithContext(ctx context.Context) ProviderSpecOutput {
	return o
}

func (o ProviderSpecOutput) ToProviderSpecPtrOutput() ProviderSpecPtrOutput {
	return o.ToProviderSpecPtrOutputWithContext(context.Background())
}

func (o ProviderSpecOutput) ToProviderSpecPtrOutputWithContext(ctx context.Context) ProviderSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderSpec) *ProviderSpec {
		return &v
	}).(ProviderSpecPtrOutput)
}

// HTTP/S webhook address of this provider
func (o ProviderSpecOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpec) *string { return v.Address }).(pulumi.StringPtrOutput)
}

func (o ProviderSpecOutput) CertSecretRef() ProviderSpecCertSecretRefPtrOutput {
	return o.ApplyT(func(v ProviderSpec) *ProviderSpecCertSecretRef { return v.CertSecretRef }).(ProviderSpecCertSecretRefPtrOutput)
}

// Alert channel for this provider
func (o ProviderSpecOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpec) *string { return v.Channel }).(pulumi.StringPtrOutput)
}

// HTTP/S address of the proxy
func (o ProviderSpecOutput) Proxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpec) *string { return v.Proxy }).(pulumi.StringPtrOutput)
}

func (o ProviderSpecOutput) SecretRef() ProviderSpecSecretRefPtrOutput {
	return o.ApplyT(func(v ProviderSpec) *ProviderSpecSecretRef { return v.SecretRef }).(ProviderSpecSecretRefPtrOutput)
}

// This flag tells the controller to suspend subsequent events handling.
// Defaults to false.
func (o ProviderSpecOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderSpec) *bool { return v.Suspend }).(pulumi.BoolPtrOutput)
}

// Timeout for sending alerts to the provider.
func (o ProviderSpecOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpec) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Type of provider
func (o ProviderSpecOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpec) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Bot username for this provider
func (o ProviderSpecOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpec) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderSpecPtrOutput struct{ *pulumi.OutputState }

func (ProviderSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSpec)(nil)).Elem()
}

func (o ProviderSpecPtrOutput) ToProviderSpecPtrOutput() ProviderSpecPtrOutput {
	return o
}

func (o ProviderSpecPtrOutput) ToProviderSpecPtrOutputWithContext(ctx context.Context) ProviderSpecPtrOutput {
	return o
}

func (o ProviderSpecPtrOutput) Elem() ProviderSpecOutput {
	return o.ApplyT(func(v *ProviderSpec) ProviderSpec {
		if v != nil {
			return *v
		}
		var ret ProviderSpec
		return ret
	}).(ProviderSpecOutput)
}

// HTTP/S webhook address of this provider
func (o ProviderSpecPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpec) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

func (o ProviderSpecPtrOutput) CertSecretRef() ProviderSpecCertSecretRefPtrOutput {
	return o.ApplyT(func(v *ProviderSpec) *ProviderSpecCertSecretRef {
		if v == nil {
			return nil
		}
		return v.CertSecretRef
	}).(ProviderSpecCertSecretRefPtrOutput)
}

// Alert channel for this provider
func (o ProviderSpecPtrOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpec) *string {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.StringPtrOutput)
}

// HTTP/S address of the proxy
func (o ProviderSpecPtrOutput) Proxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpec) *string {
		if v == nil {
			return nil
		}
		return v.Proxy
	}).(pulumi.StringPtrOutput)
}

func (o ProviderSpecPtrOutput) SecretRef() ProviderSpecSecretRefPtrOutput {
	return o.ApplyT(func(v *ProviderSpec) *ProviderSpecSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ProviderSpecSecretRefPtrOutput)
}

// This flag tells the controller to suspend subsequent events handling.
// Defaults to false.
func (o ProviderSpecPtrOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProviderSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Suspend
	}).(pulumi.BoolPtrOutput)
}

// Timeout for sending alerts to the provider.
func (o ProviderSpecPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpec) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Type of provider
func (o ProviderSpecPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpec) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Bot username for this provider
func (o ProviderSpecPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpec) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// CertSecretRef can be given the name of a secret containing
// a PEM-encoded CA certificate (`caFile`)
type ProviderSpecCertSecretRef struct {
	// Name of the referent.
	Name *string `pulumi:"name"`
}

// ProviderSpecCertSecretRefInput is an input type that accepts ProviderSpecCertSecretRefArgs and ProviderSpecCertSecretRefOutput values.
// You can construct a concrete instance of `ProviderSpecCertSecretRefInput` via:
//
//	ProviderSpecCertSecretRefArgs{...}
type ProviderSpecCertSecretRefInput interface {
	pulumi.Input

	ToProviderSpecCertSecretRefOutput() ProviderSpecCertSecretRefOutput
	ToProviderSpecCertSecretRefOutputWithContext(context.Context) ProviderSpecCertSecretRefOutput
}

// CertSecretRef can be given the name of a secret containing
// a PEM-encoded CA certificate (`caFile`)
type ProviderSpecCertSecretRefArgs struct {
	// Name of the referent.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProviderSpecCertSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSpecCertSecretRef)(nil)).Elem()
}

func (i ProviderSpecCertSecretRefArgs) ToProviderSpecCertSecretRefOutput() ProviderSpecCertSecretRefOutput {
	return i.ToProviderSpecCertSecretRefOutputWithContext(context.Background())
}

func (i ProviderSpecCertSecretRefArgs) ToProviderSpecCertSecretRefOutputWithContext(ctx context.Context) ProviderSpecCertSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecCertSecretRefOutput)
}

func (i ProviderSpecCertSecretRefArgs) ToProviderSpecCertSecretRefPtrOutput() ProviderSpecCertSecretRefPtrOutput {
	return i.ToProviderSpecCertSecretRefPtrOutputWithContext(context.Background())
}

func (i ProviderSpecCertSecretRefArgs) ToProviderSpecCertSecretRefPtrOutputWithContext(ctx context.Context) ProviderSpecCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecCertSecretRefOutput).ToProviderSpecCertSecretRefPtrOutputWithContext(ctx)
}

// ProviderSpecCertSecretRefPtrInput is an input type that accepts ProviderSpecCertSecretRefArgs, ProviderSpecCertSecretRefPtr and ProviderSpecCertSecretRefPtrOutput values.
// You can construct a concrete instance of `ProviderSpecCertSecretRefPtrInput` via:
//
//	        ProviderSpecCertSecretRefArgs{...}
//
//	or:
//
//	        nil
type ProviderSpecCertSecretRefPtrInput interface {
	pulumi.Input

	ToProviderSpecCertSecretRefPtrOutput() ProviderSpecCertSecretRefPtrOutput
	ToProviderSpecCertSecretRefPtrOutputWithContext(context.Context) ProviderSpecCertSecretRefPtrOutput
}

type providerSpecCertSecretRefPtrType ProviderSpecCertSecretRefArgs

func ProviderSpecCertSecretRefPtr(v *ProviderSpecCertSecretRefArgs) ProviderSpecCertSecretRefPtrInput {
	return (*providerSpecCertSecretRefPtrType)(v)
}

func (*providerSpecCertSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSpecCertSecretRef)(nil)).Elem()
}

func (i *providerSpecCertSecretRefPtrType) ToProviderSpecCertSecretRefPtrOutput() ProviderSpecCertSecretRefPtrOutput {
	return i.ToProviderSpecCertSecretRefPtrOutputWithContext(context.Background())
}

func (i *providerSpecCertSecretRefPtrType) ToProviderSpecCertSecretRefPtrOutputWithContext(ctx context.Context) ProviderSpecCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecCertSecretRefPtrOutput)
}

// CertSecretRef can be given the name of a secret containing
// a PEM-encoded CA certificate (`caFile`)
type ProviderSpecCertSecretRefOutput struct{ *pulumi.OutputState }

func (ProviderSpecCertSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSpecCertSecretRef)(nil)).Elem()
}

func (o ProviderSpecCertSecretRefOutput) ToProviderSpecCertSecretRefOutput() ProviderSpecCertSecretRefOutput {
	return o
}

func (o ProviderSpecCertSecretRefOutput) ToProviderSpecCertSecretRefOutputWithContext(ctx context.Context) ProviderSpecCertSecretRefOutput {
	return o
}

func (o ProviderSpecCertSecretRefOutput) ToProviderSpecCertSecretRefPtrOutput() ProviderSpecCertSecretRefPtrOutput {
	return o.ToProviderSpecCertSecretRefPtrOutputWithContext(context.Background())
}

func (o ProviderSpecCertSecretRefOutput) ToProviderSpecCertSecretRefPtrOutputWithContext(ctx context.Context) ProviderSpecCertSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderSpecCertSecretRef) *ProviderSpecCertSecretRef {
		return &v
	}).(ProviderSpecCertSecretRefPtrOutput)
}

// Name of the referent.
func (o ProviderSpecCertSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpecCertSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProviderSpecCertSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ProviderSpecCertSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSpecCertSecretRef)(nil)).Elem()
}

func (o ProviderSpecCertSecretRefPtrOutput) ToProviderSpecCertSecretRefPtrOutput() ProviderSpecCertSecretRefPtrOutput {
	return o
}

func (o ProviderSpecCertSecretRefPtrOutput) ToProviderSpecCertSecretRefPtrOutputWithContext(ctx context.Context) ProviderSpecCertSecretRefPtrOutput {
	return o
}

func (o ProviderSpecCertSecretRefPtrOutput) Elem() ProviderSpecCertSecretRefOutput {
	return o.ApplyT(func(v *ProviderSpecCertSecretRef) ProviderSpecCertSecretRef {
		if v != nil {
			return *v
		}
		var ret ProviderSpecCertSecretRef
		return ret
	}).(ProviderSpecCertSecretRefOutput)
}

// Name of the referent.
func (o ProviderSpecCertSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpecCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// CertSecretRef can be given the name of a secret containing
// a PEM-encoded CA certificate (`caFile`)
type ProviderSpecCertSecretRefPatch struct {
	// Name of the referent.
	Name *string `pulumi:"name"`
}

// ProviderSpecCertSecretRefPatchInput is an input type that accepts ProviderSpecCertSecretRefPatchArgs and ProviderSpecCertSecretRefPatchOutput values.
// You can construct a concrete instance of `ProviderSpecCertSecretRefPatchInput` via:
//
//	ProviderSpecCertSecretRefPatchArgs{...}
type ProviderSpecCertSecretRefPatchInput interface {
	pulumi.Input

	ToProviderSpecCertSecretRefPatchOutput() ProviderSpecCertSecretRefPatchOutput
	ToProviderSpecCertSecretRefPatchOutputWithContext(context.Context) ProviderSpecCertSecretRefPatchOutput
}

// CertSecretRef can be given the name of a secret containing
// a PEM-encoded CA certificate (`caFile`)
type ProviderSpecCertSecretRefPatchArgs struct {
	// Name of the referent.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProviderSpecCertSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSpecCertSecretRefPatch)(nil)).Elem()
}

func (i ProviderSpecCertSecretRefPatchArgs) ToProviderSpecCertSecretRefPatchOutput() ProviderSpecCertSecretRefPatchOutput {
	return i.ToProviderSpecCertSecretRefPatchOutputWithContext(context.Background())
}

func (i ProviderSpecCertSecretRefPatchArgs) ToProviderSpecCertSecretRefPatchOutputWithContext(ctx context.Context) ProviderSpecCertSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecCertSecretRefPatchOutput)
}

func (i ProviderSpecCertSecretRefPatchArgs) ToProviderSpecCertSecretRefPatchPtrOutput() ProviderSpecCertSecretRefPatchPtrOutput {
	return i.ToProviderSpecCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i ProviderSpecCertSecretRefPatchArgs) ToProviderSpecCertSecretRefPatchPtrOutputWithContext(ctx context.Context) ProviderSpecCertSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecCertSecretRefPatchOutput).ToProviderSpecCertSecretRefPatchPtrOutputWithContext(ctx)
}

// ProviderSpecCertSecretRefPatchPtrInput is an input type that accepts ProviderSpecCertSecretRefPatchArgs, ProviderSpecCertSecretRefPatchPtr and ProviderSpecCertSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `ProviderSpecCertSecretRefPatchPtrInput` via:
//
//	        ProviderSpecCertSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type ProviderSpecCertSecretRefPatchPtrInput interface {
	pulumi.Input

	ToProviderSpecCertSecretRefPatchPtrOutput() ProviderSpecCertSecretRefPatchPtrOutput
	ToProviderSpecCertSecretRefPatchPtrOutputWithContext(context.Context) ProviderSpecCertSecretRefPatchPtrOutput
}

type providerSpecCertSecretRefPatchPtrType ProviderSpecCertSecretRefPatchArgs

func ProviderSpecCertSecretRefPatchPtr(v *ProviderSpecCertSecretRefPatchArgs) ProviderSpecCertSecretRefPatchPtrInput {
	return (*providerSpecCertSecretRefPatchPtrType)(v)
}

func (*providerSpecCertSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSpecCertSecretRefPatch)(nil)).Elem()
}

func (i *providerSpecCertSecretRefPatchPtrType) ToProviderSpecCertSecretRefPatchPtrOutput() ProviderSpecCertSecretRefPatchPtrOutput {
	return i.ToProviderSpecCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *providerSpecCertSecretRefPatchPtrType) ToProviderSpecCertSecretRefPatchPtrOutputWithContext(ctx context.Context) ProviderSpecCertSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecCertSecretRefPatchPtrOutput)
}

// CertSecretRef can be given the name of a secret containing
// a PEM-encoded CA certificate (`caFile`)
type ProviderSpecCertSecretRefPatchOutput struct{ *pulumi.OutputState }

func (ProviderSpecCertSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSpecCertSecretRefPatch)(nil)).Elem()
}

func (o ProviderSpecCertSecretRefPatchOutput) ToProviderSpecCertSecretRefPatchOutput() ProviderSpecCertSecretRefPatchOutput {
	return o
}

func (o ProviderSpecCertSecretRefPatchOutput) ToProviderSpecCertSecretRefPatchOutputWithContext(ctx context.Context) ProviderSpecCertSecretRefPatchOutput {
	return o
}

func (o ProviderSpecCertSecretRefPatchOutput) ToProviderSpecCertSecretRefPatchPtrOutput() ProviderSpecCertSecretRefPatchPtrOutput {
	return o.ToProviderSpecCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o ProviderSpecCertSecretRefPatchOutput) ToProviderSpecCertSecretRefPatchPtrOutputWithContext(ctx context.Context) ProviderSpecCertSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderSpecCertSecretRefPatch) *ProviderSpecCertSecretRefPatch {
		return &v
	}).(ProviderSpecCertSecretRefPatchPtrOutput)
}

// Name of the referent.
func (o ProviderSpecCertSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpecCertSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProviderSpecCertSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (ProviderSpecCertSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSpecCertSecretRefPatch)(nil)).Elem()
}

func (o ProviderSpecCertSecretRefPatchPtrOutput) ToProviderSpecCertSecretRefPatchPtrOutput() ProviderSpecCertSecretRefPatchPtrOutput {
	return o
}

func (o ProviderSpecCertSecretRefPatchPtrOutput) ToProviderSpecCertSecretRefPatchPtrOutputWithContext(ctx context.Context) ProviderSpecCertSecretRefPatchPtrOutput {
	return o
}

func (o ProviderSpecCertSecretRefPatchPtrOutput) Elem() ProviderSpecCertSecretRefPatchOutput {
	return o.ApplyT(func(v *ProviderSpecCertSecretRefPatch) ProviderSpecCertSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret ProviderSpecCertSecretRefPatch
		return ret
	}).(ProviderSpecCertSecretRefPatchOutput)
}

// Name of the referent.
func (o ProviderSpecCertSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpecCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ProviderSpec defines the desired state of Provider
type ProviderSpecPatch struct {
	// HTTP/S webhook address of this provider
	Address       *string                         `pulumi:"address"`
	CertSecretRef *ProviderSpecCertSecretRefPatch `pulumi:"certSecretRef"`
	// Alert channel for this provider
	Channel *string `pulumi:"channel"`
	// HTTP/S address of the proxy
	Proxy     *string                     `pulumi:"proxy"`
	SecretRef *ProviderSpecSecretRefPatch `pulumi:"secretRef"`
	// This flag tells the controller to suspend subsequent events handling.
	// Defaults to false.
	Suspend *bool `pulumi:"suspend"`
	// Timeout for sending alerts to the provider.
	Timeout *string `pulumi:"timeout"`
	// Type of provider
	Type *string `pulumi:"type"`
	// Bot username for this provider
	Username *string `pulumi:"username"`
}

// ProviderSpecPatchInput is an input type that accepts ProviderSpecPatchArgs and ProviderSpecPatchOutput values.
// You can construct a concrete instance of `ProviderSpecPatchInput` via:
//
//	ProviderSpecPatchArgs{...}
type ProviderSpecPatchInput interface {
	pulumi.Input

	ToProviderSpecPatchOutput() ProviderSpecPatchOutput
	ToProviderSpecPatchOutputWithContext(context.Context) ProviderSpecPatchOutput
}

// ProviderSpec defines the desired state of Provider
type ProviderSpecPatchArgs struct {
	// HTTP/S webhook address of this provider
	Address       pulumi.StringPtrInput                  `pulumi:"address"`
	CertSecretRef ProviderSpecCertSecretRefPatchPtrInput `pulumi:"certSecretRef"`
	// Alert channel for this provider
	Channel pulumi.StringPtrInput `pulumi:"channel"`
	// HTTP/S address of the proxy
	Proxy     pulumi.StringPtrInput              `pulumi:"proxy"`
	SecretRef ProviderSpecSecretRefPatchPtrInput `pulumi:"secretRef"`
	// This flag tells the controller to suspend subsequent events handling.
	// Defaults to false.
	Suspend pulumi.BoolPtrInput `pulumi:"suspend"`
	// Timeout for sending alerts to the provider.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
	// Type of provider
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Bot username for this provider
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ProviderSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSpecPatch)(nil)).Elem()
}

func (i ProviderSpecPatchArgs) ToProviderSpecPatchOutput() ProviderSpecPatchOutput {
	return i.ToProviderSpecPatchOutputWithContext(context.Background())
}

func (i ProviderSpecPatchArgs) ToProviderSpecPatchOutputWithContext(ctx context.Context) ProviderSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecPatchOutput)
}

func (i ProviderSpecPatchArgs) ToProviderSpecPatchPtrOutput() ProviderSpecPatchPtrOutput {
	return i.ToProviderSpecPatchPtrOutputWithContext(context.Background())
}

func (i ProviderSpecPatchArgs) ToProviderSpecPatchPtrOutputWithContext(ctx context.Context) ProviderSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecPatchOutput).ToProviderSpecPatchPtrOutputWithContext(ctx)
}

// ProviderSpecPatchPtrInput is an input type that accepts ProviderSpecPatchArgs, ProviderSpecPatchPtr and ProviderSpecPatchPtrOutput values.
// You can construct a concrete instance of `ProviderSpecPatchPtrInput` via:
//
//	        ProviderSpecPatchArgs{...}
//
//	or:
//
//	        nil
type ProviderSpecPatchPtrInput interface {
	pulumi.Input

	ToProviderSpecPatchPtrOutput() ProviderSpecPatchPtrOutput
	ToProviderSpecPatchPtrOutputWithContext(context.Context) ProviderSpecPatchPtrOutput
}

type providerSpecPatchPtrType ProviderSpecPatchArgs

func ProviderSpecPatchPtr(v *ProviderSpecPatchArgs) ProviderSpecPatchPtrInput {
	return (*providerSpecPatchPtrType)(v)
}

func (*providerSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSpecPatch)(nil)).Elem()
}

func (i *providerSpecPatchPtrType) ToProviderSpecPatchPtrOutput() ProviderSpecPatchPtrOutput {
	return i.ToProviderSpecPatchPtrOutputWithContext(context.Background())
}

func (i *providerSpecPatchPtrType) ToProviderSpecPatchPtrOutputWithContext(ctx context.Context) ProviderSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecPatchPtrOutput)
}

// ProviderSpec defines the desired state of Provider
type ProviderSpecPatchOutput struct{ *pulumi.OutputState }

func (ProviderSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSpecPatch)(nil)).Elem()
}

func (o ProviderSpecPatchOutput) ToProviderSpecPatchOutput() ProviderSpecPatchOutput {
	return o
}

func (o ProviderSpecPatchOutput) ToProviderSpecPatchOutputWithContext(ctx context.Context) ProviderSpecPatchOutput {
	return o
}

func (o ProviderSpecPatchOutput) ToProviderSpecPatchPtrOutput() ProviderSpecPatchPtrOutput {
	return o.ToProviderSpecPatchPtrOutputWithContext(context.Background())
}

func (o ProviderSpecPatchOutput) ToProviderSpecPatchPtrOutputWithContext(ctx context.Context) ProviderSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderSpecPatch) *ProviderSpecPatch {
		return &v
	}).(ProviderSpecPatchPtrOutput)
}

// HTTP/S webhook address of this provider
func (o ProviderSpecPatchOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpecPatch) *string { return v.Address }).(pulumi.StringPtrOutput)
}

func (o ProviderSpecPatchOutput) CertSecretRef() ProviderSpecCertSecretRefPatchPtrOutput {
	return o.ApplyT(func(v ProviderSpecPatch) *ProviderSpecCertSecretRefPatch { return v.CertSecretRef }).(ProviderSpecCertSecretRefPatchPtrOutput)
}

// Alert channel for this provider
func (o ProviderSpecPatchOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpecPatch) *string { return v.Channel }).(pulumi.StringPtrOutput)
}

// HTTP/S address of the proxy
func (o ProviderSpecPatchOutput) Proxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpecPatch) *string { return v.Proxy }).(pulumi.StringPtrOutput)
}

func (o ProviderSpecPatchOutput) SecretRef() ProviderSpecSecretRefPatchPtrOutput {
	return o.ApplyT(func(v ProviderSpecPatch) *ProviderSpecSecretRefPatch { return v.SecretRef }).(ProviderSpecSecretRefPatchPtrOutput)
}

// This flag tells the controller to suspend subsequent events handling.
// Defaults to false.
func (o ProviderSpecPatchOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderSpecPatch) *bool { return v.Suspend }).(pulumi.BoolPtrOutput)
}

// Timeout for sending alerts to the provider.
func (o ProviderSpecPatchOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpecPatch) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Type of provider
func (o ProviderSpecPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpecPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Bot username for this provider
func (o ProviderSpecPatchOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpecPatch) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (ProviderSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSpecPatch)(nil)).Elem()
}

func (o ProviderSpecPatchPtrOutput) ToProviderSpecPatchPtrOutput() ProviderSpecPatchPtrOutput {
	return o
}

func (o ProviderSpecPatchPtrOutput) ToProviderSpecPatchPtrOutputWithContext(ctx context.Context) ProviderSpecPatchPtrOutput {
	return o
}

func (o ProviderSpecPatchPtrOutput) Elem() ProviderSpecPatchOutput {
	return o.ApplyT(func(v *ProviderSpecPatch) ProviderSpecPatch {
		if v != nil {
			return *v
		}
		var ret ProviderSpecPatch
		return ret
	}).(ProviderSpecPatchOutput)
}

// HTTP/S webhook address of this provider
func (o ProviderSpecPatchPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

func (o ProviderSpecPatchPtrOutput) CertSecretRef() ProviderSpecCertSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *ProviderSpecPatch) *ProviderSpecCertSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.CertSecretRef
	}).(ProviderSpecCertSecretRefPatchPtrOutput)
}

// Alert channel for this provider
func (o ProviderSpecPatchPtrOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.StringPtrOutput)
}

// HTTP/S address of the proxy
func (o ProviderSpecPatchPtrOutput) Proxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Proxy
	}).(pulumi.StringPtrOutput)
}

func (o ProviderSpecPatchPtrOutput) SecretRef() ProviderSpecSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *ProviderSpecPatch) *ProviderSpecSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ProviderSpecSecretRefPatchPtrOutput)
}

// This flag tells the controller to suspend subsequent events handling.
// Defaults to false.
func (o ProviderSpecPatchPtrOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProviderSpecPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Suspend
	}).(pulumi.BoolPtrOutput)
}

// Timeout for sending alerts to the provider.
func (o ProviderSpecPatchPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Type of provider
func (o ProviderSpecPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Bot username for this provider
func (o ProviderSpecPatchPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Secret reference containing the provider webhook URL
// using "address" as data key
type ProviderSpecSecretRef struct {
	// Name of the referent.
	Name *string `pulumi:"name"`
}

// ProviderSpecSecretRefInput is an input type that accepts ProviderSpecSecretRefArgs and ProviderSpecSecretRefOutput values.
// You can construct a concrete instance of `ProviderSpecSecretRefInput` via:
//
//	ProviderSpecSecretRefArgs{...}
type ProviderSpecSecretRefInput interface {
	pulumi.Input

	ToProviderSpecSecretRefOutput() ProviderSpecSecretRefOutput
	ToProviderSpecSecretRefOutputWithContext(context.Context) ProviderSpecSecretRefOutput
}

// Secret reference containing the provider webhook URL
// using "address" as data key
type ProviderSpecSecretRefArgs struct {
	// Name of the referent.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProviderSpecSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSpecSecretRef)(nil)).Elem()
}

func (i ProviderSpecSecretRefArgs) ToProviderSpecSecretRefOutput() ProviderSpecSecretRefOutput {
	return i.ToProviderSpecSecretRefOutputWithContext(context.Background())
}

func (i ProviderSpecSecretRefArgs) ToProviderSpecSecretRefOutputWithContext(ctx context.Context) ProviderSpecSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecSecretRefOutput)
}

func (i ProviderSpecSecretRefArgs) ToProviderSpecSecretRefPtrOutput() ProviderSpecSecretRefPtrOutput {
	return i.ToProviderSpecSecretRefPtrOutputWithContext(context.Background())
}

func (i ProviderSpecSecretRefArgs) ToProviderSpecSecretRefPtrOutputWithContext(ctx context.Context) ProviderSpecSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecSecretRefOutput).ToProviderSpecSecretRefPtrOutputWithContext(ctx)
}

// ProviderSpecSecretRefPtrInput is an input type that accepts ProviderSpecSecretRefArgs, ProviderSpecSecretRefPtr and ProviderSpecSecretRefPtrOutput values.
// You can construct a concrete instance of `ProviderSpecSecretRefPtrInput` via:
//
//	        ProviderSpecSecretRefArgs{...}
//
//	or:
//
//	        nil
type ProviderSpecSecretRefPtrInput interface {
	pulumi.Input

	ToProviderSpecSecretRefPtrOutput() ProviderSpecSecretRefPtrOutput
	ToProviderSpecSecretRefPtrOutputWithContext(context.Context) ProviderSpecSecretRefPtrOutput
}

type providerSpecSecretRefPtrType ProviderSpecSecretRefArgs

func ProviderSpecSecretRefPtr(v *ProviderSpecSecretRefArgs) ProviderSpecSecretRefPtrInput {
	return (*providerSpecSecretRefPtrType)(v)
}

func (*providerSpecSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSpecSecretRef)(nil)).Elem()
}

func (i *providerSpecSecretRefPtrType) ToProviderSpecSecretRefPtrOutput() ProviderSpecSecretRefPtrOutput {
	return i.ToProviderSpecSecretRefPtrOutputWithContext(context.Background())
}

func (i *providerSpecSecretRefPtrType) ToProviderSpecSecretRefPtrOutputWithContext(ctx context.Context) ProviderSpecSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecSecretRefPtrOutput)
}

// Secret reference containing the provider webhook URL
// using "address" as data key
type ProviderSpecSecretRefOutput struct{ *pulumi.OutputState }

func (ProviderSpecSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSpecSecretRef)(nil)).Elem()
}

func (o ProviderSpecSecretRefOutput) ToProviderSpecSecretRefOutput() ProviderSpecSecretRefOutput {
	return o
}

func (o ProviderSpecSecretRefOutput) ToProviderSpecSecretRefOutputWithContext(ctx context.Context) ProviderSpecSecretRefOutput {
	return o
}

func (o ProviderSpecSecretRefOutput) ToProviderSpecSecretRefPtrOutput() ProviderSpecSecretRefPtrOutput {
	return o.ToProviderSpecSecretRefPtrOutputWithContext(context.Background())
}

func (o ProviderSpecSecretRefOutput) ToProviderSpecSecretRefPtrOutputWithContext(ctx context.Context) ProviderSpecSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderSpecSecretRef) *ProviderSpecSecretRef {
		return &v
	}).(ProviderSpecSecretRefPtrOutput)
}

// Name of the referent.
func (o ProviderSpecSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpecSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProviderSpecSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ProviderSpecSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSpecSecretRef)(nil)).Elem()
}

func (o ProviderSpecSecretRefPtrOutput) ToProviderSpecSecretRefPtrOutput() ProviderSpecSecretRefPtrOutput {
	return o
}

func (o ProviderSpecSecretRefPtrOutput) ToProviderSpecSecretRefPtrOutputWithContext(ctx context.Context) ProviderSpecSecretRefPtrOutput {
	return o
}

func (o ProviderSpecSecretRefPtrOutput) Elem() ProviderSpecSecretRefOutput {
	return o.ApplyT(func(v *ProviderSpecSecretRef) ProviderSpecSecretRef {
		if v != nil {
			return *v
		}
		var ret ProviderSpecSecretRef
		return ret
	}).(ProviderSpecSecretRefOutput)
}

// Name of the referent.
func (o ProviderSpecSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpecSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Secret reference containing the provider webhook URL
// using "address" as data key
type ProviderSpecSecretRefPatch struct {
	// Name of the referent.
	Name *string `pulumi:"name"`
}

// ProviderSpecSecretRefPatchInput is an input type that accepts ProviderSpecSecretRefPatchArgs and ProviderSpecSecretRefPatchOutput values.
// You can construct a concrete instance of `ProviderSpecSecretRefPatchInput` via:
//
//	ProviderSpecSecretRefPatchArgs{...}
type ProviderSpecSecretRefPatchInput interface {
	pulumi.Input

	ToProviderSpecSecretRefPatchOutput() ProviderSpecSecretRefPatchOutput
	ToProviderSpecSecretRefPatchOutputWithContext(context.Context) ProviderSpecSecretRefPatchOutput
}

// Secret reference containing the provider webhook URL
// using "address" as data key
type ProviderSpecSecretRefPatchArgs struct {
	// Name of the referent.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProviderSpecSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSpecSecretRefPatch)(nil)).Elem()
}

func (i ProviderSpecSecretRefPatchArgs) ToProviderSpecSecretRefPatchOutput() ProviderSpecSecretRefPatchOutput {
	return i.ToProviderSpecSecretRefPatchOutputWithContext(context.Background())
}

func (i ProviderSpecSecretRefPatchArgs) ToProviderSpecSecretRefPatchOutputWithContext(ctx context.Context) ProviderSpecSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecSecretRefPatchOutput)
}

func (i ProviderSpecSecretRefPatchArgs) ToProviderSpecSecretRefPatchPtrOutput() ProviderSpecSecretRefPatchPtrOutput {
	return i.ToProviderSpecSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i ProviderSpecSecretRefPatchArgs) ToProviderSpecSecretRefPatchPtrOutputWithContext(ctx context.Context) ProviderSpecSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecSecretRefPatchOutput).ToProviderSpecSecretRefPatchPtrOutputWithContext(ctx)
}

// ProviderSpecSecretRefPatchPtrInput is an input type that accepts ProviderSpecSecretRefPatchArgs, ProviderSpecSecretRefPatchPtr and ProviderSpecSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `ProviderSpecSecretRefPatchPtrInput` via:
//
//	        ProviderSpecSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type ProviderSpecSecretRefPatchPtrInput interface {
	pulumi.Input

	ToProviderSpecSecretRefPatchPtrOutput() ProviderSpecSecretRefPatchPtrOutput
	ToProviderSpecSecretRefPatchPtrOutputWithContext(context.Context) ProviderSpecSecretRefPatchPtrOutput
}

type providerSpecSecretRefPatchPtrType ProviderSpecSecretRefPatchArgs

func ProviderSpecSecretRefPatchPtr(v *ProviderSpecSecretRefPatchArgs) ProviderSpecSecretRefPatchPtrInput {
	return (*providerSpecSecretRefPatchPtrType)(v)
}

func (*providerSpecSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSpecSecretRefPatch)(nil)).Elem()
}

func (i *providerSpecSecretRefPatchPtrType) ToProviderSpecSecretRefPatchPtrOutput() ProviderSpecSecretRefPatchPtrOutput {
	return i.ToProviderSpecSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *providerSpecSecretRefPatchPtrType) ToProviderSpecSecretRefPatchPtrOutputWithContext(ctx context.Context) ProviderSpecSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecSecretRefPatchPtrOutput)
}

// Secret reference containing the provider webhook URL
// using "address" as data key
type ProviderSpecSecretRefPatchOutput struct{ *pulumi.OutputState }

func (ProviderSpecSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSpecSecretRefPatch)(nil)).Elem()
}

func (o ProviderSpecSecretRefPatchOutput) ToProviderSpecSecretRefPatchOutput() ProviderSpecSecretRefPatchOutput {
	return o
}

func (o ProviderSpecSecretRefPatchOutput) ToProviderSpecSecretRefPatchOutputWithContext(ctx context.Context) ProviderSpecSecretRefPatchOutput {
	return o
}

func (o ProviderSpecSecretRefPatchOutput) ToProviderSpecSecretRefPatchPtrOutput() ProviderSpecSecretRefPatchPtrOutput {
	return o.ToProviderSpecSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o ProviderSpecSecretRefPatchOutput) ToProviderSpecSecretRefPatchPtrOutputWithContext(ctx context.Context) ProviderSpecSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderSpecSecretRefPatch) *ProviderSpecSecretRefPatch {
		return &v
	}).(ProviderSpecSecretRefPatchPtrOutput)
}

// Name of the referent.
func (o ProviderSpecSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpecSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProviderSpecSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (ProviderSpecSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSpecSecretRefPatch)(nil)).Elem()
}

func (o ProviderSpecSecretRefPatchPtrOutput) ToProviderSpecSecretRefPatchPtrOutput() ProviderSpecSecretRefPatchPtrOutput {
	return o
}

func (o ProviderSpecSecretRefPatchPtrOutput) ToProviderSpecSecretRefPatchPtrOutputWithContext(ctx context.Context) ProviderSpecSecretRefPatchPtrOutput {
	return o
}

func (o ProviderSpecSecretRefPatchPtrOutput) Elem() ProviderSpecSecretRefPatchOutput {
	return o.ApplyT(func(v *ProviderSpecSecretRefPatch) ProviderSpecSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret ProviderSpecSecretRefPatch
		return ret
	}).(ProviderSpecSecretRefPatchOutput)
}

// Name of the referent.
func (o ProviderSpecSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpecSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ProviderStatus defines the observed state of Provider
type ProviderStatus struct {
	Conditions []ProviderStatusConditions `pulumi:"conditions"`
	// ObservedGeneration is the last reconciled generation.
	ObservedGeneration *int `pulumi:"observedGeneration"`
}

// ProviderStatusInput is an input type that accepts ProviderStatusArgs and ProviderStatusOutput values.
// You can construct a concrete instance of `ProviderStatusInput` via:
//
//	ProviderStatusArgs{...}
type ProviderStatusInput interface {
	pulumi.Input

	ToProviderStatusOutput() ProviderStatusOutput
	ToProviderStatusOutputWithContext(context.Context) ProviderStatusOutput
}

// ProviderStatus defines the observed state of Provider
type ProviderStatusArgs struct {
	Conditions ProviderStatusConditionsArrayInput `pulumi:"conditions"`
	// ObservedGeneration is the last reconciled generation.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
}

func (ProviderStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderStatus)(nil)).Elem()
}

func (i ProviderStatusArgs) ToProviderStatusOutput() ProviderStatusOutput {
	return i.ToProviderStatusOutputWithContext(context.Background())
}

func (i ProviderStatusArgs) ToProviderStatusOutputWithContext(ctx context.Context) ProviderStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderStatusOutput)
}

func (i ProviderStatusArgs) ToProviderStatusPtrOutput() ProviderStatusPtrOutput {
	return i.ToProviderStatusPtrOutputWithContext(context.Background())
}

func (i ProviderStatusArgs) ToProviderStatusPtrOutputWithContext(ctx context.Context) ProviderStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderStatusOutput).ToProviderStatusPtrOutputWithContext(ctx)
}

// ProviderStatusPtrInput is an input type that accepts ProviderStatusArgs, ProviderStatusPtr and ProviderStatusPtrOutput values.
// You can construct a concrete instance of `ProviderStatusPtrInput` via:
//
//	        ProviderStatusArgs{...}
//
//	or:
//
//	        nil
type ProviderStatusPtrInput interface {
	pulumi.Input

	ToProviderStatusPtrOutput() ProviderStatusPtrOutput
	ToProviderStatusPtrOutputWithContext(context.Context) ProviderStatusPtrOutput
}

type providerStatusPtrType ProviderStatusArgs

func ProviderStatusPtr(v *ProviderStatusArgs) ProviderStatusPtrInput {
	return (*providerStatusPtrType)(v)
}

func (*providerStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderStatus)(nil)).Elem()
}

func (i *providerStatusPtrType) ToProviderStatusPtrOutput() ProviderStatusPtrOutput {
	return i.ToProviderStatusPtrOutputWithContext(context.Background())
}

func (i *providerStatusPtrType) ToProviderStatusPtrOutputWithContext(ctx context.Context) ProviderStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderStatusPtrOutput)
}

// ProviderStatus defines the observed state of Provider
type ProviderStatusOutput struct{ *pulumi.OutputState }

func (ProviderStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderStatus)(nil)).Elem()
}

func (o ProviderStatusOutput) ToProviderStatusOutput() ProviderStatusOutput {
	return o
}

func (o ProviderStatusOutput) ToProviderStatusOutputWithContext(ctx context.Context) ProviderStatusOutput {
	return o
}

func (o ProviderStatusOutput) ToProviderStatusPtrOutput() ProviderStatusPtrOutput {
	return o.ToProviderStatusPtrOutputWithContext(context.Background())
}

func (o ProviderStatusOutput) ToProviderStatusPtrOutputWithContext(ctx context.Context) ProviderStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderStatus) *ProviderStatus {
		return &v
	}).(ProviderStatusPtrOutput)
}

func (o ProviderStatusOutput) Conditions() ProviderStatusConditionsArrayOutput {
	return o.ApplyT(func(v ProviderStatus) []ProviderStatusConditions { return v.Conditions }).(ProviderStatusConditionsArrayOutput)
}

// ObservedGeneration is the last reconciled generation.
func (o ProviderStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

type ProviderStatusPtrOutput struct{ *pulumi.OutputState }

func (ProviderStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderStatus)(nil)).Elem()
}

func (o ProviderStatusPtrOutput) ToProviderStatusPtrOutput() ProviderStatusPtrOutput {
	return o
}

func (o ProviderStatusPtrOutput) ToProviderStatusPtrOutputWithContext(ctx context.Context) ProviderStatusPtrOutput {
	return o
}

func (o ProviderStatusPtrOutput) Elem() ProviderStatusOutput {
	return o.ApplyT(func(v *ProviderStatus) ProviderStatus {
		if v != nil {
			return *v
		}
		var ret ProviderStatus
		return ret
	}).(ProviderStatusOutput)
}

func (o ProviderStatusPtrOutput) Conditions() ProviderStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ProviderStatus) []ProviderStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ProviderStatusConditionsArrayOutput)
}

// ObservedGeneration is the last reconciled generation.
func (o ProviderStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProviderStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProviderStatusConditions struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message *string `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason *string `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status *string `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type *string `pulumi:"type"`
}

// ProviderStatusConditionsInput is an input type that accepts ProviderStatusConditionsArgs and ProviderStatusConditionsOutput values.
// You can construct a concrete instance of `ProviderStatusConditionsInput` via:
//
//	ProviderStatusConditionsArgs{...}
type ProviderStatusConditionsInput interface {
	pulumi.Input

	ToProviderStatusConditionsOutput() ProviderStatusConditionsOutput
	ToProviderStatusConditionsOutputWithContext(context.Context) ProviderStatusConditionsOutput
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProviderStatusConditionsArgs struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ProviderStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderStatusConditions)(nil)).Elem()
}

func (i ProviderStatusConditionsArgs) ToProviderStatusConditionsOutput() ProviderStatusConditionsOutput {
	return i.ToProviderStatusConditionsOutputWithContext(context.Background())
}

func (i ProviderStatusConditionsArgs) ToProviderStatusConditionsOutputWithContext(ctx context.Context) ProviderStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderStatusConditionsOutput)
}

// ProviderStatusConditionsArrayInput is an input type that accepts ProviderStatusConditionsArray and ProviderStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ProviderStatusConditionsArrayInput` via:
//
//	ProviderStatusConditionsArray{ ProviderStatusConditionsArgs{...} }
type ProviderStatusConditionsArrayInput interface {
	pulumi.Input

	ToProviderStatusConditionsArrayOutput() ProviderStatusConditionsArrayOutput
	ToProviderStatusConditionsArrayOutputWithContext(context.Context) ProviderStatusConditionsArrayOutput
}

type ProviderStatusConditionsArray []ProviderStatusConditionsInput

func (ProviderStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderStatusConditions)(nil)).Elem()
}

func (i ProviderStatusConditionsArray) ToProviderStatusConditionsArrayOutput() ProviderStatusConditionsArrayOutput {
	return i.ToProviderStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ProviderStatusConditionsArray) ToProviderStatusConditionsArrayOutputWithContext(ctx context.Context) ProviderStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderStatusConditionsArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProviderStatusConditionsOutput struct{ *pulumi.OutputState }

func (ProviderStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderStatusConditions)(nil)).Elem()
}

func (o ProviderStatusConditionsOutput) ToProviderStatusConditionsOutput() ProviderStatusConditionsOutput {
	return o
}

func (o ProviderStatusConditionsOutput) ToProviderStatusConditionsOutputWithContext(ctx context.Context) ProviderStatusConditionsOutput {
	return o
}

// lastTransitionTime is the last time the condition transitioned from one status to another.
// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
func (o ProviderStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human readable message indicating details about the transition.
// This may be an empty string.
func (o ProviderStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// observedGeneration represents the .metadata.generation that the condition was set based upon.
// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the instance.
func (o ProviderStatusConditionsOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderStatusConditions) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// reason contains a programmatic identifier indicating the reason for the condition's last transition.
// Producers of specific condition types may define expected values and meanings for this field,
// and whether the values are considered a guaranteed API.
// The value should be a CamelCase string.
// This field may not be empty.
func (o ProviderStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status of the condition, one of True, False, Unknown.
func (o ProviderStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of condition in CamelCase or in foo.example.com/CamelCase.
func (o ProviderStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProviderStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ProviderStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderStatusConditions)(nil)).Elem()
}

func (o ProviderStatusConditionsArrayOutput) ToProviderStatusConditionsArrayOutput() ProviderStatusConditionsArrayOutput {
	return o
}

func (o ProviderStatusConditionsArrayOutput) ToProviderStatusConditionsArrayOutputWithContext(ctx context.Context) ProviderStatusConditionsArrayOutput {
	return o
}

func (o ProviderStatusConditionsArrayOutput) Index(i pulumi.IntInput) ProviderStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderStatusConditions {
		return vs[0].([]ProviderStatusConditions)[vs[1].(int)]
	}).(ProviderStatusConditionsOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProviderStatusConditionsPatch struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message *string `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason *string `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status *string `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type *string `pulumi:"type"`
}

// ProviderStatusConditionsPatchInput is an input type that accepts ProviderStatusConditionsPatchArgs and ProviderStatusConditionsPatchOutput values.
// You can construct a concrete instance of `ProviderStatusConditionsPatchInput` via:
//
//	ProviderStatusConditionsPatchArgs{...}
type ProviderStatusConditionsPatchInput interface {
	pulumi.Input

	ToProviderStatusConditionsPatchOutput() ProviderStatusConditionsPatchOutput
	ToProviderStatusConditionsPatchOutputWithContext(context.Context) ProviderStatusConditionsPatchOutput
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProviderStatusConditionsPatchArgs struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ProviderStatusConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderStatusConditionsPatch)(nil)).Elem()
}

func (i ProviderStatusConditionsPatchArgs) ToProviderStatusConditionsPatchOutput() ProviderStatusConditionsPatchOutput {
	return i.ToProviderStatusConditionsPatchOutputWithContext(context.Background())
}

func (i ProviderStatusConditionsPatchArgs) ToProviderStatusConditionsPatchOutputWithContext(ctx context.Context) ProviderStatusConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderStatusConditionsPatchOutput)
}

// ProviderStatusConditionsPatchArrayInput is an input type that accepts ProviderStatusConditionsPatchArray and ProviderStatusConditionsPatchArrayOutput values.
// You can construct a concrete instance of `ProviderStatusConditionsPatchArrayInput` via:
//
//	ProviderStatusConditionsPatchArray{ ProviderStatusConditionsPatchArgs{...} }
type ProviderStatusConditionsPatchArrayInput interface {
	pulumi.Input

	ToProviderStatusConditionsPatchArrayOutput() ProviderStatusConditionsPatchArrayOutput
	ToProviderStatusConditionsPatchArrayOutputWithContext(context.Context) ProviderStatusConditionsPatchArrayOutput
}

type ProviderStatusConditionsPatchArray []ProviderStatusConditionsPatchInput

func (ProviderStatusConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderStatusConditionsPatch)(nil)).Elem()
}

func (i ProviderStatusConditionsPatchArray) ToProviderStatusConditionsPatchArrayOutput() ProviderStatusConditionsPatchArrayOutput {
	return i.ToProviderStatusConditionsPatchArrayOutputWithContext(context.Background())
}

func (i ProviderStatusConditionsPatchArray) ToProviderStatusConditionsPatchArrayOutputWithContext(ctx context.Context) ProviderStatusConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderStatusConditionsPatchArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ProviderStatusConditionsPatchOutput struct{ *pulumi.OutputState }

func (ProviderStatusConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderStatusConditionsPatch)(nil)).Elem()
}

func (o ProviderStatusConditionsPatchOutput) ToProviderStatusConditionsPatchOutput() ProviderStatusConditionsPatchOutput {
	return o
}

func (o ProviderStatusConditionsPatchOutput) ToProviderStatusConditionsPatchOutputWithContext(ctx context.Context) ProviderStatusConditionsPatchOutput {
	return o
}

// lastTransitionTime is the last time the condition transitioned from one status to another.
// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
func (o ProviderStatusConditionsPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderStatusConditionsPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human readable message indicating details about the transition.
// This may be an empty string.
func (o ProviderStatusConditionsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderStatusConditionsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// observedGeneration represents the .metadata.generation that the condition was set based upon.
// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the instance.
func (o ProviderStatusConditionsPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderStatusConditionsPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// reason contains a programmatic identifier indicating the reason for the condition's last transition.
// Producers of specific condition types may define expected values and meanings for this field,
// and whether the values are considered a guaranteed API.
// The value should be a CamelCase string.
// This field may not be empty.
func (o ProviderStatusConditionsPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderStatusConditionsPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status of the condition, one of True, False, Unknown.
func (o ProviderStatusConditionsPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderStatusConditionsPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of condition in CamelCase or in foo.example.com/CamelCase.
func (o ProviderStatusConditionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderStatusConditionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProviderStatusConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (ProviderStatusConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderStatusConditionsPatch)(nil)).Elem()
}

func (o ProviderStatusConditionsPatchArrayOutput) ToProviderStatusConditionsPatchArrayOutput() ProviderStatusConditionsPatchArrayOutput {
	return o
}

func (o ProviderStatusConditionsPatchArrayOutput) ToProviderStatusConditionsPatchArrayOutputWithContext(ctx context.Context) ProviderStatusConditionsPatchArrayOutput {
	return o
}

func (o ProviderStatusConditionsPatchArrayOutput) Index(i pulumi.IntInput) ProviderStatusConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderStatusConditionsPatch {
		return vs[0].([]ProviderStatusConditionsPatch)[vs[1].(int)]
	}).(ProviderStatusConditionsPatchOutput)
}

// ProviderStatus defines the observed state of Provider
type ProviderStatusPatch struct {
	Conditions []ProviderStatusConditionsPatch `pulumi:"conditions"`
	// ObservedGeneration is the last reconciled generation.
	ObservedGeneration *int `pulumi:"observedGeneration"`
}

// ProviderStatusPatchInput is an input type that accepts ProviderStatusPatchArgs and ProviderStatusPatchOutput values.
// You can construct a concrete instance of `ProviderStatusPatchInput` via:
//
//	ProviderStatusPatchArgs{...}
type ProviderStatusPatchInput interface {
	pulumi.Input

	ToProviderStatusPatchOutput() ProviderStatusPatchOutput
	ToProviderStatusPatchOutputWithContext(context.Context) ProviderStatusPatchOutput
}

// ProviderStatus defines the observed state of Provider
type ProviderStatusPatchArgs struct {
	Conditions ProviderStatusConditionsPatchArrayInput `pulumi:"conditions"`
	// ObservedGeneration is the last reconciled generation.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
}

func (ProviderStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderStatusPatch)(nil)).Elem()
}

func (i ProviderStatusPatchArgs) ToProviderStatusPatchOutput() ProviderStatusPatchOutput {
	return i.ToProviderStatusPatchOutputWithContext(context.Background())
}

func (i ProviderStatusPatchArgs) ToProviderStatusPatchOutputWithContext(ctx context.Context) ProviderStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderStatusPatchOutput)
}

func (i ProviderStatusPatchArgs) ToProviderStatusPatchPtrOutput() ProviderStatusPatchPtrOutput {
	return i.ToProviderStatusPatchPtrOutputWithContext(context.Background())
}

func (i ProviderStatusPatchArgs) ToProviderStatusPatchPtrOutputWithContext(ctx context.Context) ProviderStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderStatusPatchOutput).ToProviderStatusPatchPtrOutputWithContext(ctx)
}

// ProviderStatusPatchPtrInput is an input type that accepts ProviderStatusPatchArgs, ProviderStatusPatchPtr and ProviderStatusPatchPtrOutput values.
// You can construct a concrete instance of `ProviderStatusPatchPtrInput` via:
//
//	        ProviderStatusPatchArgs{...}
//
//	or:
//
//	        nil
type ProviderStatusPatchPtrInput interface {
	pulumi.Input

	ToProviderStatusPatchPtrOutput() ProviderStatusPatchPtrOutput
	ToProviderStatusPatchPtrOutputWithContext(context.Context) ProviderStatusPatchPtrOutput
}

type providerStatusPatchPtrType ProviderStatusPatchArgs

func ProviderStatusPatchPtr(v *ProviderStatusPatchArgs) ProviderStatusPatchPtrInput {
	return (*providerStatusPatchPtrType)(v)
}

func (*providerStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderStatusPatch)(nil)).Elem()
}

func (i *providerStatusPatchPtrType) ToProviderStatusPatchPtrOutput() ProviderStatusPatchPtrOutput {
	return i.ToProviderStatusPatchPtrOutputWithContext(context.Background())
}

func (i *providerStatusPatchPtrType) ToProviderStatusPatchPtrOutputWithContext(ctx context.Context) ProviderStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderStatusPatchPtrOutput)
}

// ProviderStatus defines the observed state of Provider
type ProviderStatusPatchOutput struct{ *pulumi.OutputState }

func (ProviderStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderStatusPatch)(nil)).Elem()
}

func (o ProviderStatusPatchOutput) ToProviderStatusPatchOutput() ProviderStatusPatchOutput {
	return o
}

func (o ProviderStatusPatchOutput) ToProviderStatusPatchOutputWithContext(ctx context.Context) ProviderStatusPatchOutput {
	return o
}

func (o ProviderStatusPatchOutput) ToProviderStatusPatchPtrOutput() ProviderStatusPatchPtrOutput {
	return o.ToProviderStatusPatchPtrOutputWithContext(context.Background())
}

func (o ProviderStatusPatchOutput) ToProviderStatusPatchPtrOutputWithContext(ctx context.Context) ProviderStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderStatusPatch) *ProviderStatusPatch {
		return &v
	}).(ProviderStatusPatchPtrOutput)
}

func (o ProviderStatusPatchOutput) Conditions() ProviderStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v ProviderStatusPatch) []ProviderStatusConditionsPatch { return v.Conditions }).(ProviderStatusConditionsPatchArrayOutput)
}

// ObservedGeneration is the last reconciled generation.
func (o ProviderStatusPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderStatusPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

type ProviderStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (ProviderStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderStatusPatch)(nil)).Elem()
}

func (o ProviderStatusPatchPtrOutput) ToProviderStatusPatchPtrOutput() ProviderStatusPatchPtrOutput {
	return o
}

func (o ProviderStatusPatchPtrOutput) ToProviderStatusPatchPtrOutputWithContext(ctx context.Context) ProviderStatusPatchPtrOutput {
	return o
}

func (o ProviderStatusPatchPtrOutput) Elem() ProviderStatusPatchOutput {
	return o.ApplyT(func(v *ProviderStatusPatch) ProviderStatusPatch {
		if v != nil {
			return *v
		}
		var ret ProviderStatusPatch
		return ret
	}).(ProviderStatusPatchOutput)
}

func (o ProviderStatusPatchPtrOutput) Conditions() ProviderStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v *ProviderStatusPatch) []ProviderStatusConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ProviderStatusConditionsPatchArrayOutput)
}

// ObservedGeneration is the last reconciled generation.
func (o ProviderStatusPatchPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProviderStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Receiver is the Schema for the receivers API
type ReceiverType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *ReceiverSpec      `pulumi:"spec"`
	Status   *ReceiverStatus    `pulumi:"status"`
}

// ReceiverTypeInput is an input type that accepts ReceiverTypeArgs and ReceiverTypeOutput values.
// You can construct a concrete instance of `ReceiverTypeInput` via:
//
//	ReceiverTypeArgs{...}
type ReceiverTypeInput interface {
	pulumi.Input

	ToReceiverTypeOutput() ReceiverTypeOutput
	ToReceiverTypeOutputWithContext(context.Context) ReceiverTypeOutput
}

// Receiver is the Schema for the receivers API
type ReceiverTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     ReceiverSpecPtrInput      `pulumi:"spec"`
	Status   ReceiverStatusPtrInput    `pulumi:"status"`
}

func (ReceiverTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverType)(nil)).Elem()
}

func (i ReceiverTypeArgs) ToReceiverTypeOutput() ReceiverTypeOutput {
	return i.ToReceiverTypeOutputWithContext(context.Background())
}

func (i ReceiverTypeArgs) ToReceiverTypeOutputWithContext(ctx context.Context) ReceiverTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverTypeOutput)
}

// ReceiverTypeArrayInput is an input type that accepts ReceiverTypeArray and ReceiverTypeArrayOutput values.
// You can construct a concrete instance of `ReceiverTypeArrayInput` via:
//
//	ReceiverTypeArray{ ReceiverTypeArgs{...} }
type ReceiverTypeArrayInput interface {
	pulumi.Input

	ToReceiverTypeArrayOutput() ReceiverTypeArrayOutput
	ToReceiverTypeArrayOutputWithContext(context.Context) ReceiverTypeArrayOutput
}

type ReceiverTypeArray []ReceiverTypeInput

func (ReceiverTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiverType)(nil)).Elem()
}

func (i ReceiverTypeArray) ToReceiverTypeArrayOutput() ReceiverTypeArrayOutput {
	return i.ToReceiverTypeArrayOutputWithContext(context.Background())
}

func (i ReceiverTypeArray) ToReceiverTypeArrayOutputWithContext(ctx context.Context) ReceiverTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverTypeArrayOutput)
}

// Receiver is the Schema for the receivers API
type ReceiverTypeOutput struct{ *pulumi.OutputState }

func (ReceiverTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverType)(nil)).Elem()
}

func (o ReceiverTypeOutput) ToReceiverTypeOutput() ReceiverTypeOutput {
	return o
}

func (o ReceiverTypeOutput) ToReceiverTypeOutputWithContext(ctx context.Context) ReceiverTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ReceiverTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ReceiverTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ReceiverTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ReceiverType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o ReceiverTypeOutput) Spec() ReceiverSpecPtrOutput {
	return o.ApplyT(func(v ReceiverType) *ReceiverSpec { return v.Spec }).(ReceiverSpecPtrOutput)
}

func (o ReceiverTypeOutput) Status() ReceiverStatusPtrOutput {
	return o.ApplyT(func(v ReceiverType) *ReceiverStatus { return v.Status }).(ReceiverStatusPtrOutput)
}

type ReceiverTypeArrayOutput struct{ *pulumi.OutputState }

func (ReceiverTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiverType)(nil)).Elem()
}

func (o ReceiverTypeArrayOutput) ToReceiverTypeArrayOutput() ReceiverTypeArrayOutput {
	return o
}

func (o ReceiverTypeArrayOutput) ToReceiverTypeArrayOutputWithContext(ctx context.Context) ReceiverTypeArrayOutput {
	return o
}

func (o ReceiverTypeArrayOutput) Index(i pulumi.IntInput) ReceiverTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReceiverType {
		return vs[0].([]ReceiverType)[vs[1].(int)]
	}).(ReceiverTypeOutput)
}

// ReceiverList is a list of Receiver
type ReceiverListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of receivers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []ReceiverType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// ReceiverListTypeInput is an input type that accepts ReceiverListTypeArgs and ReceiverListTypeOutput values.
// You can construct a concrete instance of `ReceiverListTypeInput` via:
//
//	ReceiverListTypeArgs{...}
type ReceiverListTypeInput interface {
	pulumi.Input

	ToReceiverListTypeOutput() ReceiverListTypeOutput
	ToReceiverListTypeOutputWithContext(context.Context) ReceiverListTypeOutput
}

// ReceiverList is a list of Receiver
type ReceiverListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of receivers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ReceiverTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (ReceiverListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverListType)(nil)).Elem()
}

func (i ReceiverListTypeArgs) ToReceiverListTypeOutput() ReceiverListTypeOutput {
	return i.ToReceiverListTypeOutputWithContext(context.Background())
}

func (i ReceiverListTypeArgs) ToReceiverListTypeOutputWithContext(ctx context.Context) ReceiverListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverListTypeOutput)
}

// ReceiverList is a list of Receiver
type ReceiverListTypeOutput struct{ *pulumi.OutputState }

func (ReceiverListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverListType)(nil)).Elem()
}

func (o ReceiverListTypeOutput) ToReceiverListTypeOutput() ReceiverListTypeOutput {
	return o
}

func (o ReceiverListTypeOutput) ToReceiverListTypeOutputWithContext(ctx context.Context) ReceiverListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ReceiverListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of receivers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o ReceiverListTypeOutput) Items() ReceiverTypeArrayOutput {
	return o.ApplyT(func(v ReceiverListType) []ReceiverType { return v.Items }).(ReceiverTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ReceiverListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ReceiverListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v ReceiverListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// Receiver is the Schema for the receivers API
type ReceiverPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *ReceiverSpecPatch      `pulumi:"spec"`
	Status   *ReceiverStatusPatch    `pulumi:"status"`
}

// ReceiverPatchTypeInput is an input type that accepts ReceiverPatchTypeArgs and ReceiverPatchTypeOutput values.
// You can construct a concrete instance of `ReceiverPatchTypeInput` via:
//
//	ReceiverPatchTypeArgs{...}
type ReceiverPatchTypeInput interface {
	pulumi.Input

	ToReceiverPatchTypeOutput() ReceiverPatchTypeOutput
	ToReceiverPatchTypeOutputWithContext(context.Context) ReceiverPatchTypeOutput
}

// Receiver is the Schema for the receivers API
type ReceiverPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     ReceiverSpecPatchPtrInput      `pulumi:"spec"`
	Status   ReceiverStatusPatchPtrInput    `pulumi:"status"`
}

func (ReceiverPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverPatchType)(nil)).Elem()
}

func (i ReceiverPatchTypeArgs) ToReceiverPatchTypeOutput() ReceiverPatchTypeOutput {
	return i.ToReceiverPatchTypeOutputWithContext(context.Background())
}

func (i ReceiverPatchTypeArgs) ToReceiverPatchTypeOutputWithContext(ctx context.Context) ReceiverPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverPatchTypeOutput)
}

// Receiver is the Schema for the receivers API
type ReceiverPatchTypeOutput struct{ *pulumi.OutputState }

func (ReceiverPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverPatchType)(nil)).Elem()
}

func (o ReceiverPatchTypeOutput) ToReceiverPatchTypeOutput() ReceiverPatchTypeOutput {
	return o
}

func (o ReceiverPatchTypeOutput) ToReceiverPatchTypeOutputWithContext(ctx context.Context) ReceiverPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ReceiverPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ReceiverPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ReceiverPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v ReceiverPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ReceiverPatchTypeOutput) Spec() ReceiverSpecPatchPtrOutput {
	return o.ApplyT(func(v ReceiverPatchType) *ReceiverSpecPatch { return v.Spec }).(ReceiverSpecPatchPtrOutput)
}

func (o ReceiverPatchTypeOutput) Status() ReceiverStatusPatchPtrOutput {
	return o.ApplyT(func(v ReceiverPatchType) *ReceiverStatusPatch { return v.Status }).(ReceiverStatusPatchPtrOutput)
}

// ReceiverSpec defines the desired state of Receiver
type ReceiverSpec struct {
	// A list of events to handle,
	// e.g. 'push' for GitHub or 'Push Hook' for GitLab.
	Events []string `pulumi:"events"`
	// A list of resources to be notified about changes.
	Resources []ReceiverSpecResources `pulumi:"resources"`
	SecretRef *ReceiverSpecSecretRef  `pulumi:"secretRef"`
	// This flag tells the controller to suspend subsequent events handling.
	// Defaults to false.
	Suspend *bool `pulumi:"suspend"`
	// Type of webhook sender, used to determine
	// the validation procedure and payload deserialization.
	Type *string `pulumi:"type"`
}

// ReceiverSpecInput is an input type that accepts ReceiverSpecArgs and ReceiverSpecOutput values.
// You can construct a concrete instance of `ReceiverSpecInput` via:
//
//	ReceiverSpecArgs{...}
type ReceiverSpecInput interface {
	pulumi.Input

	ToReceiverSpecOutput() ReceiverSpecOutput
	ToReceiverSpecOutputWithContext(context.Context) ReceiverSpecOutput
}

// ReceiverSpec defines the desired state of Receiver
type ReceiverSpecArgs struct {
	// A list of events to handle,
	// e.g. 'push' for GitHub or 'Push Hook' for GitLab.
	Events pulumi.StringArrayInput `pulumi:"events"`
	// A list of resources to be notified about changes.
	Resources ReceiverSpecResourcesArrayInput `pulumi:"resources"`
	SecretRef ReceiverSpecSecretRefPtrInput   `pulumi:"secretRef"`
	// This flag tells the controller to suspend subsequent events handling.
	// Defaults to false.
	Suspend pulumi.BoolPtrInput `pulumi:"suspend"`
	// Type of webhook sender, used to determine
	// the validation procedure and payload deserialization.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReceiverSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverSpec)(nil)).Elem()
}

func (i ReceiverSpecArgs) ToReceiverSpecOutput() ReceiverSpecOutput {
	return i.ToReceiverSpecOutputWithContext(context.Background())
}

func (i ReceiverSpecArgs) ToReceiverSpecOutputWithContext(ctx context.Context) ReceiverSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecOutput)
}

func (i ReceiverSpecArgs) ToReceiverSpecPtrOutput() ReceiverSpecPtrOutput {
	return i.ToReceiverSpecPtrOutputWithContext(context.Background())
}

func (i ReceiverSpecArgs) ToReceiverSpecPtrOutputWithContext(ctx context.Context) ReceiverSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecOutput).ToReceiverSpecPtrOutputWithContext(ctx)
}

// ReceiverSpecPtrInput is an input type that accepts ReceiverSpecArgs, ReceiverSpecPtr and ReceiverSpecPtrOutput values.
// You can construct a concrete instance of `ReceiverSpecPtrInput` via:
//
//	        ReceiverSpecArgs{...}
//
//	or:
//
//	        nil
type ReceiverSpecPtrInput interface {
	pulumi.Input

	ToReceiverSpecPtrOutput() ReceiverSpecPtrOutput
	ToReceiverSpecPtrOutputWithContext(context.Context) ReceiverSpecPtrOutput
}

type receiverSpecPtrType ReceiverSpecArgs

func ReceiverSpecPtr(v *ReceiverSpecArgs) ReceiverSpecPtrInput {
	return (*receiverSpecPtrType)(v)
}

func (*receiverSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiverSpec)(nil)).Elem()
}

func (i *receiverSpecPtrType) ToReceiverSpecPtrOutput() ReceiverSpecPtrOutput {
	return i.ToReceiverSpecPtrOutputWithContext(context.Background())
}

func (i *receiverSpecPtrType) ToReceiverSpecPtrOutputWithContext(ctx context.Context) ReceiverSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecPtrOutput)
}

// ReceiverSpec defines the desired state of Receiver
type ReceiverSpecOutput struct{ *pulumi.OutputState }

func (ReceiverSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverSpec)(nil)).Elem()
}

func (o ReceiverSpecOutput) ToReceiverSpecOutput() ReceiverSpecOutput {
	return o
}

func (o ReceiverSpecOutput) ToReceiverSpecOutputWithContext(ctx context.Context) ReceiverSpecOutput {
	return o
}

func (o ReceiverSpecOutput) ToReceiverSpecPtrOutput() ReceiverSpecPtrOutput {
	return o.ToReceiverSpecPtrOutputWithContext(context.Background())
}

func (o ReceiverSpecOutput) ToReceiverSpecPtrOutputWithContext(ctx context.Context) ReceiverSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReceiverSpec) *ReceiverSpec {
		return &v
	}).(ReceiverSpecPtrOutput)
}

// A list of events to handle,
// e.g. 'push' for GitHub or 'Push Hook' for GitLab.
func (o ReceiverSpecOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReceiverSpec) []string { return v.Events }).(pulumi.StringArrayOutput)
}

// A list of resources to be notified about changes.
func (o ReceiverSpecOutput) Resources() ReceiverSpecResourcesArrayOutput {
	return o.ApplyT(func(v ReceiverSpec) []ReceiverSpecResources { return v.Resources }).(ReceiverSpecResourcesArrayOutput)
}

func (o ReceiverSpecOutput) SecretRef() ReceiverSpecSecretRefPtrOutput {
	return o.ApplyT(func(v ReceiverSpec) *ReceiverSpecSecretRef { return v.SecretRef }).(ReceiverSpecSecretRefPtrOutput)
}

// This flag tells the controller to suspend subsequent events handling.
// Defaults to false.
func (o ReceiverSpecOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReceiverSpec) *bool { return v.Suspend }).(pulumi.BoolPtrOutput)
}

// Type of webhook sender, used to determine
// the validation procedure and payload deserialization.
func (o ReceiverSpecOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverSpec) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReceiverSpecPtrOutput struct{ *pulumi.OutputState }

func (ReceiverSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiverSpec)(nil)).Elem()
}

func (o ReceiverSpecPtrOutput) ToReceiverSpecPtrOutput() ReceiverSpecPtrOutput {
	return o
}

func (o ReceiverSpecPtrOutput) ToReceiverSpecPtrOutputWithContext(ctx context.Context) ReceiverSpecPtrOutput {
	return o
}

func (o ReceiverSpecPtrOutput) Elem() ReceiverSpecOutput {
	return o.ApplyT(func(v *ReceiverSpec) ReceiverSpec {
		if v != nil {
			return *v
		}
		var ret ReceiverSpec
		return ret
	}).(ReceiverSpecOutput)
}

// A list of events to handle,
// e.g. 'push' for GitHub or 'Push Hook' for GitLab.
func (o ReceiverSpecPtrOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReceiverSpec) []string {
		if v == nil {
			return nil
		}
		return v.Events
	}).(pulumi.StringArrayOutput)
}

// A list of resources to be notified about changes.
func (o ReceiverSpecPtrOutput) Resources() ReceiverSpecResourcesArrayOutput {
	return o.ApplyT(func(v *ReceiverSpec) []ReceiverSpecResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(ReceiverSpecResourcesArrayOutput)
}

func (o ReceiverSpecPtrOutput) SecretRef() ReceiverSpecSecretRefPtrOutput {
	return o.ApplyT(func(v *ReceiverSpec) *ReceiverSpecSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ReceiverSpecSecretRefPtrOutput)
}

// This flag tells the controller to suspend subsequent events handling.
// Defaults to false.
func (o ReceiverSpecPtrOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReceiverSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Suspend
	}).(pulumi.BoolPtrOutput)
}

// Type of webhook sender, used to determine
// the validation procedure and payload deserialization.
func (o ReceiverSpecPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReceiverSpec) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// ReceiverSpec defines the desired state of Receiver
type ReceiverSpecPatch struct {
	// A list of events to handle,
	// e.g. 'push' for GitHub or 'Push Hook' for GitLab.
	Events []string `pulumi:"events"`
	// A list of resources to be notified about changes.
	Resources []ReceiverSpecResourcesPatch `pulumi:"resources"`
	SecretRef *ReceiverSpecSecretRefPatch  `pulumi:"secretRef"`
	// This flag tells the controller to suspend subsequent events handling.
	// Defaults to false.
	Suspend *bool `pulumi:"suspend"`
	// Type of webhook sender, used to determine
	// the validation procedure and payload deserialization.
	Type *string `pulumi:"type"`
}

// ReceiverSpecPatchInput is an input type that accepts ReceiverSpecPatchArgs and ReceiverSpecPatchOutput values.
// You can construct a concrete instance of `ReceiverSpecPatchInput` via:
//
//	ReceiverSpecPatchArgs{...}
type ReceiverSpecPatchInput interface {
	pulumi.Input

	ToReceiverSpecPatchOutput() ReceiverSpecPatchOutput
	ToReceiverSpecPatchOutputWithContext(context.Context) ReceiverSpecPatchOutput
}

// ReceiverSpec defines the desired state of Receiver
type ReceiverSpecPatchArgs struct {
	// A list of events to handle,
	// e.g. 'push' for GitHub or 'Push Hook' for GitLab.
	Events pulumi.StringArrayInput `pulumi:"events"`
	// A list of resources to be notified about changes.
	Resources ReceiverSpecResourcesPatchArrayInput `pulumi:"resources"`
	SecretRef ReceiverSpecSecretRefPatchPtrInput   `pulumi:"secretRef"`
	// This flag tells the controller to suspend subsequent events handling.
	// Defaults to false.
	Suspend pulumi.BoolPtrInput `pulumi:"suspend"`
	// Type of webhook sender, used to determine
	// the validation procedure and payload deserialization.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReceiverSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverSpecPatch)(nil)).Elem()
}

func (i ReceiverSpecPatchArgs) ToReceiverSpecPatchOutput() ReceiverSpecPatchOutput {
	return i.ToReceiverSpecPatchOutputWithContext(context.Background())
}

func (i ReceiverSpecPatchArgs) ToReceiverSpecPatchOutputWithContext(ctx context.Context) ReceiverSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecPatchOutput)
}

func (i ReceiverSpecPatchArgs) ToReceiverSpecPatchPtrOutput() ReceiverSpecPatchPtrOutput {
	return i.ToReceiverSpecPatchPtrOutputWithContext(context.Background())
}

func (i ReceiverSpecPatchArgs) ToReceiverSpecPatchPtrOutputWithContext(ctx context.Context) ReceiverSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecPatchOutput).ToReceiverSpecPatchPtrOutputWithContext(ctx)
}

// ReceiverSpecPatchPtrInput is an input type that accepts ReceiverSpecPatchArgs, ReceiverSpecPatchPtr and ReceiverSpecPatchPtrOutput values.
// You can construct a concrete instance of `ReceiverSpecPatchPtrInput` via:
//
//	        ReceiverSpecPatchArgs{...}
//
//	or:
//
//	        nil
type ReceiverSpecPatchPtrInput interface {
	pulumi.Input

	ToReceiverSpecPatchPtrOutput() ReceiverSpecPatchPtrOutput
	ToReceiverSpecPatchPtrOutputWithContext(context.Context) ReceiverSpecPatchPtrOutput
}

type receiverSpecPatchPtrType ReceiverSpecPatchArgs

func ReceiverSpecPatchPtr(v *ReceiverSpecPatchArgs) ReceiverSpecPatchPtrInput {
	return (*receiverSpecPatchPtrType)(v)
}

func (*receiverSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiverSpecPatch)(nil)).Elem()
}

func (i *receiverSpecPatchPtrType) ToReceiverSpecPatchPtrOutput() ReceiverSpecPatchPtrOutput {
	return i.ToReceiverSpecPatchPtrOutputWithContext(context.Background())
}

func (i *receiverSpecPatchPtrType) ToReceiverSpecPatchPtrOutputWithContext(ctx context.Context) ReceiverSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecPatchPtrOutput)
}

// ReceiverSpec defines the desired state of Receiver
type ReceiverSpecPatchOutput struct{ *pulumi.OutputState }

func (ReceiverSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverSpecPatch)(nil)).Elem()
}

func (o ReceiverSpecPatchOutput) ToReceiverSpecPatchOutput() ReceiverSpecPatchOutput {
	return o
}

func (o ReceiverSpecPatchOutput) ToReceiverSpecPatchOutputWithContext(ctx context.Context) ReceiverSpecPatchOutput {
	return o
}

func (o ReceiverSpecPatchOutput) ToReceiverSpecPatchPtrOutput() ReceiverSpecPatchPtrOutput {
	return o.ToReceiverSpecPatchPtrOutputWithContext(context.Background())
}

func (o ReceiverSpecPatchOutput) ToReceiverSpecPatchPtrOutputWithContext(ctx context.Context) ReceiverSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReceiverSpecPatch) *ReceiverSpecPatch {
		return &v
	}).(ReceiverSpecPatchPtrOutput)
}

// A list of events to handle,
// e.g. 'push' for GitHub or 'Push Hook' for GitLab.
func (o ReceiverSpecPatchOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReceiverSpecPatch) []string { return v.Events }).(pulumi.StringArrayOutput)
}

// A list of resources to be notified about changes.
func (o ReceiverSpecPatchOutput) Resources() ReceiverSpecResourcesPatchArrayOutput {
	return o.ApplyT(func(v ReceiverSpecPatch) []ReceiverSpecResourcesPatch { return v.Resources }).(ReceiverSpecResourcesPatchArrayOutput)
}

func (o ReceiverSpecPatchOutput) SecretRef() ReceiverSpecSecretRefPatchPtrOutput {
	return o.ApplyT(func(v ReceiverSpecPatch) *ReceiverSpecSecretRefPatch { return v.SecretRef }).(ReceiverSpecSecretRefPatchPtrOutput)
}

// This flag tells the controller to suspend subsequent events handling.
// Defaults to false.
func (o ReceiverSpecPatchOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReceiverSpecPatch) *bool { return v.Suspend }).(pulumi.BoolPtrOutput)
}

// Type of webhook sender, used to determine
// the validation procedure and payload deserialization.
func (o ReceiverSpecPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverSpecPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReceiverSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (ReceiverSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiverSpecPatch)(nil)).Elem()
}

func (o ReceiverSpecPatchPtrOutput) ToReceiverSpecPatchPtrOutput() ReceiverSpecPatchPtrOutput {
	return o
}

func (o ReceiverSpecPatchPtrOutput) ToReceiverSpecPatchPtrOutputWithContext(ctx context.Context) ReceiverSpecPatchPtrOutput {
	return o
}

func (o ReceiverSpecPatchPtrOutput) Elem() ReceiverSpecPatchOutput {
	return o.ApplyT(func(v *ReceiverSpecPatch) ReceiverSpecPatch {
		if v != nil {
			return *v
		}
		var ret ReceiverSpecPatch
		return ret
	}).(ReceiverSpecPatchOutput)
}

// A list of events to handle,
// e.g. 'push' for GitHub or 'Push Hook' for GitLab.
func (o ReceiverSpecPatchPtrOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReceiverSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.Events
	}).(pulumi.StringArrayOutput)
}

// A list of resources to be notified about changes.
func (o ReceiverSpecPatchPtrOutput) Resources() ReceiverSpecResourcesPatchArrayOutput {
	return o.ApplyT(func(v *ReceiverSpecPatch) []ReceiverSpecResourcesPatch {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(ReceiverSpecResourcesPatchArrayOutput)
}

func (o ReceiverSpecPatchPtrOutput) SecretRef() ReceiverSpecSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *ReceiverSpecPatch) *ReceiverSpecSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ReceiverSpecSecretRefPatchPtrOutput)
}

// This flag tells the controller to suspend subsequent events handling.
// Defaults to false.
func (o ReceiverSpecPatchPtrOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReceiverSpecPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Suspend
	}).(pulumi.BoolPtrOutput)
}

// Type of webhook sender, used to determine
// the validation procedure and payload deserialization.
func (o ReceiverSpecPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReceiverSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// CrossNamespaceObjectReference contains enough information to let you locate the
// typed referenced object at cluster level
type ReceiverSpecResources struct {
	// API version of the referent
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind of the referent
	Kind *string `pulumi:"kind"`
	// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
	// Name of the referent
	Name *string `pulumi:"name"`
	// Namespace of the referent
	Namespace *string `pulumi:"namespace"`
}

// ReceiverSpecResourcesInput is an input type that accepts ReceiverSpecResourcesArgs and ReceiverSpecResourcesOutput values.
// You can construct a concrete instance of `ReceiverSpecResourcesInput` via:
//
//	ReceiverSpecResourcesArgs{...}
type ReceiverSpecResourcesInput interface {
	pulumi.Input

	ToReceiverSpecResourcesOutput() ReceiverSpecResourcesOutput
	ToReceiverSpecResourcesOutputWithContext(context.Context) ReceiverSpecResourcesOutput
}

// CrossNamespaceObjectReference contains enough information to let you locate the
// typed referenced object at cluster level
type ReceiverSpecResourcesArgs struct {
	// API version of the referent
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind of the referent
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
	// Name of the referent
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ReceiverSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverSpecResources)(nil)).Elem()
}

func (i ReceiverSpecResourcesArgs) ToReceiverSpecResourcesOutput() ReceiverSpecResourcesOutput {
	return i.ToReceiverSpecResourcesOutputWithContext(context.Background())
}

func (i ReceiverSpecResourcesArgs) ToReceiverSpecResourcesOutputWithContext(ctx context.Context) ReceiverSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecResourcesOutput)
}

// ReceiverSpecResourcesArrayInput is an input type that accepts ReceiverSpecResourcesArray and ReceiverSpecResourcesArrayOutput values.
// You can construct a concrete instance of `ReceiverSpecResourcesArrayInput` via:
//
//	ReceiverSpecResourcesArray{ ReceiverSpecResourcesArgs{...} }
type ReceiverSpecResourcesArrayInput interface {
	pulumi.Input

	ToReceiverSpecResourcesArrayOutput() ReceiverSpecResourcesArrayOutput
	ToReceiverSpecResourcesArrayOutputWithContext(context.Context) ReceiverSpecResourcesArrayOutput
}

type ReceiverSpecResourcesArray []ReceiverSpecResourcesInput

func (ReceiverSpecResourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiverSpecResources)(nil)).Elem()
}

func (i ReceiverSpecResourcesArray) ToReceiverSpecResourcesArrayOutput() ReceiverSpecResourcesArrayOutput {
	return i.ToReceiverSpecResourcesArrayOutputWithContext(context.Background())
}

func (i ReceiverSpecResourcesArray) ToReceiverSpecResourcesArrayOutputWithContext(ctx context.Context) ReceiverSpecResourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecResourcesArrayOutput)
}

// CrossNamespaceObjectReference contains enough information to let you locate the
// typed referenced object at cluster level
type ReceiverSpecResourcesOutput struct{ *pulumi.OutputState }

func (ReceiverSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverSpecResources)(nil)).Elem()
}

func (o ReceiverSpecResourcesOutput) ToReceiverSpecResourcesOutput() ReceiverSpecResourcesOutput {
	return o
}

func (o ReceiverSpecResourcesOutput) ToReceiverSpecResourcesOutputWithContext(ctx context.Context) ReceiverSpecResourcesOutput {
	return o
}

// API version of the referent
func (o ReceiverSpecResourcesOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverSpecResources) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind of the referent
func (o ReceiverSpecResourcesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverSpecResources) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ReceiverSpecResourcesOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ReceiverSpecResources) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

// Name of the referent
func (o ReceiverSpecResourcesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverSpecResources) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent
func (o ReceiverSpecResourcesOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverSpecResources) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ReceiverSpecResourcesArrayOutput struct{ *pulumi.OutputState }

func (ReceiverSpecResourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiverSpecResources)(nil)).Elem()
}

func (o ReceiverSpecResourcesArrayOutput) ToReceiverSpecResourcesArrayOutput() ReceiverSpecResourcesArrayOutput {
	return o
}

func (o ReceiverSpecResourcesArrayOutput) ToReceiverSpecResourcesArrayOutputWithContext(ctx context.Context) ReceiverSpecResourcesArrayOutput {
	return o
}

func (o ReceiverSpecResourcesArrayOutput) Index(i pulumi.IntInput) ReceiverSpecResourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReceiverSpecResources {
		return vs[0].([]ReceiverSpecResources)[vs[1].(int)]
	}).(ReceiverSpecResourcesOutput)
}

// CrossNamespaceObjectReference contains enough information to let you locate the
// typed referenced object at cluster level
type ReceiverSpecResourcesPatch struct {
	// API version of the referent
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind of the referent
	Kind *string `pulumi:"kind"`
	// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
	// Name of the referent
	Name *string `pulumi:"name"`
	// Namespace of the referent
	Namespace *string `pulumi:"namespace"`
}

// ReceiverSpecResourcesPatchInput is an input type that accepts ReceiverSpecResourcesPatchArgs and ReceiverSpecResourcesPatchOutput values.
// You can construct a concrete instance of `ReceiverSpecResourcesPatchInput` via:
//
//	ReceiverSpecResourcesPatchArgs{...}
type ReceiverSpecResourcesPatchInput interface {
	pulumi.Input

	ToReceiverSpecResourcesPatchOutput() ReceiverSpecResourcesPatchOutput
	ToReceiverSpecResourcesPatchOutputWithContext(context.Context) ReceiverSpecResourcesPatchOutput
}

// CrossNamespaceObjectReference contains enough information to let you locate the
// typed referenced object at cluster level
type ReceiverSpecResourcesPatchArgs struct {
	// API version of the referent
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind of the referent
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
	// Name of the referent
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ReceiverSpecResourcesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverSpecResourcesPatch)(nil)).Elem()
}

func (i ReceiverSpecResourcesPatchArgs) ToReceiverSpecResourcesPatchOutput() ReceiverSpecResourcesPatchOutput {
	return i.ToReceiverSpecResourcesPatchOutputWithContext(context.Background())
}

func (i ReceiverSpecResourcesPatchArgs) ToReceiverSpecResourcesPatchOutputWithContext(ctx context.Context) ReceiverSpecResourcesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecResourcesPatchOutput)
}

// ReceiverSpecResourcesPatchArrayInput is an input type that accepts ReceiverSpecResourcesPatchArray and ReceiverSpecResourcesPatchArrayOutput values.
// You can construct a concrete instance of `ReceiverSpecResourcesPatchArrayInput` via:
//
//	ReceiverSpecResourcesPatchArray{ ReceiverSpecResourcesPatchArgs{...} }
type ReceiverSpecResourcesPatchArrayInput interface {
	pulumi.Input

	ToReceiverSpecResourcesPatchArrayOutput() ReceiverSpecResourcesPatchArrayOutput
	ToReceiverSpecResourcesPatchArrayOutputWithContext(context.Context) ReceiverSpecResourcesPatchArrayOutput
}

type ReceiverSpecResourcesPatchArray []ReceiverSpecResourcesPatchInput

func (ReceiverSpecResourcesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiverSpecResourcesPatch)(nil)).Elem()
}

func (i ReceiverSpecResourcesPatchArray) ToReceiverSpecResourcesPatchArrayOutput() ReceiverSpecResourcesPatchArrayOutput {
	return i.ToReceiverSpecResourcesPatchArrayOutputWithContext(context.Background())
}

func (i ReceiverSpecResourcesPatchArray) ToReceiverSpecResourcesPatchArrayOutputWithContext(ctx context.Context) ReceiverSpecResourcesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecResourcesPatchArrayOutput)
}

// CrossNamespaceObjectReference contains enough information to let you locate the
// typed referenced object at cluster level
type ReceiverSpecResourcesPatchOutput struct{ *pulumi.OutputState }

func (ReceiverSpecResourcesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverSpecResourcesPatch)(nil)).Elem()
}

func (o ReceiverSpecResourcesPatchOutput) ToReceiverSpecResourcesPatchOutput() ReceiverSpecResourcesPatchOutput {
	return o
}

func (o ReceiverSpecResourcesPatchOutput) ToReceiverSpecResourcesPatchOutputWithContext(ctx context.Context) ReceiverSpecResourcesPatchOutput {
	return o
}

// API version of the referent
func (o ReceiverSpecResourcesPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverSpecResourcesPatch) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind of the referent
func (o ReceiverSpecResourcesPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverSpecResourcesPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ReceiverSpecResourcesPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ReceiverSpecResourcesPatch) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

// Name of the referent
func (o ReceiverSpecResourcesPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverSpecResourcesPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent
func (o ReceiverSpecResourcesPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverSpecResourcesPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ReceiverSpecResourcesPatchArrayOutput struct{ *pulumi.OutputState }

func (ReceiverSpecResourcesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiverSpecResourcesPatch)(nil)).Elem()
}

func (o ReceiverSpecResourcesPatchArrayOutput) ToReceiverSpecResourcesPatchArrayOutput() ReceiverSpecResourcesPatchArrayOutput {
	return o
}

func (o ReceiverSpecResourcesPatchArrayOutput) ToReceiverSpecResourcesPatchArrayOutputWithContext(ctx context.Context) ReceiverSpecResourcesPatchArrayOutput {
	return o
}

func (o ReceiverSpecResourcesPatchArrayOutput) Index(i pulumi.IntInput) ReceiverSpecResourcesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReceiverSpecResourcesPatch {
		return vs[0].([]ReceiverSpecResourcesPatch)[vs[1].(int)]
	}).(ReceiverSpecResourcesPatchOutput)
}

// Secret reference containing the token used
// to validate the payload authenticity
type ReceiverSpecSecretRef struct {
	// Name of the referent.
	Name *string `pulumi:"name"`
}

// ReceiverSpecSecretRefInput is an input type that accepts ReceiverSpecSecretRefArgs and ReceiverSpecSecretRefOutput values.
// You can construct a concrete instance of `ReceiverSpecSecretRefInput` via:
//
//	ReceiverSpecSecretRefArgs{...}
type ReceiverSpecSecretRefInput interface {
	pulumi.Input

	ToReceiverSpecSecretRefOutput() ReceiverSpecSecretRefOutput
	ToReceiverSpecSecretRefOutputWithContext(context.Context) ReceiverSpecSecretRefOutput
}

// Secret reference containing the token used
// to validate the payload authenticity
type ReceiverSpecSecretRefArgs struct {
	// Name of the referent.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ReceiverSpecSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverSpecSecretRef)(nil)).Elem()
}

func (i ReceiverSpecSecretRefArgs) ToReceiverSpecSecretRefOutput() ReceiverSpecSecretRefOutput {
	return i.ToReceiverSpecSecretRefOutputWithContext(context.Background())
}

func (i ReceiverSpecSecretRefArgs) ToReceiverSpecSecretRefOutputWithContext(ctx context.Context) ReceiverSpecSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecSecretRefOutput)
}

func (i ReceiverSpecSecretRefArgs) ToReceiverSpecSecretRefPtrOutput() ReceiverSpecSecretRefPtrOutput {
	return i.ToReceiverSpecSecretRefPtrOutputWithContext(context.Background())
}

func (i ReceiverSpecSecretRefArgs) ToReceiverSpecSecretRefPtrOutputWithContext(ctx context.Context) ReceiverSpecSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecSecretRefOutput).ToReceiverSpecSecretRefPtrOutputWithContext(ctx)
}

// ReceiverSpecSecretRefPtrInput is an input type that accepts ReceiverSpecSecretRefArgs, ReceiverSpecSecretRefPtr and ReceiverSpecSecretRefPtrOutput values.
// You can construct a concrete instance of `ReceiverSpecSecretRefPtrInput` via:
//
//	        ReceiverSpecSecretRefArgs{...}
//
//	or:
//
//	        nil
type ReceiverSpecSecretRefPtrInput interface {
	pulumi.Input

	ToReceiverSpecSecretRefPtrOutput() ReceiverSpecSecretRefPtrOutput
	ToReceiverSpecSecretRefPtrOutputWithContext(context.Context) ReceiverSpecSecretRefPtrOutput
}

type receiverSpecSecretRefPtrType ReceiverSpecSecretRefArgs

func ReceiverSpecSecretRefPtr(v *ReceiverSpecSecretRefArgs) ReceiverSpecSecretRefPtrInput {
	return (*receiverSpecSecretRefPtrType)(v)
}

func (*receiverSpecSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiverSpecSecretRef)(nil)).Elem()
}

func (i *receiverSpecSecretRefPtrType) ToReceiverSpecSecretRefPtrOutput() ReceiverSpecSecretRefPtrOutput {
	return i.ToReceiverSpecSecretRefPtrOutputWithContext(context.Background())
}

func (i *receiverSpecSecretRefPtrType) ToReceiverSpecSecretRefPtrOutputWithContext(ctx context.Context) ReceiverSpecSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecSecretRefPtrOutput)
}

// Secret reference containing the token used
// to validate the payload authenticity
type ReceiverSpecSecretRefOutput struct{ *pulumi.OutputState }

func (ReceiverSpecSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverSpecSecretRef)(nil)).Elem()
}

func (o ReceiverSpecSecretRefOutput) ToReceiverSpecSecretRefOutput() ReceiverSpecSecretRefOutput {
	return o
}

func (o ReceiverSpecSecretRefOutput) ToReceiverSpecSecretRefOutputWithContext(ctx context.Context) ReceiverSpecSecretRefOutput {
	return o
}

func (o ReceiverSpecSecretRefOutput) ToReceiverSpecSecretRefPtrOutput() ReceiverSpecSecretRefPtrOutput {
	return o.ToReceiverSpecSecretRefPtrOutputWithContext(context.Background())
}

func (o ReceiverSpecSecretRefOutput) ToReceiverSpecSecretRefPtrOutputWithContext(ctx context.Context) ReceiverSpecSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReceiverSpecSecretRef) *ReceiverSpecSecretRef {
		return &v
	}).(ReceiverSpecSecretRefPtrOutput)
}

// Name of the referent.
func (o ReceiverSpecSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverSpecSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ReceiverSpecSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ReceiverSpecSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiverSpecSecretRef)(nil)).Elem()
}

func (o ReceiverSpecSecretRefPtrOutput) ToReceiverSpecSecretRefPtrOutput() ReceiverSpecSecretRefPtrOutput {
	return o
}

func (o ReceiverSpecSecretRefPtrOutput) ToReceiverSpecSecretRefPtrOutputWithContext(ctx context.Context) ReceiverSpecSecretRefPtrOutput {
	return o
}

func (o ReceiverSpecSecretRefPtrOutput) Elem() ReceiverSpecSecretRefOutput {
	return o.ApplyT(func(v *ReceiverSpecSecretRef) ReceiverSpecSecretRef {
		if v != nil {
			return *v
		}
		var ret ReceiverSpecSecretRef
		return ret
	}).(ReceiverSpecSecretRefOutput)
}

// Name of the referent.
func (o ReceiverSpecSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReceiverSpecSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Secret reference containing the token used
// to validate the payload authenticity
type ReceiverSpecSecretRefPatch struct {
	// Name of the referent.
	Name *string `pulumi:"name"`
}

// ReceiverSpecSecretRefPatchInput is an input type that accepts ReceiverSpecSecretRefPatchArgs and ReceiverSpecSecretRefPatchOutput values.
// You can construct a concrete instance of `ReceiverSpecSecretRefPatchInput` via:
//
//	ReceiverSpecSecretRefPatchArgs{...}
type ReceiverSpecSecretRefPatchInput interface {
	pulumi.Input

	ToReceiverSpecSecretRefPatchOutput() ReceiverSpecSecretRefPatchOutput
	ToReceiverSpecSecretRefPatchOutputWithContext(context.Context) ReceiverSpecSecretRefPatchOutput
}

// Secret reference containing the token used
// to validate the payload authenticity
type ReceiverSpecSecretRefPatchArgs struct {
	// Name of the referent.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ReceiverSpecSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverSpecSecretRefPatch)(nil)).Elem()
}

func (i ReceiverSpecSecretRefPatchArgs) ToReceiverSpecSecretRefPatchOutput() ReceiverSpecSecretRefPatchOutput {
	return i.ToReceiverSpecSecretRefPatchOutputWithContext(context.Background())
}

func (i ReceiverSpecSecretRefPatchArgs) ToReceiverSpecSecretRefPatchOutputWithContext(ctx context.Context) ReceiverSpecSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecSecretRefPatchOutput)
}

func (i ReceiverSpecSecretRefPatchArgs) ToReceiverSpecSecretRefPatchPtrOutput() ReceiverSpecSecretRefPatchPtrOutput {
	return i.ToReceiverSpecSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i ReceiverSpecSecretRefPatchArgs) ToReceiverSpecSecretRefPatchPtrOutputWithContext(ctx context.Context) ReceiverSpecSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecSecretRefPatchOutput).ToReceiverSpecSecretRefPatchPtrOutputWithContext(ctx)
}

// ReceiverSpecSecretRefPatchPtrInput is an input type that accepts ReceiverSpecSecretRefPatchArgs, ReceiverSpecSecretRefPatchPtr and ReceiverSpecSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `ReceiverSpecSecretRefPatchPtrInput` via:
//
//	        ReceiverSpecSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type ReceiverSpecSecretRefPatchPtrInput interface {
	pulumi.Input

	ToReceiverSpecSecretRefPatchPtrOutput() ReceiverSpecSecretRefPatchPtrOutput
	ToReceiverSpecSecretRefPatchPtrOutputWithContext(context.Context) ReceiverSpecSecretRefPatchPtrOutput
}

type receiverSpecSecretRefPatchPtrType ReceiverSpecSecretRefPatchArgs

func ReceiverSpecSecretRefPatchPtr(v *ReceiverSpecSecretRefPatchArgs) ReceiverSpecSecretRefPatchPtrInput {
	return (*receiverSpecSecretRefPatchPtrType)(v)
}

func (*receiverSpecSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiverSpecSecretRefPatch)(nil)).Elem()
}

func (i *receiverSpecSecretRefPatchPtrType) ToReceiverSpecSecretRefPatchPtrOutput() ReceiverSpecSecretRefPatchPtrOutput {
	return i.ToReceiverSpecSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *receiverSpecSecretRefPatchPtrType) ToReceiverSpecSecretRefPatchPtrOutputWithContext(ctx context.Context) ReceiverSpecSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverSpecSecretRefPatchPtrOutput)
}

// Secret reference containing the token used
// to validate the payload authenticity
type ReceiverSpecSecretRefPatchOutput struct{ *pulumi.OutputState }

func (ReceiverSpecSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverSpecSecretRefPatch)(nil)).Elem()
}

func (o ReceiverSpecSecretRefPatchOutput) ToReceiverSpecSecretRefPatchOutput() ReceiverSpecSecretRefPatchOutput {
	return o
}

func (o ReceiverSpecSecretRefPatchOutput) ToReceiverSpecSecretRefPatchOutputWithContext(ctx context.Context) ReceiverSpecSecretRefPatchOutput {
	return o
}

func (o ReceiverSpecSecretRefPatchOutput) ToReceiverSpecSecretRefPatchPtrOutput() ReceiverSpecSecretRefPatchPtrOutput {
	return o.ToReceiverSpecSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o ReceiverSpecSecretRefPatchOutput) ToReceiverSpecSecretRefPatchPtrOutputWithContext(ctx context.Context) ReceiverSpecSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReceiverSpecSecretRefPatch) *ReceiverSpecSecretRefPatch {
		return &v
	}).(ReceiverSpecSecretRefPatchPtrOutput)
}

// Name of the referent.
func (o ReceiverSpecSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverSpecSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ReceiverSpecSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (ReceiverSpecSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiverSpecSecretRefPatch)(nil)).Elem()
}

func (o ReceiverSpecSecretRefPatchPtrOutput) ToReceiverSpecSecretRefPatchPtrOutput() ReceiverSpecSecretRefPatchPtrOutput {
	return o
}

func (o ReceiverSpecSecretRefPatchPtrOutput) ToReceiverSpecSecretRefPatchPtrOutputWithContext(ctx context.Context) ReceiverSpecSecretRefPatchPtrOutput {
	return o
}

func (o ReceiverSpecSecretRefPatchPtrOutput) Elem() ReceiverSpecSecretRefPatchOutput {
	return o.ApplyT(func(v *ReceiverSpecSecretRefPatch) ReceiverSpecSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret ReceiverSpecSecretRefPatch
		return ret
	}).(ReceiverSpecSecretRefPatchOutput)
}

// Name of the referent.
func (o ReceiverSpecSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReceiverSpecSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ReceiverStatus defines the observed state of Receiver
type ReceiverStatus struct {
	Conditions []ReceiverStatusConditions `pulumi:"conditions"`
	// ObservedGeneration is the last observed generation.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Generated webhook URL in the format
	// of '/hook/sha256sum(token+name+namespace)'.
	Url *string `pulumi:"url"`
}

// ReceiverStatusInput is an input type that accepts ReceiverStatusArgs and ReceiverStatusOutput values.
// You can construct a concrete instance of `ReceiverStatusInput` via:
//
//	ReceiverStatusArgs{...}
type ReceiverStatusInput interface {
	pulumi.Input

	ToReceiverStatusOutput() ReceiverStatusOutput
	ToReceiverStatusOutputWithContext(context.Context) ReceiverStatusOutput
}

// ReceiverStatus defines the observed state of Receiver
type ReceiverStatusArgs struct {
	Conditions ReceiverStatusConditionsArrayInput `pulumi:"conditions"`
	// ObservedGeneration is the last observed generation.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Generated webhook URL in the format
	// of '/hook/sha256sum(token+name+namespace)'.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ReceiverStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverStatus)(nil)).Elem()
}

func (i ReceiverStatusArgs) ToReceiverStatusOutput() ReceiverStatusOutput {
	return i.ToReceiverStatusOutputWithContext(context.Background())
}

func (i ReceiverStatusArgs) ToReceiverStatusOutputWithContext(ctx context.Context) ReceiverStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverStatusOutput)
}

func (i ReceiverStatusArgs) ToReceiverStatusPtrOutput() ReceiverStatusPtrOutput {
	return i.ToReceiverStatusPtrOutputWithContext(context.Background())
}

func (i ReceiverStatusArgs) ToReceiverStatusPtrOutputWithContext(ctx context.Context) ReceiverStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverStatusOutput).ToReceiverStatusPtrOutputWithContext(ctx)
}

// ReceiverStatusPtrInput is an input type that accepts ReceiverStatusArgs, ReceiverStatusPtr and ReceiverStatusPtrOutput values.
// You can construct a concrete instance of `ReceiverStatusPtrInput` via:
//
//	        ReceiverStatusArgs{...}
//
//	or:
//
//	        nil
type ReceiverStatusPtrInput interface {
	pulumi.Input

	ToReceiverStatusPtrOutput() ReceiverStatusPtrOutput
	ToReceiverStatusPtrOutputWithContext(context.Context) ReceiverStatusPtrOutput
}

type receiverStatusPtrType ReceiverStatusArgs

func ReceiverStatusPtr(v *ReceiverStatusArgs) ReceiverStatusPtrInput {
	return (*receiverStatusPtrType)(v)
}

func (*receiverStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiverStatus)(nil)).Elem()
}

func (i *receiverStatusPtrType) ToReceiverStatusPtrOutput() ReceiverStatusPtrOutput {
	return i.ToReceiverStatusPtrOutputWithContext(context.Background())
}

func (i *receiverStatusPtrType) ToReceiverStatusPtrOutputWithContext(ctx context.Context) ReceiverStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverStatusPtrOutput)
}

// ReceiverStatus defines the observed state of Receiver
type ReceiverStatusOutput struct{ *pulumi.OutputState }

func (ReceiverStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverStatus)(nil)).Elem()
}

func (o ReceiverStatusOutput) ToReceiverStatusOutput() ReceiverStatusOutput {
	return o
}

func (o ReceiverStatusOutput) ToReceiverStatusOutputWithContext(ctx context.Context) ReceiverStatusOutput {
	return o
}

func (o ReceiverStatusOutput) ToReceiverStatusPtrOutput() ReceiverStatusPtrOutput {
	return o.ToReceiverStatusPtrOutputWithContext(context.Background())
}

func (o ReceiverStatusOutput) ToReceiverStatusPtrOutputWithContext(ctx context.Context) ReceiverStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReceiverStatus) *ReceiverStatus {
		return &v
	}).(ReceiverStatusPtrOutput)
}

func (o ReceiverStatusOutput) Conditions() ReceiverStatusConditionsArrayOutput {
	return o.ApplyT(func(v ReceiverStatus) []ReceiverStatusConditions { return v.Conditions }).(ReceiverStatusConditionsArrayOutput)
}

// ObservedGeneration is the last observed generation.
func (o ReceiverStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReceiverStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Generated webhook URL in the format
// of '/hook/sha256sum(token+name+namespace)'.
func (o ReceiverStatusOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverStatus) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ReceiverStatusPtrOutput struct{ *pulumi.OutputState }

func (ReceiverStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiverStatus)(nil)).Elem()
}

func (o ReceiverStatusPtrOutput) ToReceiverStatusPtrOutput() ReceiverStatusPtrOutput {
	return o
}

func (o ReceiverStatusPtrOutput) ToReceiverStatusPtrOutputWithContext(ctx context.Context) ReceiverStatusPtrOutput {
	return o
}

func (o ReceiverStatusPtrOutput) Elem() ReceiverStatusOutput {
	return o.ApplyT(func(v *ReceiverStatus) ReceiverStatus {
		if v != nil {
			return *v
		}
		var ret ReceiverStatus
		return ret
	}).(ReceiverStatusOutput)
}

func (o ReceiverStatusPtrOutput) Conditions() ReceiverStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ReceiverStatus) []ReceiverStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ReceiverStatusConditionsArrayOutput)
}

// ObservedGeneration is the last observed generation.
func (o ReceiverStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReceiverStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Generated webhook URL in the format
// of '/hook/sha256sum(token+name+namespace)'.
func (o ReceiverStatusPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReceiverStatus) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ReceiverStatusConditions struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message *string `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason *string `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status *string `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type *string `pulumi:"type"`
}

// ReceiverStatusConditionsInput is an input type that accepts ReceiverStatusConditionsArgs and ReceiverStatusConditionsOutput values.
// You can construct a concrete instance of `ReceiverStatusConditionsInput` via:
//
//	ReceiverStatusConditionsArgs{...}
type ReceiverStatusConditionsInput interface {
	pulumi.Input

	ToReceiverStatusConditionsOutput() ReceiverStatusConditionsOutput
	ToReceiverStatusConditionsOutputWithContext(context.Context) ReceiverStatusConditionsOutput
}

// Condition contains details for one aspect of the current state of this API Resource.
type ReceiverStatusConditionsArgs struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReceiverStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverStatusConditions)(nil)).Elem()
}

func (i ReceiverStatusConditionsArgs) ToReceiverStatusConditionsOutput() ReceiverStatusConditionsOutput {
	return i.ToReceiverStatusConditionsOutputWithContext(context.Background())
}

func (i ReceiverStatusConditionsArgs) ToReceiverStatusConditionsOutputWithContext(ctx context.Context) ReceiverStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverStatusConditionsOutput)
}

// ReceiverStatusConditionsArrayInput is an input type that accepts ReceiverStatusConditionsArray and ReceiverStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ReceiverStatusConditionsArrayInput` via:
//
//	ReceiverStatusConditionsArray{ ReceiverStatusConditionsArgs{...} }
type ReceiverStatusConditionsArrayInput interface {
	pulumi.Input

	ToReceiverStatusConditionsArrayOutput() ReceiverStatusConditionsArrayOutput
	ToReceiverStatusConditionsArrayOutputWithContext(context.Context) ReceiverStatusConditionsArrayOutput
}

type ReceiverStatusConditionsArray []ReceiverStatusConditionsInput

func (ReceiverStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiverStatusConditions)(nil)).Elem()
}

func (i ReceiverStatusConditionsArray) ToReceiverStatusConditionsArrayOutput() ReceiverStatusConditionsArrayOutput {
	return i.ToReceiverStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ReceiverStatusConditionsArray) ToReceiverStatusConditionsArrayOutputWithContext(ctx context.Context) ReceiverStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverStatusConditionsArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ReceiverStatusConditionsOutput struct{ *pulumi.OutputState }

func (ReceiverStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverStatusConditions)(nil)).Elem()
}

func (o ReceiverStatusConditionsOutput) ToReceiverStatusConditionsOutput() ReceiverStatusConditionsOutput {
	return o
}

func (o ReceiverStatusConditionsOutput) ToReceiverStatusConditionsOutputWithContext(ctx context.Context) ReceiverStatusConditionsOutput {
	return o
}

// lastTransitionTime is the last time the condition transitioned from one status to another.
// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
func (o ReceiverStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human readable message indicating details about the transition.
// This may be an empty string.
func (o ReceiverStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// observedGeneration represents the .metadata.generation that the condition was set based upon.
// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the instance.
func (o ReceiverStatusConditionsOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReceiverStatusConditions) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// reason contains a programmatic identifier indicating the reason for the condition's last transition.
// Producers of specific condition types may define expected values and meanings for this field,
// and whether the values are considered a guaranteed API.
// The value should be a CamelCase string.
// This field may not be empty.
func (o ReceiverStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status of the condition, one of True, False, Unknown.
func (o ReceiverStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of condition in CamelCase or in foo.example.com/CamelCase.
func (o ReceiverStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReceiverStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ReceiverStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiverStatusConditions)(nil)).Elem()
}

func (o ReceiverStatusConditionsArrayOutput) ToReceiverStatusConditionsArrayOutput() ReceiverStatusConditionsArrayOutput {
	return o
}

func (o ReceiverStatusConditionsArrayOutput) ToReceiverStatusConditionsArrayOutputWithContext(ctx context.Context) ReceiverStatusConditionsArrayOutput {
	return o
}

func (o ReceiverStatusConditionsArrayOutput) Index(i pulumi.IntInput) ReceiverStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReceiverStatusConditions {
		return vs[0].([]ReceiverStatusConditions)[vs[1].(int)]
	}).(ReceiverStatusConditionsOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ReceiverStatusConditionsPatch struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message *string `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason *string `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status *string `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type *string `pulumi:"type"`
}

// ReceiverStatusConditionsPatchInput is an input type that accepts ReceiverStatusConditionsPatchArgs and ReceiverStatusConditionsPatchOutput values.
// You can construct a concrete instance of `ReceiverStatusConditionsPatchInput` via:
//
//	ReceiverStatusConditionsPatchArgs{...}
type ReceiverStatusConditionsPatchInput interface {
	pulumi.Input

	ToReceiverStatusConditionsPatchOutput() ReceiverStatusConditionsPatchOutput
	ToReceiverStatusConditionsPatchOutputWithContext(context.Context) ReceiverStatusConditionsPatchOutput
}

// Condition contains details for one aspect of the current state of this API Resource.
type ReceiverStatusConditionsPatchArgs struct {
	// lastTransitionTime is the last time the condition transitioned from one status to another.
	// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human readable message indicating details about the transition.
	// This may be an empty string.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon.
	// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
	// with respect to the current state of the instance.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// reason contains a programmatic identifier indicating the reason for the condition's last transition.
	// Producers of specific condition types may define expected values and meanings for this field,
	// and whether the values are considered a guaranteed API.
	// The value should be a CamelCase string.
	// This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status of the condition, one of True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of condition in CamelCase or in foo.example.com/CamelCase.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReceiverStatusConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverStatusConditionsPatch)(nil)).Elem()
}

func (i ReceiverStatusConditionsPatchArgs) ToReceiverStatusConditionsPatchOutput() ReceiverStatusConditionsPatchOutput {
	return i.ToReceiverStatusConditionsPatchOutputWithContext(context.Background())
}

func (i ReceiverStatusConditionsPatchArgs) ToReceiverStatusConditionsPatchOutputWithContext(ctx context.Context) ReceiverStatusConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverStatusConditionsPatchOutput)
}

// ReceiverStatusConditionsPatchArrayInput is an input type that accepts ReceiverStatusConditionsPatchArray and ReceiverStatusConditionsPatchArrayOutput values.
// You can construct a concrete instance of `ReceiverStatusConditionsPatchArrayInput` via:
//
//	ReceiverStatusConditionsPatchArray{ ReceiverStatusConditionsPatchArgs{...} }
type ReceiverStatusConditionsPatchArrayInput interface {
	pulumi.Input

	ToReceiverStatusConditionsPatchArrayOutput() ReceiverStatusConditionsPatchArrayOutput
	ToReceiverStatusConditionsPatchArrayOutputWithContext(context.Context) ReceiverStatusConditionsPatchArrayOutput
}

type ReceiverStatusConditionsPatchArray []ReceiverStatusConditionsPatchInput

func (ReceiverStatusConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiverStatusConditionsPatch)(nil)).Elem()
}

func (i ReceiverStatusConditionsPatchArray) ToReceiverStatusConditionsPatchArrayOutput() ReceiverStatusConditionsPatchArrayOutput {
	return i.ToReceiverStatusConditionsPatchArrayOutputWithContext(context.Background())
}

func (i ReceiverStatusConditionsPatchArray) ToReceiverStatusConditionsPatchArrayOutputWithContext(ctx context.Context) ReceiverStatusConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverStatusConditionsPatchArrayOutput)
}

// Condition contains details for one aspect of the current state of this API Resource.
type ReceiverStatusConditionsPatchOutput struct{ *pulumi.OutputState }

func (ReceiverStatusConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverStatusConditionsPatch)(nil)).Elem()
}

func (o ReceiverStatusConditionsPatchOutput) ToReceiverStatusConditionsPatchOutput() ReceiverStatusConditionsPatchOutput {
	return o
}

func (o ReceiverStatusConditionsPatchOutput) ToReceiverStatusConditionsPatchOutputWithContext(ctx context.Context) ReceiverStatusConditionsPatchOutput {
	return o
}

// lastTransitionTime is the last time the condition transitioned from one status to another.
// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
func (o ReceiverStatusConditionsPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverStatusConditionsPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human readable message indicating details about the transition.
// This may be an empty string.
func (o ReceiverStatusConditionsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverStatusConditionsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// observedGeneration represents the .metadata.generation that the condition was set based upon.
// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
// with respect to the current state of the instance.
func (o ReceiverStatusConditionsPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReceiverStatusConditionsPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// reason contains a programmatic identifier indicating the reason for the condition's last transition.
// Producers of specific condition types may define expected values and meanings for this field,
// and whether the values are considered a guaranteed API.
// The value should be a CamelCase string.
// This field may not be empty.
func (o ReceiverStatusConditionsPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverStatusConditionsPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status of the condition, one of True, False, Unknown.
func (o ReceiverStatusConditionsPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverStatusConditionsPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of condition in CamelCase or in foo.example.com/CamelCase.
func (o ReceiverStatusConditionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverStatusConditionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReceiverStatusConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (ReceiverStatusConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiverStatusConditionsPatch)(nil)).Elem()
}

func (o ReceiverStatusConditionsPatchArrayOutput) ToReceiverStatusConditionsPatchArrayOutput() ReceiverStatusConditionsPatchArrayOutput {
	return o
}

func (o ReceiverStatusConditionsPatchArrayOutput) ToReceiverStatusConditionsPatchArrayOutputWithContext(ctx context.Context) ReceiverStatusConditionsPatchArrayOutput {
	return o
}

func (o ReceiverStatusConditionsPatchArrayOutput) Index(i pulumi.IntInput) ReceiverStatusConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReceiverStatusConditionsPatch {
		return vs[0].([]ReceiverStatusConditionsPatch)[vs[1].(int)]
	}).(ReceiverStatusConditionsPatchOutput)
}

// ReceiverStatus defines the observed state of Receiver
type ReceiverStatusPatch struct {
	Conditions []ReceiverStatusConditionsPatch `pulumi:"conditions"`
	// ObservedGeneration is the last observed generation.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Generated webhook URL in the format
	// of '/hook/sha256sum(token+name+namespace)'.
	Url *string `pulumi:"url"`
}

// ReceiverStatusPatchInput is an input type that accepts ReceiverStatusPatchArgs and ReceiverStatusPatchOutput values.
// You can construct a concrete instance of `ReceiverStatusPatchInput` via:
//
//	ReceiverStatusPatchArgs{...}
type ReceiverStatusPatchInput interface {
	pulumi.Input

	ToReceiverStatusPatchOutput() ReceiverStatusPatchOutput
	ToReceiverStatusPatchOutputWithContext(context.Context) ReceiverStatusPatchOutput
}

// ReceiverStatus defines the observed state of Receiver
type ReceiverStatusPatchArgs struct {
	Conditions ReceiverStatusConditionsPatchArrayInput `pulumi:"conditions"`
	// ObservedGeneration is the last observed generation.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Generated webhook URL in the format
	// of '/hook/sha256sum(token+name+namespace)'.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ReceiverStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverStatusPatch)(nil)).Elem()
}

func (i ReceiverStatusPatchArgs) ToReceiverStatusPatchOutput() ReceiverStatusPatchOutput {
	return i.ToReceiverStatusPatchOutputWithContext(context.Background())
}

func (i ReceiverStatusPatchArgs) ToReceiverStatusPatchOutputWithContext(ctx context.Context) ReceiverStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverStatusPatchOutput)
}

func (i ReceiverStatusPatchArgs) ToReceiverStatusPatchPtrOutput() ReceiverStatusPatchPtrOutput {
	return i.ToReceiverStatusPatchPtrOutputWithContext(context.Background())
}

func (i ReceiverStatusPatchArgs) ToReceiverStatusPatchPtrOutputWithContext(ctx context.Context) ReceiverStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverStatusPatchOutput).ToReceiverStatusPatchPtrOutputWithContext(ctx)
}

// ReceiverStatusPatchPtrInput is an input type that accepts ReceiverStatusPatchArgs, ReceiverStatusPatchPtr and ReceiverStatusPatchPtrOutput values.
// You can construct a concrete instance of `ReceiverStatusPatchPtrInput` via:
//
//	        ReceiverStatusPatchArgs{...}
//
//	or:
//
//	        nil
type ReceiverStatusPatchPtrInput interface {
	pulumi.Input

	ToReceiverStatusPatchPtrOutput() ReceiverStatusPatchPtrOutput
	ToReceiverStatusPatchPtrOutputWithContext(context.Context) ReceiverStatusPatchPtrOutput
}

type receiverStatusPatchPtrType ReceiverStatusPatchArgs

func ReceiverStatusPatchPtr(v *ReceiverStatusPatchArgs) ReceiverStatusPatchPtrInput {
	return (*receiverStatusPatchPtrType)(v)
}

func (*receiverStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiverStatusPatch)(nil)).Elem()
}

func (i *receiverStatusPatchPtrType) ToReceiverStatusPatchPtrOutput() ReceiverStatusPatchPtrOutput {
	return i.ToReceiverStatusPatchPtrOutputWithContext(context.Background())
}

func (i *receiverStatusPatchPtrType) ToReceiverStatusPatchPtrOutputWithContext(ctx context.Context) ReceiverStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiverStatusPatchPtrOutput)
}

// ReceiverStatus defines the observed state of Receiver
type ReceiverStatusPatchOutput struct{ *pulumi.OutputState }

func (ReceiverStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverStatusPatch)(nil)).Elem()
}

func (o ReceiverStatusPatchOutput) ToReceiverStatusPatchOutput() ReceiverStatusPatchOutput {
	return o
}

func (o ReceiverStatusPatchOutput) ToReceiverStatusPatchOutputWithContext(ctx context.Context) ReceiverStatusPatchOutput {
	return o
}

func (o ReceiverStatusPatchOutput) ToReceiverStatusPatchPtrOutput() ReceiverStatusPatchPtrOutput {
	return o.ToReceiverStatusPatchPtrOutputWithContext(context.Background())
}

func (o ReceiverStatusPatchOutput) ToReceiverStatusPatchPtrOutputWithContext(ctx context.Context) ReceiverStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReceiverStatusPatch) *ReceiverStatusPatch {
		return &v
	}).(ReceiverStatusPatchPtrOutput)
}

func (o ReceiverStatusPatchOutput) Conditions() ReceiverStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v ReceiverStatusPatch) []ReceiverStatusConditionsPatch { return v.Conditions }).(ReceiverStatusConditionsPatchArrayOutput)
}

// ObservedGeneration is the last observed generation.
func (o ReceiverStatusPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReceiverStatusPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Generated webhook URL in the format
// of '/hook/sha256sum(token+name+namespace)'.
func (o ReceiverStatusPatchOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiverStatusPatch) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ReceiverStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (ReceiverStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiverStatusPatch)(nil)).Elem()
}

func (o ReceiverStatusPatchPtrOutput) ToReceiverStatusPatchPtrOutput() ReceiverStatusPatchPtrOutput {
	return o
}

func (o ReceiverStatusPatchPtrOutput) ToReceiverStatusPatchPtrOutputWithContext(ctx context.Context) ReceiverStatusPatchPtrOutput {
	return o
}

func (o ReceiverStatusPatchPtrOutput) Elem() ReceiverStatusPatchOutput {
	return o.ApplyT(func(v *ReceiverStatusPatch) ReceiverStatusPatch {
		if v != nil {
			return *v
		}
		var ret ReceiverStatusPatch
		return ret
	}).(ReceiverStatusPatchOutput)
}

func (o ReceiverStatusPatchPtrOutput) Conditions() ReceiverStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v *ReceiverStatusPatch) []ReceiverStatusConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ReceiverStatusConditionsPatchArrayOutput)
}

// ObservedGeneration is the last observed generation.
func (o ReceiverStatusPatchPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReceiverStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Generated webhook URL in the format
// of '/hook/sha256sum(token+name+namespace)'.
func (o ReceiverStatusPatchPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReceiverStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertTypeInput)(nil)).Elem(), AlertTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertTypeArrayInput)(nil)).Elem(), AlertTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertListTypeInput)(nil)).Elem(), AlertListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertPatchTypeInput)(nil)).Elem(), AlertPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertSpecInput)(nil)).Elem(), AlertSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertSpecPtrInput)(nil)).Elem(), AlertSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertSpecEventSourcesInput)(nil)).Elem(), AlertSpecEventSourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertSpecEventSourcesArrayInput)(nil)).Elem(), AlertSpecEventSourcesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertSpecEventSourcesPatchInput)(nil)).Elem(), AlertSpecEventSourcesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertSpecEventSourcesPatchArrayInput)(nil)).Elem(), AlertSpecEventSourcesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertSpecPatchInput)(nil)).Elem(), AlertSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertSpecPatchPtrInput)(nil)).Elem(), AlertSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertSpecProviderRefInput)(nil)).Elem(), AlertSpecProviderRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertSpecProviderRefPtrInput)(nil)).Elem(), AlertSpecProviderRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertSpecProviderRefPatchInput)(nil)).Elem(), AlertSpecProviderRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertSpecProviderRefPatchPtrInput)(nil)).Elem(), AlertSpecProviderRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertStatusInput)(nil)).Elem(), AlertStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertStatusPtrInput)(nil)).Elem(), AlertStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertStatusConditionsInput)(nil)).Elem(), AlertStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertStatusConditionsArrayInput)(nil)).Elem(), AlertStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertStatusConditionsPatchInput)(nil)).Elem(), AlertStatusConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertStatusConditionsPatchArrayInput)(nil)).Elem(), AlertStatusConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertStatusPatchInput)(nil)).Elem(), AlertStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertStatusPatchPtrInput)(nil)).Elem(), AlertStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderTypeInput)(nil)).Elem(), ProviderTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderTypeArrayInput)(nil)).Elem(), ProviderTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderListTypeInput)(nil)).Elem(), ProviderListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderPatchTypeInput)(nil)).Elem(), ProviderPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSpecInput)(nil)).Elem(), ProviderSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSpecPtrInput)(nil)).Elem(), ProviderSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSpecCertSecretRefInput)(nil)).Elem(), ProviderSpecCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSpecCertSecretRefPtrInput)(nil)).Elem(), ProviderSpecCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSpecCertSecretRefPatchInput)(nil)).Elem(), ProviderSpecCertSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSpecCertSecretRefPatchPtrInput)(nil)).Elem(), ProviderSpecCertSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSpecPatchInput)(nil)).Elem(), ProviderSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSpecPatchPtrInput)(nil)).Elem(), ProviderSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSpecSecretRefInput)(nil)).Elem(), ProviderSpecSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSpecSecretRefPtrInput)(nil)).Elem(), ProviderSpecSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSpecSecretRefPatchInput)(nil)).Elem(), ProviderSpecSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSpecSecretRefPatchPtrInput)(nil)).Elem(), ProviderSpecSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderStatusInput)(nil)).Elem(), ProviderStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderStatusPtrInput)(nil)).Elem(), ProviderStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderStatusConditionsInput)(nil)).Elem(), ProviderStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderStatusConditionsArrayInput)(nil)).Elem(), ProviderStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderStatusConditionsPatchInput)(nil)).Elem(), ProviderStatusConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderStatusConditionsPatchArrayInput)(nil)).Elem(), ProviderStatusConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderStatusPatchInput)(nil)).Elem(), ProviderStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderStatusPatchPtrInput)(nil)).Elem(), ProviderStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverTypeInput)(nil)).Elem(), ReceiverTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverTypeArrayInput)(nil)).Elem(), ReceiverTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverListTypeInput)(nil)).Elem(), ReceiverListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverPatchTypeInput)(nil)).Elem(), ReceiverPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverSpecInput)(nil)).Elem(), ReceiverSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverSpecPtrInput)(nil)).Elem(), ReceiverSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverSpecPatchInput)(nil)).Elem(), ReceiverSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverSpecPatchPtrInput)(nil)).Elem(), ReceiverSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverSpecResourcesInput)(nil)).Elem(), ReceiverSpecResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverSpecResourcesArrayInput)(nil)).Elem(), ReceiverSpecResourcesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverSpecResourcesPatchInput)(nil)).Elem(), ReceiverSpecResourcesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverSpecResourcesPatchArrayInput)(nil)).Elem(), ReceiverSpecResourcesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverSpecSecretRefInput)(nil)).Elem(), ReceiverSpecSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverSpecSecretRefPtrInput)(nil)).Elem(), ReceiverSpecSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverSpecSecretRefPatchInput)(nil)).Elem(), ReceiverSpecSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverSpecSecretRefPatchPtrInput)(nil)).Elem(), ReceiverSpecSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverStatusInput)(nil)).Elem(), ReceiverStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverStatusPtrInput)(nil)).Elem(), ReceiverStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverStatusConditionsInput)(nil)).Elem(), ReceiverStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverStatusConditionsArrayInput)(nil)).Elem(), ReceiverStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverStatusConditionsPatchInput)(nil)).Elem(), ReceiverStatusConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverStatusConditionsPatchArrayInput)(nil)).Elem(), ReceiverStatusConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverStatusPatchInput)(nil)).Elem(), ReceiverStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiverStatusPatchPtrInput)(nil)).Elem(), ReceiverStatusPatchArgs{})
	pulumi.RegisterOutputType(AlertTypeOutput{})
	pulumi.RegisterOutputType(AlertTypeArrayOutput{})
	pulumi.RegisterOutputType(AlertListTypeOutput{})
	pulumi.RegisterOutputType(AlertPatchTypeOutput{})
	pulumi.RegisterOutputType(AlertSpecOutput{})
	pulumi.RegisterOutputType(AlertSpecPtrOutput{})
	pulumi.RegisterOutputType(AlertSpecEventSourcesOutput{})
	pulumi.RegisterOutputType(AlertSpecEventSourcesArrayOutput{})
	pulumi.RegisterOutputType(AlertSpecEventSourcesPatchOutput{})
	pulumi.RegisterOutputType(AlertSpecEventSourcesPatchArrayOutput{})
	pulumi.RegisterOutputType(AlertSpecPatchOutput{})
	pulumi.RegisterOutputType(AlertSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(AlertSpecProviderRefOutput{})
	pulumi.RegisterOutputType(AlertSpecProviderRefPtrOutput{})
	pulumi.RegisterOutputType(AlertSpecProviderRefPatchOutput{})
	pulumi.RegisterOutputType(AlertSpecProviderRefPatchPtrOutput{})
	pulumi.RegisterOutputType(AlertStatusOutput{})
	pulumi.RegisterOutputType(AlertStatusPtrOutput{})
	pulumi.RegisterOutputType(AlertStatusConditionsOutput{})
	pulumi.RegisterOutputType(AlertStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(AlertStatusConditionsPatchOutput{})
	pulumi.RegisterOutputType(AlertStatusConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(AlertStatusPatchOutput{})
	pulumi.RegisterOutputType(AlertStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(ProviderTypeOutput{})
	pulumi.RegisterOutputType(ProviderTypeArrayOutput{})
	pulumi.RegisterOutputType(ProviderListTypeOutput{})
	pulumi.RegisterOutputType(ProviderPatchTypeOutput{})
	pulumi.RegisterOutputType(ProviderSpecOutput{})
	pulumi.RegisterOutputType(ProviderSpecPtrOutput{})
	pulumi.RegisterOutputType(ProviderSpecCertSecretRefOutput{})
	pulumi.RegisterOutputType(ProviderSpecCertSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ProviderSpecCertSecretRefPatchOutput{})
	pulumi.RegisterOutputType(ProviderSpecCertSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(ProviderSpecPatchOutput{})
	pulumi.RegisterOutputType(ProviderSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(ProviderSpecSecretRefOutput{})
	pulumi.RegisterOutputType(ProviderSpecSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ProviderSpecSecretRefPatchOutput{})
	pulumi.RegisterOutputType(ProviderSpecSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(ProviderStatusOutput{})
	pulumi.RegisterOutputType(ProviderStatusPtrOutput{})
	pulumi.RegisterOutputType(ProviderStatusConditionsOutput{})
	pulumi.RegisterOutputType(ProviderStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ProviderStatusConditionsPatchOutput{})
	pulumi.RegisterOutputType(ProviderStatusConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(ProviderStatusPatchOutput{})
	pulumi.RegisterOutputType(ProviderStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(ReceiverTypeOutput{})
	pulumi.RegisterOutputType(ReceiverTypeArrayOutput{})
	pulumi.RegisterOutputType(ReceiverListTypeOutput{})
	pulumi.RegisterOutputType(ReceiverPatchTypeOutput{})
	pulumi.RegisterOutputType(ReceiverSpecOutput{})
	pulumi.RegisterOutputType(ReceiverSpecPtrOutput{})
	pulumi.RegisterOutputType(ReceiverSpecPatchOutput{})
	pulumi.RegisterOutputType(ReceiverSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(ReceiverSpecResourcesOutput{})
	pulumi.RegisterOutputType(ReceiverSpecResourcesArrayOutput{})
	pulumi.RegisterOutputType(ReceiverSpecResourcesPatchOutput{})
	pulumi.RegisterOutputType(ReceiverSpecResourcesPatchArrayOutput{})
	pulumi.RegisterOutputType(ReceiverSpecSecretRefOutput{})
	pulumi.RegisterOutputType(ReceiverSpecSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ReceiverSpecSecretRefPatchOutput{})
	pulumi.RegisterOutputType(ReceiverSpecSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(ReceiverStatusOutput{})
	pulumi.RegisterOutputType(ReceiverStatusPtrOutput{})
	pulumi.RegisterOutputType(ReceiverStatusConditionsOutput{})
	pulumi.RegisterOutputType(ReceiverStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ReceiverStatusConditionsPatchOutput{})
	pulumi.RegisterOutputType(ReceiverStatusConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(ReceiverStatusPatchOutput{})
	pulumi.RegisterOutputType(ReceiverStatusPatchPtrOutput{})
}
