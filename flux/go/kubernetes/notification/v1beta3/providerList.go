// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta3

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ProviderList is a list of Provider
type ProviderList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of providers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ProviderTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewProviderList registers a new resource with the given unique name, arguments, and options.
func NewProviderList(ctx *pulumi.Context,
	name string, args *ProviderListArgs, opts ...pulumi.ResourceOption) (*ProviderList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("notification.toolkit.fluxcd.io/v1beta3")
	args.Kind = pulumi.StringPtr("ProviderList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ProviderList
	err := ctx.RegisterResource("kubernetes:notification.toolkit.fluxcd.io/v1beta3:ProviderList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProviderList gets an existing ProviderList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProviderList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProviderListState, opts ...pulumi.ResourceOption) (*ProviderList, error) {
	var resource ProviderList
	err := ctx.ReadResource("kubernetes:notification.toolkit.fluxcd.io/v1beta3:ProviderList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProviderList resources.
type providerListState struct {
}

type ProviderListState struct {
}

func (ProviderListState) ElementType() reflect.Type {
	return reflect.TypeOf((*providerListState)(nil)).Elem()
}

type providerListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of providers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []ProviderType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a ProviderList resource.
type ProviderListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of providers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ProviderTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (ProviderListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerListArgs)(nil)).Elem()
}

type ProviderListInput interface {
	pulumi.Input

	ToProviderListOutput() ProviderListOutput
	ToProviderListOutputWithContext(ctx context.Context) ProviderListOutput
}

func (*ProviderList) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderList)(nil)).Elem()
}

func (i *ProviderList) ToProviderListOutput() ProviderListOutput {
	return i.ToProviderListOutputWithContext(context.Background())
}

func (i *ProviderList) ToProviderListOutputWithContext(ctx context.Context) ProviderListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderListOutput)
}

// ProviderListArrayInput is an input type that accepts ProviderListArray and ProviderListArrayOutput values.
// You can construct a concrete instance of `ProviderListArrayInput` via:
//
//	ProviderListArray{ ProviderListArgs{...} }
type ProviderListArrayInput interface {
	pulumi.Input

	ToProviderListArrayOutput() ProviderListArrayOutput
	ToProviderListArrayOutputWithContext(context.Context) ProviderListArrayOutput
}

type ProviderListArray []ProviderListInput

func (ProviderListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProviderList)(nil)).Elem()
}

func (i ProviderListArray) ToProviderListArrayOutput() ProviderListArrayOutput {
	return i.ToProviderListArrayOutputWithContext(context.Background())
}

func (i ProviderListArray) ToProviderListArrayOutputWithContext(ctx context.Context) ProviderListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderListArrayOutput)
}

// ProviderListMapInput is an input type that accepts ProviderListMap and ProviderListMapOutput values.
// You can construct a concrete instance of `ProviderListMapInput` via:
//
//	ProviderListMap{ "key": ProviderListArgs{...} }
type ProviderListMapInput interface {
	pulumi.Input

	ToProviderListMapOutput() ProviderListMapOutput
	ToProviderListMapOutputWithContext(context.Context) ProviderListMapOutput
}

type ProviderListMap map[string]ProviderListInput

func (ProviderListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProviderList)(nil)).Elem()
}

func (i ProviderListMap) ToProviderListMapOutput() ProviderListMapOutput {
	return i.ToProviderListMapOutputWithContext(context.Background())
}

func (i ProviderListMap) ToProviderListMapOutputWithContext(ctx context.Context) ProviderListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderListMapOutput)
}

type ProviderListOutput struct{ *pulumi.OutputState }

func (ProviderListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderList)(nil)).Elem()
}

func (o ProviderListOutput) ToProviderListOutput() ProviderListOutput {
	return o
}

func (o ProviderListOutput) ToProviderListOutputWithContext(ctx context.Context) ProviderListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProviderListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of providers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o ProviderListOutput) Items() ProviderTypeArrayOutput {
	return o.ApplyT(func(v *ProviderList) ProviderTypeArrayOutput { return v.Items }).(ProviderTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProviderListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProviderListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *ProviderList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type ProviderListArrayOutput struct{ *pulumi.OutputState }

func (ProviderListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProviderList)(nil)).Elem()
}

func (o ProviderListArrayOutput) ToProviderListArrayOutput() ProviderListArrayOutput {
	return o
}

func (o ProviderListArrayOutput) ToProviderListArrayOutputWithContext(ctx context.Context) ProviderListArrayOutput {
	return o
}

func (o ProviderListArrayOutput) Index(i pulumi.IntInput) ProviderListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProviderList {
		return vs[0].([]*ProviderList)[vs[1].(int)]
	}).(ProviderListOutput)
}

type ProviderListMapOutput struct{ *pulumi.OutputState }

func (ProviderListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProviderList)(nil)).Elem()
}

func (o ProviderListMapOutput) ToProviderListMapOutput() ProviderListMapOutput {
	return o
}

func (o ProviderListMapOutput) ToProviderListMapOutputWithContext(ctx context.Context) ProviderListMapOutput {
	return o
}

func (o ProviderListMapOutput) MapIndex(k pulumi.StringInput) ProviderListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProviderList {
		return vs[0].(map[string]*ProviderList)[vs[1].(string)]
	}).(ProviderListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderListInput)(nil)).Elem(), &ProviderList{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderListArrayInput)(nil)).Elem(), ProviderListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderListMapInput)(nil)).Elem(), ProviderListMap{})
	pulumi.RegisterOutputType(ProviderListOutput{})
	pulumi.RegisterOutputType(ProviderListArrayOutput{})
	pulumi.RegisterOutputType(ProviderListMapOutput{})
}
