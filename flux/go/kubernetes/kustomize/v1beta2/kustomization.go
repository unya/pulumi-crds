// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Kustomization is the Schema for the kustomizations API.
type Kustomization struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput      `pulumi:"metadata"`
	Spec     KustomizationSpecOutput      `pulumi:"spec"`
	Status   KustomizationStatusPtrOutput `pulumi:"status"`
}

// NewKustomization registers a new resource with the given unique name, arguments, and options.
func NewKustomization(ctx *pulumi.Context,
	name string, args *KustomizationArgs, opts ...pulumi.ResourceOption) (*Kustomization, error) {
	if args == nil {
		args = &KustomizationArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("kustomize.toolkit.fluxcd.io/v1beta2")
	args.Kind = pulumi.StringPtr("Kustomization")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("kubernetes:kustomize.toolkit.fluxcd.io/v1:Kustomization"),
		},
		{
			Type: pulumi.String("kubernetes:kustomize.toolkit.fluxcd.io/v1beta1:Kustomization"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Kustomization
	err := ctx.RegisterResource("kubernetes:kustomize.toolkit.fluxcd.io/v1beta2:Kustomization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKustomization gets an existing Kustomization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKustomization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KustomizationState, opts ...pulumi.ResourceOption) (*Kustomization, error) {
	var resource Kustomization
	err := ctx.ReadResource("kubernetes:kustomize.toolkit.fluxcd.io/v1beta2:Kustomization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Kustomization resources.
type kustomizationState struct {
}

type KustomizationState struct {
}

func (KustomizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*kustomizationState)(nil)).Elem()
}

type kustomizationArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *KustomizationSpec `pulumi:"spec"`
}

// The set of arguments for constructing a Kustomization resource.
type KustomizationArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     KustomizationSpecPtrInput
}

func (KustomizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kustomizationArgs)(nil)).Elem()
}

type KustomizationInput interface {
	pulumi.Input

	ToKustomizationOutput() KustomizationOutput
	ToKustomizationOutputWithContext(ctx context.Context) KustomizationOutput
}

func (*Kustomization) ElementType() reflect.Type {
	return reflect.TypeOf((**Kustomization)(nil)).Elem()
}

func (i *Kustomization) ToKustomizationOutput() KustomizationOutput {
	return i.ToKustomizationOutputWithContext(context.Background())
}

func (i *Kustomization) ToKustomizationOutputWithContext(ctx context.Context) KustomizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustomizationOutput)
}

// KustomizationArrayInput is an input type that accepts KustomizationArray and KustomizationArrayOutput values.
// You can construct a concrete instance of `KustomizationArrayInput` via:
//
//	KustomizationArray{ KustomizationArgs{...} }
type KustomizationArrayInput interface {
	pulumi.Input

	ToKustomizationArrayOutput() KustomizationArrayOutput
	ToKustomizationArrayOutputWithContext(context.Context) KustomizationArrayOutput
}

type KustomizationArray []KustomizationInput

func (KustomizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Kustomization)(nil)).Elem()
}

func (i KustomizationArray) ToKustomizationArrayOutput() KustomizationArrayOutput {
	return i.ToKustomizationArrayOutputWithContext(context.Background())
}

func (i KustomizationArray) ToKustomizationArrayOutputWithContext(ctx context.Context) KustomizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustomizationArrayOutput)
}

// KustomizationMapInput is an input type that accepts KustomizationMap and KustomizationMapOutput values.
// You can construct a concrete instance of `KustomizationMapInput` via:
//
//	KustomizationMap{ "key": KustomizationArgs{...} }
type KustomizationMapInput interface {
	pulumi.Input

	ToKustomizationMapOutput() KustomizationMapOutput
	ToKustomizationMapOutputWithContext(context.Context) KustomizationMapOutput
}

type KustomizationMap map[string]KustomizationInput

func (KustomizationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Kustomization)(nil)).Elem()
}

func (i KustomizationMap) ToKustomizationMapOutput() KustomizationMapOutput {
	return i.ToKustomizationMapOutputWithContext(context.Background())
}

func (i KustomizationMap) ToKustomizationMapOutputWithContext(ctx context.Context) KustomizationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustomizationMapOutput)
}

type KustomizationOutput struct{ *pulumi.OutputState }

func (KustomizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Kustomization)(nil)).Elem()
}

func (o KustomizationOutput) ToKustomizationOutput() KustomizationOutput {
	return o
}

func (o KustomizationOutput) ToKustomizationOutputWithContext(ctx context.Context) KustomizationOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o KustomizationOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Kustomization) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KustomizationOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *Kustomization) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o KustomizationOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *Kustomization) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o KustomizationOutput) Spec() KustomizationSpecOutput {
	return o.ApplyT(func(v *Kustomization) KustomizationSpecOutput { return v.Spec }).(KustomizationSpecOutput)
}

func (o KustomizationOutput) Status() KustomizationStatusPtrOutput {
	return o.ApplyT(func(v *Kustomization) KustomizationStatusPtrOutput { return v.Status }).(KustomizationStatusPtrOutput)
}

type KustomizationArrayOutput struct{ *pulumi.OutputState }

func (KustomizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Kustomization)(nil)).Elem()
}

func (o KustomizationArrayOutput) ToKustomizationArrayOutput() KustomizationArrayOutput {
	return o
}

func (o KustomizationArrayOutput) ToKustomizationArrayOutputWithContext(ctx context.Context) KustomizationArrayOutput {
	return o
}

func (o KustomizationArrayOutput) Index(i pulumi.IntInput) KustomizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Kustomization {
		return vs[0].([]*Kustomization)[vs[1].(int)]
	}).(KustomizationOutput)
}

type KustomizationMapOutput struct{ *pulumi.OutputState }

func (KustomizationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Kustomization)(nil)).Elem()
}

func (o KustomizationMapOutput) ToKustomizationMapOutput() KustomizationMapOutput {
	return o
}

func (o KustomizationMapOutput) ToKustomizationMapOutputWithContext(ctx context.Context) KustomizationMapOutput {
	return o
}

func (o KustomizationMapOutput) MapIndex(k pulumi.StringInput) KustomizationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Kustomization {
		return vs[0].(map[string]*Kustomization)[vs[1].(string)]
	}).(KustomizationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KustomizationInput)(nil)).Elem(), &Kustomization{})
	pulumi.RegisterInputType(reflect.TypeOf((*KustomizationArrayInput)(nil)).Elem(), KustomizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KustomizationMapInput)(nil)).Elem(), KustomizationMap{})
	pulumi.RegisterOutputType(KustomizationOutput{})
	pulumi.RegisterOutputType(KustomizationArrayOutput{})
	pulumi.RegisterOutputType(KustomizationMapOutput{})
}
