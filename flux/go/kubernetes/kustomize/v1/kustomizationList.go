// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// KustomizationList is a list of Kustomization
type KustomizationList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of kustomizations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items KustomizationTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewKustomizationList registers a new resource with the given unique name, arguments, and options.
func NewKustomizationList(ctx *pulumi.Context,
	name string, args *KustomizationListArgs, opts ...pulumi.ResourceOption) (*KustomizationList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("kustomize.toolkit.fluxcd.io/v1")
	args.Kind = pulumi.StringPtr("KustomizationList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource KustomizationList
	err := ctx.RegisterResource("kubernetes:kustomize.toolkit.fluxcd.io/v1:KustomizationList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKustomizationList gets an existing KustomizationList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKustomizationList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KustomizationListState, opts ...pulumi.ResourceOption) (*KustomizationList, error) {
	var resource KustomizationList
	err := ctx.ReadResource("kubernetes:kustomize.toolkit.fluxcd.io/v1:KustomizationList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KustomizationList resources.
type kustomizationListState struct {
}

type KustomizationListState struct {
}

func (KustomizationListState) ElementType() reflect.Type {
	return reflect.TypeOf((*kustomizationListState)(nil)).Elem()
}

type kustomizationListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of kustomizations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []KustomizationType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a KustomizationList resource.
type KustomizationListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of kustomizations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items KustomizationTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (KustomizationListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kustomizationListArgs)(nil)).Elem()
}

type KustomizationListInput interface {
	pulumi.Input

	ToKustomizationListOutput() KustomizationListOutput
	ToKustomizationListOutputWithContext(ctx context.Context) KustomizationListOutput
}

func (*KustomizationList) ElementType() reflect.Type {
	return reflect.TypeOf((**KustomizationList)(nil)).Elem()
}

func (i *KustomizationList) ToKustomizationListOutput() KustomizationListOutput {
	return i.ToKustomizationListOutputWithContext(context.Background())
}

func (i *KustomizationList) ToKustomizationListOutputWithContext(ctx context.Context) KustomizationListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustomizationListOutput)
}

// KustomizationListArrayInput is an input type that accepts KustomizationListArray and KustomizationListArrayOutput values.
// You can construct a concrete instance of `KustomizationListArrayInput` via:
//
//	KustomizationListArray{ KustomizationListArgs{...} }
type KustomizationListArrayInput interface {
	pulumi.Input

	ToKustomizationListArrayOutput() KustomizationListArrayOutput
	ToKustomizationListArrayOutputWithContext(context.Context) KustomizationListArrayOutput
}

type KustomizationListArray []KustomizationListInput

func (KustomizationListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KustomizationList)(nil)).Elem()
}

func (i KustomizationListArray) ToKustomizationListArrayOutput() KustomizationListArrayOutput {
	return i.ToKustomizationListArrayOutputWithContext(context.Background())
}

func (i KustomizationListArray) ToKustomizationListArrayOutputWithContext(ctx context.Context) KustomizationListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustomizationListArrayOutput)
}

// KustomizationListMapInput is an input type that accepts KustomizationListMap and KustomizationListMapOutput values.
// You can construct a concrete instance of `KustomizationListMapInput` via:
//
//	KustomizationListMap{ "key": KustomizationListArgs{...} }
type KustomizationListMapInput interface {
	pulumi.Input

	ToKustomizationListMapOutput() KustomizationListMapOutput
	ToKustomizationListMapOutputWithContext(context.Context) KustomizationListMapOutput
}

type KustomizationListMap map[string]KustomizationListInput

func (KustomizationListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KustomizationList)(nil)).Elem()
}

func (i KustomizationListMap) ToKustomizationListMapOutput() KustomizationListMapOutput {
	return i.ToKustomizationListMapOutputWithContext(context.Background())
}

func (i KustomizationListMap) ToKustomizationListMapOutputWithContext(ctx context.Context) KustomizationListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustomizationListMapOutput)
}

type KustomizationListOutput struct{ *pulumi.OutputState }

func (KustomizationListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KustomizationList)(nil)).Elem()
}

func (o KustomizationListOutput) ToKustomizationListOutput() KustomizationListOutput {
	return o
}

func (o KustomizationListOutput) ToKustomizationListOutputWithContext(ctx context.Context) KustomizationListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o KustomizationListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *KustomizationList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of kustomizations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o KustomizationListOutput) Items() KustomizationTypeArrayOutput {
	return o.ApplyT(func(v *KustomizationList) KustomizationTypeArrayOutput { return v.Items }).(KustomizationTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KustomizationListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *KustomizationList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KustomizationListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *KustomizationList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type KustomizationListArrayOutput struct{ *pulumi.OutputState }

func (KustomizationListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KustomizationList)(nil)).Elem()
}

func (o KustomizationListArrayOutput) ToKustomizationListArrayOutput() KustomizationListArrayOutput {
	return o
}

func (o KustomizationListArrayOutput) ToKustomizationListArrayOutputWithContext(ctx context.Context) KustomizationListArrayOutput {
	return o
}

func (o KustomizationListArrayOutput) Index(i pulumi.IntInput) KustomizationListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KustomizationList {
		return vs[0].([]*KustomizationList)[vs[1].(int)]
	}).(KustomizationListOutput)
}

type KustomizationListMapOutput struct{ *pulumi.OutputState }

func (KustomizationListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KustomizationList)(nil)).Elem()
}

func (o KustomizationListMapOutput) ToKustomizationListMapOutput() KustomizationListMapOutput {
	return o
}

func (o KustomizationListMapOutput) ToKustomizationListMapOutputWithContext(ctx context.Context) KustomizationListMapOutput {
	return o
}

func (o KustomizationListMapOutput) MapIndex(k pulumi.StringInput) KustomizationListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KustomizationList {
		return vs[0].(map[string]*KustomizationList)[vs[1].(string)]
	}).(KustomizationListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KustomizationListInput)(nil)).Elem(), &KustomizationList{})
	pulumi.RegisterInputType(reflect.TypeOf((*KustomizationListArrayInput)(nil)).Elem(), KustomizationListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KustomizationListMapInput)(nil)).Elem(), KustomizationListMap{})
	pulumi.RegisterOutputType(KustomizationListOutput{})
	pulumi.RegisterOutputType(KustomizationListArrayOutput{})
	pulumi.RegisterOutputType(KustomizationListMapOutput{})
}
