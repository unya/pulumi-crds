// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// ImageUpdateAutomation is the Schema for the imageupdateautomations API
type ImageUpdateAutomationPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput           `pulumi:"metadata"`
	Spec     ImageUpdateAutomationSpecPatchPtrOutput   `pulumi:"spec"`
	Status   ImageUpdateAutomationStatusPatchPtrOutput `pulumi:"status"`
}

// NewImageUpdateAutomationPatch registers a new resource with the given unique name, arguments, and options.
func NewImageUpdateAutomationPatch(ctx *pulumi.Context,
	name string, args *ImageUpdateAutomationPatchArgs, opts ...pulumi.ResourceOption) (*ImageUpdateAutomationPatch, error) {
	if args == nil {
		args = &ImageUpdateAutomationPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("image.toolkit.fluxcd.io/v1beta2")
	args.Kind = pulumi.StringPtr("ImageUpdateAutomation")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("kubernetes:image.toolkit.fluxcd.io/v1beta1:ImageUpdateAutomationPatch"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ImageUpdateAutomationPatch
	err := ctx.RegisterResource("kubernetes:image.toolkit.fluxcd.io/v1beta2:ImageUpdateAutomationPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImageUpdateAutomationPatch gets an existing ImageUpdateAutomationPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImageUpdateAutomationPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImageUpdateAutomationPatchState, opts ...pulumi.ResourceOption) (*ImageUpdateAutomationPatch, error) {
	var resource ImageUpdateAutomationPatch
	err := ctx.ReadResource("kubernetes:image.toolkit.fluxcd.io/v1beta2:ImageUpdateAutomationPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ImageUpdateAutomationPatch resources.
type imageUpdateAutomationPatchState struct {
}

type ImageUpdateAutomationPatchState struct {
}

func (ImageUpdateAutomationPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*imageUpdateAutomationPatchState)(nil)).Elem()
}

type imageUpdateAutomationPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch         `pulumi:"metadata"`
	Spec     *ImageUpdateAutomationSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a ImageUpdateAutomationPatch resource.
type ImageUpdateAutomationPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     ImageUpdateAutomationSpecPatchPtrInput
}

func (ImageUpdateAutomationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imageUpdateAutomationPatchArgs)(nil)).Elem()
}

type ImageUpdateAutomationPatchInput interface {
	pulumi.Input

	ToImageUpdateAutomationPatchOutput() ImageUpdateAutomationPatchOutput
	ToImageUpdateAutomationPatchOutputWithContext(ctx context.Context) ImageUpdateAutomationPatchOutput
}

func (*ImageUpdateAutomationPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageUpdateAutomationPatch)(nil)).Elem()
}

func (i *ImageUpdateAutomationPatch) ToImageUpdateAutomationPatchOutput() ImageUpdateAutomationPatchOutput {
	return i.ToImageUpdateAutomationPatchOutputWithContext(context.Background())
}

func (i *ImageUpdateAutomationPatch) ToImageUpdateAutomationPatchOutputWithContext(ctx context.Context) ImageUpdateAutomationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageUpdateAutomationPatchOutput)
}

// ImageUpdateAutomationPatchArrayInput is an input type that accepts ImageUpdateAutomationPatchArray and ImageUpdateAutomationPatchArrayOutput values.
// You can construct a concrete instance of `ImageUpdateAutomationPatchArrayInput` via:
//
//	ImageUpdateAutomationPatchArray{ ImageUpdateAutomationPatchArgs{...} }
type ImageUpdateAutomationPatchArrayInput interface {
	pulumi.Input

	ToImageUpdateAutomationPatchArrayOutput() ImageUpdateAutomationPatchArrayOutput
	ToImageUpdateAutomationPatchArrayOutputWithContext(context.Context) ImageUpdateAutomationPatchArrayOutput
}

type ImageUpdateAutomationPatchArray []ImageUpdateAutomationPatchInput

func (ImageUpdateAutomationPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ImageUpdateAutomationPatch)(nil)).Elem()
}

func (i ImageUpdateAutomationPatchArray) ToImageUpdateAutomationPatchArrayOutput() ImageUpdateAutomationPatchArrayOutput {
	return i.ToImageUpdateAutomationPatchArrayOutputWithContext(context.Background())
}

func (i ImageUpdateAutomationPatchArray) ToImageUpdateAutomationPatchArrayOutputWithContext(ctx context.Context) ImageUpdateAutomationPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageUpdateAutomationPatchArrayOutput)
}

// ImageUpdateAutomationPatchMapInput is an input type that accepts ImageUpdateAutomationPatchMap and ImageUpdateAutomationPatchMapOutput values.
// You can construct a concrete instance of `ImageUpdateAutomationPatchMapInput` via:
//
//	ImageUpdateAutomationPatchMap{ "key": ImageUpdateAutomationPatchArgs{...} }
type ImageUpdateAutomationPatchMapInput interface {
	pulumi.Input

	ToImageUpdateAutomationPatchMapOutput() ImageUpdateAutomationPatchMapOutput
	ToImageUpdateAutomationPatchMapOutputWithContext(context.Context) ImageUpdateAutomationPatchMapOutput
}

type ImageUpdateAutomationPatchMap map[string]ImageUpdateAutomationPatchInput

func (ImageUpdateAutomationPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ImageUpdateAutomationPatch)(nil)).Elem()
}

func (i ImageUpdateAutomationPatchMap) ToImageUpdateAutomationPatchMapOutput() ImageUpdateAutomationPatchMapOutput {
	return i.ToImageUpdateAutomationPatchMapOutputWithContext(context.Background())
}

func (i ImageUpdateAutomationPatchMap) ToImageUpdateAutomationPatchMapOutputWithContext(ctx context.Context) ImageUpdateAutomationPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageUpdateAutomationPatchMapOutput)
}

type ImageUpdateAutomationPatchOutput struct{ *pulumi.OutputState }

func (ImageUpdateAutomationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageUpdateAutomationPatch)(nil)).Elem()
}

func (o ImageUpdateAutomationPatchOutput) ToImageUpdateAutomationPatchOutput() ImageUpdateAutomationPatchOutput {
	return o
}

func (o ImageUpdateAutomationPatchOutput) ToImageUpdateAutomationPatchOutputWithContext(ctx context.Context) ImageUpdateAutomationPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ImageUpdateAutomationPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageUpdateAutomationPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ImageUpdateAutomationPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageUpdateAutomationPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ImageUpdateAutomationPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *ImageUpdateAutomationPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ImageUpdateAutomationPatchOutput) Spec() ImageUpdateAutomationSpecPatchPtrOutput {
	return o.ApplyT(func(v *ImageUpdateAutomationPatch) ImageUpdateAutomationSpecPatchPtrOutput { return v.Spec }).(ImageUpdateAutomationSpecPatchPtrOutput)
}

func (o ImageUpdateAutomationPatchOutput) Status() ImageUpdateAutomationStatusPatchPtrOutput {
	return o.ApplyT(func(v *ImageUpdateAutomationPatch) ImageUpdateAutomationStatusPatchPtrOutput { return v.Status }).(ImageUpdateAutomationStatusPatchPtrOutput)
}

type ImageUpdateAutomationPatchArrayOutput struct{ *pulumi.OutputState }

func (ImageUpdateAutomationPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ImageUpdateAutomationPatch)(nil)).Elem()
}

func (o ImageUpdateAutomationPatchArrayOutput) ToImageUpdateAutomationPatchArrayOutput() ImageUpdateAutomationPatchArrayOutput {
	return o
}

func (o ImageUpdateAutomationPatchArrayOutput) ToImageUpdateAutomationPatchArrayOutputWithContext(ctx context.Context) ImageUpdateAutomationPatchArrayOutput {
	return o
}

func (o ImageUpdateAutomationPatchArrayOutput) Index(i pulumi.IntInput) ImageUpdateAutomationPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ImageUpdateAutomationPatch {
		return vs[0].([]*ImageUpdateAutomationPatch)[vs[1].(int)]
	}).(ImageUpdateAutomationPatchOutput)
}

type ImageUpdateAutomationPatchMapOutput struct{ *pulumi.OutputState }

func (ImageUpdateAutomationPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ImageUpdateAutomationPatch)(nil)).Elem()
}

func (o ImageUpdateAutomationPatchMapOutput) ToImageUpdateAutomationPatchMapOutput() ImageUpdateAutomationPatchMapOutput {
	return o
}

func (o ImageUpdateAutomationPatchMapOutput) ToImageUpdateAutomationPatchMapOutputWithContext(ctx context.Context) ImageUpdateAutomationPatchMapOutput {
	return o
}

func (o ImageUpdateAutomationPatchMapOutput) MapIndex(k pulumi.StringInput) ImageUpdateAutomationPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ImageUpdateAutomationPatch {
		return vs[0].(map[string]*ImageUpdateAutomationPatch)[vs[1].(string)]
	}).(ImageUpdateAutomationPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ImageUpdateAutomationPatchInput)(nil)).Elem(), &ImageUpdateAutomationPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageUpdateAutomationPatchArrayInput)(nil)).Elem(), ImageUpdateAutomationPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageUpdateAutomationPatchMapInput)(nil)).Elem(), ImageUpdateAutomationPatchMap{})
	pulumi.RegisterOutputType(ImageUpdateAutomationPatchOutput{})
	pulumi.RegisterOutputType(ImageUpdateAutomationPatchArrayOutput{})
	pulumi.RegisterOutputType(ImageUpdateAutomationPatchMapOutput{})
}
