// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ImageUpdateAutomation is the Schema for the imageupdateautomations API
type ImageUpdateAutomation struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput              `pulumi:"metadata"`
	Spec     ImageUpdateAutomationSpecOutput      `pulumi:"spec"`
	Status   ImageUpdateAutomationStatusPtrOutput `pulumi:"status"`
}

// NewImageUpdateAutomation registers a new resource with the given unique name, arguments, and options.
func NewImageUpdateAutomation(ctx *pulumi.Context,
	name string, args *ImageUpdateAutomationArgs, opts ...pulumi.ResourceOption) (*ImageUpdateAutomation, error) {
	if args == nil {
		args = &ImageUpdateAutomationArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("image.toolkit.fluxcd.io/v1beta2")
	args.Kind = pulumi.StringPtr("ImageUpdateAutomation")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("kubernetes:image.toolkit.fluxcd.io/v1beta1:ImageUpdateAutomation"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ImageUpdateAutomation
	err := ctx.RegisterResource("kubernetes:image.toolkit.fluxcd.io/v1beta2:ImageUpdateAutomation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImageUpdateAutomation gets an existing ImageUpdateAutomation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImageUpdateAutomation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImageUpdateAutomationState, opts ...pulumi.ResourceOption) (*ImageUpdateAutomation, error) {
	var resource ImageUpdateAutomation
	err := ctx.ReadResource("kubernetes:image.toolkit.fluxcd.io/v1beta2:ImageUpdateAutomation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ImageUpdateAutomation resources.
type imageUpdateAutomationState struct {
}

type ImageUpdateAutomationState struct {
}

func (ImageUpdateAutomationState) ElementType() reflect.Type {
	return reflect.TypeOf((*imageUpdateAutomationState)(nil)).Elem()
}

type imageUpdateAutomationArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta         `pulumi:"metadata"`
	Spec     *ImageUpdateAutomationSpec `pulumi:"spec"`
}

// The set of arguments for constructing a ImageUpdateAutomation resource.
type ImageUpdateAutomationArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     ImageUpdateAutomationSpecPtrInput
}

func (ImageUpdateAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imageUpdateAutomationArgs)(nil)).Elem()
}

type ImageUpdateAutomationInput interface {
	pulumi.Input

	ToImageUpdateAutomationOutput() ImageUpdateAutomationOutput
	ToImageUpdateAutomationOutputWithContext(ctx context.Context) ImageUpdateAutomationOutput
}

func (*ImageUpdateAutomation) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageUpdateAutomation)(nil)).Elem()
}

func (i *ImageUpdateAutomation) ToImageUpdateAutomationOutput() ImageUpdateAutomationOutput {
	return i.ToImageUpdateAutomationOutputWithContext(context.Background())
}

func (i *ImageUpdateAutomation) ToImageUpdateAutomationOutputWithContext(ctx context.Context) ImageUpdateAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageUpdateAutomationOutput)
}

// ImageUpdateAutomationArrayInput is an input type that accepts ImageUpdateAutomationArray and ImageUpdateAutomationArrayOutput values.
// You can construct a concrete instance of `ImageUpdateAutomationArrayInput` via:
//
//	ImageUpdateAutomationArray{ ImageUpdateAutomationArgs{...} }
type ImageUpdateAutomationArrayInput interface {
	pulumi.Input

	ToImageUpdateAutomationArrayOutput() ImageUpdateAutomationArrayOutput
	ToImageUpdateAutomationArrayOutputWithContext(context.Context) ImageUpdateAutomationArrayOutput
}

type ImageUpdateAutomationArray []ImageUpdateAutomationInput

func (ImageUpdateAutomationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ImageUpdateAutomation)(nil)).Elem()
}

func (i ImageUpdateAutomationArray) ToImageUpdateAutomationArrayOutput() ImageUpdateAutomationArrayOutput {
	return i.ToImageUpdateAutomationArrayOutputWithContext(context.Background())
}

func (i ImageUpdateAutomationArray) ToImageUpdateAutomationArrayOutputWithContext(ctx context.Context) ImageUpdateAutomationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageUpdateAutomationArrayOutput)
}

// ImageUpdateAutomationMapInput is an input type that accepts ImageUpdateAutomationMap and ImageUpdateAutomationMapOutput values.
// You can construct a concrete instance of `ImageUpdateAutomationMapInput` via:
//
//	ImageUpdateAutomationMap{ "key": ImageUpdateAutomationArgs{...} }
type ImageUpdateAutomationMapInput interface {
	pulumi.Input

	ToImageUpdateAutomationMapOutput() ImageUpdateAutomationMapOutput
	ToImageUpdateAutomationMapOutputWithContext(context.Context) ImageUpdateAutomationMapOutput
}

type ImageUpdateAutomationMap map[string]ImageUpdateAutomationInput

func (ImageUpdateAutomationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ImageUpdateAutomation)(nil)).Elem()
}

func (i ImageUpdateAutomationMap) ToImageUpdateAutomationMapOutput() ImageUpdateAutomationMapOutput {
	return i.ToImageUpdateAutomationMapOutputWithContext(context.Background())
}

func (i ImageUpdateAutomationMap) ToImageUpdateAutomationMapOutputWithContext(ctx context.Context) ImageUpdateAutomationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageUpdateAutomationMapOutput)
}

type ImageUpdateAutomationOutput struct{ *pulumi.OutputState }

func (ImageUpdateAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageUpdateAutomation)(nil)).Elem()
}

func (o ImageUpdateAutomationOutput) ToImageUpdateAutomationOutput() ImageUpdateAutomationOutput {
	return o
}

func (o ImageUpdateAutomationOutput) ToImageUpdateAutomationOutputWithContext(ctx context.Context) ImageUpdateAutomationOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ImageUpdateAutomationOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageUpdateAutomation) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ImageUpdateAutomationOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageUpdateAutomation) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ImageUpdateAutomationOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *ImageUpdateAutomation) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o ImageUpdateAutomationOutput) Spec() ImageUpdateAutomationSpecOutput {
	return o.ApplyT(func(v *ImageUpdateAutomation) ImageUpdateAutomationSpecOutput { return v.Spec }).(ImageUpdateAutomationSpecOutput)
}

func (o ImageUpdateAutomationOutput) Status() ImageUpdateAutomationStatusPtrOutput {
	return o.ApplyT(func(v *ImageUpdateAutomation) ImageUpdateAutomationStatusPtrOutput { return v.Status }).(ImageUpdateAutomationStatusPtrOutput)
}

type ImageUpdateAutomationArrayOutput struct{ *pulumi.OutputState }

func (ImageUpdateAutomationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ImageUpdateAutomation)(nil)).Elem()
}

func (o ImageUpdateAutomationArrayOutput) ToImageUpdateAutomationArrayOutput() ImageUpdateAutomationArrayOutput {
	return o
}

func (o ImageUpdateAutomationArrayOutput) ToImageUpdateAutomationArrayOutputWithContext(ctx context.Context) ImageUpdateAutomationArrayOutput {
	return o
}

func (o ImageUpdateAutomationArrayOutput) Index(i pulumi.IntInput) ImageUpdateAutomationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ImageUpdateAutomation {
		return vs[0].([]*ImageUpdateAutomation)[vs[1].(int)]
	}).(ImageUpdateAutomationOutput)
}

type ImageUpdateAutomationMapOutput struct{ *pulumi.OutputState }

func (ImageUpdateAutomationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ImageUpdateAutomation)(nil)).Elem()
}

func (o ImageUpdateAutomationMapOutput) ToImageUpdateAutomationMapOutput() ImageUpdateAutomationMapOutput {
	return o
}

func (o ImageUpdateAutomationMapOutput) ToImageUpdateAutomationMapOutputWithContext(ctx context.Context) ImageUpdateAutomationMapOutput {
	return o
}

func (o ImageUpdateAutomationMapOutput) MapIndex(k pulumi.StringInput) ImageUpdateAutomationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ImageUpdateAutomation {
		return vs[0].(map[string]*ImageUpdateAutomation)[vs[1].(string)]
	}).(ImageUpdateAutomationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ImageUpdateAutomationInput)(nil)).Elem(), &ImageUpdateAutomation{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageUpdateAutomationArrayInput)(nil)).Elem(), ImageUpdateAutomationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageUpdateAutomationMapInput)(nil)).Elem(), ImageUpdateAutomationMap{})
	pulumi.RegisterOutputType(ImageUpdateAutomationOutput{})
	pulumi.RegisterOutputType(ImageUpdateAutomationArrayOutput{})
	pulumi.RegisterOutputType(ImageUpdateAutomationMapOutput{})
}
