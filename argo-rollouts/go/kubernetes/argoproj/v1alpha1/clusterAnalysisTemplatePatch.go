// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
type ClusterAnalysisTemplatePatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput           `pulumi:"metadata"`
	Spec     ClusterAnalysisTemplateSpecPatchPtrOutput `pulumi:"spec"`
}

// NewClusterAnalysisTemplatePatch registers a new resource with the given unique name, arguments, and options.
func NewClusterAnalysisTemplatePatch(ctx *pulumi.Context,
	name string, args *ClusterAnalysisTemplatePatchArgs, opts ...pulumi.ResourceOption) (*ClusterAnalysisTemplatePatch, error) {
	if args == nil {
		args = &ClusterAnalysisTemplatePatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("argoproj.io/v1alpha1")
	args.Kind = pulumi.StringPtr("ClusterAnalysisTemplate")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ClusterAnalysisTemplatePatch
	err := ctx.RegisterResource("kubernetes:argoproj.io/v1alpha1:ClusterAnalysisTemplatePatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterAnalysisTemplatePatch gets an existing ClusterAnalysisTemplatePatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterAnalysisTemplatePatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterAnalysisTemplatePatchState, opts ...pulumi.ResourceOption) (*ClusterAnalysisTemplatePatch, error) {
	var resource ClusterAnalysisTemplatePatch
	err := ctx.ReadResource("kubernetes:argoproj.io/v1alpha1:ClusterAnalysisTemplatePatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterAnalysisTemplatePatch resources.
type clusterAnalysisTemplatePatchState struct {
}

type ClusterAnalysisTemplatePatchState struct {
}

func (ClusterAnalysisTemplatePatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterAnalysisTemplatePatchState)(nil)).Elem()
}

type clusterAnalysisTemplatePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch           `pulumi:"metadata"`
	Spec     *ClusterAnalysisTemplateSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a ClusterAnalysisTemplatePatch resource.
type ClusterAnalysisTemplatePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     ClusterAnalysisTemplateSpecPatchPtrInput
}

func (ClusterAnalysisTemplatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterAnalysisTemplatePatchArgs)(nil)).Elem()
}

type ClusterAnalysisTemplatePatchInput interface {
	pulumi.Input

	ToClusterAnalysisTemplatePatchOutput() ClusterAnalysisTemplatePatchOutput
	ToClusterAnalysisTemplatePatchOutputWithContext(ctx context.Context) ClusterAnalysisTemplatePatchOutput
}

func (*ClusterAnalysisTemplatePatch) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAnalysisTemplatePatch)(nil)).Elem()
}

func (i *ClusterAnalysisTemplatePatch) ToClusterAnalysisTemplatePatchOutput() ClusterAnalysisTemplatePatchOutput {
	return i.ToClusterAnalysisTemplatePatchOutputWithContext(context.Background())
}

func (i *ClusterAnalysisTemplatePatch) ToClusterAnalysisTemplatePatchOutputWithContext(ctx context.Context) ClusterAnalysisTemplatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAnalysisTemplatePatchOutput)
}

// ClusterAnalysisTemplatePatchArrayInput is an input type that accepts ClusterAnalysisTemplatePatchArray and ClusterAnalysisTemplatePatchArrayOutput values.
// You can construct a concrete instance of `ClusterAnalysisTemplatePatchArrayInput` via:
//
//	ClusterAnalysisTemplatePatchArray{ ClusterAnalysisTemplatePatchArgs{...} }
type ClusterAnalysisTemplatePatchArrayInput interface {
	pulumi.Input

	ToClusterAnalysisTemplatePatchArrayOutput() ClusterAnalysisTemplatePatchArrayOutput
	ToClusterAnalysisTemplatePatchArrayOutputWithContext(context.Context) ClusterAnalysisTemplatePatchArrayOutput
}

type ClusterAnalysisTemplatePatchArray []ClusterAnalysisTemplatePatchInput

func (ClusterAnalysisTemplatePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterAnalysisTemplatePatch)(nil)).Elem()
}

func (i ClusterAnalysisTemplatePatchArray) ToClusterAnalysisTemplatePatchArrayOutput() ClusterAnalysisTemplatePatchArrayOutput {
	return i.ToClusterAnalysisTemplatePatchArrayOutputWithContext(context.Background())
}

func (i ClusterAnalysisTemplatePatchArray) ToClusterAnalysisTemplatePatchArrayOutputWithContext(ctx context.Context) ClusterAnalysisTemplatePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAnalysisTemplatePatchArrayOutput)
}

// ClusterAnalysisTemplatePatchMapInput is an input type that accepts ClusterAnalysisTemplatePatchMap and ClusterAnalysisTemplatePatchMapOutput values.
// You can construct a concrete instance of `ClusterAnalysisTemplatePatchMapInput` via:
//
//	ClusterAnalysisTemplatePatchMap{ "key": ClusterAnalysisTemplatePatchArgs{...} }
type ClusterAnalysisTemplatePatchMapInput interface {
	pulumi.Input

	ToClusterAnalysisTemplatePatchMapOutput() ClusterAnalysisTemplatePatchMapOutput
	ToClusterAnalysisTemplatePatchMapOutputWithContext(context.Context) ClusterAnalysisTemplatePatchMapOutput
}

type ClusterAnalysisTemplatePatchMap map[string]ClusterAnalysisTemplatePatchInput

func (ClusterAnalysisTemplatePatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterAnalysisTemplatePatch)(nil)).Elem()
}

func (i ClusterAnalysisTemplatePatchMap) ToClusterAnalysisTemplatePatchMapOutput() ClusterAnalysisTemplatePatchMapOutput {
	return i.ToClusterAnalysisTemplatePatchMapOutputWithContext(context.Background())
}

func (i ClusterAnalysisTemplatePatchMap) ToClusterAnalysisTemplatePatchMapOutputWithContext(ctx context.Context) ClusterAnalysisTemplatePatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAnalysisTemplatePatchMapOutput)
}

type ClusterAnalysisTemplatePatchOutput struct{ *pulumi.OutputState }

func (ClusterAnalysisTemplatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAnalysisTemplatePatch)(nil)).Elem()
}

func (o ClusterAnalysisTemplatePatchOutput) ToClusterAnalysisTemplatePatchOutput() ClusterAnalysisTemplatePatchOutput {
	return o
}

func (o ClusterAnalysisTemplatePatchOutput) ToClusterAnalysisTemplatePatchOutputWithContext(ctx context.Context) ClusterAnalysisTemplatePatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ClusterAnalysisTemplatePatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisTemplatePatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterAnalysisTemplatePatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisTemplatePatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClusterAnalysisTemplatePatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisTemplatePatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ClusterAnalysisTemplatePatchOutput) Spec() ClusterAnalysisTemplateSpecPatchPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisTemplatePatch) ClusterAnalysisTemplateSpecPatchPtrOutput { return v.Spec }).(ClusterAnalysisTemplateSpecPatchPtrOutput)
}

type ClusterAnalysisTemplatePatchArrayOutput struct{ *pulumi.OutputState }

func (ClusterAnalysisTemplatePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterAnalysisTemplatePatch)(nil)).Elem()
}

func (o ClusterAnalysisTemplatePatchArrayOutput) ToClusterAnalysisTemplatePatchArrayOutput() ClusterAnalysisTemplatePatchArrayOutput {
	return o
}

func (o ClusterAnalysisTemplatePatchArrayOutput) ToClusterAnalysisTemplatePatchArrayOutputWithContext(ctx context.Context) ClusterAnalysisTemplatePatchArrayOutput {
	return o
}

func (o ClusterAnalysisTemplatePatchArrayOutput) Index(i pulumi.IntInput) ClusterAnalysisTemplatePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClusterAnalysisTemplatePatch {
		return vs[0].([]*ClusterAnalysisTemplatePatch)[vs[1].(int)]
	}).(ClusterAnalysisTemplatePatchOutput)
}

type ClusterAnalysisTemplatePatchMapOutput struct{ *pulumi.OutputState }

func (ClusterAnalysisTemplatePatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterAnalysisTemplatePatch)(nil)).Elem()
}

func (o ClusterAnalysisTemplatePatchMapOutput) ToClusterAnalysisTemplatePatchMapOutput() ClusterAnalysisTemplatePatchMapOutput {
	return o
}

func (o ClusterAnalysisTemplatePatchMapOutput) ToClusterAnalysisTemplatePatchMapOutputWithContext(ctx context.Context) ClusterAnalysisTemplatePatchMapOutput {
	return o
}

func (o ClusterAnalysisTemplatePatchMapOutput) MapIndex(k pulumi.StringInput) ClusterAnalysisTemplatePatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClusterAnalysisTemplatePatch {
		return vs[0].(map[string]*ClusterAnalysisTemplatePatch)[vs[1].(string)]
	}).(ClusterAnalysisTemplatePatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAnalysisTemplatePatchInput)(nil)).Elem(), &ClusterAnalysisTemplatePatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAnalysisTemplatePatchArrayInput)(nil)).Elem(), ClusterAnalysisTemplatePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAnalysisTemplatePatchMapInput)(nil)).Elem(), ClusterAnalysisTemplatePatchMap{})
	pulumi.RegisterOutputType(ClusterAnalysisTemplatePatchOutput{})
	pulumi.RegisterOutputType(ClusterAnalysisTemplatePatchArrayOutput{})
	pulumi.RegisterOutputType(ClusterAnalysisTemplatePatchMapOutput{})
}
