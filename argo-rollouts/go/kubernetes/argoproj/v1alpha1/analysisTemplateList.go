// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AnalysisTemplateList is a list of AnalysisTemplate
type AnalysisTemplateList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of analysistemplates. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items AnalysisTemplateTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewAnalysisTemplateList registers a new resource with the given unique name, arguments, and options.
func NewAnalysisTemplateList(ctx *pulumi.Context,
	name string, args *AnalysisTemplateListArgs, opts ...pulumi.ResourceOption) (*AnalysisTemplateList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("argoproj.io/v1alpha1")
	args.Kind = pulumi.StringPtr("AnalysisTemplateList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AnalysisTemplateList
	err := ctx.RegisterResource("kubernetes:argoproj.io/v1alpha1:AnalysisTemplateList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnalysisTemplateList gets an existing AnalysisTemplateList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnalysisTemplateList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnalysisTemplateListState, opts ...pulumi.ResourceOption) (*AnalysisTemplateList, error) {
	var resource AnalysisTemplateList
	err := ctx.ReadResource("kubernetes:argoproj.io/v1alpha1:AnalysisTemplateList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnalysisTemplateList resources.
type analysisTemplateListState struct {
}

type AnalysisTemplateListState struct {
}

func (AnalysisTemplateListState) ElementType() reflect.Type {
	return reflect.TypeOf((*analysisTemplateListState)(nil)).Elem()
}

type analysisTemplateListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of analysistemplates. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []AnalysisTemplateType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a AnalysisTemplateList resource.
type AnalysisTemplateListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of analysistemplates. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items AnalysisTemplateTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (AnalysisTemplateListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*analysisTemplateListArgs)(nil)).Elem()
}

type AnalysisTemplateListInput interface {
	pulumi.Input

	ToAnalysisTemplateListOutput() AnalysisTemplateListOutput
	ToAnalysisTemplateListOutputWithContext(ctx context.Context) AnalysisTemplateListOutput
}

func (*AnalysisTemplateList) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTemplateList)(nil)).Elem()
}

func (i *AnalysisTemplateList) ToAnalysisTemplateListOutput() AnalysisTemplateListOutput {
	return i.ToAnalysisTemplateListOutputWithContext(context.Background())
}

func (i *AnalysisTemplateList) ToAnalysisTemplateListOutputWithContext(ctx context.Context) AnalysisTemplateListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTemplateListOutput)
}

// AnalysisTemplateListArrayInput is an input type that accepts AnalysisTemplateListArray and AnalysisTemplateListArrayOutput values.
// You can construct a concrete instance of `AnalysisTemplateListArrayInput` via:
//
//	AnalysisTemplateListArray{ AnalysisTemplateListArgs{...} }
type AnalysisTemplateListArrayInput interface {
	pulumi.Input

	ToAnalysisTemplateListArrayOutput() AnalysisTemplateListArrayOutput
	ToAnalysisTemplateListArrayOutputWithContext(context.Context) AnalysisTemplateListArrayOutput
}

type AnalysisTemplateListArray []AnalysisTemplateListInput

func (AnalysisTemplateListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnalysisTemplateList)(nil)).Elem()
}

func (i AnalysisTemplateListArray) ToAnalysisTemplateListArrayOutput() AnalysisTemplateListArrayOutput {
	return i.ToAnalysisTemplateListArrayOutputWithContext(context.Background())
}

func (i AnalysisTemplateListArray) ToAnalysisTemplateListArrayOutputWithContext(ctx context.Context) AnalysisTemplateListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTemplateListArrayOutput)
}

// AnalysisTemplateListMapInput is an input type that accepts AnalysisTemplateListMap and AnalysisTemplateListMapOutput values.
// You can construct a concrete instance of `AnalysisTemplateListMapInput` via:
//
//	AnalysisTemplateListMap{ "key": AnalysisTemplateListArgs{...} }
type AnalysisTemplateListMapInput interface {
	pulumi.Input

	ToAnalysisTemplateListMapOutput() AnalysisTemplateListMapOutput
	ToAnalysisTemplateListMapOutputWithContext(context.Context) AnalysisTemplateListMapOutput
}

type AnalysisTemplateListMap map[string]AnalysisTemplateListInput

func (AnalysisTemplateListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnalysisTemplateList)(nil)).Elem()
}

func (i AnalysisTemplateListMap) ToAnalysisTemplateListMapOutput() AnalysisTemplateListMapOutput {
	return i.ToAnalysisTemplateListMapOutputWithContext(context.Background())
}

func (i AnalysisTemplateListMap) ToAnalysisTemplateListMapOutputWithContext(ctx context.Context) AnalysisTemplateListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTemplateListMapOutput)
}

type AnalysisTemplateListOutput struct{ *pulumi.OutputState }

func (AnalysisTemplateListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTemplateList)(nil)).Elem()
}

func (o AnalysisTemplateListOutput) ToAnalysisTemplateListOutput() AnalysisTemplateListOutput {
	return o
}

func (o AnalysisTemplateListOutput) ToAnalysisTemplateListOutputWithContext(ctx context.Context) AnalysisTemplateListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AnalysisTemplateListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalysisTemplateList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of analysistemplates. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o AnalysisTemplateListOutput) Items() AnalysisTemplateTypeArrayOutput {
	return o.ApplyT(func(v *AnalysisTemplateList) AnalysisTemplateTypeArrayOutput { return v.Items }).(AnalysisTemplateTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AnalysisTemplateListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalysisTemplateList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AnalysisTemplateListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *AnalysisTemplateList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type AnalysisTemplateListArrayOutput struct{ *pulumi.OutputState }

func (AnalysisTemplateListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnalysisTemplateList)(nil)).Elem()
}

func (o AnalysisTemplateListArrayOutput) ToAnalysisTemplateListArrayOutput() AnalysisTemplateListArrayOutput {
	return o
}

func (o AnalysisTemplateListArrayOutput) ToAnalysisTemplateListArrayOutputWithContext(ctx context.Context) AnalysisTemplateListArrayOutput {
	return o
}

func (o AnalysisTemplateListArrayOutput) Index(i pulumi.IntInput) AnalysisTemplateListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AnalysisTemplateList {
		return vs[0].([]*AnalysisTemplateList)[vs[1].(int)]
	}).(AnalysisTemplateListOutput)
}

type AnalysisTemplateListMapOutput struct{ *pulumi.OutputState }

func (AnalysisTemplateListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnalysisTemplateList)(nil)).Elem()
}

func (o AnalysisTemplateListMapOutput) ToAnalysisTemplateListMapOutput() AnalysisTemplateListMapOutput {
	return o
}

func (o AnalysisTemplateListMapOutput) ToAnalysisTemplateListMapOutputWithContext(ctx context.Context) AnalysisTemplateListMapOutput {
	return o
}

func (o AnalysisTemplateListMapOutput) MapIndex(k pulumi.StringInput) AnalysisTemplateListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AnalysisTemplateList {
		return vs[0].(map[string]*AnalysisTemplateList)[vs[1].(string)]
	}).(AnalysisTemplateListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTemplateListInput)(nil)).Elem(), &AnalysisTemplateList{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTemplateListArrayInput)(nil)).Elem(), AnalysisTemplateListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTemplateListMapInput)(nil)).Elem(), AnalysisTemplateListMap{})
	pulumi.RegisterOutputType(AnalysisTemplateListOutput{})
	pulumi.RegisterOutputType(AnalysisTemplateListArrayOutput{})
	pulumi.RegisterOutputType(AnalysisTemplateListMapOutput{})
}
