// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AnalysisTemplate struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput    `pulumi:"metadata"`
	Spec     AnalysisTemplateSpecOutput `pulumi:"spec"`
}

// NewAnalysisTemplate registers a new resource with the given unique name, arguments, and options.
func NewAnalysisTemplate(ctx *pulumi.Context,
	name string, args *AnalysisTemplateArgs, opts ...pulumi.ResourceOption) (*AnalysisTemplate, error) {
	if args == nil {
		args = &AnalysisTemplateArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("argoproj.io/v1alpha1")
	args.Kind = pulumi.StringPtr("AnalysisTemplate")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AnalysisTemplate
	err := ctx.RegisterResource("kubernetes:argoproj.io/v1alpha1:AnalysisTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnalysisTemplate gets an existing AnalysisTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnalysisTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnalysisTemplateState, opts ...pulumi.ResourceOption) (*AnalysisTemplate, error) {
	var resource AnalysisTemplate
	err := ctx.ReadResource("kubernetes:argoproj.io/v1alpha1:AnalysisTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnalysisTemplate resources.
type analysisTemplateState struct {
}

type AnalysisTemplateState struct {
}

func (AnalysisTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*analysisTemplateState)(nil)).Elem()
}

type analysisTemplateArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta    `pulumi:"metadata"`
	Spec     *AnalysisTemplateSpec `pulumi:"spec"`
}

// The set of arguments for constructing a AnalysisTemplate resource.
type AnalysisTemplateArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     AnalysisTemplateSpecPtrInput
}

func (AnalysisTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*analysisTemplateArgs)(nil)).Elem()
}

type AnalysisTemplateInput interface {
	pulumi.Input

	ToAnalysisTemplateOutput() AnalysisTemplateOutput
	ToAnalysisTemplateOutputWithContext(ctx context.Context) AnalysisTemplateOutput
}

func (*AnalysisTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTemplate)(nil)).Elem()
}

func (i *AnalysisTemplate) ToAnalysisTemplateOutput() AnalysisTemplateOutput {
	return i.ToAnalysisTemplateOutputWithContext(context.Background())
}

func (i *AnalysisTemplate) ToAnalysisTemplateOutputWithContext(ctx context.Context) AnalysisTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTemplateOutput)
}

// AnalysisTemplateArrayInput is an input type that accepts AnalysisTemplateArray and AnalysisTemplateArrayOutput values.
// You can construct a concrete instance of `AnalysisTemplateArrayInput` via:
//
//	AnalysisTemplateArray{ AnalysisTemplateArgs{...} }
type AnalysisTemplateArrayInput interface {
	pulumi.Input

	ToAnalysisTemplateArrayOutput() AnalysisTemplateArrayOutput
	ToAnalysisTemplateArrayOutputWithContext(context.Context) AnalysisTemplateArrayOutput
}

type AnalysisTemplateArray []AnalysisTemplateInput

func (AnalysisTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnalysisTemplate)(nil)).Elem()
}

func (i AnalysisTemplateArray) ToAnalysisTemplateArrayOutput() AnalysisTemplateArrayOutput {
	return i.ToAnalysisTemplateArrayOutputWithContext(context.Background())
}

func (i AnalysisTemplateArray) ToAnalysisTemplateArrayOutputWithContext(ctx context.Context) AnalysisTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTemplateArrayOutput)
}

// AnalysisTemplateMapInput is an input type that accepts AnalysisTemplateMap and AnalysisTemplateMapOutput values.
// You can construct a concrete instance of `AnalysisTemplateMapInput` via:
//
//	AnalysisTemplateMap{ "key": AnalysisTemplateArgs{...} }
type AnalysisTemplateMapInput interface {
	pulumi.Input

	ToAnalysisTemplateMapOutput() AnalysisTemplateMapOutput
	ToAnalysisTemplateMapOutputWithContext(context.Context) AnalysisTemplateMapOutput
}

type AnalysisTemplateMap map[string]AnalysisTemplateInput

func (AnalysisTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnalysisTemplate)(nil)).Elem()
}

func (i AnalysisTemplateMap) ToAnalysisTemplateMapOutput() AnalysisTemplateMapOutput {
	return i.ToAnalysisTemplateMapOutputWithContext(context.Background())
}

func (i AnalysisTemplateMap) ToAnalysisTemplateMapOutputWithContext(ctx context.Context) AnalysisTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTemplateMapOutput)
}

type AnalysisTemplateOutput struct{ *pulumi.OutputState }

func (AnalysisTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTemplate)(nil)).Elem()
}

func (o AnalysisTemplateOutput) ToAnalysisTemplateOutput() AnalysisTemplateOutput {
	return o
}

func (o AnalysisTemplateOutput) ToAnalysisTemplateOutputWithContext(ctx context.Context) AnalysisTemplateOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AnalysisTemplateOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalysisTemplate) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AnalysisTemplateOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalysisTemplate) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o AnalysisTemplateOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *AnalysisTemplate) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o AnalysisTemplateOutput) Spec() AnalysisTemplateSpecOutput {
	return o.ApplyT(func(v *AnalysisTemplate) AnalysisTemplateSpecOutput { return v.Spec }).(AnalysisTemplateSpecOutput)
}

type AnalysisTemplateArrayOutput struct{ *pulumi.OutputState }

func (AnalysisTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnalysisTemplate)(nil)).Elem()
}

func (o AnalysisTemplateArrayOutput) ToAnalysisTemplateArrayOutput() AnalysisTemplateArrayOutput {
	return o
}

func (o AnalysisTemplateArrayOutput) ToAnalysisTemplateArrayOutputWithContext(ctx context.Context) AnalysisTemplateArrayOutput {
	return o
}

func (o AnalysisTemplateArrayOutput) Index(i pulumi.IntInput) AnalysisTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AnalysisTemplate {
		return vs[0].([]*AnalysisTemplate)[vs[1].(int)]
	}).(AnalysisTemplateOutput)
}

type AnalysisTemplateMapOutput struct{ *pulumi.OutputState }

func (AnalysisTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnalysisTemplate)(nil)).Elem()
}

func (o AnalysisTemplateMapOutput) ToAnalysisTemplateMapOutput() AnalysisTemplateMapOutput {
	return o
}

func (o AnalysisTemplateMapOutput) ToAnalysisTemplateMapOutputWithContext(ctx context.Context) AnalysisTemplateMapOutput {
	return o
}

func (o AnalysisTemplateMapOutput) MapIndex(k pulumi.StringInput) AnalysisTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AnalysisTemplate {
		return vs[0].(map[string]*AnalysisTemplate)[vs[1].(string)]
	}).(AnalysisTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTemplateInput)(nil)).Elem(), &AnalysisTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTemplateArrayInput)(nil)).Elem(), AnalysisTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTemplateMapInput)(nil)).Elem(), AnalysisTemplateMap{})
	pulumi.RegisterOutputType(AnalysisTemplateOutput{})
	pulumi.RegisterOutputType(AnalysisTemplateArrayOutput{})
	pulumi.RegisterOutputType(AnalysisTemplateMapOutput{})
}
