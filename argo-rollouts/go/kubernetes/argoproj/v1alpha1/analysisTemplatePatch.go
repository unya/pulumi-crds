// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
type AnalysisTemplatePatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput    `pulumi:"metadata"`
	Spec     AnalysisTemplateSpecPatchPtrOutput `pulumi:"spec"`
}

// NewAnalysisTemplatePatch registers a new resource with the given unique name, arguments, and options.
func NewAnalysisTemplatePatch(ctx *pulumi.Context,
	name string, args *AnalysisTemplatePatchArgs, opts ...pulumi.ResourceOption) (*AnalysisTemplatePatch, error) {
	if args == nil {
		args = &AnalysisTemplatePatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("argoproj.io/v1alpha1")
	args.Kind = pulumi.StringPtr("AnalysisTemplate")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AnalysisTemplatePatch
	err := ctx.RegisterResource("kubernetes:argoproj.io/v1alpha1:AnalysisTemplatePatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnalysisTemplatePatch gets an existing AnalysisTemplatePatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnalysisTemplatePatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnalysisTemplatePatchState, opts ...pulumi.ResourceOption) (*AnalysisTemplatePatch, error) {
	var resource AnalysisTemplatePatch
	err := ctx.ReadResource("kubernetes:argoproj.io/v1alpha1:AnalysisTemplatePatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnalysisTemplatePatch resources.
type analysisTemplatePatchState struct {
}

type AnalysisTemplatePatchState struct {
}

func (AnalysisTemplatePatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*analysisTemplatePatchState)(nil)).Elem()
}

type analysisTemplatePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch    `pulumi:"metadata"`
	Spec     *AnalysisTemplateSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a AnalysisTemplatePatch resource.
type AnalysisTemplatePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     AnalysisTemplateSpecPatchPtrInput
}

func (AnalysisTemplatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*analysisTemplatePatchArgs)(nil)).Elem()
}

type AnalysisTemplatePatchInput interface {
	pulumi.Input

	ToAnalysisTemplatePatchOutput() AnalysisTemplatePatchOutput
	ToAnalysisTemplatePatchOutputWithContext(ctx context.Context) AnalysisTemplatePatchOutput
}

func (*AnalysisTemplatePatch) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTemplatePatch)(nil)).Elem()
}

func (i *AnalysisTemplatePatch) ToAnalysisTemplatePatchOutput() AnalysisTemplatePatchOutput {
	return i.ToAnalysisTemplatePatchOutputWithContext(context.Background())
}

func (i *AnalysisTemplatePatch) ToAnalysisTemplatePatchOutputWithContext(ctx context.Context) AnalysisTemplatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTemplatePatchOutput)
}

// AnalysisTemplatePatchArrayInput is an input type that accepts AnalysisTemplatePatchArray and AnalysisTemplatePatchArrayOutput values.
// You can construct a concrete instance of `AnalysisTemplatePatchArrayInput` via:
//
//	AnalysisTemplatePatchArray{ AnalysisTemplatePatchArgs{...} }
type AnalysisTemplatePatchArrayInput interface {
	pulumi.Input

	ToAnalysisTemplatePatchArrayOutput() AnalysisTemplatePatchArrayOutput
	ToAnalysisTemplatePatchArrayOutputWithContext(context.Context) AnalysisTemplatePatchArrayOutput
}

type AnalysisTemplatePatchArray []AnalysisTemplatePatchInput

func (AnalysisTemplatePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnalysisTemplatePatch)(nil)).Elem()
}

func (i AnalysisTemplatePatchArray) ToAnalysisTemplatePatchArrayOutput() AnalysisTemplatePatchArrayOutput {
	return i.ToAnalysisTemplatePatchArrayOutputWithContext(context.Background())
}

func (i AnalysisTemplatePatchArray) ToAnalysisTemplatePatchArrayOutputWithContext(ctx context.Context) AnalysisTemplatePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTemplatePatchArrayOutput)
}

// AnalysisTemplatePatchMapInput is an input type that accepts AnalysisTemplatePatchMap and AnalysisTemplatePatchMapOutput values.
// You can construct a concrete instance of `AnalysisTemplatePatchMapInput` via:
//
//	AnalysisTemplatePatchMap{ "key": AnalysisTemplatePatchArgs{...} }
type AnalysisTemplatePatchMapInput interface {
	pulumi.Input

	ToAnalysisTemplatePatchMapOutput() AnalysisTemplatePatchMapOutput
	ToAnalysisTemplatePatchMapOutputWithContext(context.Context) AnalysisTemplatePatchMapOutput
}

type AnalysisTemplatePatchMap map[string]AnalysisTemplatePatchInput

func (AnalysisTemplatePatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnalysisTemplatePatch)(nil)).Elem()
}

func (i AnalysisTemplatePatchMap) ToAnalysisTemplatePatchMapOutput() AnalysisTemplatePatchMapOutput {
	return i.ToAnalysisTemplatePatchMapOutputWithContext(context.Background())
}

func (i AnalysisTemplatePatchMap) ToAnalysisTemplatePatchMapOutputWithContext(ctx context.Context) AnalysisTemplatePatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTemplatePatchMapOutput)
}

type AnalysisTemplatePatchOutput struct{ *pulumi.OutputState }

func (AnalysisTemplatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTemplatePatch)(nil)).Elem()
}

func (o AnalysisTemplatePatchOutput) ToAnalysisTemplatePatchOutput() AnalysisTemplatePatchOutput {
	return o
}

func (o AnalysisTemplatePatchOutput) ToAnalysisTemplatePatchOutputWithContext(ctx context.Context) AnalysisTemplatePatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AnalysisTemplatePatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTemplatePatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AnalysisTemplatePatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTemplatePatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o AnalysisTemplatePatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *AnalysisTemplatePatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o AnalysisTemplatePatchOutput) Spec() AnalysisTemplateSpecPatchPtrOutput {
	return o.ApplyT(func(v *AnalysisTemplatePatch) AnalysisTemplateSpecPatchPtrOutput { return v.Spec }).(AnalysisTemplateSpecPatchPtrOutput)
}

type AnalysisTemplatePatchArrayOutput struct{ *pulumi.OutputState }

func (AnalysisTemplatePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnalysisTemplatePatch)(nil)).Elem()
}

func (o AnalysisTemplatePatchArrayOutput) ToAnalysisTemplatePatchArrayOutput() AnalysisTemplatePatchArrayOutput {
	return o
}

func (o AnalysisTemplatePatchArrayOutput) ToAnalysisTemplatePatchArrayOutputWithContext(ctx context.Context) AnalysisTemplatePatchArrayOutput {
	return o
}

func (o AnalysisTemplatePatchArrayOutput) Index(i pulumi.IntInput) AnalysisTemplatePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AnalysisTemplatePatch {
		return vs[0].([]*AnalysisTemplatePatch)[vs[1].(int)]
	}).(AnalysisTemplatePatchOutput)
}

type AnalysisTemplatePatchMapOutput struct{ *pulumi.OutputState }

func (AnalysisTemplatePatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnalysisTemplatePatch)(nil)).Elem()
}

func (o AnalysisTemplatePatchMapOutput) ToAnalysisTemplatePatchMapOutput() AnalysisTemplatePatchMapOutput {
	return o
}

func (o AnalysisTemplatePatchMapOutput) ToAnalysisTemplatePatchMapOutputWithContext(ctx context.Context) AnalysisTemplatePatchMapOutput {
	return o
}

func (o AnalysisTemplatePatchMapOutput) MapIndex(k pulumi.StringInput) AnalysisTemplatePatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AnalysisTemplatePatch {
		return vs[0].(map[string]*AnalysisTemplatePatch)[vs[1].(string)]
	}).(AnalysisTemplatePatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTemplatePatchInput)(nil)).Elem(), &AnalysisTemplatePatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTemplatePatchArrayInput)(nil)).Elem(), AnalysisTemplatePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTemplatePatchMapInput)(nil)).Elem(), AnalysisTemplatePatchMap{})
	pulumi.RegisterOutputType(AnalysisTemplatePatchOutput{})
	pulumi.RegisterOutputType(AnalysisTemplatePatchArrayOutput{})
	pulumi.RegisterOutputType(AnalysisTemplatePatchMapOutput{})
}
