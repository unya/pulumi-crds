// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// DNSEndpoint is a contract that a user-specified CRD must implement to be used as a source for external-dns.
// The user-specified CRD should also have the status sub-resource.
type DNSEndpointPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput `pulumi:"metadata"`
	Spec     DNSEndpointSpecPatchPtrOutput   `pulumi:"spec"`
	Status   DNSEndpointStatusPatchPtrOutput `pulumi:"status"`
}

// NewDNSEndpointPatch registers a new resource with the given unique name, arguments, and options.
func NewDNSEndpointPatch(ctx *pulumi.Context,
	name string, args *DNSEndpointPatchArgs, opts ...pulumi.ResourceOption) (*DNSEndpointPatch, error) {
	if args == nil {
		args = &DNSEndpointPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("externaldns.k8s.io/v1alpha1")
	args.Kind = pulumi.StringPtr("DNSEndpoint")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DNSEndpointPatch
	err := ctx.RegisterResource("kubernetes:externaldns.k8s.io/v1alpha1:DNSEndpointPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDNSEndpointPatch gets an existing DNSEndpointPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDNSEndpointPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DNSEndpointPatchState, opts ...pulumi.ResourceOption) (*DNSEndpointPatch, error) {
	var resource DNSEndpointPatch
	err := ctx.ReadResource("kubernetes:externaldns.k8s.io/v1alpha1:DNSEndpointPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DNSEndpointPatch resources.
type dnsendpointPatchState struct {
}

type DNSEndpointPatchState struct {
}

func (DNSEndpointPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsendpointPatchState)(nil)).Elem()
}

type dnsendpointPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *DNSEndpointSpecPatch   `pulumi:"spec"`
}

// The set of arguments for constructing a DNSEndpointPatch resource.
type DNSEndpointPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     DNSEndpointSpecPatchPtrInput
}

func (DNSEndpointPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsendpointPatchArgs)(nil)).Elem()
}

type DNSEndpointPatchInput interface {
	pulumi.Input

	ToDNSEndpointPatchOutput() DNSEndpointPatchOutput
	ToDNSEndpointPatchOutputWithContext(ctx context.Context) DNSEndpointPatchOutput
}

func (*DNSEndpointPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**DNSEndpointPatch)(nil)).Elem()
}

func (i *DNSEndpointPatch) ToDNSEndpointPatchOutput() DNSEndpointPatchOutput {
	return i.ToDNSEndpointPatchOutputWithContext(context.Background())
}

func (i *DNSEndpointPatch) ToDNSEndpointPatchOutputWithContext(ctx context.Context) DNSEndpointPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DNSEndpointPatchOutput)
}

// DNSEndpointPatchArrayInput is an input type that accepts DNSEndpointPatchArray and DNSEndpointPatchArrayOutput values.
// You can construct a concrete instance of `DNSEndpointPatchArrayInput` via:
//
//	DNSEndpointPatchArray{ DNSEndpointPatchArgs{...} }
type DNSEndpointPatchArrayInput interface {
	pulumi.Input

	ToDNSEndpointPatchArrayOutput() DNSEndpointPatchArrayOutput
	ToDNSEndpointPatchArrayOutputWithContext(context.Context) DNSEndpointPatchArrayOutput
}

type DNSEndpointPatchArray []DNSEndpointPatchInput

func (DNSEndpointPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DNSEndpointPatch)(nil)).Elem()
}

func (i DNSEndpointPatchArray) ToDNSEndpointPatchArrayOutput() DNSEndpointPatchArrayOutput {
	return i.ToDNSEndpointPatchArrayOutputWithContext(context.Background())
}

func (i DNSEndpointPatchArray) ToDNSEndpointPatchArrayOutputWithContext(ctx context.Context) DNSEndpointPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DNSEndpointPatchArrayOutput)
}

// DNSEndpointPatchMapInput is an input type that accepts DNSEndpointPatchMap and DNSEndpointPatchMapOutput values.
// You can construct a concrete instance of `DNSEndpointPatchMapInput` via:
//
//	DNSEndpointPatchMap{ "key": DNSEndpointPatchArgs{...} }
type DNSEndpointPatchMapInput interface {
	pulumi.Input

	ToDNSEndpointPatchMapOutput() DNSEndpointPatchMapOutput
	ToDNSEndpointPatchMapOutputWithContext(context.Context) DNSEndpointPatchMapOutput
}

type DNSEndpointPatchMap map[string]DNSEndpointPatchInput

func (DNSEndpointPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DNSEndpointPatch)(nil)).Elem()
}

func (i DNSEndpointPatchMap) ToDNSEndpointPatchMapOutput() DNSEndpointPatchMapOutput {
	return i.ToDNSEndpointPatchMapOutputWithContext(context.Background())
}

func (i DNSEndpointPatchMap) ToDNSEndpointPatchMapOutputWithContext(ctx context.Context) DNSEndpointPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DNSEndpointPatchMapOutput)
}

type DNSEndpointPatchOutput struct{ *pulumi.OutputState }

func (DNSEndpointPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DNSEndpointPatch)(nil)).Elem()
}

func (o DNSEndpointPatchOutput) ToDNSEndpointPatchOutput() DNSEndpointPatchOutput {
	return o
}

func (o DNSEndpointPatchOutput) ToDNSEndpointPatchOutputWithContext(ctx context.Context) DNSEndpointPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o DNSEndpointPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DNSEndpointPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o DNSEndpointPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DNSEndpointPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o DNSEndpointPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *DNSEndpointPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o DNSEndpointPatchOutput) Spec() DNSEndpointSpecPatchPtrOutput {
	return o.ApplyT(func(v *DNSEndpointPatch) DNSEndpointSpecPatchPtrOutput { return v.Spec }).(DNSEndpointSpecPatchPtrOutput)
}

func (o DNSEndpointPatchOutput) Status() DNSEndpointStatusPatchPtrOutput {
	return o.ApplyT(func(v *DNSEndpointPatch) DNSEndpointStatusPatchPtrOutput { return v.Status }).(DNSEndpointStatusPatchPtrOutput)
}

type DNSEndpointPatchArrayOutput struct{ *pulumi.OutputState }

func (DNSEndpointPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DNSEndpointPatch)(nil)).Elem()
}

func (o DNSEndpointPatchArrayOutput) ToDNSEndpointPatchArrayOutput() DNSEndpointPatchArrayOutput {
	return o
}

func (o DNSEndpointPatchArrayOutput) ToDNSEndpointPatchArrayOutputWithContext(ctx context.Context) DNSEndpointPatchArrayOutput {
	return o
}

func (o DNSEndpointPatchArrayOutput) Index(i pulumi.IntInput) DNSEndpointPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DNSEndpointPatch {
		return vs[0].([]*DNSEndpointPatch)[vs[1].(int)]
	}).(DNSEndpointPatchOutput)
}

type DNSEndpointPatchMapOutput struct{ *pulumi.OutputState }

func (DNSEndpointPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DNSEndpointPatch)(nil)).Elem()
}

func (o DNSEndpointPatchMapOutput) ToDNSEndpointPatchMapOutput() DNSEndpointPatchMapOutput {
	return o
}

func (o DNSEndpointPatchMapOutput) ToDNSEndpointPatchMapOutputWithContext(ctx context.Context) DNSEndpointPatchMapOutput {
	return o
}

func (o DNSEndpointPatchMapOutput) MapIndex(k pulumi.StringInput) DNSEndpointPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DNSEndpointPatch {
		return vs[0].(map[string]*DNSEndpointPatch)[vs[1].(string)]
	}).(DNSEndpointPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DNSEndpointPatchInput)(nil)).Elem(), &DNSEndpointPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*DNSEndpointPatchArrayInput)(nil)).Elem(), DNSEndpointPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DNSEndpointPatchMapInput)(nil)).Elem(), DNSEndpointPatchMap{})
	pulumi.RegisterOutputType(DNSEndpointPatchOutput{})
	pulumi.RegisterOutputType(DNSEndpointPatchArrayOutput{})
	pulumi.RegisterOutputType(DNSEndpointPatchMapOutput{})
}
